var Pb=Object.defineProperty;var T=(E,A)=>Pb(E,"name",{value:A,configurable:!0});import{i as U,B as Vx,I as _b,r as vx,M as t,f as Ve,g as UR,a as le,b as a0,c as RE,d as y,e as zA,t as Bn,h as aR,j as LR,k as Jt,l as OL,m as je,N as $e,n as gt,o as Hb,p as BM,q as IE,s as L0,u as sA,v as An,w as tO,x as To,P as vA,y as xe,z as Ns,A as GO,C as ko,D as N1,E as db,F as va,G as T1,R as fb,H as r0,J as Bb,K as gb,L as gM,O as qo,Q as Sa,S as AO,T as jo,U as N0,V as xx,W as S1,X as zo,Y as En,Z as Kb,_ as rr,$ as T0,a0 as sn,a1 as bx,a2 as Fb,a3 as kx,a4 as mb,a5 as Wb,a6 as Yb,a7 as pb,a8 as yb,a9 as fV,aa as wb,ab as Vb,ac as vb,ad as xb,ae as Xt,af as bb,ag as BV,ah as uo,ai as kb,aj as Zb,ak as Xb,al as Zx,am as Qb,an as Jb}from"./index-Cu5btC_g.js";const el=Object.freeze(Object.defineProperty({__proto__:null,get AddPokeballModifier(){return _C},get AddVoucherModifier(){return HC},get AttackTypeBoosterModifier(){return an},get BaseStatModifier(){return sS},get BerryModifier(){return _E},get BoostBugSpawnModifier(){return cS},get BypassSpeedChanceModifier(){return Xi},get ConsumableModifier(){return mI},get ConsumablePokemonModifier(){return hR},get ConsumablePokemonMoveModifier(){return rS},get ContactHeldItemTransferChanceModifier(){return ta},get CritBoosterModifier(){return fL},get DamageMoneyRewardModifier(){return Yn},get DoubleBattleChanceBoosterModifier(){return cL},get EnemyAttackStatusEffectChanceModifier(){return mL},get EnemyDamageBoosterModifier(){return PS},get EnemyDamageReducerModifier(){return _S},get EnemyEndureChanceModifier(){return fS},get EnemyFusionChanceModifier(){return BS},get EnemyPersistentModifier(){return rn},get EnemyStatusEffectHealChanceModifier(){return dS},get EnemyTurnHealModifier(){return HS},get EvoTrackerModifier(){return RS},get EvolutionItemModifier(){return mC},get EvolutionStatBoosterModifier(){return IS},get ExpBalanceModifier(){return US},get ExpBoosterModifier(){return KL},get ExpShareModifier(){return CS},get ExtraModifierModifier(){return yn},get FlinchChanceModifier(){return LS},get FusePokemonModifier(){return SS},get GigantamaxAccessModifier(){return _L},get HealShopCostModifier(){return yI},get HealingBoosterModifier(){return qi},get HeldItemTransferModifier(){return GS},get HiddenAbilityRateBoosterModifier(){return pn},get HitHealModifier(){return Ji},get IvScannerModifier(){return Aa},get LapsingPersistentModifier(){return WI},get LapsingPokemonHeldItemModifier(){return HL},get LevelIncrementBoosterModifier(){return YI},get LockModifierTiersModifier(){return hS},get MapModifier(){return AS},get MegaEvolutionAccessModifier(){return PL},get Modifier(){return eS},get ModifierBar(){return zT},get MoneyInterestModifier(){return uS},get MoneyMultiplierModifier(){return cR},get MoneyRewardModifier(){return WC},get MultipleParticipantExpBonusModifier(){return oS},get PersistentModifier(){return FA},get PokemonAllMovePpRestoreModifier(){return BC},get PokemonBaseStatFlatModifier(){return nS},get PokemonBaseStatTotalModifier(){return OS},get PokemonExpBoosterModifier(){return lS},get PokemonFormChangeItemModifier(){return AR},get PokemonFriendshipBoosterModifier(){return FL},get PokemonHeldItemModifier(){return at},get PokemonHpRestoreModifier(){return pI},get PokemonIncrementingStatModifier(){return ki},get PokemonInstantReviveModifier(){return BL},get PokemonLevelIncrementModifier(){return NS},get PokemonMoveAccuracyBoosterModifier(){return MS},get PokemonMultiHitModifier(){return ji},get PokemonNatureChangeModifier(){return KC},get PokemonNatureWeightModifier(){return DS},get PokemonPpRestoreModifier(){return fC},get PokemonPpUpModifier(){return gC},get PokemonStatusHealModifier(){return dC},get PreserveBerryModifier(){return $i},get RememberMoveModifier(){return TS},get ResetNegativeStatStageModifier(){return gL},get ShinyRateBoosterModifier(){return zi},get SpeciesCritBoosterModifier(){return iS},get SpeciesStatBoosterModifier(){return Zi},get StatBoosterModifier(){return dL},get SurviveDamageModifier(){return aS},get SwitchEffectTransferModifier(){return _I},get TempCritBoosterModifier(){return tS},get TempExtraModifierModifier(){return wn},get TempStatStageBoosterModifier(){return GL},get TerastallizeAccessModifier(){return ES},get TerastallizeModifier(){return zs},get TmModifier(){return FC},get TurnHealModifier(){return Qi},get TurnHeldItemTransferModifier(){return ea},get TurnStatusEffectModifier(){return nn},get modifierSortFunc(){return jT},get overrideHeldItems(){return W1},get overrideModifiers(){return m1}},Symbol.toStringTag,{value:"Module"}));var Un=(E=>(E[E.MOVE=0]="MOVE",E[E.LEGENDARY=1]="LEGENDARY",E[E.SHINY=2]="SHINY",E))(Un||{}),n=(E=>(E[E.UNKNOWN=-1]="UNKNOWN",E[E.NORMAL=0]="NORMAL",E[E.FIGHTING=1]="FIGHTING",E[E.FLYING=2]="FLYING",E[E.POISON=3]="POISON",E[E.GROUND=4]="GROUND",E[E.ROCK=5]="ROCK",E[E.BUG=6]="BUG",E[E.GHOST=7]="GHOST",E[E.STEEL=8]="STEEL",E[E.FIRE=9]="FIRE",E[E.WATER=10]="WATER",E[E.GRASS=11]="GRASS",E[E.ELECTRIC=12]="ELECTRIC",E[E.PSYCHIC=13]="PSYCHIC",E[E.ICE=14]="ICE",E[E.DRAGON=15]="DRAGON",E[E.DARK=16]="DARK",E[E.FAIRY=17]="FAIRY",E[E.STELLAR=18]="STELLAR",E))(n||{});function tl(E,A){if(E===-1||A===-1)return 1;switch(A){case 0:switch(E){case 1:return 2;case 7:return 0;default:return 1}case 1:switch(E){case 2:case 13:case 17:return 2;case 5:case 6:case 16:return .5;default:return 1}case 2:switch(E){case 5:case 12:case 14:return 2;case 1:case 6:case 11:return .5;case 4:return 0;default:return 1}case 3:switch(E){case 4:case 13:return 2;case 1:case 3:case 6:case 11:case 17:return .5;default:return 1}case 4:switch(E){case 10:case 11:case 14:return 2;case 3:case 5:return .5;case 12:return 0;default:return 1}case 5:switch(E){case 1:case 4:case 8:case 10:case 11:return 2;case 0:case 2:case 3:case 9:return .5;default:return 1}case 6:switch(E){case 2:case 5:case 9:return 2;case 1:case 4:case 11:return .5;default:return 1}case 7:switch(E){case 7:case 16:return 2;case 3:case 6:return .5;case 0:case 1:return 0;default:return 1}case 8:switch(E){case 1:case 4:case 9:return 2;case 0:case 2:case 5:case 6:case 8:case 11:case 13:case 14:case 15:case 17:return .5;case 3:return 0;default:return 1}case 9:switch(E){case 4:case 5:case 10:return 2;case 6:case 8:case 9:case 11:case 14:case 17:return .5;default:return 1}case 10:switch(E){case 11:case 12:return 2;case 8:case 9:case 10:case 14:return .5;default:return 1}case 11:switch(E){case 2:case 3:case 6:case 9:case 14:return 2;case 4:case 10:case 11:case 12:return .5;default:return 1}case 12:switch(E){case 4:return 2;case 2:case 8:case 12:return .5;default:return 1}case 13:switch(E){case 6:case 7:case 16:return 2;case 1:case 13:return .5;default:return 1}case 14:switch(E){case 1:case 5:case 8:case 9:return 2;case 14:return .5;default:return 1}case 15:switch(E){case 14:case 15:case 17:return 2;case 9:case 10:case 11:case 12:return .5;default:return 1}case 16:switch(E){case 1:case 6:case 17:return 2;case 7:case 16:return .5;case 13:return 0;default:return 1}case 17:switch(E){case 3:case 8:return 2;case 1:case 6:case 16:return .5;case 15:return 0;default:return 1}case 18:return 1}return 1}T(tl,"getTypeDamageMultiplier");function $b(E,A){switch(E){case 0:return"#929292";case .125:return"#FF5500";case .25:return"#FF7400";case .5:return"#FE8E00";case 1:return;case 2:return"#4AA500";case 4:return"#4BB400";case 8:return"#52C200"}}T($b,"getTypeDamageMultiplierColor");function DR(E){switch(E){case 0:return[168,168,120];case 1:return[192,48,40];case 2:return[168,144,240];case 3:return[160,64,160];case 4:return[224,192,104];case 5:return[184,160,56];case 6:return[168,184,32];case 7:return[112,88,152];case 8:return[184,184,208];case 9:return[240,128,48];case 10:return[104,144,240];case 11:return[120,200,80];case 12:return[248,208,48];case 13:return[248,88,136];case 14:return[152,216,216];case 15:return[112,56,248];case 16:return[112,88,72];case 17:return[232,136,200];case 18:return[255,255,255];default:return[0,0,0]}}T(DR,"getTypeRgb");var ye=(E=>(E[E.GENDERLESS=-1]="GENDERLESS",E[E.MALE=0]="MALE",E[E.FEMALE=1]="FEMALE",E))(ye||{});function $L(E){switch(E){case 0:return"♂";case 1:return"♀"}return""}T($L,"getGenderSymbol");function gn(E,A){switch(E){case 0:return A?"#006090":"#40c8f8";case 1:return A?"#984038":"#f89890"}return"#ffffff"}T(gn,"getGenderColor");var ge=(E=>(E[E.POKEBALL=0]="POKEBALL",E[E.GREAT_BALL=1]="GREAT_BALL",E[E.ULTRA_BALL=2]="ULTRA_BALL",E[E.ROGUE_BALL=3]="ROGUE_BALL",E[E.MASTER_BALL=4]="MASTER_BALL",E[E.LUXURY_BALL=5]="LUXURY_BALL",E))(ge||{});const Xx=99;function OO(E){switch(E){case ge.POKEBALL:return"pb";case ge.GREAT_BALL:return"gb";case ge.ULTRA_BALL:return"ub";case ge.ROGUE_BALL:return"rb";case ge.MASTER_BALL:return"mb";case ge.LUXURY_BALL:return"lb"}}T(OO,"getPokeballAtlasKey");function Al(E){let A;switch(E){case ge.POKEBALL:A=U.t("pokeball:pokeBall");break;case ge.GREAT_BALL:A=U.t("pokeball:greatBall");break;case ge.ULTRA_BALL:A=U.t("pokeball:ultraBall");break;case ge.ROGUE_BALL:A=U.t("pokeball:rogueBall");break;case ge.MASTER_BALL:A=U.t("pokeball:masterBall");break;case ge.LUXURY_BALL:A=U.t("pokeball:luxuryBall");break}return A}T(Al,"getPokeballName");function El(E){switch(E){case ge.POKEBALL:return 1;case ge.GREAT_BALL:return 1.5;case ge.ULTRA_BALL:return 2;case ge.ROGUE_BALL:return 3;case ge.MASTER_BALL:return-1;case ge.LUXURY_BALL:return 1}}T(El,"getPokeballCatchMultiplier");function FO(E){switch(E){case ge.POKEBALL:return 13969705;case ge.GREAT_BALL:return 9745630;case ge.ULTRA_BALL:return 15125809;case ge.ROGUE_BALL:return 13969705;case ge.MASTER_BALL:return 10764733;case ge.LUXURY_BALL:return 16768618}}T(FO,"getPokeballTintColor");function Qx(E,A,s,R,I,i){let a=1,L=s,S=R;const o=R-s,l=T(()=>{E.tweens.add({targets:A,y:R,duration:a*I,ease:"Cubic.easeIn",onComplete:T(()=>{E.playSound("se/pb_bounce_1",{volume:a}),a=a>.01?a*.5:0,a?(L=o*a,S=R-L,E.tweens.add({targets:A,y:S,duration:a*I,ease:"Cubic.easeOut",onComplete:T(()=>l(),"onComplete")})):i&&i()},"onComplete")})},"doBounce");l()}T(Qx,"doPokeballBounceAnim");var r=(E=>(E[E.TOWN=0]="TOWN",E[E.PLAINS=1]="PLAINS",E[E.GRASS=2]="GRASS",E[E.TALL_GRASS=3]="TALL_GRASS",E[E.METROPOLIS=4]="METROPOLIS",E[E.FOREST=5]="FOREST",E[E.SEA=6]="SEA",E[E.SWAMP=7]="SWAMP",E[E.BEACH=8]="BEACH",E[E.LAKE=9]="LAKE",E[E.SEABED=10]="SEABED",E[E.MOUNTAIN=11]="MOUNTAIN",E[E.BADLANDS=12]="BADLANDS",E[E.CAVE=13]="CAVE",E[E.DESERT=14]="DESERT",E[E.ICE_CAVE=15]="ICE_CAVE",E[E.MEADOW=16]="MEADOW",E[E.POWER_PLANT=17]="POWER_PLANT",E[E.VOLCANO=18]="VOLCANO",E[E.GRAVEYARD=19]="GRAVEYARD",E[E.DOJO=20]="DOJO",E[E.FACTORY=21]="FACTORY",E[E.RUINS=22]="RUINS",E[E.WASTELAND=23]="WASTELAND",E[E.ABYSS=24]="ABYSS",E[E.SPACE=25]="SPACE",E[E.CONSTRUCTION_SITE=26]="CONSTRUCTION_SITE",E[E.JUNGLE=27]="JUNGLE",E[E.FAIRY_CAVE=28]="FAIRY_CAVE",E[E.TEMPLE=29]="TEMPLE",E[E.SLUM=30]="SLUM",E[E.SNOWY_FOREST=31]="SNOWY_FOREST",E[E.ISLAND=40]="ISLAND",E[E.LABORATORY=41]="LABORATORY",E[E.END=50]="END",E))(r||{}),Q=(E=>(E[E.NONE=0]="NONE",E[E.SUNNY=1]="SUNNY",E[E.RAIN=2]="RAIN",E[E.SANDSTORM=3]="SANDSTORM",E[E.HAIL=4]="HAIL",E[E.SNOW=5]="SNOW",E[E.FOG=6]="FOG",E[E.HEAVY_RAIN=7]="HEAVY_RAIN",E[E.HARSH_SUN=8]="HARSH_SUN",E[E.STRONG_WINDS=9]="STRONG_WINDS",E))(Q||{}),eE=(E=>(E[E.DEFAULT=0]="DEFAULT",E[E.FINAL_BOSS=1]="FINAL_BOSS",E))(eE||{});function b(E){if(!E)return"Missigno";switch(E.scene.currentBattle.battleSpec){case eE.DEFAULT:return E.isPlayer()?E.getNameToRender():E.hasTrainer()?U.t("battle:foePokemonWithAffix",{pokemonName:E.getNameToRender()}):U.t("battle:wildPokemonWithAffix",{pokemonName:E.getNameToRender()});case eE.FINAL_BOSS:return E.isPlayer()?E.getNameToRender():U.t("battle:foePokemonWithAffix",{pokemonName:E.getNameToRender()});default:return E.getNameToRender()}}T(b,"getPokemonNameWithAffix");var cO=(E=>(E[E.STANDARD=0]="STANDARD",E[E.RARE=1]="RARE",E[E.EPIC=2]="EPIC",E))(cO||{});const Ys={},ii={};function GE(E){switch(E){case 0:return 16302112;case 1:return 2160880;case 2:return 15208520}}T(GE,"getVariantTint");function Qn(E){switch(E){case 0:return cO.STANDARD;case 1:return cO.RARE;case 2:return cO.EPIC}}T(Qn,"getVariantIcon");var h=(E=>(E[E.ERRATIC=0]="ERRATIC",E[E.FAST=1]="FAST",E[E.MEDIUM_FAST=2]="MEDIUM_FAST",E[E.MEDIUM_SLOW=3]="MEDIUM_SLOW",E[E.SLOW=4]="SLOW",E[E.FLUCTUATING=5]="FLUCTUATING",E))(h||{});const qb=[[0,15,52,122,237,406,637,942,1326,1800,2369,3041,3822,4719,5737,6881,8155,9564,11111,12800,14632,16610,18737,21012,23437,26012,28737,31610,34632,37800,41111,44564,48155,51881,55737,59719,63822,68041,72369,76800,81326,85942,90637,95406,100237,105122,110052,115015,120001,125e3,131324,137795,144410,151165,158056,165079,172229,179503,186894,194400,202013,209728,217540,225443,233431,241496,249633,257834,267406,276458,286328,296358,305767,316074,326531,336255,346965,357812,367807,378880,390077,400293,411686,423190,433572,445239,457001,467489,479378,491346,501878,513934,526049,536557,548720,560922,571333,583539,591882,6e5],[0,6,21,51,100,172,274,409,583,800,1064,1382,1757,2195,2700,3276,3930,4665,5487,6400,7408,8518,9733,11059,12500,14060,15746,17561,19511,21600,23832,26214,28749,31443,34300,37324,40522,43897,47455,51200,55136,59270,63605,68147,72900,77868,83058,88473,94119,1e5,106120,112486,119101,125971,133100,140492,148154,156089,164303,172800,181584,190662,200037,209715,219700,229996,240610,251545,262807,274400,286328,298598,311213,324179,337500,351180,365226,379641,394431,409600,425152,441094,457429,474163,491300,508844,526802,545177,563975,583200,602856,622950,643485,664467,685900,707788,730138,752953,776239,8e5],[0,8,27,64,125,216,343,512,729,1e3,1331,1728,2197,2744,3375,4096,4913,5832,6859,8e3,9261,10648,12167,13824,15625,17576,19683,21952,24389,27e3,29791,32768,35937,39304,42875,46656,50653,54872,59319,64e3,68921,74088,79507,85184,91125,97336,103823,110592,117649,125e3,132651,140608,148877,157464,166375,175616,185193,195112,205379,216e3,226981,238328,250047,262144,274625,287496,300763,314432,328509,343e3,357911,373248,389017,405224,421875,438976,456533,474552,493039,512e3,531441,551368,571787,592704,614125,636056,658503,681472,704969,729e3,753571,778688,804357,830584,857375,884736,912673,941192,970299,1e6],[0,9,57,96,135,179,236,314,419,560,742,973,1261,1612,2035,2535,3120,3798,4575,5460,6458,7577,8825,10208,11735,13411,15244,17242,19411,21760,24294,27021,29949,33084,36435,40007,43808,47846,52127,56660,61450,66505,71833,77440,83335,89523,96012,102810,109923,117360,125126,133229,141677,150476,159635,169159,179056,189334,199999,211060,222522,234393,246681,259392,272535,286115,300140,314618,329555,344960,360838,377197,394045,411388,429235,447591,466464,485862,505791,526260,547274,568841,590969,613664,636935,660787,685228,710266,735907,762160,789030,816525,844653,873420,902835,932903,963632,995030,1027103,1059860],[0,10,33,80,156,270,428,640,911,1250,1663,2160,2746,3430,4218,5120,6141,7290,8573,1e4,11576,13310,15208,17280,19531,21970,24603,27440,30486,33750,37238,40960,44921,49130,53593,58320,63316,68590,74148,8e4,86151,92610,99383,106480,113906,121670,129778,138240,147061,156250,165813,175760,186096,196830,207968,219520,231491,243890,256723,27e4,283726,297910,312558,327680,343281,359370,375953,393040,410636,428750,447388,466560,486271,506530,527343,548720,570666,593190,616298,64e4,664301,689210,714733,740880,767656,795070,823128,851840,881211,911250,941963,973360,1005446,1038230,1071718,1105920,1140841,1176490,1212873,125e4],[0,4,13,32,65,112,178,276,393,540,745,967,1230,1591,1957,2457,3046,3732,4526,5440,6482,7666,9003,10506,12187,14060,16140,18439,20974,23760,26811,30146,33780,37731,42017,46656,50653,55969,60505,66560,71677,78533,84277,91998,98415,107069,114205,123863,131766,142500,151222,163105,172697,185807,196322,210739,222231,238036,250562,267840,281456,300293,315059,335544,351520,373744,390991,415050,433631,459620,479600,507617,529063,559209,582187,614566,639146,673863,700115,737280,765275,804997,834809,877201,908905,954084,987754,1035837,1071552,1122660,1160499,1214753,1254796,1312322,1354652,1415577,1460276,1524731,1571884,164e4]];function WR(E,A){if(E<100){const R=qb[A][E-1];return A!==2?Math.floor(R*.325+WR(E,2)*.675):R}let s;switch(A){case 0:s=(Math.pow(E,4)+Math.pow(E,3)*2e3)/3500;break;case 1:s=Math.pow(E,3)*4/5;break;case 2:s=Math.pow(E,3);break;case 3:s=Math.pow(E,3)*6/5-15*Math.pow(E,2)+100*E-140;break;case 4:s=Math.pow(E,3)*5/4;break;case 5:s=Math.pow(E,3)*(E/2+8)*4/(100+E);break}return Math.floor(A!==2?s*.325+WR(E,2)*.675:s)}T(WR,"getLevelTotalExp");function Jx(E,A){return WR(E,A)-WR(E-1,A)}T(Jx,"getLevelRelExp");function gV(E,A){switch(E){case 0:return A?"#906060":"#f85888";case 1:return A?"#b8a038":"#f8d030";case 2:return A?"#588040":"#78c850";case 3:return A?"#807870":"#6890f0";case 4:return A?"#c03028":"#f08030";case 5:return A?"#483850":"#a040a0"}}T(gV,"getGrowthRateColor");var f=(E=>(E[E.COMMON=0]="COMMON",E[E.RARE=1]="RARE",E[E.EPIC=2]="EPIC",E[E.LEGENDARY=3]="LEGENDARY",E))(f||{}),bR=(E=>(E[E.DEFAULT=0]="DEFAULT",E[E.LEGACY=1]="LEGACY",E))(bR||{}),W=(E=>(E[E.COMMON=0]="COMMON",E[E.GREAT=1]="GREAT",E[E.ULTRA=2]="ULTRA",E[E.ROGUE=3]="ROGUE",E[E.MASTER=4]="MASTER",E[E.LUXURY=5]="LUXURY",E))(W||{}),V=(E=>(E[E.MESSAGE=0]="MESSAGE",E[E.WINDOW=1]="WINDOW",E[E.WINDOW_ALT=2]="WINDOW_ALT",E[E.BATTLE_INFO=3]="BATTLE_INFO",E[E.PARTY=4]="PARTY",E[E.PARTY_RED=5]="PARTY_RED",E[E.SUMMARY=6]="SUMMARY",E[E.SUMMARY_ALT=7]="SUMMARY_ALT",E[E.SUMMARY_RED=8]="SUMMARY_RED",E[E.SUMMARY_BLUE=9]="SUMMARY_BLUE",E[E.SUMMARY_PINK=10]="SUMMARY_PINK",E[E.SUMMARY_GOLD=11]="SUMMARY_GOLD",E[E.SUMMARY_GRAY=12]="SUMMARY_GRAY",E[E.SUMMARY_GREEN=13]="SUMMARY_GREEN",E[E.MONEY=14]="MONEY",E[E.STATS_LABEL=15]="STATS_LABEL",E[E.STATS_VALUE=16]="STATS_VALUE",E[E.SETTINGS_VALUE=17]="SETTINGS_VALUE",E[E.SETTINGS_LABEL=18]="SETTINGS_LABEL",E[E.SETTINGS_SELECTED=19]="SETTINGS_SELECTED",E[E.SETTINGS_LOCKED=20]="SETTINGS_LOCKED",E[E.TOOLTIP_TITLE=21]="TOOLTIP_TITLE",E[E.TOOLTIP_CONTENT=22]="TOOLTIP_CONTENT",E[E.MOVE_INFO_CONTENT=23]="MOVE_INFO_CONTENT",E[E.MOVE_PP_FULL=24]="MOVE_PP_FULL",E[E.MOVE_PP_HALF_FULL=25]="MOVE_PP_HALF_FULL",E[E.MOVE_PP_NEAR_EMPTY=26]="MOVE_PP_NEAR_EMPTY",E[E.MOVE_PP_EMPTY=27]="MOVE_PP_EMPTY",E[E.SMALLER_WINDOW_ALT=28]="SMALLER_WINDOW_ALT",E[E.BGM_BAR=29]="BGM_BAR",E[E.PERFECT_IV=30]="PERFECT_IV",E))(V||{});function se(E,A,s,R,I,i){const{scale:a,styleOptions:L,shadowColor:S,shadowXpos:o,shadowYpos:l}=Sn(I,E.uiTheme,i),D=E.add.text(A,s,R,L);return D.setScale(a),D.setShadow(o,l,S),L.lineSpacing||D.setLineSpacing(a*30),D.lineSpacing<12&&U.resolvedLanguage==="ja"&&D.setLineSpacing(D.lineSpacing+35),D}T(se,"addTextObject");function jb(E,A,s,R){const{scale:I,styleOptions:i,shadowColor:a,shadowXpos:L,shadowYpos:S}=Sn(s,A.uiTheme,R);E.setScale(I),E.setShadow(L,S,a),i.lineSpacing||E.setLineSpacing(I*30),E.lineSpacing<12&&U.resolvedLanguage==="ja"&&E.setLineSpacing(E.lineSpacing+35)}T(jb,"setTextStyle");function PE(E,A,s,R,I,i){const{scale:a,styleOptions:L,shadowColor:S,shadowXpos:o,shadowYpos:l}=Sn(I,E.uiTheme,i),D=new Vx(E,A,s,R,L);return E.add.existing(D),D.setScale(a),D.setShadow(o,l,S),L.lineSpacing||D.setLineSpacing(a*60),D.lineSpacing<12&&U.resolvedLanguage==="ja"&&D.setLineSpacing(D.lineSpacing+35),D}T(PE,"addBBCodeTextObject");function zb(E,A,s,R,I,i,a){const{scale:L,styleOptions:S}=Sn(i,E.uiTheme,a),o=new _b(E,A,s,R,I,S);return E.add.existing(o),o.setScale(L),o}T(zb,"addTextInputObject");function Sn(E,A,s){var l;const R=U.resolvedLanguage;let I=4,i=5,a=.1666666667;const L=96;let S={fontFamily:"emerald",fontSize:96,color:zt(E,!1,A),padding:{bottom:6}};switch(U.resolvedLanguage==="ja"&&(a=.1388888889,S.padding={top:2,bottom:4}),E){case 6:case 7:case 9:case 8:case 10:case 11:case 12:case 13:case 1:case 2:I=3,i=3;break;case 15:let D="96px";switch(R){case"de":I=3,i=3,D="80px";break;default:D="96px";break}S.fontSize=D;break;case 16:I=3,i=3;let M="96px";switch(R){case"de":M="80px";break;default:M="96px";break}S.fontSize=M;break;case 0:case 18:case 20:case 19:break;case 3:case 14:case 21:S.fontSize=L-24,I=3.5,i=3.5;break;case 4:case 5:S.fontSize=L-30,S.fontFamily="pkmnems";break;case 22:S.fontSize=L-32,I=3,i=3;break;case 23:S.fontSize=L-40,I=3,i=3;break;case 28:S.fontSize=L-36,I=3,i=3;break;case 29:S.fontSize=L-24,I=3,i=3;break}const o=zt(E,!0,A);if(s){if(s.fontSize){const D=parseInt(s.fontSize.toString().slice(0,-2))/parseInt(((l=S.fontSize)==null?void 0:l.toString().slice(0,-2))??"1");I*=D}S=Object.assign(S,s)}return{scale:a,styleOptions:S,shadowColor:o,shadowXpos:I,shadowYpos:i}}T(Sn,"getTextStyleOptions");function jR(E,A,s=bR.DEFAULT){return`[color=${zt(A,!1,s)}][shadow=${zt(A,!0,s)}]${E}`}T(jR,"getBBCodeFrag");function e8(E,A,s=bR.DEFAULT){let R=jR(E,A,s)+"[/color][/shadow]";const I=[...R.match(new RegExp(/\[color=[^\[]*\]\[shadow=[^\[]*\]/i))][0];return R=R.replace(/@\[([^{]*)\]{([^}]*)}/gi,(i,a,L)=>"[/color][/shadow]"+jR(L,V[a],s)+"[/color][/shadow]"+I),R.replace(/\[color=[^\[]*\]\[shadow=[^\[]*\]\[\/color\]\[\/shadow\]/gi,"")}T(e8,"getTextWithColors");function zt(E,A,s=bR.DEFAULT){const R=s===bR.LEGACY;switch(E){case 0:return A?"#6b5a73":"#f8f8f8";case 1:case 23:case 24:case 22:case 17:return R?A?"#d0d0c8":"#484848":A?"#6b5a73":"#f8f8f8";case 25:return R?A?"#ebd773":"#a68e17":A?"#6e672c":"#ccbe00";case 26:return R?A?"#f7b18b":"#d64b00":A?"#69402a":"#d64b00";case 27:return R?A?"#fca2a2":"#e13d3d":A?"#632929":"#e13d3d";case 2:return A?"#d0d0c8":"#484848";case 3:return R?A?"#ded6b5":"#404040":A?"#6b5a73":"#f8f8f8";case 4:return A?"#707070":"#f8f8f8";case 5:return A?"#984038":"#f89890";case 6:return A?"#636363":"#f8f8f8";case 7:return R?A?"#636363":"#f8f8f8":A?"#d0d0c8":"#484848";case 8:case 21:return A?"#ffbd73":"#e70808";case 9:return A?"#006090":"#40c8f8";case 10:return A?"#984038":"#f89890";case 11:case 14:return A?"#a0a060":"#e8e8a8";case 20:case 12:return A?"#636363":"#a0a0a0";case 15:return A?"#c07800":"#f8b050";case 16:return R?A?"#d0d0c8":"#484848":A?"#6b5a73":"#f8f8f8";case 13:return A?"#306850":"#78c850";case 18:case 30:return A?"#c07800":"#f8b050";case 19:return A?"#f83018":"#f88880";case 28:return A?"#d0d0c8":"#484848";case 29:return A?"#6b5a73":"#f8f8f8"}}T(zt,"getTextColor");function Pa(E){switch(E){case W.COMMON:return 16316664;case W.GREAT:return 4823288;case W.ULTRA:return 16306232;case W.ROGUE:return 14369603;case W.MASTER:return 14889413;case W.LUXURY:return 15158296}}T(Pa,"getModifierTierTextTint");function t8(E){switch(E){case f.COMMON:return Pa(W.COMMON);case f.RARE:return Pa(W.GREAT);case f.EPIC:return Pa(W.ULTRA);case f.LEGENDARY:return Pa(W.MASTER)}}T(t8,"getEggTierTextTint");var J=(E=>(E[E.NONE=0]="NONE",E[E.POISON=1]="POISON",E[E.TOXIC=2]="TOXIC",E[E.PARALYSIS=3]="PARALYSIS",E[E.SLEEP=4]="SLEEP",E[E.FREEZE=5]="FREEZE",E[E.BURN=6]="BURN",E[E.FAINT=7]="FAINT",E))(J||{});const y1=class y1{constructor(A,s=0,R){this.toxicTurnCount=0,this.effect=A,this.toxicTurnCount=s,this.sleepTurnsRemaining=R}incrementTurn(){this.toxicTurnCount++,this.sleepTurnsRemaining&&this.sleepTurnsRemaining--}isPostTurn(){return this.effect===J.POISON||this.effect===J.TOXIC||this.effect===J.BURN}};T(y1,"Status");let fi=y1;function nL(E){switch(E){case J.POISON:return"statusEffect:poison";case J.TOXIC:return"statusEffect:toxic";case J.PARALYSIS:return"statusEffect:paralysis";case J.SLEEP:return"statusEffect:sleep";case J.FREEZE:return"statusEffect:freeze";case J.BURN:return"statusEffect:burn";default:return"statusEffect:none"}}T(nL,"getStatusEffectMessageKey");function A8(E,A,s){if(E===J.NONE)return"";if(!s){const I=`${nL(E)}.obtain`;return U.t(I,{pokemonNameWithAffix:A})}const R=`${nL(E)}.obtainSource`;return U.t(R,{pokemonNameWithAffix:A,sourceText:s})}T(A8,"getStatusEffectObtainText");function $x(E,A){if(E===J.NONE)return"";const s=`${nL(E)}.activation`;return U.t(s,{pokemonNameWithAffix:A})}T($x,"getStatusEffectActivationText");function E8(E,A){if(E===J.NONE)return"";const s=`${nL(E)}.overlap`;return U.t(s,{pokemonNameWithAffix:A})}T(E8,"getStatusEffectOverlapText");function XI(E,A){if(E===J.NONE)return"";const s=`${nL(E)}.heal`;return U.t(s,{pokemonNameWithAffix:A})}T(XI,"getStatusEffectHealText");function qx(E){if(E===J.NONE)return"";const A=`${nL(E)}.description`;return U.t(A)}T(qx,"getStatusEffectDescriptor");function jx(E){switch(E){case J.POISON:case J.TOXIC:case J.PARALYSIS:case J.BURN:return 1.5;case J.SLEEP:case J.FREEZE:return 2.5}return 1}T(jx,"getStatusEffectCatchRateMultiplier");function s8(E,A){return!E||E.effect===J.NONE||E.effect===J.FAINT?A:!A||A.effect===J.NONE||A.effect===J.FAINT||vx(0,2)?E:A}T(s8,"getRandomStatus");function o1(){return[J.POISON,J.TOXIC,J.PARALYSIS,J.SLEEP,J.FREEZE,J.BURN]}T(o1,"getNonVolatileStatusEffects");function KV(E){return o1().includes(E)}T(KV,"isNonVolatileStatusEffect");var B=(E=>(E[E.HP=0]="HP",E[E.ATK=1]="ATK",E[E.DEF=2]="DEF",E[E.SPATK=3]="SPATK",E[E.SPDEF=4]="SPDEF",E[E.SPD=5]="SPD",E[E.ACC=6]="ACC",E[E.EVA=7]="EVA",E))(B||{});const PO=[0,1,2,3,4,5],Kn=[1,2,3,4,5],rO=[1,2,3,4,5,6,7],zx=[1,2,3,4,5,6];function FV(E,A){return E===1?A?"battle:statRose":"battle:statFell":E===2?A?"battle:statSharplyRose":"battle:statHarshlyFell":E>2&&E<=6?A?"battle:statRoseDrastically":"battle:statSeverelyFell":A?"battle:statWontGoAnyHigher":"battle:statWontGoAnyLower"}T(FV,"getStatStageChangeDescriptionKey");function aE(E){return`pokemonInfo:Stat.${B[E]}`}T(aE,"getStatKey");function _a(E){return`pokemonInfo:Stat.${B[E]}shortened`}T(_a,"getShortenedStatKey");var dO=(E=>(E.CANDY_UPGRADE_NOTIFICATION_CHANGED="onCandyUpgradeNotificationChanged",E.MOVE_USED="onMoveUsed",E.BERRY_USED="onBerryUsed",E.ENCOUNTER_PHASE="onEncounterPhase",E.TURN_INIT="onTurnInit",E.TURN_END="onTurnEnd",E.NEW_ARENA="onNewArena",E))(dO||{});const w1=class w1 extends Event{constructor(A){super("onCandyUpgradeNotificationChanged"),this.newValue=A}};T(w1,"CandyUpgradeNotificationChangedEvent");let S0=w1;const V1=class V1 extends Event{constructor(A,s,R){super("onMoveUsed"),this.pokemonId=A,this.move=s,this.ppUsed=R}};T(V1,"MoveUsedEvent");let rT=V1;const v1=class v1 extends Event{constructor(A){super("onBerryUsed"),this.berryModifier=A}};T(v1,"BerryUsedEvent");let o0=v1;const x1=class x1 extends Event{constructor(){super("onEncounterPhase")}};T(x1,"EncounterPhaseEvent");let l0=x1;const b1=class b1 extends Event{constructor(){super("onTurnInit")}};T(b1,"TurnInitEvent");let C0=b1;const k1=class k1 extends Event{constructor(A){super("onTurnEnd"),this.turnCount=A}};T(k1,"TurnEndEvent");let U0=k1;const Z1=class Z1 extends Event{constructor(){super("onNewArena")}};T(Z1,"NewArenaEvent");let D0=Z1;var nt=(E=>(E[E.SITRUS=0]="SITRUS",E[E.LUM=1]="LUM",E[E.ENIGMA=2]="ENIGMA",E[E.LIECHI=3]="LIECHI",E[E.GANLON=4]="GANLON",E[E.PETAYA=5]="PETAYA",E[E.APICOT=6]="APICOT",E[E.SALAC=7]="SALAC",E[E.LANSAT=8]="LANSAT",E[E.STARF=9]="STARF",E[E.LEPPA=10]="LEPPA",E))(nt||{});const X1=class X1 extends Phaser.GameObjects.Container{constructor(A,s){super(A,0,0),this.flyoutWidth=118,this.flyoutHeight=23,this.flyoutText=new Array(4),this.moveInfo=new Array,this.flyoutVisible=!1,this.onMoveUsedEvent=R=>this.onMoveUsed(R),this.onBerryUsedEvent=R=>this.onBerryUsed(R),this.battleScene=A,this.player=s,this.translationX=this.player?-this.flyoutWidth:this.flyoutWidth,this.anchorX=this.player?-130:-40,this.anchorY=-2.5+(this.player?-18.5:-13),this.flyoutParent=this.scene.add.container(this.anchorX-this.translationX,this.anchorY),this.flyoutParent.setAlpha(0),this.add(this.flyoutParent),this.flyoutBackground=this.scene.add.sprite(0,0,"pbinfo_enemy_boss_stats"),this.flyoutBackground.setOrigin(0,0),this.flyoutParent.add(this.flyoutBackground),this.flyoutContainer=this.scene.add.container(44+(this.player?-this.flyoutWidth:0),2),this.flyoutParent.add(this.flyoutContainer);for(let R=0;R<4;R++)this.flyoutText[R]=se(this.scene,this.flyoutWidth/4+this.flyoutWidth/2*(R%2),this.flyoutHeight/4+this.flyoutHeight/2*(R<2?0:1),"???",V.BATTLE_INFO),this.flyoutText[R].setFontSize(45),this.flyoutText[R].setLineSpacing(-10),this.flyoutText[R].setAlign("center"),this.flyoutText[R].setOrigin();this.flyoutContainer.add(this.flyoutText),this.flyoutContainer.add(new Phaser.GameObjects.Rectangle(this.scene,this.flyoutWidth/2,0,1,this.flyoutHeight+(this.battleScene.uiTheme===bR.LEGACY?1:0),2171169).setOrigin(.5,0)),this.flyoutContainer.add(new Phaser.GameObjects.Rectangle(this.scene,0,this.flyoutHeight/2,this.flyoutWidth+6,1,2171169).setOrigin(0,.5))}initInfo(A){this.pokemon=A,this.name=`Flyout ${b(this.pokemon)}`,this.flyoutParent.name=`Flyout Parent ${b(this.pokemon)}`,this.battleScene.eventTarget.addEventListener(dO.MOVE_USED,this.onMoveUsedEvent),this.battleScene.eventTarget.addEventListener(dO.BERRY_USED,this.onBerryUsedEvent)}setText(){for(let A=0;A<this.flyoutText.length;A++){const s=this.flyoutText[A],R=this.moveInfo[A];if(!R)continue;const I=R.maxPp-R.ppUsed;s.text=`${R.move.name}  ${I}/${R.maxPp}`}}onMoveUsed(A){var I;const s=A;if(!s||s.pokemonId!==((I=this.pokemon)==null?void 0:I.id)||s.move.id===t.STRUGGLE)return;const R=this.moveInfo.find(i=>(i==null?void 0:i.move.id)===s.move.id);R?R.ppUsed=s.ppUsed:this.moveInfo.push({move:s.move,maxPp:s.move.pp,ppUsed:s.ppUsed}),this.setText()}onBerryUsed(A){var I;const s=A;if(!s||s.berryModifier.pokemonId!==((I=this.pokemon)==null?void 0:I.id)||s.berryModifier.berryType!==nt.LEPPA)return;const R=this.moveInfo.find(i=>i.ppUsed===i.maxPp);R&&(R.ppUsed=Math.max(R.ppUsed-10,0),this.setText())}toggleFlyout(A){this.flyoutVisible=A,this.scene.tweens.add({targets:this.flyoutParent,x:A?this.anchorX:this.anchorX-this.translationX,duration:Ve(125),ease:"Sine.easeInOut",alpha:A?1:0})}destroy(A){this.battleScene.eventTarget.removeEventListener(dO.MOVE_USED,this.onMoveUsedEvent),this.battleScene.eventTarget.removeEventListener(dO.BERRY_USED,this.onBerryUsedEvent),super.destroy(A)}};T(X1,"BattleFlyout");let M0=X1;const xa=[],Q1=class Q1 extends Phaser.Scene{constructor(A){super(A),this.scaledCanvas={width:1920/6,height:1080/6}}getCachedUrl(A){const s=this.game.manifest;if(s){const R=s[`/${A}`];R&&(A+=`?t=${R}`)}return A}loadImage(A,s,R){R||(R=`${A}.png`),this.load.image(A,this.getCachedUrl(`images/${s}/${R}`)),s.startsWith("ui")&&(xa.push(A),s=s.replace("ui","ui/legacy"),this.load.image(`${A}_legacy`,this.getCachedUrl(`images/${s}/${R}`)))}loadSpritesheet(A,s,R,I){I||(I=`${A}.png`),this.load.spritesheet(A,this.getCachedUrl(`images/${s}/${I}`),{frameWidth:R,frameHeight:R}),s.startsWith("ui")&&(xa.push(A),s=s.replace("ui","ui/legacy"),this.load.spritesheet(`${A}_legacy`,this.getCachedUrl(`images/${s}/${I}`),{frameWidth:R,frameHeight:R}))}loadAtlas(A,s,R){R||(R=A),s&&(s+="/"),this.load.atlas(A,this.getCachedUrl(`images/${s}${R}.png`),this.getCachedUrl(`images/${s}${R}.json`)),s.startsWith("ui")&&(xa.push(A),s=s.replace("ui","ui/legacy"),this.load.atlas(`${A}_legacy`,this.getCachedUrl(`images/${s}${R}.png`),this.getCachedUrl(`images/${s}${R}.json`)))}loadSe(A,s,R){R||(R=`${A}.wav`),s?s+="/":s="se/",Array.isArray(R)||(R=[R]);for(const I of R)this.load.audio(s+A,this.getCachedUrl(`audio/${s}${I}`))}loadBgm(A,s){s||(s=`${A}.mp3`),this.load.audio(A,this.getCachedUrl(`audio/bgm/${s}`))}};T(Q1,"SceneBase");let sl=Q1;var vR=(E=>(E[E.NORMAL=0]="NORMAL",E[E.THIN=1]="THIN",E[E.XTHIN=2]="XTHIN",E))(vR||{});function Nr(E){switch(E){case 1:return"_thin";case 2:return"_xthin";default:return""}}T(Nr,"getWindowVariantSuffix");const R8={[bR.DEFAULT]:{0:["#6b5a73","#DD5748","#7E4955"],1:["#6b5a73","#48DDAA","#4D7574"],2:["#6b5a73","#C5C5C5","#766D7E"],3:["#6b5a73","#EBC07C","#836C66"],4:["#686868","#E8E8E8","#919191"]},[bR.LEGACY]:{0:["#706880","#8888c8","#484868"],1:["#d04028","#e0a028","#902008"],2:["#48b840","#88d880","#089040"],3:["#2068d0","#80b0e0","#104888"],4:["#706880","#8888c8","#484868"]}};function it(E,A,s,R,I,i,a,L,S,o){o===void 0&&(o=0);const l=E.uiTheme?6:8,D=E.add.nineslice(A,s,`window_${E.windowType}${Nr(o)}`,void 0,R,I,l,l,l,l);if(D.setOrigin(0,0),a||i||L||S){const M=new Phaser.GameObjects.Rectangle(E,6*(A-(a?2:0)-(L||0)),6*(s+(i?2:0)+(S||0)),R-(a?2:0),I-(i?2:0),16777215);M.setOrigin(0),M.setScale(6);const c=M.createGeometryMask();D.setMask(c)}return D}T(it,"addWindow");function O8(E,A){const s=[],R=[],I=T(L=>{var S,o;if(L.hasOwnProperty("children")&&L.children instanceof Phaser.GameObjects.DisplayList){const l=L.children;for(const D of l.getAll())I(D)}else if(L instanceof Phaser.GameObjects.Container)for(const l of L.getAll())I(l);else L instanceof Phaser.GameObjects.NineSlice?L.texture.key.startsWith("window_")?s.push([L,L.texture.key.endsWith(Nr(2))?2:L.texture.key.endsWith(Nr(1))?1:0]):((S=L.texture)==null?void 0:S.key)==="namebox"&&R.push(L):L instanceof Phaser.GameObjects.Sprite&&((o=L.texture)==null?void 0:o.key)==="bg"&&R.push(L)},"traverse");I(E),E.windowType=A;const i=document.documentElement.style;["base","light","dark"].map((L,S)=>i.setProperty(`--color-${L}`,R8[E.uiTheme][A-1][S]));const a=`window_${A}`;for(const[L,S]of s)L.setTexture(`${a}${Nr(S)}`);for(const L of R)L.setFrame(A)}T(O8,"updateWindowType");function n8(E){const A=E.add.image;E.add.image=function(I,i,a,L){let S=!1;typeof a=="string"&&E.uiTheme&&xa.includes(a)&&(S=!0,a+="_legacy");const o=A.apply(this,[I,i,a,L]);if(S){const l=o.setTexture;o.setTexture=function(D,M){return D+="_legacy",l.apply(this,[D,M])}}return o};const s=E.add.sprite;E.add.sprite=function(I,i,a,L){let S=!1;typeof a=="string"&&E.uiTheme&&xa.includes(a)&&(S=!0,a+="_legacy");const o=s.apply(this,[I,i,a,L]);if(S){const l=o.setTexture;o.setTexture=function(D,M){return D+="_legacy",l.apply(this,[D,M])}}return o};const R=E.add.nineslice;E.add.nineslice=function(I,i,a,L,S,o,l,D,M,c){let G=!1;typeof a=="string"&&E.uiTheme&&xa.includes(a)&&(G=!0,a+="_legacy");const P=R.apply(this,[I,i,a,L,S,o,l,D,M,c]);if(G){const _=P.setTexture;P.setTexture=function(g,H,F,p){return g+="_legacy",_.apply(this,[g,H,F,p])}}return P}}T(n8,"addUiThemeOverrides");var ba=(E=>(E[E.DEFAULT=0]="DEFAULT",E[E.FAST=1]="FAST",E[E.FASTER=2]="FASTER",E[E.SKIP=3]="SKIP",E))(ba||{});const zr=class zr extends Phaser.GameObjects.Container{constructor(A,s,R,I){super(A,s,R),this.statOrderPlayer=[B.ATK,B.DEF,B.SPATK,B.SPDEF,B.ACC,B.EVA,B.SPD],this.statOrderEnemy=[B.HP,B.ATK,B.DEF,B.SPATK,B.SPDEF,B.ACC,B.EVA,B.SPD],this.baseY=R,this.player=I,this.mini=!I,this.boss=!1,this.offset=!1,this.lastName=null,this.lastTeraType=n.UNKNOWN,this.lastStatus=J.NONE,this.lastHp=-1,this.lastMaxHp=-1,this.lastHpFrame=null,this.lastExp=-1,this.lastLevelExp=-1,this.lastLevel=-1,this.setVisible(!1),this.box=this.scene.add.sprite(0,0,this.getTextureName()),this.box.setName("box"),this.box.setOrigin(1,.5),this.add(this.box),this.nameText=se(this.scene,I?-115:-124,I?-15.2:-11.2,"",V.BATTLE_INFO),this.nameText.setName("text_name"),this.nameText.setOrigin(0,0),this.add(this.nameText),this.genderText=se(this.scene,0,0,"",V.BATTLE_INFO),this.genderText.setName("text_gender"),this.genderText.setOrigin(0,0),this.genderText.setPositionRelative(this.nameText,0,2),this.add(this.genderText),this.player||(this.ownedIcon=this.scene.add.sprite(0,0,"icon_owned"),this.ownedIcon.setName("icon_owned"),this.ownedIcon.setVisible(!1),this.ownedIcon.setOrigin(0,0),this.ownedIcon.setPositionRelative(this.nameText,0,11.75),this.add(this.ownedIcon),this.championRibbon=this.scene.add.sprite(0,0,"champion_ribbon"),this.championRibbon.setName("icon_champion_ribbon"),this.championRibbon.setVisible(!1),this.championRibbon.setOrigin(0,0),this.championRibbon.setPositionRelative(this.nameText,8,11.75),this.add(this.championRibbon)),this.teraIcon=this.scene.add.sprite(0,0,"icon_tera"),this.teraIcon.setName("icon_tera"),this.teraIcon.setVisible(!1),this.teraIcon.setOrigin(0,0),this.teraIcon.setScale(.5),this.teraIcon.setPositionRelative(this.nameText,0,2),this.teraIcon.setInteractive(new Phaser.Geom.Rectangle(0,0,12,15),Phaser.Geom.Rectangle.Contains),this.add(this.teraIcon),this.shinyIcon=this.scene.add.sprite(0,0,"shiny_star"),this.shinyIcon.setName("icon_shiny"),this.shinyIcon.setVisible(!1),this.shinyIcon.setOrigin(0,0),this.shinyIcon.setScale(.5),this.shinyIcon.setPositionRelative(this.nameText,0,2),this.shinyIcon.setInteractive(new Phaser.Geom.Rectangle(0,0,12,15),Phaser.Geom.Rectangle.Contains),this.add(this.shinyIcon),this.fusionShinyIcon=this.scene.add.sprite(0,0,"shiny_star_2"),this.fusionShinyIcon.setName("icon_fusion_shiny"),this.fusionShinyIcon.setVisible(!1),this.fusionShinyIcon.setOrigin(0,0),this.fusionShinyIcon.setScale(.5),this.fusionShinyIcon.setPosition(this.shinyIcon.x,this.shinyIcon.y),this.add(this.fusionShinyIcon),this.splicedIcon=this.scene.add.sprite(0,0,"icon_spliced"),this.splicedIcon.setName("icon_spliced"),this.splicedIcon.setVisible(!1),this.splicedIcon.setOrigin(0,0),this.splicedIcon.setScale(.5),this.splicedIcon.setPositionRelative(this.nameText,0,2),this.splicedIcon.setInteractive(new Phaser.Geom.Rectangle(0,0,12,15),Phaser.Geom.Rectangle.Contains),this.add(this.splicedIcon),this.statusIndicator=this.scene.add.sprite(0,0,UR("statuses")),this.statusIndicator.setName("icon_status"),this.statusIndicator.setVisible(!1),this.statusIndicator.setOrigin(0,0),this.statusIndicator.setPositionRelative(this.nameText,0,11.5),this.add(this.statusIndicator),this.levelContainer=this.scene.add.container(I?-41:-50,I?-10:-5),this.levelContainer.setName("container_level"),this.add(this.levelContainer);const i=this.scene.add.image(0,0,"overlay_lv");if(this.levelContainer.add(i),this.hpBar=this.scene.add.image(I?-61:-71,I?-1:4.5,"overlay_hp"),this.hpBar.setName("hp_bar"),this.hpBar.setOrigin(0),this.add(this.hpBar),this.hpBarSegmentDividers=[],this.levelNumbersContainer=this.scene.add.container(9.5,this.scene.uiTheme?0:-.5),this.levelNumbersContainer.setName("container_level"),this.levelContainer.add(this.levelNumbersContainer),this.player){this.hpNumbersContainer=this.scene.add.container(-15,10),this.hpNumbersContainer.setName("container_hp"),this.add(this.hpNumbersContainer);const o=this.scene.add.image(-98,18,"overlay_exp");o.setName("overlay_exp"),o.setOrigin(0),this.add(o);const l=this.scene.make.graphics({});l.setScale(6),l.fillStyle(16777215),l.beginPath(),l.fillRect(127,126,85,2);const D=l.createGeometryMask();o.setMask(D),this.expBar=o,this.expMaskRect=l}this.statsContainer=this.scene.add.container(0,0),this.statsContainer.setName("container_stats"),this.statsContainer.setAlpha(0),this.add(this.statsContainer),this.statsBox=this.scene.add.sprite(0,0,`${this.getTextureName()}_stats`),this.statsBox.setName("box_stats"),this.statsBox.setOrigin(1,.5),this.statsContainer.add(this.statsBox),this.statNumbers=[],this.statValuesContainer=this.scene.add.container(0,0),this.statsContainer.add(this.statValuesContainer);const a=this.player?-this.statsBox.width+8:-this.statsBox.width+5,L=this.player?4:2,S=this.player?1:0;this.statOrder=this.player?this.statOrderPlayer:this.statOrderEnemy,this.statOrder.map((o,l)=>{const D=l>S?this.statNumbers[Math.max(l-2,0)].x+this.statNumbers[Math.max(l-2,0)].width+L:a,M=-this.statsBox.height/2+4;let c;this.statOrder[l]===B.SPD||this.statOrder[l]===B.HP?c=M+5:c=M+(!!(l%2)===this.player?10:0);const G=this.scene.add.sprite(D,c,"pbinfo_stat",B[o]);G.setName("icon_stat_label_"+l.toString()),G.setOrigin(0,0),this.statValuesContainer.add(G);const P=this.scene.add.sprite(D+G.width,c,"pbinfo_stat_numbers",this.statOrder[l]!==B.HP?"3":"empty");P.setName("icon_stat_number_"+l.toString()),P.setOrigin(0,0),this.statNumbers.push(P),this.statValuesContainer.add(P),this.statOrder[l]===B.HP&&(G.setVisible(!1),P.setVisible(!1))}),this.player||(this.flyoutMenu=new M0(this.scene,this.player),this.add(this.flyoutMenu),this.moveBelow(this.flyoutMenu,this.box)),this.type1Icon=this.scene.add.sprite(I?-139:-15,I?-17:-15.5,`pbinfo_${I?"player":"enemy"}_type1`),this.type1Icon.setName("icon_type_1"),this.type1Icon.setOrigin(0,0),this.add(this.type1Icon),this.type2Icon=this.scene.add.sprite(I?-139:-15,I?-1:-2.5,`pbinfo_${I?"player":"enemy"}_type2`),this.type2Icon.setName("icon_type_2"),this.type2Icon.setOrigin(0,0),this.add(this.type2Icon),this.type3Icon=this.scene.add.sprite(I?-154:0,I?-17:-15.5,`pbinfo_${I?"player":"enemy"}_type`),this.type3Icon.setName("icon_type_3"),this.type3Icon.setOrigin(0,0),this.add(this.type3Icon),this.player||(this.effectivenessContainer=this.scene.add.container(0,0),this.effectivenessContainer.setPositionRelative(this.type1Icon,22,4),this.effectivenessContainer.setVisible(!1),this.add(this.effectivenessContainer),this.effectivenessText=se(this.scene,5,4.5,"",V.BATTLE_INFO),this.effectivenessWindow=it(this.scene,0,0,0,20,void 0,!1,void 0,void 0,vR.XTHIN),this.effectivenessContainer.add(this.effectivenessWindow),this.effectivenessContainer.add(this.effectivenessText))}getStatsValueContainer(){return this.statValuesContainer}initInfo(A){var S;this.updateNameText(A);const s=this.nameText.displayWidth;this.name=A.getNameToRender(),this.box.name=A.getNameToRender(),(S=this.flyoutMenu)==null||S.initInfo(A),this.genderText.setText($L(A.gender)),this.genderText.setColor(gn(A.gender)),this.genderText.setPositionRelative(this.nameText,s,0),this.lastTeraType=A.getTeraType(),this.teraIcon.setPositionRelative(this.nameText,s+this.genderText.displayWidth+1,2),this.teraIcon.setVisible(this.lastTeraType!==n.UNKNOWN),this.teraIcon.on("pointerover",()=>{this.lastTeraType!==n.UNKNOWN&&this.scene.ui.showTooltip("",U.t("fightUiHandler:teraHover",{type:U.t(`pokemonInfo:Type.${n[this.lastTeraType]}`)}))}),this.teraIcon.on("pointerout",()=>this.scene.ui.hideTooltip());const R=A.isFusion();this.splicedIcon.setPositionRelative(this.nameText,s+this.genderText.displayWidth+1+(this.teraIcon.visible?this.teraIcon.displayWidth+1:0),2.5),this.splicedIcon.setVisible(R),this.splicedIcon.visible&&(this.splicedIcon.on("pointerover",()=>{var o;return this.scene.ui.showTooltip("",`${A.species.getName(A.formIndex)}/${(o=A.fusionSpecies)==null?void 0:o.getName(A.fusionFormIndex)}`)}),this.splicedIcon.on("pointerout",()=>this.scene.ui.hideTooltip()));const I=R&&A.shiny&&A.fusionShiny,i=I?A.variant:A.getVariant();if(this.shinyIcon.setPositionRelative(this.nameText,s+this.genderText.displayWidth+1+(this.teraIcon.visible?this.teraIcon.displayWidth+1:0)+(this.splicedIcon.visible?this.splicedIcon.displayWidth+1:0),2.5),this.shinyIcon.setTexture(`shiny_star${I?"_1":""}`),this.shinyIcon.setVisible(A.isShiny()),this.shinyIcon.setTint(GE(i)),this.shinyIcon.visible){const o=I||i?`${i===2?U.t("common:epicShiny"):i===1?U.t("common:rareShiny"):U.t("common:commonShiny")}${I?`/${A.fusionVariant===2?U.t("common:epicShiny"):A.fusionVariant===1?U.t("common:rareShiny"):U.t("common:commonShiny")}`:""}`:"";this.shinyIcon.on("pointerover",()=>this.scene.ui.showTooltip("",`${U.t("common:shinyOnHover")}${o?` (${o})`:""}`)),this.shinyIcon.on("pointerout",()=>this.scene.ui.hideTooltip())}if(this.fusionShinyIcon.setPosition(this.shinyIcon.x,this.shinyIcon.y),this.fusionShinyIcon.setVisible(I),R&&this.fusionShinyIcon.setTint(GE(A.fusionVariant)),!this.player){this.nameText.visible&&(this.nameText.on("pointerover",()=>this.scene.ui.showTooltip("",U.t("battleInfo:generation",{generation:U.t(`starterSelectUiHandler:gen${A.species.generation}`)}))),this.nameText.on("pointerout",()=>this.scene.ui.hideTooltip()));const o=A.scene.gameData.dexData[A.species.speciesId];this.ownedIcon.setVisible(!!o.caughtAttr);const l=A.getDexAttr();A.scene.gameMode.isClassic&&A.scene.gameData.starterData[A.species.getRootSpeciesId()].classicWinCount>0&&A.scene.gameData.starterData[A.species.getRootSpeciesId(!0)].classicWinCount>0&&this.championRibbon.setVisible(!0);const D=(o.caughtAttr&l)<l,M=A.scene.gameData.starterData[A.species.getRootSpeciesId()].abilityAttr,c=A.checkIfPlayerHasAbilityOfStarter(M);(D||!c)&&this.ownedIcon.setTint(8421504),this.boss&&this.updateBossSegmentDividers(A)}this.hpBar.setScale(A.getHpRatio(!0),1),this.lastHpFrame=this.hpBar.scaleX>.5?"high":this.hpBar.scaleX>.25?"medium":"low",this.hpBar.setFrame(this.lastHpFrame),this.player&&this.setHpNumbers(A.hp,A.getMaxHp()),this.lastHp=A.hp,this.lastMaxHp=A.getMaxHp(),this.setLevel(A.level),this.lastLevel=A.level,this.shinyIcon.setVisible(A.isShiny());const a=A.getTypes(!0);this.type1Icon.setTexture(`pbinfo_${this.player?"player":"enemy"}_type${a.length>1?"1":""}`),this.type1Icon.setFrame(n[a[0]].toLowerCase()),this.type2Icon.setVisible(a.length>1),this.type3Icon.setVisible(a.length>2),a.length>1&&this.type2Icon.setFrame(n[a[1]].toLowerCase()),a.length>2&&this.type3Icon.setFrame(n[a[2]].toLowerCase()),this.player&&(this.expMaskRect.x=A.levelExp/WR(A.level,A.species.growthRate)*510,this.lastExp=A.exp,this.lastLevelExp=A.levelExp,this.statValuesContainer.setPosition(8,7));const L=this.statOrder.map(()=>0);this.lastStats=L.join(""),this.updateStats(L)}getTextureName(){return`pbinfo_${this.player?"player":"enemy"}${!this.player&&this.boss?"_boss":this.mini?"_mini":""}`}setMini(A){if(this.mini===A)return;this.mini=A,this.box.setTexture(this.getTextureName()),this.statsBox.setTexture(`${this.getTextureName()}_stats`),this.player&&(this.y-=12*(A?1:-1),this.baseY=this.y),[this.nameText,this.genderText,this.teraIcon,this.splicedIcon,this.shinyIcon,this.statusIndicator,this.levelContainer].forEach(I=>I.y+=1.5*(A?-1:1)),[this.type1Icon,this.type2Icon,this.type3Icon].forEach(I=>{I.x+=4*(A?1:-1),I.y+=-8*(A?1:-1)}),this.statValuesContainer.x+=2*(A?1:-1),this.statValuesContainer.y+=-7*(A?1:-1),[this.hpNumbersContainer,this.expBar].forEach(I=>I.setVisible(!A))}toggleStats(A){this.scene.tweens.add({targets:this.statsContainer,duration:Ve(125),ease:"Sine.easeInOut",alpha:A?1:0})}updateBossSegments(A){const s=!!A.bossSegments;s!==this.boss&&(this.boss=s,[this.nameText,this.genderText,this.teraIcon,this.splicedIcon,this.shinyIcon,this.ownedIcon,this.championRibbon,this.statusIndicator,this.levelContainer,this.statValuesContainer].map(R=>R.x+=48*(s?-1:1)),this.hpBar.x+=38*(s?-1:1),this.hpBar.y+=2*(this.boss?-1:1),this.hpBar.setTexture(`overlay_hp${s?"_boss":""}`),this.box.setTexture(this.getTextureName()),this.statsBox.setTexture(`${this.getTextureName()}_stats`)),this.bossSegments=s?A.bossSegments:0,this.updateBossSegmentDividers(A)}updateBossSegmentDividers(A){var s;for(;this.hpBarSegmentDividers.length;)(s=this.hpBarSegmentDividers.pop())==null||s.destroy();if(this.boss&&this.bossSegments>1){const R=this.scene.uiTheme,I=A.getMaxHp();for(let i=1;i<this.bossSegments;i++){const a=Math.round(I/this.bossSegments*i)/I*this.hpBar.width,L=this.scene.add.rectangle(0,0,1,this.hpBar.height-(R?0:1),A.bossSegmentIndex>=i?16777215:4210752);L.setOrigin(.5,0),L.setName("hpBar_divider_"+i.toString()),this.add(L),this.moveBelow(L,this.statsContainer),L.setPositionRelative(this.hpBar,a,R?0:1),this.hpBarSegmentDividers.push(L)}}}setOffset(A){this.offset!==A&&(this.offset=A,this.x+=10*(this.offset===this.player?1:-1),this.y+=27*(this.offset?1:-1),this.baseY=this.y)}updateInfo(A,s){return new Promise(R=>{var M,c;if(!this.scene)return R();const I=this.lastName!==A.getNameToRender();I&&(this.updateNameText(A),this.genderText.setPositionRelative(this.nameText,this.nameText.displayWidth,0));const i=A.getTeraType(),a=this.lastTeraType!==i;if(a&&(this.teraIcon.setVisible(i!==n.UNKNOWN),this.teraIcon.setPositionRelative(this.nameText,this.nameText.displayWidth+this.genderText.displayWidth+1,2),this.teraIcon.setTintFill(Phaser.Display.Color.GetColor(...DR(i))),this.lastTeraType=i),(I||a)&&(this.splicedIcon.setVisible(!!A.fusionSpecies),this.teraIcon.setPositionRelative(this.nameText,this.nameText.displayWidth+this.genderText.displayWidth+1,2),this.splicedIcon.setPositionRelative(this.nameText,this.nameText.displayWidth+this.genderText.displayWidth+1+(this.teraIcon.visible?this.teraIcon.displayWidth+1:0),1.5),this.shinyIcon.setPositionRelative(this.nameText,this.nameText.displayWidth+this.genderText.displayWidth+1+(this.teraIcon.visible?this.teraIcon.displayWidth+1:0)+(this.splicedIcon.visible?this.splicedIcon.displayWidth+1:0),2.5)),this.lastStatus!==(((M=A.status)==null?void 0:M.effect)||J.NONE)){this.lastStatus=((c=A.status)==null?void 0:c.effect)||J.NONE,this.lastStatus!==J.NONE&&this.statusIndicator.setFrame(J[this.lastStatus].toLowerCase());const G=this.player?0:(this.ownedIcon.visible?8:0)+(this.championRibbon.visible?8:0);this.statusIndicator.setPositionRelative(this.nameText,G,11.5),this.statusIndicator.setVisible(!!this.lastStatus)}const L=A.getTypes(!0);this.type1Icon.setTexture(`pbinfo_${this.player?"player":"enemy"}_type${L.length>1?"1":""}`),this.type1Icon.setFrame(n[L[0]].toLowerCase()),this.type2Icon.setVisible(L.length>1),this.type3Icon.setVisible(L.length>2),L.length>1&&this.type2Icon.setFrame(n[L[1]].toLowerCase()),L.length>2&&this.type3Icon.setFrame(n[L[2]].toLowerCase());const S=T(()=>{const G=this.hpBar.scaleX>.5?"high":this.hpBar.scaleX>.25?"medium":"low";G!==this.lastHpFrame&&(this.hpBar.setFrame(G),this.lastHpFrame=G)},"updateHpFrame"),o=T(()=>{let G=s?0:Phaser.Math.Clamp(Math.abs(this.lastHp-A.hp)*5,250,5e3);const P=this.scene.hpBarSpeed;P&&(G=P>=3?0:G/Math.pow(2,P)),this.scene.tweens.add({targets:this.hpBar,ease:"Sine.easeOut",scaleX:A.getHpRatio(!0),duration:G,onUpdate:T(()=>{if(this.player&&this.lastHp!==A.hp){const _=Math.ceil(this.hpBar.scaleX*A.getMaxHp());this.setHpNumbers(_,A.getMaxHp()),this.lastHp=_}S()},"onUpdate"),onComplete:T(()=>{S(),R()},"onComplete")}),this.player||(this.lastHp=A.hp),this.lastMaxHp=A.getMaxHp()},"updatePokemonHp");if(this.player){const G=A.level>=this.scene.getMaxExpLevel();if(this.lastExp!==A.exp||this.lastLevel!==A.level){const P=R,_=Math.max(Phaser.Tweens.Builders.GetEaseFunction("Cubic.easeIn")(1-Math.min(A.level-this.lastLevel,10)/10),.1);R=T(()=>this.updatePokemonExp(A,!1,_).then(()=>P()),"resolve")}else G!==this.lastLevelCapped&&this.setLevel(A.level);this.lastLevelCapped=G}if(this.lastHp!==A.hp||this.lastMaxHp!==A.getMaxHp())return o();!this.player&&this.lastLevel!==A.level&&(this.setLevel(A.level),this.lastLevel=A.level);const l=A.getStatStages(),D=l.join("");this.lastStats!==D&&(this.updateStats(l),this.lastStats=D),this.shinyIcon.setVisible(A.isShiny()),R()})}updateNameText(A){let s=A.getNameToRender().replace(/[♂♀]/g,""),R;const I=se(this.scene,0,0,s,V.BATTLE_INFO);for(R=I.displayWidth;R>(this.player||!this.boss?60:98)-((A.gender!==ye.GENDERLESS?6:0)+(A.fusionSpecies?8:0)+(A.isShiny()?8:0)+(Math.min(A.level.toString().length,3)-3)*8);)s=`${s.slice(0,s.endsWith(".")?-2:-1).trimEnd()}.`,I.setText(s),R=I.displayWidth;I.destroy(),this.nameText.setText(s),this.lastName=A.getNameToRender(),this.nameText.visible&&this.nameText.setInteractive(new Phaser.Geom.Rectangle(0,0,this.nameText.width,this.nameText.height),Phaser.Geom.Rectangle.Contains)}updatePokemonExp(A,s,R=1){return new Promise(I=>{const i=this.lastLevel<A.level,a=Jx(this.lastLevel+1,A.species.growthRate),L=i?a:A.levelExp;let S=a?L/a:0;this.lastLevel>=this.scene.getMaxExpLevel(!0)&&(i?S=1:S=0,s=!0);const o=Phaser.Tweens.Builders.GetEaseFunction("Sine.easeIn")(1-Math.max(this.lastLevel-100,0)/150);let l=this.visible&&!s?(L-this.lastLevelExp)/a*zr.EXP_GAINS_DURATION_BASE*o*R:0;const D=this.scene.expGainsSpeed;D&&D>=ba.DEFAULT&&(l=D>=ba.SKIP?ba.DEFAULT:l/Math.pow(2,D)),S===1?(this.lastLevelExp=0,this.lastLevel++):(this.lastExp=A.exp,this.lastLevelExp=A.levelExp),l&&this.scene.playSound("se/exp"),this.scene.tweens.add({targets:this.expMaskRect,ease:"Sine.easeIn",x:S*510,duration:l,onComplete:T(()=>{if(!this.scene)return I();if(l&&this.scene.sound.stopByKey("se/exp"),S===1){this.scene.playSound("se/level_up"),this.setLevel(this.lastLevel),this.scene.time.delayedCall(500*R,()=>{this.expMaskRect.x=0,this.updateInfo(A,s).then(()=>I())});return}I()},"onComplete")})})}setLevel(A){const s=A>=this.scene.getMaxExpLevel();this.levelNumbersContainer.removeAll(!0);const R=A.toString();for(let I=0;I<R.length;I++)this.levelNumbersContainer.add(this.scene.add.image(I*8,0,`numbers${s&&this.player?"_red":""}`,R[I]));this.levelContainer.setX((this.player?-41:-50)-8*Math.max(R.length-3,0))}setHpNumbers(A,s){if(!this.player||!this.scene)return;this.hpNumbersContainer.removeAll(!0);const R=A.toString(),I=s.toString();let i=0;for(let a=I.length-1;a>=0;a--)this.hpNumbersContainer.add(this.scene.add.image(i++*-8,0,"numbers",I[a]));this.hpNumbersContainer.add(this.scene.add.image(i++*-8,0,"numbers","/"));for(let a=R.length-1;a>=0;a--)this.hpNumbersContainer.add(this.scene.add.image(i++*-8,0,"numbers",R[a]))}updateStats(A){this.statOrder.map((s,R)=>{s!==B.HP&&this.statNumbers[R].setFrame(A[s-1].toString())})}toggleFlyout(A){var s,R;(s=this.flyoutMenu)==null||s.toggleFlyout(A),A?(R=this.effectivenessContainer)==null||R.setVisible(!1):this.updateEffectiveness(this.currentEffectiveness)}updateEffectiveness(A){var s;if(!this.player){if(this.currentEffectiveness=A,!this.scene.typeHints||A===void 0||(s=this.flyoutMenu)!=null&&s.flyoutVisible){this.effectivenessContainer.setVisible(!1);return}this.effectivenessText.setText(A),this.effectivenessWindow.width=10+this.effectivenessText.displayWidth,this.effectivenessContainer.setVisible(!0)}}getBaseY(){return this.baseY}resetY(){this.y=this.baseY}};T(zr,"BattleInfo"),zr.EXP_GAINS_DURATION_BASE=1650;let NT=zr;const J1=class J1 extends NT{constructor(A){super(A,Math.floor(A.game.canvas.width/6)-10,-72,!0)}};T(J1,"PlayerBattleInfo");let Rl=J1;const $1=class $1 extends NT{constructor(A){super(A,140,-141,!1)}setMini(A){}};T($1,"EnemyBattleInfo");let u0=$1;var O=(E=>(E[E.NONE=0]="NONE",E[E.STENCH=1]="STENCH",E[E.DRIZZLE=2]="DRIZZLE",E[E.SPEED_BOOST=3]="SPEED_BOOST",E[E.BATTLE_ARMOR=4]="BATTLE_ARMOR",E[E.STURDY=5]="STURDY",E[E.DAMP=6]="DAMP",E[E.LIMBER=7]="LIMBER",E[E.SAND_VEIL=8]="SAND_VEIL",E[E.STATIC=9]="STATIC",E[E.VOLT_ABSORB=10]="VOLT_ABSORB",E[E.WATER_ABSORB=11]="WATER_ABSORB",E[E.OBLIVIOUS=12]="OBLIVIOUS",E[E.CLOUD_NINE=13]="CLOUD_NINE",E[E.COMPOUND_EYES=14]="COMPOUND_EYES",E[E.INSOMNIA=15]="INSOMNIA",E[E.COLOR_CHANGE=16]="COLOR_CHANGE",E[E.IMMUNITY=17]="IMMUNITY",E[E.FLASH_FIRE=18]="FLASH_FIRE",E[E.SHIELD_DUST=19]="SHIELD_DUST",E[E.OWN_TEMPO=20]="OWN_TEMPO",E[E.SUCTION_CUPS=21]="SUCTION_CUPS",E[E.INTIMIDATE=22]="INTIMIDATE",E[E.SHADOW_TAG=23]="SHADOW_TAG",E[E.ROUGH_SKIN=24]="ROUGH_SKIN",E[E.WONDER_GUARD=25]="WONDER_GUARD",E[E.LEVITATE=26]="LEVITATE",E[E.EFFECT_SPORE=27]="EFFECT_SPORE",E[E.SYNCHRONIZE=28]="SYNCHRONIZE",E[E.CLEAR_BODY=29]="CLEAR_BODY",E[E.NATURAL_CURE=30]="NATURAL_CURE",E[E.LIGHTNING_ROD=31]="LIGHTNING_ROD",E[E.SERENE_GRACE=32]="SERENE_GRACE",E[E.SWIFT_SWIM=33]="SWIFT_SWIM",E[E.CHLOROPHYLL=34]="CHLOROPHYLL",E[E.ILLUMINATE=35]="ILLUMINATE",E[E.TRACE=36]="TRACE",E[E.HUGE_POWER=37]="HUGE_POWER",E[E.POISON_POINT=38]="POISON_POINT",E[E.INNER_FOCUS=39]="INNER_FOCUS",E[E.MAGMA_ARMOR=40]="MAGMA_ARMOR",E[E.WATER_VEIL=41]="WATER_VEIL",E[E.MAGNET_PULL=42]="MAGNET_PULL",E[E.SOUNDPROOF=43]="SOUNDPROOF",E[E.RAIN_DISH=44]="RAIN_DISH",E[E.SAND_STREAM=45]="SAND_STREAM",E[E.PRESSURE=46]="PRESSURE",E[E.THICK_FAT=47]="THICK_FAT",E[E.EARLY_BIRD=48]="EARLY_BIRD",E[E.FLAME_BODY=49]="FLAME_BODY",E[E.RUN_AWAY=50]="RUN_AWAY",E[E.KEEN_EYE=51]="KEEN_EYE",E[E.HYPER_CUTTER=52]="HYPER_CUTTER",E[E.PICKUP=53]="PICKUP",E[E.TRUANT=54]="TRUANT",E[E.HUSTLE=55]="HUSTLE",E[E.CUTE_CHARM=56]="CUTE_CHARM",E[E.PLUS=57]="PLUS",E[E.MINUS=58]="MINUS",E[E.FORECAST=59]="FORECAST",E[E.STICKY_HOLD=60]="STICKY_HOLD",E[E.SHED_SKIN=61]="SHED_SKIN",E[E.GUTS=62]="GUTS",E[E.MARVEL_SCALE=63]="MARVEL_SCALE",E[E.LIQUID_OOZE=64]="LIQUID_OOZE",E[E.OVERGROW=65]="OVERGROW",E[E.BLAZE=66]="BLAZE",E[E.TORRENT=67]="TORRENT",E[E.SWARM=68]="SWARM",E[E.ROCK_HEAD=69]="ROCK_HEAD",E[E.DROUGHT=70]="DROUGHT",E[E.ARENA_TRAP=71]="ARENA_TRAP",E[E.VITAL_SPIRIT=72]="VITAL_SPIRIT",E[E.WHITE_SMOKE=73]="WHITE_SMOKE",E[E.PURE_POWER=74]="PURE_POWER",E[E.SHELL_ARMOR=75]="SHELL_ARMOR",E[E.AIR_LOCK=76]="AIR_LOCK",E[E.TANGLED_FEET=77]="TANGLED_FEET",E[E.MOTOR_DRIVE=78]="MOTOR_DRIVE",E[E.RIVALRY=79]="RIVALRY",E[E.STEADFAST=80]="STEADFAST",E[E.SNOW_CLOAK=81]="SNOW_CLOAK",E[E.GLUTTONY=82]="GLUTTONY",E[E.ANGER_POINT=83]="ANGER_POINT",E[E.UNBURDEN=84]="UNBURDEN",E[E.HEATPROOF=85]="HEATPROOF",E[E.SIMPLE=86]="SIMPLE",E[E.DRY_SKIN=87]="DRY_SKIN",E[E.DOWNLOAD=88]="DOWNLOAD",E[E.IRON_FIST=89]="IRON_FIST",E[E.POISON_HEAL=90]="POISON_HEAL",E[E.ADAPTABILITY=91]="ADAPTABILITY",E[E.SKILL_LINK=92]="SKILL_LINK",E[E.HYDRATION=93]="HYDRATION",E[E.SOLAR_POWER=94]="SOLAR_POWER",E[E.QUICK_FEET=95]="QUICK_FEET",E[E.NORMALIZE=96]="NORMALIZE",E[E.SNIPER=97]="SNIPER",E[E.MAGIC_GUARD=98]="MAGIC_GUARD",E[E.NO_GUARD=99]="NO_GUARD",E[E.STALL=100]="STALL",E[E.TECHNICIAN=101]="TECHNICIAN",E[E.LEAF_GUARD=102]="LEAF_GUARD",E[E.KLUTZ=103]="KLUTZ",E[E.MOLD_BREAKER=104]="MOLD_BREAKER",E[E.SUPER_LUCK=105]="SUPER_LUCK",E[E.AFTERMATH=106]="AFTERMATH",E[E.ANTICIPATION=107]="ANTICIPATION",E[E.FOREWARN=108]="FOREWARN",E[E.UNAWARE=109]="UNAWARE",E[E.TINTED_LENS=110]="TINTED_LENS",E[E.FILTER=111]="FILTER",E[E.SLOW_START=112]="SLOW_START",E[E.SCRAPPY=113]="SCRAPPY",E[E.STORM_DRAIN=114]="STORM_DRAIN",E[E.ICE_BODY=115]="ICE_BODY",E[E.SOLID_ROCK=116]="SOLID_ROCK",E[E.SNOW_WARNING=117]="SNOW_WARNING",E[E.HONEY_GATHER=118]="HONEY_GATHER",E[E.FRISK=119]="FRISK",E[E.RECKLESS=120]="RECKLESS",E[E.MULTITYPE=121]="MULTITYPE",E[E.FLOWER_GIFT=122]="FLOWER_GIFT",E[E.BAD_DREAMS=123]="BAD_DREAMS",E[E.PICKPOCKET=124]="PICKPOCKET",E[E.SHEER_FORCE=125]="SHEER_FORCE",E[E.CONTRARY=126]="CONTRARY",E[E.UNNERVE=127]="UNNERVE",E[E.DEFIANT=128]="DEFIANT",E[E.DEFEATIST=129]="DEFEATIST",E[E.CURSED_BODY=130]="CURSED_BODY",E[E.HEALER=131]="HEALER",E[E.FRIEND_GUARD=132]="FRIEND_GUARD",E[E.WEAK_ARMOR=133]="WEAK_ARMOR",E[E.HEAVY_METAL=134]="HEAVY_METAL",E[E.LIGHT_METAL=135]="LIGHT_METAL",E[E.MULTISCALE=136]="MULTISCALE",E[E.TOXIC_BOOST=137]="TOXIC_BOOST",E[E.FLARE_BOOST=138]="FLARE_BOOST",E[E.HARVEST=139]="HARVEST",E[E.TELEPATHY=140]="TELEPATHY",E[E.MOODY=141]="MOODY",E[E.OVERCOAT=142]="OVERCOAT",E[E.POISON_TOUCH=143]="POISON_TOUCH",E[E.REGENERATOR=144]="REGENERATOR",E[E.BIG_PECKS=145]="BIG_PECKS",E[E.SAND_RUSH=146]="SAND_RUSH",E[E.WONDER_SKIN=147]="WONDER_SKIN",E[E.ANALYTIC=148]="ANALYTIC",E[E.ILLUSION=149]="ILLUSION",E[E.IMPOSTER=150]="IMPOSTER",E[E.INFILTRATOR=151]="INFILTRATOR",E[E.MUMMY=152]="MUMMY",E[E.MOXIE=153]="MOXIE",E[E.JUSTIFIED=154]="JUSTIFIED",E[E.RATTLED=155]="RATTLED",E[E.MAGIC_BOUNCE=156]="MAGIC_BOUNCE",E[E.SAP_SIPPER=157]="SAP_SIPPER",E[E.PRANKSTER=158]="PRANKSTER",E[E.SAND_FORCE=159]="SAND_FORCE",E[E.IRON_BARBS=160]="IRON_BARBS",E[E.ZEN_MODE=161]="ZEN_MODE",E[E.VICTORY_STAR=162]="VICTORY_STAR",E[E.TURBOBLAZE=163]="TURBOBLAZE",E[E.TERAVOLT=164]="TERAVOLT",E[E.AROMA_VEIL=165]="AROMA_VEIL",E[E.FLOWER_VEIL=166]="FLOWER_VEIL",E[E.CHEEK_POUCH=167]="CHEEK_POUCH",E[E.PROTEAN=168]="PROTEAN",E[E.FUR_COAT=169]="FUR_COAT",E[E.MAGICIAN=170]="MAGICIAN",E[E.BULLETPROOF=171]="BULLETPROOF",E[E.COMPETITIVE=172]="COMPETITIVE",E[E.STRONG_JAW=173]="STRONG_JAW",E[E.REFRIGERATE=174]="REFRIGERATE",E[E.SWEET_VEIL=175]="SWEET_VEIL",E[E.STANCE_CHANGE=176]="STANCE_CHANGE",E[E.GALE_WINGS=177]="GALE_WINGS",E[E.MEGA_LAUNCHER=178]="MEGA_LAUNCHER",E[E.GRASS_PELT=179]="GRASS_PELT",E[E.SYMBIOSIS=180]="SYMBIOSIS",E[E.TOUGH_CLAWS=181]="TOUGH_CLAWS",E[E.PIXILATE=182]="PIXILATE",E[E.GOOEY=183]="GOOEY",E[E.AERILATE=184]="AERILATE",E[E.PARENTAL_BOND=185]="PARENTAL_BOND",E[E.DARK_AURA=186]="DARK_AURA",E[E.FAIRY_AURA=187]="FAIRY_AURA",E[E.AURA_BREAK=188]="AURA_BREAK",E[E.PRIMORDIAL_SEA=189]="PRIMORDIAL_SEA",E[E.DESOLATE_LAND=190]="DESOLATE_LAND",E[E.DELTA_STREAM=191]="DELTA_STREAM",E[E.STAMINA=192]="STAMINA",E[E.WIMP_OUT=193]="WIMP_OUT",E[E.EMERGENCY_EXIT=194]="EMERGENCY_EXIT",E[E.WATER_COMPACTION=195]="WATER_COMPACTION",E[E.MERCILESS=196]="MERCILESS",E[E.SHIELDS_DOWN=197]="SHIELDS_DOWN",E[E.STAKEOUT=198]="STAKEOUT",E[E.WATER_BUBBLE=199]="WATER_BUBBLE",E[E.STEELWORKER=200]="STEELWORKER",E[E.BERSERK=201]="BERSERK",E[E.SLUSH_RUSH=202]="SLUSH_RUSH",E[E.LONG_REACH=203]="LONG_REACH",E[E.LIQUID_VOICE=204]="LIQUID_VOICE",E[E.TRIAGE=205]="TRIAGE",E[E.GALVANIZE=206]="GALVANIZE",E[E.SURGE_SURFER=207]="SURGE_SURFER",E[E.SCHOOLING=208]="SCHOOLING",E[E.DISGUISE=209]="DISGUISE",E[E.BATTLE_BOND=210]="BATTLE_BOND",E[E.POWER_CONSTRUCT=211]="POWER_CONSTRUCT",E[E.CORROSION=212]="CORROSION",E[E.COMATOSE=213]="COMATOSE",E[E.QUEENLY_MAJESTY=214]="QUEENLY_MAJESTY",E[E.INNARDS_OUT=215]="INNARDS_OUT",E[E.DANCER=216]="DANCER",E[E.BATTERY=217]="BATTERY",E[E.FLUFFY=218]="FLUFFY",E[E.DAZZLING=219]="DAZZLING",E[E.SOUL_HEART=220]="SOUL_HEART",E[E.TANGLING_HAIR=221]="TANGLING_HAIR",E[E.RECEIVER=222]="RECEIVER",E[E.POWER_OF_ALCHEMY=223]="POWER_OF_ALCHEMY",E[E.BEAST_BOOST=224]="BEAST_BOOST",E[E.RKS_SYSTEM=225]="RKS_SYSTEM",E[E.ELECTRIC_SURGE=226]="ELECTRIC_SURGE",E[E.PSYCHIC_SURGE=227]="PSYCHIC_SURGE",E[E.MISTY_SURGE=228]="MISTY_SURGE",E[E.GRASSY_SURGE=229]="GRASSY_SURGE",E[E.FULL_METAL_BODY=230]="FULL_METAL_BODY",E[E.SHADOW_SHIELD=231]="SHADOW_SHIELD",E[E.PRISM_ARMOR=232]="PRISM_ARMOR",E[E.NEUROFORCE=233]="NEUROFORCE",E[E.INTREPID_SWORD=234]="INTREPID_SWORD",E[E.DAUNTLESS_SHIELD=235]="DAUNTLESS_SHIELD",E[E.LIBERO=236]="LIBERO",E[E.BALL_FETCH=237]="BALL_FETCH",E[E.COTTON_DOWN=238]="COTTON_DOWN",E[E.PROPELLER_TAIL=239]="PROPELLER_TAIL",E[E.MIRROR_ARMOR=240]="MIRROR_ARMOR",E[E.GULP_MISSILE=241]="GULP_MISSILE",E[E.STALWART=242]="STALWART",E[E.STEAM_ENGINE=243]="STEAM_ENGINE",E[E.PUNK_ROCK=244]="PUNK_ROCK",E[E.SAND_SPIT=245]="SAND_SPIT",E[E.ICE_SCALES=246]="ICE_SCALES",E[E.RIPEN=247]="RIPEN",E[E.ICE_FACE=248]="ICE_FACE",E[E.POWER_SPOT=249]="POWER_SPOT",E[E.MIMICRY=250]="MIMICRY",E[E.SCREEN_CLEANER=251]="SCREEN_CLEANER",E[E.STEELY_SPIRIT=252]="STEELY_SPIRIT",E[E.PERISH_BODY=253]="PERISH_BODY",E[E.WANDERING_SPIRIT=254]="WANDERING_SPIRIT",E[E.GORILLA_TACTICS=255]="GORILLA_TACTICS",E[E.NEUTRALIZING_GAS=256]="NEUTRALIZING_GAS",E[E.PASTEL_VEIL=257]="PASTEL_VEIL",E[E.HUNGER_SWITCH=258]="HUNGER_SWITCH",E[E.QUICK_DRAW=259]="QUICK_DRAW",E[E.UNSEEN_FIST=260]="UNSEEN_FIST",E[E.CURIOUS_MEDICINE=261]="CURIOUS_MEDICINE",E[E.TRANSISTOR=262]="TRANSISTOR",E[E.DRAGONS_MAW=263]="DRAGONS_MAW",E[E.CHILLING_NEIGH=264]="CHILLING_NEIGH",E[E.GRIM_NEIGH=265]="GRIM_NEIGH",E[E.AS_ONE_GLASTRIER=266]="AS_ONE_GLASTRIER",E[E.AS_ONE_SPECTRIER=267]="AS_ONE_SPECTRIER",E[E.LINGERING_AROMA=268]="LINGERING_AROMA",E[E.SEED_SOWER=269]="SEED_SOWER",E[E.THERMAL_EXCHANGE=270]="THERMAL_EXCHANGE",E[E.ANGER_SHELL=271]="ANGER_SHELL",E[E.PURIFYING_SALT=272]="PURIFYING_SALT",E[E.WELL_BAKED_BODY=273]="WELL_BAKED_BODY",E[E.WIND_RIDER=274]="WIND_RIDER",E[E.GUARD_DOG=275]="GUARD_DOG",E[E.ROCKY_PAYLOAD=276]="ROCKY_PAYLOAD",E[E.WIND_POWER=277]="WIND_POWER",E[E.ZERO_TO_HERO=278]="ZERO_TO_HERO",E[E.COMMANDER=279]="COMMANDER",E[E.ELECTROMORPHOSIS=280]="ELECTROMORPHOSIS",E[E.PROTOSYNTHESIS=281]="PROTOSYNTHESIS",E[E.QUARK_DRIVE=282]="QUARK_DRIVE",E[E.GOOD_AS_GOLD=283]="GOOD_AS_GOLD",E[E.VESSEL_OF_RUIN=284]="VESSEL_OF_RUIN",E[E.SWORD_OF_RUIN=285]="SWORD_OF_RUIN",E[E.TABLETS_OF_RUIN=286]="TABLETS_OF_RUIN",E[E.BEADS_OF_RUIN=287]="BEADS_OF_RUIN",E[E.ORICHALCUM_PULSE=288]="ORICHALCUM_PULSE",E[E.HADRON_ENGINE=289]="HADRON_ENGINE",E[E.OPPORTUNIST=290]="OPPORTUNIST",E[E.CUD_CHEW=291]="CUD_CHEW",E[E.SHARPNESS=292]="SHARPNESS",E[E.SUPREME_OVERLORD=293]="SUPREME_OVERLORD",E[E.COSTAR=294]="COSTAR",E[E.TOXIC_DEBRIS=295]="TOXIC_DEBRIS",E[E.ARMOR_TAIL=296]="ARMOR_TAIL",E[E.EARTH_EATER=297]="EARTH_EATER",E[E.MYCELIUM_MIGHT=298]="MYCELIUM_MIGHT",E[E.MINDS_EYE=299]="MINDS_EYE",E[E.SUPERSWEET_SYRUP=300]="SUPERSWEET_SYRUP",E[E.HOSPITALITY=301]="HOSPITALITY",E[E.TOXIC_CHAIN=302]="TOXIC_CHAIN",E[E.EMBODY_ASPECT_TEAL=303]="EMBODY_ASPECT_TEAL",E[E.EMBODY_ASPECT_WELLSPRING=304]="EMBODY_ASPECT_WELLSPRING",E[E.EMBODY_ASPECT_HEARTHFLAME=305]="EMBODY_ASPECT_HEARTHFLAME",E[E.EMBODY_ASPECT_CORNERSTONE=306]="EMBODY_ASPECT_CORNERSTONE",E[E.TERA_SHIFT=307]="TERA_SHIFT",E[E.TERA_SHELL=308]="TERA_SHELL",E[E.TERAFORM_ZERO=309]="TERAFORM_ZERO",E[E.POISON_PUPPETEER=310]="POISON_PUPPETEER",E))(O||{}),Pe=(E=>(E[E.WEAKEST=0]="WEAKEST",E[E.WEAKER=1]="WEAKER",E[E.WEAK=2]="WEAK",E[E.AVERAGE=3]="AVERAGE",E[E.STRONG=4]="STRONG",E[E.STRONGER=5]="STRONGER",E))(Pe||{}),e=(E=>(E[E.BULBASAUR=1]="BULBASAUR",E[E.IVYSAUR=2]="IVYSAUR",E[E.VENUSAUR=3]="VENUSAUR",E[E.CHARMANDER=4]="CHARMANDER",E[E.CHARMELEON=5]="CHARMELEON",E[E.CHARIZARD=6]="CHARIZARD",E[E.SQUIRTLE=7]="SQUIRTLE",E[E.WARTORTLE=8]="WARTORTLE",E[E.BLASTOISE=9]="BLASTOISE",E[E.CATERPIE=10]="CATERPIE",E[E.METAPOD=11]="METAPOD",E[E.BUTTERFREE=12]="BUTTERFREE",E[E.WEEDLE=13]="WEEDLE",E[E.KAKUNA=14]="KAKUNA",E[E.BEEDRILL=15]="BEEDRILL",E[E.PIDGEY=16]="PIDGEY",E[E.PIDGEOTTO=17]="PIDGEOTTO",E[E.PIDGEOT=18]="PIDGEOT",E[E.RATTATA=19]="RATTATA",E[E.RATICATE=20]="RATICATE",E[E.SPEAROW=21]="SPEAROW",E[E.FEAROW=22]="FEAROW",E[E.EKANS=23]="EKANS",E[E.ARBOK=24]="ARBOK",E[E.PIKACHU=25]="PIKACHU",E[E.RAICHU=26]="RAICHU",E[E.SANDSHREW=27]="SANDSHREW",E[E.SANDSLASH=28]="SANDSLASH",E[E.NIDORAN_F=29]="NIDORAN_F",E[E.NIDORINA=30]="NIDORINA",E[E.NIDOQUEEN=31]="NIDOQUEEN",E[E.NIDORAN_M=32]="NIDORAN_M",E[E.NIDORINO=33]="NIDORINO",E[E.NIDOKING=34]="NIDOKING",E[E.CLEFAIRY=35]="CLEFAIRY",E[E.CLEFABLE=36]="CLEFABLE",E[E.VULPIX=37]="VULPIX",E[E.NINETALES=38]="NINETALES",E[E.JIGGLYPUFF=39]="JIGGLYPUFF",E[E.WIGGLYTUFF=40]="WIGGLYTUFF",E[E.ZUBAT=41]="ZUBAT",E[E.GOLBAT=42]="GOLBAT",E[E.ODDISH=43]="ODDISH",E[E.GLOOM=44]="GLOOM",E[E.VILEPLUME=45]="VILEPLUME",E[E.PARAS=46]="PARAS",E[E.PARASECT=47]="PARASECT",E[E.VENONAT=48]="VENONAT",E[E.VENOMOTH=49]="VENOMOTH",E[E.DIGLETT=50]="DIGLETT",E[E.DUGTRIO=51]="DUGTRIO",E[E.MEOWTH=52]="MEOWTH",E[E.PERSIAN=53]="PERSIAN",E[E.PSYDUCK=54]="PSYDUCK",E[E.GOLDUCK=55]="GOLDUCK",E[E.MANKEY=56]="MANKEY",E[E.PRIMEAPE=57]="PRIMEAPE",E[E.GROWLITHE=58]="GROWLITHE",E[E.ARCANINE=59]="ARCANINE",E[E.POLIWAG=60]="POLIWAG",E[E.POLIWHIRL=61]="POLIWHIRL",E[E.POLIWRATH=62]="POLIWRATH",E[E.ABRA=63]="ABRA",E[E.KADABRA=64]="KADABRA",E[E.ALAKAZAM=65]="ALAKAZAM",E[E.MACHOP=66]="MACHOP",E[E.MACHOKE=67]="MACHOKE",E[E.MACHAMP=68]="MACHAMP",E[E.BELLSPROUT=69]="BELLSPROUT",E[E.WEEPINBELL=70]="WEEPINBELL",E[E.VICTREEBEL=71]="VICTREEBEL",E[E.TENTACOOL=72]="TENTACOOL",E[E.TENTACRUEL=73]="TENTACRUEL",E[E.GEODUDE=74]="GEODUDE",E[E.GRAVELER=75]="GRAVELER",E[E.GOLEM=76]="GOLEM",E[E.PONYTA=77]="PONYTA",E[E.RAPIDASH=78]="RAPIDASH",E[E.SLOWPOKE=79]="SLOWPOKE",E[E.SLOWBRO=80]="SLOWBRO",E[E.MAGNEMITE=81]="MAGNEMITE",E[E.MAGNETON=82]="MAGNETON",E[E.FARFETCHD=83]="FARFETCHD",E[E.DODUO=84]="DODUO",E[E.DODRIO=85]="DODRIO",E[E.SEEL=86]="SEEL",E[E.DEWGONG=87]="DEWGONG",E[E.GRIMER=88]="GRIMER",E[E.MUK=89]="MUK",E[E.SHELLDER=90]="SHELLDER",E[E.CLOYSTER=91]="CLOYSTER",E[E.GASTLY=92]="GASTLY",E[E.HAUNTER=93]="HAUNTER",E[E.GENGAR=94]="GENGAR",E[E.ONIX=95]="ONIX",E[E.DROWZEE=96]="DROWZEE",E[E.HYPNO=97]="HYPNO",E[E.KRABBY=98]="KRABBY",E[E.KINGLER=99]="KINGLER",E[E.VOLTORB=100]="VOLTORB",E[E.ELECTRODE=101]="ELECTRODE",E[E.EXEGGCUTE=102]="EXEGGCUTE",E[E.EXEGGUTOR=103]="EXEGGUTOR",E[E.CUBONE=104]="CUBONE",E[E.MAROWAK=105]="MAROWAK",E[E.HITMONLEE=106]="HITMONLEE",E[E.HITMONCHAN=107]="HITMONCHAN",E[E.LICKITUNG=108]="LICKITUNG",E[E.KOFFING=109]="KOFFING",E[E.WEEZING=110]="WEEZING",E[E.RHYHORN=111]="RHYHORN",E[E.RHYDON=112]="RHYDON",E[E.CHANSEY=113]="CHANSEY",E[E.TANGELA=114]="TANGELA",E[E.KANGASKHAN=115]="KANGASKHAN",E[E.HORSEA=116]="HORSEA",E[E.SEADRA=117]="SEADRA",E[E.GOLDEEN=118]="GOLDEEN",E[E.SEAKING=119]="SEAKING",E[E.STARYU=120]="STARYU",E[E.STARMIE=121]="STARMIE",E[E.MR_MIME=122]="MR_MIME",E[E.SCYTHER=123]="SCYTHER",E[E.JYNX=124]="JYNX",E[E.ELECTABUZZ=125]="ELECTABUZZ",E[E.MAGMAR=126]="MAGMAR",E[E.PINSIR=127]="PINSIR",E[E.TAUROS=128]="TAUROS",E[E.MAGIKARP=129]="MAGIKARP",E[E.GYARADOS=130]="GYARADOS",E[E.LAPRAS=131]="LAPRAS",E[E.DITTO=132]="DITTO",E[E.EEVEE=133]="EEVEE",E[E.VAPOREON=134]="VAPOREON",E[E.JOLTEON=135]="JOLTEON",E[E.FLAREON=136]="FLAREON",E[E.PORYGON=137]="PORYGON",E[E.OMANYTE=138]="OMANYTE",E[E.OMASTAR=139]="OMASTAR",E[E.KABUTO=140]="KABUTO",E[E.KABUTOPS=141]="KABUTOPS",E[E.AERODACTYL=142]="AERODACTYL",E[E.SNORLAX=143]="SNORLAX",E[E.ARTICUNO=144]="ARTICUNO",E[E.ZAPDOS=145]="ZAPDOS",E[E.MOLTRES=146]="MOLTRES",E[E.DRATINI=147]="DRATINI",E[E.DRAGONAIR=148]="DRAGONAIR",E[E.DRAGONITE=149]="DRAGONITE",E[E.MEWTWO=150]="MEWTWO",E[E.MEW=151]="MEW",E[E.CHIKORITA=152]="CHIKORITA",E[E.BAYLEEF=153]="BAYLEEF",E[E.MEGANIUM=154]="MEGANIUM",E[E.CYNDAQUIL=155]="CYNDAQUIL",E[E.QUILAVA=156]="QUILAVA",E[E.TYPHLOSION=157]="TYPHLOSION",E[E.TOTODILE=158]="TOTODILE",E[E.CROCONAW=159]="CROCONAW",E[E.FERALIGATR=160]="FERALIGATR",E[E.SENTRET=161]="SENTRET",E[E.FURRET=162]="FURRET",E[E.HOOTHOOT=163]="HOOTHOOT",E[E.NOCTOWL=164]="NOCTOWL",E[E.LEDYBA=165]="LEDYBA",E[E.LEDIAN=166]="LEDIAN",E[E.SPINARAK=167]="SPINARAK",E[E.ARIADOS=168]="ARIADOS",E[E.CROBAT=169]="CROBAT",E[E.CHINCHOU=170]="CHINCHOU",E[E.LANTURN=171]="LANTURN",E[E.PICHU=172]="PICHU",E[E.CLEFFA=173]="CLEFFA",E[E.IGGLYBUFF=174]="IGGLYBUFF",E[E.TOGEPI=175]="TOGEPI",E[E.TOGETIC=176]="TOGETIC",E[E.NATU=177]="NATU",E[E.XATU=178]="XATU",E[E.MAREEP=179]="MAREEP",E[E.FLAAFFY=180]="FLAAFFY",E[E.AMPHAROS=181]="AMPHAROS",E[E.BELLOSSOM=182]="BELLOSSOM",E[E.MARILL=183]="MARILL",E[E.AZUMARILL=184]="AZUMARILL",E[E.SUDOWOODO=185]="SUDOWOODO",E[E.POLITOED=186]="POLITOED",E[E.HOPPIP=187]="HOPPIP",E[E.SKIPLOOM=188]="SKIPLOOM",E[E.JUMPLUFF=189]="JUMPLUFF",E[E.AIPOM=190]="AIPOM",E[E.SUNKERN=191]="SUNKERN",E[E.SUNFLORA=192]="SUNFLORA",E[E.YANMA=193]="YANMA",E[E.WOOPER=194]="WOOPER",E[E.QUAGSIRE=195]="QUAGSIRE",E[E.ESPEON=196]="ESPEON",E[E.UMBREON=197]="UMBREON",E[E.MURKROW=198]="MURKROW",E[E.SLOWKING=199]="SLOWKING",E[E.MISDREAVUS=200]="MISDREAVUS",E[E.UNOWN=201]="UNOWN",E[E.WOBBUFFET=202]="WOBBUFFET",E[E.GIRAFARIG=203]="GIRAFARIG",E[E.PINECO=204]="PINECO",E[E.FORRETRESS=205]="FORRETRESS",E[E.DUNSPARCE=206]="DUNSPARCE",E[E.GLIGAR=207]="GLIGAR",E[E.STEELIX=208]="STEELIX",E[E.SNUBBULL=209]="SNUBBULL",E[E.GRANBULL=210]="GRANBULL",E[E.QWILFISH=211]="QWILFISH",E[E.SCIZOR=212]="SCIZOR",E[E.SHUCKLE=213]="SHUCKLE",E[E.HERACROSS=214]="HERACROSS",E[E.SNEASEL=215]="SNEASEL",E[E.TEDDIURSA=216]="TEDDIURSA",E[E.URSARING=217]="URSARING",E[E.SLUGMA=218]="SLUGMA",E[E.MAGCARGO=219]="MAGCARGO",E[E.SWINUB=220]="SWINUB",E[E.PILOSWINE=221]="PILOSWINE",E[E.CORSOLA=222]="CORSOLA",E[E.REMORAID=223]="REMORAID",E[E.OCTILLERY=224]="OCTILLERY",E[E.DELIBIRD=225]="DELIBIRD",E[E.MANTINE=226]="MANTINE",E[E.SKARMORY=227]="SKARMORY",E[E.HOUNDOUR=228]="HOUNDOUR",E[E.HOUNDOOM=229]="HOUNDOOM",E[E.KINGDRA=230]="KINGDRA",E[E.PHANPY=231]="PHANPY",E[E.DONPHAN=232]="DONPHAN",E[E.PORYGON2=233]="PORYGON2",E[E.STANTLER=234]="STANTLER",E[E.SMEARGLE=235]="SMEARGLE",E[E.TYROGUE=236]="TYROGUE",E[E.HITMONTOP=237]="HITMONTOP",E[E.SMOOCHUM=238]="SMOOCHUM",E[E.ELEKID=239]="ELEKID",E[E.MAGBY=240]="MAGBY",E[E.MILTANK=241]="MILTANK",E[E.BLISSEY=242]="BLISSEY",E[E.RAIKOU=243]="RAIKOU",E[E.ENTEI=244]="ENTEI",E[E.SUICUNE=245]="SUICUNE",E[E.LARVITAR=246]="LARVITAR",E[E.PUPITAR=247]="PUPITAR",E[E.TYRANITAR=248]="TYRANITAR",E[E.LUGIA=249]="LUGIA",E[E.HO_OH=250]="HO_OH",E[E.CELEBI=251]="CELEBI",E[E.TREECKO=252]="TREECKO",E[E.GROVYLE=253]="GROVYLE",E[E.SCEPTILE=254]="SCEPTILE",E[E.TORCHIC=255]="TORCHIC",E[E.COMBUSKEN=256]="COMBUSKEN",E[E.BLAZIKEN=257]="BLAZIKEN",E[E.MUDKIP=258]="MUDKIP",E[E.MARSHTOMP=259]="MARSHTOMP",E[E.SWAMPERT=260]="SWAMPERT",E[E.POOCHYENA=261]="POOCHYENA",E[E.MIGHTYENA=262]="MIGHTYENA",E[E.ZIGZAGOON=263]="ZIGZAGOON",E[E.LINOONE=264]="LINOONE",E[E.WURMPLE=265]="WURMPLE",E[E.SILCOON=266]="SILCOON",E[E.BEAUTIFLY=267]="BEAUTIFLY",E[E.CASCOON=268]="CASCOON",E[E.DUSTOX=269]="DUSTOX",E[E.LOTAD=270]="LOTAD",E[E.LOMBRE=271]="LOMBRE",E[E.LUDICOLO=272]="LUDICOLO",E[E.SEEDOT=273]="SEEDOT",E[E.NUZLEAF=274]="NUZLEAF",E[E.SHIFTRY=275]="SHIFTRY",E[E.TAILLOW=276]="TAILLOW",E[E.SWELLOW=277]="SWELLOW",E[E.WINGULL=278]="WINGULL",E[E.PELIPPER=279]="PELIPPER",E[E.RALTS=280]="RALTS",E[E.KIRLIA=281]="KIRLIA",E[E.GARDEVOIR=282]="GARDEVOIR",E[E.SURSKIT=283]="SURSKIT",E[E.MASQUERAIN=284]="MASQUERAIN",E[E.SHROOMISH=285]="SHROOMISH",E[E.BRELOOM=286]="BRELOOM",E[E.SLAKOTH=287]="SLAKOTH",E[E.VIGOROTH=288]="VIGOROTH",E[E.SLAKING=289]="SLAKING",E[E.NINCADA=290]="NINCADA",E[E.NINJASK=291]="NINJASK",E[E.SHEDINJA=292]="SHEDINJA",E[E.WHISMUR=293]="WHISMUR",E[E.LOUDRED=294]="LOUDRED",E[E.EXPLOUD=295]="EXPLOUD",E[E.MAKUHITA=296]="MAKUHITA",E[E.HARIYAMA=297]="HARIYAMA",E[E.AZURILL=298]="AZURILL",E[E.NOSEPASS=299]="NOSEPASS",E[E.SKITTY=300]="SKITTY",E[E.DELCATTY=301]="DELCATTY",E[E.SABLEYE=302]="SABLEYE",E[E.MAWILE=303]="MAWILE",E[E.ARON=304]="ARON",E[E.LAIRON=305]="LAIRON",E[E.AGGRON=306]="AGGRON",E[E.MEDITITE=307]="MEDITITE",E[E.MEDICHAM=308]="MEDICHAM",E[E.ELECTRIKE=309]="ELECTRIKE",E[E.MANECTRIC=310]="MANECTRIC",E[E.PLUSLE=311]="PLUSLE",E[E.MINUN=312]="MINUN",E[E.VOLBEAT=313]="VOLBEAT",E[E.ILLUMISE=314]="ILLUMISE",E[E.ROSELIA=315]="ROSELIA",E[E.GULPIN=316]="GULPIN",E[E.SWALOT=317]="SWALOT",E[E.CARVANHA=318]="CARVANHA",E[E.SHARPEDO=319]="SHARPEDO",E[E.WAILMER=320]="WAILMER",E[E.WAILORD=321]="WAILORD",E[E.NUMEL=322]="NUMEL",E[E.CAMERUPT=323]="CAMERUPT",E[E.TORKOAL=324]="TORKOAL",E[E.SPOINK=325]="SPOINK",E[E.GRUMPIG=326]="GRUMPIG",E[E.SPINDA=327]="SPINDA",E[E.TRAPINCH=328]="TRAPINCH",E[E.VIBRAVA=329]="VIBRAVA",E[E.FLYGON=330]="FLYGON",E[E.CACNEA=331]="CACNEA",E[E.CACTURNE=332]="CACTURNE",E[E.SWABLU=333]="SWABLU",E[E.ALTARIA=334]="ALTARIA",E[E.ZANGOOSE=335]="ZANGOOSE",E[E.SEVIPER=336]="SEVIPER",E[E.LUNATONE=337]="LUNATONE",E[E.SOLROCK=338]="SOLROCK",E[E.BARBOACH=339]="BARBOACH",E[E.WHISCASH=340]="WHISCASH",E[E.CORPHISH=341]="CORPHISH",E[E.CRAWDAUNT=342]="CRAWDAUNT",E[E.BALTOY=343]="BALTOY",E[E.CLAYDOL=344]="CLAYDOL",E[E.LILEEP=345]="LILEEP",E[E.CRADILY=346]="CRADILY",E[E.ANORITH=347]="ANORITH",E[E.ARMALDO=348]="ARMALDO",E[E.FEEBAS=349]="FEEBAS",E[E.MILOTIC=350]="MILOTIC",E[E.CASTFORM=351]="CASTFORM",E[E.KECLEON=352]="KECLEON",E[E.SHUPPET=353]="SHUPPET",E[E.BANETTE=354]="BANETTE",E[E.DUSKULL=355]="DUSKULL",E[E.DUSCLOPS=356]="DUSCLOPS",E[E.TROPIUS=357]="TROPIUS",E[E.CHIMECHO=358]="CHIMECHO",E[E.ABSOL=359]="ABSOL",E[E.WYNAUT=360]="WYNAUT",E[E.SNORUNT=361]="SNORUNT",E[E.GLALIE=362]="GLALIE",E[E.SPHEAL=363]="SPHEAL",E[E.SEALEO=364]="SEALEO",E[E.WALREIN=365]="WALREIN",E[E.CLAMPERL=366]="CLAMPERL",E[E.HUNTAIL=367]="HUNTAIL",E[E.GOREBYSS=368]="GOREBYSS",E[E.RELICANTH=369]="RELICANTH",E[E.LUVDISC=370]="LUVDISC",E[E.BAGON=371]="BAGON",E[E.SHELGON=372]="SHELGON",E[E.SALAMENCE=373]="SALAMENCE",E[E.BELDUM=374]="BELDUM",E[E.METANG=375]="METANG",E[E.METAGROSS=376]="METAGROSS",E[E.REGIROCK=377]="REGIROCK",E[E.REGICE=378]="REGICE",E[E.REGISTEEL=379]="REGISTEEL",E[E.LATIAS=380]="LATIAS",E[E.LATIOS=381]="LATIOS",E[E.KYOGRE=382]="KYOGRE",E[E.GROUDON=383]="GROUDON",E[E.RAYQUAZA=384]="RAYQUAZA",E[E.JIRACHI=385]="JIRACHI",E[E.DEOXYS=386]="DEOXYS",E[E.TURTWIG=387]="TURTWIG",E[E.GROTLE=388]="GROTLE",E[E.TORTERRA=389]="TORTERRA",E[E.CHIMCHAR=390]="CHIMCHAR",E[E.MONFERNO=391]="MONFERNO",E[E.INFERNAPE=392]="INFERNAPE",E[E.PIPLUP=393]="PIPLUP",E[E.PRINPLUP=394]="PRINPLUP",E[E.EMPOLEON=395]="EMPOLEON",E[E.STARLY=396]="STARLY",E[E.STARAVIA=397]="STARAVIA",E[E.STARAPTOR=398]="STARAPTOR",E[E.BIDOOF=399]="BIDOOF",E[E.BIBAREL=400]="BIBAREL",E[E.KRICKETOT=401]="KRICKETOT",E[E.KRICKETUNE=402]="KRICKETUNE",E[E.SHINX=403]="SHINX",E[E.LUXIO=404]="LUXIO",E[E.LUXRAY=405]="LUXRAY",E[E.BUDEW=406]="BUDEW",E[E.ROSERADE=407]="ROSERADE",E[E.CRANIDOS=408]="CRANIDOS",E[E.RAMPARDOS=409]="RAMPARDOS",E[E.SHIELDON=410]="SHIELDON",E[E.BASTIODON=411]="BASTIODON",E[E.BURMY=412]="BURMY",E[E.WORMADAM=413]="WORMADAM",E[E.MOTHIM=414]="MOTHIM",E[E.COMBEE=415]="COMBEE",E[E.VESPIQUEN=416]="VESPIQUEN",E[E.PACHIRISU=417]="PACHIRISU",E[E.BUIZEL=418]="BUIZEL",E[E.FLOATZEL=419]="FLOATZEL",E[E.CHERUBI=420]="CHERUBI",E[E.CHERRIM=421]="CHERRIM",E[E.SHELLOS=422]="SHELLOS",E[E.GASTRODON=423]="GASTRODON",E[E.AMBIPOM=424]="AMBIPOM",E[E.DRIFLOON=425]="DRIFLOON",E[E.DRIFBLIM=426]="DRIFBLIM",E[E.BUNEARY=427]="BUNEARY",E[E.LOPUNNY=428]="LOPUNNY",E[E.MISMAGIUS=429]="MISMAGIUS",E[E.HONCHKROW=430]="HONCHKROW",E[E.GLAMEOW=431]="GLAMEOW",E[E.PURUGLY=432]="PURUGLY",E[E.CHINGLING=433]="CHINGLING",E[E.STUNKY=434]="STUNKY",E[E.SKUNTANK=435]="SKUNTANK",E[E.BRONZOR=436]="BRONZOR",E[E.BRONZONG=437]="BRONZONG",E[E.BONSLY=438]="BONSLY",E[E.MIME_JR=439]="MIME_JR",E[E.HAPPINY=440]="HAPPINY",E[E.CHATOT=441]="CHATOT",E[E.SPIRITOMB=442]="SPIRITOMB",E[E.GIBLE=443]="GIBLE",E[E.GABITE=444]="GABITE",E[E.GARCHOMP=445]="GARCHOMP",E[E.MUNCHLAX=446]="MUNCHLAX",E[E.RIOLU=447]="RIOLU",E[E.LUCARIO=448]="LUCARIO",E[E.HIPPOPOTAS=449]="HIPPOPOTAS",E[E.HIPPOWDON=450]="HIPPOWDON",E[E.SKORUPI=451]="SKORUPI",E[E.DRAPION=452]="DRAPION",E[E.CROAGUNK=453]="CROAGUNK",E[E.TOXICROAK=454]="TOXICROAK",E[E.CARNIVINE=455]="CARNIVINE",E[E.FINNEON=456]="FINNEON",E[E.LUMINEON=457]="LUMINEON",E[E.MANTYKE=458]="MANTYKE",E[E.SNOVER=459]="SNOVER",E[E.ABOMASNOW=460]="ABOMASNOW",E[E.WEAVILE=461]="WEAVILE",E[E.MAGNEZONE=462]="MAGNEZONE",E[E.LICKILICKY=463]="LICKILICKY",E[E.RHYPERIOR=464]="RHYPERIOR",E[E.TANGROWTH=465]="TANGROWTH",E[E.ELECTIVIRE=466]="ELECTIVIRE",E[E.MAGMORTAR=467]="MAGMORTAR",E[E.TOGEKISS=468]="TOGEKISS",E[E.YANMEGA=469]="YANMEGA",E[E.LEAFEON=470]="LEAFEON",E[E.GLACEON=471]="GLACEON",E[E.GLISCOR=472]="GLISCOR",E[E.MAMOSWINE=473]="MAMOSWINE",E[E.PORYGON_Z=474]="PORYGON_Z",E[E.GALLADE=475]="GALLADE",E[E.PROBOPASS=476]="PROBOPASS",E[E.DUSKNOIR=477]="DUSKNOIR",E[E.FROSLASS=478]="FROSLASS",E[E.ROTOM=479]="ROTOM",E[E.UXIE=480]="UXIE",E[E.MESPRIT=481]="MESPRIT",E[E.AZELF=482]="AZELF",E[E.DIALGA=483]="DIALGA",E[E.PALKIA=484]="PALKIA",E[E.HEATRAN=485]="HEATRAN",E[E.REGIGIGAS=486]="REGIGIGAS",E[E.GIRATINA=487]="GIRATINA",E[E.CRESSELIA=488]="CRESSELIA",E[E.PHIONE=489]="PHIONE",E[E.MANAPHY=490]="MANAPHY",E[E.DARKRAI=491]="DARKRAI",E[E.SHAYMIN=492]="SHAYMIN",E[E.ARCEUS=493]="ARCEUS",E[E.VICTINI=494]="VICTINI",E[E.SNIVY=495]="SNIVY",E[E.SERVINE=496]="SERVINE",E[E.SERPERIOR=497]="SERPERIOR",E[E.TEPIG=498]="TEPIG",E[E.PIGNITE=499]="PIGNITE",E[E.EMBOAR=500]="EMBOAR",E[E.OSHAWOTT=501]="OSHAWOTT",E[E.DEWOTT=502]="DEWOTT",E[E.SAMUROTT=503]="SAMUROTT",E[E.PATRAT=504]="PATRAT",E[E.WATCHOG=505]="WATCHOG",E[E.LILLIPUP=506]="LILLIPUP",E[E.HERDIER=507]="HERDIER",E[E.STOUTLAND=508]="STOUTLAND",E[E.PURRLOIN=509]="PURRLOIN",E[E.LIEPARD=510]="LIEPARD",E[E.PANSAGE=511]="PANSAGE",E[E.SIMISAGE=512]="SIMISAGE",E[E.PANSEAR=513]="PANSEAR",E[E.SIMISEAR=514]="SIMISEAR",E[E.PANPOUR=515]="PANPOUR",E[E.SIMIPOUR=516]="SIMIPOUR",E[E.MUNNA=517]="MUNNA",E[E.MUSHARNA=518]="MUSHARNA",E[E.PIDOVE=519]="PIDOVE",E[E.TRANQUILL=520]="TRANQUILL",E[E.UNFEZANT=521]="UNFEZANT",E[E.BLITZLE=522]="BLITZLE",E[E.ZEBSTRIKA=523]="ZEBSTRIKA",E[E.ROGGENROLA=524]="ROGGENROLA",E[E.BOLDORE=525]="BOLDORE",E[E.GIGALITH=526]="GIGALITH",E[E.WOOBAT=527]="WOOBAT",E[E.SWOOBAT=528]="SWOOBAT",E[E.DRILBUR=529]="DRILBUR",E[E.EXCADRILL=530]="EXCADRILL",E[E.AUDINO=531]="AUDINO",E[E.TIMBURR=532]="TIMBURR",E[E.GURDURR=533]="GURDURR",E[E.CONKELDURR=534]="CONKELDURR",E[E.TYMPOLE=535]="TYMPOLE",E[E.PALPITOAD=536]="PALPITOAD",E[E.SEISMITOAD=537]="SEISMITOAD",E[E.THROH=538]="THROH",E[E.SAWK=539]="SAWK",E[E.SEWADDLE=540]="SEWADDLE",E[E.SWADLOON=541]="SWADLOON",E[E.LEAVANNY=542]="LEAVANNY",E[E.VENIPEDE=543]="VENIPEDE",E[E.WHIRLIPEDE=544]="WHIRLIPEDE",E[E.SCOLIPEDE=545]="SCOLIPEDE",E[E.COTTONEE=546]="COTTONEE",E[E.WHIMSICOTT=547]="WHIMSICOTT",E[E.PETILIL=548]="PETILIL",E[E.LILLIGANT=549]="LILLIGANT",E[E.BASCULIN=550]="BASCULIN",E[E.SANDILE=551]="SANDILE",E[E.KROKOROK=552]="KROKOROK",E[E.KROOKODILE=553]="KROOKODILE",E[E.DARUMAKA=554]="DARUMAKA",E[E.DARMANITAN=555]="DARMANITAN",E[E.MARACTUS=556]="MARACTUS",E[E.DWEBBLE=557]="DWEBBLE",E[E.CRUSTLE=558]="CRUSTLE",E[E.SCRAGGY=559]="SCRAGGY",E[E.SCRAFTY=560]="SCRAFTY",E[E.SIGILYPH=561]="SIGILYPH",E[E.YAMASK=562]="YAMASK",E[E.COFAGRIGUS=563]="COFAGRIGUS",E[E.TIRTOUGA=564]="TIRTOUGA",E[E.CARRACOSTA=565]="CARRACOSTA",E[E.ARCHEN=566]="ARCHEN",E[E.ARCHEOPS=567]="ARCHEOPS",E[E.TRUBBISH=568]="TRUBBISH",E[E.GARBODOR=569]="GARBODOR",E[E.ZORUA=570]="ZORUA",E[E.ZOROARK=571]="ZOROARK",E[E.MINCCINO=572]="MINCCINO",E[E.CINCCINO=573]="CINCCINO",E[E.GOTHITA=574]="GOTHITA",E[E.GOTHORITA=575]="GOTHORITA",E[E.GOTHITELLE=576]="GOTHITELLE",E[E.SOLOSIS=577]="SOLOSIS",E[E.DUOSION=578]="DUOSION",E[E.REUNICLUS=579]="REUNICLUS",E[E.DUCKLETT=580]="DUCKLETT",E[E.SWANNA=581]="SWANNA",E[E.VANILLITE=582]="VANILLITE",E[E.VANILLISH=583]="VANILLISH",E[E.VANILLUXE=584]="VANILLUXE",E[E.DEERLING=585]="DEERLING",E[E.SAWSBUCK=586]="SAWSBUCK",E[E.EMOLGA=587]="EMOLGA",E[E.KARRABLAST=588]="KARRABLAST",E[E.ESCAVALIER=589]="ESCAVALIER",E[E.FOONGUS=590]="FOONGUS",E[E.AMOONGUSS=591]="AMOONGUSS",E[E.FRILLISH=592]="FRILLISH",E[E.JELLICENT=593]="JELLICENT",E[E.ALOMOMOLA=594]="ALOMOMOLA",E[E.JOLTIK=595]="JOLTIK",E[E.GALVANTULA=596]="GALVANTULA",E[E.FERROSEED=597]="FERROSEED",E[E.FERROTHORN=598]="FERROTHORN",E[E.KLINK=599]="KLINK",E[E.KLANG=600]="KLANG",E[E.KLINKLANG=601]="KLINKLANG",E[E.TYNAMO=602]="TYNAMO",E[E.EELEKTRIK=603]="EELEKTRIK",E[E.EELEKTROSS=604]="EELEKTROSS",E[E.ELGYEM=605]="ELGYEM",E[E.BEHEEYEM=606]="BEHEEYEM",E[E.LITWICK=607]="LITWICK",E[E.LAMPENT=608]="LAMPENT",E[E.CHANDELURE=609]="CHANDELURE",E[E.AXEW=610]="AXEW",E[E.FRAXURE=611]="FRAXURE",E[E.HAXORUS=612]="HAXORUS",E[E.CUBCHOO=613]="CUBCHOO",E[E.BEARTIC=614]="BEARTIC",E[E.CRYOGONAL=615]="CRYOGONAL",E[E.SHELMET=616]="SHELMET",E[E.ACCELGOR=617]="ACCELGOR",E[E.STUNFISK=618]="STUNFISK",E[E.MIENFOO=619]="MIENFOO",E[E.MIENSHAO=620]="MIENSHAO",E[E.DRUDDIGON=621]="DRUDDIGON",E[E.GOLETT=622]="GOLETT",E[E.GOLURK=623]="GOLURK",E[E.PAWNIARD=624]="PAWNIARD",E[E.BISHARP=625]="BISHARP",E[E.BOUFFALANT=626]="BOUFFALANT",E[E.RUFFLET=627]="RUFFLET",E[E.BRAVIARY=628]="BRAVIARY",E[E.VULLABY=629]="VULLABY",E[E.MANDIBUZZ=630]="MANDIBUZZ",E[E.HEATMOR=631]="HEATMOR",E[E.DURANT=632]="DURANT",E[E.DEINO=633]="DEINO",E[E.ZWEILOUS=634]="ZWEILOUS",E[E.HYDREIGON=635]="HYDREIGON",E[E.LARVESTA=636]="LARVESTA",E[E.VOLCARONA=637]="VOLCARONA",E[E.COBALION=638]="COBALION",E[E.TERRAKION=639]="TERRAKION",E[E.VIRIZION=640]="VIRIZION",E[E.TORNADUS=641]="TORNADUS",E[E.THUNDURUS=642]="THUNDURUS",E[E.RESHIRAM=643]="RESHIRAM",E[E.ZEKROM=644]="ZEKROM",E[E.LANDORUS=645]="LANDORUS",E[E.KYUREM=646]="KYUREM",E[E.KELDEO=647]="KELDEO",E[E.MELOETTA=648]="MELOETTA",E[E.GENESECT=649]="GENESECT",E[E.CHESPIN=650]="CHESPIN",E[E.QUILLADIN=651]="QUILLADIN",E[E.CHESNAUGHT=652]="CHESNAUGHT",E[E.FENNEKIN=653]="FENNEKIN",E[E.BRAIXEN=654]="BRAIXEN",E[E.DELPHOX=655]="DELPHOX",E[E.FROAKIE=656]="FROAKIE",E[E.FROGADIER=657]="FROGADIER",E[E.GRENINJA=658]="GRENINJA",E[E.BUNNELBY=659]="BUNNELBY",E[E.DIGGERSBY=660]="DIGGERSBY",E[E.FLETCHLING=661]="FLETCHLING",E[E.FLETCHINDER=662]="FLETCHINDER",E[E.TALONFLAME=663]="TALONFLAME",E[E.SCATTERBUG=664]="SCATTERBUG",E[E.SPEWPA=665]="SPEWPA",E[E.VIVILLON=666]="VIVILLON",E[E.LITLEO=667]="LITLEO",E[E.PYROAR=668]="PYROAR",E[E.FLABEBE=669]="FLABEBE",E[E.FLOETTE=670]="FLOETTE",E[E.FLORGES=671]="FLORGES",E[E.SKIDDO=672]="SKIDDO",E[E.GOGOAT=673]="GOGOAT",E[E.PANCHAM=674]="PANCHAM",E[E.PANGORO=675]="PANGORO",E[E.FURFROU=676]="FURFROU",E[E.ESPURR=677]="ESPURR",E[E.MEOWSTIC=678]="MEOWSTIC",E[E.HONEDGE=679]="HONEDGE",E[E.DOUBLADE=680]="DOUBLADE",E[E.AEGISLASH=681]="AEGISLASH",E[E.SPRITZEE=682]="SPRITZEE",E[E.AROMATISSE=683]="AROMATISSE",E[E.SWIRLIX=684]="SWIRLIX",E[E.SLURPUFF=685]="SLURPUFF",E[E.INKAY=686]="INKAY",E[E.MALAMAR=687]="MALAMAR",E[E.BINACLE=688]="BINACLE",E[E.BARBARACLE=689]="BARBARACLE",E[E.SKRELP=690]="SKRELP",E[E.DRAGALGE=691]="DRAGALGE",E[E.CLAUNCHER=692]="CLAUNCHER",E[E.CLAWITZER=693]="CLAWITZER",E[E.HELIOPTILE=694]="HELIOPTILE",E[E.HELIOLISK=695]="HELIOLISK",E[E.TYRUNT=696]="TYRUNT",E[E.TYRANTRUM=697]="TYRANTRUM",E[E.AMAURA=698]="AMAURA",E[E.AURORUS=699]="AURORUS",E[E.SYLVEON=700]="SYLVEON",E[E.HAWLUCHA=701]="HAWLUCHA",E[E.DEDENNE=702]="DEDENNE",E[E.CARBINK=703]="CARBINK",E[E.GOOMY=704]="GOOMY",E[E.SLIGGOO=705]="SLIGGOO",E[E.GOODRA=706]="GOODRA",E[E.KLEFKI=707]="KLEFKI",E[E.PHANTUMP=708]="PHANTUMP",E[E.TREVENANT=709]="TREVENANT",E[E.PUMPKABOO=710]="PUMPKABOO",E[E.GOURGEIST=711]="GOURGEIST",E[E.BERGMITE=712]="BERGMITE",E[E.AVALUGG=713]="AVALUGG",E[E.NOIBAT=714]="NOIBAT",E[E.NOIVERN=715]="NOIVERN",E[E.XERNEAS=716]="XERNEAS",E[E.YVELTAL=717]="YVELTAL",E[E.ZYGARDE=718]="ZYGARDE",E[E.DIANCIE=719]="DIANCIE",E[E.HOOPA=720]="HOOPA",E[E.VOLCANION=721]="VOLCANION",E[E.ROWLET=722]="ROWLET",E[E.DARTRIX=723]="DARTRIX",E[E.DECIDUEYE=724]="DECIDUEYE",E[E.LITTEN=725]="LITTEN",E[E.TORRACAT=726]="TORRACAT",E[E.INCINEROAR=727]="INCINEROAR",E[E.POPPLIO=728]="POPPLIO",E[E.BRIONNE=729]="BRIONNE",E[E.PRIMARINA=730]="PRIMARINA",E[E.PIKIPEK=731]="PIKIPEK",E[E.TRUMBEAK=732]="TRUMBEAK",E[E.TOUCANNON=733]="TOUCANNON",E[E.YUNGOOS=734]="YUNGOOS",E[E.GUMSHOOS=735]="GUMSHOOS",E[E.GRUBBIN=736]="GRUBBIN",E[E.CHARJABUG=737]="CHARJABUG",E[E.VIKAVOLT=738]="VIKAVOLT",E[E.CRABRAWLER=739]="CRABRAWLER",E[E.CRABOMINABLE=740]="CRABOMINABLE",E[E.ORICORIO=741]="ORICORIO",E[E.CUTIEFLY=742]="CUTIEFLY",E[E.RIBOMBEE=743]="RIBOMBEE",E[E.ROCKRUFF=744]="ROCKRUFF",E[E.LYCANROC=745]="LYCANROC",E[E.WISHIWASHI=746]="WISHIWASHI",E[E.MAREANIE=747]="MAREANIE",E[E.TOXAPEX=748]="TOXAPEX",E[E.MUDBRAY=749]="MUDBRAY",E[E.MUDSDALE=750]="MUDSDALE",E[E.DEWPIDER=751]="DEWPIDER",E[E.ARAQUANID=752]="ARAQUANID",E[E.FOMANTIS=753]="FOMANTIS",E[E.LURANTIS=754]="LURANTIS",E[E.MORELULL=755]="MORELULL",E[E.SHIINOTIC=756]="SHIINOTIC",E[E.SALANDIT=757]="SALANDIT",E[E.SALAZZLE=758]="SALAZZLE",E[E.STUFFUL=759]="STUFFUL",E[E.BEWEAR=760]="BEWEAR",E[E.BOUNSWEET=761]="BOUNSWEET",E[E.STEENEE=762]="STEENEE",E[E.TSAREENA=763]="TSAREENA",E[E.COMFEY=764]="COMFEY",E[E.ORANGURU=765]="ORANGURU",E[E.PASSIMIAN=766]="PASSIMIAN",E[E.WIMPOD=767]="WIMPOD",E[E.GOLISOPOD=768]="GOLISOPOD",E[E.SANDYGAST=769]="SANDYGAST",E[E.PALOSSAND=770]="PALOSSAND",E[E.PYUKUMUKU=771]="PYUKUMUKU",E[E.TYPE_NULL=772]="TYPE_NULL",E[E.SILVALLY=773]="SILVALLY",E[E.MINIOR=774]="MINIOR",E[E.KOMALA=775]="KOMALA",E[E.TURTONATOR=776]="TURTONATOR",E[E.TOGEDEMARU=777]="TOGEDEMARU",E[E.MIMIKYU=778]="MIMIKYU",E[E.BRUXISH=779]="BRUXISH",E[E.DRAMPA=780]="DRAMPA",E[E.DHELMISE=781]="DHELMISE",E[E.JANGMO_O=782]="JANGMO_O",E[E.HAKAMO_O=783]="HAKAMO_O",E[E.KOMMO_O=784]="KOMMO_O",E[E.TAPU_KOKO=785]="TAPU_KOKO",E[E.TAPU_LELE=786]="TAPU_LELE",E[E.TAPU_BULU=787]="TAPU_BULU",E[E.TAPU_FINI=788]="TAPU_FINI",E[E.COSMOG=789]="COSMOG",E[E.COSMOEM=790]="COSMOEM",E[E.SOLGALEO=791]="SOLGALEO",E[E.LUNALA=792]="LUNALA",E[E.NIHILEGO=793]="NIHILEGO",E[E.BUZZWOLE=794]="BUZZWOLE",E[E.PHEROMOSA=795]="PHEROMOSA",E[E.XURKITREE=796]="XURKITREE",E[E.CELESTEELA=797]="CELESTEELA",E[E.KARTANA=798]="KARTANA",E[E.GUZZLORD=799]="GUZZLORD",E[E.NECROZMA=800]="NECROZMA",E[E.MAGEARNA=801]="MAGEARNA",E[E.MARSHADOW=802]="MARSHADOW",E[E.POIPOLE=803]="POIPOLE",E[E.NAGANADEL=804]="NAGANADEL",E[E.STAKATAKA=805]="STAKATAKA",E[E.BLACEPHALON=806]="BLACEPHALON",E[E.ZERAORA=807]="ZERAORA",E[E.MELTAN=808]="MELTAN",E[E.MELMETAL=809]="MELMETAL",E[E.GROOKEY=810]="GROOKEY",E[E.THWACKEY=811]="THWACKEY",E[E.RILLABOOM=812]="RILLABOOM",E[E.SCORBUNNY=813]="SCORBUNNY",E[E.RABOOT=814]="RABOOT",E[E.CINDERACE=815]="CINDERACE",E[E.SOBBLE=816]="SOBBLE",E[E.DRIZZILE=817]="DRIZZILE",E[E.INTELEON=818]="INTELEON",E[E.SKWOVET=819]="SKWOVET",E[E.GREEDENT=820]="GREEDENT",E[E.ROOKIDEE=821]="ROOKIDEE",E[E.CORVISQUIRE=822]="CORVISQUIRE",E[E.CORVIKNIGHT=823]="CORVIKNIGHT",E[E.BLIPBUG=824]="BLIPBUG",E[E.DOTTLER=825]="DOTTLER",E[E.ORBEETLE=826]="ORBEETLE",E[E.NICKIT=827]="NICKIT",E[E.THIEVUL=828]="THIEVUL",E[E.GOSSIFLEUR=829]="GOSSIFLEUR",E[E.ELDEGOSS=830]="ELDEGOSS",E[E.WOOLOO=831]="WOOLOO",E[E.DUBWOOL=832]="DUBWOOL",E[E.CHEWTLE=833]="CHEWTLE",E[E.DREDNAW=834]="DREDNAW",E[E.YAMPER=835]="YAMPER",E[E.BOLTUND=836]="BOLTUND",E[E.ROLYCOLY=837]="ROLYCOLY",E[E.CARKOL=838]="CARKOL",E[E.COALOSSAL=839]="COALOSSAL",E[E.APPLIN=840]="APPLIN",E[E.FLAPPLE=841]="FLAPPLE",E[E.APPLETUN=842]="APPLETUN",E[E.SILICOBRA=843]="SILICOBRA",E[E.SANDACONDA=844]="SANDACONDA",E[E.CRAMORANT=845]="CRAMORANT",E[E.ARROKUDA=846]="ARROKUDA",E[E.BARRASKEWDA=847]="BARRASKEWDA",E[E.TOXEL=848]="TOXEL",E[E.TOXTRICITY=849]="TOXTRICITY",E[E.SIZZLIPEDE=850]="SIZZLIPEDE",E[E.CENTISKORCH=851]="CENTISKORCH",E[E.CLOBBOPUS=852]="CLOBBOPUS",E[E.GRAPPLOCT=853]="GRAPPLOCT",E[E.SINISTEA=854]="SINISTEA",E[E.POLTEAGEIST=855]="POLTEAGEIST",E[E.HATENNA=856]="HATENNA",E[E.HATTREM=857]="HATTREM",E[E.HATTERENE=858]="HATTERENE",E[E.IMPIDIMP=859]="IMPIDIMP",E[E.MORGREM=860]="MORGREM",E[E.GRIMMSNARL=861]="GRIMMSNARL",E[E.OBSTAGOON=862]="OBSTAGOON",E[E.PERRSERKER=863]="PERRSERKER",E[E.CURSOLA=864]="CURSOLA",E[E.SIRFETCHD=865]="SIRFETCHD",E[E.MR_RIME=866]="MR_RIME",E[E.RUNERIGUS=867]="RUNERIGUS",E[E.MILCERY=868]="MILCERY",E[E.ALCREMIE=869]="ALCREMIE",E[E.FALINKS=870]="FALINKS",E[E.PINCURCHIN=871]="PINCURCHIN",E[E.SNOM=872]="SNOM",E[E.FROSMOTH=873]="FROSMOTH",E[E.STONJOURNER=874]="STONJOURNER",E[E.EISCUE=875]="EISCUE",E[E.INDEEDEE=876]="INDEEDEE",E[E.MORPEKO=877]="MORPEKO",E[E.CUFANT=878]="CUFANT",E[E.COPPERAJAH=879]="COPPERAJAH",E[E.DRACOZOLT=880]="DRACOZOLT",E[E.ARCTOZOLT=881]="ARCTOZOLT",E[E.DRACOVISH=882]="DRACOVISH",E[E.ARCTOVISH=883]="ARCTOVISH",E[E.DURALUDON=884]="DURALUDON",E[E.DREEPY=885]="DREEPY",E[E.DRAKLOAK=886]="DRAKLOAK",E[E.DRAGAPULT=887]="DRAGAPULT",E[E.ZACIAN=888]="ZACIAN",E[E.ZAMAZENTA=889]="ZAMAZENTA",E[E.ETERNATUS=890]="ETERNATUS",E[E.KUBFU=891]="KUBFU",E[E.URSHIFU=892]="URSHIFU",E[E.ZARUDE=893]="ZARUDE",E[E.REGIELEKI=894]="REGIELEKI",E[E.REGIDRAGO=895]="REGIDRAGO",E[E.GLASTRIER=896]="GLASTRIER",E[E.SPECTRIER=897]="SPECTRIER",E[E.CALYREX=898]="CALYREX",E[E.WYRDEER=899]="WYRDEER",E[E.KLEAVOR=900]="KLEAVOR",E[E.URSALUNA=901]="URSALUNA",E[E.BASCULEGION=902]="BASCULEGION",E[E.SNEASLER=903]="SNEASLER",E[E.OVERQWIL=904]="OVERQWIL",E[E.ENAMORUS=905]="ENAMORUS",E[E.SPRIGATITO=906]="SPRIGATITO",E[E.FLORAGATO=907]="FLORAGATO",E[E.MEOWSCARADA=908]="MEOWSCARADA",E[E.FUECOCO=909]="FUECOCO",E[E.CROCALOR=910]="CROCALOR",E[E.SKELEDIRGE=911]="SKELEDIRGE",E[E.QUAXLY=912]="QUAXLY",E[E.QUAXWELL=913]="QUAXWELL",E[E.QUAQUAVAL=914]="QUAQUAVAL",E[E.LECHONK=915]="LECHONK",E[E.OINKOLOGNE=916]="OINKOLOGNE",E[E.TAROUNTULA=917]="TAROUNTULA",E[E.SPIDOPS=918]="SPIDOPS",E[E.NYMBLE=919]="NYMBLE",E[E.LOKIX=920]="LOKIX",E[E.PAWMI=921]="PAWMI",E[E.PAWMO=922]="PAWMO",E[E.PAWMOT=923]="PAWMOT",E[E.TANDEMAUS=924]="TANDEMAUS",E[E.MAUSHOLD=925]="MAUSHOLD",E[E.FIDOUGH=926]="FIDOUGH",E[E.DACHSBUN=927]="DACHSBUN",E[E.SMOLIV=928]="SMOLIV",E[E.DOLLIV=929]="DOLLIV",E[E.ARBOLIVA=930]="ARBOLIVA",E[E.SQUAWKABILLY=931]="SQUAWKABILLY",E[E.NACLI=932]="NACLI",E[E.NACLSTACK=933]="NACLSTACK",E[E.GARGANACL=934]="GARGANACL",E[E.CHARCADET=935]="CHARCADET",E[E.ARMAROUGE=936]="ARMAROUGE",E[E.CERULEDGE=937]="CERULEDGE",E[E.TADBULB=938]="TADBULB",E[E.BELLIBOLT=939]="BELLIBOLT",E[E.WATTREL=940]="WATTREL",E[E.KILOWATTREL=941]="KILOWATTREL",E[E.MASCHIFF=942]="MASCHIFF",E[E.MABOSSTIFF=943]="MABOSSTIFF",E[E.SHROODLE=944]="SHROODLE",E[E.GRAFAIAI=945]="GRAFAIAI",E[E.BRAMBLIN=946]="BRAMBLIN",E[E.BRAMBLEGHAST=947]="BRAMBLEGHAST",E[E.TOEDSCOOL=948]="TOEDSCOOL",E[E.TOEDSCRUEL=949]="TOEDSCRUEL",E[E.KLAWF=950]="KLAWF",E[E.CAPSAKID=951]="CAPSAKID",E[E.SCOVILLAIN=952]="SCOVILLAIN",E[E.RELLOR=953]="RELLOR",E[E.RABSCA=954]="RABSCA",E[E.FLITTLE=955]="FLITTLE",E[E.ESPATHRA=956]="ESPATHRA",E[E.TINKATINK=957]="TINKATINK",E[E.TINKATUFF=958]="TINKATUFF",E[E.TINKATON=959]="TINKATON",E[E.WIGLETT=960]="WIGLETT",E[E.WUGTRIO=961]="WUGTRIO",E[E.BOMBIRDIER=962]="BOMBIRDIER",E[E.FINIZEN=963]="FINIZEN",E[E.PALAFIN=964]="PALAFIN",E[E.VAROOM=965]="VAROOM",E[E.REVAVROOM=966]="REVAVROOM",E[E.CYCLIZAR=967]="CYCLIZAR",E[E.ORTHWORM=968]="ORTHWORM",E[E.GLIMMET=969]="GLIMMET",E[E.GLIMMORA=970]="GLIMMORA",E[E.GREAVARD=971]="GREAVARD",E[E.HOUNDSTONE=972]="HOUNDSTONE",E[E.FLAMIGO=973]="FLAMIGO",E[E.CETODDLE=974]="CETODDLE",E[E.CETITAN=975]="CETITAN",E[E.VELUZA=976]="VELUZA",E[E.DONDOZO=977]="DONDOZO",E[E.TATSUGIRI=978]="TATSUGIRI",E[E.ANNIHILAPE=979]="ANNIHILAPE",E[E.CLODSIRE=980]="CLODSIRE",E[E.FARIGIRAF=981]="FARIGIRAF",E[E.DUDUNSPARCE=982]="DUDUNSPARCE",E[E.KINGAMBIT=983]="KINGAMBIT",E[E.GREAT_TUSK=984]="GREAT_TUSK",E[E.SCREAM_TAIL=985]="SCREAM_TAIL",E[E.BRUTE_BONNET=986]="BRUTE_BONNET",E[E.FLUTTER_MANE=987]="FLUTTER_MANE",E[E.SLITHER_WING=988]="SLITHER_WING",E[E.SANDY_SHOCKS=989]="SANDY_SHOCKS",E[E.IRON_TREADS=990]="IRON_TREADS",E[E.IRON_BUNDLE=991]="IRON_BUNDLE",E[E.IRON_HANDS=992]="IRON_HANDS",E[E.IRON_JUGULIS=993]="IRON_JUGULIS",E[E.IRON_MOTH=994]="IRON_MOTH",E[E.IRON_THORNS=995]="IRON_THORNS",E[E.FRIGIBAX=996]="FRIGIBAX",E[E.ARCTIBAX=997]="ARCTIBAX",E[E.BAXCALIBUR=998]="BAXCALIBUR",E[E.GIMMIGHOUL=999]="GIMMIGHOUL",E[E.GHOLDENGO=1e3]="GHOLDENGO",E[E.WO_CHIEN=1001]="WO_CHIEN",E[E.CHIEN_PAO=1002]="CHIEN_PAO",E[E.TING_LU=1003]="TING_LU",E[E.CHI_YU=1004]="CHI_YU",E[E.ROARING_MOON=1005]="ROARING_MOON",E[E.IRON_VALIANT=1006]="IRON_VALIANT",E[E.KORAIDON=1007]="KORAIDON",E[E.MIRAIDON=1008]="MIRAIDON",E[E.WALKING_WAKE=1009]="WALKING_WAKE",E[E.IRON_LEAVES=1010]="IRON_LEAVES",E[E.DIPPLIN=1011]="DIPPLIN",E[E.POLTCHAGEIST=1012]="POLTCHAGEIST",E[E.SINISTCHA=1013]="SINISTCHA",E[E.OKIDOGI=1014]="OKIDOGI",E[E.MUNKIDORI=1015]="MUNKIDORI",E[E.FEZANDIPITI=1016]="FEZANDIPITI",E[E.OGERPON=1017]="OGERPON",E[E.ARCHALUDON=1018]="ARCHALUDON",E[E.HYDRAPPLE=1019]="HYDRAPPLE",E[E.GOUGING_FIRE=1020]="GOUGING_FIRE",E[E.RAGING_BOLT=1021]="RAGING_BOLT",E[E.IRON_BOULDER=1022]="IRON_BOULDER",E[E.IRON_CROWN=1023]="IRON_CROWN",E[E.TERAPAGOS=1024]="TERAPAGOS",E[E.PECHARUNT=1025]="PECHARUNT",E[E.ALOLA_RATTATA=2019]="ALOLA_RATTATA",E[E.ALOLA_RATICATE=2020]="ALOLA_RATICATE",E[E.ALOLA_RAICHU=2026]="ALOLA_RAICHU",E[E.ALOLA_SANDSHREW=2027]="ALOLA_SANDSHREW",E[E.ALOLA_SANDSLASH=2028]="ALOLA_SANDSLASH",E[E.ALOLA_VULPIX=2037]="ALOLA_VULPIX",E[E.ALOLA_NINETALES=2038]="ALOLA_NINETALES",E[E.ALOLA_DIGLETT=2050]="ALOLA_DIGLETT",E[E.ALOLA_DUGTRIO=2051]="ALOLA_DUGTRIO",E[E.ALOLA_MEOWTH=2052]="ALOLA_MEOWTH",E[E.ALOLA_PERSIAN=2053]="ALOLA_PERSIAN",E[E.ALOLA_GEODUDE=2074]="ALOLA_GEODUDE",E[E.ALOLA_GRAVELER=2075]="ALOLA_GRAVELER",E[E.ALOLA_GOLEM=2076]="ALOLA_GOLEM",E[E.ALOLA_GRIMER=2088]="ALOLA_GRIMER",E[E.ALOLA_MUK=2089]="ALOLA_MUK",E[E.ALOLA_EXEGGUTOR=2103]="ALOLA_EXEGGUTOR",E[E.ALOLA_MAROWAK=2105]="ALOLA_MAROWAK",E[E.ETERNAL_FLOETTE=2670]="ETERNAL_FLOETTE",E[E.GALAR_MEOWTH=4052]="GALAR_MEOWTH",E[E.GALAR_PONYTA=4077]="GALAR_PONYTA",E[E.GALAR_RAPIDASH=4078]="GALAR_RAPIDASH",E[E.GALAR_SLOWPOKE=4079]="GALAR_SLOWPOKE",E[E.GALAR_SLOWBRO=4080]="GALAR_SLOWBRO",E[E.GALAR_FARFETCHD=4083]="GALAR_FARFETCHD",E[E.GALAR_WEEZING=4110]="GALAR_WEEZING",E[E.GALAR_MR_MIME=4122]="GALAR_MR_MIME",E[E.GALAR_ARTICUNO=4144]="GALAR_ARTICUNO",E[E.GALAR_ZAPDOS=4145]="GALAR_ZAPDOS",E[E.GALAR_MOLTRES=4146]="GALAR_MOLTRES",E[E.GALAR_SLOWKING=4199]="GALAR_SLOWKING",E[E.GALAR_CORSOLA=4222]="GALAR_CORSOLA",E[E.GALAR_ZIGZAGOON=4263]="GALAR_ZIGZAGOON",E[E.GALAR_LINOONE=4264]="GALAR_LINOONE",E[E.GALAR_DARUMAKA=4554]="GALAR_DARUMAKA",E[E.GALAR_DARMANITAN=4555]="GALAR_DARMANITAN",E[E.GALAR_YAMASK=4562]="GALAR_YAMASK",E[E.GALAR_STUNFISK=4618]="GALAR_STUNFISK",E[E.HISUI_GROWLITHE=6058]="HISUI_GROWLITHE",E[E.HISUI_ARCANINE=6059]="HISUI_ARCANINE",E[E.HISUI_VOLTORB=6100]="HISUI_VOLTORB",E[E.HISUI_ELECTRODE=6101]="HISUI_ELECTRODE",E[E.HISUI_TYPHLOSION=6157]="HISUI_TYPHLOSION",E[E.HISUI_QWILFISH=6211]="HISUI_QWILFISH",E[E.HISUI_SNEASEL=6215]="HISUI_SNEASEL",E[E.HISUI_SAMUROTT=6503]="HISUI_SAMUROTT",E[E.HISUI_LILLIGANT=6549]="HISUI_LILLIGANT",E[E.HISUI_ZORUA=6570]="HISUI_ZORUA",E[E.HISUI_ZOROARK=6571]="HISUI_ZOROARK",E[E.HISUI_BRAVIARY=6628]="HISUI_BRAVIARY",E[E.HISUI_SLIGGOO=6705]="HISUI_SLIGGOO",E[E.HISUI_GOODRA=6706]="HISUI_GOODRA",E[E.HISUI_AVALUGG=6713]="HISUI_AVALUGG",E[E.HISUI_DECIDUEYE=6724]="HISUI_DECIDUEYE",E[E.PALDEA_TAUROS=8128]="PALDEA_TAUROS",E[E.PALDEA_WOOPER=8194]="PALDEA_WOOPER",E[E.BLOODMOON_URSALUNA=8901]="BLOODMOON_URSALUNA",E))(e||{});/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function rR(E){return E<0?-1:E===0?0:1}T(rR,"signum");function Tr(E,A,s){return(1-s)*E+s*A}T(Tr,"lerp");function I8(E,A,s){return s<E?E:s>A?A:s}T(I8,"clampInt");function Ol(E,A,s){return s<E?E:s>A?A:s}T(Ol,"clampDouble");function i8(E){return E=E%360,E<0&&(E=E+360),E}T(i8,"sanitizeDegreesDouble");function h0(E,A){const s=E[0]*A[0][0]+E[1]*A[0][1]+E[2]*A[0][2],R=E[0]*A[1][0]+E[1]*A[1][1]+E[2]*A[1][2],I=E[0]*A[2][0]+E[1]*A[2][1]+E[2]*A[2][2];return[s,R,I]}T(h0,"matrixMultiply");/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const e6=[[.41233895,.35762064,.18051042],[.2126,.7152,.0722],[.01932141,.11916382,.95034478]],a8=[[3.2413774792388685,-1.5376652402851851,-.49885366846268053],[-.9691452513005321,1.8758853451067872,.04156585616912061],[.05562093689691305,-.20395524564742123,1.0571799111220335]],l1=[95.047,100,108.883];function C1(E,A,s){return(255<<24|(E&255)<<16|(A&255)<<8|s&255)>>>0}T(C1,"argbFromRgb");function mV(E){const A=hi(E[0]),s=hi(E[1]),R=hi(E[2]);return C1(A,s,R)}T(mV,"argbFromLinrgb");function t6(E){return E>>24&255}T(t6,"alphaFromArgb");function KM(E){return E>>16&255}T(KM,"redFromArgb");function FM(E){return E>>8&255}T(FM,"greenFromArgb");function mM(E){return E&255}T(mM,"blueFromArgb");function A6(E,A,s){const R=a8,I=R[0][0]*E+R[0][1]*A+R[0][2]*s,i=R[1][0]*E+R[1][1]*A+R[1][2]*s,a=R[2][0]*E+R[2][1]*A+R[2][2]*s,L=hi(I),S=hi(i),o=hi(a);return C1(L,S,o)}T(A6,"argbFromXyz");function L8(E){const A=Hn(KM(E)),s=Hn(FM(E)),R=Hn(mM(E));return h0([A,s,R],e6)}T(L8,"xyzFromArgb");function r8(E,A,s){const R=l1,I=(E+16)/116,i=A/500+I,a=I-s/200,L=Zo(i),S=Zo(I),o=Zo(a),l=L*R[0],D=S*R[1],M=o*R[2];return A6(l,D,M)}T(r8,"argbFromLab");function N8(E){const A=Hn(KM(E)),s=Hn(FM(E)),R=Hn(mM(E)),I=e6,i=I[0][0]*A+I[0][1]*s+I[0][2]*R,a=I[1][0]*A+I[1][1]*s+I[1][2]*R,L=I[2][0]*A+I[2][1]*s+I[2][2]*R,S=l1,o=i/S[0],l=a/S[1],D=L/S[2],M=Sr(o),c=Sr(l),G=Sr(D),P=116*c-16,_=500*(M-c),g=200*(c-G);return[P,_,g]}T(N8,"labFromArgb");function T8(E){const A=DI(E),s=hi(A);return C1(s,s,s)}T(T8,"argbFromLstar");function WV(E){const A=L8(E)[1];return 116*Sr(A/100)-16}T(WV,"lstarFromArgb");function DI(E){return 100*Zo((E+16)/116)}T(DI,"yFromLstar");function c0(E){return Sr(E/100)*116-16}T(c0,"lstarFromY");function Hn(E){const A=E/255;return A<=.040449936?A/12.92*100:Math.pow((A+.055)/1.055,2.4)*100}T(Hn,"linearized");function hi(E){const A=E/100;let s=0;return A<=.0031308?s=A*12.92:s=1.055*Math.pow(A,1/2.4)-.055,I8(0,255,Math.round(s*255))}T(hi,"delinearized");function S8(){return l1}T(S8,"whitePointD65");function G0(E){const A=KM(E),s=FM(E),R=mM(E),I=t6(E);return{r:A,g:s,b:R,a:I}}T(G0,"rgbaFromArgb");function ps({r:E,g:A,b:s,a:R}){const I=ho(E),i=ho(A),a=ho(s);return ho(R)<<24|I<<16|i<<8|a}T(ps,"argbFromRgba");function ho(E){return E<0?0:E>255?255:E}T(ho,"clampComponent");function Sr(E){const A=.008856451679035631,s=24389/27;return E>A?Math.pow(E,1/3):(s*E+16)/116}T(Sr,"labF");function Zo(E){const A=.008856451679035631,s=24389/27,R=E*E*E;return R>A?R:(116*E-16)/s}T(Zo,"labInvf");/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const tM=class tM{static make(A=S8(),s=200/Math.PI*DI(50)/100,R=50,I=2,i=!1){const a=A,L=a[0]*.401288+a[1]*.650173+a[2]*-.051461,S=a[0]*-.250268+a[1]*1.204414+a[2]*.045854,o=a[0]*-.002079+a[1]*.048952+a[2]*.953127,l=.8+I/10,D=l>=.9?Tr(.59,.69,(l-.9)*10):Tr(.525,.59,(l-.8)*10);let M=i?1:l*(1-1/3.6*Math.exp((-s-42)/92));M=M>1?1:M<0?0:M;const c=l,G=[M*(100/L)+1-M,M*(100/S)+1-M,M*(100/o)+1-M],P=1/(5*s+1),_=P*P*P*P,g=1-_,H=_*s+.1*g*g*Math.cbrt(5*s),F=DI(R)/A[1],p=1.48+Math.sqrt(F),v=.725/Math.pow(F,.2),k=v,j=[Math.pow(H*G[0]*L/100,.42),Math.pow(H*G[1]*S/100,.42),Math.pow(H*G[2]*o/100,.42)],q=[400*j[0]/(j[0]+27.13),400*j[1]/(j[1]+27.13),400*j[2]/(j[2]+27.13)],ie=(2*q[0]+q[1]+.05*q[2])*v;return new tM(F,ie,v,k,D,c,G,H,Math.pow(H,.25),p)}constructor(A,s,R,I,i,a,L,S,o,l){this.n=A,this.aw=s,this.nbb=R,this.ncb=I,this.c=i,this.nc=a,this.rgbD=L,this.fl=S,this.fLRoot=o,this.z=l}};T(tM,"ViewingConditions");let fO=tM;fO.DEFAULT=fO.make();/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const XO=class XO{constructor(A,s,R,I,i,a,L,S,o){this.hue=A,this.chroma=s,this.j=R,this.q=I,this.m=i,this.s=a,this.jstar=L,this.astar=S,this.bstar=o}distance(A){const s=this.jstar-A.jstar,R=this.astar-A.astar,I=this.bstar-A.bstar,i=Math.sqrt(s*s+R*R+I*I);return 1.41*Math.pow(i,.63)}static fromInt(A){return XO.fromIntInViewingConditions(A,fO.DEFAULT)}static fromIntInViewingConditions(A,s){const R=(A&16711680)>>16,I=(A&65280)>>8,i=A&255,a=Hn(R),L=Hn(I),S=Hn(i),o=.41233895*a+.35762064*L+.18051042*S,l=.2126*a+.7152*L+.0722*S,D=.01932141*a+.11916382*L+.95034478*S,M=.401288*o+.650173*l-.051461*D,c=-.250268*o+1.204414*l+.045854*D,G=-.002079*o+.048952*l+.953127*D,P=s.rgbD[0]*M,_=s.rgbD[1]*c,g=s.rgbD[2]*G,H=Math.pow(s.fl*Math.abs(P)/100,.42),F=Math.pow(s.fl*Math.abs(_)/100,.42),p=Math.pow(s.fl*Math.abs(g)/100,.42),v=rR(P)*400*H/(H+27.13),k=rR(_)*400*F/(F+27.13),j=rR(g)*400*p/(p+27.13),q=(11*v+-12*k+j)/11,ie=(v+k-2*j)/9,z=(20*v+20*k+21*j)/20,Oe=(40*v+20*k+j)/20,Le=Math.atan2(ie,q)*180/Math.PI,Ne=Le<0?Le+360:Le>=360?Le-360:Le,De=Ne*Math.PI/180,Be=Oe*s.nbb,de=100*Math.pow(Be/s.aw,s.c*s.z),fe=4/s.c*Math.sqrt(de/100)*(s.aw+4)*s.fLRoot,Ye=Ne<20.14?Ne+360:Ne,Re=.25*(Math.cos(Ye*Math.PI/180+2)+3.8),oe=5e4/13*Re*s.nc*s.ncb*Math.sqrt(q*q+ie*ie)/(z+.305),Te=Math.pow(oe,.9)*Math.pow(1.64-Math.pow(.29,s.n),.73),he=Te*Math.sqrt(de/100),tt=he*s.fLRoot,lt=50*Math.sqrt(Te*s.c/(s.aw+4)),yt=(1+100*.007)*de/(1+.007*de),Ut=1/.0228*Math.log(1+.0228*tt),EA=Ut*Math.cos(De),AE=Ut*Math.sin(De);return new XO(Ne,he,de,fe,tt,lt,yt,EA,AE)}static fromJch(A,s,R){return XO.fromJchInViewingConditions(A,s,R,fO.DEFAULT)}static fromJchInViewingConditions(A,s,R,I){const i=4/I.c*Math.sqrt(A/100)*(I.aw+4)*I.fLRoot,a=s*I.fLRoot,L=s/Math.sqrt(A/100),S=50*Math.sqrt(L*I.c/(I.aw+4)),o=R*Math.PI/180,l=(1+100*.007)*A/(1+.007*A),D=1/.0228*Math.log(1+.0228*a),M=D*Math.cos(o),c=D*Math.sin(o);return new XO(R,s,A,i,a,S,l,M,c)}static fromUcs(A,s,R){return XO.fromUcsInViewingConditions(A,s,R,fO.DEFAULT)}static fromUcsInViewingConditions(A,s,R,I){const i=s,a=R,L=Math.sqrt(i*i+a*a),o=(Math.exp(L*.0228)-1)/.0228/I.fLRoot;let l=Math.atan2(a,i)*(180/Math.PI);l<0&&(l+=360);const D=A/(1-(A-100)*.007);return XO.fromJchInViewingConditions(D,o,l,I)}toInt(){return this.viewed(fO.DEFAULT)}viewed(A){const s=this.chroma===0||this.j===0?0:this.chroma/Math.sqrt(this.j/100),R=Math.pow(s/Math.pow(1.64-Math.pow(.29,A.n),.73),1/.9),I=this.hue*Math.PI/180,i=.25*(Math.cos(I+2)+3.8),a=A.aw*Math.pow(this.j/100,1/A.c/A.z),L=i*(5e4/13)*A.nc*A.ncb,S=a/A.nbb,o=Math.sin(I),l=Math.cos(I),D=23*(S+.305)*R/(23*L+11*R*l+108*R*o),M=D*l,c=D*o,G=(460*S+451*M+288*c)/1403,P=(460*S-891*M-261*c)/1403,_=(460*S-220*M-6300*c)/1403,g=Math.max(0,27.13*Math.abs(G)/(400-Math.abs(G))),H=rR(G)*(100/A.fl)*Math.pow(g,1/.42),F=Math.max(0,27.13*Math.abs(P)/(400-Math.abs(P))),p=rR(P)*(100/A.fl)*Math.pow(F,1/.42),v=Math.max(0,27.13*Math.abs(_)/(400-Math.abs(_))),k=rR(_)*(100/A.fl)*Math.pow(v,1/.42),j=H/A.rgbD[0],q=p/A.rgbD[1],ie=k/A.rgbD[2],z=1.86206786*j-1.01125463*q+.14918677*ie,Oe=.38752654*j+.62144744*q-.00897398*ie,ae=-.0158415*j-.03412294*q+1.04996444*ie;return A6(z,Oe,ae)}static fromXyzInViewingConditions(A,s,R,I){const i=.401288*A+.650173*s-.051461*R,a=-.250268*A+1.204414*s+.045854*R,L=-.002079*A+.048952*s+.953127*R,S=I.rgbD[0]*i,o=I.rgbD[1]*a,l=I.rgbD[2]*L,D=Math.pow(I.fl*Math.abs(S)/100,.42),M=Math.pow(I.fl*Math.abs(o)/100,.42),c=Math.pow(I.fl*Math.abs(l)/100,.42),G=rR(S)*400*D/(D+27.13),P=rR(o)*400*M/(M+27.13),_=rR(l)*400*c/(c+27.13),g=(11*G+-12*P+_)/11,H=(G+P-2*_)/9,F=(20*G+20*P+21*_)/20,p=(40*G+20*P+_)/20,k=Math.atan2(H,g)*180/Math.PI,j=k<0?k+360:k>=360?k-360:k,q=j*Math.PI/180,ie=p*I.nbb,z=100*Math.pow(ie/I.aw,I.c*I.z),Oe=4/I.c*Math.sqrt(z/100)*(I.aw+4)*I.fLRoot,ae=j<20.14?j+360:j,Le=1/4*(Math.cos(ae*Math.PI/180+2)+3.8),De=5e4/13*Le*I.nc*I.ncb*Math.sqrt(g*g+H*H)/(F+.305),Be=Math.pow(De,.9)*Math.pow(1.64-Math.pow(.29,I.n),.73),de=Be*Math.sqrt(z/100),fe=de*I.fLRoot,Ye=50*Math.sqrt(Be*I.c/(I.aw+4)),Re=(1+100*.007)*z/(1+.007*z),Ie=Math.log(1+.0228*fe)/.0228,oe=Ie*Math.cos(q),Te=Ie*Math.sin(q);return new XO(j,de,z,Oe,fe,Ye,Re,oe,Te)}xyzInViewingConditions(A){const s=this.chroma===0||this.j===0?0:this.chroma/Math.sqrt(this.j/100),R=Math.pow(s/Math.pow(1.64-Math.pow(.29,A.n),.73),1/.9),I=this.hue*Math.PI/180,i=.25*(Math.cos(I+2)+3.8),a=A.aw*Math.pow(this.j/100,1/A.c/A.z),L=i*(5e4/13)*A.nc*A.ncb,S=a/A.nbb,o=Math.sin(I),l=Math.cos(I),D=23*(S+.305)*R/(23*L+11*R*l+108*R*o),M=D*l,c=D*o,G=(460*S+451*M+288*c)/1403,P=(460*S-891*M-261*c)/1403,_=(460*S-220*M-6300*c)/1403,g=Math.max(0,27.13*Math.abs(G)/(400-Math.abs(G))),H=rR(G)*(100/A.fl)*Math.pow(g,1/.42),F=Math.max(0,27.13*Math.abs(P)/(400-Math.abs(P))),p=rR(P)*(100/A.fl)*Math.pow(F,1/.42),v=Math.max(0,27.13*Math.abs(_)/(400-Math.abs(_))),k=rR(_)*(100/A.fl)*Math.pow(v,1/.42),j=H/A.rgbD[0],q=p/A.rgbD[1],ie=k/A.rgbD[2],z=1.86206786*j-1.01125463*q+.14918677*ie,Oe=.38752654*j+.62144744*q-.00897398*ie,ae=-.0158415*j-.03412294*q+1.04996444*ie;return[z,Oe,ae]}};T(XO,"Cam16");let ai=XO;/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const Wt=class Wt{static sanitizeRadians(A){return(A+Math.PI*8)%(Math.PI*2)}static trueDelinearized(A){const s=A/100;let R=0;return s<=.0031308?R=s*12.92:R=1.055*Math.pow(s,1/2.4)-.055,R*255}static chromaticAdaptation(A){const s=Math.pow(Math.abs(A),.42);return rR(A)*400*s/(s+27.13)}static hueOf(A){const s=h0(A,Wt.SCALED_DISCOUNT_FROM_LINRGB),R=Wt.chromaticAdaptation(s[0]),I=Wt.chromaticAdaptation(s[1]),i=Wt.chromaticAdaptation(s[2]),a=(11*R+-12*I+i)/11,L=(R+I-2*i)/9;return Math.atan2(L,a)}static areInCyclicOrder(A,s,R){const I=Wt.sanitizeRadians(s-A),i=Wt.sanitizeRadians(R-A);return I<i}static intercept(A,s,R){return(s-A)/(R-A)}static lerpPoint(A,s,R){return[A[0]+(R[0]-A[0])*s,A[1]+(R[1]-A[1])*s,A[2]+(R[2]-A[2])*s]}static setCoordinate(A,s,R,I){const i=Wt.intercept(A[I],s,R[I]);return Wt.lerpPoint(A,i,R)}static isBounded(A){return 0<=A&&A<=100}static nthVertex(A,s){const R=Wt.Y_FROM_LINRGB[0],I=Wt.Y_FROM_LINRGB[1],i=Wt.Y_FROM_LINRGB[2],a=s%4<=1?0:100,L=s%2===0?0:100;if(s<4){const S=a,o=L,l=(A-S*I-o*i)/R;return Wt.isBounded(l)?[l,S,o]:[-1,-1,-1]}else if(s<8){const S=a,o=L,l=(A-o*R-S*i)/I;return Wt.isBounded(l)?[o,l,S]:[-1,-1,-1]}else{const S=a,o=L,l=(A-S*R-o*I)/i;return Wt.isBounded(l)?[S,o,l]:[-1,-1,-1]}}static bisectToSegment(A,s){let R=[-1,-1,-1],I=R,i=0,a=0,L=!1,S=!0;for(let o=0;o<12;o++){const l=Wt.nthVertex(A,o);if(l[0]<0)continue;const D=Wt.hueOf(l);if(!L){R=l,I=l,i=D,a=D,L=!0;continue}(S||Wt.areInCyclicOrder(i,D,a))&&(S=!1,Wt.areInCyclicOrder(i,s,D)?(I=l,a=D):(R=l,i=D))}return[R,I]}static midpoint(A,s){return[(A[0]+s[0])/2,(A[1]+s[1])/2,(A[2]+s[2])/2]}static criticalPlaneBelow(A){return Math.floor(A-.5)}static criticalPlaneAbove(A){return Math.ceil(A-.5)}static bisectToLimit(A,s){const R=Wt.bisectToSegment(A,s);let I=R[0],i=Wt.hueOf(I),a=R[1];for(let L=0;L<3;L++)if(I[L]!==a[L]){let S=-1,o=255;I[L]<a[L]?(S=Wt.criticalPlaneBelow(Wt.trueDelinearized(I[L])),o=Wt.criticalPlaneAbove(Wt.trueDelinearized(a[L]))):(S=Wt.criticalPlaneAbove(Wt.trueDelinearized(I[L])),o=Wt.criticalPlaneBelow(Wt.trueDelinearized(a[L])));for(let l=0;l<8&&!(Math.abs(o-S)<=1);l++){const D=Math.floor((S+o)/2),M=Wt.CRITICAL_PLANES[D],c=Wt.setCoordinate(I,M,a,L),G=Wt.hueOf(c);Wt.areInCyclicOrder(i,s,G)?(a=c,o=D):(I=c,i=G,S=D)}}return Wt.midpoint(I,a)}static inverseChromaticAdaptation(A){const s=Math.abs(A),R=Math.max(0,27.13*s/(400-s));return rR(A)*Math.pow(R,1/.42)}static findResultByJ(A,s,R){let I=Math.sqrt(R)*11;const i=fO.DEFAULT,a=1/Math.pow(1.64-Math.pow(.29,i.n),.73),S=.25*(Math.cos(A+2)+3.8)*(5e4/13)*i.nc*i.ncb,o=Math.sin(A),l=Math.cos(A);for(let D=0;D<5;D++){const M=I/100,c=s===0||I===0?0:s/Math.sqrt(M),G=Math.pow(c*a,1/.9),_=i.aw*Math.pow(M,1/i.c/i.z)/i.nbb,g=23*(_+.305)*G/(23*S+11*G*l+108*G*o),H=g*l,F=g*o,p=(460*_+451*H+288*F)/1403,v=(460*_-891*H-261*F)/1403,k=(460*_-220*H-6300*F)/1403,j=Wt.inverseChromaticAdaptation(p),q=Wt.inverseChromaticAdaptation(v),ie=Wt.inverseChromaticAdaptation(k),z=h0([j,q,ie],Wt.LINRGB_FROM_SCALED_DISCOUNT);if(z[0]<0||z[1]<0||z[2]<0)return 0;const Oe=Wt.Y_FROM_LINRGB[0],ae=Wt.Y_FROM_LINRGB[1],Le=Wt.Y_FROM_LINRGB[2],Ne=Oe*z[0]+ae*z[1]+Le*z[2];if(Ne<=0)return 0;if(D===4||Math.abs(Ne-R)<.002)return z[0]>100.01||z[1]>100.01||z[2]>100.01?0:mV(z);I=I-(Ne-R)*I/(2*Ne)}return 0}static solveToInt(A,s,R){if(s<1e-4||R<1e-4||R>99.9999)return T8(R);A=i8(A);const I=A/180*Math.PI,i=DI(R),a=Wt.findResultByJ(I,s,i);if(a!==0)return a;const L=Wt.bisectToLimit(i,I);return mV(L)}static solveToCam(A,s,R){return ai.fromInt(Wt.solveToInt(A,s,R))}};T(Wt,"HctSolver");let Rn=Wt;Rn.SCALED_DISCOUNT_FROM_LINRGB=[[.001200833568784504,.002389694492170889,.0002795742885861124],[.0005891086651375999,.0029785502573438758,.0003270666104008398],[.00010146692491640572,.0005364214359186694,.0032979401770712076]];Rn.LINRGB_FROM_SCALED_DISCOUNT=[[1373.2198709594231,-1100.4251190754821,-7.278681089101213],[-271.815969077903,559.6580465940733,-32.46047482791194],[1.9622899599665666,-57.173814538844006,308.7233197812385]];Rn.Y_FROM_LINRGB=[.2126,.7152,.0722];Rn.CRITICAL_PLANES=[.015176349177441876,.045529047532325624,.07588174588720938,.10623444424209313,.13658714259697685,.16693984095186062,.19729253930674434,.2276452376616281,.2579979360165119,.28835063437139563,.3188300904430532,.350925934958123,.3848314933096426,.42057480301049466,.458183274052838,.4976837250274023,.5391024159806381,.5824650784040898,.6277969426914107,.6751227633498623,.7244668422128921,.775853049866786,.829304845476233,.8848452951698498,.942497089126609,1.0022825574869039,1.0642236851973577,1.1283421258858297,1.1946592148522128,1.2631959812511864,1.3339731595349034,1.407011200216447,1.4823302800086415,1.5599503113873272,1.6398909516233677,1.7221716113234105,1.8068114625156377,1.8938294463134073,1.9832442801866852,2.075074464868551,2.1693382909216234,2.2660538449872063,2.36523901573795,2.4669114995532007,2.5710888059345764,2.6777882626779785,2.7870270208169257,2.898822059350997,3.0131901897720907,3.1301480604002863,3.2497121605402226,3.3718988244681087,3.4967242352587946,3.624204428461639,3.754355295633311,3.887192587735158,4.022731918402185,4.160988767090289,4.301978482107941,4.445716283538092,4.592217266055746,4.741496401646282,4.893568542229298,5.048448422192488,5.20615066083972,5.3666897647573375,5.5300801301023865,5.696336044816294,5.865471690767354,6.037501145825082,6.212438385869475,6.390297286737924,6.571091626112461,6.7548350853498045,6.941541251256611,7.131223617812143,7.323895587840543,7.5195704746346665,7.7182615035334345,7.919981813454504,8.124744458384042,8.332562408825165,8.543448553206703,8.757415699253682,8.974476575321063,9.194643831691977,9.417930041841839,9.644347703669503,9.873909240696694,10.106627003236781,10.342513269534024,10.58158024687427,10.8238400726681,11.069304815507364,11.317986476196008,11.569896988756009,11.825048221409341,12.083451977536606,12.345119996613247,12.610063955123938,12.878295467455942,13.149826086772048,13.42466730586372,13.702830557985108,13.984327217668513,14.269168601521828,14.55736596900856,14.848930523210871,15.143873411576273,15.44220572664832,15.743938506781891,16.04908273684337,16.35764934889634,16.66964922287304,16.985093187232053,17.30399201960269,17.62635644741625,17.95219714852476,18.281524751807332,18.614349837764564,18.95068293910138,19.290534541298456,19.633915083172692,19.98083495742689,20.331304511189067,20.685334046541502,21.042933821039977,21.404114048223256,21.76888489811322,22.137256497705877,22.50923893145328,22.884842241736916,23.264076429332462,23.6469514538663,24.033477234264016,24.42366364919083,24.817520537484558,25.21505769858089,25.61628489293138,26.021211842414342,26.429848230738664,26.842203703840827,27.258287870275353,27.678110301598522,28.10168053274597,28.529008062403893,28.96010235337422,29.39497283293396,29.83362889318845,30.276079891419332,30.722335150426627,31.172403958865512,31.62629557157785,32.08401920991837,32.54558406207592,33.010999283389665,33.4802739966603,33.953417292456834,34.430438229418264,34.911345834551085,35.39614910352207,35.88485700094671,36.37747846067349,36.87402238606382,37.37449765026789,37.87891309649659,38.38727753828926,38.89959975977785,39.41588851594697,39.93615253289054,40.460400508064545,40.98864111053629,41.520882981230194,42.05713473317016,42.597404951718396,43.141702194811224,43.6900349931913,44.24241185063697,44.798841244188324,45.35933162437017,45.92389141541209,46.49252901546552,47.065252796817916,47.64207110610409,48.22299226451468,48.808024568002054,49.3971762874833,49.9904556690408,50.587870934119984,51.189430279724725,51.79514187861014,52.40501387947288,53.0190544071392,53.637271562750364,54.259673423945976,54.88626804504493,55.517063457223934,56.15206766869424,56.79128866487574,57.43473440856916,58.08241284012621,58.734331877617365,59.39049941699807,60.05092333227251,60.715611475655585,61.38457167773311,62.057811747619894,62.7353394731159,63.417162620860914,64.10328893648692,64.79372614476921,65.48848194977529,66.18756403501224,66.89098006357258,67.59873767827808,68.31084450182222,69.02730813691093,69.74813616640164,70.47333615344107,71.20291564160104,71.93688215501312,72.67524319850172,73.41800625771542,74.16517879925733,74.9167682708136,75.67278210128072,76.43322770089146,77.1981124613393,77.96744375590167,78.74122893956174,79.51947534912904,80.30219030335869,81.08938110306934,81.88105503125999,82.67721935322541,83.4778813166706,84.28304815182372,85.09272707154808,85.90692527145302,86.72564993000343,87.54890820862819,88.3767072518277,89.2090541872801,90.04595612594655,90.88742016217518,91.73345337380438,92.58406282226491,93.43925555268066,94.29903859396902,95.16341895893969,96.03240364439274,96.9059996312159,97.78421388448044,98.6670533535366,99.55452497210776];/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const Va=class Va{static from(A,s,R){return new Va(Rn.solveToInt(A,s,R))}static fromInt(A){return new Va(A)}toInt(){return this.argb}get hue(){return this.internalHue}set hue(A){this.setInternalState(Rn.solveToInt(A,this.internalChroma,this.internalTone))}get chroma(){return this.internalChroma}set chroma(A){this.setInternalState(Rn.solveToInt(this.internalHue,A,this.internalTone))}get tone(){return this.internalTone}set tone(A){this.setInternalState(Rn.solveToInt(this.internalHue,this.internalChroma,A))}constructor(A){this.argb=A;const s=ai.fromInt(A);this.internalHue=s.hue,this.internalChroma=s.chroma,this.internalTone=WV(A),this.argb=A}setInternalState(A){const s=ai.fromInt(A);this.internalHue=s.hue,this.internalChroma=s.chroma,this.internalTone=WV(A),this.argb=A}inViewingConditions(A){const R=ai.fromInt(this.toInt()).xyzInViewingConditions(A),I=ai.fromXyzInViewingConditions(R[0],R[1],R[2],fO.make());return Va.from(I.hue,I.chroma,c0(R[1]))}};T(Va,"Hct");let TT=Va;/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const rI=class rI{static ratioOfTones(A,s){return A=Ol(0,100,A),s=Ol(0,100,s),rI.ratioOfYs(DI(A),DI(s))}static ratioOfYs(A,s){const R=A>s?A:s,I=R===s?A:s;return(R+5)/(I+5)}static lighter(A,s){if(A<0||A>100)return-1;const R=DI(A),I=s*(R+5)-5,i=rI.ratioOfYs(I,R),a=Math.abs(i-s);if(i<s&&a>.04)return-1;const L=c0(I)+.4;return L<0||L>100?-1:L}static darker(A,s){if(A<0||A>100)return-1;const R=DI(A),I=(R+5)/s-5,i=rI.ratioOfYs(R,I),a=Math.abs(i-s);if(i<s&&a>.04)return-1;const L=c0(I)-.4;return L<0||L>100?-1:L}static lighterUnsafe(A,s){const R=rI.lighter(A,s);return R<0?100:R}static darkerUnsafe(A,s){const R=rI.darker(A,s);return R<0?0:R}};T(rI,"Contrast");let NR=rI;/**
 * @license
 * Copyright 2023 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const AM=class AM{static isDisliked(A){const s=Math.round(A.hue)>=90&&Math.round(A.hue)<=111,R=Math.round(A.chroma)>16,I=Math.round(A.tone)<65;return s&&R&&I}static fixIfDisliked(A){return AM.isDisliked(A)?TT.from(A.hue,A.chroma,70):A}};T(AM,"DislikeAnalyzer");let P0=AM;/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const $s=class $s{static fromPalette(A){return new $s(A.name??"",A.palette,A.tone,A.isBackground??!1,A.background,A.secondBackground,A.contrastCurve,A.toneDeltaPair)}constructor(A,s,R,I,i,a,L,S){if(this.name=A,this.palette=s,this.tone=R,this.isBackground=I,this.background=i,this.secondBackground=a,this.contrastCurve=L,this.toneDeltaPair=S,this.hctCache=new Map,!i&&a)throw new Error(`Color ${A} has secondBackgrounddefined, but background is not defined.`);if(!i&&L)throw new Error(`Color ${A} has contrastCurvedefined, but background is not defined.`);if(i&&!L)throw new Error(`Color ${A} has backgrounddefined, but contrastCurve is not defined.`)}getArgb(A){return this.getHct(A).toInt()}getHct(A){const s=this.hctCache.get(A);if(s!=null)return s;const R=this.getTone(A),I=this.palette(A).getHct(R);return this.hctCache.size>4&&this.hctCache.clear(),this.hctCache.set(A,I),I}getTone(A){const s=A.contrastLevel<0;if(this.toneDeltaPair){const R=this.toneDeltaPair(A),I=R.roleA,i=R.roleB,a=R.delta,L=R.polarity,S=R.stayTogether,l=this.background(A).getTone(A),D=L==="nearer"||L==="lighter"&&!A.isDark||L==="darker"&&A.isDark,M=D?I:i,c=D?i:I,G=this.name===M.name,P=A.isDark?1:-1,_=M.contrastCurve.getContrast(A.contrastLevel),g=c.contrastCurve.getContrast(A.contrastLevel),H=M.tone(A);let F=NR.ratioOfTones(l,H)>=_?H:$s.foregroundTone(l,_);const p=c.tone(A);let v=NR.ratioOfTones(l,p)>=g?p:$s.foregroundTone(l,g);return s&&(F=$s.foregroundTone(l,_),v=$s.foregroundTone(l,g)),(v-F)*P>=a||(v=Ol(0,100,F+a*P),(v-F)*P>=a||(F=Ol(0,100,v-a*P))),50<=F&&F<60?P>0?(F=60,v=Math.max(v,F+a*P)):(F=49,v=Math.min(v,F+a*P)):50<=v&&v<60&&(S?P>0?(F=60,v=Math.max(v,F+a*P)):(F=49,v=Math.min(v,F+a*P)):P>0?v=60:v=49),G?F:v}else{let R=this.tone(A);if(this.background==null)return R;const I=this.background(A).getTone(A),i=this.contrastCurve.getContrast(A.contrastLevel);if(NR.ratioOfTones(I,R)>=i||(R=$s.foregroundTone(I,i)),s&&(R=$s.foregroundTone(I,i)),this.isBackground&&50<=R&&R<60&&(NR.ratioOfTones(49,I)>=i?R=49:R=60),this.secondBackground){const[a,L]=[this.background,this.secondBackground],[S,o]=[a(A).getTone(A),L(A).getTone(A)],[l,D]=[Math.max(S,o),Math.min(S,o)];if(NR.ratioOfTones(l,R)>=i&&NR.ratioOfTones(D,R)>=i)return R;const M=NR.lighter(l,i),c=NR.darker(D,i),G=[];return M!==-1&&G.push(M),c!==-1&&G.push(c),$s.tonePrefersLightForeground(S)||$s.tonePrefersLightForeground(o)?M<0?100:M:G.length===1?G[0]:c<0?0:c}return R}}static foregroundTone(A,s){const R=NR.lighterUnsafe(A,s),I=NR.darkerUnsafe(A,s),i=NR.ratioOfTones(R,A),a=NR.ratioOfTones(I,A);if($s.tonePrefersLightForeground(A)){const S=Math.abs(i-a)<.1&&i<s&&a<s;return i>=s||i>=a||S?R:I}else return a>=s||a>=i?I:R}static tonePrefersLightForeground(A){return Math.round(A)<60}static toneAllowsLightForeground(A){return Math.round(A)<=49}static enableLightForeground(A){return $s.tonePrefersLightForeground(A)&&!$s.toneAllowsLightForeground(A)?49:A}};T($s,"DynamicColor");let Tt=$s;/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var ST;(function(E){E[E.MONOCHROME=0]="MONOCHROME",E[E.NEUTRAL=1]="NEUTRAL",E[E.TONAL_SPOT=2]="TONAL_SPOT",E[E.VIBRANT=3]="VIBRANT",E[E.EXPRESSIVE=4]="EXPRESSIVE",E[E.FIDELITY=5]="FIDELITY",E[E.CONTENT=6]="CONTENT",E[E.RAINBOW=7]="RAINBOW",E[E.FRUIT_SALAD=8]="FRUIT_SALAD"})(ST||(ST={}));/**
 * @license
 * Copyright 2023 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const q1=class q1{constructor(A,s,R,I){this.low=A,this.normal=s,this.medium=R,this.high=I}getContrast(A){return A<=-1?this.low:A<0?Tr(this.low,this.normal,(A- -1)/1):A<.5?Tr(this.normal,this.medium,(A-0)/.5):A<1?Tr(this.medium,this.high,(A-.5)/.5):this.high}};T(q1,"ContrastCurve");let AA=q1;/**
 * @license
 * Copyright 2023 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const j1=class j1{constructor(A,s,R,I,i){this.roleA=A,this.roleB=s,this.delta=R,this.polarity=I,this.stayTogether=i}};T(j1,"ToneDeltaPair");let bs=j1;/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function qL(E){return E.variant===ST.FIDELITY||E.variant===ST.CONTENT}T(qL,"isFidelity");function dE(E){return E.variant===ST.MONOCHROME}T(dE,"isMonochrome");function o8(E,A,s,R){let I=s,i=TT.from(E,A,s);if(i.chroma<A){let a=i.chroma;for(;i.chroma<A;){I+=R?-1:1;const L=TT.from(E,A,I);if(a>L.chroma||Math.abs(L.chroma-A)<.4)break;const S=Math.abs(L.chroma-A),o=Math.abs(i.chroma-A);S<o&&(i=L),a=Math.max(a,L.chroma)}}return I}T(o8,"findDesiredChromaByTone");function l8(E){return fO.make(void 0,void 0,E.isDark?30:80,void 0,void 0)}T(l8,"viewingConditionsForAlbers");function U1(E,A){const s=E.inViewingConditions(l8(A));return Tt.tonePrefersLightForeground(E.tone)&&!Tt.toneAllowsLightForeground(s.tone)?Tt.enableLightForeground(E.tone):Tt.enableLightForeground(s.tone)}T(U1,"performAlbers");const eN=class eN{static highestSurface(A){return A.isDark?eN.surfaceBright:eN.surfaceDim}};T(eN,"MaterialDynamicColors");let _e=eN;_e.contentAccentToneDelta=15;_e.primaryPaletteKeyColor=Tt.fromPalette({name:"primary_palette_key_color",palette:T(E=>E.primaryPalette,"palette"),tone:T(E=>E.primaryPalette.keyColor.tone,"tone")});_e.secondaryPaletteKeyColor=Tt.fromPalette({name:"secondary_palette_key_color",palette:T(E=>E.secondaryPalette,"palette"),tone:T(E=>E.secondaryPalette.keyColor.tone,"tone")});_e.tertiaryPaletteKeyColor=Tt.fromPalette({name:"tertiary_palette_key_color",palette:T(E=>E.tertiaryPalette,"palette"),tone:T(E=>E.tertiaryPalette.keyColor.tone,"tone")});_e.neutralPaletteKeyColor=Tt.fromPalette({name:"neutral_palette_key_color",palette:T(E=>E.neutralPalette,"palette"),tone:T(E=>E.neutralPalette.keyColor.tone,"tone")});_e.neutralVariantPaletteKeyColor=Tt.fromPalette({name:"neutral_variant_palette_key_color",palette:T(E=>E.neutralVariantPalette,"palette"),tone:T(E=>E.neutralVariantPalette.keyColor.tone,"tone")});_e.background=Tt.fromPalette({name:"background",palette:T(E=>E.neutralPalette,"palette"),tone:T(E=>E.isDark?6:98,"tone"),isBackground:!0});_e.onBackground=Tt.fromPalette({name:"on_background",palette:T(E=>E.neutralPalette,"palette"),tone:T(E=>E.isDark?90:10,"tone"),background:T(E=>_e.background,"background"),contrastCurve:new AA(3,3,4.5,7)});_e.surface=Tt.fromPalette({name:"surface",palette:T(E=>E.neutralPalette,"palette"),tone:T(E=>E.isDark?6:98,"tone"),isBackground:!0});_e.surfaceDim=Tt.fromPalette({name:"surface_dim",palette:T(E=>E.neutralPalette,"palette"),tone:T(E=>E.isDark?6:87,"tone"),isBackground:!0});_e.surfaceBright=Tt.fromPalette({name:"surface_bright",palette:T(E=>E.neutralPalette,"palette"),tone:T(E=>E.isDark?24:98,"tone"),isBackground:!0});_e.surfaceContainerLowest=Tt.fromPalette({name:"surface_container_lowest",palette:T(E=>E.neutralPalette,"palette"),tone:T(E=>E.isDark?4:100,"tone"),isBackground:!0});_e.surfaceContainerLow=Tt.fromPalette({name:"surface_container_low",palette:T(E=>E.neutralPalette,"palette"),tone:T(E=>E.isDark?10:96,"tone"),isBackground:!0});_e.surfaceContainer=Tt.fromPalette({name:"surface_container",palette:T(E=>E.neutralPalette,"palette"),tone:T(E=>E.isDark?12:94,"tone"),isBackground:!0});_e.surfaceContainerHigh=Tt.fromPalette({name:"surface_container_high",palette:T(E=>E.neutralPalette,"palette"),tone:T(E=>E.isDark?17:92,"tone"),isBackground:!0});_e.surfaceContainerHighest=Tt.fromPalette({name:"surface_container_highest",palette:T(E=>E.neutralPalette,"palette"),tone:T(E=>E.isDark?22:90,"tone"),isBackground:!0});_e.onSurface=Tt.fromPalette({name:"on_surface",palette:T(E=>E.neutralPalette,"palette"),tone:T(E=>E.isDark?90:10,"tone"),background:T(E=>_e.highestSurface(E),"background"),contrastCurve:new AA(4.5,7,11,21)});_e.surfaceVariant=Tt.fromPalette({name:"surface_variant",palette:T(E=>E.neutralVariantPalette,"palette"),tone:T(E=>E.isDark?30:90,"tone"),isBackground:!0});_e.onSurfaceVariant=Tt.fromPalette({name:"on_surface_variant",palette:T(E=>E.neutralVariantPalette,"palette"),tone:T(E=>E.isDark?80:30,"tone"),background:T(E=>_e.highestSurface(E),"background"),contrastCurve:new AA(3,4.5,7,11)});_e.inverseSurface=Tt.fromPalette({name:"inverse_surface",palette:T(E=>E.neutralPalette,"palette"),tone:T(E=>E.isDark?90:20,"tone")});_e.inverseOnSurface=Tt.fromPalette({name:"inverse_on_surface",palette:T(E=>E.neutralPalette,"palette"),tone:T(E=>E.isDark?20:95,"tone"),background:T(E=>_e.inverseSurface,"background"),contrastCurve:new AA(4.5,7,11,21)});_e.outline=Tt.fromPalette({name:"outline",palette:T(E=>E.neutralVariantPalette,"palette"),tone:T(E=>E.isDark?60:50,"tone"),background:T(E=>_e.highestSurface(E),"background"),contrastCurve:new AA(1.5,3,4.5,7)});_e.outlineVariant=Tt.fromPalette({name:"outline_variant",palette:T(E=>E.neutralVariantPalette,"palette"),tone:T(E=>E.isDark?30:80,"tone"),background:T(E=>_e.highestSurface(E),"background"),contrastCurve:new AA(1,1,3,7)});_e.shadow=Tt.fromPalette({name:"shadow",palette:T(E=>E.neutralPalette,"palette"),tone:T(E=>0,"tone")});_e.scrim=Tt.fromPalette({name:"scrim",palette:T(E=>E.neutralPalette,"palette"),tone:T(E=>0,"tone")});_e.surfaceTint=Tt.fromPalette({name:"surface_tint",palette:T(E=>E.primaryPalette,"palette"),tone:T(E=>E.isDark?80:40,"tone"),isBackground:!0});_e.primary=Tt.fromPalette({name:"primary",palette:T(E=>E.primaryPalette,"palette"),tone:T(E=>dE(E)?E.isDark?100:0:E.isDark?80:40,"tone"),isBackground:!0,background:T(E=>_e.highestSurface(E),"background"),contrastCurve:new AA(3,4.5,7,11),toneDeltaPair:T(E=>new bs(_e.primaryContainer,_e.primary,15,"nearer",!1),"toneDeltaPair")});_e.onPrimary=Tt.fromPalette({name:"on_primary",palette:T(E=>E.primaryPalette,"palette"),tone:T(E=>dE(E)?E.isDark?10:90:E.isDark?20:100,"tone"),background:T(E=>_e.primary,"background"),contrastCurve:new AA(4.5,7,11,21)});_e.primaryContainer=Tt.fromPalette({name:"primary_container",palette:T(E=>E.primaryPalette,"palette"),tone:T(E=>qL(E)?U1(E.sourceColorHct,E):dE(E)?E.isDark?85:25:E.isDark?30:90,"tone"),isBackground:!0,background:T(E=>_e.highestSurface(E),"background"),contrastCurve:new AA(1,1,3,7),toneDeltaPair:T(E=>new bs(_e.primaryContainer,_e.primary,15,"nearer",!1),"toneDeltaPair")});_e.onPrimaryContainer=Tt.fromPalette({name:"on_primary_container",palette:T(E=>E.primaryPalette,"palette"),tone:T(E=>qL(E)?Tt.foregroundTone(_e.primaryContainer.tone(E),4.5):dE(E)?E.isDark?0:100:E.isDark?90:10,"tone"),background:T(E=>_e.primaryContainer,"background"),contrastCurve:new AA(4.5,7,11,21)});_e.inversePrimary=Tt.fromPalette({name:"inverse_primary",palette:T(E=>E.primaryPalette,"palette"),tone:T(E=>E.isDark?40:80,"tone"),background:T(E=>_e.inverseSurface,"background"),contrastCurve:new AA(3,4.5,7,11)});_e.secondary=Tt.fromPalette({name:"secondary",palette:T(E=>E.secondaryPalette,"palette"),tone:T(E=>E.isDark?80:40,"tone"),isBackground:!0,background:T(E=>_e.highestSurface(E),"background"),contrastCurve:new AA(3,4.5,7,11),toneDeltaPair:T(E=>new bs(_e.secondaryContainer,_e.secondary,15,"nearer",!1),"toneDeltaPair")});_e.onSecondary=Tt.fromPalette({name:"on_secondary",palette:T(E=>E.secondaryPalette,"palette"),tone:T(E=>dE(E)?E.isDark?10:100:E.isDark?20:100,"tone"),background:T(E=>_e.secondary,"background"),contrastCurve:new AA(4.5,7,11,21)});_e.secondaryContainer=Tt.fromPalette({name:"secondary_container",palette:T(E=>E.secondaryPalette,"palette"),tone:T(E=>{const A=E.isDark?30:90;if(dE(E))return E.isDark?30:85;if(!qL(E))return A;let s=o8(E.secondaryPalette.hue,E.secondaryPalette.chroma,A,!E.isDark);return s=U1(E.secondaryPalette.getHct(s),E),s},"tone"),isBackground:!0,background:T(E=>_e.highestSurface(E),"background"),contrastCurve:new AA(1,1,3,7),toneDeltaPair:T(E=>new bs(_e.secondaryContainer,_e.secondary,15,"nearer",!1),"toneDeltaPair")});_e.onSecondaryContainer=Tt.fromPalette({name:"on_secondary_container",palette:T(E=>E.secondaryPalette,"palette"),tone:T(E=>qL(E)?Tt.foregroundTone(_e.secondaryContainer.tone(E),4.5):E.isDark?90:10,"tone"),background:T(E=>_e.secondaryContainer,"background"),contrastCurve:new AA(4.5,7,11,21)});_e.tertiary=Tt.fromPalette({name:"tertiary",palette:T(E=>E.tertiaryPalette,"palette"),tone:T(E=>dE(E)?E.isDark?90:25:E.isDark?80:40,"tone"),isBackground:!0,background:T(E=>_e.highestSurface(E),"background"),contrastCurve:new AA(3,4.5,7,11),toneDeltaPair:T(E=>new bs(_e.tertiaryContainer,_e.tertiary,15,"nearer",!1),"toneDeltaPair")});_e.onTertiary=Tt.fromPalette({name:"on_tertiary",palette:T(E=>E.tertiaryPalette,"palette"),tone:T(E=>dE(E)?E.isDark?10:90:E.isDark?20:100,"tone"),background:T(E=>_e.tertiary,"background"),contrastCurve:new AA(4.5,7,11,21)});_e.tertiaryContainer=Tt.fromPalette({name:"tertiary_container",palette:T(E=>E.tertiaryPalette,"palette"),tone:T(E=>{if(dE(E))return E.isDark?60:49;if(!qL(E))return E.isDark?30:90;const A=U1(E.tertiaryPalette.getHct(E.sourceColorHct.tone),E),s=E.tertiaryPalette.getHct(A);return P0.fixIfDisliked(s).tone},"tone"),isBackground:!0,background:T(E=>_e.highestSurface(E),"background"),contrastCurve:new AA(1,1,3,7),toneDeltaPair:T(E=>new bs(_e.tertiaryContainer,_e.tertiary,15,"nearer",!1),"toneDeltaPair")});_e.onTertiaryContainer=Tt.fromPalette({name:"on_tertiary_container",palette:T(E=>E.tertiaryPalette,"palette"),tone:T(E=>dE(E)?E.isDark?0:100:qL(E)?Tt.foregroundTone(_e.tertiaryContainer.tone(E),4.5):E.isDark?90:10,"tone"),background:T(E=>_e.tertiaryContainer,"background"),contrastCurve:new AA(4.5,7,11,21)});_e.error=Tt.fromPalette({name:"error",palette:T(E=>E.errorPalette,"palette"),tone:T(E=>E.isDark?80:40,"tone"),isBackground:!0,background:T(E=>_e.highestSurface(E),"background"),contrastCurve:new AA(3,4.5,7,11),toneDeltaPair:T(E=>new bs(_e.errorContainer,_e.error,15,"nearer",!1),"toneDeltaPair")});_e.onError=Tt.fromPalette({name:"on_error",palette:T(E=>E.errorPalette,"palette"),tone:T(E=>E.isDark?20:100,"tone"),background:T(E=>_e.error,"background"),contrastCurve:new AA(4.5,7,11,21)});_e.errorContainer=Tt.fromPalette({name:"error_container",palette:T(E=>E.errorPalette,"palette"),tone:T(E=>E.isDark?30:90,"tone"),isBackground:!0,background:T(E=>_e.highestSurface(E),"background"),contrastCurve:new AA(1,1,3,7),toneDeltaPair:T(E=>new bs(_e.errorContainer,_e.error,15,"nearer",!1),"toneDeltaPair")});_e.onErrorContainer=Tt.fromPalette({name:"on_error_container",palette:T(E=>E.errorPalette,"palette"),tone:T(E=>E.isDark?90:10,"tone"),background:T(E=>_e.errorContainer,"background"),contrastCurve:new AA(4.5,7,11,21)});_e.primaryFixed=Tt.fromPalette({name:"primary_fixed",palette:T(E=>E.primaryPalette,"palette"),tone:T(E=>dE(E)?40:90,"tone"),isBackground:!0,background:T(E=>_e.highestSurface(E),"background"),contrastCurve:new AA(1,1,3,7),toneDeltaPair:T(E=>new bs(_e.primaryFixed,_e.primaryFixedDim,10,"lighter",!0),"toneDeltaPair")});_e.primaryFixedDim=Tt.fromPalette({name:"primary_fixed_dim",palette:T(E=>E.primaryPalette,"palette"),tone:T(E=>dE(E)?30:80,"tone"),isBackground:!0,background:T(E=>_e.highestSurface(E),"background"),contrastCurve:new AA(1,1,3,7),toneDeltaPair:T(E=>new bs(_e.primaryFixed,_e.primaryFixedDim,10,"lighter",!0),"toneDeltaPair")});_e.onPrimaryFixed=Tt.fromPalette({name:"on_primary_fixed",palette:T(E=>E.primaryPalette,"palette"),tone:T(E=>dE(E)?100:10,"tone"),background:T(E=>_e.primaryFixedDim,"background"),secondBackground:T(E=>_e.primaryFixed,"secondBackground"),contrastCurve:new AA(4.5,7,11,21)});_e.onPrimaryFixedVariant=Tt.fromPalette({name:"on_primary_fixed_variant",palette:T(E=>E.primaryPalette,"palette"),tone:T(E=>dE(E)?90:30,"tone"),background:T(E=>_e.primaryFixedDim,"background"),secondBackground:T(E=>_e.primaryFixed,"secondBackground"),contrastCurve:new AA(3,4.5,7,11)});_e.secondaryFixed=Tt.fromPalette({name:"secondary_fixed",palette:T(E=>E.secondaryPalette,"palette"),tone:T(E=>dE(E)?80:90,"tone"),isBackground:!0,background:T(E=>_e.highestSurface(E),"background"),contrastCurve:new AA(1,1,3,7),toneDeltaPair:T(E=>new bs(_e.secondaryFixed,_e.secondaryFixedDim,10,"lighter",!0),"toneDeltaPair")});_e.secondaryFixedDim=Tt.fromPalette({name:"secondary_fixed_dim",palette:T(E=>E.secondaryPalette,"palette"),tone:T(E=>dE(E)?70:80,"tone"),isBackground:!0,background:T(E=>_e.highestSurface(E),"background"),contrastCurve:new AA(1,1,3,7),toneDeltaPair:T(E=>new bs(_e.secondaryFixed,_e.secondaryFixedDim,10,"lighter",!0),"toneDeltaPair")});_e.onSecondaryFixed=Tt.fromPalette({name:"on_secondary_fixed",palette:T(E=>E.secondaryPalette,"palette"),tone:T(E=>10,"tone"),background:T(E=>_e.secondaryFixedDim,"background"),secondBackground:T(E=>_e.secondaryFixed,"secondBackground"),contrastCurve:new AA(4.5,7,11,21)});_e.onSecondaryFixedVariant=Tt.fromPalette({name:"on_secondary_fixed_variant",palette:T(E=>E.secondaryPalette,"palette"),tone:T(E=>dE(E)?25:30,"tone"),background:T(E=>_e.secondaryFixedDim,"background"),secondBackground:T(E=>_e.secondaryFixed,"secondBackground"),contrastCurve:new AA(3,4.5,7,11)});_e.tertiaryFixed=Tt.fromPalette({name:"tertiary_fixed",palette:T(E=>E.tertiaryPalette,"palette"),tone:T(E=>dE(E)?40:90,"tone"),isBackground:!0,background:T(E=>_e.highestSurface(E),"background"),contrastCurve:new AA(1,1,3,7),toneDeltaPair:T(E=>new bs(_e.tertiaryFixed,_e.tertiaryFixedDim,10,"lighter",!0),"toneDeltaPair")});_e.tertiaryFixedDim=Tt.fromPalette({name:"tertiary_fixed_dim",palette:T(E=>E.tertiaryPalette,"palette"),tone:T(E=>dE(E)?30:80,"tone"),isBackground:!0,background:T(E=>_e.highestSurface(E),"background"),contrastCurve:new AA(1,1,3,7),toneDeltaPair:T(E=>new bs(_e.tertiaryFixed,_e.tertiaryFixedDim,10,"lighter",!0),"toneDeltaPair")});_e.onTertiaryFixed=Tt.fromPalette({name:"on_tertiary_fixed",palette:T(E=>E.tertiaryPalette,"palette"),tone:T(E=>dE(E)?100:10,"tone"),background:T(E=>_e.tertiaryFixedDim,"background"),secondBackground:T(E=>_e.tertiaryFixed,"secondBackground"),contrastCurve:new AA(4.5,7,11,21)});_e.onTertiaryFixedVariant=Tt.fromPalette({name:"on_tertiary_fixed_variant",palette:T(E=>E.tertiaryPalette,"palette"),tone:T(E=>dE(E)?90:30,"tone"),background:T(E=>_e.tertiaryFixedDim,"background"),secondBackground:T(E=>_e.tertiaryFixed,"secondBackground"),contrastCurve:new AA(3,4.5,7,11)});/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const z1=class z1{fromInt(A){return N8(A)}toInt(A){return r8(A[0],A[1],A[2])}distance(A,s){const R=A[0]-s[0],I=A[1]-s[1],i=A[2]-s[2];return R*R+I*I+i*i}};T(z1,"LabPointProvider");let _0=z1;/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const C8=10,U8=3,ed=class ed{static quantize(A,s,R){const I=new Map,i=new Array,a=new Array,L=new _0;let S=0;for(let H=0;H<A.length;H++){const F=A[H],p=I.get(F);p===void 0?(S++,i.push(L.fromInt(F)),a.push(F),I.set(F,1)):I.set(F,p+1)}const o=new Array;for(let H=0;H<S;H++){const F=a[H],p=I.get(F);p!==void 0&&(o[H]=p)}let l=Math.min(R,S);s.length>0&&(l=Math.min(l,s.length));const D=new Array;for(let H=0;H<s.length;H++)D.push(L.fromInt(s[H]));const M=l-D.length;if(s.length===0&&M>0)for(let H=0;H<M;H++){const F=Math.random()*100,p=Math.random()*201+-100,v=Math.random()*201+-100;D.push(new Array(F,p,v))}const c=new Array;for(let H=0;H<S;H++)c.push(Math.floor(Math.random()*l));const G=new Array;for(let H=0;H<l;H++){G.push(new Array);for(let F=0;F<l;F++)G[H].push(0)}const P=new Array;for(let H=0;H<l;H++){P.push(new Array);for(let F=0;F<l;F++)P[H].push(new d0)}const _=new Array;for(let H=0;H<l;H++)_.push(0);for(let H=0;H<C8;H++){for(let j=0;j<l;j++){for(let q=j+1;q<l;q++){const ie=L.distance(D[j],D[q]);P[q][j].distance=ie,P[q][j].index=j,P[j][q].distance=ie,P[j][q].index=q}P[j].sort();for(let q=0;q<l;q++)G[j][q]=P[j][q].index}let F=0;for(let j=0;j<S;j++){const q=i[j],ie=c[j],z=D[ie],Oe=L.distance(q,z);let ae=Oe,Le=-1;for(let Ne=0;Ne<l;Ne++){if(P[ie][Ne].distance>=4*Oe)continue;const De=L.distance(q,D[Ne]);De<ae&&(ae=De,Le=Ne)}Le!==-1&&Math.abs(Math.sqrt(ae)-Math.sqrt(Oe))>U8&&(F++,c[j]=Le)}if(F===0&&H!==0)break;const p=new Array(l).fill(0),v=new Array(l).fill(0),k=new Array(l).fill(0);for(let j=0;j<l;j++)_[j]=0;for(let j=0;j<S;j++){const q=c[j],ie=i[j],z=o[j];_[q]+=z,p[q]+=ie[0]*z,v[q]+=ie[1]*z,k[q]+=ie[2]*z}for(let j=0;j<l;j++){const q=_[j];if(q===0){D[j]=[0,0,0];continue}const ie=p[j]/q,z=v[j]/q,Oe=k[j]/q;D[j]=[ie,z,Oe]}}const g=new Map;for(let H=0;H<l;H++){const F=_[H];if(F===0)continue;const p=L.toInt(D[H]);g.has(p)||g.set(p,F)}return g}};T(ed,"QuantizerWsmeans");let H0=ed;const td=class td{constructor(){this.distance=-1,this.index=-1}};T(td,"DistanceAndIndex");let d0=td;/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const Ad=class Ad{static quantize(A){const s=new Map;for(let R=0;R<A.length;R++){const I=A[R];t6(I)<255||s.set(I,(s.get(I)??0)+1)}return s}};T(Ad,"QuantizerMap");let f0=Ad;/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const co=5,NO=33,Ar=35937,ks={RED:"red",GREEN:"green",BLUE:"blue"},Ed=class Ed{constructor(A=[],s=[],R=[],I=[],i=[],a=[]){this.weights=A,this.momentsR=s,this.momentsG=R,this.momentsB=I,this.moments=i,this.cubes=a}quantize(A,s){this.constructHistogram(A),this.computeMoments();const R=this.createBoxes(s);return this.createResult(R.resultCount)}constructHistogram(A){this.weights=Array.from({length:Ar}).fill(0),this.momentsR=Array.from({length:Ar}).fill(0),this.momentsG=Array.from({length:Ar}).fill(0),this.momentsB=Array.from({length:Ar}).fill(0),this.moments=Array.from({length:Ar}).fill(0);const s=f0.quantize(A);for(const[R,I]of s.entries()){const i=KM(R),a=FM(R),L=mM(R),S=8-co,o=(i>>S)+1,l=(a>>S)+1,D=(L>>S)+1,M=this.getIndex(o,l,D);this.weights[M]=(this.weights[M]??0)+I,this.momentsR[M]+=I*i,this.momentsG[M]+=I*a,this.momentsB[M]+=I*L,this.moments[M]+=I*(i*i+a*a+L*L)}}computeMoments(){for(let A=1;A<NO;A++){const s=Array.from({length:NO}).fill(0),R=Array.from({length:NO}).fill(0),I=Array.from({length:NO}).fill(0),i=Array.from({length:NO}).fill(0),a=Array.from({length:NO}).fill(0);for(let L=1;L<NO;L++){let S=0,o=0,l=0,D=0,M=0;for(let c=1;c<NO;c++){const G=this.getIndex(A,L,c);S+=this.weights[G],o+=this.momentsR[G],l+=this.momentsG[G],D+=this.momentsB[G],M+=this.moments[G],s[c]+=S,R[c]+=o,I[c]+=l,i[c]+=D,a[c]+=M;const P=this.getIndex(A-1,L,c);this.weights[G]=this.weights[P]+s[c],this.momentsR[G]=this.momentsR[P]+R[c],this.momentsG[G]=this.momentsG[P]+I[c],this.momentsB[G]=this.momentsB[P]+i[c],this.moments[G]=this.moments[P]+a[c]}}}}createBoxes(A){this.cubes=Array.from({length:A}).fill(0).map(()=>new g0);const s=Array.from({length:A}).fill(0);this.cubes[0].r0=0,this.cubes[0].g0=0,this.cubes[0].b0=0,this.cubes[0].r1=NO-1,this.cubes[0].g1=NO-1,this.cubes[0].b1=NO-1;let R=A,I=0;for(let i=1;i<A;i++){this.cut(this.cubes[I],this.cubes[i])?(s[I]=this.cubes[I].vol>1?this.variance(this.cubes[I]):0,s[i]=this.cubes[i].vol>1?this.variance(this.cubes[i]):0):(s[I]=0,i--),I=0;let a=s[0];for(let L=1;L<=i;L++)s[L]>a&&(a=s[L],I=L);if(a<=0){R=i+1;break}}return new K0(A,R)}createResult(A){const s=[];for(let R=0;R<A;++R){const I=this.cubes[R],i=this.volume(I,this.weights);if(i>0){const a=Math.round(this.volume(I,this.momentsR)/i),L=Math.round(this.volume(I,this.momentsG)/i),S=Math.round(this.volume(I,this.momentsB)/i),o=255<<24|(a&255)<<16|(L&255)<<8|S&255;s.push(o)}}return s}variance(A){const s=this.volume(A,this.momentsR),R=this.volume(A,this.momentsG),I=this.volume(A,this.momentsB),i=this.moments[this.getIndex(A.r1,A.g1,A.b1)]-this.moments[this.getIndex(A.r1,A.g1,A.b0)]-this.moments[this.getIndex(A.r1,A.g0,A.b1)]+this.moments[this.getIndex(A.r1,A.g0,A.b0)]-this.moments[this.getIndex(A.r0,A.g1,A.b1)]+this.moments[this.getIndex(A.r0,A.g1,A.b0)]+this.moments[this.getIndex(A.r0,A.g0,A.b1)]-this.moments[this.getIndex(A.r0,A.g0,A.b0)],a=s*s+R*R+I*I,L=this.volume(A,this.weights);return i-a/L}cut(A,s){const R=this.volume(A,this.momentsR),I=this.volume(A,this.momentsG),i=this.volume(A,this.momentsB),a=this.volume(A,this.weights),L=this.maximize(A,ks.RED,A.r0+1,A.r1,R,I,i,a),S=this.maximize(A,ks.GREEN,A.g0+1,A.g1,R,I,i,a),o=this.maximize(A,ks.BLUE,A.b0+1,A.b1,R,I,i,a);let l;const D=L.maximum,M=S.maximum,c=o.maximum;if(D>=M&&D>=c){if(L.cutLocation<0)return!1;l=ks.RED}else M>=D&&M>=c?l=ks.GREEN:l=ks.BLUE;switch(s.r1=A.r1,s.g1=A.g1,s.b1=A.b1,l){case ks.RED:A.r1=L.cutLocation,s.r0=A.r1,s.g0=A.g0,s.b0=A.b0;break;case ks.GREEN:A.g1=S.cutLocation,s.r0=A.r0,s.g0=A.g1,s.b0=A.b0;break;case ks.BLUE:A.b1=o.cutLocation,s.r0=A.r0,s.g0=A.g0,s.b0=A.b1;break;default:throw new Error("unexpected direction "+l)}return A.vol=(A.r1-A.r0)*(A.g1-A.g0)*(A.b1-A.b0),s.vol=(s.r1-s.r0)*(s.g1-s.g0)*(s.b1-s.b0),!0}maximize(A,s,R,I,i,a,L,S){const o=this.bottom(A,s,this.momentsR),l=this.bottom(A,s,this.momentsG),D=this.bottom(A,s,this.momentsB),M=this.bottom(A,s,this.weights);let c=0,G=-1,P=0,_=0,g=0,H=0;for(let F=R;F<I;F++){if(P=o+this.top(A,s,F,this.momentsR),_=l+this.top(A,s,F,this.momentsG),g=D+this.top(A,s,F,this.momentsB),H=M+this.top(A,s,F,this.weights),H===0)continue;let p=(P*P+_*_+g*g)*1,v=H*1,k=p/v;P=i-P,_=a-_,g=L-g,H=S-H,H!==0&&(p=(P*P+_*_+g*g)*1,v=H*1,k+=p/v,k>c&&(c=k,G=F))}return new F0(G,c)}volume(A,s){return s[this.getIndex(A.r1,A.g1,A.b1)]-s[this.getIndex(A.r1,A.g1,A.b0)]-s[this.getIndex(A.r1,A.g0,A.b1)]+s[this.getIndex(A.r1,A.g0,A.b0)]-s[this.getIndex(A.r0,A.g1,A.b1)]+s[this.getIndex(A.r0,A.g1,A.b0)]+s[this.getIndex(A.r0,A.g0,A.b1)]-s[this.getIndex(A.r0,A.g0,A.b0)]}bottom(A,s,R){switch(s){case ks.RED:return-R[this.getIndex(A.r0,A.g1,A.b1)]+R[this.getIndex(A.r0,A.g1,A.b0)]+R[this.getIndex(A.r0,A.g0,A.b1)]-R[this.getIndex(A.r0,A.g0,A.b0)];case ks.GREEN:return-R[this.getIndex(A.r1,A.g0,A.b1)]+R[this.getIndex(A.r1,A.g0,A.b0)]+R[this.getIndex(A.r0,A.g0,A.b1)]-R[this.getIndex(A.r0,A.g0,A.b0)];case ks.BLUE:return-R[this.getIndex(A.r1,A.g1,A.b0)]+R[this.getIndex(A.r1,A.g0,A.b0)]+R[this.getIndex(A.r0,A.g1,A.b0)]-R[this.getIndex(A.r0,A.g0,A.b0)];default:throw new Error("unexpected direction $direction")}}top(A,s,R,I){switch(s){case ks.RED:return I[this.getIndex(R,A.g1,A.b1)]-I[this.getIndex(R,A.g1,A.b0)]-I[this.getIndex(R,A.g0,A.b1)]+I[this.getIndex(R,A.g0,A.b0)];case ks.GREEN:return I[this.getIndex(A.r1,R,A.b1)]-I[this.getIndex(A.r1,R,A.b0)]-I[this.getIndex(A.r0,R,A.b1)]+I[this.getIndex(A.r0,R,A.b0)];case ks.BLUE:return I[this.getIndex(A.r1,A.g1,R)]-I[this.getIndex(A.r1,A.g0,R)]-I[this.getIndex(A.r0,A.g1,R)]+I[this.getIndex(A.r0,A.g0,R)];default:throw new Error("unexpected direction $direction")}}getIndex(A,s,R){return(A<<co*2)+(A<<co+1)+A+(s<<co)+s+R}};T(Ed,"QuantizerWu");let B0=Ed;const sd=class sd{constructor(A=0,s=0,R=0,I=0,i=0,a=0,L=0){this.r0=A,this.r1=s,this.g0=R,this.g1=I,this.b0=i,this.b1=a,this.vol=L}};T(sd,"Box");let g0=sd;const Rd=class Rd{constructor(A,s){this.requestedCount=A,this.resultCount=s}};T(Rd,"CreateBoxesResult");let K0=Rd;const Od=class Od{constructor(A,s){this.cutLocation=A,this.maximum=s}};T(Od,"MaximizeResult");let F0=Od;/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const nd=class nd{static quantize(A,s){const I=new B0().quantize(A,s);return H0.quantize(A,I,s)}};T(nd,"QuantizerCelebi");let oT=nd;const oE={[e.BULBASAUR]:[t.SAPPY_SEED,t.MALIGNANT_CHAIN,t.EARTH_POWER,t.MATCHA_GOTCHA],[e.CHARMANDER]:[t.DRAGON_DANCE,t.BITTER_BLADE,t.EARTH_POWER,t.OBLIVION_WING],[e.SQUIRTLE]:[t.FREEZE_DRY,t.SHORE_UP,t.BOUNCY_BUBBLE,t.ORIGIN_PULSE],[e.CATERPIE]:[t.SANDSEAR_STORM,t.SILK_TRAP,t.TWIN_BEAM,t.BLEAKWIND_STORM],[e.WEEDLE]:[t.THOUSAND_ARROWS,t.NOXIOUS_TORQUE,t.ATTACK_ORDER,t.VICTORY_DANCE],[e.PIDGEY]:[t.WILDBOLT_STORM,t.SANDSEAR_STORM,t.NASTY_PLOT,t.BOOMBURST],[e.RATTATA]:[t.HYPER_FANG,t.PSYCHIC_FANGS,t.FIRE_FANG,t.EXTREME_SPEED],[e.SPEAROW]:[t.FLOATY_FALL,t.EXTREME_SPEED,t.TIDY_UP,t.TRIPLE_ARROWS],[e.EKANS]:[t.NOXIOUS_TORQUE,t.DRAGON_DANCE,t.SLACK_OFF,t.SHED_TAIL],[e.SANDSHREW]:[t.HIGH_HORSEPOWER,t.DIRE_CLAW,t.SHORE_UP,t.MIGHTY_CLEAVE],[e.NIDORAN_F]:[t.NO_RETREAT,t.BANEFUL_BUNKER,t.SANDSEAR_STORM,t.MALIGNANT_CHAIN],[e.NIDORAN_M]:[t.NOXIOUS_TORQUE,t.KINGS_SHIELD,t.NO_RETREAT,t.PRECIPICE_BLADES],[e.VULPIX]:[t.MOONBLAST,t.INFERNAL_PARADE,t.MORNING_SUN,t.TAIL_GLOW],[e.ZUBAT]:[t.FLOATY_FALL,t.DIRE_CLAW,t.SWORDS_DANCE,t.COLLISION_COURSE],[e.ODDISH]:[t.SLUDGE_BOMB,t.FIERY_DANCE,t.STRENGTH_SAP,t.SPORE],[e.PARAS]:[t.LEECH_LIFE,t.HORN_LEECH,t.CRABHAMMER,t.SAPPY_SEED],[e.VENONAT]:[t.SLUDGE_BOMB,t.TOXIC_THREAD,t.EARTH_POWER,t.STORED_POWER],[e.DIGLETT]:[t.TRIPLE_DIVE,t.SWORDS_DANCE,t.TRIPLE_AXEL,t.HEADLONG_RUSH],[e.MEOWTH]:[t.HEART_STAMP,t.SWORDS_DANCE,t.SIZZLY_SLIDE,t.TAIL_SLAP],[e.PSYDUCK]:[t.FROST_BREATH,t.AQUA_STEP,t.MYSTICAL_POWER,t.BOUNCY_BUBBLE],[e.MANKEY]:[t.DRAIN_PUNCH,t.SLACK_OFF,t.METEOR_MASH,t.NO_RETREAT],[e.GROWLITHE]:[t.ZING_ZAP,t.PARTING_SHOT,t.MORNING_SUN,t.SACRED_FIRE],[e.POLIWAG]:[t.SLACK_OFF,t.WILDBOLT_STORM,t.DRAIN_PUNCH,t.SURGING_STRIKES],[e.ABRA]:[t.AURA_SPHERE,t.BADDY_BAD,t.ICE_BEAM,t.PSYSTRIKE],[e.MACHOP]:[t.COMBAT_TORQUE,t.METEOR_MASH,t.MOUNTAIN_GALE,t.FISSURE],[e.BELLSPROUT]:[t.SOLAR_BLADE,t.STRENGTH_SAP,t.FIRE_LASH,t.VICTORY_DANCE],[e.TENTACOOL]:[t.BANEFUL_BUNKER,t.STRENGTH_SAP,t.BOUNCY_BUBBLE,t.MALIGNANT_CHAIN],[e.GEODUDE]:[t.FLARE_BLITZ,t.HEAD_SMASH,t.SHORE_UP,t.SHELL_SMASH],[e.PONYTA]:[t.HIGH_HORSEPOWER,t.FIRE_LASH,t.SWORDS_DANCE,t.VOLT_TACKLE],[e.SLOWPOKE]:[t.BOUNCY_BUBBLE,t.FLAMETHROWER,t.MYSTICAL_POWER,t.SHED_TAIL],[e.MAGNEMITE]:[t.PARABOLIC_CHARGE,t.FLAMETHROWER,t.ICE_BEAM,t.THUNDERCLAP],[e.FARFETCHD]:[t.IVY_CUDGEL,t.TRIPLE_ARROWS,t.DRILL_RUN,t.VICTORY_DANCE],[e.DODUO]:[t.TRIPLE_AXEL,t.MULTI_ATTACK,t.FLOATY_FALL,t.TRIPLE_ARROWS],[e.SEEL]:[t.FREEZE_DRY,t.BOUNCY_BUBBLE,t.SLACK_OFF,t.STEAM_ERUPTION],[e.GRIMER]:[t.SUCKER_PUNCH,t.CURSE,t.STRENGTH_SAP,t.NOXIOUS_TORQUE],[e.SHELLDER]:[t.ROCK_BLAST,t.WATER_SHURIKEN,t.BANEFUL_BUNKER,t.BONE_RUSH],[e.GASTLY]:[t.SLUDGE_BOMB,t.AURA_SPHERE,t.NASTY_PLOT,t.ASTRAL_BARRAGE],[e.ONIX]:[t.SHORE_UP,t.THOUSAND_WAVES,t.COIL,t.DIAMOND_STORM],[e.DROWZEE]:[t.BADDY_BAD,t.STRENGTH_SAP,t.LUMINA_CRASH,t.DARK_VOID],[e.KRABBY]:[t.DIRE_CLAW,t.JET_PUNCH,t.IVY_CUDGEL,t.SHELL_SMASH],[e.VOLTORB]:[t.NASTY_PLOT,t.FUSION_FLARE,t.FROST_BREATH,t.ELECTRO_DRIFT],[e.EXEGGCUTE]:[t.FICKLE_BEAM,t.APPLE_ACID,t.TRICK_ROOM,t.LUMINA_CRASH],[e.CUBONE]:[t.HEAD_SMASH,t.WOOD_HAMMER,t.SHADOW_SNEAK,t.BITTER_BLADE],[e.LICKITUNG]:[t.CRUSH_GRIP,t.FIRE_LASH,t.SLACK_OFF,t.MAGICAL_TORQUE],[e.KOFFING]:[t.SCALD,t.RECOVER,t.BODY_PRESS,t.MALIGNANT_CHAIN],[e.RHYHORN]:[t.SHORE_UP,t.ICE_HAMMER,t.ACCELEROCK,t.HEAD_SMASH],[e.TANGELA]:[t.STRENGTH_SAP,t.SNAP_TRAP,t.PARTING_SHOT,t.SAPPY_SEED],[e.KANGASKHAN]:[t.POWER_UP_PUNCH,t.TRAILBLAZE,t.FACADE,t.SEISMIC_TOSS],[e.HORSEA]:[t.SNIPE_SHOT,t.FROST_BREATH,t.HURRICANE,t.SPACIAL_REND],[e.GOLDEEN]:[t.GLACIAL_LANCE,t.SUPERCELL_SLAM,t.DRAGON_DANCE,t.FISHIOUS_REND],[e.STARYU]:[t.CALM_MIND,t.BOUNCY_BUBBLE,t.MOONBLAST,t.MYSTICAL_POWER],[e.SCYTHER]:[t.MIGHTY_CLEAVE,t.BUG_BITE,t.STORM_THROW,t.DOUBLE_IRON_BASH],[e.PINSIR]:[t.HEADLONG_RUSH,t.LEECH_LIFE,t.CRUSH_GRIP,t.EXTREME_SPEED],[e.TAUROS]:[t.HIGH_HORSEPOWER,t.FIRE_LASH,t.LIQUIDATION,t.COMBAT_TORQUE],[e.MAGIKARP]:[t.FLIP_TURN,t.ICE_SPINNER,t.DRAGON_ASCENT,t.SURGING_STRIKES],[e.LAPRAS]:[t.RECOVER,t.FREEZE_DRY,t.SCALD,t.SHELL_SMASH],[e.DITTO]:[t.MIMIC,t.SKETCH,t.METRONOME,t.IMPRISON],[e.EEVEE]:[t.WISH,t.NO_RETREAT,t.ZIPPY_ZAP,t.BOOMBURST],[e.PORYGON]:[t.THUNDERCLAP,t.AURA_SPHERE,t.FLAMETHROWER,t.TECHNO_BLAST],[e.OMANYTE]:[t.FREEZE_DRY,t.EARTH_POWER,t.POWER_GEM,t.STEAM_ERUPTION],[e.KABUTO]:[t.CEASELESS_EDGE,t.HIGH_HORSEPOWER,t.TRIPLE_DIVE,t.MIGHTY_CLEAVE],[e.AERODACTYL]:[t.FLOATY_FALL,t.FLARE_BLITZ,t.SWORDS_DANCE,t.MIGHTY_CLEAVE],[e.ARTICUNO]:[t.EARTH_POWER,t.CALM_MIND,t.AURORA_VEIL,t.AEROBLAST],[e.ZAPDOS]:[t.BLEAKWIND_STORM,t.CALM_MIND,t.SANDSEAR_STORM,t.ELECTRO_SHOT],[e.MOLTRES]:[t.SCORCHING_SANDS,t.CALM_MIND,t.AEROBLAST,t.TORCH_SONG],[e.DRATINI]:[t.DRAGON_HAMMER,t.CRUSH_GRIP,t.FIRE_LASH,t.GIGATON_HAMMER],[e.MEWTWO]:[t.METEOR_MASH,t.MOONBLAST,t.THUNDEROUS_KICK,t.PHOTON_GEYSER],[e.MEW]:[t.PHOTON_GEYSER,t.MOONBLAST,t.ASTRAL_BARRAGE,t.SHELL_SMASH],[e.CHIKORITA]:[t.SAPPY_SEED,t.STONE_AXE,t.DRAGON_DANCE,t.SPORE],[e.CYNDAQUIL]:[t.NASTY_PLOT,t.EARTH_POWER,t.FIERY_DANCE,t.ELECTRO_DRIFT],[e.TOTODILE]:[t.THUNDER_PUNCH,t.DRAGON_DANCE,t.TRIPLE_AXEL,t.FISHIOUS_REND],[e.SENTRET]:[t.TIDY_UP,t.FAKE_OUT,t.NUZZLE,t.EXTREME_SPEED],[e.HOOTHOOT]:[t.CALM_MIND,t.ESPER_WING,t.AEROBLAST,t.BOOMBURST],[e.LEDYBA]:[t.POLLEN_PUFF,t.THIEF,t.PARTING_SHOT,t.SPORE],[e.SPINARAK]:[t.PARTING_SHOT,t.ATTACK_ORDER,t.GASTRO_ACID,t.STRENGTH_SAP],[e.CHINCHOU]:[t.THUNDERCLAP,t.BOUNCY_BUBBLE,t.THUNDER_CAGE,t.TAIL_GLOW],[e.PICHU]:[t.MOONBLAST,t.TRIPLE_AXEL,t.FIERY_DANCE,t.AURA_WHEEL],[e.CLEFFA]:[t.CALM_MIND,t.EARTH_POWER,t.WISH,t.LIGHT_OF_RUIN],[e.IGGLYBUFF]:[t.DRAIN_PUNCH,t.GRAV_APPLE,t.SOFT_BOILED,t.EXTREME_SPEED],[e.TOGEPI]:[t.SCORCHING_SANDS,t.ROOST,t.RELIC_SONG,t.FIERY_DANCE],[e.NATU]:[t.AEROBLAST,t.ROOST,t.MOONBLAST,t.LUMINA_CRASH],[e.MAREEP]:[t.ICE_BEAM,t.PARABOLIC_CHARGE,t.CORE_ENFORCER,t.TAIL_GLOW],[e.HOPPIP]:[t.FLOATY_FALL,t.STRENGTH_SAP,t.SAPPY_SEED,t.SPORE],[e.AIPOM]:[t.TIDY_UP,t.STORM_THROW,t.FAKE_OUT,t.POPULATION_BOMB],[e.SUNKERN]:[t.SPORE,t.QUIVER_DANCE,t.FIERY_DANCE,t.HYDRO_STEAM],[e.YANMA]:[t.NASTY_PLOT,t.EARTH_POWER,t.HEAT_WAVE,t.BLEAKWIND_STORM],[e.WOOPER]:[t.SIZZLY_SLIDE,t.RECOVER,t.CURSE,t.SURGING_STRIKES],[e.MURKROW]:[t.TRIPLE_ARROWS,t.FLOATY_FALL,t.TIDY_UP,t.WICKED_BLOW],[e.MISDREAVUS]:[t.TAKE_HEART,t.MOONBLAST,t.AURA_SPHERE,t.ASTRAL_BARRAGE],[e.UNOWN]:[t.NATURE_POWER,t.COSMIC_POWER,t.ANCIENT_POWER,t.MYSTICAL_POWER],[e.GIRAFARIG]:[t.MYSTICAL_POWER,t.NIGHT_DAZE,t.RECOVER,t.BOOMBURST],[e.PINECO]:[t.METAL_BURST,t.SHORE_UP,t.BODY_PRESS,t.DIAMOND_STORM],[e.DUNSPARCE]:[t.WICKED_TORQUE,t.MAGICAL_TORQUE,t.BLAZING_TORQUE,t.EXTREME_SPEED],[e.GLIGAR]:[t.FLOATY_FALL,t.THOUSAND_WAVES,t.ROOST,t.MIGHTY_CLEAVE],[e.SNUBBULL]:[t.FACADE,t.EARTHQUAKE,t.SWORDS_DANCE,t.EXTREME_SPEED],[e.QWILFISH]:[t.BARB_BARRAGE,t.BANEFUL_BUNKER,t.KNOCK_OFF,t.FISHIOUS_REND],[e.SHUCKLE]:[t.STUFF_CHEEKS,t.HEAL_ORDER,t.BODY_PRESS,t.SALT_CURE],[e.HERACROSS]:[t.ROCK_BLAST,t.FIRST_IMPRESSION,t.ICICLE_SPEAR,t.DRAGON_DANCE],[e.SNEASEL]:[t.DIRE_CLAW,t.STORM_THROW,t.TRIPLE_AXEL,t.WICKED_BLOW],[e.TEDDIURSA]:[t.MOUNTAIN_GALE,t.FAKE_OUT,t.SLACK_OFF,t.PRECIPICE_BLADES],[e.SLUGMA]:[t.BURNING_BULWARK,t.POWER_GEM,t.SOLAR_BEAM,t.MAGMA_STORM],[e.SWINUB]:[t.SLACK_OFF,t.LANDS_WRATH,t.MIGHTY_CLEAVE,t.GLACIAL_LANCE],[e.CORSOLA]:[t.SCALD,t.FREEZE_DRY,t.STRENGTH_SAP,t.SALT_CURE],[e.REMORAID]:[t.WATER_SHURIKEN,t.TAKE_HEART,t.SHELL_SIDE_ARM,t.BOUNCY_BUBBLE],[e.DELIBIRD]:[t.BONEMERANG,t.FLOATY_FALL,t.VICTORY_DANCE,t.GLACIAL_LANCE],[e.SKARMORY]:[t.ROOST,t.BODY_PRESS,t.SPIKY_SHIELD,t.BEAK_BLAST],[e.HOUNDOUR]:[t.MOONLIGHT,t.FIERY_WRATH,t.SECRET_SWORD,t.HYDRO_STEAM],[e.PHANPY]:[t.SHORE_UP,t.SWORDS_DANCE,t.ICICLE_CRASH,t.COLLISION_COURSE],[e.STANTLER]:[t.THUNDEROUS_KICK,t.PHOTON_GEYSER,t.SWORDS_DANCE,t.BOOMBURST],[e.SMEARGLE]:[t.CONVERSION,t.BURNING_BULWARK,t.SALT_CURE,t.DARK_VOID],[e.TYROGUE]:[t.VICTORY_DANCE,t.THUNDEROUS_KICK,t.METEOR_MASH,t.WICKED_BLOW],[e.SMOOCHUM]:[t.EXPANDING_FORCE,t.AURA_SPHERE,t.FREEZE_DRY,t.QUIVER_DANCE],[e.ELEKID]:[t.FIRE_LASH,t.ZING_ZAP,t.MOUNTAIN_GALE,t.SHIFT_GEAR],[e.MAGBY]:[t.THUNDERCLAP,t.EARTH_POWER,t.ARMOR_CANNON,t.FLEUR_CANNON],[e.MILTANK]:[t.BODY_PRESS,t.BULK_UP,t.YAWN,t.SIZZLY_SLIDE],[e.RAIKOU]:[t.PARABOLIC_CHARGE,t.NASTY_PLOT,t.FROST_BREATH,t.ELECTRO_DRIFT],[e.ENTEI]:[t.BURNING_BULWARK,t.DRAGON_DANCE,t.EARTHQUAKE,t.MIGHTY_CLEAVE],[e.SUICUNE]:[t.RECOVER,t.NASTY_PLOT,t.FREEZE_DRY,t.STEAM_ERUPTION],[e.LARVITAR]:[t.DRAGON_DANCE,t.MOUNTAIN_GALE,t.SHORE_UP,t.DIAMOND_STORM],[e.LUGIA]:[t.NASTY_PLOT,t.LUMINA_CRASH,t.AURA_SPHERE,t.OBLIVION_WING],[e.HO_OH]:[t.BRAVE_BIRD,t.DRAGON_DANCE,t.REVIVAL_BLESSING,t.BOLT_BEAK],[e.CELEBI]:[t.PHOTON_GEYSER,t.MATCHA_GOTCHA,t.REVIVAL_BLESSING,t.QUIVER_DANCE],[e.TREECKO]:[t.NASTY_PLOT,t.APPLE_ACID,t.SECRET_SWORD,t.DRAGON_ENERGY],[e.TORCHIC]:[t.HIGH_JUMP_KICK,t.SUPERCELL_SLAM,t.BURNING_BULWARK,t.V_CREATE],[e.MUDKIP]:[t.SHORE_UP,t.MOUNTAIN_GALE,t.BULK_UP,t.SURGING_STRIKES],[e.POOCHYENA]:[t.JAW_LOCK,t.CLOSE_COMBAT,t.DIRE_CLAW,t.NO_RETREAT],[e.ZIGZAGOON]:[t.EXTREME_SPEED,t.NUZZLE,t.HIGH_HORSEPOWER,t.TIDY_UP],[e.WURMPLE]:[t.BATON_PASS,t.BLEAKWIND_STORM,t.STORED_POWER,t.MALIGNANT_CHAIN],[e.LOTAD]:[t.REVELATION_DANCE,t.APPLE_ACID,t.ICE_BEAM,t.QUIVER_DANCE],[e.SEEDOT]:[t.SWORDS_DANCE,t.SACRED_SWORD,t.KOWTOW_CLEAVE,t.BITTER_BLADE],[e.TAILLOW]:[t.BOOMBURST,t.FACADE,t.HEADLONG_RUSH,t.NO_RETREAT],[e.WINGULL]:[t.THUNDER,t.FLIP_TURN,t.CALM_MIND,t.STEAM_ERUPTION],[e.RALTS]:[t.PSYBLADE,t.BITTER_BLADE,t.NO_RETREAT,t.BOOMBURST],[e.SURSKIT]:[t.POLLEN_PUFF,t.FIERY_DANCE,t.BOUNCY_BUBBLE,t.AEROBLAST],[e.SHROOMISH]:[t.ACCELEROCK,t.TRAILBLAZE,t.STORM_THROW,t.SAPPY_SEED],[e.SLAKOTH]:[t.FACADE,t.DRAIN_PUNCH,t.KNOCK_OFF,t.SKILL_SWAP],[e.NINCADA]:[t.ATTACK_ORDER,t.STICKY_WEB,t.SPIRIT_SHACKLE,t.SHELL_SMASH],[e.WHISMUR]:[t.ALLURING_VOICE,t.SHIFT_GEAR,t.SPARKLING_ARIA,t.TORCH_SONG],[e.MAKUHITA]:[t.COMBAT_TORQUE,t.SLACK_OFF,t.HEAT_CRASH,t.DOUBLE_IRON_BASH],[e.AZURILL]:[t.JET_PUNCH,t.MAGICAL_TORQUE,t.SWORDS_DANCE,t.SURGING_STRIKES],[e.NOSEPASS]:[t.SHORE_UP,t.BODY_PRESS,t.CALM_MIND,t.TACHYON_CUTTER],[e.SKITTY]:[t.THUNDEROUS_KICK,t.ENTRAINMENT,t.TIDY_UP,t.V_CREATE],[e.SABLEYE]:[t.RECOVER,t.TOPSY_TURVY,t.CURSE,t.SALT_CURE],[e.MAWILE]:[t.BULLET_PUNCH,t.MAGICAL_TORQUE,t.EARTHQUAKE,t.SHIFT_GEAR],[e.ARON]:[t.HEAD_SMASH,t.BODY_PRESS,t.SHORE_UP,t.SALT_CURE],[e.MEDITITE]:[t.THUNDEROUS_KICK,t.SUCKER_PUNCH,t.BULLET_PUNCH,t.PHOTON_GEYSER],[e.ELECTRIKE]:[t.RISING_VOLTAGE,t.FLAMETHROWER,t.NASTY_PLOT,t.ICE_BEAM],[e.PLUSLE]:[t.FLAMETHROWER,t.GLITZY_GLOW,t.SPLISHY_SPLASH,t.TAIL_GLOW],[e.MINUN]:[t.ICE_BEAM,t.BADDY_BAD,t.SPARKLY_SWIRL,t.TAIL_GLOW],[e.VOLBEAT]:[t.BATON_PASS,t.STICKY_WEB,t.DECORATE,t.VICTORY_DANCE],[e.ILLUMISE]:[t.PARTING_SHOT,t.GLITZY_GLOW,t.POWDER,t.QUIVER_DANCE],[e.GULPIN]:[t.STRENGTH_SAP,t.EARTH_POWER,t.CALM_MIND,t.MALIGNANT_CHAIN],[e.CARVANHA]:[t.THUNDER_FANG,t.SWORDS_DANCE,t.OBSTRUCT,t.SURGING_STRIKES],[e.WAILMER]:[t.TAKE_HEART,t.BOUNCY_BUBBLE,t.SLACK_OFF,t.COMEUPPANCE],[e.NUMEL]:[t.TRICK_ROOM,t.ENERGY_BALL,t.MORNING_SUN,t.BLUE_FLARE],[e.TORKOAL]:[t.MORNING_SUN,t.BURNING_BULWARK,t.BODY_PRESS,t.HYDRO_STEAM],[e.SPOINK]:[t.AURA_SPHERE,t.MILK_DRINK,t.EXPANDING_FORCE,t.TAIL_GLOW],[e.SPINDA]:[t.SUPERPOWER,t.SLACK_OFF,t.FLEUR_CANNON,t.V_CREATE],[e.TRAPINCH]:[t.FIRE_LASH,t.DRAGON_DARTS,t.THOUSAND_ARROWS,t.DRAGON_ENERGY],[e.CACNEA]:[t.EARTH_POWER,t.CEASELESS_EDGE,t.NIGHT_DAZE,t.IVY_CUDGEL],[e.SWABLU]:[t.ROOST,t.NASTY_PLOT,t.FLOATY_FALL,t.BOOMBURST],[e.ZANGOOSE]:[t.FACADE,t.HIGH_HORSEPOWER,t.EXTREME_SPEED,t.TIDY_UP],[e.SEVIPER]:[t.ICE_BEAM,t.BITTER_BLADE,t.SUCKER_PUNCH,t.NO_RETREAT],[e.LUNATONE]:[t.POWER_GEM,t.MOONGEIST_BEAM,t.SHELL_SMASH,t.LUMINA_CRASH],[e.SOLROCK]:[t.PSYSHIELD_BASH,t.MIGHTY_CLEAVE,t.SHELL_SMASH,t.SACRED_FIRE],[e.BARBOACH]:[t.DRAGON_DANCE,t.ZING_ZAP,t.ICE_SPINNER,t.SURGING_STRIKES],[e.CORPHISH]:[t.CEASELESS_EDGE,t.JET_PUNCH,t.SUCKER_PUNCH,t.SHELL_SMASH],[e.BALTOY]:[t.RECOVER,t.STORED_POWER,t.BODY_PRESS,t.MYSTICAL_POWER],[e.LILEEP]:[t.POWER_GEM,t.SCALD,t.STRENGTH_SAP,t.SAPPY_SEED],[e.ANORITH]:[t.FIRST_IMPRESSION,t.LEECH_LIFE,t.DRAGON_DANCE,t.MIGHTY_CLEAVE],[e.FEEBAS]:[t.CALM_MIND,t.FREEZE_DRY,t.MOONBLAST,t.STEAM_ERUPTION],[e.CASTFORM]:[t.BOOMBURST,t.HYDRO_STEAM,t.ERUPTION,t.QUIVER_DANCE],[e.KECLEON]:[t.ZIPPY_ZAP,t.COIL,t.EXTREME_SPEED,t.MULTI_ATTACK],[e.SHUPPET]:[t.STORM_THROW,t.TIDY_UP,t.PARTING_SHOT,t.SPECTRAL_THIEF],[e.DUSKULL]:[t.BULK_UP,t.DRAIN_PUNCH,t.STRENGTH_SAP,t.RAGE_FIST],[e.TROPIUS]:[t.STUFF_CHEEKS,t.EARTH_POWER,t.APPLE_ACID,t.SAPPY_SEED],[e.ABSOL]:[t.KOWTOW_CLEAVE,t.SACRED_SWORD,t.PSYBLADE,t.BITTER_BLADE],[e.WYNAUT]:[t.RECOVER,t.SHED_TAIL,t.TAUNT,t.COMEUPPANCE],[e.SNORUNT]:[t.FREEZY_FROST,t.EXTREME_SPEED,t.EARTH_POWER,t.NO_RETREAT],[e.SPHEAL]:[t.FLIP_TURN,t.FREEZE_DRY,t.SLACK_OFF,t.STEAM_ERUPTION],[e.CLAMPERL]:[t.SHELL_SIDE_ARM,t.BOUNCY_BUBBLE,t.FREEZE_DRY,t.STEAM_ERUPTION],[e.RELICANTH]:[t.DRAGON_DANCE,t.SHORE_UP,t.WAVE_CRASH,t.DIAMOND_STORM],[e.LUVDISC]:[t.BATON_PASS,t.HEART_SWAP,t.GLITZY_GLOW,t.REVIVAL_BLESSING],[e.BAGON]:[t.FLOATY_FALL,t.FIRE_LASH,t.DRAGON_DANCE,t.GLAIVE_RUSH],[e.BELDUM]:[t.HEADLONG_RUSH,t.DRAIN_PUNCH,t.TRIPLE_AXEL,t.SHIFT_GEAR],[e.REGIROCK]:[t.STONE_AXE,t.BODY_PRESS,t.SHORE_UP,t.SALT_CURE],[e.REGICE]:[t.EARTH_POWER,t.TAKE_HEART,t.RECOVER,t.FREEZE_DRY],[e.REGISTEEL]:[t.BODY_PRESS,t.SIZZLY_SLIDE,t.RECOVER,t.GIGATON_HAMMER],[e.LATIAS]:[t.CORE_ENFORCER,t.FUSION_FLARE,t.SPARKLY_SWIRL,t.MYSTICAL_POWER],[e.LATIOS]:[t.CORE_ENFORCER,t.BLUE_FLARE,t.NASTY_PLOT,t.TACHYON_CUTTER],[e.KYOGRE]:[t.RECOVER,t.HURRICANE,t.FREEZY_FROST,t.WILDBOLT_STORM],[e.GROUDON]:[t.STONE_AXE,t.SOLAR_BLADE,t.MORNING_SUN,t.SACRED_FIRE],[e.RAYQUAZA]:[t.V_CREATE,t.DRAGON_DARTS,t.CORE_ENFORCER,t.OBLIVION_WING],[e.JIRACHI]:[t.TACHYON_CUTTER,t.TRIPLE_ARROWS,t.ROCK_SLIDE,t.SHELL_SMASH],[e.DEOXYS]:[t.COLLISION_COURSE,t.EARTH_POWER,t.PARTING_SHOT,t.LUMINA_CRASH],[e.TURTWIG]:[t.SHELL_SMASH,t.MIGHTY_CLEAVE,t.ICE_SPINNER,t.SAPPY_SEED],[e.CHIMCHAR]:[t.FIERY_DANCE,t.SECRET_SWORD,t.TRIPLE_AXEL,t.SACRED_FIRE],[e.PIPLUP]:[t.KINGS_SHIELD,t.TACHYON_CUTTER,t.ROOST,t.STEAM_ERUPTION],[e.STARLY]:[t.SWORDS_DANCE,t.HEAD_CHARGE,t.FLARE_BLITZ,t.EXTREME_SPEED],[e.BIDOOF]:[t.EXTREME_SPEED,t.COSMIC_POWER,t.POWER_TRIP,t.AQUA_STEP],[e.KRICKETOT]:[t.BONEMERANG,t.VICTORY_DANCE,t.STONE_AXE,t.POPULATION_BOMB],[e.SHINX]:[t.FIRE_LASH,t.TRIPLE_AXEL,t.ZIPPY_ZAP,t.BOLT_STRIKE],[e.BUDEW]:[t.FIERY_DANCE,t.ACID_SPRAY,t.BOUNCY_BUBBLE,t.QUIVER_DANCE],[e.CRANIDOS]:[t.VOLT_TACKLE,t.ACCELEROCK,t.FLARE_BLITZ,t.SHIFT_GEAR],[e.SHIELDON]:[t.SHORE_UP,t.BODY_PRESS,t.KINGS_SHIELD,t.DIAMOND_STORM],[e.BURMY]:[t.FIERY_DANCE,t.DEFEND_ORDER,t.HEAL_ORDER,t.SAPPY_SEED],[e.COMBEE]:[t.SPORE,t.FLOATY_FALL,t.KINGS_SHIELD,t.VICTORY_DANCE],[e.PACHIRISU]:[t.FREEZY_FROST,t.SIZZLY_SLIDE,t.SLACK_OFF,t.ZIPPY_ZAP],[e.BUIZEL]:[t.JET_PUNCH,t.TRIPLE_AXEL,t.SUPERCELL_SLAM,t.SURGING_STRIKES],[e.CHERUBI]:[t.SPORE,t.STRENGTH_SAP,t.FIRE_LASH,t.FLOWER_TRICK],[e.SHELLOS]:[t.BOUNCY_BUBBLE,t.SCORCHING_SANDS,t.FREEZE_DRY,t.STEAM_ERUPTION],[e.DRIFLOON]:[t.WILL_O_WISP,t.MIND_BLOWN,t.CALM_MIND,t.OBLIVION_WING],[e.BUNEARY]:[t.TRIPLE_AXEL,t.SWORDS_DANCE,t.THUNDEROUS_KICK,t.MULTI_ATTACK],[e.GLAMEOW]:[t.PARTING_SHOT,t.HIGH_HORSEPOWER,t.SWORDS_DANCE,t.EXTREME_SPEED],[e.CHINGLING]:[t.BUZZY_BUZZ,t.EERIE_SPELL,t.TORCH_SONG,t.BOOMBURST],[e.STUNKY]:[t.CEASELESS_EDGE,t.KNOCK_OFF,t.RECOVER,t.DIRE_CLAW],[e.BRONZOR]:[t.RECOVER,t.TACHYON_CUTTER,t.GLARE,t.LUMINA_CRASH],[e.BONSLY]:[t.ACCELEROCK,t.SWORDS_DANCE,t.STRENGTH_SAP,t.SAPPY_SEED],[e.MIME_JR]:[t.CHILLY_RECEPTION,t.MOONBLAST,t.FROST_BREATH,t.LUMINA_CRASH],[e.HAPPINY]:[t.COTTON_GUARD,t.SEISMIC_TOSS,t.SIZZLY_SLIDE,t.REVIVAL_BLESSING],[e.CHATOT]:[t.SPARKLING_ARIA,t.TORCH_SONG,t.BATON_PASS,t.BOOMBURST],[e.SPIRITOMB]:[t.PARTING_SHOT,t.BADDY_BAD,t.STRENGTH_SAP,t.SPECTRAL_THIEF],[e.GIBLE]:[t.DRAGON_DANCE,t.BITTER_BLADE,t.SHORE_UP,t.THOUSAND_ARROWS],[e.MUNCHLAX]:[t.STUFF_CHEEKS,t.GRAV_APPLE,t.SLACK_OFF,t.EXTREME_SPEED],[e.RIOLU]:[t.THUNDEROUS_KICK,t.TACHYON_CUTTER,t.TRIPLE_AXEL,t.DOUBLE_IRON_BASH],[e.HIPPOPOTAS]:[t.SHORE_UP,t.STONE_AXE,t.BULK_UP,t.SALT_CURE],[e.SKORUPI]:[t.COIL,t.DIRE_CLAW,t.CRABHAMMER,t.WICKED_BLOW],[e.CROAGUNK]:[t.DIRE_CLAW,t.ICE_SPINNER,t.THUNDEROUS_KICK,t.VICTORY_DANCE],[e.CARNIVINE]:[t.STRENGTH_SAP,t.FIRE_LASH,t.COIL,t.SAPPY_SEED],[e.FINNEON]:[t.QUIVER_DANCE,t.BOUNCY_BUBBLE,t.FREEZE_DRY,t.ORIGIN_PULSE],[e.MANTYKE]:[t.SPLISHY_SPLASH,t.FREEZY_FROST,t.NASTY_PLOT,t.OBLIVION_WING],[e.SNOVER]:[t.HIGH_HORSEPOWER,t.STRENGTH_SAP,t.MATCHA_GOTCHA,t.SAPPY_SEED],[e.ROTOM]:[t.STRENGTH_SAP,t.FIERY_DANCE,t.SPLISHY_SPLASH,t.ELECTRO_DRIFT],[e.UXIE]:[t.COSMIC_POWER,t.BODY_PRESS,t.RECOVER,t.SPARKLY_SWIRL],[e.MESPRIT]:[t.TAIL_GLOW,t.AURA_SPHERE,t.RECOVER,t.LUMINA_CRASH],[e.AZELF]:[t.PSYSTRIKE,t.ICE_BEAM,t.MOONBLAST,t.TAIL_GLOW],[e.DIALGA]:[t.CORE_ENFORCER,t.TAKE_HEART,t.RECOVER,t.MAKE_IT_RAIN],[e.PALKIA]:[t.RECOVER,t.TAKE_HEART,t.FREEZE_DRY,t.ORIGIN_PULSE],[e.HEATRAN]:[t.MATCHA_GOTCHA,t.RECOVER,t.TACHYON_CUTTER,t.TORCH_SONG],[e.REGIGIGAS]:[t.SKILL_SWAP,t.RECOVER,t.EXTREME_SPEED,t.GIGATON_HAMMER],[e.GIRATINA]:[t.DRAGON_DANCE,t.GLAIVE_RUSH,t.RECOVER,t.SPECTRAL_THIEF],[e.CRESSELIA]:[t.COSMIC_POWER,t.SECRET_SWORD,t.SIZZLY_SLIDE,t.LUMINA_CRASH],[e.PHIONE]:[t.BOUNCY_BUBBLE,t.FREEZE_DRY,t.SPLISHY_SPLASH,t.QUIVER_DANCE],[e.MANAPHY]:[t.BOUNCY_BUBBLE,t.FREEZE_DRY,t.SPLISHY_SPLASH,t.QUIVER_DANCE],[e.DARKRAI]:[t.FIERY_WRATH,t.MOONBLAST,t.FIERY_DANCE,t.MAKE_IT_RAIN],[e.SHAYMIN]:[t.MATCHA_GOTCHA,t.FIERY_DANCE,t.AEROBLAST,t.QUIVER_DANCE],[e.ARCEUS]:[t.NO_RETREAT,t.COLLISION_COURSE,t.ASTRAL_BARRAGE,t.MULTI_ATTACK],[e.VICTINI]:[t.BLUE_FLARE,t.BOLT_STRIKE,t.LUSTER_PURGE,t.VICTORY_DANCE],[e.SNIVY]:[t.FLAMETHROWER,t.CLANGING_SCALES,t.MAKE_IT_RAIN,t.FLEUR_CANNON],[e.TEPIG]:[t.WAVE_CRASH,t.VOLT_TACKLE,t.DRAIN_PUNCH,t.VICTORY_DANCE],[e.OSHAWOTT]:[t.TRIPLE_AXEL,t.SHELL_SIDE_ARM,t.SACRED_SWORD,t.SHELL_SMASH],[e.PATRAT]:[t.FAKE_OUT,t.SWORDS_DANCE,t.DYNAMIC_PUNCH,t.EXTREME_SPEED],[e.LILLIPUP]:[t.CLOSE_COMBAT,t.BODY_SLAM,t.HIGH_HORSEPOWER,t.LAST_RESPECTS],[e.PURRLOIN]:[t.ENCORE,t.OBSTRUCT,t.PARTING_SHOT,t.WICKED_BLOW],[e.PANSAGE]:[t.SWORDS_DANCE,t.FIRE_LASH,t.EARTHQUAKE,t.IVY_CUDGEL],[e.PANSEAR]:[t.NASTY_PLOT,t.HYDRO_STEAM,t.SCORCHING_SANDS,t.TORCH_SONG],[e.PANPOUR]:[t.NASTY_PLOT,t.ENERGY_BALL,t.EARTH_POWER,t.STEAM_ERUPTION],[e.MUNNA]:[t.COSMIC_POWER,t.AURA_SPHERE,t.EARTH_POWER,t.MYSTICAL_POWER],[e.PIDOVE]:[t.GUNK_SHOT,t.TIDY_UP,t.FLOATY_FALL,t.TRIPLE_ARROWS],[e.BLITZLE]:[t.HORN_LEECH,t.SWORDS_DANCE,t.FLARE_BLITZ,t.BOLT_STRIKE],[e.ROGGENROLA]:[t.BODY_PRESS,t.CURSE,t.SHORE_UP,t.DIAMOND_STORM],[e.WOOBAT]:[t.ESPER_WING,t.STORED_POWER,t.MYSTICAL_FIRE,t.OBLIVION_WING],[e.DRILBUR]:[t.IRON_HEAD,t.MOUNTAIN_GALE,t.SHIFT_GEAR,t.THOUSAND_ARROWS],[e.AUDINO]:[t.FOLLOW_ME,t.MOONBLAST,t.WISH,t.LUNAR_BLESSING],[e.TIMBURR]:[t.MACH_PUNCH,t.DRAIN_PUNCH,t.ICE_HAMMER,t.DOUBLE_IRON_BASH],[e.TYMPOLE]:[t.JET_PUNCH,t.HIGH_HORSEPOWER,t.BULK_UP,t.SURGING_STRIKES],[e.THROH]:[t.MACH_PUNCH,t.SLACK_OFF,t.METEOR_MASH,t.RAGE_FIST],[e.SAWK]:[t.DRAIN_PUNCH,t.SUCKER_PUNCH,t.METEOR_MASH,t.VICTORY_DANCE],[e.SEWADDLE]:[t.STONE_AXE,t.PSYCHO_CUT,t.BITTER_BLADE,t.VICTORY_DANCE],[e.VENIPEDE]:[t.BANEFUL_BUNKER,t.LEECH_LIFE,t.NOXIOUS_TORQUE,t.POWER_TRIP],[e.COTTONEE]:[t.POLLEN_PUFF,t.PARTING_SHOT,t.SLEEP_POWDER,t.SEED_FLARE],[e.PETILIL]:[t.THUNDEROUS_KICK,t.SPARKLING_ARIA,t.FIERY_DANCE,t.FLOWER_TRICK],[e.BASCULIN]:[t.LAST_RESPECTS,t.CLOSE_COMBAT,t.SPLISHY_SPLASH,t.NO_RETREAT],[e.SANDILE]:[t.DIRE_CLAW,t.HIGH_HORSEPOWER,t.FIRE_LASH,t.WICKED_BLOW],[e.DARUMAKA]:[t.DRAIN_PUNCH,t.ZIPPY_ZAP,t.EARTHQUAKE,t.PYRO_BALL],[e.MARACTUS]:[t.EARTH_POWER,t.QUIVER_DANCE,t.FIERY_DANCE,t.SEED_FLARE],[e.DWEBBLE]:[t.CRABHAMMER,t.STONE_AXE,t.LEECH_LIFE,t.MIGHTY_CLEAVE],[e.SCRAGGY]:[t.SUCKER_PUNCH,t.BULLET_PUNCH,t.NOXIOUS_TORQUE,t.VICTORY_DANCE],[e.SIGILYPH]:[t.MOONBLAST,t.CALM_MIND,t.FREEZING_GLARE,t.OBLIVION_WING],[e.YAMASK]:[t.STRENGTH_SAP,t.GLARE,t.AURA_SPHERE,t.ASTRAL_BARRAGE],[e.TIRTOUGA]:[t.ICE_SPINNER,t.AQUA_STEP,t.SHORE_UP,t.MIGHTY_CLEAVE],[e.ARCHEN]:[t.ROOST,t.EARTHQUAKE,t.FLOATY_FALL,t.MIGHTY_CLEAVE],[e.TRUBBISH]:[t.COIL,t.RECOVER,t.DIRE_CLAW,t.GIGATON_HAMMER],[e.ZORUA]:[t.FLAMETHROWER,t.MOONBLAST,t.AURA_SPHERE,t.FIERY_WRATH],[e.MINCCINO]:[t.ICICLE_SPEAR,t.TIDY_UP,t.KNOCK_OFF,t.POPULATION_BOMB],[e.GOTHITA]:[t.RECOVER,t.MOONBLAST,t.AURA_SPHERE,t.LUMINA_CRASH],[e.SOLOSIS]:[t.EXPANDING_FORCE,t.TRICK_ROOM,t.AURA_SPHERE,t.LIGHT_OF_RUIN],[e.DUCKLETT]:[t.SPLISHY_SPLASH,t.EARTH_POWER,t.WILDBOLT_STORM,t.QUIVER_DANCE],[e.VANILLITE]:[t.EARTH_POWER,t.AURORA_VEIL,t.CALM_MIND,t.SPARKLY_SWIRL],[e.DEERLING]:[t.TIDY_UP,t.FLOWER_TRICK,t.BODY_SLAM,t.COMBAT_TORQUE],[e.EMOLGA]:[t.TRIPLE_AXEL,t.SPLISHY_SPLASH,t.FLOATY_FALL,t.AURA_WHEEL],[e.KARRABLAST]:[t.LEECH_LIFE,t.BITTER_BLADE,t.HIGH_HORSEPOWER,t.DOUBLE_IRON_BASH],[e.FOONGUS]:[t.POLLEN_PUFF,t.PARTING_SHOT,t.FOUL_PLAY,t.SAPPY_SEED],[e.FRILLISH]:[t.STRENGTH_SAP,t.BUZZY_BUZZ,t.FREEZE_DRY,t.STEAM_ERUPTION],[e.ALOMOMOLA]:[t.FLIP_TURN,t.HEART_SWAP,t.GLITZY_GLOW,t.REVIVAL_BLESSING],[e.JOLTIK]:[t.WILDBOLT_STORM,t.PARABOLIC_CHARGE,t.EARTH_POWER,t.QUIVER_DANCE],[e.FERROSEED]:[t.STRENGTH_SAP,t.BODY_PRESS,t.SPIKY_SHIELD,t.SAPPY_SEED],[e.KLINK]:[t.TRIPLE_AXEL,t.HIGH_HORSEPOWER,t.FUSION_BOLT,t.DOUBLE_IRON_BASH],[e.TYNAMO]:[t.SCALD,t.STRENGTH_SAP,t.FIRE_LASH,t.AURA_WHEEL],[e.ELGYEM]:[t.LUSTER_PURGE,t.BADDY_BAD,t.AURA_SPHERE,t.TAIL_GLOW],[e.LITWICK]:[t.FIERY_DANCE,t.EARTH_POWER,t.MOONBLAST,t.ASTRAL_BARRAGE],[e.AXEW]:[t.STONE_AXE,t.DIRE_CLAW,t.BITTER_BLADE,t.GLAIVE_RUSH],[e.CUBCHOO]:[t.MOUNTAIN_GALE,t.AQUA_STEP,t.ICE_SHARD,t.COLLISION_COURSE],[e.CRYOGONAL]:[t.FREEZING_GLARE,t.AURORA_VEIL,t.NASTY_PLOT,t.ORIGIN_PULSE],[e.SHELMET]:[t.POWER_GEM,t.NASTY_PLOT,t.EARTH_POWER,t.STEAM_ERUPTION],[e.STUNFISK]:[t.BANEFUL_BUNKER,t.SANDSEAR_STORM,t.STRENGTH_SAP,t.THUNDERCLAP],[e.MIENFOO]:[t.GUNK_SHOT,t.SUPERCELL_SLAM,t.KNOCK_OFF,t.MOUNTAIN_GALE],[e.DRUDDIGON]:[t.FIRE_LASH,t.ROOST,t.DRAGON_DARTS,t.CLANGOROUS_SOUL],[e.GOLETT]:[t.SHIFT_GEAR,t.DRAIN_PUNCH,t.HEADLONG_RUSH,t.RAGE_FIST],[e.PAWNIARD]:[t.SUCKER_PUNCH,t.CEASELESS_EDGE,t.BITTER_BLADE,t.LAST_RESPECTS],[e.BOUFFALANT]:[t.SLACK_OFF,t.HIGH_JUMP_KICK,t.HEAD_SMASH,t.FLARE_BLITZ],[e.RUFFLET]:[t.FLOATY_FALL,t.AURA_SPHERE,t.NO_RETREAT,t.BOLT_BEAK],[e.VULLABY]:[t.FOUL_PLAY,t.BODY_PRESS,t.ROOST,t.RUINATION],[e.HEATMOR]:[t.EARTH_POWER,t.OVERHEAT,t.THUNDERBOLT,t.V_CREATE],[e.DURANT]:[t.HIGH_HORSEPOWER,t.FIRST_IMPRESSION,t.SWORDS_DANCE,t.BEHEMOTH_BASH],[e.DEINO]:[t.FIERY_WRATH,t.ESPER_WING,t.SLUDGE_BOMB,t.FICKLE_BEAM],[e.LARVESTA]:[t.THUNDERBOLT,t.MATCHA_GOTCHA,t.EARTH_POWER,t.TORCH_SONG],[e.COBALION]:[t.BEHEMOTH_BLADE,t.MIGHTY_CLEAVE,t.CEASELESS_EDGE,t.VICTORY_DANCE],[e.TERRAKION]:[t.MIGHTY_CLEAVE,t.HEADLONG_RUSH,t.CEASELESS_EDGE,t.VICTORY_DANCE],[e.VIRIZION]:[t.PSYBLADE,t.SAPPY_SEED,t.CEASELESS_EDGE,t.VICTORY_DANCE],[e.TORNADUS]:[t.EARTH_POWER,t.PARTING_SHOT,t.ICE_BEAM,t.OBLIVION_WING],[e.THUNDURUS]:[t.EARTH_POWER,t.HURRICANE,t.FROST_BREATH,t.ELECTRO_SHOT],[e.RESHIRAM]:[t.ENERGY_BALL,t.TAKE_HEART,t.FICKLE_BEAM,t.ERUPTION],[e.ZEKROM]:[t.TRIPLE_AXEL,t.THUNDEROUS_KICK,t.DRAGON_HAMMER,t.BOLT_BEAK],[e.LANDORUS]:[t.STONE_AXE,t.FLOATY_FALL,t.ROOST,t.BLEAKWIND_STORM],[e.KYUREM]:[t.DRAGON_DARTS,t.GLACIAL_LANCE,t.NO_RETREAT,t.DRAGON_ENERGY],[e.KELDEO]:[t.BOUNCY_BUBBLE,t.THUNDERBOLT,t.FREEZE_DRY,t.STEAM_ERUPTION],[e.MELOETTA]:[t.BODY_SLAM,t.TORCH_SONG,t.TRIPLE_ARROWS,t.BOOMBURST],[e.GENESECT]:[t.EXTREME_SPEED,t.U_TURN,t.TACHYON_CUTTER,t.TAIL_GLOW],[e.CHESPIN]:[t.BODY_PRESS,t.SYNTHESIS,t.CEASELESS_EDGE,t.SAPPY_SEED],[e.FENNEKIN]:[t.EXPANDING_FORCE,t.MOONBLAST,t.THUNDERBOLT,t.TORCH_SONG],[e.FROAKIE]:[t.MOONBLAST,t.SHELL_SIDE_ARM,t.FIERY_WRATH,t.STEAM_ERUPTION],[e.BUNNELBY]:[t.DRAIN_PUNCH,t.TIDY_UP,t.FACADE,t.EXTREME_SPEED],[e.FLETCHLING]:[t.DRILL_RUN,t.BURNING_BULWARK,t.HEAD_SMASH,t.VOLT_TACKLE],[e.SCATTERBUG]:[t.FOCUS_BLAST,t.AFTER_YOU,t.DECORATE,t.BLIZZARD],[e.LITLEO]:[t.EARTH_POWER,t.NASTY_PLOT,t.YAWN,t.TORCH_SONG],[e.FLABEBE]:[t.GLITZY_GLOW,t.MYSTICAL_FIRE,t.TAKE_HEART,t.SEED_FLARE],[e.SKIDDO]:[t.HIGH_HORSEPOWER,t.GRASSY_GLIDE,t.STONE_AXE,t.SAPPY_SEED],[e.PANCHAM]:[t.DRAIN_PUNCH,t.SUCKER_PUNCH,t.METEOR_MASH,t.WICKED_BLOW],[e.FURFROU]:[t.TIDY_UP,t.SLACK_OFF,t.COMBAT_TORQUE,t.MULTI_ATTACK],[e.ESPURR]:[t.LUSTER_PURGE,t.MOONBLAST,t.AURA_SPHERE,t.DARK_VOID],[e.HONEDGE]:[t.TACHYON_CUTTER,t.SHADOW_BONE,t.BITTER_BLADE,t.BEHEMOTH_BLADE],[e.SPRITZEE]:[t.SPEED_SWAP,t.TORCH_SONG,t.ROOST,t.REVIVAL_BLESSING],[e.SWIRLIX]:[t.BELLY_DRUM,t.HEADLONG_RUSH,t.MAGICAL_TORQUE,t.REVIVAL_BLESSING],[e.INKAY]:[t.POWER_TRIP,t.SPIN_OUT,t.RECOVER,t.PSYCHO_BOOST],[e.BINACLE]:[t.TRIPLE_AXEL,t.CRABHAMMER,t.DIRE_CLAW,t.MIGHTY_CLEAVE],[e.SKRELP]:[t.STRENGTH_SAP,t.TRICK_ROOM,t.CALM_MIND,t.CORE_ENFORCER],[e.CLAUNCHER]:[t.SHELL_SMASH,t.ARMOR_CANNON,t.WATER_SHURIKEN,t.ORIGIN_PULSE],[e.HELIOPTILE]:[t.WEATHER_BALL,t.HYDRO_STEAM,t.EARTH_POWER,t.BOOMBURST],[e.TYRUNT]:[t.DRAGON_HAMMER,t.FLARE_BLITZ,t.VOLT_TACKLE,t.SHIFT_GEAR],[e.AMAURA]:[t.RECOVER,t.AURORA_VEIL,t.POWER_GEM,t.GEOMANCY],[e.HAWLUCHA]:[t.TRIPLE_AXEL,t.HIGH_HORSEPOWER,t.FLOATY_FALL,t.WICKED_BLOW],[e.DEDENNE]:[t.BOOMBURST,t.FAKE_OUT,t.NASTY_PLOT,t.REVIVAL_BLESSING],[e.CARBINK]:[t.BODY_PRESS,t.SHORE_UP,t.SPARKLY_SWIRL,t.DIAMOND_STORM],[e.GOOMY]:[t.SCALD,t.RECOVER,t.CALM_MIND,t.MAKE_IT_RAIN],[e.KLEFKI]:[t.HEAL_BELL,t.ENCORE,t.INSTRUCT,t.TOPSY_TURVY],[e.PHANTUMP]:[t.RAGE_FIST,t.TRICK_ROOM,t.SYNTHESIS,t.SAPPY_SEED],[e.PUMPKABOO]:[t.SPIRIT_SHACKLE,t.FIRE_LASH,t.DIRE_CLAW,t.SAPPY_SEED],[e.BERGMITE]:[t.STONE_AXE,t.METAL_BURST,t.BODY_PRESS,t.GLACIAL_LANCE],[e.NOIBAT]:[t.AEROBLAST,t.OVERDRIVE,t.NASTY_PLOT,t.CLANGING_SCALES],[e.XERNEAS]:[t.EARTH_POWER,t.SPRINGTIDE_STORM,t.STRENGTH_SAP,t.TAIL_GLOW],[e.YVELTAL]:[t.SHELL_SIDE_ARM,t.POWER_TRIP,t.FIERY_WRATH,t.CLANGOROUS_SOUL],[e.ZYGARDE]:[t.DRAGON_DARTS,t.HEAL_ORDER,t.CLANGOROUS_SOUL,t.DOUBLE_IRON_BASH],[e.DIANCIE]:[t.MAGICAL_TORQUE,t.AURA_SPHERE,t.SHORE_UP,t.GEOMANCY],[e.HOOPA]:[t.PHOTON_GEYSER,t.SECRET_SWORD,t.FIERY_WRATH,t.SHELL_SMASH],[e.VOLCANION]:[t.HYDRO_STEAM,t.CALM_MIND,t.ENERGY_BALL,t.MAGMA_STORM],[e.ROWLET]:[t.THOUSAND_ARROWS,t.SHADOW_BONE,t.FIRST_IMPRESSION,t.VICTORY_DANCE],[e.LITTEN]:[t.FAKE_OUT,t.PARTING_SHOT,t.MORNING_SUN,t.SACRED_FIRE],[e.POPPLIO]:[t.PSYCHIC_NOISE,t.BOUNCY_BUBBLE,t.ALLURING_VOICE,t.TORCH_SONG],[e.PIKIPEK]:[t.DUAL_WINGBEAT,t.BONE_RUSH,t.BURNING_BULWARK,t.POPULATION_BOMB],[e.YUNGOOS]:[t.EXTREME_SPEED,t.KNOCK_OFF,t.TIDY_UP,t.MULTI_ATTACK],[e.GRUBBIN]:[t.ICE_BEAM,t.EARTH_POWER,t.THUNDERCLAP,t.QUIVER_DANCE],[e.CRABRAWLER]:[t.JET_PUNCH,t.SHORE_UP,t.SUCKER_PUNCH,t.SURGING_STRIKES],[e.ORICORIO]:[t.QUIVER_DANCE,t.FIERY_DANCE,t.THUNDERCLAP,t.OBLIVION_WING],[e.CUTIEFLY]:[t.STICKY_WEB,t.SLEEP_POWDER,t.HEAT_WAVE,t.SPARKLY_SWIRL],[e.ROCKRUFF]:[t.HIGH_HORSEPOWER,t.TIDY_UP,t.ICE_SPINNER,t.MIGHTY_CLEAVE],[e.WISHIWASHI]:[t.HEAL_ORDER,t.ICE_SPINNER,t.DRAGON_DANCE,t.JET_PUNCH],[e.MAREANIE]:[t.CEASELESS_EDGE,t.SIZZLY_SLIDE,t.BODY_PRESS,t.LEECH_SEED],[e.MUDBRAY]:[t.BODY_PRESS,t.YAWN,t.SHORE_UP,t.THOUSAND_WAVES],[e.DEWPIDER]:[t.JET_PUNCH,t.SILK_TRAP,t.SWORDS_DANCE,t.AQUA_STEP],[e.FOMANTIS]:[t.SUPERPOWER,t.HEADLONG_RUSH,t.ICE_HAMMER,t.BITTER_BLADE],[e.MORELULL]:[t.CALM_MIND,t.SAPPY_SEED,t.DRAINING_KISS,t.MATCHA_GOTCHA],[e.SALANDIT]:[t.SCALD,t.SLUDGE_WAVE,t.CORE_ENFORCER,t.ERUPTION],[e.STUFFUL]:[t.DRAIN_PUNCH,t.METEOR_MASH,t.TRIPLE_AXEL,t.RAGE_FIST],[e.BOUNSWEET]:[t.TRIPLE_AXEL,t.AQUA_STEP,t.THUNDEROUS_KICK,t.SAPPY_SEED],[e.COMFEY]:[t.REVIVAL_BLESSING,t.TAKE_HEART,t.STRENGTH_SAP,t.MATCHA_GOTCHA],[e.ORANGURU]:[t.JUNGLE_HEALING,t.YAWN,t.FOLLOW_ME,t.LUMINA_CRASH],[e.PASSIMIAN]:[t.FAKE_OUT,t.SUCKER_PUNCH,t.ZING_ZAP,t.PYRO_BALL],[e.WIMPOD]:[t.TRIPLE_AXEL,t.OBSTRUCT,t.JET_PUNCH,t.SURGING_STRIKES],[e.SANDYGAST]:[t.SANDSEAR_STORM,t.SPLISHY_SPLASH,t.TAKE_HEART,t.SALT_CURE],[e.PYUKUMUKU]:[t.COMEUPPANCE,t.BANEFUL_BUNKER,t.TOXIC_SPIKES,t.SALT_CURE],[e.TYPE_NULL]:[t.DIRE_CLAW,t.RECOVER,t.EXTREME_SPEED,t.SHELL_SMASH],[e.MINIOR]:[t.EARTH_POWER,t.FLOATY_FALL,t.ZING_ZAP,t.DIAMOND_STORM],[e.KOMALA]:[t.SLACK_OFF,t.EXTREME_SPEED,t.KNOCK_OFF,t.COLLISION_COURSE],[e.TURTONATOR]:[t.BURNING_BULWARK,t.MORNING_SUN,t.BODY_PRESS,t.CORE_ENFORCER],[e.TOGEDEMARU]:[t.FAKE_OUT,t.METAL_BURST,t.METEOR_MASH,t.AURA_WHEEL],[e.MIMIKYU]:[t.SPIRIT_BREAK,t.TIDY_UP,t.BITTER_BLADE,t.SPECTRAL_THIEF],[e.BRUXISH]:[t.PLAY_ROUGH,t.FIRE_FANG,t.DRAGON_DANCE,t.SURGING_STRIKES],[e.DRAMPA]:[t.SLACK_OFF,t.TRICK_ROOM,t.CORE_ENFORCER,t.BOOMBURST],[e.DHELMISE]:[t.SHADOW_BONE,t.STRENGTH_SAP,t.LIQUIDATION,t.SAPPY_SEED],[e.JANGMO_O]:[t.BODY_PRESS,t.SHELL_SIDE_ARM,t.SECRET_SWORD,t.GLAIVE_RUSH],[e.TAPU_KOKO]:[t.MAGICAL_TORQUE,t.TRIPLE_AXEL,t.RISING_VOLTAGE,t.BOLT_STRIKE],[e.TAPU_LELE]:[t.MOONLIGHT,t.NASTY_PLOT,t.HEAT_WAVE,t.EXPANDING_FORCE],[e.TAPU_BULU]:[t.SAPPY_SEED,t.DRAIN_PUNCH,t.MAGICAL_TORQUE,t.VICTORY_DANCE],[e.TAPU_FINI]:[t.AURA_SPHERE,t.EARTH_POWER,t.RECOVER,t.QUIVER_DANCE],[e.COSMOG]:[t.PHOTON_GEYSER,t.PRECIPICE_BLADES,t.SACRED_FIRE,t.ASTRAL_BARRAGE],[e.NIHILEGO]:[t.STRENGTH_SAP,t.MALIGNANT_CHAIN,t.EARTH_POWER,t.QUIVER_DANCE],[e.BUZZWOLE]:[t.FIRST_IMPRESSION,t.COMBAT_TORQUE,t.ROCK_WRECKER,t.DOUBLE_IRON_BASH],[e.PHEROMOSA]:[t.SECRET_SWORD,t.MAKE_IT_RAIN,t.ATTACK_ORDER,t.DIAMOND_STORM],[e.XURKITREE]:[t.FLAMETHROWER,t.GIGA_DRAIN,t.TAIL_GLOW,t.THUNDERCLAP],[e.CELESTEELA]:[t.RECOVER,t.BUZZY_BUZZ,t.SANDSEAR_STORM,t.OBLIVION_WING],[e.KARTANA]:[t.MIGHTY_CLEAVE,t.PSYBLADE,t.BITTER_BLADE,t.BEHEMOTH_BLADE],[e.GUZZLORD]:[t.SUCKER_PUNCH,t.COMEUPPANCE,t.SLACK_OFF,t.SHED_TAIL],[e.NECROZMA]:[t.DYNAMAX_CANNON,t.SACRED_FIRE,t.ASTRAL_BARRAGE,t.CLANGOROUS_SOUL],[e.MAGEARNA]:[t.STRENGTH_SAP,t.EARTH_POWER,t.MOONBLAST,t.MAKE_IT_RAIN],[e.MARSHADOW]:[t.POWER_UP_PUNCH,t.TRIPLE_AXEL,t.METEOR_MASH,t.STORM_THROW],[e.POIPOLE]:[t.CORE_ENFORCER,t.ICE_BEAM,t.SEARING_SHOT,t.MALIGNANT_CHAIN],[e.STAKATAKA]:[t.HEAVY_SLAM,t.SHORE_UP,t.CURSE,t.SALT_CURE],[e.BLACEPHALON]:[t.NASTY_PLOT,t.AURA_SPHERE,t.CHLOROBLAST,t.ASTRAL_BARRAGE],[e.ZERAORA]:[t.SWORDS_DANCE,t.TRIPLE_AXEL,t.BOLT_STRIKE,t.PYRO_BALL],[e.MELTAN]:[t.BULLET_PUNCH,t.DRAIN_PUNCH,t.BULK_UP,t.PLASMA_FISTS],[e.GROOKEY]:[t.HIGH_HORSEPOWER,t.CLANGOROUS_SOUL,t.GRASSY_GLIDE,t.SAPPY_SEED],[e.SCORBUNNY]:[t.EXTREME_SPEED,t.HIGH_JUMP_KICK,t.TRIPLE_AXEL,t.BOLT_STRIKE],[e.SOBBLE]:[t.AEROBLAST,t.FROST_BREATH,t.ENERGY_BALL,t.NASTY_PLOT],[e.SKWOVET]:[t.SUCKER_PUNCH,t.SLACK_OFF,t.COIL,t.POPULATION_BOMB],[e.ROOKIDEE]:[t.ROOST,t.BODY_PRESS,t.KINGS_SHIELD,t.BEHEMOTH_BASH],[e.BLIPBUG]:[t.HEAL_ORDER,t.LUSTER_PURGE,t.SLEEP_POWDER,t.TAIL_GLOW],[e.NICKIT]:[t.BADDY_BAD,t.FLAMETHROWER,t.SPARKLY_SWIRL,t.MAKE_IT_RAIN],[e.GOSSIFLEUR]:[t.TAILWIND,t.STRENGTH_SAP,t.SAPPY_SEED,t.SEED_FLARE],[e.WOOLOO]:[t.PSYSHIELD_BASH,t.MILK_DRINK,t.BODY_PRESS,t.MULTI_ATTACK],[e.CHEWTLE]:[t.ICE_FANG,t.ACCELEROCK,t.SHELL_SMASH,t.FISHIOUS_REND],[e.YAMPER]:[t.ICE_FANG,t.SWORDS_DANCE,t.THUNDER_FANG,t.BOLT_STRIKE],[e.ROLYCOLY]:[t.BITTER_BLADE,t.BODY_PRESS,t.BULK_UP,t.DIAMOND_STORM],[e.APPLIN]:[t.MATCHA_GOTCHA,t.DRAGON_HAMMER,t.FLOWER_TRICK,t.STRENGTH_SAP],[e.SILICOBRA]:[t.SHORE_UP,t.SHED_TAIL,t.MOUNTAIN_GALE,t.THOUSAND_ARROWS],[e.CRAMORANT]:[t.APPLE_ACID,t.SURF,t.SCORCHING_SANDS,t.OBLIVION_WING],[e.ARROKUDA]:[t.SUPERCELL_SLAM,t.KNOCK_OFF,t.ICE_SPINNER,t.FILLET_AWAY],[e.TOXEL]:[t.NASTY_PLOT,t.BUG_BUZZ,t.SPARKLING_ARIA,t.TORCH_SONG],[e.SIZZLIPEDE]:[t.BURNING_BULWARK,t.ZING_ZAP,t.FIRST_IMPRESSION,t.BITTER_BLADE],[e.CLOBBOPUS]:[t.STORM_THROW,t.JET_PUNCH,t.MACH_PUNCH,t.SURGING_STRIKES],[e.SINISTEA]:[t.SCALD,t.TAKE_HEART,t.SPARKLY_SWIRL,t.MATCHA_GOTCHA],[e.HATENNA]:[t.RECOVER,t.MOONBLAST,t.BUZZY_BUZZ,t.TORCH_SONG],[e.IMPIDIMP]:[t.ENCORE,t.PARTING_SHOT,t.TOPSY_TURVY,t.WICKED_BLOW],[e.MILCERY]:[t.MOONBLAST,t.CHILLY_RECEPTION,t.EARTH_POWER,t.GEOMANCY],[e.FALINKS]:[t.COMBAT_TORQUE,t.PSYSHIELD_BASH,t.HEAL_ORDER,t.POPULATION_BOMB],[e.PINCURCHIN]:[t.TRICK_ROOM,t.RISING_VOLTAGE,t.STRENGTH_SAP,t.THUNDERCLAP],[e.SNOM]:[t.FROST_BREATH,t.HEAL_ORDER,t.EARTH_POWER,t.SPORE],[e.STONJOURNER]:[t.BODY_PRESS,t.HELPING_HAND,t.ACCELEROCK,t.DIAMOND_STORM],[e.EISCUE]:[t.TRIPLE_AXEL,t.AQUA_STEP,t.SHELL_SMASH,t.GLACIAL_LANCE],[e.INDEEDEE]:[t.MATCHA_GOTCHA,t.EXPANDING_FORCE,t.MOONBLAST,t.REVIVAL_BLESSING],[e.MORPEKO]:[t.TRIPLE_AXEL,t.OBSTRUCT,t.SWORDS_DANCE,t.COLLISION_COURSE],[e.CUFANT]:[t.LIQUIDATION,t.CURSE,t.COMBAT_TORQUE,t.GIGATON_HAMMER],[e.DRACOZOLT]:[t.TRIPLE_AXEL,t.SCALE_SHOT,t.FIRE_LASH,t.DRAGON_DANCE],[e.ARCTOZOLT]:[t.MOUNTAIN_GALE,t.AQUA_STEP,t.HIGH_HORSEPOWER,t.SHIFT_GEAR],[e.DRACOVISH]:[t.TRIPLE_AXEL,t.DRAGON_HAMMER,t.THUNDER_FANG,t.DRAGON_DANCE],[e.ARCTOVISH]:[t.ICE_FANG,t.THUNDER_FANG,t.HIGH_HORSEPOWER,t.SHIFT_GEAR],[e.DURALUDON]:[t.CORE_ENFORCER,t.BODY_PRESS,t.RECOVER,t.TACHYON_CUTTER],[e.DREEPY]:[t.SHADOW_BONE,t.NASTY_PLOT,t.FIRE_LASH,t.COLLISION_COURSE],[e.ZACIAN]:[t.MAGICAL_TORQUE,t.MIGHTY_CLEAVE,t.BITTER_BLADE,t.PRECIPICE_BLADES],[e.ZAMAZENTA]:[t.BULK_UP,t.BODY_PRESS,t.SLACK_OFF,t.DIAMOND_STORM],[e.ETERNATUS]:[t.BODY_PRESS,t.NASTY_PLOT,t.MALIGNANT_CHAIN,t.DRAGON_ENERGY],[e.KUBFU]:[t.METEOR_MASH,t.DRAIN_PUNCH,t.JET_PUNCH,t.DRAGON_DANCE],[e.ZARUDE]:[t.SAPPY_SEED,t.MIGHTY_CLEAVE,t.WICKED_BLOW,t.VICTORY_DANCE],[e.REGIELEKI]:[t.NASTY_PLOT,t.ICE_BEAM,t.EARTH_POWER,t.ELECTRO_DRIFT],[e.REGIDRAGO]:[t.METEOR_MASH,t.FLAMETHROWER,t.TAKE_HEART,t.DRAGON_DARTS],[e.GLASTRIER]:[t.TRICK_ROOM,t.SLACK_OFF,t.HIGH_HORSEPOWER,t.GLACIAL_LANCE],[e.SPECTRIER]:[t.EARTH_POWER,t.PARTING_SHOT,t.AURA_SPHERE,t.ASTRAL_BARRAGE],[e.CALYREX]:[t.SAPPY_SEED,t.RECOVER,t.SECRET_SWORD,t.PHOTON_GEYSER],[e.ENAMORUS]:[t.FLEUR_CANNON,t.TAKE_HEART,t.STORED_POWER,t.OBLIVION_WING],[e.SPRIGATITO]:[t.FIRE_LASH,t.TRIPLE_AXEL,t.SUCKER_PUNCH,t.WICKED_BLOW],[e.FUECOCO]:[t.ALLURING_VOICE,t.SLACK_OFF,t.OVERDRIVE,t.MOONGEIST_BEAM],[e.QUAXLY]:[t.DRAGON_DANCE,t.TRIPLE_AXEL,t.POWER_TRIP,t.THUNDEROUS_KICK],[e.LECHONK]:[t.MILK_DRINK,t.PSYSHIELD_BASH,t.FILLET_AWAY,t.MULTI_ATTACK],[e.TAROUNTULA]:[t.STONE_AXE,t.LEECH_LIFE,t.THIEF,t.SPORE],[e.NYMBLE]:[t.KNOCK_OFF,t.FELL_STINGER,t.ATTACK_ORDER,t.WICKED_BLOW],[e.PAWMI]:[t.DRAIN_PUNCH,t.ICE_PUNCH,t.MACH_PUNCH,t.PLASMA_FISTS],[e.TANDEMAUS]:[t.BATON_PASS,t.THIEF,t.SIZZLY_SLIDE,t.REVIVAL_BLESSING],[e.FIDOUGH]:[t.SOFT_BOILED,t.HIGH_HORSEPOWER,t.SIZZLY_SLIDE,t.TIDY_UP],[e.SMOLIV]:[t.STRENGTH_SAP,t.EARTH_POWER,t.CALM_MIND,t.BOOMBURST],[e.SQUAWKABILLY]:[t.PARTING_SHOT,t.EARTHQUAKE,t.FLARE_BLITZ,t.EXTREME_SPEED],[e.NACLI]:[t.BODY_PRESS,t.TOXIC,t.CURSE,t.DIAMOND_STORM],[e.CHARCADET]:[t.SACRED_SWORD,t.PHOTON_GEYSER,t.MOONBLAST,t.SPECTRAL_THIEF],[e.TADBULB]:[t.PARABOLIC_CHARGE,t.SCALD,t.EARTH_POWER,t.ELECTRO_SHOT],[e.WATTREL]:[t.NASTY_PLOT,t.SPLISHY_SPLASH,t.SANDSEAR_STORM,t.ELECTRO_SHOT],[e.MASCHIFF]:[t.PARTING_SHOT,t.CLOSE_COMBAT,t.PSYCHIC_FANGS,t.NO_RETREAT],[e.SHROODLE]:[t.GASTRO_ACID,t.PARTING_SHOT,t.TOXIC,t.SKETCH],[e.BRAMBLIN]:[t.TAILWIND,t.STRENGTH_SAP,t.FLOWER_TRICK,t.LAST_RESPECTS],[e.TOEDSCOOL]:[t.STRENGTH_SAP,t.TOPSY_TURVY,t.SAPPY_SEED,t.TAIL_GLOW],[e.KLAWF]:[t.CRABHAMMER,t.SHORE_UP,t.MIGHTY_CLEAVE,t.SHELL_SMASH],[e.CAPSAKID]:[t.STRENGTH_SAP,t.APPLE_ACID,t.FROST_BREATH,t.TORCH_SONG],[e.RELLOR]:[t.HEAL_BLOCK,t.RECOVER,t.HEAT_WAVE,t.LUMINA_CRASH],[e.FLITTLE]:[t.COSMIC_POWER,t.AURA_SPHERE,t.ROOST,t.FIERY_DANCE],[e.TINKATINK]:[t.MAGICAL_TORQUE,t.PYRO_BALL,t.ICE_HAMMER,t.SHIFT_GEAR],[e.WIGLETT]:[t.SHELL_SMASH,t.ICICLE_CRASH,t.SEED_BOMB,t.SURGING_STRIKES],[e.BOMBIRDIER]:[t.FLOATY_FALL,t.SWORDS_DANCE,t.SUCKER_PUNCH,t.MIGHTY_CLEAVE],[e.FINIZEN]:[t.TRIPLE_AXEL,t.DRAIN_PUNCH,t.HEADLONG_RUSH,t.SURGING_STRIKES],[e.VAROOM]:[t.COMBAT_TORQUE,t.U_TURN,t.BLAZING_TORQUE,t.NOXIOUS_TORQUE],[e.CYCLIZAR]:[t.BATON_PASS,t.BLAZING_TORQUE,t.KNOCK_OFF,t.CLANGOROUS_SOUL],[e.ORTHWORM]:[t.SIZZLY_SLIDE,t.COIL,t.BODY_PRESS,t.SHORE_UP],[e.GLIMMET]:[t.CALM_MIND,t.EARTH_POWER,t.FIERY_DANCE,t.MALIGNANT_CHAIN],[e.GREAVARD]:[t.SHADOW_BONE,t.YAWN,t.SHORE_UP,t.COLLISION_COURSE],[e.FLAMIGO]:[t.THUNDEROUS_KICK,t.TRIPLE_AXEL,t.FLOATY_FALL,t.VICTORY_DANCE],[e.CETODDLE]:[t.MOUNTAIN_GALE,t.HIGH_HORSEPOWER,t.RECOVER,t.DRAGON_DANCE],[e.VELUZA]:[t.PSYBLADE,t.FLIP_TURN,t.ICE_SPINNER,t.BITTER_BLADE],[e.DONDOZO]:[t.SOFT_BOILED,t.SIZZLY_SLIDE,t.TOXIC,t.SALT_CURE],[e.TATSUGIRI]:[t.ICE_BEAM,t.FILLET_AWAY,t.CORE_ENFORCER,t.STEAM_ERUPTION],[e.GREAT_TUSK]:[t.STONE_AXE,t.MORNING_SUN,t.COLLISION_COURSE,t.SHIFT_GEAR],[e.SCREAM_TAIL]:[t.TORCH_SONG,t.GLITZY_GLOW,t.MOONLIGHT,t.SPARKLY_SWIRL],[e.BRUTE_BONNET]:[t.SAPPY_SEED,t.STRENGTH_SAP,t.EARTHQUAKE,t.WICKED_BLOW],[e.FLUTTER_MANE]:[t.MOONLIGHT,t.FLAMETHROWER,t.EARTH_POWER,t.ASTRAL_BARRAGE],[e.SLITHER_WING]:[t.MIGHTY_CLEAVE,t.THUNDEROUS_KICK,t.FIRE_LASH,t.VICTORY_DANCE],[e.SANDY_SHOCKS]:[t.MORNING_SUN,t.ICE_BEAM,t.NASTY_PLOT,t.THUNDERCLAP],[e.IRON_TREADS]:[t.FUSION_BOLT,t.BULK_UP,t.SHORE_UP,t.SUNSTEEL_STRIKE],[e.IRON_BUNDLE]:[t.EARTH_POWER,t.BOUNCY_BUBBLE,t.NASTY_PLOT,t.STEAM_ERUPTION],[e.IRON_HANDS]:[t.DRAIN_PUNCH,t.BULK_UP,t.PLASMA_FISTS,t.ICE_HAMMER],[e.IRON_JUGULIS]:[t.FIERY_WRATH,t.ROOST,t.NASTY_PLOT,t.OBLIVION_WING],[e.IRON_MOTH]:[t.EARTH_POWER,t.SEARING_SHOT,t.MALIGNANT_CHAIN,t.QUIVER_DANCE],[e.IRON_THORNS]:[t.DIAMOND_STORM,t.SHORE_UP,t.SHIFT_GEAR,t.PLASMA_FISTS],[e.FRIGIBAX]:[t.DRAGON_DARTS,t.DRAGON_DANCE,t.EARTHQUAKE,t.GLACIAL_LANCE],[e.GIMMIGHOUL]:[t.HAPPY_HOUR,t.AURA_SPHERE,t.SURF,t.ASTRAL_BARRAGE],[e.WO_CHIEN]:[t.SPORE,t.FIERY_WRATH,t.SAPPY_SEED,t.STRENGTH_SAP],[e.CHIEN_PAO]:[t.KNOCK_OFF,t.PARTING_SHOT,t.BITTER_BLADE,t.GLACIAL_LANCE],[e.TING_LU]:[t.SHORE_UP,t.WICKED_BLOW,t.SAPPY_SEED,t.THOUSAND_ARROWS],[e.CHI_YU]:[t.FIERY_WRATH,t.HYDRO_STEAM,t.MORNING_SUN,t.BLUE_FLARE],[e.ROARING_MOON]:[t.FIRE_LASH,t.DRAGON_HAMMER,t.SUCKER_PUNCH,t.WICKED_BLOW],[e.IRON_VALIANT]:[t.PLASMA_FISTS,t.NO_RETREAT,t.SECRET_SWORD,t.MAGICAL_TORQUE],[e.KORAIDON]:[t.SUNSTEEL_STRIKE,t.MORNING_SUN,t.DRAGON_DARTS,t.BITTER_BLADE],[e.MIRAIDON]:[t.ICE_BEAM,t.CLANGOROUS_SOUL,t.CORE_ENFORCER,t.RISING_VOLTAGE],[e.WALKING_WAKE]:[t.CORE_ENFORCER,t.NASTY_PLOT,t.EARTH_POWER,t.BOUNCY_BUBBLE],[e.IRON_LEAVES]:[t.BITTER_BLADE,t.U_TURN,t.MIGHTY_CLEAVE,t.VICTORY_DANCE],[e.POLTCHAGEIST]:[t.SHELL_SMASH,t.BOUNCY_BUBBLE,t.LEECH_SEED,t.SPARKLY_SWIRL],[e.OKIDOGI]:[t.DRAIN_PUNCH,t.KNOCK_OFF,t.DIRE_CLAW,t.VICTORY_DANCE],[e.MUNKIDORI]:[t.PSYSTRIKE,t.HEAT_WAVE,t.EARTH_POWER,t.MALIGNANT_CHAIN],[e.FEZANDIPITI]:[t.BARB_BARRAGE,t.VICTORY_DANCE,t.TRIPLE_AXEL,t.MAGICAL_TORQUE],[e.OGERPON]:[t.FLOWER_TRICK,t.BONEMERANG,t.TRIPLE_AXEL,t.GIGATON_HAMMER],[e.GOUGING_FIRE]:[t.EXTREME_SPEED,t.BULK_UP,t.SACRED_FIRE,t.GLAIVE_RUSH],[e.RAGING_BOLT]:[t.NASTY_PLOT,t.FLAMETHROWER,t.MORNING_SUN,t.ELECTRO_DRIFT],[e.IRON_BOULDER]:[t.PSYBLADE,t.KOWTOW_CLEAVE,t.STONE_AXE,t.BITTER_BLADE],[e.IRON_CROWN]:[t.NASTY_PLOT,t.SECRET_SWORD,t.PSYSTRIKE,t.ELECTRO_DRIFT],[e.TERAPAGOS]:[t.MOONBLAST,t.RECOVER,t.ICE_BEAM,t.SHELL_SMASH],[e.PECHARUNT]:[t.TAKE_HEART,t.BODY_PRESS,t.SAPPY_SEED,t.KINGS_SHIELD],[e.ALOLA_RATTATA]:[t.FALSE_SURRENDER,t.PSYCHIC_FANGS,t.COIL,t.EXTREME_SPEED],[e.ALOLA_SANDSHREW]:[t.SPIKY_SHIELD,t.AQUA_CUTTER,t.SHIFT_GEAR,t.GLACIAL_LANCE],[e.ALOLA_VULPIX]:[t.MOONBLAST,t.PARTING_SHOT,t.FLAMETHROWER,t.REVIVAL_BLESSING],[e.ALOLA_DIGLETT]:[t.THOUSAND_WAVES,t.SWORDS_DANCE,t.TRIPLE_DIVE,t.MOUNTAIN_GALE],[e.ALOLA_MEOWTH]:[t.BADDY_BAD,t.BUZZY_BUZZ,t.PARTING_SHOT,t.MAKE_IT_RAIN],[e.ALOLA_GEODUDE]:[t.THOUSAND_WAVES,t.BULK_UP,t.STONE_AXE,t.EXTREME_SPEED],[e.ALOLA_GRIMER]:[t.SUCKER_PUNCH,t.BARB_BARRAGE,t.STRENGTH_SAP,t.SURGING_STRIKES],[e.ETERNAL_FLOETTE]:[t.MIND_BLOWN,t.CHLOROBLAST,t.PHOTON_GEYSER,t.QUIVER_DANCE],[e.GALAR_MEOWTH]:[t.AQUA_CUTTER,t.KNOCK_OFF,t.BULLET_PUNCH,t.BEHEMOTH_BASH],[e.GALAR_PONYTA]:[t.MAGICAL_TORQUE,t.EXTREME_SPEED,t.FLARE_BLITZ,t.PHOTON_GEYSER],[e.GALAR_SLOWPOKE]:[t.TRICK_ROOM,t.BADDY_BAD,t.MOONBLAST,t.TORCH_SONG],[e.GALAR_FARFETCHD]:[t.ROOST,t.SACRED_SWORD,t.KINGS_SHIELD,t.BEHEMOTH_BLADE],[e.GALAR_ARTICUNO]:[t.SECRET_SWORD,t.NIGHT_DAZE,t.ICE_BEAM,t.OBLIVION_WING],[e.GALAR_ZAPDOS]:[t.TIDY_UP,t.FLOATY_FALL,t.ROOST,t.BOLT_BEAK],[e.GALAR_MOLTRES]:[t.ROOST,t.SLUDGE_BOMB,t.FLAMETHROWER,t.OBLIVION_WING],[e.GALAR_CORSOLA]:[t.SHELL_SMASH,t.AURA_SPHERE,t.INFERNAL_PARADE,t.ASTRAL_BARRAGE],[e.GALAR_ZIGZAGOON]:[t.CEASELESS_EDGE,t.FACADE,t.PARTING_SHOT,t.EXTREME_SPEED],[e.GALAR_DARUMAKA]:[t.ICE_SPINNER,t.ENDURE,t.DRAIN_PUNCH,t.V_CREATE],[e.GALAR_YAMASK]:[t.STRENGTH_SAP,t.DIRE_CLAW,t.THOUSAND_WAVES,t.SPECTRAL_THIEF],[e.GALAR_STUNFISK]:[t.SPIKY_SHIELD,t.THOUSAND_ARROWS,t.STRENGTH_SAP,t.DOUBLE_IRON_BASH],[e.HISUI_GROWLITHE]:[t.WAVE_CRASH,t.HEAD_SMASH,t.VOLT_TACKLE,t.DRAGON_DANCE],[e.HISUI_VOLTORB]:[t.FROST_BREATH,t.NASTY_PLOT,t.APPLE_ACID,t.ELECTRO_DRIFT],[e.HISUI_QWILFISH]:[t.CEASELESS_EDGE,t.KNOCK_OFF,t.STRENGTH_SAP,t.FISHIOUS_REND],[e.HISUI_SNEASEL]:[t.THUNDEROUS_KICK,t.KNOCK_OFF,t.TRIPLE_AXEL,t.VICTORY_DANCE],[e.HISUI_ZORUA]:[t.MOONBLAST,t.HYPER_VOICE,t.PARTING_SHOT,t.BLOOD_MOON],[e.PALDEA_TAUROS]:[t.NO_RETREAT,t.BLAZING_TORQUE,t.AQUA_STEP,t.THUNDEROUS_KICK],[e.PALDEA_WOOPER]:[t.RECOVER,t.STONE_AXE,t.BANEFUL_BUNKER,t.SAPPY_SEED],[e.BLOODMOON_URSALUNA]:[t.NASTY_PLOT,t.TRICK_ROOM,t.THUNDERBOLT,t.BOOMBURST]},w=-1,Z=0,m0={[e.BULBASAUR]:[[1,t.TACKLE],[1,t.GROWL],[3,t.VINE_WHIP],[6,t.GROWTH],[9,t.LEECH_SEED],[12,t.RAZOR_LEAF],[15,t.POISON_POWDER],[15,t.SLEEP_POWDER],[18,t.SEED_BOMB],[21,t.TAKE_DOWN],[24,t.SWEET_SCENT],[27,t.SYNTHESIS],[30,t.WORRY_SEED],[33,t.POWER_WHIP],[36,t.SOLAR_BEAM]],[e.IVYSAUR]:[[1,t.VINE_WHIP],[1,t.TACKLE],[1,t.GROWL],[1,t.GROWTH],[9,t.LEECH_SEED],[12,t.RAZOR_LEAF],[15,t.POISON_POWDER],[15,t.SLEEP_POWDER],[20,t.SEED_BOMB],[25,t.TAKE_DOWN],[30,t.SWEET_SCENT],[35,t.SYNTHESIS],[40,t.WORRY_SEED],[45,t.POWER_WHIP],[50,t.SOLAR_BEAM]],[e.VENUSAUR]:[[Z,t.PETAL_BLIZZARD],[1,t.GROWTH],[1,t.PETAL_DANCE],[1,t.VINE_WHIP],[1,t.TACKLE],[1,t.GROWL],[9,t.LEECH_SEED],[12,t.RAZOR_LEAF],[15,t.POISON_POWDER],[15,t.SLEEP_POWDER],[20,t.SEED_BOMB],[25,t.TAKE_DOWN],[30,t.SWEET_SCENT],[37,t.SYNTHESIS],[44,t.WORRY_SEED],[51,t.POWER_WHIP],[58,t.SOLAR_BEAM]],[e.CHARMANDER]:[[1,t.SCRATCH],[1,t.GROWL],[4,t.EMBER],[8,t.SMOKESCREEN],[12,t.DRAGON_BREATH],[17,t.FIRE_FANG],[20,t.SLASH],[24,t.FLAMETHROWER],[28,t.SCARY_FACE],[32,t.FIRE_SPIN],[36,t.INFERNO],[40,t.FLARE_BLITZ]],[e.CHARMELEON]:[[1,t.SCRATCH],[1,t.GROWL],[1,t.EMBER],[1,t.SMOKESCREEN],[1,t.FIRE_SPIN],[12,t.DRAGON_BREATH],[19,t.FIRE_FANG],[24,t.SLASH],[30,t.FLAMETHROWER],[37,t.SCARY_FACE],[48,t.INFERNO],[54,t.FLARE_BLITZ]],[e.CHARIZARD]:[[Z,t.AIR_SLASH],[1,t.SCRATCH],[1,t.GROWL],[1,t.EMBER],[1,t.SMOKESCREEN],[1,t.HEAT_WAVE],[1,t.DRAGON_CLAW],[12,t.DRAGON_BREATH],[19,t.FIRE_FANG],[24,t.SLASH],[30,t.FLAMETHROWER],[39,t.SCARY_FACE],[46,t.FIRE_SPIN],[54,t.INFERNO],[62,t.FLARE_BLITZ]],[e.SQUIRTLE]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[3,t.WATER_GUN],[6,t.WITHDRAW],[9,t.RAPID_SPIN],[12,t.BITE],[15,t.WATER_PULSE],[18,t.PROTECT],[21,t.RAIN_DANCE],[24,t.AQUA_TAIL],[27,t.SHELL_SMASH],[30,t.IRON_DEFENSE],[33,t.HYDRO_PUMP],[36,t.WAVE_CRASH]],[e.WARTORTLE]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.WATER_GUN],[1,t.WITHDRAW],[9,t.RAPID_SPIN],[12,t.BITE],[15,t.WATER_PULSE],[20,t.PROTECT],[25,t.RAIN_DANCE],[30,t.AQUA_TAIL],[35,t.SHELL_SMASH],[40,t.IRON_DEFENSE],[45,t.HYDRO_PUMP],[50,t.WAVE_CRASH]],[e.BLASTOISE]:[[Z,t.FLASH_CANNON],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.WATER_GUN],[1,t.WITHDRAW],[9,t.RAPID_SPIN],[12,t.BITE],[15,t.WATER_PULSE],[20,t.PROTECT],[25,t.RAIN_DANCE],[30,t.AQUA_TAIL],[35,t.SHELL_SMASH],[42,t.IRON_DEFENSE],[49,t.HYDRO_PUMP],[56,t.WAVE_CRASH]],[e.CATERPIE]:[[1,t.TACKLE],[1,t.STRING_SHOT],[9,t.BUG_BITE]],[e.METAPOD]:[[Z,t.HARDEN],[w,t.TACKLE],[w,t.STRING_SHOT],[w,t.BUG_BITE],[1,t.HARDEN]],[e.BUTTERFREE]:[[Z,t.GUST],[1,t.TACKLE],[1,t.STRING_SHOT],[1,t.HARDEN],[1,t.BUG_BITE],[4,t.SUPERSONIC],[8,t.CONFUSION],[12,t.POISON_POWDER],[12,t.STUN_SPORE],[12,t.SLEEP_POWDER],[16,t.PSYBEAM],[20,t.WHIRLWIND],[24,t.AIR_SLASH],[28,t.SAFEGUARD],[32,t.BUG_BUZZ],[36,t.TAILWIND],[40,t.RAGE_POWDER],[44,t.QUIVER_DANCE]],[e.WEEDLE]:[[1,t.POISON_STING],[1,t.STRING_SHOT],[9,t.BUG_BITE]],[e.KAKUNA]:[[Z,t.HARDEN],[w,t.POISON_STING],[w,t.STRING_SHOT],[w,t.BUG_BITE],[1,t.HARDEN]],[e.BEEDRILL]:[[Z,t.TWINEEDLE],[1,t.POISON_STING],[1,t.STRING_SHOT],[1,t.HARDEN],[1,t.BUG_BITE],[1,t.FURY_ATTACK],[11,t.FURY_CUTTER],[14,t.RAGE],[17,t.PURSUIT],[20,t.FOCUS_ENERGY],[23,t.VENOSHOCK],[26,t.ASSURANCE],[29,t.TOXIC_SPIKES],[32,t.PIN_MISSILE],[35,t.POISON_JAB],[38,t.AGILITY],[41,t.ENDEAVOR],[44,t.FELL_STINGER]],[e.PIDGEY]:[[1,t.TACKLE],[5,t.SAND_ATTACK],[9,t.GUST],[13,t.QUICK_ATTACK],[17,t.WHIRLWIND],[21,t.TWISTER],[25,t.FEATHER_DANCE],[29,t.AGILITY],[33,t.WING_ATTACK],[37,t.ROOST],[41,t.TAILWIND],[45,t.AERIAL_ACE],[49,t.AIR_SLASH],[53,t.HURRICANE]],[e.PIDGEOTTO]:[[1,t.GUST],[1,t.SAND_ATTACK],[1,t.TACKLE],[5,t.SAND_ATTACK],[9,t.GUST],[13,t.QUICK_ATTACK],[17,t.WHIRLWIND],[22,t.TWISTER],[27,t.FEATHER_DANCE],[32,t.AGILITY],[37,t.WING_ATTACK],[42,t.ROOST],[47,t.TAILWIND],[52,t.AERIAL_ACE],[57,t.AIR_SLASH],[62,t.HURRICANE]],[e.PIDGEOT]:[[1,t.GUST],[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.QUICK_ATTACK],[1,t.HURRICANE],[5,t.SAND_ATTACK],[9,t.GUST],[17,t.WHIRLWIND],[22,t.TWISTER],[27,t.FEATHER_DANCE],[32,t.AGILITY],[38,t.WING_ATTACK],[44,t.ROOST],[50,t.TAILWIND],[56,t.AERIAL_ACE],[62,t.AIR_SLASH],[68,t.HURRICANE]],[e.RATTATA]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[4,t.QUICK_ATTACK],[7,t.FOCUS_ENERGY],[10,t.BITE],[13,t.LASER_FOCUS],[16,t.TAKE_DOWN],[19,t.ASSURANCE],[22,t.CRUNCH],[25,t.SUCKER_PUNCH],[28,t.SUPER_FANG],[31,t.DOUBLE_EDGE],[34,t.ENDEAVOR]],[e.RATICATE]:[[Z,t.SCARY_FACE],[1,t.SWORDS_DANCE],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.QUICK_ATTACK],[1,t.FOCUS_ENERGY],[10,t.BITE],[13,t.LASER_FOCUS],[16,t.TAKE_DOWN],[19,t.ASSURANCE],[24,t.CRUNCH],[29,t.SUCKER_PUNCH],[34,t.SUPER_FANG],[39,t.DOUBLE_EDGE],[44,t.ENDEAVOR]],[e.SPEAROW]:[[1,t.GROWL],[1,t.PECK],[4,t.LEER],[8,t.ASSURANCE],[11,t.FURY_ATTACK],[15,t.AERIAL_ACE],[18,t.WING_ATTACK],[22,t.TAKE_DOWN],[25,t.AGILITY],[29,t.FOCUS_ENERGY],[32,t.ROOST],[36,t.DRILL_PECK]],[e.FEAROW]:[[1,t.LEER],[1,t.GROWL],[1,t.PECK],[1,t.ASSURANCE],[1,t.PLUCK],[1,t.DRILL_RUN],[1,t.PURSUIT],[4,t.LEER],[8,t.ASSURANCE],[11,t.FURY_ATTACK],[15,t.AERIAL_ACE],[18,t.WING_ATTACK],[23,t.TAKE_DOWN],[27,t.AGILITY],[32,t.FOCUS_ENERGY],[36,t.ROOST],[41,t.DRILL_PECK]],[e.EKANS]:[[1,t.WRAP],[1,t.LEER],[4,t.POISON_STING],[9,t.BITE],[12,t.GLARE],[17,t.SCREECH],[20,t.ACID],[25,t.SWALLOW],[25,t.STOCKPILE],[25,t.SPIT_UP],[28,t.ACID_SPRAY],[33,t.SLUDGE_BOMB],[36,t.GASTRO_ACID],[38,t.BELCH],[41,t.HAZE],[44,t.COIL],[49,t.GUNK_SHOT]],[e.ARBOK]:[[Z,t.CRUNCH],[1,t.WRAP],[1,t.POISON_STING],[1,t.LEER],[1,t.BITE],[1,t.THUNDER_FANG],[1,t.ICE_FANG],[1,t.FIRE_FANG],[12,t.GLARE],[17,t.SCREECH],[20,t.ACID],[27,t.STOCKPILE],[27,t.SPIT_UP],[27,t.SWALLOW],[32,t.ACID_SPRAY],[39,t.SLUDGE_BOMB],[44,t.GASTRO_ACID],[48,t.BELCH],[51,t.HAZE],[56,t.COIL],[63,t.GUNK_SHOT]],[e.PIKACHU]:[[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.THUNDER_SHOCK],[1,t.QUICK_ATTACK],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.NASTY_PLOT],[1,t.PLAY_NICE],[1,t.NUZZLE],[4,t.THUNDER_WAVE],[8,t.DOUBLE_TEAM],[12,t.ELECTRO_BALL],[16,t.FEINT],[20,t.SPARK],[24,t.AGILITY],[28,t.IRON_TAIL],[32,t.DISCHARGE],[36,t.THUNDERBOLT],[40,t.LIGHT_SCREEN],[44,t.THUNDER],[48,t.PIKA_PAPOW]],[e.RAICHU]:[[Z,t.ZIPPY_ZAP],[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.THUNDER_SHOCK],[1,t.THUNDER_WAVE],[1,t.THUNDER],[1,t.AGILITY],[1,t.QUICK_ATTACK],[1,t.DOUBLE_TEAM],[1,t.LIGHT_SCREEN],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.SPARK],[1,t.IRON_TAIL],[1,t.FEINT],[1,t.NASTY_PLOT],[1,t.DISCHARGE],[1,t.ELECTRO_BALL],[1,t.PLAY_NICE],[1,t.NUZZLE],[1,t.THUNDER_PUNCH],[5,t.THUNDERBOLT],[50,t.PIKA_PAPOW]],[e.SANDSHREW]:[[1,t.SCRATCH],[1,t.DEFENSE_CURL],[3,t.POISON_STING],[6,t.SAND_ATTACK],[9,t.ROLLOUT],[12,t.FURY_CUTTER],[15,t.RAPID_SPIN],[18,t.BULLDOZE],[21,t.SWIFT],[24,t.FURY_SWIPES],[27,t.AGILITY],[30,t.SLASH],[33,t.DIG],[36,t.GYRO_BALL],[39,t.SWORDS_DANCE],[42,t.SANDSTORM],[45,t.EARTHQUAKE]],[e.SANDSLASH]:[[1,t.SCRATCH],[1,t.SAND_ATTACK],[1,t.POISON_STING],[1,t.DEFENSE_CURL],[1,t.CRUSH_CLAW],[1,t.AGILITY],[9,t.ROLLOUT],[12,t.FURY_CUTTER],[15,t.RAPID_SPIN],[18,t.BULLDOZE],[21,t.SWIFT],[26,t.FURY_SWIPES],[31,t.SAND_TOMB],[36,t.SLASH],[41,t.DIG],[46,t.GYRO_BALL],[51,t.SWORDS_DANCE],[56,t.SANDSTORM],[61,t.EARTHQUAKE]],[e.NIDORAN_F]:[[1,t.POISON_STING],[1,t.GROWL],[5,t.SCRATCH],[10,t.TAIL_WHIP],[15,t.FURY_SWIPES],[20,t.TOXIC_SPIKES],[25,t.DOUBLE_KICK],[30,t.BITE],[35,t.HELPING_HAND],[40,t.TOXIC],[45,t.FLATTER],[50,t.CRUNCH],[55,t.EARTH_POWER]],[e.NIDORINA]:[[1,t.SCRATCH],[1,t.TAIL_WHIP],[1,t.POISON_STING],[1,t.GROWL],[15,t.FURY_SWIPES],[22,t.TOXIC_SPIKES],[29,t.DOUBLE_KICK],[36,t.BITE],[43,t.HELPING_HAND],[50,t.TOXIC],[57,t.FLATTER],[64,t.CRUNCH],[71,t.EARTH_POWER]],[e.NIDOQUEEN]:[[Z,t.SUPERPOWER],[1,t.SLUDGE_WAVE],[1,t.SCRATCH],[1,t.DOUBLE_KICK],[1,t.TAIL_WHIP],[1,t.POISON_STING],[1,t.BITE],[1,t.GROWL],[1,t.TOXIC],[1,t.FURY_SWIPES],[1,t.CRUNCH],[1,t.FLATTER],[1,t.HELPING_HAND],[1,t.TOXIC_SPIKES],[1,t.EARTH_POWER]],[e.NIDORAN_M]:[[1,t.POISON_STING],[1,t.LEER],[5,t.PECK],[10,t.FOCUS_ENERGY],[15,t.FURY_ATTACK],[20,t.TOXIC_SPIKES],[25,t.DOUBLE_KICK],[30,t.HORN_ATTACK],[35,t.HELPING_HAND],[40,t.TOXIC],[45,t.FLATTER],[50,t.POISON_JAB],[55,t.EARTH_POWER]],[e.NIDORINO]:[[1,t.POISON_STING],[1,t.LEER],[1,t.PECK],[1,t.FOCUS_ENERGY],[15,t.FURY_ATTACK],[22,t.TOXIC_SPIKES],[29,t.DOUBLE_KICK],[36,t.HORN_ATTACK],[43,t.HELPING_HAND],[50,t.TOXIC],[57,t.FLATTER],[64,t.POISON_JAB],[71,t.EARTH_POWER]],[e.NIDOKING]:[[Z,t.MEGAHORN],[1,t.SLUDGE_WAVE],[1,t.DOUBLE_KICK],[1,t.HORN_ATTACK],[1,t.FURY_ATTACK],[1,t.POISON_STING],[1,t.LEER],[1,t.PECK],[1,t.TOXIC],[1,t.FOCUS_ENERGY],[1,t.FLATTER],[1,t.HELPING_HAND],[1,t.TOXIC_SPIKES],[1,t.POISON_JAB],[1,t.EARTH_POWER]],[e.CLEFAIRY]:[[1,t.POUND],[1,t.GROWL],[1,t.SING],[1,t.DEFENSE_CURL],[1,t.SPLASH],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.COPYCAT],[1,t.DISARMING_VOICE],[1,t.SPOTLIGHT],[4,t.STORED_POWER],[8,t.ENCORE],[12,t.AFTER_YOU],[16,t.LIFE_DEW],[20,t.METRONOME],[24,t.MOONLIGHT],[28,t.GRAVITY],[32,t.METEOR_MASH],[36,t.FOLLOW_ME],[40,t.COSMIC_POWER],[44,t.MOONBLAST],[48,t.HEALING_WISH]],[e.CLEFABLE]:[[w,t.POUND],[w,t.GROWL],[w,t.SING],[w,t.DEFENSE_CURL],[w,t.SPLASH],[w,t.SWEET_KISS],[w,t.CHARM],[w,t.ENCORE],[w,t.MOONLIGHT],[w,t.FOLLOW_ME],[w,t.COSMIC_POWER],[w,t.GRAVITY],[w,t.HEALING_WISH],[w,t.COPYCAT],[w,t.AFTER_YOU],[w,t.STORED_POWER],[w,t.DISARMING_VOICE],[1,t.METRONOME],[1,t.METEOR_MASH],[1,t.MOONBLAST],[1,t.LIFE_DEW],[1,t.SPOTLIGHT]],[e.VULPIX]:[[1,t.TAIL_WHIP],[1,t.EMBER],[4,t.DISABLE],[8,t.QUICK_ATTACK],[12,t.SPITE],[16,t.INCINERATE],[20,t.CONFUSE_RAY],[24,t.WILL_O_WISP],[28,t.EXTRASENSORY],[32,t.FLAMETHROWER],[36,t.IMPRISON],[40,t.FIRE_SPIN],[44,t.SAFEGUARD],[48,t.INFERNO],[52,t.FIRE_BLAST]],[e.NINETALES]:[[w,t.DISABLE],[w,t.EMBER],[w,t.FIRE_SPIN],[w,t.CONFUSE_RAY],[w,t.FIRE_BLAST],[w,t.SPITE],[w,t.SAFEGUARD],[w,t.WILL_O_WISP],[w,t.IMPRISON],[w,t.EXTRASENSORY],[w,t.NASTY_PLOT],[w,t.INCINERATE],[w,t.INFERNO],[1,t.FLAMETHROWER],[1,t.TAIL_WHIP],[1,t.QUICK_ATTACK]],[e.JIGGLYPUFF]:[[1,t.POUND],[1,t.SING],[1,t.DISABLE],[1,t.DEFENSE_CURL],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.COPYCAT],[1,t.DISARMING_VOICE],[4,t.ECHOED_VOICE],[8,t.COVET],[12,t.STOCKPILE],[12,t.SPIT_UP],[12,t.SWALLOW],[16,t.ROUND],[20,t.REST],[24,t.BODY_SLAM],[28,t.MIMIC],[32,t.GYRO_BALL],[36,t.HYPER_VOICE],[44,t.DOUBLE_EDGE]],[e.WIGGLYTUFF]:[[1,t.POUND],[1,t.BODY_SLAM],[1,t.DOUBLE_EDGE],[1,t.SING],[1,t.DISABLE],[1,t.MIMIC],[1,t.DEFENSE_CURL],[1,t.REST],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.STOCKPILE],[1,t.SPIT_UP],[1,t.SWALLOW],[1,t.HYPER_VOICE],[1,t.COVET],[1,t.GYRO_BALL],[1,t.COPYCAT],[1,t.ROUND],[1,t.ECHOED_VOICE],[1,t.DISARMING_VOICE],[5,t.PLAY_ROUGH]],[e.ZUBAT]:[[1,t.SUPERSONIC],[1,t.ABSORB],[5,t.ASTONISH],[10,t.MEAN_LOOK],[15,t.POISON_FANG],[20,t.QUICK_GUARD],[25,t.AIR_CUTTER],[30,t.BITE],[35,t.HAZE],[40,t.VENOSHOCK],[45,t.CONFUSE_RAY],[50,t.AIR_SLASH],[55,t.LEECH_LIFE]],[e.GOLBAT]:[[1,t.SUPERSONIC],[1,t.ABSORB],[1,t.SCREECH],[1,t.MEAN_LOOK],[1,t.ASTONISH],[15,t.POISON_FANG],[20,t.QUICK_GUARD],[27,t.AIR_CUTTER],[34,t.BITE],[41,t.HAZE],[48,t.VENOSHOCK],[55,t.CONFUSE_RAY],[62,t.AIR_SLASH],[69,t.LEECH_LIFE]],[e.ODDISH]:[[1,t.ABSORB],[1,t.GROWTH],[4,t.ACID],[8,t.SWEET_SCENT],[12,t.MEGA_DRAIN],[14,t.POISON_POWDER],[16,t.STUN_SPORE],[18,t.SLEEP_POWDER],[20,t.GIGA_DRAIN],[24,t.TOXIC],[28,t.MOONBLAST],[32,t.GRASSY_TERRAIN],[36,t.MOONLIGHT],[40,t.PETAL_DANCE]],[e.GLOOM]:[[1,t.ACID],[1,t.ABSORB],[1,t.GROWTH],[1,t.SWEET_SCENT],[12,t.MEGA_DRAIN],[14,t.POISON_POWDER],[16,t.STUN_SPORE],[18,t.SLEEP_POWDER],[20,t.GIGA_DRAIN],[26,t.TOXIC],[32,t.MOONBLAST],[38,t.GRASSY_TERRAIN],[44,t.MOONLIGHT],[50,t.PETAL_DANCE]],[e.VILEPLUME]:[[Z,t.PETAL_BLIZZARD],[1,t.ACID],[1,t.ABSORB],[1,t.MEGA_DRAIN],[1,t.GROWTH],[1,t.POISON_POWDER],[1,t.STUN_SPORE],[1,t.SLEEP_POWDER],[1,t.PETAL_DANCE],[1,t.TOXIC],[1,t.GIGA_DRAIN],[1,t.SWEET_SCENT],[1,t.MOONLIGHT],[1,t.AROMATHERAPY],[1,t.GRASSY_TERRAIN],[1,t.MOONBLAST]],[e.PARAS]:[[1,t.SCRATCH],[6,t.POISON_POWDER],[6,t.STUN_SPORE],[11,t.ABSORB],[17,t.FURY_CUTTER],[22,t.SPORE],[27,t.SLASH],[33,t.GROWTH],[38,t.GIGA_DRAIN],[43,t.AROMATHERAPY],[49,t.RAGE_POWDER],[54,t.X_SCISSOR]],[e.PARASECT]:[[1,t.SCRATCH],[1,t.ABSORB],[1,t.POISON_POWDER],[1,t.STUN_SPORE],[1,t.CROSS_POISON],[6,t.POISON_POWDER],[6,t.STUN_SPORE],[11,t.ABSORB],[17,t.FURY_CUTTER],[22,t.SPORE],[29,t.SLASH],[37,t.GROWTH],[44,t.GIGA_DRAIN],[51,t.AROMATHERAPY],[59,t.RAGE_POWDER],[66,t.X_SCISSOR]],[e.VENONAT]:[[1,t.TACKLE],[1,t.DISABLE],[5,t.SUPERSONIC],[11,t.CONFUSION],[13,t.POISON_POWDER],[17,t.PSYBEAM],[23,t.STUN_SPORE],[25,t.BUG_BUZZ],[29,t.SLEEP_POWDER],[35,t.LEECH_LIFE],[37,t.ZEN_HEADBUTT],[41,t.POISON_FANG],[47,t.PSYCHIC]],[e.VENOMOTH]:[[Z,t.AIR_SLASH],[1,t.TACKLE],[1,t.SUPERSONIC],[1,t.DISABLE],[1,t.QUIVER_DANCE],[1,t.SILVER_WIND],[11,t.CONFUSION],[13,t.POISON_POWDER],[17,t.PSYBEAM],[23,t.STUN_SPORE],[25,t.BUG_BUZZ],[29,t.SLEEP_POWDER],[37,t.LEECH_LIFE],[41,t.ZEN_HEADBUTT],[47,t.POISON_FANG],[55,t.PSYCHIC]],[e.DIGLETT]:[[1,t.SCRATCH],[1,t.SAND_ATTACK],[4,t.GROWL],[8,t.ASTONISH],[12,t.MUD_SLAP],[16,t.BULLDOZE],[20,t.SUCKER_PUNCH],[24,t.SLASH],[28,t.SANDSTORM],[32,t.DIG],[36,t.EARTH_POWER],[40,t.EARTHQUAKE],[44,t.FISSURE]],[e.DUGTRIO]:[[Z,t.SAND_TOMB],[1,t.SCRATCH],[1,t.SAND_ATTACK],[1,t.GROWL],[1,t.TRI_ATTACK],[1,t.ASTONISH],[1,t.NIGHT_SLASH],[1,t.ROTOTILLER],[12,t.MUD_SLAP],[16,t.BULLDOZE],[20,t.SUCKER_PUNCH],[24,t.SLASH],[30,t.SANDSTORM],[36,t.DIG],[42,t.EARTH_POWER],[48,t.EARTHQUAKE],[54,t.FISSURE]],[e.MEOWTH]:[[1,t.GROWL],[1,t.FAKE_OUT],[4,t.FEINT],[8,t.SCRATCH],[12,t.PAY_DAY],[16,t.BITE],[20,t.TAUNT],[24,t.ASSURANCE],[29,t.FURY_SWIPES],[32,t.SCREECH],[36,t.SLASH],[40,t.NASTY_PLOT],[44,t.PLAY_ROUGH]],[e.PERSIAN]:[[Z,t.POWER_GEM],[1,t.SCRATCH],[1,t.GROWL],[1,t.FAKE_OUT],[1,t.FEINT],[1,t.SWITCHEROO],[12,t.PAY_DAY],[16,t.BITE],[20,t.TAUNT],[24,t.ASSURANCE],[31,t.FURY_SWIPES],[36,t.SCREECH],[42,t.SLASH],[48,t.NASTY_PLOT],[54,t.PLAY_ROUGH]],[e.PSYDUCK]:[[1,t.SCRATCH],[1,t.TAIL_WHIP],[1,t.WATER_SPORT],[3,t.WATER_GUN],[6,t.CONFUSION],[9,t.FURY_SWIPES],[12,t.WATER_PULSE],[15,t.DISABLE],[18,t.ZEN_HEADBUTT],[21,t.SCREECH],[24,t.AQUA_TAIL],[27,t.SOAK],[30,t.PSYCH_UP],[34,t.AMNESIA],[39,t.WONDER_ROOM]],[e.GOLDUCK]:[[1,t.SCRATCH],[1,t.TAIL_WHIP],[1,t.WATER_GUN],[1,t.CONFUSION],[1,t.AQUA_JET],[1,t.WATER_SPORT],[1,t.ME_FIRST],[9,t.FURY_SWIPES],[12,t.WATER_PULSE],[15,t.DISABLE],[18,t.ZEN_HEADBUTT],[21,t.SCREECH],[24,t.AQUA_TAIL],[27,t.SOAK],[30,t.PSYCH_UP],[36,t.AMNESIA],[40,t.HYDRO_PUMP],[45,t.WONDER_ROOM]],[e.MANKEY]:[[1,t.SCRATCH],[1,t.LEER],[1,t.FOCUS_ENERGY],[1,t.COVET],[5,t.FURY_SWIPES],[8,t.LOW_KICK],[12,t.SEISMIC_TOSS],[17,t.SWAGGER],[22,t.CROSS_CHOP],[26,t.ASSURANCE],[29,t.THRASH],[33,t.CLOSE_COMBAT],[36,t.SCREECH],[40,t.STOMPING_TANTRUM],[44,t.OUTRAGE],[48,t.FINAL_GAMBIT]],[e.PRIMEAPE]:[[1,t.SCRATCH],[1,t.LEER],[1,t.FOCUS_ENERGY],[1,t.COVET],[1,t.FLING],[5,t.FURY_SWIPES],[8,t.LOW_KICK],[15,t.SEISMIC_TOSS],[17,t.SWAGGER],[22,t.CROSS_CHOP],[26,t.ASSURANCE],[30,t.THRASH],[35,t.RAGE_FIST],[39,t.CLOSE_COMBAT],[44,t.SCREECH],[48,t.STOMPING_TANTRUM],[53,t.OUTRAGE],[57,t.FINAL_GAMBIT]],[e.GROWLITHE]:[[1,t.LEER],[1,t.EMBER],[4,t.HOWL],[8,t.BITE],[12,t.FLAME_WHEEL],[16,t.HELPING_HAND],[20,t.AGILITY],[24,t.FIRE_FANG],[28,t.RETALIATE],[32,t.CRUNCH],[36,t.TAKE_DOWN],[40,t.FLAMETHROWER],[44,t.ROAR],[48,t.PLAY_ROUGH],[52,t.REVERSAL],[56,t.FLARE_BLITZ]],[e.ARCANINE]:[[Z,t.EXTREME_SPEED],[1,t.TAKE_DOWN],[1,t.LEER],[1,t.BITE],[1,t.ROAR],[1,t.EMBER],[1,t.AGILITY],[1,t.FLAME_WHEEL],[1,t.REVERSAL],[1,t.CRUNCH],[1,t.HELPING_HAND],[1,t.ODOR_SLEUTH],[1,t.HOWL],[1,t.FLARE_BLITZ],[1,t.FIRE_FANG],[1,t.RETALIATE],[1,t.PLAY_ROUGH],[5,t.FLAMETHROWER]],[e.POLIWAG]:[[1,t.WATER_GUN],[1,t.HYPNOSIS],[1,t.WATER_SPORT],[6,t.POUND],[12,t.MUD_SHOT],[18,t.BUBBLE_BEAM],[24,t.RAIN_DANCE],[30,t.BODY_SLAM],[36,t.EARTH_POWER],[42,t.HYDRO_PUMP],[48,t.BELLY_DRUM],[54,t.DOUBLE_EDGE]],[e.POLIWHIRL]:[[1,t.POUND],[1,t.WATER_GUN],[1,t.HYPNOSIS],[1,t.WATER_SPORT],[1,t.MUD_SHOT],[18,t.BUBBLE_BEAM],[24,t.RAIN_DANCE],[32,t.BODY_SLAM],[40,t.EARTH_POWER],[48,t.HYDRO_PUMP],[56,t.BELLY_DRUM],[66,t.DOUBLE_EDGE]],[e.POLIWRATH]:[[Z,t.DYNAMIC_PUNCH],[w,t.POUND],[w,t.DOUBLE_EDGE],[w,t.WATER_GUN],[w,t.HYDRO_PUMP],[w,t.BELLY_DRUM],[w,t.RAIN_DANCE],[w,t.MUD_SHOT],[w,t.EARTH_POWER],[w,t.CIRCLE_THROW],[1,t.BUBBLE_BEAM],[1,t.BODY_SLAM],[1,t.HYPNOSIS],[1,t.WATER_SPORT]],[e.ABRA]:[[1,t.TELEPORT],[1,t.CONFUSION]],[e.KADABRA]:[[Z,t.PSYBEAM],[1,t.CONFUSION],[1,t.DISABLE],[1,t.TELEPORT],[1,t.KINESIS],[10,t.REFLECT],[15,t.ALLY_SWITCH],[20,t.PSYCHO_CUT],[25,t.RECOVER],[30,t.PSYSHOCK],[35,t.PSYCHIC],[40,t.ROLE_PLAY],[45,t.FUTURE_SIGHT],[50,t.CALM_MIND]],[e.ALAKAZAM]:[[1,t.DISABLE],[1,t.CONFUSION],[1,t.TELEPORT],[1,t.KINESIS],[5,t.PSYBEAM],[10,t.REFLECT],[15,t.ALLY_SWITCH],[20,t.PSYCHO_CUT],[25,t.RECOVER],[30,t.PSYSHOCK],[35,t.PSYCHIC],[40,t.ROLE_PLAY],[45,t.FUTURE_SIGHT],[50,t.CALM_MIND]],[e.MACHOP]:[[1,t.LEER],[1,t.LOW_KICK],[4,t.FOCUS_ENERGY],[8,t.REVENGE],[12,t.LOW_SWEEP],[16,t.KNOCK_OFF],[20,t.SCARY_FACE],[24,t.VITAL_THROW],[29,t.STRENGTH],[32,t.DUAL_CHOP],[36,t.BULK_UP],[40,t.SEISMIC_TOSS],[44,t.DYNAMIC_PUNCH],[48,t.CROSS_CHOP],[52,t.DOUBLE_EDGE]],[e.MACHOKE]:[[1,t.LEER],[1,t.LOW_KICK],[1,t.FOCUS_ENERGY],[1,t.REVENGE],[1,t.KARATE_CHOP],[12,t.LOW_SWEEP],[16,t.KNOCK_OFF],[20,t.SCARY_FACE],[24,t.VITAL_THROW],[31,t.STRENGTH],[36,t.DUAL_CHOP],[42,t.BULK_UP],[48,t.SEISMIC_TOSS],[54,t.DYNAMIC_PUNCH],[60,t.CROSS_CHOP],[66,t.DOUBLE_EDGE]],[e.MACHAMP]:[[1,t.LEER],[1,t.LOW_KICK],[1,t.FOCUS_ENERGY],[1,t.REVENGE],[1,t.WIDE_GUARD],[1,t.KARATE_CHOP],[12,t.LOW_SWEEP],[16,t.KNOCK_OFF],[20,t.SCARY_FACE],[24,t.VITAL_THROW],[31,t.STRENGTH],[36,t.DUAL_CHOP],[42,t.BULK_UP],[48,t.SEISMIC_TOSS],[54,t.DYNAMIC_PUNCH],[60,t.CROSS_CHOP],[66,t.DOUBLE_EDGE]],[e.BELLSPROUT]:[[1,t.VINE_WHIP],[7,t.GROWTH],[11,t.WRAP],[13,t.SLEEP_POWDER],[15,t.POISON_POWDER],[17,t.STUN_SPORE],[23,t.ACID],[27,t.KNOCK_OFF],[29,t.SWEET_SCENT],[35,t.GASTRO_ACID],[39,t.RAZOR_LEAF],[41,t.POISON_JAB],[47,t.SLAM],[52,t.POWER_WHIP]],[e.WEEPINBELL]:[[1,t.VINE_WHIP],[1,t.WRAP],[1,t.GROWTH],[13,t.SLEEP_POWDER],[15,t.POISON_POWDER],[17,t.STUN_SPORE],[24,t.ACID],[29,t.KNOCK_OFF],[32,t.SWEET_SCENT],[39,t.GASTRO_ACID],[44,t.RAZOR_LEAF],[47,t.POISON_JAB],[54,t.SLAM],[58,t.POWER_WHIP]],[e.VICTREEBEL]:[[Z,t.LEAF_STORM],[w,t.STOCKPILE],[w,t.SWALLOW],[w,t.SPIT_UP],[w,t.WRAP],[w,t.GROWTH],[w,t.ACID],[w,t.KNOCK_OFF],[w,t.GASTRO_ACID],[w,t.POISON_JAB],[w,t.SLAM],[w,t.POWER_WHIP],[1,t.VINE_WHIP],[1,t.SLEEP_POWDER],[1,t.POISON_POWDER],[1,t.STUN_SPORE],[1,t.SWEET_SCENT],[1,t.RAZOR_LEAF],[44,t.LEAF_BLADE]],[e.TENTACOOL]:[[1,t.POISON_STING],[1,t.WATER_GUN],[4,t.ACID],[8,t.WRAP],[12,t.SUPERSONIC],[16,t.WATER_PULSE],[20,t.SCREECH],[24,t.BUBBLE_BEAM],[28,t.HEX],[32,t.ACID_ARMOR],[36,t.POISON_JAB],[40,t.SURF],[44,t.SLUDGE_WAVE],[48,t.HYDRO_PUMP]],[e.TENTACRUEL]:[[1,t.WRAP],[1,t.POISON_STING],[1,t.ACID],[1,t.WATER_GUN],[1,t.REFLECT_TYPE],[1,t.WRING_OUT],[12,t.SUPERSONIC],[16,t.WATER_PULSE],[20,t.SCREECH],[24,t.BUBBLE_BEAM],[28,t.HEX],[34,t.ACID_ARMOR],[40,t.POISON_JAB],[46,t.SURF],[52,t.SLUDGE_WAVE],[58,t.HYDRO_PUMP]],[e.GEODUDE]:[[1,t.TACKLE],[1,t.DEFENSE_CURL],[6,t.ROCK_POLISH],[10,t.ROLLOUT],[12,t.BULLDOZE],[16,t.ROCK_THROW],[18,t.SMACK_DOWN],[24,t.SELF_DESTRUCT],[28,t.STEALTH_ROCK],[30,t.ROCK_BLAST],[34,t.EARTHQUAKE],[36,t.EXPLOSION],[40,t.DOUBLE_EDGE],[42,t.STONE_EDGE]],[e.GRAVELER]:[[1,t.TACKLE],[1,t.DEFENSE_CURL],[1,t.ROCK_POLISH],[10,t.ROLLOUT],[12,t.BULLDOZE],[16,t.ROCK_THROW],[18,t.SMACK_DOWN],[24,t.SELF_DESTRUCT],[30,t.STEALTH_ROCK],[34,t.ROCK_BLAST],[40,t.EARTHQUAKE],[44,t.EXPLOSION],[50,t.DOUBLE_EDGE],[54,t.STONE_EDGE]],[e.GOLEM]:[[1,t.TACKLE],[1,t.DEFENSE_CURL],[1,t.ROCK_POLISH],[1,t.ROLLOUT],[1,t.HEAVY_SLAM],[16,t.ROCK_THROW],[18,t.SMACK_DOWN],[22,t.BULLDOZE],[24,t.SELF_DESTRUCT],[30,t.STEALTH_ROCK],[34,t.ROCK_BLAST],[40,t.EARTHQUAKE],[44,t.EXPLOSION],[50,t.DOUBLE_EDGE],[54,t.STONE_EDGE]],[e.PONYTA]:[[1,t.TACKLE],[1,t.GROWL],[5,t.TAIL_WHIP],[10,t.EMBER],[15,t.FLAME_CHARGE],[20,t.AGILITY],[25,t.FLAME_WHEEL],[30,t.STOMP],[35,t.FIRE_SPIN],[41,t.TAKE_DOWN],[45,t.INFERNO],[50,t.FIRE_BLAST],[55,t.FLARE_BLITZ]],[e.RAPIDASH]:[[Z,t.SMART_STRIKE],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.EMBER],[1,t.QUICK_ATTACK],[1,t.MEGAHORN],[1,t.POISON_JAB],[15,t.FLAME_CHARGE],[20,t.AGILITY],[25,t.FLAME_WHEEL],[30,t.STOMP],[35,t.FIRE_SPIN],[43,t.TAKE_DOWN],[49,t.INFERNO],[56,t.FIRE_BLAST],[63,t.FLARE_BLITZ]],[e.SLOWPOKE]:[[1,t.TACKLE],[1,t.CURSE],[3,t.GROWL],[6,t.WATER_GUN],[9,t.YAWN],[12,t.CONFUSION],[15,t.DISABLE],[18,t.WATER_PULSE],[21,t.HEADBUTT],[24,t.ZEN_HEADBUTT],[27,t.AMNESIA],[30,t.SURF],[33,t.SLACK_OFF],[36,t.PSYCHIC],[39,t.PSYCH_UP],[42,t.RAIN_DANCE],[45,t.HEAL_PULSE]],[e.SLOWBRO]:[[w,t.FUTURE_SIGHT],[1,t.TACKLE],[1,t.GROWL],[1,t.WATER_GUN],[1,t.WITHDRAW],[1,t.CURSE],[9,t.YAWN],[12,t.CONFUSION],[15,t.DISABLE],[18,t.WATER_PULSE],[21,t.HEADBUTT],[24,t.ZEN_HEADBUTT],[27,t.AMNESIA],[30,t.SURF],[33,t.SLACK_OFF],[36,t.PSYCHIC],[41,t.PSYCH_UP],[46,t.RAIN_DANCE],[51,t.HEAL_PULSE]],[e.MAGNEMITE]:[[1,t.TACKLE],[1,t.THUNDER_SHOCK],[4,t.SUPERSONIC],[8,t.THUNDER_WAVE],[12,t.ELECTRO_BALL],[16,t.GYRO_BALL],[20,t.SPARK],[24,t.SCREECH],[28,t.MAGNET_RISE],[32,t.FLASH_CANNON],[36,t.DISCHARGE],[40,t.METAL_SOUND],[44,t.LIGHT_SCREEN],[48,t.LOCK_ON],[52,t.ZAP_CANNON]],[e.MAGNETON]:[[Z,t.TRI_ATTACK],[1,t.TACKLE],[1,t.SUPERSONIC],[1,t.THUNDER_SHOCK],[1,t.THUNDER_WAVE],[1,t.ELECTRIC_TERRAIN],[12,t.ELECTRO_BALL],[16,t.GYRO_BALL],[20,t.SPARK],[24,t.SCREECH],[28,t.MAGNET_RISE],[34,t.FLASH_CANNON],[40,t.DISCHARGE],[46,t.METAL_SOUND],[52,t.LIGHT_SCREEN],[58,t.LOCK_ON],[64,t.ZAP_CANNON]],[e.FARFETCHD]:[[1,t.SAND_ATTACK],[1,t.PECK],[5,t.LEER],[10,t.FURY_CUTTER],[15,t.CUT],[20,t.AERIAL_ACE],[25,t.AIR_CUTTER],[30,t.KNOCK_OFF],[35,t.FALSE_SWIPE],[40,t.SLASH],[45,t.SWORDS_DANCE],[50,t.AIR_SLASH],[55,t.LEAF_BLADE],[60,t.AGILITY],[65,t.BRAVE_BIRD]],[e.DODUO]:[[1,t.GROWL],[1,t.PECK],[5,t.QUICK_ATTACK],[9,t.FURY_ATTACK],[14,t.PLUCK],[19,t.DOUBLE_HIT],[23,t.AGILITY],[27,t.UPROAR],[30,t.ACUPRESSURE],[33,t.SWORDS_DANCE],[36,t.DRILL_PECK],[39,t.ENDEAVOR],[43,t.THRASH]],[e.DODRIO]:[[Z,t.TRI_ATTACK],[1,t.TRI_ATTACK],[1,t.GROWL],[1,t.PECK],[5,t.QUICK_ATTACK],[12,t.FURY_ATTACK],[15,t.PLUCK],[19,t.DOUBLE_HIT],[23,t.AGILITY],[26,t.UPROAR],[30,t.ACUPRESSURE],[34,t.SWORDS_DANCE],[38,t.DRILL_PECK],[43,t.ENDEAVOR],[50,t.THRASH]],[e.SEEL]:[[1,t.HEADBUTT],[3,t.GROWL],[7,t.CHARM],[11,t.ICY_WIND],[13,t.ENCORE],[17,t.ICE_SHARD],[21,t.REST],[23,t.AQUA_RING],[27,t.AURORA_BEAM],[31,t.AQUA_JET],[33,t.BRINE],[37,t.TAKE_DOWN],[41,t.DIVE],[43,t.AQUA_TAIL],[47,t.ICE_BEAM],[51,t.SAFEGUARD],[53,t.SNOWSCAPE]],[e.DEWGONG]:[[Z,t.SHEER_COLD],[1,t.HEADBUTT],[1,t.GROWL],[1,t.ICY_WIND],[1,t.CHARM],[1,t.SIGNAL_BEAM],[13,t.ENCORE],[17,t.ICE_SHARD],[21,t.REST],[23,t.AQUA_RING],[27,t.AURORA_BEAM],[31,t.AQUA_JET],[33,t.BRINE],[39,t.TAKE_DOWN],[45,t.DIVE],[49,t.AQUA_TAIL],[55,t.ICE_BEAM],[61,t.SAFEGUARD],[65,t.SNOWSCAPE]],[e.GRIMER]:[[1,t.POUND],[1,t.POISON_GAS],[4,t.HARDEN],[7,t.MUD_SLAP],[12,t.DISABLE],[15,t.SLUDGE],[18,t.MUD_SHOT],[21,t.MINIMIZE],[26,t.TOXIC],[29,t.SLUDGE_BOMB],[32,t.SLUDGE_WAVE],[37,t.SCREECH],[40,t.GUNK_SHOT],[43,t.ACID_ARMOR],[46,t.BELCH],[48,t.MEMENTO]],[e.MUK]:[[1,t.POUND],[1,t.HARDEN],[1,t.POISON_GAS],[1,t.MUD_SLAP],[12,t.DISABLE],[15,t.SLUDGE],[18,t.MUD_SHOT],[21,t.MINIMIZE],[26,t.TOXIC],[29,t.SLUDGE_BOMB],[32,t.SLUDGE_WAVE],[37,t.SCREECH],[40,t.GUNK_SHOT],[46,t.ACID_ARMOR],[52,t.BELCH],[57,t.MEMENTO]],[e.SHELLDER]:[[1,t.TACKLE],[1,t.WATER_GUN],[4,t.WITHDRAW],[8,t.ICE_SHARD],[12,t.LEER],[16,t.WHIRLPOOL],[20,t.SUPERSONIC],[24,t.AURORA_BEAM],[28,t.PROTECT],[32,t.RAZOR_SHELL],[36,t.IRON_DEFENSE],[40,t.ICE_BEAM],[44,t.SHELL_SMASH],[48,t.HYDRO_PUMP]],[e.CLOYSTER]:[[Z,t.ICICLE_SPEAR],[1,t.TACKLE],[1,t.LEER],[1,t.SUPERSONIC],[1,t.WATER_GUN],[1,t.HYDRO_PUMP],[1,t.ICE_BEAM],[1,t.AURORA_BEAM],[1,t.WITHDRAW],[1,t.PROTECT],[1,t.SPIKES],[1,t.WHIRLPOOL],[1,t.IRON_DEFENSE],[1,t.TOXIC_SPIKES],[1,t.ICE_SHARD],[1,t.SHELL_SMASH],[1,t.ICICLE_CRASH],[5,t.RAZOR_SHELL]],[e.GASTLY]:[[1,t.CONFUSE_RAY],[1,t.LICK],[1,t.ACID],[4,t.HYPNOSIS],[8,t.MEAN_LOOK],[12,t.PAYBACK],[16,t.SPITE],[20,t.CURSE],[24,t.HEX],[28,t.NIGHT_SHADE],[32,t.SUCKER_PUNCH],[36,t.DARK_PULSE],[40,t.SHADOW_BALL],[44,t.DESTINY_BOND],[48,t.DREAM_EATER]],[e.HAUNTER]:[[Z,t.SHADOW_PUNCH],[1,t.HYPNOSIS],[1,t.CONFUSE_RAY],[1,t.LICK],[1,t.ACID],[1,t.MEAN_LOOK],[12,t.PAYBACK],[16,t.SPITE],[20,t.CURSE],[24,t.HEX],[30,t.NIGHT_SHADE],[36,t.SUCKER_PUNCH],[42,t.DARK_PULSE],[48,t.SHADOW_BALL],[54,t.DESTINY_BOND],[60,t.DREAM_EATER]],[e.GENGAR]:[[1,t.HYPNOSIS],[1,t.CONFUSE_RAY],[1,t.LICK],[1,t.ACID],[1,t.PERISH_SONG],[1,t.MEAN_LOOK],[1,t.SHADOW_PUNCH],[1,t.REFLECT_TYPE],[12,t.PAYBACK],[16,t.SPITE],[20,t.CURSE],[24,t.HEX],[30,t.NIGHT_SHADE],[36,t.SUCKER_PUNCH],[42,t.DARK_PULSE],[48,t.SHADOW_BALL],[54,t.DESTINY_BOND],[60,t.DREAM_EATER]],[e.ONIX]:[[1,t.BIND],[1,t.TACKLE],[1,t.ROCK_THROW],[1,t.HARDEN],[1,t.MUD_SPORT],[4,t.SMACK_DOWN],[8,t.ROCK_POLISH],[12,t.DRAGON_BREATH],[16,t.CURSE],[20,t.ROCK_SLIDE],[22,t.GYRO_BALL],[24,t.SCREECH],[28,t.SAND_TOMB],[32,t.STEALTH_ROCK],[36,t.SLAM],[40,t.SANDSTORM],[44,t.DIG],[48,t.IRON_TAIL],[52,t.STONE_EDGE],[56,t.DOUBLE_EDGE]],[e.DROWZEE]:[[1,t.POUND],[1,t.HYPNOSIS],[5,t.DISABLE],[9,t.CONFUSION],[13,t.HEADBUTT],[17,t.POISON_GAS],[21,t.PSYBEAM],[25,t.PSYCH_UP],[29,t.ZEN_HEADBUTT],[33,t.SWAGGER],[37,t.PSYCHIC],[41,t.NASTY_PLOT],[45,t.PSYSHOCK],[49,t.FUTURE_SIGHT]],[e.HYPNO]:[[1,t.POUND],[1,t.DISABLE],[1,t.CONFUSION],[1,t.HYPNOSIS],[1,t.SWITCHEROO],[1,t.NIGHTMARE],[13,t.HEADBUTT],[17,t.POISON_GAS],[21,t.PSYBEAM],[25,t.PSYCH_UP],[32,t.ZEN_HEADBUTT],[37,t.SWAGGER],[42,t.PSYCHIC],[47,t.NASTY_PLOT],[51,t.PSYSHOCK],[56,t.FUTURE_SIGHT]],[e.KRABBY]:[[1,t.LEER],[1,t.WATER_GUN],[1,t.MUD_SPORT],[4,t.HARDEN],[8,t.METAL_CLAW],[12,t.MUD_SHOT],[16,t.PROTECT],[20,t.BUBBLE_BEAM],[24,t.STOMP],[29,t.FLAIL],[32,t.RAZOR_SHELL],[36,t.SLAM],[40,t.SWORDS_DANCE],[44,t.CRABHAMMER],[48,t.GUILLOTINE]],[e.KINGLER]:[[1,t.LEER],[1,t.WATER_GUN],[1,t.HARDEN],[1,t.METAL_CLAW],[1,t.HAMMER_ARM],[1,t.WIDE_GUARD],[1,t.MUD_SPORT],[12,t.MUD_SHOT],[16,t.PROTECT],[20,t.BUBBLE_BEAM],[24,t.STOMP],[31,t.FLAIL],[36,t.RAZOR_SHELL],[42,t.SLAM],[48,t.SWORDS_DANCE],[54,t.CRABHAMMER],[60,t.GUILLOTINE]],[e.VOLTORB]:[[1,t.TACKLE],[1,t.CHARGE],[4,t.THUNDER_SHOCK],[6,t.EERIE_IMPULSE],[9,t.SPARK],[11,t.ROLLOUT],[13,t.SCREECH],[16,t.CHARGE_BEAM],[20,t.SWIFT],[22,t.ELECTRO_BALL],[26,t.SELF_DESTRUCT],[29,t.LIGHT_SCREEN],[34,t.MAGNET_RISE],[37,t.DISCHARGE],[41,t.EXPLOSION],[46,t.GYRO_BALL],[50,t.MIRROR_COAT]],[e.ELECTRODE]:[[1,t.TACKLE],[1,t.THUNDER_SHOCK],[1,t.CHARGE],[1,t.EERIE_IMPULSE],[1,t.MAGNETIC_FLUX],[9,t.SPARK],[11,t.ROLLOUT],[13,t.SCREECH],[16,t.CHARGE_BEAM],[20,t.SWIFT],[22,t.ELECTRO_BALL],[26,t.SELF_DESTRUCT],[29,t.LIGHT_SCREEN],[36,t.MAGNET_RISE],[41,t.DISCHARGE],[47,t.EXPLOSION],[54,t.GYRO_BALL],[58,t.MIRROR_COAT]],[e.EXEGGCUTE]:[[1,t.ABSORB],[1,t.HYPNOSIS],[1,t.BARRAGE],[5,t.REFLECT],[10,t.LEECH_SEED],[15,t.MEGA_DRAIN],[20,t.CONFUSION],[25,t.SYNTHESIS],[30,t.BULLET_SEED],[35,t.GIGA_DRAIN],[40,t.EXTRASENSORY],[45,t.UPROAR],[50,t.WORRY_SEED],[55,t.SOLAR_BEAM]],[e.EXEGGUTOR]:[[Z,t.STOMP],[w,t.GROWTH],[1,t.BARRAGE],[1,t.SEED_BOMB],[1,t.PSYSHOCK],[1,t.WOOD_HAMMER],[1,t.LEAF_STORM],[1,t.MEGA_DRAIN],[1,t.CONFUSION],[1,t.SYNTHESIS],[1,t.BULLET_SEED],[1,t.GIGA_DRAIN],[1,t.EXTRASENSORY],[1,t.UPROAR],[1,t.WORRY_SEED],[1,t.SOLAR_BEAM],[1,t.ABSORB],[1,t.HYPNOSIS],[1,t.REFLECT],[1,t.LEECH_SEED]],[e.CUBONE]:[[1,t.GROWL],[1,t.MUD_SLAP],[4,t.TAIL_WHIP],[8,t.FALSE_SWIPE],[12,t.HEADBUTT],[16,t.RETALIATE],[20,t.FLING],[24,t.STOMPING_TANTRUM],[29,t.BONE_RUSH],[32,t.FOCUS_ENERGY],[36,t.ENDEAVOR],[40,t.BONEMERANG],[44,t.THRASH],[48,t.DOUBLE_EDGE]],[e.MAROWAK]:[[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.MUD_SLAP],[1,t.FALSE_SWIPE],[1,t.BONE_CLUB],[12,t.HEADBUTT],[16,t.RETALIATE],[20,t.FLING],[24,t.STOMPING_TANTRUM],[31,t.BONE_RUSH],[36,t.FOCUS_ENERGY],[42,t.ENDEAVOR],[48,t.BONEMERANG],[54,t.THRASH],[60,t.DOUBLE_EDGE]],[e.HITMONLEE]:[[Z,t.BRICK_BREAK],[1,t.TACKLE],[1,t.FOCUS_ENERGY],[1,t.FAKE_OUT],[1,t.HELPING_HAND],[1,t.FEINT],[1,t.LOW_SWEEP],[1,t.JUMP_KICK],[1,t.ROLLING_KICK],[1,t.MACH_PUNCH],[1,t.RAPID_SPIN],[4,t.DOUBLE_KICK],[8,t.LOW_KICK],[12,t.ENDURE],[16,t.SUCKER_PUNCH],[21,t.WIDE_GUARD],[24,t.BLAZE_KICK],[28,t.FEINT],[32,t.MEGA_KICK],[36,t.CLOSE_COMBAT],[40,t.REVERSAL],[44,t.HIGH_JUMP_KICK],[50,t.AXE_KICK]],[e.HITMONCHAN]:[[Z,t.DRAIN_PUNCH],[1,t.TACKLE],[1,t.FOCUS_ENERGY],[1,t.FAKE_OUT],[1,t.HELPING_HAND],[1,t.FEINT],[1,t.PURSUIT],[1,t.COMET_PUNCH],[1,t.LOW_SWEEP],[1,t.RAPID_SPIN],[4,t.MACH_PUNCH],[8,t.VACUUM_WAVE],[12,t.DETECT],[16,t.BULLET_PUNCH],[21,t.QUICK_GUARD],[24,t.THUNDER_PUNCH],[24,t.ICE_PUNCH],[24,t.FIRE_PUNCH],[28,t.AGILITY],[32,t.MEGA_PUNCH],[36,t.CLOSE_COMBAT],[40,t.COUNTER],[44,t.FOCUS_PUNCH]],[e.LICKITUNG]:[[1,t.DEFENSE_CURL],[1,t.LICK],[1,t.TACKLE],[6,t.REST],[12,t.SUPERSONIC],[18,t.WRAP],[24,t.DISABLE],[30,t.STOMP],[32,t.ROLLOUT],[36,t.KNOCK_OFF],[42,t.SCREECH],[48,t.SLAM],[54,t.POWER_WHIP],[60,t.BELLY_DRUM]],[e.KOFFING]:[[1,t.TACKLE],[1,t.POISON_GAS],[4,t.SMOG],[8,t.SMOKESCREEN],[12,t.CLEAR_SMOG],[16,t.ASSURANCE],[20,t.SLUDGE],[24,t.HAZE],[28,t.SELF_DESTRUCT],[32,t.SLUDGE_BOMB],[36,t.TOXIC],[40,t.BELCH],[44,t.EXPLOSION],[48,t.MEMENTO],[52,t.DESTINY_BOND]],[e.WEEZING]:[[Z,t.DOUBLE_HIT],[1,t.TACKLE],[1,t.SMOKESCREEN],[1,t.SMOG],[1,t.POISON_GAS],[1,t.HEAT_WAVE],[12,t.CLEAR_SMOG],[16,t.ASSURANCE],[20,t.SLUDGE],[24,t.HAZE],[28,t.SELF_DESTRUCT],[32,t.SLUDGE_BOMB],[38,t.TOXIC],[44,t.BELCH],[50,t.EXPLOSION],[56,t.MEMENTO],[62,t.DESTINY_BOND]],[e.RHYHORN]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[5,t.SMACK_DOWN],[10,t.BULLDOZE],[15,t.HORN_ATTACK],[20,t.SCARY_FACE],[25,t.STOMP],[30,t.ROCK_BLAST],[35,t.DRILL_RUN],[40,t.TAKE_DOWN],[45,t.EARTHQUAKE],[50,t.STONE_EDGE],[55,t.MEGAHORN],[60,t.HORN_DRILL]],[e.RHYDON]:[[Z,t.HAMMER_ARM],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.SMACK_DOWN],[1,t.BULLDOZE],[15,t.HORN_ATTACK],[20,t.SCARY_FACE],[25,t.STOMP],[30,t.ROCK_BLAST],[35,t.DRILL_RUN],[40,t.TAKE_DOWN],[47,t.EARTHQUAKE],[54,t.STONE_EDGE],[61,t.MEGAHORN],[68,t.HORN_DRILL]],[e.CHANSEY]:[[1,t.POUND],[1,t.DEFENSE_CURL],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.COVET],[1,t.COPYCAT],[1,t.DISARMING_VOICE],[4,t.TAIL_WHIP],[8,t.ECHOED_VOICE],[12,t.LIFE_DEW],[16,t.SING],[20,t.FLING],[24,t.TAKE_DOWN],[28,t.HEAL_PULSE],[32,t.HELPING_HAND],[36,t.LIGHT_SCREEN],[40,t.DOUBLE_EDGE],[44,t.SOFT_BOILED],[48,t.LAST_RESORT],[52,t.HEALING_WISH]],[e.TANGELA]:[[1,t.BIND],[1,t.ABSORB],[1,t.CONSTRICT],[4,t.STUN_SPORE],[8,t.GROWTH],[12,t.MEGA_DRAIN],[16,t.VINE_WHIP],[20,t.POISON_POWDER],[24,t.DOUBLE_HIT],[28,t.KNOCK_OFF],[32,t.GIGA_DRAIN],[34,t.ANCIENT_POWER],[36,t.SLEEP_POWDER],[40,t.SLAM],[44,t.TICKLE],[48,t.POWER_WHIP],[52,t.INGRAIN],[56,t.GRASSY_TERRAIN]],[e.KANGASKHAN]:[[1,t.POUND],[1,t.TAIL_WHIP],[1,t.COMET_PUNCH],[4,t.GROWL],[8,t.FAKE_OUT],[12,t.BITE],[16,t.STOMP],[20,t.FOCUS_ENERGY],[24,t.HEADBUTT],[28,t.SUCKER_PUNCH],[32,t.DOUBLE_HIT],[36,t.CRUNCH],[40,t.ENDURE],[44,t.REVERSAL],[48,t.OUTRAGE],[52,t.LAST_RESORT]],[e.HORSEA]:[[1,t.LEER],[1,t.WATER_GUN],[5,t.SMOKESCREEN],[10,t.TWISTER],[15,t.FOCUS_ENERGY],[20,t.DRAGON_BREATH],[25,t.BUBBLE_BEAM],[30,t.AGILITY],[35,t.LASER_FOCUS],[40,t.DRAGON_PULSE],[45,t.HYDRO_PUMP],[50,t.DRAGON_DANCE],[55,t.RAIN_DANCE]],[e.SEADRA]:[[1,t.LEER],[1,t.WATER_GUN],[1,t.SMOKESCREEN],[1,t.TWISTER],[15,t.FOCUS_ENERGY],[20,t.DRAGON_BREATH],[25,t.BUBBLE_BEAM],[30,t.AGILITY],[37,t.LASER_FOCUS],[44,t.DRAGON_PULSE],[51,t.HYDRO_PUMP],[58,t.DRAGON_DANCE],[65,t.RAIN_DANCE]],[e.GOLDEEN]:[[1,t.TAIL_WHIP],[1,t.PECK],[1,t.WATER_SPORT],[5,t.SUPERSONIC],[10,t.WATER_PULSE],[15,t.HORN_ATTACK],[20,t.AGILITY],[25,t.AQUA_RING],[30,t.FLAIL],[35,t.WATERFALL],[40,t.SOAK],[45,t.MEGAHORN],[50,t.HORN_DRILL]],[e.SEAKING]:[[1,t.TAIL_WHIP],[1,t.SUPERSONIC],[1,t.WATER_SPORT],[1,t.PECK],[1,t.WATER_PULSE],[15,t.HORN_ATTACK],[20,t.AGILITY],[25,t.AQUA_RING],[30,t.FLAIL],[37,t.WATERFALL],[44,t.SOAK],[51,t.MEGAHORN],[58,t.HORN_DRILL]],[e.STARYU]:[[1,t.TACKLE],[1,t.HARDEN],[4,t.WATER_GUN],[8,t.CONFUSE_RAY],[12,t.RAPID_SPIN],[16,t.MINIMIZE],[20,t.SWIFT],[24,t.PSYBEAM],[28,t.BRINE],[32,t.LIGHT_SCREEN],[36,t.POWER_GEM],[40,t.PSYCHIC],[44,t.SURF],[48,t.RECOVER],[52,t.COSMIC_POWER],[56,t.HYDRO_PUMP]],[e.STARMIE]:[[1,t.TACKLE],[1,t.WATER_GUN],[1,t.HYDRO_PUMP],[1,t.SURF],[1,t.PSYBEAM],[1,t.PSYCHIC],[1,t.RECOVER],[1,t.HARDEN],[1,t.MINIMIZE],[1,t.CONFUSE_RAY],[1,t.LIGHT_SCREEN],[1,t.SWIFT],[1,t.SPOTLIGHT],[1,t.RAPID_SPIN],[1,t.COSMIC_POWER],[1,t.BRINE],[1,t.POWER_GEM]],[e.MR_MIME]:[[1,t.POUND],[1,t.TICKLE],[1,t.BATON_PASS],[1,t.ENCORE],[1,t.COPYCAT],[1,t.POWER_SWAP],[1,t.GUARD_SWAP],[1,t.WIDE_GUARD],[1,t.QUICK_GUARD],[1,t.BARRIER],[12,t.CONFUSION],[16,t.ROLE_PLAY],[20,t.PROTECT],[24,t.RECYCLE],[28,t.PSYBEAM],[32,t.MIMIC],[36,t.LIGHT_SCREEN],[36,t.REFLECT],[36,t.SAFEGUARD],[40,t.SUCKER_PUNCH],[44,t.DAZZLING_GLEAM],[48,t.PSYCHIC],[52,t.TEETER_DANCE]],[e.SCYTHER]:[[1,t.LEER],[1,t.QUICK_ATTACK],[4,t.FURY_CUTTER],[8,t.FALSE_SWIPE],[12,t.WING_ATTACK],[16,t.DOUBLE_TEAM],[20,t.DOUBLE_HIT],[24,t.SLASH],[28,t.FOCUS_ENERGY],[30,t.STEEL_WING],[32,t.AGILITY],[36,t.AIR_SLASH],[40,t.X_SCISSOR],[44,t.SWORDS_DANCE]],[e.JYNX]:[[1,t.POUND],[1,t.LICK],[1,t.POWDER_SNOW],[1,t.SWEET_KISS],[1,t.COPYCAT],[12,t.CONFUSION],[16,t.COVET],[20,t.SING],[24,t.FAKE_TEARS],[28,t.ICE_PUNCH],[34,t.PSYCHIC],[40,t.LOVELY_KISS],[46,t.MEAN_LOOK],[52,t.PERISH_SONG],[58,t.BLIZZARD]],[e.ELECTABUZZ]:[[1,t.LEER],[1,t.THUNDER_SHOCK],[1,t.QUICK_ATTACK],[1,t.CHARGE],[12,t.SWIFT],[16,t.SHOCK_WAVE],[20,t.THUNDER_WAVE],[24,t.SCREECH],[28,t.THUNDER_PUNCH],[34,t.DISCHARGE],[40,t.LOW_KICK],[46,t.THUNDERBOLT],[52,t.LIGHT_SCREEN],[58,t.THUNDER],[64,t.GIGA_IMPACT]],[e.MAGMAR]:[[1,t.LEER],[1,t.EMBER],[1,t.SMOKESCREEN],[1,t.SMOG],[12,t.CLEAR_SMOG],[16,t.FLAME_WHEEL],[20,t.CONFUSE_RAY],[24,t.SCARY_FACE],[28,t.FIRE_PUNCH],[34,t.LAVA_PLUME],[40,t.LOW_KICK],[46,t.FLAMETHROWER],[52,t.SUNNY_DAY],[58,t.FIRE_BLAST],[64,t.HYPER_BEAM]],[e.PINSIR]:[[1,t.VISE_GRIP],[1,t.HARDEN],[4,t.FOCUS_ENERGY],[8,t.BIND],[12,t.SEISMIC_TOSS],[16,t.BUG_BITE],[20,t.STORM_THROW],[24,t.DOUBLE_HIT],[28,t.VITAL_THROW],[32,t.X_SCISSOR],[36,t.STRENGTH],[40,t.SWORDS_DANCE],[44,t.SUBMISSION],[48,t.GUILLOTINE],[52,t.SUPERPOWER]],[e.TAUROS]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[5,t.WORK_UP],[10,t.PAYBACK],[15,t.ASSURANCE],[20,t.HORN_ATTACK],[25,t.SCARY_FACE],[30,t.ZEN_HEADBUTT],[35,t.RAGING_BULL],[40,t.REST],[45,t.SWAGGER],[50,t.THRASH],[55,t.DOUBLE_EDGE],[60,t.GIGA_IMPACT]],[e.MAGIKARP]:[[1,t.SPLASH],[15,t.TACKLE],[25,t.FLAIL]],[e.GYARADOS]:[[Z,t.BITE],[1,t.TACKLE],[1,t.LEER],[1,t.SPLASH],[1,t.FLAIL],[1,t.TWISTER],[4,t.WHIRLPOOL],[8,t.ICE_FANG],[12,t.BRINE],[16,t.SCARY_FACE],[21,t.WATERFALL],[24,t.CRUNCH],[28,t.RAIN_DANCE],[32,t.AQUA_TAIL],[36,t.DRAGON_DANCE],[40,t.HYDRO_PUMP],[44,t.HURRICANE],[48,t.THRASH],[52,t.HYPER_BEAM]],[e.LAPRAS]:[[1,t.GROWL],[1,t.WATER_GUN],[5,t.SING],[10,t.MIST],[15,t.LIFE_DEW],[20,t.ICE_SHARD],[25,t.CONFUSE_RAY],[30,t.WATER_PULSE],[35,t.BRINE],[40,t.BODY_SLAM],[45,t.ICE_BEAM],[50,t.RAIN_DANCE],[55,t.HYDRO_PUMP],[60,t.PERISH_SONG],[65,t.SHEER_COLD]],[e.DITTO]:[[1,t.TRANSFORM]],[e.EEVEE]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.HELPING_HAND],[1,t.COVET],[5,t.SAND_ATTACK],[10,t.QUICK_ATTACK],[15,t.BABY_DOLL_EYES],[20,t.SWIFT],[25,t.BITE],[30,t.COPYCAT],[35,t.BATON_PASS],[40,t.TAKE_DOWN],[45,t.CHARM],[50,t.DOUBLE_EDGE],[55,t.LAST_RESORT],[60,t.VEEVEE_VOLLEY]],[e.VAPOREON]:[[Z,t.BOUNCY_BUBBLE],[w,t.VEEVEE_VOLLEY],[1,t.TACKLE],[1,t.TAKE_DOWN],[1,t.DOUBLE_EDGE],[1,t.TAIL_WHIP],[1,t.BITE],[1,t.GROWL],[1,t.SWIFT],[1,t.CHARM],[1,t.BATON_PASS],[1,t.HELPING_HAND],[1,t.COVET],[1,t.COPYCAT],[5,t.SAND_ATTACK],[10,t.WATER_GUN],[15,t.QUICK_ATTACK],[20,t.BABY_DOLL_EYES],[25,t.HAZE],[30,t.WATER_PULSE],[35,t.AURORA_BEAM],[40,t.AQUA_RING],[45,t.MUDDY_WATER],[50,t.ACID_ARMOR],[55,t.HYDRO_PUMP],[60,t.LAST_RESORT]],[e.JOLTEON]:[[Z,t.BUZZY_BUZZ],[w,t.VEEVEE_VOLLEY],[1,t.TACKLE],[1,t.TAKE_DOWN],[1,t.DOUBLE_EDGE],[1,t.TAIL_WHIP],[1,t.BITE],[1,t.GROWL],[1,t.SWIFT],[1,t.CHARM],[1,t.BATON_PASS],[1,t.HELPING_HAND],[1,t.COVET],[1,t.COPYCAT],[5,t.SAND_ATTACK],[10,t.THUNDER_SHOCK],[15,t.QUICK_ATTACK],[20,t.BABY_DOLL_EYES],[25,t.THUNDER_WAVE],[30,t.DOUBLE_KICK],[35,t.THUNDER_FANG],[40,t.PIN_MISSILE],[45,t.DISCHARGE],[50,t.AGILITY],[55,t.THUNDER],[60,t.LAST_RESORT]],[e.FLAREON]:[[Z,t.SIZZLY_SLIDE],[w,t.VEEVEE_VOLLEY],[1,t.TACKLE],[1,t.TAKE_DOWN],[1,t.DOUBLE_EDGE],[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.SWIFT],[1,t.CHARM],[1,t.BATON_PASS],[1,t.HELPING_HAND],[1,t.COVET],[1,t.COPYCAT],[5,t.SAND_ATTACK],[10,t.EMBER],[15,t.QUICK_ATTACK],[20,t.BABY_DOLL_EYES],[25,t.SMOG],[30,t.BITE],[35,t.FIRE_FANG],[40,t.FIRE_SPIN],[45,t.LAVA_PLUME],[50,t.SCARY_FACE],[55,t.FLARE_BLITZ],[60,t.LAST_RESORT]],[e.PORYGON]:[[1,t.TACKLE],[1,t.CONVERSION],[5,t.RECYCLE],[10,t.MAGNET_RISE],[15,t.THUNDER_SHOCK],[20,t.PSYBEAM],[25,t.CONVERSION_2],[30,t.AGILITY],[35,t.RECOVER],[40,t.DISCHARGE],[45,t.TRI_ATTACK],[50,t.MAGIC_COAT],[55,t.LOCK_ON],[60,t.ZAP_CANNON]],[e.OMANYTE]:[[1,t.BIND],[1,t.WITHDRAW],[1,t.CONSTRICT],[5,t.ROLLOUT],[10,t.SAND_ATTACK],[15,t.WATER_GUN],[20,t.LEER],[25,t.MUD_SHOT],[30,t.ANCIENT_POWER],[35,t.BRINE],[41,t.PROTECT],[45,t.ROCK_BLAST],[50,t.SURF],[55,t.SHELL_SMASH],[60,t.HYDRO_PUMP]],[e.OMASTAR]:[[Z,t.CRUNCH],[1,t.BIND],[1,t.SAND_ATTACK],[1,t.CONSTRICT],[1,t.SPIKE_CANNON],[1,t.WITHDRAW],[1,t.ROLLOUT],[15,t.WATER_GUN],[20,t.LEER],[25,t.MUD_SHOT],[30,t.ANCIENT_POWER],[35,t.BRINE],[43,t.PROTECT],[49,t.ROCK_BLAST],[56,t.SURF],[63,t.SHELL_SMASH],[70,t.HYDRO_PUMP]],[e.KABUTO]:[[1,t.ABSORB],[1,t.HARDEN],[5,t.SCRATCH],[10,t.SAND_ATTACK],[15,t.AQUA_JET],[20,t.LEER],[25,t.MUD_SHOT],[30,t.ANCIENT_POWER],[35,t.BRINE],[41,t.PROTECT],[45,t.LEECH_LIFE],[50,t.LIQUIDATION],[55,t.METAL_SOUND],[60,t.STONE_EDGE]],[e.KABUTOPS]:[[Z,t.SLASH],[1,t.SCRATCH],[1,t.SAND_ATTACK],[1,t.ABSORB],[1,t.HARDEN],[1,t.FEINT],[1,t.NIGHT_SLASH],[15,t.AQUA_JET],[20,t.LEER],[25,t.MUD_SHOT],[30,t.ANCIENT_POWER],[35,t.BRINE],[43,t.PROTECT],[49,t.LEECH_LIFE],[56,t.LIQUIDATION],[63,t.METAL_SOUND],[70,t.STONE_EDGE]],[e.AERODACTYL]:[[1,t.BITE],[1,t.ANCIENT_POWER],[5,t.SUPERSONIC],[10,t.WING_ATTACK],[15,t.SCARY_FACE],[20,t.ROCK_SLIDE],[25,t.ROAR],[30,t.CRUNCH],[35,t.IRON_HEAD],[40,t.TAKE_DOWN],[45,t.STONE_EDGE],[50,t.AGILITY],[55,t.HYPER_BEAM],[60,t.GIGA_IMPACT]],[e.SNORLAX]:[[1,t.TACKLE],[1,t.SCREECH],[1,t.ODOR_SLEUTH],[1,t.DEFENSE_CURL],[1,t.METRONOME],[1,t.LICK],[1,t.FLAIL],[1,t.STOCKPILE],[1,t.SWALLOW],[1,t.RECYCLE],[1,t.BLOCK],[1,t.COVET],[1,t.FLING],[1,t.LAST_RESORT],[12,t.YAWN],[16,t.BITE],[20,t.REST],[20,t.SNORE],[20,t.SLEEP_TALK],[24,t.CRUNCH],[28,t.BODY_SLAM],[32,t.HEAVY_SLAM],[36,t.AMNESIA],[40,t.HIGH_HORSEPOWER],[44,t.HAMMER_ARM],[48,t.BELLY_DRUM],[52,t.BELCH],[56,t.GIGA_IMPACT]],[e.ARTICUNO]:[[1,t.GUST],[1,t.MIST],[5,t.POWDER_SNOW],[10,t.REFLECT],[15,t.ICE_SHARD],[20,t.AGILITY],[25,t.ANCIENT_POWER],[30,t.TAILWIND],[35,t.FREEZE_DRY],[40,t.ROOST],[45,t.ICE_BEAM],[50,t.SNOWSCAPE],[55,t.HURRICANE],[60,t.HAZE],[65,t.BLIZZARD],[70,t.SHEER_COLD]],[e.ZAPDOS]:[[1,t.PECK],[1,t.THUNDER_WAVE],[5,t.THUNDER_SHOCK],[10,t.LIGHT_SCREEN],[15,t.PLUCK],[20,t.AGILITY],[25,t.ANCIENT_POWER],[30,t.CHARGE],[35,t.DRILL_PECK],[40,t.ROOST],[45,t.DISCHARGE],[50,t.RAIN_DANCE],[55,t.THUNDER],[60,t.DETECT],[65,t.MAGNETIC_FLUX],[70,t.ZAP_CANNON]],[e.MOLTRES]:[[1,t.GUST],[1,t.LEER],[5,t.EMBER],[10,t.SAFEGUARD],[15,t.WING_ATTACK],[20,t.AGILITY],[25,t.ANCIENT_POWER],[30,t.INCINERATE],[35,t.AIR_SLASH],[40,t.ROOST],[45,t.HEAT_WAVE],[50,t.SUNNY_DAY],[55,t.HURRICANE],[60,t.ENDURE],[65,t.OVERHEAT],[70,t.SKY_ATTACK]],[e.DRATINI]:[[1,t.WRAP],[1,t.LEER],[5,t.TWISTER],[10,t.THUNDER_WAVE],[15,t.DRAGON_TAIL],[20,t.AGILITY],[25,t.SLAM],[31,t.AQUA_TAIL],[35,t.DRAGON_RUSH],[40,t.SAFEGUARD],[45,t.RAIN_DANCE],[50,t.DRAGON_DANCE],[55,t.OUTRAGE],[60,t.HYPER_BEAM]],[e.DRAGONAIR]:[[1,t.WRAP],[1,t.LEER],[1,t.THUNDER_WAVE],[1,t.TWISTER],[15,t.DRAGON_TAIL],[20,t.AGILITY],[25,t.SLAM],[33,t.AQUA_TAIL],[39,t.DRAGON_RUSH],[46,t.SAFEGUARD],[53,t.RAIN_DANCE],[60,t.DRAGON_DANCE],[67,t.OUTRAGE],[74,t.HYPER_BEAM]],[e.DRAGONITE]:[[Z,t.HURRICANE],[1,t.FIRE_PUNCH],[1,t.THUNDER_PUNCH],[1,t.WING_ATTACK],[1,t.WRAP],[1,t.LEER],[1,t.THUNDER_WAVE],[1,t.TWISTER],[1,t.EXTREME_SPEED],[1,t.ROOST],[15,t.DRAGON_TAIL],[20,t.AGILITY],[25,t.SLAM],[33,t.AQUA_TAIL],[39,t.DRAGON_RUSH],[41,t.OUTRAGE],[46,t.SAFEGUARD],[53,t.RAIN_DANCE],[62,t.DRAGON_DANCE],[80,t.HYPER_BEAM]],[e.MEWTWO]:[[1,t.DISABLE],[1,t.CONFUSION],[1,t.SWIFT],[1,t.LIFE_DEW],[8,t.ANCIENT_POWER],[16,t.PSYCHO_CUT],[24,t.SAFEGUARD],[32,t.AMNESIA],[40,t.AURA_SPHERE],[48,t.PSYCHIC],[56,t.POWER_SWAP],[56,t.GUARD_SWAP],[64,t.MIST],[72,t.PSYSTRIKE],[80,t.RECOVER],[88,t.FUTURE_SIGHT]],[e.MEW]:[[1,t.POUND],[1,t.REFLECT_TYPE],[10,t.AMNESIA],[20,t.BATON_PASS],[30,t.ANCIENT_POWER],[40,t.LIFE_DEW],[50,t.NASTY_PLOT],[60,t.METRONOME],[70,t.IMPRISON],[80,t.TRANSFORM],[90,t.AURA_SPHERE],[100,t.PSYCHIC]],[e.CHIKORITA]:[[1,t.TACKLE],[1,t.GROWL],[5,t.RAZOR_LEAF],[9,t.POISON_POWDER],[12,t.SYNTHESIS],[17,t.REFLECT],[20,t.MAGICAL_LEAF],[23,t.LEECH_SEED],[28,t.SWEET_SCENT],[31,t.LIGHT_SCREEN],[34,t.BODY_SLAM],[39,t.SAFEGUARD],[42,t.GIGA_DRAIN],[45,t.SOLAR_BEAM]],[e.BAYLEEF]:[[1,t.TACKLE],[1,t.GROWL],[1,t.RAZOR_LEAF],[1,t.POISON_POWDER],[12,t.SYNTHESIS],[18,t.REFLECT],[22,t.MAGICAL_LEAF],[26,t.LEECH_SEED],[32,t.SWEET_SCENT],[36,t.LIGHT_SCREEN],[40,t.BODY_SLAM],[46,t.SAFEGUARD],[50,t.GIGA_DRAIN],[54,t.SOLAR_BEAM]],[e.MEGANIUM]:[[Z,t.PETAL_DANCE],[1,t.TACKLE],[1,t.GROWL],[1,t.RAZOR_LEAF],[1,t.POISON_POWDER],[1,t.PETAL_BLIZZARD],[12,t.SYNTHESIS],[18,t.REFLECT],[22,t.MAGICAL_LEAF],[26,t.LEECH_SEED],[34,t.SWEET_SCENT],[40,t.LIGHT_SCREEN],[46,t.BODY_SLAM],[54,t.SAFEGUARD],[60,t.GIGA_DRAIN],[65,t.SOLAR_BEAM]],[e.CYNDAQUIL]:[[1,t.TACKLE],[1,t.LEER],[5,t.EMBER],[10,t.SMOKESCREEN],[13,t.QUICK_ATTACK],[19,t.FLAME_WHEEL],[22,t.DEFENSE_CURL],[28,t.FLAME_CHARGE],[31,t.SWIFT],[37,t.LAVA_PLUME],[40,t.FLAMETHROWER],[46,t.INFERNO],[49,t.ROLLOUT],[55,t.DOUBLE_EDGE],[58,t.OVERHEAT],[64,t.ERUPTION]],[e.QUILAVA]:[[1,t.TACKLE],[1,t.LEER],[1,t.SMOKESCREEN],[10,t.EMBER],[13,t.QUICK_ATTACK],[20,t.FLAME_WHEEL],[24,t.DEFENSE_CURL],[31,t.SWIFT],[35,t.FLAME_CHARGE],[42,t.LAVA_PLUME],[46,t.FLAMETHROWER],[53,t.INFERNO],[57,t.ROLLOUT],[64,t.DOUBLE_EDGE],[68,t.OVERHEAT],[75,t.ERUPTION]],[e.TYPHLOSION]:[[1,t.TACKLE],[1,t.DOUBLE_EDGE],[1,t.LEER],[1,t.EMBER],[1,t.SMOKESCREEN],[1,t.ERUPTION],[1,t.GYRO_BALL],[13,t.QUICK_ATTACK],[20,t.FLAME_WHEEL],[24,t.DEFENSE_CURL],[31,t.SWIFT],[35,t.FLAME_CHARGE],[43,t.LAVA_PLUME],[48,t.FLAMETHROWER],[56,t.INFERNO],[61,t.ROLLOUT],[74,t.OVERHEAT]],[e.TOTODILE]:[[1,t.SCRATCH],[1,t.LEER],[5,t.WATER_GUN],[9,t.BITE],[13,t.SCARY_FACE],[19,t.ICE_FANG],[22,t.FLAIL],[27,t.CRUNCH],[30,t.SLASH],[33,t.SCREECH],[37,t.THRASH],[41,t.AQUA_TAIL],[45,t.SUPERPOWER],[50,t.HYDRO_PUMP]],[e.CROCONAW]:[[1,t.SCRATCH],[1,t.LEER],[1,t.WATER_GUN],[13,t.BITE],[15,t.SCARY_FACE],[21,t.ICE_FANG],[24,t.FLAIL],[30,t.CRUNCH],[34,t.SLASH],[37,t.SCREECH],[42,t.THRASH],[47,t.AQUA_TAIL],[50,t.SUPERPOWER],[55,t.HYDRO_PUMP]],[e.FERALIGATR]:[[1,t.AGILITY],[1,t.SCRATCH],[1,t.LEER],[1,t.WATER_GUN],[13,t.BITE],[15,t.SCARY_FACE],[21,t.ICE_FANG],[24,t.FLAIL],[32,t.CRUNCH],[37,t.SLASH],[44,t.SCREECH],[51,t.THRASH],[59,t.AQUA_TAIL],[65,t.SUPERPOWER],[70,t.HYDRO_PUMP]],[e.SENTRET]:[[1,t.SCRATCH],[4,t.DEFENSE_CURL],[7,t.QUICK_ATTACK],[13,t.FURY_SWIPES],[16,t.HELPING_HAND],[19,t.FOLLOW_ME],[25,t.SLAM],[28,t.REST],[31,t.SUCKER_PUNCH],[36,t.AMNESIA],[39,t.BATON_PASS],[42,t.DOUBLE_EDGE],[47,t.HYPER_VOICE]],[e.FURRET]:[[Z,t.AGILITY],[1,t.SCRATCH],[1,t.QUICK_ATTACK],[1,t.DEFENSE_CURL],[1,t.COIL],[13,t.FURY_SWIPES],[17,t.HELPING_HAND],[21,t.FOLLOW_ME],[28,t.SLAM],[32,t.REST],[36,t.SUCKER_PUNCH],[42,t.AMNESIA],[46,t.BATON_PASS],[50,t.DOUBLE_EDGE],[56,t.HYPER_VOICE]],[e.HOOTHOOT]:[[1,t.GROWL],[1,t.PECK],[3,t.TACKLE],[6,t.ECHOED_VOICE],[9,t.CONFUSION],[12,t.REFLECT],[15,t.DEFOG],[18,t.AIR_SLASH],[21,t.EXTRASENSORY],[24,t.TAKE_DOWN],[27,t.UPROAR],[30,t.ROOST],[33,t.MOONBLAST],[36,t.HYPNOSIS],[39,t.DREAM_EATER]],[e.NOCTOWL]:[[1,t.TACKLE],[1,t.GROWL],[1,t.PECK],[1,t.SKY_ATTACK],[1,t.ECHOED_VOICE],[9,t.CONFUSION],[12,t.REFLECT],[15,t.DEFOG],[18,t.AIR_SLASH],[23,t.EXTRASENSORY],[28,t.TAKE_DOWN],[33,t.UPROAR],[38,t.ROOST],[43,t.MOONBLAST],[48,t.HYPNOSIS],[53,t.DREAM_EATER]],[e.LEDYBA]:[[1,t.TACKLE],[5,t.SUPERSONIC],[8,t.SWIFT],[12,t.LIGHT_SCREEN],[12,t.REFLECT],[12,t.SAFEGUARD],[15,t.MACH_PUNCH],[19,t.ROOST],[22,t.STRUGGLE_BUG],[26,t.BATON_PASS],[29,t.AGILITY],[33,t.BUG_BUZZ],[36,t.AIR_SLASH],[40,t.DOUBLE_EDGE]],[e.LEDIAN]:[[1,t.TACKLE],[1,t.SUPERSONIC],[1,t.SWIFT],[5,t.SUPERSONIC],[12,t.LIGHT_SCREEN],[12,t.REFLECT],[12,t.SAFEGUARD],[15,t.MACH_PUNCH],[20,t.ROOST],[24,t.STRUGGLE_BUG],[29,t.BATON_PASS],[33,t.AGILITY],[38,t.BUG_BUZZ],[42,t.AIR_SLASH],[47,t.DOUBLE_EDGE]],[e.SPINARAK]:[[1,t.POISON_STING],[1,t.STRING_SHOT],[1,t.CONSTRICT],[5,t.ABSORB],[8,t.INFESTATION],[12,t.SCARY_FACE],[15,t.NIGHT_SHADE],[19,t.SHADOW_SNEAK],[22,t.FURY_SWIPES],[26,t.SUCKER_PUNCH],[29,t.AGILITY],[33,t.PIN_MISSILE],[36,t.PSYCHIC],[40,t.POISON_JAB],[44,t.CROSS_POISON],[47,t.STICKY_WEB],[51,t.TOXIC_THREAD]],[e.ARIADOS]:[[Z,t.SWORDS_DANCE],[1,t.POISON_STING],[1,t.ABSORB],[1,t.STRING_SHOT],[1,t.CONSTRICT],[1,t.FOCUS_ENERGY],[1,t.BUG_BITE],[1,t.FELL_STINGER],[8,t.INFESTATION],[12,t.SCARY_FACE],[15,t.NIGHT_SHADE],[19,t.SHADOW_SNEAK],[23,t.FURY_SWIPES],[28,t.SUCKER_PUNCH],[31,t.AGILITY],[35,t.PIN_MISSILE],[41,t.PSYCHIC],[46,t.POISON_JAB],[50,t.CROSS_POISON],[54,t.STICKY_WEB],[59,t.TOXIC_THREAD]],[e.CROBAT]:[[Z,t.CROSS_POISON],[1,t.SUPERSONIC],[1,t.ABSORB],[1,t.TOXIC],[1,t.SCREECH],[1,t.MEAN_LOOK],[1,t.ASTONISH],[1,t.TAILWIND],[15,t.POISON_FANG],[20,t.QUICK_GUARD],[27,t.AIR_CUTTER],[34,t.BITE],[41,t.HAZE],[48,t.VENOSHOCK],[55,t.CONFUSE_RAY],[62,t.AIR_SLASH],[69,t.LEECH_LIFE]],[e.CHINCHOU]:[[1,t.SUPERSONIC],[1,t.WATER_GUN],[4,t.ELECTRO_BALL],[8,t.THUNDER_WAVE],[12,t.BUBBLE_BEAM],[16,t.CONFUSE_RAY],[20,t.SPARK],[24,t.CHARGE],[28,t.DISCHARGE],[32,t.AQUA_RING],[36,t.FLAIL],[40,t.TAKE_DOWN],[44,t.HYDRO_PUMP]],[e.LANTURN]:[[Z,t.STOCKPILE],[Z,t.SPIT_UP],[Z,t.SWALLOW],[1,t.SUPERSONIC],[1,t.WATER_GUN],[1,t.SPOTLIGHT],[1,t.THUNDER_WAVE],[1,t.ELECTRO_BALL],[1,t.EERIE_IMPULSE],[12,t.BUBBLE_BEAM],[16,t.CONFUSE_RAY],[20,t.SPARK],[24,t.CHARGE],[30,t.DISCHARGE],[36,t.AQUA_RING],[42,t.FLAIL],[48,t.TAKE_DOWN],[54,t.HYDRO_PUMP]],[e.PICHU]:[[1,t.TAIL_WHIP],[1,t.THUNDER_SHOCK],[4,t.PLAY_NICE],[8,t.SWEET_KISS],[12,t.NUZZLE],[16,t.NASTY_PLOT],[20,t.CHARM]],[e.CLEFFA]:[[1,t.POUND],[1,t.SPLASH],[1,t.COPYCAT],[4,t.SING],[8,t.SWEET_KISS],[12,t.DISARMING_VOICE],[16,t.ENCORE],[20,t.CHARM]],[e.IGGLYBUFF]:[[1,t.POUND],[1,t.SING],[1,t.COPYCAT],[4,t.DEFENSE_CURL],[8,t.SWEET_KISS],[12,t.DISARMING_VOICE],[16,t.DISABLE],[20,t.CHARM]],[e.TOGEPI]:[[1,t.POUND],[1,t.GROWL],[4,t.SWEET_KISS],[8,t.LIFE_DEW],[12,t.CHARM],[16,t.ANCIENT_POWER],[20,t.YAWN],[24,t.METRONOME],[28,t.AFTER_YOU],[32,t.DOUBLE_EDGE],[36,t.SAFEGUARD],[40,t.FOLLOW_ME],[44,t.BATON_PASS],[48,t.LAST_RESORT],[52,t.WISH]],[e.TOGETIC]:[[Z,t.FAIRY_WIND],[1,t.POUND],[1,t.GROWL],[1,t.SWEET_KISS],[1,t.LIFE_DEW],[12,t.CHARM],[16,t.ANCIENT_POWER],[20,t.YAWN],[24,t.METRONOME],[28,t.AFTER_YOU],[32,t.DOUBLE_EDGE],[36,t.SAFEGUARD],[40,t.FOLLOW_ME],[44,t.BATON_PASS],[48,t.LAST_RESORT],[52,t.WISH]],[e.NATU]:[[1,t.LEER],[1,t.PECK],[5,t.STORED_POWER],[10,t.TELEPORT],[15,t.CONFUSE_RAY],[20,t.NIGHT_SHADE],[26,t.PSYCHO_SHIFT],[30,t.POWER_SWAP],[35,t.PSYCHIC],[35,t.GUARD_SWAP],[40,t.WISH],[45,t.FUTURE_SIGHT]],[e.XATU]:[[Z,t.AIR_SLASH],[1,t.LEER],[1,t.PECK],[1,t.TELEPORT],[1,t.TAILWIND],[1,t.STORED_POWER],[15,t.CONFUSE_RAY],[20,t.NIGHT_SHADE],[28,t.PSYCHO_SHIFT],[34,t.POWER_SWAP],[34,t.GUARD_SWAP],[41,t.PSYCHIC],[48,t.WISH],[55,t.FUTURE_SIGHT]],[e.MAREEP]:[[1,t.TACKLE],[1,t.GROWL],[4,t.THUNDER_WAVE],[8,t.THUNDER_SHOCK],[11,t.COTTON_SPORE],[15,t.CHARGE],[18,t.TAKE_DOWN],[22,t.ELECTRO_BALL],[25,t.CONFUSE_RAY],[29,t.POWER_GEM],[32,t.DISCHARGE],[36,t.COTTON_GUARD],[39,t.DAZZLING_GLEAM],[43,t.LIGHT_SCREEN],[46,t.THUNDER]],[e.FLAAFFY]:[[1,t.TACKLE],[1,t.GROWL],[6,t.THUNDER_SHOCK],[9,t.THUNDER_WAVE],[11,t.COTTON_SPORE],[16,t.CHARGE],[20,t.TAKE_DOWN],[25,t.ELECTRO_BALL],[29,t.CONFUSE_RAY],[34,t.POWER_GEM],[38,t.DISCHARGE],[43,t.COTTON_GUARD],[47,t.DAZZLING_GLEAM],[52,t.LIGHT_SCREEN],[56,t.THUNDER]],[e.AMPHAROS]:[[Z,t.THUNDER_PUNCH],[1,t.FIRE_PUNCH],[1,t.TACKLE],[1,t.GROWL],[1,t.THUNDER_SHOCK],[1,t.THUNDER_WAVE],[1,t.ZAP_CANNON],[1,t.DRAGON_PULSE],[1,t.MAGNETIC_FLUX],[1,t.ION_DELUGE],[11,t.COTTON_SPORE],[16,t.CHARGE],[20,t.TAKE_DOWN],[25,t.ELECTRO_BALL],[29,t.CONFUSE_RAY],[35,t.POWER_GEM],[40,t.DISCHARGE],[46,t.COTTON_GUARD],[51,t.DAZZLING_GLEAM],[57,t.LIGHT_SCREEN],[62,t.THUNDER]],[e.BELLOSSOM]:[[Z,t.PETAL_BLIZZARD],[1,t.ACID],[1,t.ABSORB],[1,t.MEGA_DRAIN],[1,t.GROWTH],[1,t.POISON_POWDER],[1,t.STUN_SPORE],[1,t.SLEEP_POWDER],[1,t.PETAL_DANCE],[1,t.TOXIC],[1,t.GIGA_DRAIN],[1,t.SWEET_SCENT],[1,t.MOONLIGHT],[1,t.QUIVER_DANCE],[1,t.GRASSY_TERRAIN],[1,t.MOONBLAST]],[e.MARILL]:[[1,t.SPLASH],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.WATER_GUN],[1,t.DEFENSE_CURL],[1,t.ROLLOUT],[1,t.HELPING_HAND],[6,t.BUBBLE_BEAM],[9,t.CHARM],[12,t.SLAM],[15,t.BOUNCE],[19,t.AQUA_TAIL],[21,t.PLAY_ROUGH],[24,t.AQUA_RING],[27,t.RAIN_DANCE],[30,t.HYDRO_PUMP],[33,t.DOUBLE_EDGE],[36,t.SUPERPOWER]],[e.AZUMARILL]:[[1,t.SPLASH],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.WATER_GUN],[1,t.DEFENSE_CURL],[1,t.ROLLOUT],[1,t.HELPING_HAND],[6,t.BUBBLE_BEAM],[9,t.CHARM],[12,t.SLAM],[15,t.BOUNCE],[21,t.AQUA_TAIL],[25,t.PLAY_ROUGH],[30,t.AQUA_RING],[35,t.RAIN_DANCE],[40,t.HYDRO_PUMP],[45,t.DOUBLE_EDGE],[50,t.SUPERPOWER]],[e.SUDOWOODO]:[[Z,t.SLAM],[1,t.ROCK_THROW],[1,t.TACKLE],[1,t.FLAIL],[1,t.FAKE_TEARS],[1,t.HAMMER_ARM],[1,t.COPYCAT],[1,t.STONE_EDGE],[1,t.WOOD_HAMMER],[12,t.BLOCK],[16,t.MIMIC],[20,t.ROCK_TOMB],[24,t.TEARFUL_LOOK],[28,t.SUCKER_PUNCH],[32,t.ROCK_SLIDE],[36,t.LOW_KICK],[40,t.COUNTER],[44,t.DOUBLE_EDGE],[48,t.HEAD_SMASH]],[e.POLITOED]:[[Z,t.BOUNCE],[w,t.BODY_SLAM],[w,t.DOUBLE_EDGE],[w,t.WATER_GUN],[w,t.BUBBLE_BEAM],[w,t.HYPNOSIS],[w,t.PERISH_SONG],[w,t.SWAGGER],[w,t.HYPER_VOICE],[w,t.MUD_SHOT],[w,t.EARTH_POWER],[1,t.RAIN_DANCE],[1,t.HYDRO_PUMP],[1,t.BELLY_DRUM],[1,t.POUND],[1,t.WATER_SPORT]],[e.HOPPIP]:[[1,t.TACKLE],[1,t.SPLASH],[4,t.TAIL_WHIP],[6,t.ABSORB],[8,t.FAIRY_WIND],[10,t.POISON_POWDER],[10,t.STUN_SPORE],[10,t.SLEEP_POWDER],[12,t.BULLET_SEED],[15,t.SYNTHESIS],[19,t.LEECH_SEED],[22,t.MEGA_DRAIN],[24,t.ACROBATICS],[27,t.COTTON_SPORE],[29,t.U_TURN],[32,t.GIGA_DRAIN],[35,t.BOUNCE],[38,t.MEMENTO]],[e.SKIPLOOM]:[[1,t.TAIL_WHIP],[1,t.ABSORB],[1,t.SPLASH],[1,t.SYNTHESIS],[8,t.TACKLE],[10,t.FAIRY_WIND],[12,t.POISON_POWDER],[12,t.STUN_SPORE],[12,t.SLEEP_POWDER],[15,t.BULLET_SEED],[20,t.LEECH_SEED],[24,t.MEGA_DRAIN],[28,t.ACROBATICS],[31,t.COTTON_SPORE],[34,t.U_TURN],[37,t.GIGA_DRAIN],[41,t.BOUNCE],[44,t.MEMENTO]],[e.JUMPLUFF]:[[1,t.TAIL_WHIP],[1,t.ABSORB],[1,t.SPLASH],[1,t.SYNTHESIS],[8,t.TACKLE],[10,t.FAIRY_WIND],[12,t.POISON_POWDER],[12,t.STUN_SPORE],[12,t.SLEEP_POWDER],[15,t.BULLET_SEED],[20,t.LEECH_SEED],[24,t.MEGA_DRAIN],[30,t.ACROBATICS],[35,t.COTTON_SPORE],[39,t.U_TURN],[43,t.GIGA_DRAIN],[49,t.BOUNCE],[55,t.MEMENTO]],[e.AIPOM]:[[1,t.SCRATCH],[1,t.TAIL_WHIP],[4,t.SAND_ATTACK],[8,t.ASTONISH],[11,t.BATON_PASS],[15,t.TICKLE],[18,t.FURY_SWIPES],[22,t.SWIFT],[25,t.SCREECH],[29,t.AGILITY],[32,t.DOUBLE_HIT],[36,t.FLING],[39,t.NASTY_PLOT],[43,t.LAST_RESORT]],[e.SUNKERN]:[[1,t.TACKLE],[1,t.GROWTH],[7,t.ABSORB],[10,t.MEGA_DRAIN],[16,t.RAZOR_LEAF],[19,t.WORRY_SEED],[22,t.GIGA_DRAIN],[25,t.ENDEAVOR],[28,t.SYNTHESIS],[31,t.SOLAR_BEAM],[34,t.DOUBLE_EDGE],[36,t.SUNNY_DAY],[39,t.SEED_BOMB]],[e.SUNFLORA]:[[w,t.SEED_BOMB],[1,t.POUND],[1,t.TACKLE],[1,t.GROWTH],[1,t.ENDEAVOR],[1,t.SYNTHESIS],[4,t.INGRAIN],[7,t.ABSORB],[10,t.MEGA_DRAIN],[13,t.LEECH_SEED],[16,t.RAZOR_LEAF],[19,t.WORRY_SEED],[22,t.GIGA_DRAIN],[25,t.BULLET_SEED],[28,t.PETAL_DANCE],[31,t.SOLAR_BEAM],[34,t.DOUBLE_EDGE],[39,t.SUNNY_DAY],[43,t.LEAF_STORM],[50,t.PETAL_BLIZZARD]],[e.YANMA]:[[1,t.TACKLE],[6,t.QUICK_ATTACK],[11,t.DOUBLE_TEAM],[14,t.AIR_CUTTER],[17,t.DETECT],[22,t.SUPERSONIC],[27,t.UPROAR],[30,t.BUG_BITE],[33,t.ANCIENT_POWER],[38,t.HYPNOSIS],[43,t.WING_ATTACK],[46,t.SCREECH],[49,t.U_TURN],[54,t.AIR_SLASH],[57,t.BUG_BUZZ]],[e.WOOPER]:[[1,t.TAIL_WHIP],[1,t.WATER_GUN],[4,t.RAIN_DANCE],[8,t.MUD_SHOT],[12,t.MIST],[12,t.HAZE],[16,t.SLAM],[21,t.YAWN],[24,t.AQUA_TAIL],[28,t.MUDDY_WATER],[32,t.AMNESIA],[36,t.TOXIC],[40,t.EARTHQUAKE]],[e.QUAGSIRE]:[[1,t.TAIL_WHIP],[1,t.WATER_GUN],[1,t.RAIN_DANCE],[1,t.MUD_SHOT],[12,t.MIST],[12,t.HAZE],[16,t.SLAM],[23,t.YAWN],[28,t.AQUA_TAIL],[34,t.MUDDY_WATER],[40,t.AMNESIA],[46,t.TOXIC],[52,t.EARTHQUAKE]],[e.ESPEON]:[[Z,t.GLITZY_GLOW],[w,t.VEEVEE_VOLLEY],[1,t.TACKLE],[1,t.TAKE_DOWN],[1,t.DOUBLE_EDGE],[1,t.TAIL_WHIP],[1,t.BITE],[1,t.GROWL],[1,t.CHARM],[1,t.BATON_PASS],[1,t.HELPING_HAND],[1,t.COVET],[1,t.COPYCAT],[5,t.SAND_ATTACK],[10,t.CONFUSION],[15,t.QUICK_ATTACK],[20,t.BABY_DOLL_EYES],[25,t.SWIFT],[30,t.PSYBEAM],[35,t.MORNING_SUN],[40,t.POWER_SWAP],[45,t.PSYCHIC],[50,t.PSYCH_UP],[55,t.FUTURE_SIGHT],[60,t.LAST_RESORT]],[e.UMBREON]:[[Z,t.BADDY_BAD],[w,t.VEEVEE_VOLLEY],[1,t.TACKLE],[1,t.TAKE_DOWN],[1,t.DOUBLE_EDGE],[1,t.TAIL_WHIP],[1,t.BITE],[1,t.GROWL],[1,t.SWIFT],[1,t.CHARM],[1,t.BATON_PASS],[1,t.HELPING_HAND],[1,t.COVET],[1,t.COPYCAT],[1,t.PURSUIT],[5,t.SAND_ATTACK],[10,t.SNARL],[15,t.QUICK_ATTACK],[20,t.BABY_DOLL_EYES],[25,t.CONFUSE_RAY],[30,t.ASSURANCE],[35,t.MOONLIGHT],[40,t.GUARD_SWAP],[45,t.DARK_PULSE],[50,t.SCREECH],[55,t.MEAN_LOOK],[60,t.LAST_RESORT]],[e.MURKROW]:[[1,t.PECK],[1,t.ASTONISH],[5,t.GUST],[11,t.HAZE],[15,t.WING_ATTACK],[21,t.NIGHT_SHADE],[25,t.ASSURANCE],[31,t.TAUNT],[35,t.MEAN_LOOK],[40,t.FOUL_PLAY],[50,t.SUCKER_PUNCH],[55,t.TORMENT],[60,t.QUASH]],[e.SLOWKING]:[[w,t.FUTURE_SIGHT],[w,t.CHILLY_RECEPTION],[1,t.POWER_GEM],[1,t.NASTY_PLOT],[1,t.SWAGGER],[1,t.TACKLE],[1,t.CURSE],[1,t.GROWL],[1,t.WATER_GUN],[9,t.YAWN],[12,t.CONFUSION],[15,t.DISABLE],[18,t.WATER_PULSE],[21,t.HEADBUTT],[24,t.ZEN_HEADBUTT],[27,t.AMNESIA],[30,t.SURF],[33,t.SLACK_OFF],[36,t.PSYCHIC],[39,t.PSYCH_UP],[42,t.RAIN_DANCE],[45,t.HEAL_PULSE]],[e.MISDREAVUS]:[[1,t.GROWL],[1,t.CONFUSION],[1,t.PSYWAVE],[10,t.ASTONISH],[14,t.CONFUSE_RAY],[19,t.MEAN_LOOK],[23,t.HEX],[28,t.PSYBEAM],[32,t.PAIN_SPLIT],[37,t.PAYBACK],[41,t.SHADOW_BALL],[46,t.PERISH_SONG],[50,t.POWER_GEM]],[e.UNOWN]:[[1,t.HIDDEN_POWER]],[e.WOBBUFFET]:[[Z,t.COUNTER],[Z,t.DESTINY_BOND],[Z,t.SAFEGUARD],[Z,t.MIRROR_COAT],[1,t.COUNTER],[1,t.DESTINY_BOND],[1,t.SAFEGUARD],[1,t.MIRROR_COAT],[1,t.AMNESIA],[1,t.SPLASH],[1,t.CHARM],[1,t.ENCORE]],[e.GIRAFARIG]:[[1,t.TACKLE],[1,t.GROWL],[1,t.ASTONISH],[1,t.POWER_SWAP],[1,t.GUARD_SWAP],[5,t.CONFUSION],[10,t.ASSURANCE],[14,t.STOMP],[19,t.PSYBEAM],[23,t.AGILITY],[28,t.DOUBLE_HIT],[32,t.TWIN_BEAM],[37,t.CRUNCH],[41,t.BATON_PASS],[46,t.NASTY_PLOT],[50,t.PSYCHIC]],[e.PINECO]:[[1,t.TACKLE],[1,t.PROTECT],[6,t.SELF_DESTRUCT],[9,t.BUG_BITE],[12,t.TAKE_DOWN],[17,t.RAPID_SPIN],[20,t.ROLLOUT],[23,t.CURSE],[28,t.SPIKES],[31,t.PAYBACK],[34,t.EXPLOSION],[39,t.IRON_DEFENSE],[42,t.GYRO_BALL],[45,t.DOUBLE_EDGE]],[e.FORRETRESS]:[[Z,t.HEAVY_SLAM],[1,t.TACKLE],[1,t.SELF_DESTRUCT],[1,t.PROTECT],[1,t.ZAP_CANNON],[1,t.TOXIC_SPIKES],[1,t.MAGNET_RISE],[1,t.BUG_BITE],[1,t.MIRROR_SHOT],[12,t.TAKE_DOWN],[17,t.RAPID_SPIN],[20,t.ROLLOUT],[23,t.CURSE],[28,t.SPIKES],[32,t.PAYBACK],[36,t.EXPLOSION],[42,t.IRON_DEFENSE],[46,t.GYRO_BALL],[50,t.DOUBLE_EDGE]],[e.DUNSPARCE]:[[1,t.DEFENSE_CURL],[1,t.FLAIL],[1,t.TACKLE],[4,t.MUD_SLAP],[8,t.ROLLOUT],[12,t.GLARE],[16,t.SCREECH],[20,t.ANCIENT_POWER],[24,t.DRILL_RUN],[28,t.YAWN],[32,t.HYPER_DRILL],[36,t.ROOST],[40,t.DRAGON_RUSH],[44,t.COIL],[48,t.DOUBLE_EDGE],[52,t.ENDEAVOR]],[e.GLIGAR]:[[1,t.POISON_STING],[4,t.SAND_ATTACK],[7,t.HARDEN],[10,t.KNOCK_OFF],[13,t.QUICK_ATTACK],[16,t.FURY_CUTTER],[19,t.POISON_TAIL],[22,t.ACROBATICS],[27,t.SLASH],[30,t.U_TURN],[35,t.SCREECH],[40,t.X_SCISSOR],[45,t.CRABHAMMER],[50,t.SWORDS_DANCE]],[e.STEELIX]:[[1,t.BIND],[1,t.TACKLE],[1,t.ROCK_THROW],[1,t.HARDEN],[1,t.MUD_SPORT],[1,t.CRUNCH],[1,t.ROCK_POLISH],[1,t.THUNDER_FANG],[1,t.ICE_FANG],[1,t.FIRE_FANG],[4,t.SMACK_DOWN],[8,t.AUTOTOMIZE],[12,t.DRAGON_BREATH],[16,t.CURSE],[20,t.ROCK_SLIDE],[22,t.GYRO_BALL],[24,t.SCREECH],[28,t.SAND_TOMB],[32,t.STEALTH_ROCK],[36,t.SLAM],[40,t.SANDSTORM],[44,t.DIG],[48,t.IRON_TAIL],[52,t.STONE_EDGE],[56,t.DOUBLE_EDGE],[60,t.MAGNET_RISE]],[e.SNUBBULL]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.SCARY_FACE],[1,t.CHARM],[1,t.THUNDER_FANG],[1,t.ICE_FANG],[1,t.FIRE_FANG],[7,t.BITE],[13,t.LICK],[19,t.HEADBUTT],[25,t.ROAR],[31,t.LAST_RESORT],[37,t.PLAY_ROUGH],[43,t.PAYBACK],[49,t.CRUNCH]],[e.GRANBULL]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.SCARY_FACE],[1,t.OUTRAGE],[1,t.CHARM],[1,t.THUNDER_FANG],[1,t.ICE_FANG],[1,t.FIRE_FANG],[7,t.BITE],[13,t.LICK],[19,t.HEADBUTT],[27,t.ROAR],[35,t.LAST_RESORT],[43,t.PLAY_ROUGH],[51,t.PAYBACK],[59,t.CRUNCH]],[e.QWILFISH]:[[1,t.TACKLE],[1,t.POISON_STING],[4,t.HARDEN],[8,t.WATER_GUN],[12,t.FELL_STINGER],[16,t.MINIMIZE],[20,t.SPIKES],[24,t.BRINE],[28,t.POISON_JAB],[32,t.PIN_MISSILE],[36,t.TOXIC_SPIKES],[40,t.STOCKPILE],[40,t.SPIT_UP],[44,t.TOXIC],[48,t.AQUA_TAIL],[52,t.ACUPRESSURE],[56,t.DESTINY_BOND]],[e.SCIZOR]:[[Z,t.BULLET_PUNCH],[1,t.WING_ATTACK],[1,t.LEER],[1,t.AGILITY],[1,t.QUICK_ATTACK],[1,t.FALSE_SWIPE],[1,t.FURY_CUTTER],[1,t.AIR_SLASH],[12,t.METAL_CLAW],[16,t.DOUBLE_TEAM],[20,t.DOUBLE_HIT],[24,t.SLASH],[28,t.FOCUS_ENERGY],[30,t.STEEL_WING],[32,t.IRON_DEFENSE],[36,t.IRON_HEAD],[40,t.X_SCISSOR],[44,t.SWORDS_DANCE]],[e.SHUCKLE]:[[1,t.WRAP],[1,t.WITHDRAW],[1,t.BIDE],[1,t.CONSTRICT],[5,t.ROLLOUT],[10,t.STRUGGLE_BUG],[15,t.ROCK_THROW],[20,t.SAFEGUARD],[25,t.REST],[30,t.BUG_BITE],[35,t.GUARD_SPLIT],[35,t.POWER_SPLIT],[40,t.ROCK_SLIDE],[45,t.GASTRO_ACID],[50,t.STICKY_WEB],[55,t.POWER_TRICK],[60,t.STONE_EDGE],[65,t.SHELL_SMASH]],[e.HERACROSS]:[[1,t.TACKLE],[1,t.LEER],[1,t.ARM_THRUST],[5,t.FURY_ATTACK],[10,t.ENDURE],[15,t.AERIAL_ACE],[20,t.HORN_ATTACK],[25,t.COUNTER],[30,t.BRICK_BREAK],[35,t.PIN_MISSILE],[40,t.THROAT_CHOP],[45,t.THRASH],[50,t.SWORDS_DANCE],[55,t.MEGAHORN],[60,t.CLOSE_COMBAT]],[e.SNEASEL]:[[1,t.SCRATCH],[1,t.LEER],[6,t.TAUNT],[12,t.QUICK_ATTACK],[18,t.METAL_CLAW],[24,t.ICY_WIND],[30,t.FURY_SWIPES],[36,t.HONE_CLAWS],[42,t.BEAT_UP],[48,t.AGILITY],[54,t.SCREECH],[60,t.SLASH]],[e.TEDDIURSA]:[[1,t.SCRATCH],[1,t.LICK],[1,t.COVET],[1,t.FLING],[1,t.BABY_DOLL_EYES],[8,t.FURY_SWIPES],[13,t.PAYBACK],[17,t.SWEET_SCENT],[22,t.SLASH],[25,t.PLAY_NICE],[29,t.PLAY_ROUGH],[33,t.CHARM],[37,t.REST],[37,t.SNORE],[41,t.THRASH]],[e.URSARING]:[[1,t.SCRATCH],[1,t.LEER],[1,t.LICK],[1,t.COVET],[1,t.FLING],[1,t.BABY_DOLL_EYES],[1,t.FAKE_TEARS],[1,t.CHARM],[8,t.FURY_SWIPES],[13,t.PAYBACK],[17,t.SWEET_SCENT],[22,t.SLASH],[25,t.PLAY_NICE],[29,t.PLAY_ROUGH],[35,t.SCARY_FACE],[41,t.REST],[41,t.SNORE],[48,t.HIGH_HORSEPOWER],[56,t.THRASH],[64,t.HAMMER_ARM]],[e.SLUGMA]:[[1,t.SMOG],[1,t.YAWN],[5,t.EMBER],[8,t.ROCK_THROW],[13,t.HARDEN],[20,t.CLEAR_SMOG],[22,t.ANCIENT_POWER],[27,t.INCINERATE],[29,t.ROCK_SLIDE],[34,t.LAVA_PLUME],[36,t.AMNESIA],[41,t.BODY_SLAM],[43,t.RECOVER],[48,t.FLAMETHROWER],[50,t.EARTH_POWER]],[e.MAGCARGO]:[[Z,t.SHELL_SMASH],[1,t.EMBER],[1,t.ROCK_THROW],[1,t.SMOG],[1,t.YAWN],[1,t.EARTH_POWER],[13,t.HARDEN],[20,t.CLEAR_SMOG],[22,t.ANCIENT_POWER],[27,t.INCINERATE],[29,t.ROCK_SLIDE],[34,t.LAVA_PLUME],[36,t.AMNESIA],[43,t.BODY_SLAM],[47,t.RECOVER],[54,t.FLAMETHROWER]],[e.SWINUB]:[[1,t.TACKLE],[1,t.MUD_SLAP],[1,t.ODOR_SLEUTH],[5,t.POWDER_SNOW],[10,t.FLAIL],[15,t.ICE_SHARD],[20,t.MIST],[25,t.ENDURE],[30,t.ICY_WIND],[35,t.AMNESIA],[40,t.TAKE_DOWN],[45,t.EARTHQUAKE],[50,t.BLIZZARD]],[e.PILOSWINE]:[[Z,t.ICE_FANG],[1,t.TACKLE],[1,t.FLAIL],[1,t.POWDER_SNOW],[1,t.MUD_SLAP],[1,t.ODOR_SLEUTH],[1,t.ANCIENT_POWER],[15,t.ICE_SHARD],[20,t.MIST],[25,t.ENDURE],[30,t.ICY_WIND],[37,t.AMNESIA],[44,t.TAKE_DOWN],[51,t.EARTHQUAKE],[58,t.BLIZZARD],[65,t.THRASH]],[e.CORSOLA]:[[1,t.TACKLE],[1,t.HARDEN],[5,t.WATER_GUN],[10,t.AQUA_RING],[15,t.ENDURE],[20,t.ANCIENT_POWER],[25,t.BUBBLE_BEAM],[30,t.FLAIL],[35,t.LIFE_DEW],[40,t.POWER_GEM],[45,t.EARTH_POWER],[50,t.RECOVER],[55,t.MIRROR_COAT]],[e.REMORAID]:[[1,t.WATER_GUN],[1,t.HELPING_HAND],[4,t.WATER_PULSE],[8,t.FOCUS_ENERGY],[12,t.PSYBEAM],[16,t.AURORA_BEAM],[20,t.BUBBLE_BEAM],[24,t.LOCK_ON],[28,t.BULLET_SEED],[32,t.ICE_BEAM],[36,t.HYDRO_PUMP],[40,t.SOAK],[44,t.HYPER_BEAM]],[e.OCTILLERY]:[[Z,t.OCTAZOOKA],[1,t.WRAP],[1,t.CONSTRICT],[1,t.WATER_GUN],[1,t.FOCUS_ENERGY],[1,t.HELPING_HAND],[1,t.ROCK_BLAST],[1,t.WATER_PULSE],[1,t.GUNK_SHOT],[12,t.PSYBEAM],[16,t.AURORA_BEAM],[20,t.BUBBLE_BEAM],[24,t.LOCK_ON],[30,t.BULLET_SEED],[36,t.ICE_BEAM],[42,t.HYDRO_PUMP],[48,t.SOAK],[54,t.HYPER_BEAM]],[e.DELIBIRD]:[[1,t.PRESENT],[1,t.METRONOME],[5,t.FAKE_OUT],[5,t.POWDER_SNOW],[6,t.MIST],[10,t.ICE_SHARD],[15,t.AERIAL_ACE],[20,t.ICY_WIND],[25,t.DRILL_PECK],[30,t.ICE_PUNCH],[35,t.HAZE],[40,t.AIR_SLASH],[45,t.TAILWIND],[50,t.SNOWSCAPE],[55,t.BLIZZARD],[60,t.BRAVE_BIRD]],[e.MANTINE]:[[1,t.WING_ATTACK],[1,t.TACKLE],[1,t.SUPERSONIC],[1,t.WATER_GUN],[1,t.PSYBEAM],[1,t.SIGNAL_BEAM],[1,t.BULLET_SEED],[1,t.ROOST],[12,t.WATER_PULSE],[16,t.WIDE_GUARD],[20,t.AGILITY],[24,t.BUBBLE_BEAM],[28,t.HEADBUTT],[32,t.AIR_SLASH],[36,t.AQUA_RING],[40,t.BOUNCE],[44,t.TAKE_DOWN],[48,t.HYDRO_PUMP]],[e.SKARMORY]:[[1,t.LEER],[1,t.PECK],[4,t.SAND_ATTACK],[8,t.FURY_ATTACK],[12,t.METAL_CLAW],[16,t.AGILITY],[20,t.WING_ATTACK],[24,t.SLASH],[28,t.STEEL_WING],[32,t.PAYBACK],[36,t.DRILL_PECK],[40,t.METAL_SOUND],[44,t.SPIKES],[48,t.IRON_DEFENSE],[52,t.BRAVE_BIRD]],[e.HOUNDOUR]:[[1,t.LEER],[1,t.EMBER],[4,t.HOWL],[8,t.SMOG],[13,t.ROAR],[16,t.BITE],[20,t.INCINERATE],[25,t.BEAT_UP],[28,t.FIRE_FANG],[32,t.TORMENT],[37,t.COMEUPPANCE],[40,t.FOUL_PLAY],[44,t.FLAMETHROWER],[49,t.CRUNCH],[52,t.NASTY_PLOT],[56,t.INFERNO]],[e.HOUNDOOM]:[[1,t.LEER],[1,t.EMBER],[1,t.SMOG],[1,t.HOWL],[1,t.NASTY_PLOT],[1,t.THUNDER_FANG],[13,t.ROAR],[16,t.BITE],[20,t.INCINERATE],[26,t.BEAT_UP],[30,t.FIRE_FANG],[35,t.TORMENT],[41,t.COMEUPPANCE],[45,t.FOUL_PLAY],[50,t.FLAMETHROWER],[56,t.CRUNCH],[62,t.INFERNO]],[e.KINGDRA]:[[w,t.LASER_FOCUS],[1,t.LEER],[1,t.WATER_GUN],[1,t.SMOKESCREEN],[1,t.TWISTER],[1,t.WHIRLPOOL],[1,t.YAWN],[15,t.FOCUS_ENERGY],[20,t.DRAGON_BREATH],[25,t.BUBBLE_BEAM],[30,t.AGILITY],[37,t.WATER_PULSE],[44,t.DRAGON_PULSE],[51,t.HYDRO_PUMP],[58,t.DRAGON_DANCE],[65,t.RAIN_DANCE],[72,t.WAVE_CRASH]],[e.PHANPY]:[[1,t.TACKLE],[1,t.GROWL],[1,t.DEFENSE_CURL],[1,t.ODOR_SLEUTH],[6,t.FLAIL],[10,t.ROLLOUT],[15,t.BULLDOZE],[19,t.ENDURE],[24,t.SLAM],[28,t.TAKE_DOWN],[33,t.CHARM],[37,t.LAST_RESORT],[42,t.DOUBLE_EDGE]],[e.DONPHAN]:[[Z,t.FURY_ATTACK],[1,t.TACKLE],[1,t.GROWL],[1,t.HORN_ATTACK],[1,t.DEFENSE_CURL],[1,t.ODOR_SLEUTH],[1,t.FLAIL],[1,t.ENDURE],[1,t.TAKE_DOWN],[1,t.CHARM],[1,t.LAST_RESORT],[1,t.DOUBLE_EDGE],[1,t.THUNDER_FANG],[1,t.FIRE_FANG],[1,t.BULLDOZE],[6,t.RAPID_SPIN],[10,t.ROLLOUT],[15,t.ASSURANCE],[19,t.KNOCK_OFF],[24,t.SLAM],[30,t.STOMPING_TANTRUM],[37,t.SCARY_FACE],[43,t.EARTHQUAKE],[50,t.GIGA_IMPACT]],[e.PORYGON2]:[[1,t.TACKLE],[1,t.DEFENSE_CURL],[1,t.CONVERSION],[1,t.RECYCLE],[1,t.MAGNET_RISE],[1,t.MAGIC_COAT],[15,t.THUNDER_SHOCK],[20,t.PSYBEAM],[25,t.CONVERSION_2],[30,t.AGILITY],[35,t.RECOVER],[40,t.DISCHARGE],[45,t.TRI_ATTACK],[50,t.LOCK_ON],[55,t.ZAP_CANNON],[60,t.HYPER_BEAM]],[e.STANTLER]:[[1,t.TACKLE],[1,t.ME_FIRST],[3,t.LEER],[7,t.ASTONISH],[10,t.HYPNOSIS],[13,t.STOMP],[16,t.SAND_ATTACK],[21,t.TAKE_DOWN],[23,t.CONFUSE_RAY],[25,t.PSYSHIELD_BASH],[27,t.CALM_MIND],[32,t.ROLE_PLAY],[37,t.ZEN_HEADBUTT],[49,t.IMPRISON],[55,t.DOUBLE_EDGE]],[e.SMEARGLE]:[[1,t.SKETCH],[11,t.SKETCH],[21,t.SKETCH],[31,t.SKETCH],[41,t.SKETCH],[51,t.SKETCH],[61,t.SKETCH],[71,t.SKETCH],[81,t.SKETCH],[91,t.SKETCH]],[e.TYROGUE]:[[1,t.TACKLE],[1,t.FOCUS_ENERGY],[1,t.FAKE_OUT],[1,t.HELPING_HAND],[10,t.LOW_SWEEP],[10,t.MACH_PUNCH],[10,t.RAPID_SPIN]],[e.HITMONTOP]:[[Z,t.TRIPLE_KICK],[1,t.TACKLE],[1,t.FOCUS_ENERGY],[1,t.RAPID_SPIN],[1,t.FAKE_OUT],[1,t.HELPING_HAND],[1,t.FEINT],[1,t.PURSUIT],[1,t.ROLLING_KICK],[1,t.LOW_SWEEP],[1,t.MACH_PUNCH],[4,t.QUICK_ATTACK],[8,t.GYRO_BALL],[12,t.DETECT],[16,t.REVENGE],[21,t.WIDE_GUARD],[21,t.QUICK_GUARD],[24,t.SUCKER_PUNCH],[28,t.AGILITY],[32,t.DIG],[36,t.CLOSE_COMBAT],[40,t.COUNTER],[44,t.ENDEAVOR]],[e.SMOOCHUM]:[[1,t.POUND],[1,t.LICK],[4,t.POWDER_SNOW],[8,t.COPYCAT],[12,t.CONFUSION],[16,t.COVET],[20,t.SING],[24,t.FAKE_TEARS],[28,t.ICE_PUNCH],[32,t.PSYCHIC],[36,t.SWEET_KISS],[40,t.MEAN_LOOK],[44,t.PERISH_SONG],[48,t.BLIZZARD]],[e.ELEKID]:[[1,t.LEER],[1,t.QUICK_ATTACK],[4,t.THUNDER_SHOCK],[8,t.CHARGE],[12,t.SWIFT],[16,t.SHOCK_WAVE],[20,t.THUNDER_WAVE],[24,t.SCREECH],[28,t.THUNDER_PUNCH],[32,t.DISCHARGE],[36,t.LOW_KICK],[40,t.THUNDERBOLT],[44,t.LIGHT_SCREEN],[48,t.THUNDER]],[e.MAGBY]:[[1,t.LEER],[1,t.SMOG],[4,t.EMBER],[8,t.SMOKESCREEN],[12,t.CLEAR_SMOG],[16,t.FLAME_WHEEL],[20,t.CONFUSE_RAY],[24,t.SCARY_FACE],[28,t.FIRE_PUNCH],[32,t.LAVA_PLUME],[36,t.LOW_KICK],[40,t.FLAMETHROWER],[44,t.SUNNY_DAY],[48,t.FIRE_BLAST]],[e.MILTANK]:[[1,t.TACKLE],[1,t.GROWL],[5,t.ROLLOUT],[10,t.DEFENSE_CURL],[15,t.STOMP],[20,t.HEAL_BELL],[25,t.HEADBUTT],[30,t.ZEN_HEADBUTT],[35,t.MILK_DRINK],[40,t.BODY_SLAM],[45,t.PLAY_ROUGH],[50,t.CHARM],[55,t.HIGH_HORSEPOWER]],[e.BLISSEY]:[[1,t.POUND],[1,t.DEFENSE_CURL],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.COVET],[1,t.COPYCAT],[1,t.DISARMING_VOICE],[4,t.TAIL_WHIP],[8,t.ECHOED_VOICE],[12,t.LIFE_DEW],[16,t.SING],[20,t.FLING],[24,t.TAKE_DOWN],[28,t.HEAL_PULSE],[32,t.HELPING_HAND],[36,t.LIGHT_SCREEN],[40,t.DOUBLE_EDGE],[44,t.SOFT_BOILED],[48,t.LAST_RESORT],[52,t.HEALING_WISH]],[e.RAIKOU]:[[1,t.LEER],[1,t.THUNDER_SHOCK],[1,t.QUICK_ATTACK],[1,t.EXTREME_SPEED],[1,t.CHARGE],[6,t.SPARK],[12,t.BITE],[18,t.CALM_MIND],[24,t.ROAR],[30,t.THUNDER_FANG],[36,t.HOWL],[42,t.CRUNCH],[48,t.EXTRASENSORY],[54,t.DISCHARGE],[60,t.REFLECT],[66,t.RAIN_DANCE],[72,t.THUNDER],[78,t.ZAP_CANNON]],[e.ENTEI]:[[w,t.SACRED_FIRE],[w,t.EXTREME_SPEED],[1,t.STOMP],[1,t.LEER],[1,t.EMBER],[1,t.SMOKESCREEN],[6,t.FLAME_WHEEL],[12,t.BITE],[18,t.CALM_MIND],[24,t.ROAR],[30,t.FIRE_FANG],[36,t.SCARY_FACE],[42,t.CRUNCH],[48,t.EXTRASENSORY],[54,t.LAVA_PLUME],[60,t.SWAGGER],[66,t.SUNNY_DAY],[72,t.FIRE_BLAST],[78,t.ERUPTION]],[e.SUICUNE]:[[w,t.EXTREME_SPEED],[w,t.SHEER_COLD],[1,t.GUST],[1,t.LEER],[1,t.MIST],[1,t.WATER_GUN],[6,t.WATER_PULSE],[12,t.BITE],[18,t.CALM_MIND],[24,t.ROAR],[30,t.ICE_FANG],[36,t.TAILWIND],[42,t.CRUNCH],[48,t.EXTRASENSORY],[54,t.SURF],[60,t.MIRROR_COAT],[66,t.RAIN_DANCE],[72,t.HYDRO_PUMP],[78,t.BLIZZARD]],[e.LARVITAR]:[[1,t.TACKLE],[1,t.LEER],[3,t.ROCK_THROW],[6,t.PAYBACK],[9,t.BITE],[12,t.SCARY_FACE],[15,t.ROCK_SLIDE],[18,t.STOMPING_TANTRUM],[21,t.SCREECH],[24,t.SMACK_DOWN],[27,t.CRUNCH],[31,t.EARTHQUAKE],[33,t.STONE_EDGE],[36,t.THRASH],[39,t.SANDSTORM],[42,t.HYPER_BEAM]],[e.PUPITAR]:[[Z,t.IRON_DEFENSE],[1,t.TACKLE],[1,t.LEER],[1,t.ROCK_THROW],[1,t.PAYBACK],[9,t.BITE],[12,t.SCARY_FACE],[15,t.ROCK_SLIDE],[18,t.STOMPING_TANTRUM],[21,t.SCREECH],[24,t.SMACK_DOWN],[27,t.CRUNCH],[33,t.EARTHQUAKE],[37,t.STONE_EDGE],[42,t.THRASH],[47,t.SANDSTORM],[52,t.HYPER_BEAM]],[e.TYRANITAR]:[[1,t.TACKLE],[1,t.LEER],[1,t.ROCK_THROW],[1,t.IRON_DEFENSE],[1,t.PAYBACK],[1,t.DARK_PULSE],[1,t.THUNDER_FANG],[1,t.ICE_FANG],[1,t.FIRE_FANG],[9,t.BITE],[12,t.SCARY_FACE],[15,t.ROCK_SLIDE],[18,t.STOMPING_TANTRUM],[21,t.SCREECH],[24,t.SMACK_DOWN],[27,t.CRUNCH],[33,t.EARTHQUAKE],[37,t.STONE_EDGE],[42,t.THRASH],[47,t.SANDSTORM],[52,t.HYPER_BEAM],[59,t.GIGA_IMPACT]],[e.LUGIA]:[[w,t.DRAGON_RUSH],[1,t.GUST],[1,t.WHIRLWIND],[1,t.ANCIENT_POWER],[1,t.WEATHER_BALL],[9,t.MIST],[18,t.SAFEGUARD],[27,t.CALM_MIND],[36,t.EXTRASENSORY],[45,t.RECOVER],[54,t.AEROBLAST],[63,t.RAIN_DANCE],[72,t.HYDRO_PUMP],[81,t.FUTURE_SIGHT],[90,t.SKY_ATTACK]],[e.HO_OH]:[[1,t.GUST],[1,t.WHIRLWIND],[1,t.ANCIENT_POWER],[1,t.WEATHER_BALL],[9,t.LIFE_DEW],[18,t.SAFEGUARD],[27,t.CALM_MIND],[36,t.EXTRASENSORY],[45,t.RECOVER],[54,t.SACRED_FIRE],[63,t.SUNNY_DAY],[72,t.FIRE_BLAST],[81,t.FUTURE_SIGHT],[90,t.SKY_ATTACK],[99,t.OVERHEAT]],[e.CELEBI]:[[1,t.CONFUSION],[1,t.HEAL_BELL],[10,t.MAGICAL_LEAF],[20,t.BATON_PASS],[30,t.ANCIENT_POWER],[40,t.LIFE_DEW],[50,t.LEECH_SEED],[55,t.HEAL_BLOCK],[60,t.RECOVER],[70,t.FUTURE_SIGHT],[80,t.HEALING_WISH],[90,t.LEAF_STORM],[100,t.PERISH_SONG]],[e.TREECKO]:[[1,t.POUND],[1,t.LEER],[3,t.LEAFAGE],[6,t.QUICK_ATTACK],[9,t.MEGA_DRAIN],[12,t.DETECT],[15,t.QUICK_GUARD],[18,t.ASSURANCE],[21,t.GIGA_DRAIN],[24,t.SLAM],[27,t.DOUBLE_TEAM],[30,t.ENERGY_BALL],[33,t.SCREECH],[36,t.ENDEAVOR],[39,t.LEAF_STORM]],[e.GROVYLE]:[[w,t.FALSE_SWIPE],[w,t.FURY_CUTTER],[w,t.X_SCISSOR],[w,t.ENERGY_BALL],[1,t.POUND],[1,t.LEER],[1,t.LEAFAGE],[1,t.QUICK_ATTACK],[9,t.MEGA_DRAIN],[12,t.DETECT],[15,t.QUICK_GUARD],[20,t.ASSURANCE],[25,t.GIGA_DRAIN],[30,t.SLAM],[35,t.DOUBLE_TEAM],[40,t.LEAF_BLADE],[45,t.SCREECH],[50,t.ENDEAVOR],[55,t.LEAF_STORM]],[e.SCEPTILE]:[[Z,t.LEAF_BLADE],[w,t.FALSE_SWIPE],[w,t.FURY_CUTTER],[w,t.X_SCISSOR],[w,t.ENERGY_BALL],[w,t.SHED_TAIL],[1,t.POUND],[1,t.LEER],[1,t.LEAFAGE],[1,t.QUICK_ATTACK],[1,t.DUAL_CHOP],[5,t.MEGA_DRAIN],[12,t.DETECT],[15,t.QUICK_GUARD],[20,t.ASSURANCE],[25,t.GIGA_DRAIN],[30,t.SLAM],[35,t.DOUBLE_TEAM],[42,t.SCREECH],[49,t.ENDEAVOR],[56,t.LEAF_STORM]],[e.TORCHIC]:[[1,t.SCRATCH],[1,t.GROWL],[3,t.EMBER],[6,t.QUICK_ATTACK],[9,t.FLAME_CHARGE],[12,t.DETECT],[15,t.SAND_ATTACK],[18,t.AERIAL_ACE],[21,t.SLASH],[24,t.BOUNCE],[27,t.FOCUS_ENERGY],[30,t.FLAMETHROWER],[33,t.FEATHER_DANCE],[36,t.REVERSAL],[39,t.FLARE_BLITZ]],[e.COMBUSKEN]:[[Z,t.DOUBLE_KICK],[w,t.FLAMETHROWER],[w,t.FEATHER_DANCE],[1,t.SCRATCH],[1,t.GROWL],[1,t.EMBER],[1,t.QUICK_ATTACK],[9,t.FLAME_CHARGE],[12,t.DETECT],[15,t.SAND_ATTACK],[20,t.AERIAL_ACE],[25,t.SLASH],[30,t.BOUNCE],[35,t.FOCUS_ENERGY],[40,t.BLAZE_KICK],[45,t.BULK_UP],[50,t.REVERSAL],[55,t.FLARE_BLITZ]],[e.BLAZIKEN]:[[Z,t.BLAZE_KICK],[w,t.FIRE_PUNCH],[w,t.EMBER],[w,t.FLAMETHROWER],[w,t.FEATHER_DANCE],[1,t.DOUBLE_KICK],[1,t.SCRATCH],[1,t.GROWL],[1,t.QUICK_ATTACK],[9,t.FLAME_CHARGE],[12,t.DETECT],[15,t.SAND_ATTACK],[20,t.AERIAL_ACE],[25,t.SLASH],[30,t.BOUNCE],[35,t.FOCUS_ENERGY],[42,t.BULK_UP],[49,t.REVERSAL],[56,t.FLARE_BLITZ],[63,t.BRAVE_BIRD]],[e.MUDKIP]:[[1,t.TACKLE],[1,t.GROWL],[3,t.WATER_GUN],[6,t.ROCK_SMASH],[9,t.ROCK_THROW],[12,t.PROTECT],[15,t.SUPERSONIC],[18,t.WATER_PULSE],[21,t.ROCK_SLIDE],[24,t.TAKE_DOWN],[27,t.AMNESIA],[30,t.SURF],[33,t.SCREECH],[36,t.ENDEAVOR],[39,t.HYDRO_PUMP]],[e.MARSHTOMP]:[[Z,t.MUD_SHOT],[w,t.SURF],[w,t.ROCK_SMASH],[1,t.TACKLE],[1,t.GROWL],[1,t.WATER_GUN],[9,t.ROCK_THROW],[12,t.PROTECT],[15,t.SUPERSONIC],[20,t.WATER_PULSE],[25,t.ROCK_SLIDE],[30,t.TAKE_DOWN],[35,t.AMNESIA],[40,t.MUDDY_WATER],[45,t.SCREECH],[50,t.ENDEAVOR],[55,t.HYDRO_PUMP]],[e.SWAMPERT]:[[w,t.SURF],[w,t.EARTHQUAKE],[w,t.ROCK_SMASH],[w,t.HAMMER_ARM],[1,t.MUD_SHOT],[1,t.TACKLE],[1,t.GROWL],[1,t.WATER_GUN],[9,t.ROCK_THROW],[12,t.PROTECT],[15,t.SUPERSONIC],[20,t.WATER_PULSE],[25,t.ROCK_SLIDE],[30,t.TAKE_DOWN],[35,t.AMNESIA],[42,t.MUDDY_WATER],[49,t.SCREECH],[56,t.ENDEAVOR],[63,t.HYDRO_PUMP]],[e.POOCHYENA]:[[1,t.TACKLE],[4,t.HOWL],[7,t.SAND_ATTACK],[10,t.BITE],[13,t.LEER],[16,t.ROAR],[19,t.SWAGGER],[22,t.ASSURANCE],[25,t.SCARY_FACE],[28,t.TAUNT],[31,t.CRUNCH],[34,t.YAWN],[36,t.TAKE_DOWN],[40,t.SUCKER_PUNCH],[44,t.PLAY_ROUGH]],[e.MIGHTYENA]:[[Z,t.SNARL],[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.BITE],[1,t.THIEF],[1,t.CRUNCH],[1,t.THUNDER_FANG],[1,t.ICE_FANG],[1,t.FIRE_FANG],[13,t.LEER],[13,t.HOWL],[16,t.ROAR],[20,t.SWAGGER],[24,t.ASSURANCE],[28,t.SCARY_FACE],[36,t.TAUNT],[44,t.YAWN],[48,t.TAKE_DOWN],[52,t.SUCKER_PUNCH],[56,t.PLAY_ROUGH]],[e.ZIGZAGOON]:[[1,t.TACKLE],[1,t.GROWL],[3,t.SAND_ATTACK],[6,t.TAIL_WHIP],[9,t.COVET],[12,t.HEADBUTT],[15,t.BABY_DOLL_EYES],[18,t.PIN_MISSILE],[21,t.REST],[24,t.TAKE_DOWN],[27,t.FLING],[30,t.FLAIL],[33,t.BELLY_DRUM],[36,t.DOUBLE_EDGE]],[e.LINOONE]:[[Z,t.SLASH],[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.PIN_MISSILE],[1,t.GROWL],[1,t.SWITCHEROO],[1,t.BABY_DOLL_EYES],[1,t.ROTOTILLER],[9,t.COVET],[12,t.HEADBUTT],[15,t.HONE_CLAWS],[18,t.FURY_SWIPES],[23,t.REST],[28,t.TAKE_DOWN],[33,t.FLING],[38,t.FLAIL],[43,t.BELLY_DRUM],[48,t.DOUBLE_EDGE]],[e.WURMPLE]:[[1,t.TACKLE],[1,t.STRING_SHOT],[5,t.POISON_STING],[15,t.BUG_BITE]],[e.SILCOON]:[[Z,t.HARDEN],[w,t.TACKLE],[w,t.STRING_SHOT],[w,t.POISON_STING],[w,t.BUG_BITE],[1,t.HARDEN]],[e.BEAUTIFLY]:[[Z,t.GUST],[1,t.TACKLE],[1,t.BUG_BITE],[1,t.GUST],[1,t.HARDEN],[1,t.STRING_SHOT],[1,t.POISON_STING],[12,t.ABSORB],[15,t.STUN_SPORE],[17,t.MORNING_SUN],[20,t.AIR_CUTTER],[22,t.MEGA_DRAIN],[25,t.LEECH_LIFE],[27,t.ATTRACT],[30,t.WHIRLWIND],[32,t.GIGA_DRAIN],[35,t.BUG_BUZZ],[37,t.PROTECT],[40,t.QUIVER_DANCE]],[e.CASCOON]:[[Z,t.HARDEN],[w,t.TACKLE],[w,t.STRING_SHOT],[w,t.POISON_STING],[w,t.BUG_BITE],[1,t.HARDEN]],[e.DUSTOX]:[[Z,t.GUST],[1,t.TACKLE],[1,t.BUG_BITE],[1,t.GUST],[1,t.HARDEN],[1,t.STRING_SHOT],[1,t.POISON_STING],[12,t.CONFUSION],[15,t.POISON_POWDER],[17,t.MOONLIGHT],[20,t.VENOSHOCK],[22,t.PSYBEAM],[25,t.LEECH_LIFE],[27,t.LIGHT_SCREEN],[30,t.WHIRLWIND],[32,t.TOXIC],[35,t.BUG_BUZZ],[37,t.PROTECT],[40,t.QUIVER_DANCE]],[e.LOTAD]:[[1,t.GROWL],[1,t.ASTONISH],[3,t.ABSORB],[6,t.WATER_GUN],[9,t.MIST],[12,t.MEGA_DRAIN],[16,t.FLAIL],[20,t.BUBBLE_BEAM],[24,t.LEECH_SEED],[28,t.GIGA_DRAIN],[33,t.RAIN_DANCE],[38,t.ZEN_HEADBUTT],[43,t.ENERGY_BALL]],[e.LOMBRE]:[[1,t.GROWL],[1,t.WATER_GUN],[1,t.ABSORB],[1,t.FLAIL],[1,t.FAKE_OUT],[1,t.RAIN_DANCE],[1,t.KNOCK_OFF],[1,t.TEETER_DANCE],[1,t.ASTONISH],[9,t.MIST],[12,t.MEGA_DRAIN],[18,t.FURY_SWIPES],[24,t.BUBBLE_BEAM],[30,t.LEECH_SEED],[36,t.GIGA_DRAIN],[50,t.ZEN_HEADBUTT],[57,t.ENERGY_BALL],[64,t.HYDRO_PUMP]],[e.LUDICOLO]:[[w,t.GROWL],[w,t.MIST],[w,t.WATER_GUN],[w,t.HYDRO_PUMP],[w,t.ABSORB],[w,t.MEGA_DRAIN],[w,t.FURY_SWIPES],[w,t.FLAIL],[w,t.KNOCK_OFF],[w,t.TEETER_DANCE],[w,t.ASTONISH],[w,t.ENERGY_BALL],[w,t.ZEN_HEADBUTT],[w,t.LEECH_SEED],[w,t.GIGA_DRAIN],[1,t.FAKE_OUT],[1,t.BUBBLE_BEAM],[1,t.RAIN_DANCE]],[e.SEEDOT]:[[1,t.TACKLE],[1,t.HARDEN],[1,t.BIDE],[3,t.ABSORB],[6,t.ASTONISH],[9,t.GROWTH],[12,t.ROLLOUT],[15,t.MEGA_DRAIN],[18,t.PAYBACK],[21,t.HEADBUTT],[24,t.SUNNY_DAY],[27,t.SYNTHESIS],[30,t.SUCKER_PUNCH],[33,t.EXPLOSION]],[e.NUZLEAF]:[[Z,t.RAZOR_LEAF],[1,t.AIR_CUTTER],[1,t.TORMENT],[1,t.FAKE_OUT],[1,t.SWAGGER],[1,t.EXPLOSION],[1,t.TACKLE],[1,t.HARDEN],[1,t.BIDE],[1,t.ABSORB],[1,t.ASTONISH],[1,t.HEADBUTT],[9,t.GROWTH],[12,t.ROLLOUT],[18,t.MEGA_DRAIN],[24,t.PAYBACK],[30,t.SYNTHESIS],[36,t.SUNNY_DAY],[43,t.EXTRASENSORY],[50,t.SUCKER_PUNCH],[57,t.LEAF_BLADE]],[e.SHIFTRY]:[[Z,t.LEAF_BLADE],[w,t.WHIRLWIND],[w,t.TACKLE],[w,t.BIDE],[w,t.ABSORB],[w,t.MEGA_DRAIN],[w,t.GROWTH],[w,t.RAZOR_LEAF],[w,t.HARDEN],[w,t.HEADBUTT],[w,t.EXPLOSION],[w,t.ROLLOUT],[w,t.SWAGGER],[w,t.SYNTHESIS],[w,t.BEAT_UP],[w,t.FAKE_OUT],[w,t.TORMENT],[w,t.ASTONISH],[w,t.EXTRASENSORY],[w,t.SUCKER_PUNCH],[1,t.AIR_CUTTER],[1,t.HURRICANE],[1,t.PAYBACK],[1,t.SUNNY_DAY]],[e.TAILLOW]:[[1,t.PECK],[1,t.GROWL],[5,t.FOCUS_ENERGY],[9,t.QUICK_ATTACK],[13,t.WING_ATTACK],[17,t.DOUBLE_TEAM],[21,t.AERIAL_ACE],[25,t.QUICK_GUARD],[29,t.AGILITY],[33,t.AIR_SLASH],[37,t.ENDEAVOR],[41,t.BRAVE_BIRD],[45,t.REVERSAL]],[e.SWELLOW]:[[1,t.BRAVE_BIRD],[1,t.AIR_SLASH],[1,t.PLUCK],[1,t.PECK],[1,t.GROWL],[1,t.FOCUS_ENERGY],[1,t.QUICK_ATTACK],[13,t.WING_ATTACK],[17,t.DOUBLE_TEAM],[21,t.AERIAL_ACE],[27,t.QUICK_GUARD],[33,t.AGILITY],[45,t.ENDEAVOR],[51,t.BRAVE_BIRD],[57,t.REVERSAL]],[e.WINGULL]:[[1,t.GROWL],[1,t.WATER_GUN],[5,t.QUICK_ATTACK],[10,t.SUPERSONIC],[15,t.WING_ATTACK],[20,t.WATER_PULSE],[26,t.AGILITY],[30,t.AIR_SLASH],[35,t.MIST],[40,t.ROOST],[45,t.HURRICANE]],[e.PELIPPER]:[[1,t.PROTECT],[1,t.SOAK],[1,t.QUICK_ATTACK],[1,t.AGILITY],[1,t.AIR_SLASH],[1,t.GROWL],[1,t.WATER_GUN],[1,t.TAILWIND],[1,t.SUPERSONIC],[1,t.WATER_SPORT],[15,t.WING_ATTACK],[20,t.WATER_PULSE],[28,t.STOCKPILE],[28,t.SPIT_UP],[28,t.SWALLOW],[34,t.FLING],[41,t.MIST],[48,t.ROOST],[55,t.HURRICANE],[62,t.HYDRO_PUMP]],[e.RALTS]:[[1,t.GROWL],[1,t.DISARMING_VOICE],[3,t.DOUBLE_TEAM],[6,t.CONFUSION],[9,t.HYPNOSIS],[12,t.DRAINING_KISS],[15,t.TELEPORT],[18,t.PSYBEAM],[21,t.LIFE_DEW],[24,t.CHARM],[27,t.CALM_MIND],[30,t.PSYCHIC],[33,t.HEAL_PULSE],[36,t.DREAM_EATER],[39,t.FUTURE_SIGHT]],[e.KIRLIA]:[[1,t.GROWL],[1,t.DISARMING_VOICE],[1,t.DOUBLE_TEAM],[1,t.CONFUSION],[9,t.HYPNOSIS],[12,t.DRAINING_KISS],[15,t.TELEPORT],[18,t.PSYBEAM],[23,t.LIFE_DEW],[28,t.CHARM],[33,t.CALM_MIND],[38,t.PSYCHIC],[43,t.HEAL_PULSE],[48,t.DREAM_EATER],[53,t.FUTURE_SIGHT]],[e.GARDEVOIR]:[[Z,t.DAZZLING_GLEAM],[1,t.MISTY_TERRAIN],[1,t.HEALING_WISH],[1,t.CHARM],[1,t.MYSTICAL_FIRE],[1,t.HEAL_PULSE],[1,t.GROWL],[1,t.DISARMING_VOICE],[1,t.DOUBLE_TEAM],[1,t.CONFUSION],[9,t.HYPNOSIS],[12,t.DRAINING_KISS],[15,t.TELEPORT],[18,t.PSYBEAM],[23,t.LIFE_DEW],[28,t.WISH],[35,t.CALM_MIND],[42,t.PSYCHIC],[49,t.MOONBLAST],[56,t.DREAM_EATER],[63,t.FUTURE_SIGHT]],[e.SURSKIT]:[[1,t.WATER_GUN],[6,t.QUICK_ATTACK],[9,t.SWEET_SCENT],[14,t.SOAK],[17,t.BUBBLE_BEAM],[22,t.AGILITY],[25,t.MIST],[25,t.HAZE],[35,t.BATON_PASS],[38,t.STICKY_WEB]],[e.MASQUERAIN]:[[w,t.BATON_PASS],[w,t.STICKY_WEB],[1,t.WHIRLWIND],[1,t.WATER_GUN],[1,t.QUICK_ATTACK],[1,t.SWEET_SCENT],[1,t.SOAK],[1,t.BUBBLE_BEAM],[1,t.AGILITY],[1,t.MIST],[1,t.HAZE],[1,t.OMINOUS_WIND],[17,t.GUST],[22,t.SCARY_FACE],[22,t.AIR_CUTTER],[26,t.STUN_SPORE],[32,t.AIR_SLASH],[38,t.GIGA_DRAIN],[44,t.BUG_BUZZ],[52,t.QUIVER_DANCE]],[e.SHROOMISH]:[[1,t.ABSORB],[1,t.TACKLE],[5,t.STUN_SPORE],[8,t.LEECH_SEED],[12,t.MEGA_DRAIN],[15,t.HEADBUTT],[19,t.POISON_POWDER],[26,t.GIGA_DRAIN],[29,t.GROWTH],[33,t.TOXIC],[36,t.SEED_BOMB],[40,t.SPORE]],[e.BRELOOM]:[[Z,t.MACH_PUNCH],[w,t.SPORE],[1,t.POISON_POWDER],[1,t.GIGA_DRAIN],[1,t.GROWTH],[1,t.TOXIC],[1,t.ABSORB],[1,t.TACKLE],[1,t.STUN_SPORE],[1,t.LEECH_SEED],[12,t.MEGA_DRAIN],[15,t.HEADBUTT],[19,t.FEINT],[22,t.COUNTER],[28,t.FORCE_PALM],[33,t.WORRY_SEED],[39,t.BRICK_BREAK],[44,t.SEED_BOMB],[50,t.DYNAMIC_PUNCH],[55,t.FOCUS_PUNCH]],[e.SLAKOTH]:[[1,t.SCRATCH],[1,t.YAWN],[6,t.ENCORE],[9,t.SLACK_OFF],[14,t.HEADBUTT],[17,t.AMNESIA],[22,t.COVET],[25,t.THROAT_CHOP],[30,t.COUNTER],[33,t.FLAIL],[38,t.PLAY_ROUGH]],[e.VIGOROTH]:[[w,t.PLAY_ROUGH],[1,t.SCRATCH],[1,t.YAWN],[1,t.FOCUS_ENERGY],[1,t.SLACK_OFF],[1,t.ENCORE],[1,t.HEADBUTT],[1,t.AMNESIA],[1,t.COVET],[1,t.FLAIL],[1,t.UPROAR],[14,t.FURY_SWIPES],[17,t.ENDURE],[23,t.SLASH],[27,t.THROAT_CHOP],[33,t.COUNTER],[37,t.FOCUS_PUNCH],[43,t.REVERSAL]],[e.SLAKING]:[[Z,t.SWAGGER],[w,t.PLAY_ROUGH],[w,t.FOCUS_PUNCH],[1,t.SUCKER_PUNCH],[1,t.SCRATCH],[1,t.YAWN],[1,t.FOCUS_ENERGY],[1,t.ENCORE],[1,t.SLACK_OFF],[1,t.UPROAR],[1,t.FURY_SWIPES],[1,t.ENDURE],[1,t.HEADBUTT],[1,t.SLASH],[1,t.REVERSAL],[17,t.AMNESIA],[23,t.COVET],[27,t.THROAT_CHOP],[33,t.COUNTER],[39,t.FLAIL],[45,t.FLING],[52,t.MEGA_KICK],[63,t.HAMMER_ARM]],[e.NINCADA]:[[1,t.SCRATCH],[1,t.SAND_ATTACK],[5,t.HARDEN],[10,t.FALSE_SWIPE],[15,t.MUD_SLAP],[21,t.ABSORB],[25,t.METAL_CLAW],[30,t.FURY_SWIPES],[35,t.MIND_READER],[40,t.DIG]],[e.NINJASK]:[[Z,t.DOUBLE_TEAM],[Z,t.SCREECH],[Z,t.FURY_CUTTER],[1,t.BATON_PASS],[1,t.AERIAL_ACE],[1,t.MUD_SLAP],[1,t.METAL_CLAW],[1,t.DIG],[1,t.SAND_ATTACK],[1,t.SCRATCH],[1,t.HARDEN],[1,t.FALSE_SWIPE],[15,t.AGILITY],[23,t.ABSORB],[29,t.BUG_BITE],[36,t.FURY_SWIPES],[43,t.MIND_READER],[50,t.SLASH],[57,t.SWORDS_DANCE],[64,t.X_SCISSOR]],[e.SHEDINJA]:[[1,t.SHADOW_CLAW],[1,t.GRUDGE],[1,t.MUD_SLAP],[1,t.METAL_CLAW],[1,t.DIG],[1,t.SCRATCH],[1,t.SAND_ATTACK],[1,t.HARDEN],[1,t.FALSE_SWIPE],[15,t.CONFUSE_RAY],[23,t.ABSORB],[29,t.SHADOW_SNEAK],[36,t.FURY_SWIPES],[43,t.MIND_READER],[50,t.SHADOW_BALL],[57,t.SPITE],[64,t.PHANTOM_FORCE]],[e.WHISMUR]:[[1,t.ASTONISH],[1,t.POUND],[5,t.ECHOED_VOICE],[10,t.HOWL],[15,t.REST],[15,t.SLEEP_TALK],[21,t.STOMP],[25,t.ROAR],[30,t.SUPERSONIC],[35,t.UPROAR],[40,t.SCREECH],[45,t.HYPER_VOICE]],[e.LOUDRED]:[[Z,t.BITE],[1,t.ASTONISH],[1,t.POUND],[1,t.ECHOED_VOICE],[1,t.HOWL],[15,t.REST],[15,t.SLEEP_TALK],[23,t.STOMP],[29,t.ROAR],[36,t.SUPERSONIC],[43,t.UPROAR],[50,t.SCREECH],[57,t.HYPER_VOICE]],[e.EXPLOUD]:[[Z,t.CRUNCH],[1,t.BITE],[1,t.ICE_FANG],[1,t.FIRE_FANG],[1,t.THUNDER_FANG],[1,t.ASTONISH],[1,t.POUND],[1,t.ECHOED_VOICE],[1,t.HOWL],[15,t.REST],[15,t.SLEEP_TALK],[23,t.STOMP],[29,t.ROAR],[36,t.SUPERSONIC],[45,t.UPROAR],[54,t.SCREECH],[63,t.HYPER_VOICE],[72,t.BOOMBURST],[81,t.HYPER_BEAM]],[e.MAKUHITA]:[[1,t.TACKLE],[1,t.FOCUS_ENERGY],[4,t.SAND_ATTACK],[7,t.ARM_THRUST],[10,t.FAKE_OUT],[13,t.FORCE_PALM],[16,t.WHIRLWIND],[19,t.KNOCK_OFF],[22,t.BULK_UP],[25,t.BELLY_DRUM],[28,t.DETECT],[31,t.SEISMIC_TOSS],[34,t.FOCUS_PUNCH],[37,t.ENDURE],[40,t.CLOSE_COMBAT],[43,t.REVERSAL],[46,t.HEAVY_SLAM]],[e.HARIYAMA]:[[1,t.BRINE],[1,t.TACKLE],[1,t.FOCUS_ENERGY],[1,t.SAND_ATTACK],[1,t.ARM_THRUST],[10,t.FAKE_OUT],[13,t.FORCE_PALM],[16,t.WHIRLWIND],[19,t.KNOCK_OFF],[22,t.BULK_UP],[26,t.BELLY_DRUM],[30,t.DETECT],[34,t.SEISMIC_TOSS],[38,t.FOCUS_PUNCH],[42,t.ENDURE],[46,t.CLOSE_COMBAT],[50,t.REVERSAL],[54,t.HEAVY_SLAM],[60,t.HEADLONG_RUSH]],[e.AZURILL]:[[1,t.SPLASH],[1,t.WATER_GUN],[1,t.TAIL_WHIP],[3,t.HELPING_HAND],[6,t.BUBBLE_BEAM],[9,t.CHARM],[12,t.SLAM],[15,t.BOUNCE]],[e.NOSEPASS]:[[1,t.TACKLE],[4,t.HARDEN],[7,t.BLOCK],[10,t.ROCK_THROW],[13,t.THUNDER_WAVE],[16,t.REST],[19,t.SPARK],[22,t.ROCK_SLIDE],[25,t.POWER_GEM],[28,t.ROCK_BLAST],[31,t.DISCHARGE],[34,t.SANDSTORM],[37,t.EARTH_POWER],[40,t.STONE_EDGE],[43,t.LOCK_ON],[43,t.ZAP_CANNON]],[e.SKITTY]:[[1,t.FAKE_OUT],[1,t.GROWL],[1,t.TAIL_WHIP],[4,t.TACKLE],[7,t.SING],[10,t.ATTRACT],[13,t.DISARMING_VOICE],[16,t.FURY_SWIPES],[19,t.COPYCAT],[22,t.PAYBACK],[25,t.CHARM],[31,t.FACADE],[34,t.COVET],[37,t.HEAL_BELL],[40,t.DOUBLE_EDGE],[43,t.BABY_DOLL_EYES],[46,t.PLAY_ROUGH]],[e.DELCATTY]:[[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.FAKE_OUT],[1,t.TACKLE],[1,t.SING],[1,t.ATTRACT],[1,t.DISARMING_VOICE],[1,t.FURY_SWIPES],[1,t.COPYCAT],[1,t.PAYBACK],[1,t.CHARM],[1,t.FACADE],[1,t.COVET],[1,t.HEAL_BELL],[1,t.DOUBLE_EDGE],[1,t.BABY_DOLL_EYES],[1,t.PLAY_ROUGH]],[e.SABLEYE]:[[1,t.LEER],[1,t.SCRATCH],[3,t.ASTONISH],[9,t.SHADOW_SNEAK],[12,t.FAKE_OUT],[15,t.DISABLE],[18,t.DETECT],[21,t.NIGHT_SHADE],[24,t.FURY_SWIPES],[27,t.KNOCK_OFF],[30,t.QUASH],[33,t.SHADOW_CLAW],[36,t.MEAN_LOOK],[39,t.POWER_GEM],[42,t.ZEN_HEADBUTT],[45,t.SHADOW_BALL],[48,t.FOUL_PLAY]],[e.MAWILE]:[[1,t.ASTONISH],[1,t.GROWL],[4,t.FAIRY_WIND],[8,t.BATON_PASS],[12,t.BITE],[16,t.STOCKPILE],[16,t.SPIT_UP],[16,t.SWALLOW],[20,t.SUCKER_PUNCH],[24,t.IRON_DEFENSE],[28,t.CRUNCH],[32,t.SWEET_SCENT],[36,t.IRON_HEAD],[40,t.TAUNT],[44,t.FAKE_TEARS],[48,t.PLAY_ROUGH]],[e.ARON]:[[1,t.TACKLE],[1,t.HARDEN],[4,t.METAL_CLAW],[8,t.ROCK_TOMB],[12,t.ROAR],[16,t.HEADBUTT],[20,t.PROTECT],[24,t.ROCK_SLIDE],[28,t.IRON_HEAD],[33,t.METAL_SOUND],[36,t.TAKE_DOWN],[40,t.AUTOTOMIZE],[44,t.IRON_TAIL],[48,t.IRON_DEFENSE],[52,t.HEAVY_SLAM],[56,t.DOUBLE_EDGE],[60,t.METAL_BURST]],[e.LAIRON]:[[1,t.TACKLE],[1,t.HARDEN],[1,t.METAL_CLAW],[1,t.ROCK_TOMB],[12,t.ROAR],[16,t.HEADBUTT],[20,t.PROTECT],[24,t.ROCK_SLIDE],[28,t.IRON_HEAD],[35,t.METAL_SOUND],[40,t.TAKE_DOWN],[46,t.AUTOTOMIZE],[52,t.IRON_TAIL],[58,t.IRON_DEFENSE],[64,t.HEAVY_SLAM],[70,t.DOUBLE_EDGE],[76,t.METAL_BURST]],[e.AGGRON]:[[1,t.TACKLE],[1,t.HARDEN],[1,t.METAL_CLAW],[1,t.ROCK_TOMB],[12,t.ROAR],[16,t.HEADBUTT],[20,t.PROTECT],[24,t.ROCK_SLIDE],[28,t.IRON_HEAD],[35,t.METAL_SOUND],[40,t.TAKE_DOWN],[48,t.AUTOTOMIZE],[56,t.IRON_TAIL],[64,t.IRON_DEFENSE],[72,t.HEAVY_SLAM],[80,t.DOUBLE_EDGE],[88,t.METAL_BURST]],[e.MEDITITE]:[[1,t.CONFUSION],[1,t.WORK_UP],[1,t.BIDE],[9,t.DETECT],[12,t.ENDURE],[15,t.FEINT],[17,t.FORCE_PALM],[20,t.PSYBEAM],[23,t.CALM_MIND],[25,t.ZEN_HEADBUTT],[28,t.HIGH_JUMP_KICK],[31,t.PSYCH_UP],[33,t.ACUPRESSURE],[36,t.POWER_TRICK],[39,t.REVERSAL],[41,t.RECOVER],[44,t.COUNTER]],[e.MEDICHAM]:[[1,t.FIRE_PUNCH],[1,t.ICE_PUNCH],[1,t.THUNDER_PUNCH],[1,t.CONFUSION],[1,t.DETECT],[1,t.WORK_UP],[1,t.BIDE],[1,t.REVERSAL],[12,t.ENDURE],[15,t.FEINT],[17,t.FORCE_PALM],[20,t.PSYBEAM],[23,t.CALM_MIND],[25,t.ZEN_HEADBUTT],[28,t.HIGH_JUMP_KICK],[31,t.PSYCH_UP],[33,t.ACUPRESSURE],[36,t.POWER_TRICK],[47,t.RECOVER],[53,t.COUNTER],[53,t.AXE_KICK]],[e.ELECTRIKE]:[[1,t.TACKLE],[1,t.THUNDER_WAVE],[4,t.LEER],[8,t.HOWL],[12,t.QUICK_ATTACK],[16,t.SHOCK_WAVE],[20,t.BITE],[24,t.THUNDER_FANG],[28,t.ROAR],[32,t.DISCHARGE],[36,t.CHARGE],[40,t.WILD_CHARGE],[44,t.THUNDER]],[e.MANECTRIC]:[[1,t.FIRE_FANG],[1,t.TACKLE],[1,t.THUNDER_WAVE],[1,t.LEER],[1,t.HOWL],[12,t.QUICK_ATTACK],[16,t.SHOCK_WAVE],[20,t.BITE],[24,t.THUNDER_FANG],[30,t.ROAR],[36,t.DISCHARGE],[42,t.CHARGE],[48,t.WILD_CHARGE],[54,t.THUNDER],[60,t.ELECTRIC_TERRAIN]],[e.PLUSLE]:[[w,t.NUZZLE],[1,t.PLAY_NICE],[1,t.GROWL],[1,t.THUNDER_WAVE],[1,t.QUICK_ATTACK],[4,t.HELPING_HAND],[7,t.SPARK],[10,t.ENCORE],[13,t.SWITCHEROO],[16,t.SWIFT],[19,t.ELECTRO_BALL],[22,t.COPYCAT],[26,t.CHARGE],[31,t.DISCHARGE],[34,t.BATON_PASS],[37,t.AGILITY],[40,t.LAST_RESORT],[43,t.THUNDER],[46,t.NASTY_PLOT],[49,t.ENTRAINMENT]],[e.MINUN]:[[w,t.NUZZLE],[1,t.PLAY_NICE],[1,t.GROWL],[1,t.THUNDER_WAVE],[1,t.QUICK_ATTACK],[4,t.HELPING_HAND],[7,t.SPARK],[10,t.ENCORE],[13,t.SWITCHEROO],[16,t.SWIFT],[19,t.ELECTRO_BALL],[22,t.COPYCAT],[26,t.CHARGE],[31,t.DISCHARGE],[34,t.BATON_PASS],[37,t.AGILITY],[40,t.LAST_RESORT],[43,t.THUNDER],[46,t.NASTY_PLOT],[49,t.ENTRAINMENT]],[e.VOLBEAT]:[[1,t.FLASH],[1,t.TACKLE],[5,t.DOUBLE_TEAM],[8,t.CONFUSE_RAY],[12,t.QUICK_ATTACK],[15,t.STRUGGLE_BUG],[19,t.MOONLIGHT],[22,t.TAIL_GLOW],[26,t.PROTECT],[29,t.ZEN_HEADBUTT],[33,t.HELPING_HAND],[36,t.BUG_BUZZ],[40,t.PLAY_ROUGH],[43,t.DOUBLE_EDGE],[47,t.INFESTATION]],[e.ILLUMISE]:[[1,t.TACKLE],[1,t.PLAY_NICE],[5,t.SWEET_SCENT],[9,t.CHARM],[12,t.QUICK_ATTACK],[15,t.STRUGGLE_BUG],[19,t.MOONLIGHT],[22,t.WISH],[26,t.ENCORE],[29,t.FLATTER],[33,t.ZEN_HEADBUTT],[36,t.HELPING_HAND],[40,t.BUG_BUZZ],[43,t.PLAY_ROUGH],[47,t.INFESTATION]],[e.ROSELIA]:[[Z,t.POISON_STING],[1,t.ABSORB],[1,t.GROWTH],[1,t.STUN_SPORE],[1,t.WORRY_SEED],[5,t.MEGA_DRAIN],[10,t.LEECH_SEED],[15,t.MAGICAL_LEAF],[20,t.TOXIC_SPIKES],[25,t.SWEET_SCENT],[30,t.GIGA_DRAIN],[35,t.SYNTHESIS],[40,t.TOXIC],[45,t.PETAL_BLIZZARD],[50,t.AROMATHERAPY],[55,t.INGRAIN],[60,t.PETAL_DANCE]],[e.GULPIN]:[[1,t.POUND],[5,t.YAWN],[8,t.POISON_GAS],[10,t.SLUDGE],[12,t.AMNESIA],[17,t.ACID_SPRAY],[20,t.ENCORE],[25,t.TOXIC],[28,t.STOCKPILE],[28,t.SPIT_UP],[28,t.SWALLOW],[33,t.SLUDGE_BOMB],[36,t.GASTRO_ACID],[41,t.BELCH],[44,t.PAIN_SPLIT],[49,t.GUNK_SHOT]],[e.SWALOT]:[[Z,t.BODY_SLAM],[1,t.GUNK_SHOT],[1,t.POUND],[1,t.YAWN],[1,t.POISON_GAS],[1,t.WRING_OUT],[1,t.SLUDGE],[1,t.PAIN_SPLIT],[12,t.AMNESIA],[17,t.ACID_SPRAY],[20,t.ENCORE],[25,t.TOXIC],[30,t.STOCKPILE],[30,t.SPIT_UP],[30,t.SWALLOW],[37,t.SLUDGE_BOMB],[42,t.GASTRO_ACID],[49,t.BELCH]],[e.CARVANHA]:[[1,t.AQUA_JET],[1,t.LEER],[4,t.POISON_FANG],[8,t.FOCUS_ENERGY],[12,t.SCARY_FACE],[16,t.BITE],[20,t.ICE_FANG],[24,t.SCREECH],[28,t.SWAGGER],[32,t.CRUNCH],[36,t.AGILITY],[40,t.LIQUIDATION],[44,t.TAKE_DOWN]],[e.SHARPEDO]:[[Z,t.SLASH],[1,t.NIGHT_SLASH],[1,t.AQUA_JET],[1,t.LEER],[1,t.POISON_FANG],[1,t.FOCUS_ENERGY],[12,t.SCARY_FACE],[16,t.BITE],[20,t.ICE_FANG],[24,t.SCREECH],[28,t.SWAGGER],[34,t.CRUNCH],[40,t.AGILITY],[46,t.LIQUIDATION],[52,t.TAKE_DOWN]],[e.WAILMER]:[[1,t.SPLASH],[1,t.TACKLE],[3,t.GROWL],[6,t.ASTONISH],[12,t.WATER_GUN],[15,t.MIST],[18,t.WATER_PULSE],[21,t.HEAVY_SLAM],[24,t.BRINE],[27,t.WHIRLPOOL],[30,t.DIVE],[33,t.BOUNCE],[36,t.BODY_SLAM],[39,t.REST],[42,t.AMNESIA],[45,t.HYDRO_PUMP],[48,t.WATER_SPOUT]],[e.WAILORD]:[[1,t.SOAK],[1,t.NOBLE_ROAR],[1,t.SPLASH],[1,t.TACKLE],[1,t.GROWL],[1,t.ASTONISH],[1,t.WATER_GUN],[15,t.MIST],[18,t.WATER_PULSE],[21,t.HEAVY_SLAM],[24,t.BRINE],[27,t.WHIRLPOOL],[30,t.DIVE],[33,t.BOUNCE],[36,t.BODY_SLAM],[39,t.REST],[44,t.AMNESIA],[49,t.HYDRO_PUMP],[54,t.WATER_SPOUT]],[e.NUMEL]:[[1,t.GROWL],[1,t.TACKLE],[5,t.EMBER],[8,t.FOCUS_ENERGY],[12,t.BULLDOZE],[15,t.INCINERATE],[19,t.AMNESIA],[22,t.LAVA_PLUME],[26,t.EARTH_POWER],[29,t.CURSE],[31,t.TAKE_DOWN],[40,t.EARTHQUAKE],[43,t.FLAMETHROWER],[47,t.DOUBLE_EDGE]],[e.CAMERUPT]:[[Z,t.ROCK_SLIDE],[w,t.FLAMETHROWER],[w,t.DOUBLE_EDGE],[1,t.FISSURE],[1,t.ERUPTION],[1,t.GROWL],[1,t.TACKLE],[1,t.EMBER],[1,t.FOCUS_ENERGY],[12,t.BULLDOZE],[15,t.INCINERATE],[19,t.AMNESIA],[22,t.LAVA_PLUME],[26,t.EARTH_POWER],[29,t.CURSE],[31,t.TAKE_DOWN],[39,t.YAWN],[46,t.EARTHQUAKE]],[e.TORKOAL]:[[1,t.SMOG],[1,t.EMBER],[4,t.WITHDRAW],[8,t.RAPID_SPIN],[12,t.SMOKESCREEN],[16,t.CLEAR_SMOG],[20,t.FLAME_WHEEL],[24,t.PROTECT],[28,t.LAVA_PLUME],[32,t.BODY_SLAM],[36,t.IRON_DEFENSE],[40,t.FLAMETHROWER],[44,t.CURSE],[48,t.HEAT_WAVE],[52,t.AMNESIA],[56,t.INFERNO],[60,t.SHELL_SMASH],[64,t.ERUPTION]],[e.SPOINK]:[[1,t.SPLASH],[5,t.CONFUSION],[10,t.GROWL],[14,t.PSYBEAM],[18,t.PSYCH_UP],[22,t.CONFUSE_RAY],[29,t.REST],[29,t.POWER_GEM],[33,t.SNORE],[38,t.PSYSHOCK],[40,t.PAYBACK],[44,t.PSYCHIC],[50,t.BOUNCE]],[e.GRUMPIG]:[[Z,t.TEETER_DANCE],[1,t.BELCH],[1,t.SPLASH],[1,t.CONFUSION],[1,t.GROWL],[1,t.PSYBEAM],[18,t.PSYCH_UP],[22,t.CONFUSE_RAY],[26,t.ZEN_HEADBUTT],[29,t.POWER_GEM],[35,t.REST],[35,t.SNORE],[42,t.PSYSHOCK],[46,t.PAYBACK],[52,t.PSYCHIC],[60,t.BOUNCE]],[e.SPINDA]:[[1,t.TACKLE],[5,t.COPYCAT],[10,t.DIZZY_PUNCH],[14,t.PSYBEAM],[19,t.HYPNOSIS],[23,t.BODY_SLAM],[28,t.SUCKER_PUNCH],[32,t.TEETER_DANCE],[37,t.UPROAR],[41,t.PSYCH_UP],[46,t.DOUBLE_EDGE],[50,t.FLAIL],[55,t.THRASH]],[e.TRAPINCH]:[[1,t.SAND_ATTACK],[1,t.ASTONISH],[1,t.BIDE],[1,t.FEINT_ATTACK],[8,t.BITE],[12,t.MUD_SLAP],[16,t.SAND_TOMB],[20,t.BULLDOZE],[24,t.DIG],[28,t.CRUNCH],[32,t.SANDSTORM],[36,t.EARTH_POWER],[40,t.EARTHQUAKE],[44,t.SUPERPOWER],[48,t.FISSURE]],[e.VIBRAVA]:[[Z,t.DRAGON_BREATH],[w,t.SUPERSONIC],[w,t.FISSURE],[w,t.CRUNCH],[w,t.SUPERPOWER],[w,t.ASTONISH],[w,t.BULLDOZE],[1,t.DIG],[1,t.SAND_ATTACK],[1,t.BITE],[1,t.BIDE],[1,t.FEINT_ATTACK],[12,t.MUD_SLAP],[16,t.SAND_TOMB],[20,t.DRAGON_TAIL],[24,t.SCREECH],[28,t.BUG_BUZZ],[32,t.SANDSTORM],[38,t.EARTH_POWER],[44,t.EARTHQUAKE],[50,t.UPROAR],[56,t.DRAGON_RUSH],[62,t.BOOMBURST]],[e.FLYGON]:[[Z,t.DRAGON_CLAW],[w,t.BITE],[w,t.FISSURE],[w,t.DIG],[w,t.CRUNCH],[w,t.SUPERPOWER],[w,t.ASTONISH],[w,t.DRAGON_DANCE],[w,t.FEINT],[1,t.DRAGON_BREATH],[1,t.BULLDOZE],[1,t.SAND_ATTACK],[1,t.SUPERSONIC],[1,t.BIDE],[1,t.FEINT_ATTACK],[12,t.MUD_SLAP],[16,t.SAND_TOMB],[20,t.DRAGON_TAIL],[24,t.SCREECH],[28,t.BUG_BUZZ],[32,t.SANDSTORM],[38,t.EARTH_POWER],[44,t.EARTHQUAKE],[52,t.UPROAR],[60,t.DRAGON_RUSH],[68,t.BOOMBURST]],[e.CACNEA]:[[1,t.POISON_STING],[1,t.LEER],[4,t.ABSORB],[7,t.GROWTH],[10,t.LEECH_SEED],[13,t.SAND_ATTACK],[16,t.BULLET_SEED],[19,t.POWER_TRIP],[22,t.INGRAIN],[26,t.PAYBACK],[30,t.SPIKES],[34,t.SUCKER_PUNCH],[38,t.PIN_MISSILE],[42,t.ENERGY_BALL],[46,t.COTTON_SPORE],[50,t.SANDSTORM],[54,t.DESTINY_BOND]],[e.CACTURNE]:[[Z,t.SPIKY_SHIELD],[1,t.DESTINY_BOND],[1,t.POISON_STING],[1,t.LEER],[1,t.ABSORB],[1,t.GROWTH],[10,t.LEECH_SEED],[13,t.SAND_ATTACK],[16,t.BULLET_SEED],[19,t.POWER_TRIP],[22,t.INGRAIN],[26,t.PAYBACK],[30,t.SPIKES],[35,t.SUCKER_PUNCH],[38,t.PIN_MISSILE],[44,t.ENERGY_BALL],[49,t.COTTON_SPORE],[54,t.SANDSTORM]],[e.SWABLU]:[[1,t.PECK],[1,t.GROWL],[4,t.DISARMING_VOICE],[8,t.MIST],[12,t.FURY_ATTACK],[16,t.ROUND],[20,t.DRAGON_BREATH],[24,t.SAFEGUARD],[28,t.SING],[32,t.COTTON_GUARD],[36,t.TAKE_DOWN],[40,t.MOONBLAST],[44,t.PERISH_SONG]],[e.ALTARIA]:[[Z,t.DRAGON_PULSE],[1,t.PLUCK],[1,t.PECK],[1,t.GROWL],[1,t.DISARMING_VOICE],[1,t.MIST],[12,t.FURY_ATTACK],[16,t.ROUND],[20,t.DRAGON_BREATH],[24,t.SAFEGUARD],[28,t.SING],[32,t.COTTON_GUARD],[38,t.TAKE_DOWN],[44,t.MOONBLAST],[50,t.PERISH_SONG],[56,t.SKY_ATTACK]],[e.ZANGOOSE]:[[w,t.DOUBLE_KICK],[w,t.DISABLE],[w,t.COUNTER],[w,t.FURY_SWIPES],[w,t.CURSE],[w,t.FLAIL],[w,t.BELLY_DRUM],[w,t.FEINT],[w,t.NIGHT_SLASH],[w,t.DOUBLE_HIT],[w,t.QUICK_GUARD],[w,t.FINAL_GAMBIT],[1,t.SCRATCH],[1,t.LEER],[5,t.QUICK_ATTACK],[8,t.FURY_CUTTER],[12,t.METAL_CLAW],[15,t.HONE_CLAWS],[19,t.SLASH],[22,t.POWER_TRIP],[26,t.CRUSH_CLAW],[29,t.FALSE_SWIPE],[33,t.SWITCHEROO],[36,t.DETECT],[40,t.X_SCISSOR],[43,t.TAUNT],[47,t.SWORDS_DANCE],[50,t.CLOSE_COMBAT]],[e.SEVIPER]:[[1,t.WRAP],[1,t.SWAGGER],[4,t.BITE],[6,t.LICK],[9,t.POISON_TAIL],[11,t.FEINT],[14,t.SCREECH],[19,t.GLARE],[21,t.POISON_FANG],[24,t.VENOSHOCK],[29,t.GASTRO_ACID],[31,t.POISON_JAB],[34,t.HAZE],[39,t.CRUNCH],[41,t.BELCH],[44,t.COIL],[46,t.SLUDGE_BOMB]],[e.LUNATONE]:[[1,t.MOONBLAST],[1,t.MOONLIGHT],[1,t.TACKLE],[1,t.HARDEN],[1,t.CONFUSION],[1,t.ROCK_THROW],[5,t.HYPNOSIS],[10,t.ROCK_POLISH],[15,t.ROCK_SLIDE],[20,t.PSYSHOCK],[25,t.COSMIC_POWER],[30,t.PSYCHIC],[35,t.STONE_EDGE],[40,t.FUTURE_SIGHT],[45,t.MAGIC_ROOM],[50,t.EXPLOSION]],[e.SOLROCK]:[[1,t.FLARE_BLITZ],[1,t.MORNING_SUN],[1,t.TACKLE],[1,t.HARDEN],[1,t.CONFUSION],[1,t.ROCK_THROW],[5,t.HYPNOSIS],[10,t.ROCK_POLISH],[15,t.ROCK_SLIDE],[20,t.ZEN_HEADBUTT],[25,t.COSMIC_POWER],[30,t.PSYCHIC],[35,t.STONE_EDGE],[40,t.SOLAR_BEAM],[45,t.WONDER_ROOM],[50,t.EXPLOSION]],[e.BARBOACH]:[[1,t.MUD_SLAP],[1,t.WATER_GUN],[6,t.REST],[6,t.SNORE],[12,t.WATER_PULSE],[18,t.AMNESIA],[24,t.AQUA_TAIL],[31,t.MUDDY_WATER],[36,t.EARTHQUAKE],[42,t.FUTURE_SIGHT],[48,t.FISSURE]],[e.WHISCASH]:[[Z,t.THRASH],[1,t.BELCH],[1,t.ZEN_HEADBUTT],[1,t.TICKLE],[1,t.MUD_SLAP],[1,t.WATER_GUN],[1,t.REST],[1,t.SNORE],[12,t.WATER_PULSE],[18,t.AMNESIA],[24,t.AQUA_TAIL],[33,t.MUDDY_WATER],[40,t.EARTHQUAKE],[48,t.FUTURE_SIGHT],[56,t.FISSURE]],[e.CORPHISH]:[[1,t.WATER_GUN],[1,t.HARDEN],[4,t.LEER],[8,t.TAUNT],[12,t.BUBBLE_BEAM],[16,t.KNOCK_OFF],[20,t.DOUBLE_HIT],[24,t.PROTECT],[28,t.NIGHT_SLASH],[32,t.RAZOR_SHELL],[36,t.SWORDS_DANCE],[40,t.CRUNCH],[44,t.CRABHAMMER],[48,t.ENDEAVOR],[52,t.GUILLOTINE]],[e.CRAWDAUNT]:[[Z,t.SWIFT],[1,t.WATER_GUN],[1,t.HARDEN],[1,t.LEER],[1,t.TAUNT],[12,t.BUBBLE_BEAM],[16,t.KNOCK_OFF],[20,t.DOUBLE_HIT],[24,t.PROTECT],[28,t.NIGHT_SLASH],[34,t.RAZOR_SHELL],[40,t.SWORDS_DANCE],[46,t.CRUNCH],[52,t.CRABHAMMER],[58,t.ENDEAVOR],[64,t.GUILLOTINE]],[e.BALTOY]:[[1,t.HARDEN],[1,t.MUD_SLAP],[3,t.RAPID_SPIN],[6,t.CONFUSION],[9,t.ROCK_TOMB],[12,t.POWER_TRICK],[15,t.PSYBEAM],[18,t.ANCIENT_POWER],[21,t.IMPRISON],[24,t.COSMIC_POWER],[27,t.EXTRASENSORY],[30,t.EARTH_POWER],[33,t.SELF_DESTRUCT],[36,t.GUARD_SPLIT],[36,t.POWER_SPLIT],[39,t.SANDSTORM],[42,t.EXPLOSION]],[e.CLAYDOL]:[[Z,t.HYPER_BEAM],[1,t.TELEPORT],[1,t.HARDEN],[1,t.MUD_SLAP],[1,t.RAPID_SPIN],[1,t.CONFUSION],[9,t.ROCK_TOMB],[12,t.POWER_TRICK],[15,t.PSYBEAM],[18,t.ANCIENT_POWER],[21,t.IMPRISON],[24,t.COSMIC_POWER],[27,t.EXTRASENSORY],[30,t.EARTH_POWER],[33,t.SELF_DESTRUCT],[38,t.GUARD_SPLIT],[38,t.POWER_SPLIT],[43,t.SANDSTORM],[48,t.EXPLOSION]],[e.LILEEP]:[[1,t.WRAP],[1,t.ASTONISH],[1,t.CONSTRICT],[4,t.ACID],[8,t.CONFUSE_RAY],[12,t.INGRAIN],[16,t.ANCIENT_POWER],[20,t.MEGA_DRAIN],[24,t.BRINE],[28,t.AMNESIA],[32,t.GASTRO_ACID],[36,t.GIGA_DRAIN],[41,t.STOCKPILE],[41,t.SPIT_UP],[41,t.SWALLOW],[44,t.ENERGY_BALL]],[e.CRADILY]:[[1,t.LEECH_SEED],[1,t.WRAP],[1,t.ASTONISH],[1,t.CONSTRICT],[1,t.ACID],[1,t.CONFUSE_RAY],[12,t.INGRAIN],[16,t.ANCIENT_POWER],[20,t.MEGA_DRAIN],[24,t.BRINE],[28,t.AMNESIA],[32,t.GASTRO_ACID],[36,t.GIGA_DRAIN],[43,t.STOCKPILE],[43,t.SPIT_UP],[43,t.SWALLOW],[48,t.ENERGY_BALL]],[e.ANORITH]:[[1,t.FURY_CUTTER],[1,t.HARDEN],[4,t.WATER_GUN],[8,t.SMACK_DOWN],[12,t.METAL_CLAW],[16,t.ANCIENT_POWER],[20,t.BUG_BITE],[24,t.BRINE],[28,t.SLASH],[32,t.CRUSH_CLAW],[36,t.ROCK_BLAST],[41,t.PROTECT],[44,t.X_SCISSOR]],[e.ARMALDO]:[[1,t.FURY_CUTTER],[1,t.HARDEN],[1,t.WATER_GUN],[1,t.SMACK_DOWN],[12,t.METAL_CLAW],[16,t.ANCIENT_POWER],[20,t.BUG_BITE],[24,t.BRINE],[28,t.SLASH],[32,t.CRUSH_CLAW],[36,t.ROCK_BLAST],[43,t.PROTECT],[48,t.X_SCISSOR]],[e.FEEBAS]:[[1,t.SPLASH],[15,t.TACKLE],[25,t.FLAIL]],[e.MILOTIC]:[[Z,t.WATER_PULSE],[1,t.FLAIL],[1,t.SPLASH],[1,t.TACKLE],[1,t.WRAP],[1,t.WATER_GUN],[1,t.WATER_SPORT],[4,t.DISARMING_VOICE],[8,t.TWISTER],[12,t.AQUA_RING],[16,t.ATTRACT],[20,t.LIFE_DEW],[24,t.DRAGON_TAIL],[28,t.RECOVER],[32,t.AQUA_TAIL],[36,t.SAFEGUARD],[40,t.SURF],[44,t.RAIN_DANCE],[48,t.COIL],[52,t.HYDRO_PUMP]],[e.CASTFORM]:[[1,t.TACKLE],[10,t.WATER_GUN],[10,t.EMBER],[10,t.POWDER_SNOW],[15,t.HEADBUTT],[20,t.RAIN_DANCE],[20,t.SUNNY_DAY],[20,t.HAIL],[25,t.WEATHER_BALL],[35,t.HYDRO_PUMP],[35,t.FIRE_BLAST],[35,t.BLIZZARD],[45,t.HURRICANE]],[e.KECLEON]:[[1,t.THIEF],[1,t.TAIL_WHIP],[1,t.ASTONISH],[1,t.LICK],[1,t.SCRATCH],[4,t.BIND],[7,t.SHADOW_SNEAK],[10,t.FEINT],[13,t.FURY_SWIPES],[16,t.DISABLE],[18,t.PSYBEAM],[21,t.ANCIENT_POWER],[25,t.SLASH],[30,t.DETECT],[33,t.SHADOW_CLAW],[38,t.SCREECH],[42,t.SUBSTITUTE],[46,t.SUCKER_PUNCH],[50,t.FOUL_PLAY]],[e.SHUPPET]:[[1,t.ASTONISH],[1,t.PURSUIT],[4,t.SCREECH],[7,t.NIGHT_SHADE],[10,t.SPITE],[16,t.WILL_O_WISP],[19,t.SHADOW_SNEAK],[22,t.HEX],[26,t.CURSE],[30,t.SHADOW_BALL],[34,t.ROLE_PLAY],[38,t.SUCKER_PUNCH],[42,t.TRICK],[48,t.PHANTOM_FORCE]],[e.BANETTE]:[[Z,t.KNOCK_OFF],[1,t.ASTONISH],[1,t.PURSUIT],[1,t.SCREECH],[1,t.NIGHT_SHADE],[1,t.SPITE],[16,t.WILL_O_WISP],[19,t.SHADOW_SNEAK],[22,t.HEX],[26,t.CURSE],[30,t.SHADOW_BALL],[34,t.ROLE_PLAY],[40,t.SUCKER_PUNCH],[46,t.TRICK],[53,t.PHANTOM_FORCE]],[e.DUSKULL]:[[1,t.ASTONISH],[1,t.LEER],[1,t.PURSUIT],[4,t.DISABLE],[8,t.SHADOW_SNEAK],[12,t.CONFUSE_RAY],[16,t.NIGHT_SHADE],[20,t.PAYBACK],[24,t.WILL_O_WISP],[28,t.MEAN_LOOK],[32,t.HEX],[36,t.CURSE],[40,t.SHADOW_BALL],[44,t.FUTURE_SIGHT]],[e.DUSCLOPS]:[[Z,t.SHADOW_PUNCH],[1,t.FIRE_PUNCH],[1,t.ICE_PUNCH],[1,t.THUNDER_PUNCH],[1,t.GRAVITY],[1,t.BIND],[1,t.ASTONISH],[1,t.LEER],[1,t.PURSUIT],[1,t.DISABLE],[1,t.SHADOW_SNEAK],[12,t.CONFUSE_RAY],[16,t.NIGHT_SHADE],[20,t.PAYBACK],[24,t.WILL_O_WISP],[28,t.MEAN_LOOK],[32,t.HEX],[36,t.CURSE],[42,t.SHADOW_BALL],[48,t.FUTURE_SIGHT]],[e.TROPIUS]:[[1,t.LEAF_STORM],[1,t.GUST],[1,t.LEER],[1,t.GROWTH],[1,t.RAZOR_LEAF],[6,t.SWEET_SCENT],[10,t.STOMP],[16,t.MAGICAL_LEAF],[21,t.WHIRLWIND],[30,t.WIDE_GUARD],[36,t.AIR_SLASH],[41,t.BODY_SLAM],[46,t.OUTRAGE],[50,t.SYNTHESIS],[56,t.SOLAR_BEAM]],[e.CHIMECHO]:[[1,t.HEALING_WISH],[1,t.LAST_RESORT],[1,t.ENTRAINMENT],[1,t.WRAP],[1,t.PSYWAVE],[1,t.GROWL],[1,t.ASTONISH],[1,t.CONFUSION],[1,t.SYNCHRONOISE],[13,t.YAWN],[16,t.STORED_POWER],[19,t.TAKE_DOWN],[22,t.EXTRASENSORY],[27,t.HEAL_BELL],[32,t.UPROAR],[37,t.SAFEGUARD],[42,t.DOUBLE_EDGE],[47,t.HEAL_PULSE]],[e.ABSOL]:[[1,t.QUICK_ATTACK],[1,t.LEER],[5,t.DOUBLE_TEAM],[10,t.KNOCK_OFF],[15,t.DETECT],[20,t.TAUNT],[25,t.SLASH],[30,t.NIGHT_SLASH],[35,t.FOCUS_ENERGY],[40,t.SUCKER_PUNCH],[45,t.SWORDS_DANCE],[50,t.FUTURE_SIGHT],[55,t.PERISH_SONG]],[e.WYNAUT]:[[1,t.COUNTER],[1,t.MIRROR_COAT],[1,t.SAFEGUARD],[1,t.DESTINY_BOND],[1,t.SPLASH],[1,t.CHARM],[1,t.ENCORE],[1,t.AMNESIA]],[e.SNORUNT]:[[1,t.POWDER_SNOW],[1,t.ASTONISH],[1,t.HEADBUTT],[5,t.LEER],[10,t.DOUBLE_TEAM],[15,t.ICE_SHARD],[20,t.PROTECT],[25,t.ICY_WIND],[30,t.FROST_BREATH],[35,t.BITE],[40,t.ICE_FANG],[45,t.SNOWSCAPE],[50,t.WEATHER_BALL],[55,t.CRUNCH],[60,t.BLIZZARD]],[e.GLALIE]:[[Z,t.FREEZE_DRY],[1,t.SHEER_COLD],[1,t.POWDER_SNOW],[1,t.HEADBUTT],[1,t.ASTONISH],[1,t.LEER],[1,t.DOUBLE_TEAM],[1,t.ICE_BALL],[15,t.ICE_SHARD],[20,t.PROTECT],[25,t.ICY_WIND],[30,t.FROST_BREATH],[35,t.BITE],[40,t.ICE_FANG],[47,t.SNOWSCAPE],[54,t.WEATHER_BALL],[61,t.CRUNCH],[68,t.BLIZZARD]],[e.SPHEAL]:[[1,t.ROLLOUT],[1,t.DEFENSE_CURL],[4,t.GROWL],[8,t.WATER_GUN],[12,t.POWDER_SNOW],[16,t.REST],[20,t.SNORE],[24,t.BRINE],[28,t.AURORA_BEAM],[33,t.ENCORE],[36,t.BODY_SLAM],[40,t.SURF],[44,t.BLIZZARD],[48,t.HAIL],[52,t.SHEER_COLD]],[e.SEALEO]:[[Z,t.SWAGGER],[1,t.ROLLOUT],[1,t.DEFENSE_CURL],[1,t.GROWL],[1,t.WATER_GUN],[12,t.POWDER_SNOW],[16,t.REST],[20,t.SNORE],[24,t.BRINE],[28,t.AURORA_BEAM],[35,t.ENCORE],[40,t.BODY_SLAM],[46,t.SURF],[52,t.BLIZZARD],[58,t.HAIL],[64,t.SHEER_COLD]],[e.WALREIN]:[[1,t.SWAGGER],[1,t.CRUNCH],[1,t.ICE_FANG],[1,t.ROLLOUT],[1,t.DEFENSE_CURL],[1,t.GROWL],[1,t.WATER_GUN],[12,t.POWDER_SNOW],[16,t.REST],[20,t.SNORE],[24,t.BRINE],[28,t.AURORA_BEAM],[35,t.ENCORE],[40,t.BODY_SLAM],[48,t.SURF],[56,t.BLIZZARD],[64,t.HAIL],[72,t.SHEER_COLD]],[e.CLAMPERL]:[[1,t.CLAMP],[1,t.WATER_GUN],[1,t.WHIRLPOOL],[1,t.IRON_DEFENSE],[50,t.SHELL_SMASH]],[e.HUNTAIL]:[[1,t.CLAMP],[1,t.WATER_GUN],[1,t.IRON_DEFENSE],[1,t.SHELL_SMASH],[1,t.WHIRLPOOL],[1,t.BITE],[5,t.SCREECH],[9,t.SCARY_FACE],[11,t.RAIN_DANCE],[14,t.WATER_PULSE],[16,t.ICE_FANG],[19,t.BRINE],[23,t.SUCKER_PUNCH],[26,t.DIVE],[29,t.BATON_PASS],[34,t.CRUNCH],[39,t.AQUA_TAIL],[45,t.COIL],[50,t.HYDRO_PUMP]],[e.GOREBYSS]:[[1,t.CLAMP],[1,t.WATER_GUN],[1,t.IRON_DEFENSE],[1,t.SHELL_SMASH],[1,t.WHIRLPOOL],[1,t.CONFUSION],[5,t.RAIN_DANCE],[9,t.AGILITY],[11,t.DRAINING_KISS],[14,t.WATER_PULSE],[16,t.AMNESIA],[19,t.AQUA_RING],[23,t.SAFEGUARD],[26,t.DIVE],[29,t.BATON_PASS],[34,t.PSYCHIC],[39,t.AQUA_TAIL],[45,t.COIL],[50,t.HYDRO_PUMP]],[e.RELICANTH]:[[1,t.TACKLE],[1,t.HARDEN],[5,t.WATER_GUN],[10,t.ANCIENT_POWER],[15,t.YAWN],[20,t.DIVE],[25,t.TAKE_DOWN],[30,t.AQUA_TAIL],[35,t.REST],[40,t.FLAIL],[45,t.HYDRO_PUMP],[50,t.DOUBLE_EDGE],[55,t.HEAD_SMASH]],[e.LUVDISC]:[[1,t.TACKLE],[1,t.CHARM],[4,t.WATER_GUN],[7,t.AGILITY],[13,t.WISH],[17,t.WATER_PULSE],[20,t.ATTRACT],[22,t.DRAINING_KISS],[26,t.FLAIL],[31,t.SWEET_KISS],[34,t.TAKE_DOWN],[37,t.BABY_DOLL_EYES],[40,t.AQUA_RING],[42,t.SOAK],[46,t.HYDRO_PUMP],[49,t.SAFEGUARD]],[e.BAGON]:[[1,t.EMBER],[1,t.LEER],[5,t.BITE],[10,t.DRAGON_BREATH],[15,t.HEADBUTT],[20,t.SCARY_FACE],[25,t.CRUNCH],[31,t.DRAGON_CLAW],[35,t.ZEN_HEADBUTT],[40,t.FOCUS_ENERGY],[45,t.FLAMETHROWER],[50,t.OUTRAGE],[55,t.DOUBLE_EDGE]],[e.SHELGON]:[[Z,t.PROTECT],[1,t.EMBER],[1,t.LEER],[1,t.BITE],[1,t.DRAGON_BREATH],[15,t.HEADBUTT],[20,t.SCARY_FACE],[25,t.CRUNCH],[33,t.DRAGON_CLAW],[39,t.ZEN_HEADBUTT],[46,t.FOCUS_ENERGY],[53,t.FLAMETHROWER],[60,t.OUTRAGE],[67,t.DOUBLE_EDGE]],[e.SALAMENCE]:[[Z,t.FLY],[w,t.OUTRAGE],[1,t.PROTECT],[1,t.DRAGON_TAIL],[1,t.DUAL_WINGBEAT],[1,t.ROOST],[1,t.EMBER],[1,t.LEER],[1,t.BITE],[1,t.DRAGON_BREATH],[15,t.HEADBUTT],[20,t.SCARY_FACE],[25,t.CRUNCH],[33,t.DRAGON_CLAW],[39,t.ZEN_HEADBUTT],[46,t.FOCUS_ENERGY],[55,t.FLAMETHROWER],[73,t.DOUBLE_EDGE]],[e.BELDUM]:[[1,t.TACKLE]],[e.METANG]:[[Z,t.CONFUSION],[Z,t.METAL_CLAW],[1,t.TACKLE],[1,t.BULLET_PUNCH],[1,t.HONE_CLAWS],[6,t.ZEN_HEADBUTT],[12,t.MAGNET_RISE],[18,t.FLASH_CANNON],[26,t.TAKE_DOWN],[34,t.PSYCHIC],[42,t.SCARY_FACE],[50,t.METEOR_MASH],[58,t.IRON_DEFENSE],[66,t.AGILITY],[74,t.HYPER_BEAM]],[e.METAGROSS]:[[Z,t.HAMMER_ARM],[w,t.EXPLOSION],[w,t.HONE_CLAWS],[1,t.CONFUSION],[1,t.METAL_CLAW],[1,t.BULLET_PUNCH],[1,t.TACKLE],[6,t.ZEN_HEADBUTT],[12,t.MAGNET_RISE],[16,t.FLASH_CANNON],[26,t.TAKE_DOWN],[34,t.PSYCHIC],[42,t.SCARY_FACE],[52,t.METEOR_MASH],[62,t.IRON_DEFENSE],[72,t.AGILITY],[82,t.HYPER_BEAM]],[e.REGIROCK]:[[1,t.CHARGE_BEAM],[1,t.ROCK_THROW],[6,t.BULLDOZE],[12,t.ANCIENT_POWER],[18,t.STOMP],[24,t.ROCK_SLIDE],[30,t.CURSE],[36,t.IRON_DEFENSE],[42,t.HAMMER_ARM],[48,t.STONE_EDGE],[54,t.SUPERPOWER],[60,t.LOCK_ON],[66,t.ZAP_CANNON],[72,t.HYPER_BEAM],[78,t.EXPLOSION]],[e.REGICE]:[[1,t.CHARGE_BEAM],[1,t.ICY_WIND],[6,t.BULLDOZE],[12,t.ANCIENT_POWER],[18,t.STOMP],[24,t.ICE_BEAM],[30,t.CURSE],[36,t.AMNESIA],[42,t.HAMMER_ARM],[48,t.BLIZZARD],[54,t.SUPERPOWER],[60,t.LOCK_ON],[66,t.ZAP_CANNON],[72,t.HYPER_BEAM],[78,t.EXPLOSION]],[e.REGISTEEL]:[[1,t.CHARGE_BEAM],[1,t.METAL_CLAW],[6,t.BULLDOZE],[12,t.ANCIENT_POWER],[18,t.STOMP],[24,t.IRON_HEAD],[24,t.FLASH_CANNON],[30,t.CURSE],[36,t.AMNESIA],[36,t.IRON_DEFENSE],[42,t.HAMMER_ARM],[48,t.HEAVY_SLAM],[54,t.SUPERPOWER],[60,t.LOCK_ON],[66,t.ZAP_CANNON],[72,t.HYPER_BEAM],[78,t.EXPLOSION]],[e.LATIAS]:[[1,t.STORED_POWER],[1,t.CHARM],[1,t.PSYWAVE],[5,t.HELPING_HAND],[10,t.RECOVER],[15,t.CONFUSION],[20,t.TAILWIND],[25,t.DRAGON_BREATH],[30,t.WISH],[35,t.MIST_BALL],[40,t.ZEN_HEADBUTT],[45,t.DRAGON_PULSE],[50,t.HEAL_PULSE],[55,t.REFLECT_TYPE],[60,t.PSYCHIC],[65,t.GUARD_SPLIT],[70,t.HEALING_WISH]],[e.LATIOS]:[[1,t.STORED_POWER],[1,t.DRAGON_DANCE],[1,t.HEAL_BLOCK],[1,t.PSYWAVE],[5,t.HELPING_HAND],[10,t.RECOVER],[15,t.CONFUSION],[20,t.TAILWIND],[25,t.DRAGON_BREATH],[30,t.ALLY_SWITCH],[35,t.LUSTER_PURGE],[40,t.ZEN_HEADBUTT],[45,t.DRAGON_PULSE],[50,t.HEAL_PULSE],[55,t.SIMPLE_BEAM],[60,t.PSYCHIC],[65,t.POWER_SPLIT],[70,t.MEMENTO]],[e.KYOGRE]:[[1,t.ORIGIN_PULSE],[1,t.WATER_PULSE],[1,t.ANCIENT_POWER],[1,t.BODY_SLAM],[1,t.SCARY_FACE],[9,t.AQUA_TAIL],[18,t.CALM_MIND],[27,t.MUDDY_WATER],[36,t.ICE_BEAM],[45,t.SHEER_COLD],[54,t.AQUA_RING],[72,t.HYDRO_PUMP],[81,t.DOUBLE_EDGE],[90,t.WATER_SPOUT]],[e.GROUDON]:[[1,t.PRECIPICE_BLADES],[1,t.MUD_SHOT],[1,t.ANCIENT_POWER],[1,t.LAVA_PLUME],[1,t.SCARY_FACE],[9,t.EARTH_POWER],[18,t.BULK_UP],[27,t.EARTHQUAKE],[36,t.HAMMER_ARM],[45,t.FISSURE],[54,t.REST],[72,t.FIRE_BLAST],[81,t.SOLAR_BEAM],[90,t.ERUPTION]],[e.RAYQUAZA]:[[1,t.DRAGON_ASCENT],[1,t.TWISTER],[1,t.ANCIENT_POWER],[1,t.AIR_SLASH],[1,t.SCARY_FACE],[9,t.CRUNCH],[18,t.DRAGON_DANCE],[27,t.EXTREME_SPEED],[36,t.DRAGON_PULSE],[45,t.HYPER_VOICE],[54,t.REST],[63,t.FLY],[72,t.HURRICANE],[81,t.OUTRAGE],[90,t.HYPER_BEAM]],[e.JIRACHI]:[[1,t.CONFUSION],[1,t.WISH],[7,t.SWIFT],[21,t.LIFE_DEW],[28,t.ZEN_HEADBUTT],[35,t.GRAVITY],[42,t.PSYCHIC],[49,t.METEOR_MASH],[56,t.HEALING_WISH],[63,t.REST],[70,t.FUTURE_SIGHT],[77,t.DOUBLE_EDGE],[84,t.COSMIC_POWER],[91,t.LAST_RESORT],[98,t.DOOM_DESIRE]],[e.DEOXYS]:[[1,t.CONFUSION],[1,t.LEER],[1,t.WRAP],[7,t.NIGHT_SHADE],[13,t.TELEPORT],[19,t.KNOCK_OFF],[25,t.PSYSHOCK],[31,t.PSYCHIC],[37,t.GRAVITY],[43,t.SKILL_SWAP],[49,t.ZEN_HEADBUTT],[55,t.COSMIC_POWER],[61,t.RECOVER],[67,t.PSYCHO_BOOST],[73,t.HYPER_BEAM]],[e.TURTWIG]:[[1,t.TACKLE],[5,t.WITHDRAW],[5,t.LEAFAGE],[9,t.GROWTH],[13,t.RAZOR_LEAF],[17,t.CURSE],[21,t.BITE],[25,t.MEGA_DRAIN],[29,t.LEECH_SEED],[33,t.SYNTHESIS],[37,t.CRUNCH],[41,t.GIGA_DRAIN],[45,t.LEAF_STORM]],[e.GROTLE]:[[1,t.TACKLE],[1,t.ABSORB],[1,t.WITHDRAW],[1,t.LEAFAGE],[1,t.GROWTH],[13,t.RAZOR_LEAF],[17,t.CURSE],[22,t.BITE],[27,t.MEGA_DRAIN],[32,t.LEECH_SEED],[37,t.SYNTHESIS],[42,t.CRUNCH],[47,t.GIGA_DRAIN],[52,t.LEAF_STORM]],[e.TORTERRA]:[[Z,t.EARTHQUAKE],[1,t.TACKLE],[1,t.ABSORB],[1,t.LEAFAGE],[1,t.GROWTH],[1,t.RAZOR_LEAF],[1,t.WITHDRAW],[1,t.WOOD_HAMMER],[17,t.CURSE],[22,t.BITE],[27,t.MEGA_DRAIN],[33,t.LEECH_SEED],[39,t.SYNTHESIS],[45,t.CRUNCH],[51,t.GIGA_DRAIN],[57,t.LEAF_STORM],[63,t.HEADLONG_RUSH]],[e.CHIMCHAR]:[[1,t.SCRATCH],[1,t.LEER],[5,t.EMBER],[9,t.TAUNT],[15,t.FURY_SWIPES],[17,t.FLAME_WHEEL],[23,t.NASTY_PLOT],[25,t.TORMENT],[31,t.FACADE],[33,t.FIRE_SPIN],[39,t.ACROBATICS],[41,t.SLACK_OFF],[47,t.FLAMETHROWER]],[e.MONFERNO]:[[Z,t.MACH_PUNCH],[w,t.NASTY_PLOT],[w,t.FACADE],[w,t.FLAMETHROWER],[1,t.SCRATCH],[1,t.LEER],[1,t.EMBER],[9,t.TAUNT],[16,t.FURY_SWIPES],[19,t.FLAME_WHEEL],[26,t.FEINT],[29,t.TORMENT],[36,t.CLOSE_COMBAT],[39,t.FIRE_SPIN],[46,t.ACROBATICS],[49,t.SLACK_OFF],[56,t.FLARE_BLITZ]],[e.INFERNAPE]:[[Z,t.CLOSE_COMBAT],[w,t.TAUNT],[w,t.NASTY_PLOT],[w,t.FACADE],[w,t.SLACK_OFF],[w,t.FLAMETHROWER],[1,t.SCRATCH],[1,t.LEER],[1,t.EMBER],[1,t.MACH_PUNCH],[16,t.FURY_SWIPES],[19,t.FLAME_WHEEL],[26,t.FEINT],[29,t.TORMENT],[42,t.FIRE_SPIN],[47,t.FLARE_BLITZ],[52,t.ACROBATICS],[58,t.CALM_MIND],[65,t.RAGING_FURY]],[e.PIPLUP]:[[1,t.POUND],[4,t.GROWL],[5,t.WATER_GUN],[11,t.CHARM],[15,t.PECK],[18,t.BUBBLE_BEAM],[22,t.SWAGGER],[25,t.FURY_ATTACK],[29,t.BRINE],[32,t.WHIRLPOOL],[36,t.MIST],[39,t.DRILL_PECK],[43,t.HYDRO_PUMP]],[e.PRINPLUP]:[[Z,t.METAL_CLAW],[1,t.TACKLE],[1,t.GROWL],[1,t.WATER_GUN],[1,t.CHARM],[15,t.PECK],[19,t.BUBBLE_BEAM],[24,t.SWAGGER],[28,t.FURY_ATTACK],[33,t.BRINE],[37,t.WHIRLPOOL],[42,t.MIST],[46,t.DRILL_PECK],[50,t.HYDRO_PUMP]],[e.EMPOLEON]:[[Z,t.AQUA_JET],[1,t.TACKLE],[1,t.GROWL],[1,t.WATER_GUN],[1,t.CHARM],[1,t.METAL_CLAW],[11,t.SWORDS_DANCE],[15,t.PECK],[19,t.BUBBLE_BEAM],[24,t.SWAGGER],[28,t.FURY_ATTACK],[33,t.BRINE],[39,t.WHIRLPOOL],[46,t.MIST],[52,t.DRILL_PECK],[59,t.HYDRO_PUMP],[66,t.WAVE_CRASH]],[e.STARLY]:[[1,t.TACKLE],[1,t.GROWL],[5,t.QUICK_ATTACK],[9,t.WING_ATTACK],[13,t.DOUBLE_TEAM],[17,t.ENDEAVOR],[21,t.WHIRLWIND],[25,t.AERIAL_ACE],[29,t.TAKE_DOWN],[33,t.AGILITY],[37,t.BRAVE_BIRD],[41,t.FINAL_GAMBIT]],[e.STARAVIA]:[[1,t.TACKLE],[1,t.GROWL],[1,t.QUICK_ATTACK],[9,t.WING_ATTACK],[13,t.DOUBLE_TEAM],[18,t.ENDEAVOR],[23,t.WHIRLWIND],[28,t.AERIAL_ACE],[33,t.TAKE_DOWN],[38,t.AGILITY],[43,t.BRAVE_BIRD],[48,t.FINAL_GAMBIT]],[e.STARAPTOR]:[[Z,t.CLOSE_COMBAT],[1,t.WING_ATTACK],[1,t.TACKLE],[1,t.GROWL],[1,t.QUICK_ATTACK],[13,t.DOUBLE_TEAM],[18,t.ENDEAVOR],[23,t.WHIRLWIND],[28,t.AERIAL_ACE],[33,t.TAKE_DOWN],[41,t.AGILITY],[49,t.BRAVE_BIRD],[57,t.FINAL_GAMBIT]],[e.BIDOOF]:[[1,t.TACKLE],[1,t.GROWL],[5,t.DEFENSE_CURL],[9,t.ROLLOUT],[13,t.HEADBUTT],[17,t.HYPER_FANG],[21,t.YAWN],[25,t.CRUNCH],[29,t.TAKE_DOWN],[33,t.SUPER_FANG],[37,t.SWORDS_DANCE],[41,t.AMNESIA],[45,t.SUPERPOWER],[49,t.CURSE]],[e.BIBAREL]:[[Z,t.WATER_GUN],[1,t.TACKLE],[1,t.GROWL],[1,t.AQUA_JET],[1,t.ROTOTILLER],[5,t.DEFENSE_CURL],[9,t.ROLLOUT],[13,t.HEADBUTT],[18,t.HYPER_FANG],[23,t.YAWN],[28,t.CRUNCH],[33,t.TAKE_DOWN],[38,t.SUPER_FANG],[43,t.SWORDS_DANCE],[48,t.AMNESIA],[53,t.SUPERPOWER],[58,t.CURSE]],[e.KRICKETOT]:[[1,t.TACKLE],[1,t.GROWL],[1,t.BIDE],[6,t.STRUGGLE_BUG],[16,t.BUG_BITE]],[e.KRICKETUNE]:[[Z,t.FURY_CUTTER],[1,t.TACKLE],[1,t.GROWL],[1,t.BIDE],[1,t.STRUGGLE_BUG],[1,t.BUG_BITE],[14,t.ABSORB],[18,t.SING],[22,t.FOCUS_ENERGY],[26,t.SLASH],[30,t.X_SCISSOR],[34,t.SCREECH],[36,t.FELL_STINGER],[38,t.TAUNT],[42,t.NIGHT_SLASH],[44,t.STICKY_WEB],[46,t.BUG_BUZZ],[50,t.PERISH_SONG]],[e.SHINX]:[[1,t.TACKLE],[1,t.LEER],[4,t.THUNDER_SHOCK],[8,t.CHARGE],[12,t.BITE],[16,t.SPARK],[20,t.ROAR],[24,t.VOLT_SWITCH],[28,t.SCARY_FACE],[32,t.THUNDER_WAVE],[36,t.CRUNCH],[40,t.DISCHARGE],[44,t.SWAGGER],[48,t.WILD_CHARGE]],[e.LUXIO]:[[1,t.TACKLE],[1,t.LEER],[1,t.THUNDER_SHOCK],[1,t.CHARGE],[12,t.BITE],[18,t.SPARK],[24,t.ROAR],[31,t.VOLT_SWITCH],[36,t.SCARY_FACE],[42,t.THUNDER_WAVE],[48,t.CRUNCH],[54,t.DISCHARGE],[60,t.SWAGGER],[68,t.WILD_CHARGE]],[e.LUXRAY]:[[1,t.TACKLE],[1,t.LEER],[1,t.THUNDER_SHOCK],[1,t.CHARGE],[1,t.ELECTRIC_TERRAIN],[12,t.BITE],[18,t.SPARK],[24,t.ROAR],[33,t.VOLT_SWITCH],[40,t.SCARY_FACE],[48,t.THUNDER_WAVE],[56,t.CRUNCH],[64,t.DISCHARGE],[72,t.SWAGGER],[80,t.WILD_CHARGE]],[e.BUDEW]:[[1,t.ABSORB],[1,t.GROWTH],[1,t.STUN_SPORE],[1,t.WORRY_SEED]],[e.ROSERADE]:[[1,t.POISON_STING],[1,t.ABSORB],[1,t.MEGA_DRAIN],[1,t.LEECH_SEED],[1,t.GROWTH],[1,t.STUN_SPORE],[1,t.PETAL_DANCE],[1,t.TOXIC],[1,t.GIGA_DRAIN],[1,t.SWEET_SCENT],[1,t.SYNTHESIS],[1,t.INGRAIN],[1,t.AROMATHERAPY],[1,t.MAGICAL_LEAF],[1,t.WORRY_SEED],[1,t.TOXIC_SPIKES],[1,t.PETAL_BLIZZARD],[1,t.GRASSY_TERRAIN],[1,t.VENOM_DRENCH]],[e.CRANIDOS]:[[1,t.HEADBUTT],[1,t.LEER],[6,t.FOCUS_ENERGY],[10,t.PURSUIT],[15,t.TAKE_DOWN],[19,t.SCARY_FACE],[24,t.ASSURANCE],[28,t.CHIP_AWAY],[33,t.ANCIENT_POWER],[37,t.ZEN_HEADBUTT],[42,t.SCREECH],[46,t.HEAD_SMASH]],[e.RAMPARDOS]:[[Z,t.ENDEAVOR],[1,t.HEADBUTT],[1,t.LEER],[1,t.FOCUS_ENERGY],[1,t.PURSUIT],[15,t.TAKE_DOWN],[19,t.SCARY_FACE],[24,t.ASSURANCE],[28,t.CHIP_AWAY],[36,t.ANCIENT_POWER],[43,t.ZEN_HEADBUTT],[51,t.SCREECH],[58,t.HEAD_SMASH]],[e.SHIELDON]:[[1,t.TACKLE],[1,t.PROTECT],[6,t.TAUNT],[10,t.METAL_SOUND],[15,t.TAKE_DOWN],[19,t.IRON_DEFENSE],[24,t.SWAGGER],[28,t.ANCIENT_POWER],[33,t.ENDURE],[37,t.METAL_BURST],[42,t.IRON_HEAD],[46,t.HEAVY_SLAM]],[e.BASTIODON]:[[Z,t.BLOCK],[w,t.WIDE_GUARD],[1,t.TACKLE],[1,t.PROTECT],[1,t.TAUNT],[1,t.METAL_SOUND],[15,t.TAKE_DOWN],[19,t.IRON_DEFENSE],[24,t.SWAGGER],[28,t.ANCIENT_POWER],[36,t.ENDURE],[43,t.METAL_BURST],[51,t.IRON_HEAD],[58,t.HEAVY_SLAM]],[e.BURMY]:[[1,t.PROTECT],[1,t.STRUGGLE_BUG],[10,t.TACKLE],[15,t.BUG_BITE],[20,t.STRING_SHOT]],[e.WORMADAM]:[[Z,t.QUIVER_DANCE],[1,t.STRUGGLE_BUG],[1,t.TACKLE],[1,t.PROTECT],[1,t.SUCKER_PUNCH],[1,t.BUG_BITE],[1,t.PROTECT],[10,t.TACKLE],[20,t.STRING_SHOT],[23,t.CONFUSION],[26,t.RAZOR_LEAF],[29,t.GROWTH],[32,t.PSYBEAM],[35,t.INFESTATION],[38,t.FLAIL],[41,t.ATTRACT],[44,t.PSYCHIC],[47,t.LEAF_STORM],[50,t.BUG_BUZZ]],[e.MOTHIM]:[[Z,t.QUIVER_DANCE],[1,t.STRUGGLE_BUG],[1,t.TACKLE],[1,t.PROTECT],[1,t.BUG_BITE],[10,t.PROTECT],[15,t.BUG_BITE],[20,t.STRING_SHOT],[23,t.CONFUSION],[26,t.GUST],[29,t.POISON_POWDER],[32,t.PSYBEAM],[35,t.ROOST],[38,t.STRUGGLE_BUG],[41,t.AIR_SLASH],[44,t.PSYCHIC],[47,t.LUNGE],[50,t.BUG_BUZZ]],[e.COMBEE]:[[1,t.GUST],[1,t.SWEET_SCENT],[1,t.BUG_BITE],[1,t.STRUGGLE_BUG]],[e.VESPIQUEN]:[[Z,t.SLASH],[1,t.GUST],[1,t.POISON_STING],[1,t.CONFUSE_RAY],[1,t.SWEET_SCENT],[1,t.BUG_BITE],[1,t.STRUGGLE_BUG],[4,t.FURY_CUTTER],[8,t.AROMATIC_MIST],[12,t.FELL_STINGER],[16,t.FURY_SWIPES],[20,t.SWAGGER],[24,t.ROOST],[28,t.AIR_SLASH],[32,t.POWER_GEM],[36,t.TOXIC],[40,t.ATTACK_ORDER],[40,t.DEFEND_ORDER],[40,t.HEAL_ORDER],[44,t.DESTINY_BOND]],[e.PACHIRISU]:[[1,t.GROWL],[1,t.THUNDER_SHOCK],[1,t.BIDE],[5,t.QUICK_ATTACK],[9,t.CHARM],[13,t.SPARK],[17,t.ENDURE],[19,t.NUZZLE],[21,t.SWIFT],[25,t.ELECTRO_BALL],[29,t.SWEET_KISS],[33,t.THUNDER_WAVE],[37,t.SUPER_FANG],[41,t.DISCHARGE],[45,t.LAST_RESORT],[49,t.THUNDER]],[e.BUIZEL]:[[1,t.TACKLE],[4,t.GROWL],[7,t.SOAK],[11,t.QUICK_ATTACK],[15,t.WATER_GUN],[18,t.BITE],[21,t.SWIFT],[24,t.AQUA_JET],[27,t.DOUBLE_HIT],[31,t.WHIRLPOOL],[35,t.LIQUIDATION],[38,t.AQUA_TAIL],[41,t.AGILITY],[45,t.HYDRO_PUMP],[49,t.WAVE_CRASH]],[e.FLOATZEL]:[[1,t.TACKLE],[1,t.GROWL],[1,t.QUICK_ATTACK],[1,t.CRUNCH],[1,t.ICE_FANG],[1,t.SOAK],[15,t.WATER_GUN],[18,t.BITE],[21,t.SWIFT],[24,t.AQUA_JET],[29,t.DOUBLE_HIT],[35,t.WHIRLPOOL],[41,t.LIQUIDATION],[46,t.AQUA_TAIL],[51,t.AGILITY],[57,t.HYDRO_PUMP],[62,t.WAVE_CRASH]],[e.CHERUBI]:[[1,t.TACKLE],[1,t.MORNING_SUN],[5,t.LEAFAGE],[10,t.GROWTH],[15,t.HELPING_HAND],[20,t.MAGICAL_LEAF],[26,t.LEECH_SEED],[30,t.TAKE_DOWN],[35,t.PETAL_BLIZZARD],[40,t.WORRY_SEED],[45,t.SOLAR_BEAM]],[e.CHERRIM]:[[Z,t.SUNNY_DAY],[1,t.TACKLE],[1,t.GROWTH],[1,t.MORNING_SUN],[1,t.FLOWER_SHIELD],[1,t.LEAFAGE],[15,t.HELPING_HAND],[20,t.MAGICAL_LEAF],[28,t.LEECH_SEED],[34,t.TAKE_DOWN],[41,t.PETAL_BLIZZARD],[48,t.WORRY_SEED],[55,t.SOLAR_BEAM],[62,t.PETAL_DANCE]],[e.SHELLOS]:[[1,t.WATER_GUN],[1,t.MUD_SLAP],[5,t.HARDEN],[10,t.RECOVER],[15,t.WATER_PULSE],[20,t.ANCIENT_POWER],[25,t.BODY_SLAM],[31,t.MUDDY_WATER],[35,t.EARTH_POWER],[40,t.RAIN_DANCE],[45,t.MEMENTO]],[e.GASTRODON]:[[1,t.WATER_GUN],[1,t.RECOVER],[1,t.HARDEN],[1,t.MUD_SLAP],[1,t.MUD_SPORT],[15,t.WATER_PULSE],[20,t.ANCIENT_POWER],[25,t.BODY_SLAM],[33,t.MUDDY_WATER],[39,t.EARTH_POWER],[46,t.RAIN_DANCE],[53,t.MEMENTO]],[e.AMBIPOM]:[[1,t.SCRATCH],[1,t.SAND_ATTACK],[1,t.TAIL_WHIP],[1,t.ASTONISH],[11,t.BATON_PASS],[15,t.TICKLE],[18,t.FURY_SWIPES],[22,t.SWIFT],[25,t.SCREECH],[29,t.AGILITY],[32,t.DOUBLE_HIT],[36,t.FLING],[39,t.NASTY_PLOT],[43,t.LAST_RESORT]],[e.DRIFLOON]:[[1,t.MINIMIZE],[1,t.ASTONISH],[1,t.CONSTRICT],[4,t.GUST],[8,t.FOCUS_ENERGY],[12,t.PAYBACK],[16,t.HEX],[20,t.SHADOW_BALL],[24,t.STOCKPILE],[24,t.SPIT_UP],[24,t.SWALLOW],[29,t.SELF_DESTRUCT],[32,t.DESTINY_BOND],[36,t.BATON_PASS],[40,t.TAILWIND],[44,t.EXPLOSION]],[e.DRIFBLIM]:[[Z,t.PHANTOM_FORCE],[1,t.GUST],[1,t.MINIMIZE],[1,t.FOCUS_ENERGY],[1,t.ASTONISH],[1,t.CONSTRICT],[1,t.STRENGTH_SAP],[12,t.PAYBACK],[16,t.HEX],[20,t.SHADOW_BALL],[24,t.STOCKPILE],[24,t.SPIT_UP],[24,t.SWALLOW],[31,t.SELF_DESTRUCT],[36,t.DESTINY_BOND],[42,t.BATON_PASS],[48,t.TAILWIND],[54,t.EXPLOSION]],[e.BUNEARY]:[[1,t.FRUSTRATION],[1,t.POUND],[1,t.SPLASH],[4,t.DEFENSE_CURL],[8,t.BABY_DOLL_EYES],[12,t.AFTER_YOU],[16,t.QUICK_ATTACK],[20,t.DOUBLE_KICK],[24,t.CHARM],[28,t.BATON_PASS],[32,t.HEADBUTT],[36,t.AGILITY],[40,t.ENTRAINMENT],[44,t.FLATTER],[48,t.BOUNCE],[52,t.HEALING_WISH]],[e.LOPUNNY]:[[Z,t.RETURN],[1,t.FRUSTRATION],[1,t.POUND],[1,t.DEFENSE_CURL],[1,t.SPLASH],[1,t.MIRROR_COAT],[1,t.MAGIC_COAT],[1,t.BABY_DOLL_EYES],[1,t.ROTOTILLER],[12,t.AFTER_YOU],[16,t.QUICK_ATTACK],[20,t.DOUBLE_KICK],[24,t.CHARM],[28,t.BATON_PASS],[32,t.HEADBUTT],[36,t.AGILITY],[40,t.ENTRAINMENT],[44,t.FLATTER],[48,t.BOUNCE],[52,t.HEALING_WISH],[56,t.HIGH_JUMP_KICK]],[e.MISMAGIUS]:[[w,t.CONFUSION],[w,t.CONFUSE_RAY],[w,t.MEAN_LOOK],[w,t.HEX],[w,t.PSYBEAM],[w,t.PAIN_SPLIT],[w,t.PAYBACK],[w,t.SHADOW_BALL],[w,t.PERISH_SONG],[1,t.GROWL],[1,t.SPITE],[1,t.PSYWAVE],[1,t.LUCKY_CHANT],[1,t.ASTONISH],[1,t.MAGICAL_LEAF],[1,t.POWER_GEM],[1,t.PHANTOM_FORCE],[1,t.MYSTICAL_FIRE]],[e.HONCHKROW]:[[1,t.PECK],[1,t.ASTONISH],[1,t.GUST],[1,t.HAZE],[1,t.WING_ATTACK],[1,t.NIGHT_SHADE],[1,t.ASSURANCE],[1,t.TAUNT],[1,t.MEAN_LOOK],[1,t.SUCKER_PUNCH],[1,t.NIGHT_SLASH],[1,t.TORMENT],[1,t.QUASH],[1,t.PURSUIT],[25,t.SWAGGER],[35,t.NASTY_PLOT],[45,t.FOUL_PLAY],[55,t.DARK_PULSE],[65,t.COMEUPPANCE]],[e.GLAMEOW]:[[1,t.FAKE_OUT],[5,t.SCRATCH],[8,t.GROWL],[13,t.HYPNOSIS],[17,t.AERIAL_ACE],[20,t.FURY_SWIPES],[25,t.CHARM],[29,t.TAUNT],[32,t.RETALIATE],[37,t.SLASH],[41,t.SUCKER_PUNCH],[44,t.ATTRACT],[48,t.HONE_CLAWS],[50,t.PLAY_ROUGH]],[e.PURUGLY]:[[Z,t.SWAGGER],[1,t.SCRATCH],[1,t.PLAY_ROUGH],[1,t.SUCKER_PUNCH],[1,t.GROWL],[1,t.FAKE_OUT],[13,t.HYPNOSIS],[17,t.AERIAL_ACE],[20,t.FURY_SWIPES],[25,t.CHARM],[29,t.TAUNT],[32,t.RETALIATE],[37,t.SLASH],[45,t.BODY_SLAM],[52,t.ATTRACT],[60,t.HONE_CLAWS]],[e.CHINGLING]:[[1,t.WRAP],[1,t.PSYWAVE],[4,t.GROWL],[7,t.ASTONISH],[10,t.CONFUSION],[13,t.YAWN],[16,t.LAST_RESORT],[19,t.ENTRAINMENT],[32,t.UPROAR]],[e.STUNKY]:[[1,t.SCRATCH],[1,t.POISON_GAS],[3,t.FEINT],[6,t.SMOKESCREEN],[9,t.ACID_SPRAY],[12,t.FURY_SWIPES],[15,t.FOCUS_ENERGY],[18,t.BITE],[21,t.VENOSHOCK],[24,t.SCREECH],[27,t.TOXIC],[30,t.SUCKER_PUNCH],[33,t.MEMENTO],[36,t.NIGHT_SLASH],[39,t.BELCH],[42,t.EXPLOSION]],[e.SKUNTANK]:[[Z,t.FLAMETHROWER],[1,t.SCRATCH],[1,t.SMOKESCREEN],[1,t.POISON_GAS],[1,t.FEINT],[1,t.ACID_SPRAY],[12,t.FURY_SWIPES],[15,t.FOCUS_ENERGY],[18,t.BITE],[21,t.VENOSHOCK],[24,t.SCREECH],[27,t.TOXIC],[30,t.SUCKER_PUNCH],[33,t.MEMENTO],[38,t.NIGHT_SLASH],[43,t.BELCH],[48,t.EXPLOSION]],[e.BRONZOR]:[[1,t.TACKLE],[1,t.CONFUSION],[4,t.CONFUSE_RAY],[8,t.PAYBACK],[12,t.IMPRISON],[16,t.GYRO_BALL],[20,t.HYPNOSIS],[24,t.SAFEGUARD],[28,t.EXTRASENSORY],[32,t.HEAVY_SLAM],[36,t.IRON_DEFENSE],[40,t.METAL_SOUND],[44,t.FUTURE_SIGHT],[45,t.HEAL_BLOCK]],[e.BRONZONG]:[[Z,t.BLOCK],[1,t.TACKLE],[1,t.CONFUSION],[1,t.CONFUSE_RAY],[1,t.SUNNY_DAY],[1,t.WEATHER_BALL],[1,t.PAYBACK],[12,t.IMPRISON],[16,t.GYRO_BALL],[20,t.HYPNOSIS],[24,t.SAFEGUARD],[28,t.EXTRASENSORY],[32,t.HEAVY_SLAM],[38,t.IRON_DEFENSE],[44,t.METAL_SOUND],[50,t.FUTURE_SIGHT],[52,t.HEAL_BLOCK],[56,t.RAIN_DANCE]],[e.BONSLY]:[[1,t.FAKE_TEARS],[1,t.COPYCAT],[1,t.TACKLE],[4,t.FLAIL],[8,t.ROCK_THROW],[12,t.BLOCK],[16,t.MIMIC],[20,t.ROCK_TOMB],[24,t.TEARFUL_LOOK],[28,t.SUCKER_PUNCH],[32,t.ROCK_SLIDE],[36,t.LOW_KICK],[40,t.COUNTER],[44,t.DOUBLE_EDGE]],[e.MIME_JR]:[[1,t.POUND],[1,t.COPYCAT],[1,t.BARRIER],[1,t.TICKLE],[4,t.BATON_PASS],[8,t.ENCORE],[12,t.CONFUSION],[16,t.MIMIC],[20,t.PROTECT],[24,t.RECYCLE],[28,t.PSYBEAM],[32,t.ROLE_PLAY],[36,t.LIGHT_SCREEN],[36,t.REFLECT],[36,t.SAFEGUARD],[40,t.SUCKER_PUNCH],[44,t.DAZZLING_GLEAM],[48,t.PSYCHIC],[52,t.TEETER_DANCE]],[e.HAPPINY]:[[1,t.POUND],[1,t.COPYCAT],[4,t.DEFENSE_CURL],[8,t.SWEET_KISS],[12,t.DISARMING_VOICE],[16,t.COVET],[20,t.CHARM]],[e.CHATOT]:[[1,t.PECK],[1,t.TAUNT],[1,t.HYPER_VOICE],[1,t.CHATTER],[1,t.CONFIDE],[5,t.GROWL],[9,t.MIRROR_MOVE],[13,t.SING],[17,t.FURY_ATTACK],[29,t.ROUND],[33,t.MIMIC],[37,t.ECHOED_VOICE],[41,t.ROOST],[45,t.UPROAR],[49,t.SYNCHRONOISE],[50,t.FEATHER_DANCE]],[e.SPIRITOMB]:[[1,t.NIGHT_SHADE],[1,t.CONFUSE_RAY],[1,t.PURSUIT],[5,t.SHADOW_SNEAK],[10,t.SPITE],[15,t.PAYBACK],[20,t.NASTY_PLOT],[25,t.HEX],[30,t.MEMENTO],[35,t.SUCKER_PUNCH],[40,t.CURSE],[45,t.SHADOW_BALL],[50,t.DARK_PULSE],[55,t.HYPNOSIS],[60,t.DREAM_EATER]],[e.GIBLE]:[[1,t.TACKLE],[1,t.SAND_TOMB],[6,t.SAND_ATTACK],[12,t.DRAGON_BREATH],[18,t.BULLDOZE],[25,t.BITE],[30,t.SLASH],[36,t.DRAGON_CLAW],[42,t.DIG],[48,t.SANDSTORM],[54,t.TAKE_DOWN],[60,t.DRAGON_RUSH]],[e.GABITE]:[[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.DRAGON_BREATH],[1,t.SAND_TOMB],[1,t.DUAL_CHOP],[18,t.BULLDOZE],[27,t.BITE],[34,t.SLASH],[42,t.DRAGON_CLAW],[50,t.DIG],[58,t.SANDSTORM],[66,t.TAKE_DOWN],[74,t.DRAGON_RUSH]],[e.GARCHOMP]:[[Z,t.CRUNCH],[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.DRAGON_BREATH],[1,t.SAND_TOMB],[1,t.DUAL_CHOP],[18,t.BULLDOZE],[27,t.BITE],[34,t.SLASH],[42,t.DRAGON_CLAW],[52,t.DIG],[62,t.SANDSTORM],[72,t.TAKE_DOWN],[82,t.DRAGON_RUSH]],[e.MUNCHLAX]:[[1,t.TACKLE],[1,t.LICK],[1,t.ODOR_SLEUTH],[4,t.DEFENSE_CURL],[8,t.RECYCLE],[12,t.COVET],[16,t.BITE],[20,t.STOCKPILE],[20,t.SWALLOW],[24,t.SCREECH],[28,t.BODY_SLAM],[32,t.FLING],[36,t.AMNESIA],[40,t.METRONOME],[44,t.FLAIL],[48,t.BELLY_DRUM],[52,t.LAST_RESORT]],[e.RIOLU]:[[1,t.QUICK_ATTACK],[1,t.ENDURE],[4,t.FEINT],[8,t.METAL_CLAW],[12,t.COUNTER],[16,t.WORK_UP],[20,t.ROCK_SMASH],[24,t.VACUUM_WAVE],[28,t.SCREECH],[32,t.QUICK_GUARD],[36,t.FORCE_PALM],[40,t.SWORDS_DANCE],[44,t.HELPING_HAND],[48,t.COPYCAT],[52,t.FINAL_GAMBIT],[56,t.REVERSAL]],[e.LUCARIO]:[[Z,t.AURA_SPHERE],[1,t.QUICK_ATTACK],[1,t.ENDURE],[1,t.SCREECH],[1,t.REVERSAL],[1,t.DETECT],[1,t.METAL_CLAW],[1,t.ROCK_SMASH],[1,t.HELPING_HAND],[1,t.FEINT],[1,t.COPYCAT],[1,t.VACUUM_WAVE],[1,t.FINAL_GAMBIT],[1,t.LIFE_DEW],[12,t.COUNTER],[16,t.WORK_UP],[20,t.FORCE_PALM],[24,t.CALM_MIND],[28,t.METAL_SOUND],[32,t.QUICK_GUARD],[36,t.BONE_RUSH],[40,t.SWORDS_DANCE],[44,t.HEAL_PULSE],[48,t.METEOR_MASH],[52,t.DRAGON_PULSE],[56,t.EXTREME_SPEED],[60,t.CLOSE_COMBAT]],[e.HIPPOPOTAS]:[[1,t.SAND_ATTACK],[1,t.TACKLE],[4,t.BITE],[8,t.YAWN],[12,t.SAND_TOMB],[16,t.DIG],[20,t.CRUNCH],[24,t.SANDSTORM],[28,t.TAKE_DOWN],[32,t.ROAR],[36,t.REST],[40,t.EARTHQUAKE],[44,t.DOUBLE_EDGE],[48,t.FISSURE],[52,t.SLACK_OFF]],[e.HIPPOWDON]:[[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.BITE],[1,t.YAWN],[1,t.THUNDER_FANG],[1,t.ICE_FANG],[1,t.FIRE_FANG],[12,t.SAND_TOMB],[16,t.DIG],[20,t.CRUNCH],[24,t.SANDSTORM],[28,t.TAKE_DOWN],[32,t.ROAR],[38,t.REST],[44,t.EARTHQUAKE],[50,t.DOUBLE_EDGE],[56,t.FISSURE],[62,t.SLACK_OFF]],[e.SKORUPI]:[[1,t.POISON_STING],[1,t.LEER],[3,t.HONE_CLAWS],[6,t.FELL_STINGER],[9,t.POISON_FANG],[12,t.BITE],[15,t.TOXIC_SPIKES],[18,t.BUG_BITE],[21,t.VENOSHOCK],[24,t.KNOCK_OFF],[27,t.SCARY_FACE],[30,t.PIN_MISSILE],[33,t.TOXIC],[36,t.NIGHT_SLASH],[39,t.CROSS_POISON],[42,t.X_SCISSOR],[45,t.ACUPRESSURE],[48,t.CRUNCH]],[e.DRAPION]:[[1,t.POISON_STING],[1,t.LEER],[1,t.THUNDER_FANG],[1,t.ICE_FANG],[1,t.FIRE_FANG],[1,t.HONE_CLAWS],[1,t.FELL_STINGER],[9,t.POISON_FANG],[12,t.BITE],[15,t.TOXIC_SPIKES],[18,t.BUG_BITE],[21,t.VENOSHOCK],[24,t.KNOCK_OFF],[27,t.SCARY_FACE],[30,t.PIN_MISSILE],[33,t.TOXIC],[36,t.NIGHT_SLASH],[39,t.CROSS_POISON],[44,t.X_SCISSOR],[49,t.ACUPRESSURE],[54,t.CRUNCH]],[e.CROAGUNK]:[[1,t.POISON_STING],[1,t.MUD_SLAP],[4,t.ASTONISH],[8,t.TAUNT],[12,t.FLATTER],[16,t.LOW_KICK],[20,t.VENOSHOCK],[24,t.SUCKER_PUNCH],[28,t.SWAGGER],[32,t.POISON_JAB],[36,t.TOXIC],[40,t.NASTY_PLOT],[44,t.SLUDGE_BOMB],[48,t.BELCH]],[e.TOXICROAK]:[[1,t.POISON_STING],[1,t.MUD_SLAP],[1,t.TAUNT],[1,t.ASTONISH],[12,t.FLATTER],[16,t.LOW_KICK],[20,t.VENOSHOCK],[24,t.SUCKER_PUNCH],[28,t.SWAGGER],[32,t.POISON_JAB],[36,t.TOXIC],[42,t.NASTY_PLOT],[48,t.SLUDGE_BOMB],[54,t.BELCH]],[e.CARNIVINE]:[[1,t.BIND],[1,t.GROWTH],[1,t.LEAFAGE],[7,t.BITE],[11,t.VINE_WHIP],[17,t.SWEET_SCENT],[21,t.INGRAIN],[27,t.GRASS_KNOT],[31,t.LEAF_TORNADO],[37,t.STOCKPILE],[37,t.SPIT_UP],[37,t.SWALLOW],[41,t.CRUNCH],[47,t.SEED_BOMB],[50,t.POWER_WHIP]],[e.FINNEON]:[[1,t.POUND],[6,t.WATER_GUN],[13,t.RAIN_DANCE],[17,t.GUST],[22,t.WATER_PULSE],[26,t.ATTRACT],[29,t.SAFEGUARD],[33,t.AQUA_RING],[38,t.WHIRLPOOL],[42,t.U_TURN],[45,t.BOUNCE],[49,t.TAILWIND],[54,t.SOAK]],[e.LUMINEON]:[[1,t.POUND],[1,t.GUST],[1,t.WATER_GUN],[1,t.SOAK],[13,t.RAIN_DANCE],[22,t.WATER_PULSE],[26,t.ATTRACT],[29,t.SAFEGUARD],[35,t.AQUA_RING],[42,t.WHIRLPOOL],[48,t.U_TURN],[53,t.BOUNCE],[59,t.TAILWIND]],[e.MANTYKE]:[[1,t.TACKLE],[1,t.WATER_GUN],[4,t.SUPERSONIC],[8,t.WING_ATTACK],[12,t.WATER_PULSE],[16,t.WIDE_GUARD],[20,t.AGILITY],[24,t.BUBBLE_BEAM],[28,t.HEADBUTT],[32,t.AIR_SLASH],[36,t.AQUA_RING],[40,t.BOUNCE],[44,t.TAKE_DOWN],[48,t.HYDRO_PUMP]],[e.SNOVER]:[[1,t.LEER],[1,t.POWDER_SNOW],[5,t.LEAFAGE],[10,t.MIST],[15,t.ICE_SHARD],[20,t.RAZOR_LEAF],[25,t.ICY_WIND],[30,t.SWAGGER],[35,t.INGRAIN],[41,t.WOOD_HAMMER],[45,t.BLIZZARD],[50,t.SHEER_COLD]],[e.ABOMASNOW]:[[Z,t.ICE_PUNCH],[1,t.LEER],[1,t.MIST],[1,t.POWDER_SNOW],[1,t.LEAFAGE],[1,t.AURORA_VEIL],[15,t.ICE_SHARD],[20,t.RAZOR_LEAF],[25,t.ICY_WIND],[30,t.SWAGGER],[35,t.INGRAIN],[43,t.WOOD_HAMMER],[49,t.BLIZZARD],[56,t.SHEER_COLD]],[e.WEAVILE]:[[1,t.SCRATCH],[1,t.LEER],[1,t.AGILITY],[1,t.QUICK_ATTACK],[1,t.SLASH],[1,t.BEAT_UP],[1,t.TAUNT],[1,t.ASSURANCE],[1,t.ICE_SHARD],[1,t.EMBARGO],[18,t.METAL_CLAW],[24,t.ICY_WIND],[30,t.FURY_SWIPES],[36,t.HONE_CLAWS],[42,t.FLING],[48,t.NASTY_PLOT],[54,t.SCREECH],[60,t.NIGHT_SLASH],[66,t.DARK_PULSE]],[e.MAGNEZONE]:[[1,t.TACKLE],[1,t.SUPERSONIC],[1,t.THUNDER_SHOCK],[1,t.THUNDER_WAVE],[1,t.BARRIER],[1,t.TRI_ATTACK],[1,t.MIRROR_COAT],[1,t.MAGNETIC_FLUX],[1,t.ELECTRIC_TERRAIN],[12,t.ELECTRO_BALL],[16,t.GYRO_BALL],[20,t.SPARK],[24,t.SCREECH],[28,t.MAGNET_RISE],[34,t.FLASH_CANNON],[40,t.DISCHARGE],[46,t.METAL_SOUND],[52,t.LIGHT_SCREEN],[58,t.LOCK_ON],[64,t.ZAP_CANNON]],[e.LICKILICKY]:[[1,t.SUPERSONIC],[1,t.DEFENSE_CURL],[1,t.LICK],[1,t.TACKLE],[1,t.ROLLOUT],[1,t.WRING_OUT],[6,t.REST],[18,t.WRAP],[24,t.DISABLE],[30,t.STOMP],[36,t.KNOCK_OFF],[42,t.SCREECH],[48,t.SLAM],[54,t.POWER_WHIP],[60,t.BELLY_DRUM]],[e.RHYPERIOR]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.HAMMER_ARM],[1,t.SMACK_DOWN],[1,t.BULLDOZE],[15,t.HORN_ATTACK],[20,t.SCARY_FACE],[25,t.STOMP],[30,t.ROCK_BLAST],[35,t.DRILL_RUN],[40,t.TAKE_DOWN],[47,t.EARTHQUAKE],[54,t.STONE_EDGE],[61,t.MEGAHORN],[68,t.HORN_DRILL],[75,t.ROCK_WRECKER]],[e.TANGROWTH]:[[1,t.BIND],[1,t.ABSORB],[1,t.GROWTH],[1,t.STUN_SPORE],[1,t.BLOCK],[1,t.CONSTRICT],[12,t.MEGA_DRAIN],[16,t.VINE_WHIP],[20,t.POISON_POWDER],[24,t.DOUBLE_HIT],[28,t.KNOCK_OFF],[32,t.GIGA_DRAIN],[34,t.ANCIENT_POWER],[36,t.SLEEP_POWDER],[40,t.SLAM],[44,t.TICKLE],[48,t.POWER_WHIP],[52,t.INGRAIN],[56,t.GRASSY_TERRAIN]],[e.ELECTIVIRE]:[[1,t.LEER],[1,t.THUNDER_SHOCK],[1,t.QUICK_ATTACK],[1,t.CHARGE],[1,t.ION_DELUGE],[12,t.SWIFT],[16,t.SHOCK_WAVE],[20,t.THUNDER_WAVE],[24,t.SCREECH],[28,t.THUNDER_PUNCH],[34,t.DISCHARGE],[40,t.LOW_KICK],[46,t.THUNDERBOLT],[52,t.LIGHT_SCREEN],[58,t.THUNDER],[64,t.GIGA_IMPACT]],[e.MAGMORTAR]:[[1,t.LEER],[1,t.EMBER],[1,t.SMOKESCREEN],[1,t.SMOG],[12,t.CLEAR_SMOG],[16,t.FLAME_WHEEL],[20,t.CONFUSE_RAY],[24,t.SCARY_FACE],[28,t.FIRE_PUNCH],[34,t.LAVA_PLUME],[40,t.LOW_KICK],[46,t.FLAMETHROWER],[52,t.SUNNY_DAY],[58,t.FIRE_BLAST],[64,t.HYPER_BEAM]],[e.TOGEKISS]:[[Z,t.AIR_SLASH],[1,t.POUND],[1,t.DOUBLE_EDGE],[1,t.GROWL],[1,t.METRONOME],[1,t.SKY_ATTACK],[1,t.TRI_ATTACK],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.SAFEGUARD],[1,t.BATON_PASS],[1,t.EXTREME_SPEED],[1,t.ANCIENT_POWER],[1,t.FOLLOW_ME],[1,t.WISH],[1,t.YAWN],[1,t.LAST_RESORT],[1,t.AURA_SPHERE],[1,t.AFTER_YOU],[1,t.FAIRY_WIND],[1,t.LIFE_DEW]],[e.YANMEGA]:[[w,t.HYPNOSIS],[1,t.TACKLE],[1,t.DOUBLE_TEAM],[1,t.AIR_CUTTER],[1,t.NIGHT_SLASH],[1,t.WING_ATTACK],[1,t.AIR_SLASH],[1,t.BUG_BUZZ],[14,t.QUICK_ATTACK],[17,t.DETECT],[22,t.SUPERSONIC],[27,t.UPROAR],[30,t.BUG_BITE],[33,t.ANCIENT_POWER],[38,t.FEINT],[43,t.SLASH],[46,t.SCREECH],[49,t.U_TURN]],[e.LEAFEON]:[[Z,t.SAPPY_SEED],[w,t.VEEVEE_VOLLEY],[1,t.TACKLE],[1,t.TAKE_DOWN],[1,t.DOUBLE_EDGE],[1,t.TAIL_WHIP],[1,t.BITE],[1,t.GROWL],[1,t.SWIFT],[1,t.CHARM],[1,t.BATON_PASS],[1,t.HELPING_HAND],[1,t.COVET],[1,t.COPYCAT],[5,t.SAND_ATTACK],[10,t.RAZOR_LEAF],[15,t.QUICK_ATTACK],[20,t.BABY_DOLL_EYES],[25,t.LEECH_SEED],[30,t.MAGICAL_LEAF],[35,t.SYNTHESIS],[40,t.SUNNY_DAY],[45,t.GIGA_DRAIN],[50,t.SWORDS_DANCE],[55,t.LEAF_BLADE],[60,t.LAST_RESORT]],[e.GLACEON]:[[Z,t.FREEZY_FROST],[w,t.VEEVEE_VOLLEY],[1,t.TACKLE],[1,t.TAKE_DOWN],[1,t.DOUBLE_EDGE],[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.SWIFT],[1,t.CHARM],[1,t.BATON_PASS],[1,t.HELPING_HAND],[1,t.COVET],[1,t.COPYCAT],[5,t.SAND_ATTACK],[10,t.ICY_WIND],[15,t.QUICK_ATTACK],[20,t.BABY_DOLL_EYES],[25,t.ICE_SHARD],[30,t.BITE],[35,t.ICE_FANG],[40,t.SNOWSCAPE],[45,t.FREEZE_DRY],[50,t.MIRROR_COAT],[55,t.BLIZZARD],[60,t.LAST_RESORT]],[e.GLISCOR]:[[1,t.POISON_STING],[1,t.SAND_ATTACK],[1,t.HARDEN],[1,t.POISON_TAIL],[1,t.SLASH],[1,t.POISON_JAB],[1,t.THUNDER_FANG],[1,t.ICE_FANG],[1,t.FIRE_FANG],[13,t.QUICK_ATTACK],[16,t.FURY_CUTTER],[19,t.KNOCK_OFF],[22,t.ACROBATICS],[27,t.NIGHT_SLASH],[30,t.U_TURN],[35,t.SCREECH],[40,t.X_SCISSOR],[45,t.CRABHAMMER],[50,t.SWORDS_DANCE]],[e.MAMOSWINE]:[[Z,t.DOUBLE_HIT],[1,t.TACKLE],[1,t.FLAIL],[1,t.POWDER_SNOW],[1,t.MUD_SLAP],[1,t.ODOR_SLEUTH],[1,t.ANCIENT_POWER],[1,t.ICE_FANG],[15,t.ICE_SHARD],[20,t.MIST],[25,t.ENDURE],[30,t.ICY_WIND],[37,t.AMNESIA],[44,t.TAKE_DOWN],[51,t.EARTHQUAKE],[58,t.BLIZZARD],[65,t.THRASH]],[e.PORYGON_Z]:[[1,t.TACKLE],[1,t.DEFENSE_CURL],[1,t.CONVERSION],[1,t.RECYCLE],[1,t.MAGNET_RISE],[1,t.NASTY_PLOT],[1,t.TRICK_ROOM],[15,t.THUNDER_SHOCK],[20,t.PSYBEAM],[25,t.CONVERSION_2],[30,t.AGILITY],[35,t.RECOVER],[40,t.DISCHARGE],[45,t.TRI_ATTACK],[50,t.MAGIC_COAT],[55,t.LOCK_ON],[60,t.ZAP_CANNON],[65,t.HYPER_BEAM]],[e.GALLADE]:[[Z,t.SLASH],[1,t.LEER],[1,t.GROWL],[1,t.PSYBEAM],[1,t.CONFUSION],[1,t.PSYCHIC],[1,t.HYPNOSIS],[1,t.DOUBLE_TEAM],[1,t.DREAM_EATER],[1,t.CHARM],[1,t.FURY_CUTTER],[1,t.FUTURE_SIGHT],[1,t.IMPRISON],[1,t.CALM_MIND],[1,t.LEAF_BLADE],[1,t.NIGHT_SLASH],[1,t.SACRED_SWORD],[1,t.DISARMING_VOICE],[1,t.DRAINING_KISS],[1,t.LIFE_DEW],[1,t.AQUA_CUTTER],[9,t.HELPING_HAND],[12,t.FEINT],[15,t.TELEPORT],[18,t.AERIAL_ACE],[23,t.FALSE_SWIPE],[28,t.PROTECT],[35,t.SWORDS_DANCE],[42,t.PSYCHO_CUT],[49,t.HEAL_PULSE],[56,t.WIDE_GUARD],[56,t.QUICK_GUARD],[63,t.CLOSE_COMBAT]],[e.PROBOPASS]:[[Z,t.TRI_ATTACK],[1,t.TACKLE],[1,t.HARDEN],[1,t.IRON_DEFENSE],[1,t.BLOCK],[1,t.ROCK_THROW],[1,t.GRAVITY],[1,t.MAGNET_RISE],[1,t.WIDE_GUARD],[1,t.MAGNETIC_FLUX],[13,t.THUNDER_WAVE],[16,t.REST],[19,t.SPARK],[22,t.ROCK_SLIDE],[25,t.POWER_GEM],[28,t.ROCK_BLAST],[31,t.DISCHARGE],[34,t.SANDSTORM],[37,t.EARTH_POWER],[40,t.STONE_EDGE],[43,t.ZAP_CANNON],[43,t.LOCK_ON]],[e.DUSKNOIR]:[[1,t.FIRE_PUNCH],[1,t.ICE_PUNCH],[1,t.THUNDER_PUNCH],[1,t.BIND],[1,t.LEER],[1,t.DISABLE],[1,t.ASTONISH],[1,t.PURSUIT],[1,t.SHADOW_PUNCH],[1,t.GRAVITY],[1,t.SHADOW_SNEAK],[12,t.CONFUSE_RAY],[16,t.NIGHT_SHADE],[20,t.PAYBACK],[24,t.WILL_O_WISP],[28,t.MEAN_LOOK],[32,t.HEX],[36,t.CURSE],[42,t.SHADOW_BALL],[48,t.FUTURE_SIGHT],[54,t.DESTINY_BOND]],[e.FROSLASS]:[[Z,t.HEX],[1,t.HEADBUTT],[1,t.LEER],[1,t.BITE],[1,t.DOUBLE_TEAM],[1,t.POWDER_SNOW],[1,t.PROTECT],[1,t.DESTINY_BOND],[1,t.WEATHER_BALL],[1,t.CRUNCH],[1,t.ASTONISH],[1,t.ICE_FANG],[1,t.OMINOUS_WIND],[15,t.ICE_SHARD],[20,t.DRAINING_KISS],[25,t.ICY_WIND],[30,t.FROST_BREATH],[35,t.CONFUSE_RAY],[40,t.SNOWSCAPE],[47,t.WILL_O_WISP],[54,t.AURORA_VEIL],[61,t.SHADOW_BALL],[68,t.BLIZZARD]],[e.ROTOM]:[[1,t.DOUBLE_TEAM],[1,t.ASTONISH],[5,t.THUNDER_SHOCK],[10,t.CONFUSE_RAY],[15,t.CHARGE],[20,t.ELECTRO_BALL],[25,t.THUNDER_WAVE],[30,t.SHOCK_WAVE],[35,t.HEX],[40,t.SUBSTITUTE],[45,t.TRICK],[50,t.DISCHARGE],[55,t.UPROAR]],[e.UXIE]:[[w,t.TRI_ATTACK],[w,t.SNORE],[w,t.SAFEGUARD],[w,t.IRON_TAIL],[w,t.PSYCHO_CUT],[w,t.WONDER_ROOM],[w,t.MAGIC_ROOM],[w,t.ROUND],[w,t.ALLY_SWITCH],[w,t.EXPANDING_FORCE],[1,t.CONFUSION],[1,t.REST],[7,t.SWIFT],[14,t.ENDURE],[21,t.PSYBEAM],[28,t.IMPRISON],[35,t.EXTRASENSORY],[42,t.AMNESIA],[49,t.PSYCHIC],[56,t.YAWN],[63,t.FUTURE_SIGHT],[70,t.FLAIL],[77,t.MEMENTO],[84,t.MYSTICAL_POWER]],[e.MESPRIT]:[[w,t.TRI_ATTACK],[w,t.SNORE],[w,t.SAFEGUARD],[w,t.IRON_TAIL],[w,t.PSYCHO_CUT],[w,t.WONDER_ROOM],[w,t.MAGIC_ROOM],[w,t.ROUND],[w,t.ALLY_SWITCH],[w,t.EXPANDING_FORCE],[1,t.CONFUSION],[1,t.REST],[7,t.SWIFT],[14,t.PROTECT],[21,t.PSYBEAM],[28,t.IMPRISON],[35,t.EXTRASENSORY],[42,t.CHARM],[49,t.PSYCHIC],[56,t.FLATTER],[63,t.FUTURE_SIGHT],[70,t.COPYCAT],[77,t.HEALING_WISH],[84,t.MYSTICAL_POWER]],[e.AZELF]:[[w,t.SELF_DESTRUCT],[w,t.TRI_ATTACK],[w,t.SNORE],[w,t.SAFEGUARD],[w,t.IRON_TAIL],[w,t.PAYBACK],[w,t.ASSURANCE],[w,t.PSYCHO_CUT],[w,t.WONDER_ROOM],[w,t.MAGIC_ROOM],[w,t.ROUND],[w,t.ALLY_SWITCH],[w,t.EXPANDING_FORCE],[1,t.CONFUSION],[1,t.REST],[7,t.SWIFT],[14,t.DETECT],[21,t.PSYBEAM],[28,t.IMPRISON],[35,t.EXTRASENSORY],[42,t.NASTY_PLOT],[49,t.PSYCHIC],[56,t.UPROAR],[63,t.FUTURE_SIGHT],[70,t.LAST_RESORT],[77,t.EXPLOSION],[84,t.MYSTICAL_POWER]],[e.DIALGA]:[[1,t.SCARY_FACE],[1,t.METAL_CLAW],[8,t.DRAGON_BREATH],[16,t.ANCIENT_POWER],[24,t.SLASH],[32,t.FLASH_CANNON],[40,t.DRAGON_CLAW],[48,t.AURA_SPHERE],[56,t.POWER_GEM],[64,t.METAL_BURST],[72,t.EARTH_POWER],[80,t.IRON_TAIL],[88,t.ROAR_OF_TIME]],[e.PALKIA]:[[1,t.SCARY_FACE],[1,t.WATER_PULSE],[8,t.DRAGON_BREATH],[16,t.ANCIENT_POWER],[24,t.SLASH],[32,t.AQUA_RING],[48,t.AURA_SPHERE],[56,t.POWER_GEM],[64,t.AQUA_TAIL],[72,t.EARTH_POWER],[80,t.SPACIAL_REND],[88,t.HYDRO_PUMP]],[e.HEATRAN]:[[1,t.LEER],[1,t.FIRE_SPIN],[6,t.METAL_CLAW],[12,t.ANCIENT_POWER],[18,t.FIRE_FANG],[24,t.SCARY_FACE],[30,t.IRON_HEAD],[36,t.CRUNCH],[42,t.LAVA_PLUME],[48,t.METAL_SOUND],[54,t.EARTH_POWER],[60,t.HEAT_WAVE],[66,t.STONE_EDGE],[72,t.MAGMA_STORM]],[e.REGIGIGAS]:[[1,t.POUND],[1,t.CONFUSE_RAY],[1,t.DIZZY_PUNCH],[1,t.FORESIGHT],[6,t.PAYBACK],[12,t.REVENGE],[18,t.STOMP],[24,t.PROTECT],[30,t.KNOCK_OFF],[36,t.MEGA_PUNCH],[42,t.BODY_PRESS],[48,t.WIDE_GUARD],[54,t.ZEN_HEADBUTT],[60,t.HEAVY_SLAM],[66,t.HAMMER_ARM],[72,t.GIGA_IMPACT],[78,t.CRUSH_GRIP]],[e.GIRATINA]:[[1,t.SHADOW_SNEAK],[1,t.DEFOG],[1,t.DRAGON_BREATH],[7,t.OMINOUS_WIND],[14,t.ANCIENT_POWER],[21,t.HEX],[28,t.SLASH],[35,t.SCARY_FACE],[42,t.SHADOW_CLAW],[49,t.PAIN_SPLIT],[56,t.AURA_SPHERE],[63,t.DRAGON_CLAW],[70,t.EARTH_POWER],[77,t.SHADOW_FORCE],[84,t.DESTINY_BOND]],[e.CRESSELIA]:[[1,t.CONFUSION],[1,t.DOUBLE_TEAM],[6,t.MIST],[12,t.AURORA_BEAM],[18,t.PSYBEAM],[24,t.ALLY_SWITCH],[30,t.SLASH],[36,t.PSYCHO_CUT],[42,t.MOONLIGHT],[48,t.SAFEGUARD],[54,t.PSYCHIC],[60,t.MOONBLAST],[66,t.FUTURE_SIGHT],[72,t.LUNAR_DANCE],[72,t.LUNAR_BLESSING]],[e.PHIONE]:[[1,t.WATER_GUN],[9,t.CHARM],[16,t.SUPERSONIC],[24,t.BUBBLE_BEAM],[31,t.ACID_ARMOR],[39,t.WHIRLPOOL],[46,t.WATER_PULSE],[54,t.AQUA_RING],[61,t.DIVE],[69,t.RAIN_DANCE],[75,t.TAKE_HEART]],[e.MANAPHY]:[[1,t.HEART_SWAP],[1,t.TAIL_GLOW],[1,t.WATER_GUN],[9,t.CHARM],[16,t.SUPERSONIC],[24,t.BUBBLE_BEAM],[31,t.ACID_ARMOR],[39,t.WHIRLPOOL],[46,t.WATER_PULSE],[54,t.AQUA_RING],[61,t.DIVE],[69,t.RAIN_DANCE],[76,t.TAKE_HEART]],[e.DARKRAI]:[[1,t.DISABLE],[1,t.OMINOUS_WIND],[1,t.PURSUIT],[11,t.QUICK_ATTACK],[20,t.HYPNOSIS],[29,t.SUCKER_PUNCH],[38,t.NIGHT_SHADE],[47,t.DOUBLE_TEAM],[57,t.HAZE],[66,t.DARK_VOID],[75,t.NASTY_PLOT],[84,t.DREAM_EATER],[93,t.DARK_PULSE]],[e.SHAYMIN]:[[1,t.LEAFAGE],[1,t.GROWTH],[10,t.MAGICAL_LEAF],[19,t.LEECH_SEED],[28,t.SYNTHESIS],[37,t.SWEET_SCENT],[46,t.NATURAL_GIFT],[55,t.WORRY_SEED],[64,t.AROMATHERAPY],[73,t.ENERGY_BALL],[82,t.SWEET_KISS],[91,t.HEALING_WISH],[100,t.SEED_FLARE]],[e.ARCEUS]:[[1,t.SEISMIC_TOSS],[1,t.COSMIC_POWER],[1,t.PUNISHMENT],[10,t.GRAVITY],[20,t.EARTH_POWER],[30,t.HYPER_VOICE],[40,t.EXTREME_SPEED],[50,t.HEALING_WISH],[60,t.FUTURE_SIGHT],[70,t.RECOVER],[80,t.HYPER_BEAM],[90,t.PERISH_SONG],[100,t.JUDGMENT]],[e.VICTINI]:[[1,t.CONFUSION],[1,t.QUICK_ATTACK],[1,t.FOCUS_ENERGY],[1,t.FLAME_CHARGE],[1,t.V_CREATE],[7,t.WORK_UP],[14,t.INCINERATE],[21,t.STORED_POWER],[28,t.HEADBUTT],[35,t.ENDURE],[42,t.ZEN_HEADBUTT],[49,t.INFERNO],[56,t.REVERSAL],[63,t.SEARING_SHOT],[70,t.DOUBLE_EDGE],[77,t.FLARE_BLITZ],[84,t.OVERHEAT],[91,t.FINAL_GAMBIT]],[e.SNIVY]:[[1,t.TACKLE],[4,t.LEER],[5,t.VINE_WHIP],[10,t.WRAP],[13,t.GROWTH],[16,t.MAGICAL_LEAF],[19,t.LEECH_SEED],[22,t.MEGA_DRAIN],[25,t.SLAM],[28,t.LEAF_BLADE],[31,t.COIL],[34,t.GIGA_DRAIN],[37,t.GASTRO_ACID],[40,t.LEAF_STORM]],[e.SERVINE]:[[1,t.VINE_WHIP],[1,t.TACKLE],[1,t.WRAP],[1,t.LEER],[13,t.GROWTH],[16,t.MAGICAL_LEAF],[20,t.LEECH_SEED],[24,t.MEGA_DRAIN],[28,t.SLAM],[32,t.LEAF_BLADE],[36,t.COIL],[40,t.GIGA_DRAIN],[44,t.GASTRO_ACID],[48,t.LEAF_STORM]],[e.SERPERIOR]:[[1,t.VINE_WHIP],[1,t.TACKLE],[1,t.WRAP],[1,t.LEER],[13,t.GROWTH],[16,t.MAGICAL_LEAF],[20,t.LEECH_SEED],[24,t.MEGA_DRAIN],[28,t.SLAM],[32,t.LEAF_BLADE],[38,t.COIL],[44,t.GIGA_DRAIN],[50,t.GASTRO_ACID],[56,t.LEAF_STORM]],[e.TEPIG]:[[1,t.TACKLE],[3,t.TAIL_WHIP],[5,t.EMBER],[9,t.ENDURE],[13,t.DEFENSE_CURL],[15,t.FLAME_CHARGE],[19,t.SMOG],[21,t.ROLLOUT],[25,t.TAKE_DOWN],[27,t.HEAT_CRASH],[31,t.ASSURANCE],[33,t.FLAMETHROWER],[37,t.HEAD_SMASH],[39,t.ROAR],[43,t.FLARE_BLITZ]],[e.PIGNITE]:[[Z,t.ARM_THRUST],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.EMBER],[1,t.ENDURE],[13,t.DEFENSE_CURL],[15,t.FLAME_CHARGE],[20,t.SMOG],[23,t.ROLLOUT],[28,t.TAKE_DOWN],[31,t.HEAT_CRASH],[36,t.ASSURANCE],[39,t.FLAMETHROWER],[44,t.HEAD_SMASH],[47,t.ROAR],[52,t.FLARE_BLITZ]],[e.EMBOAR]:[[w,t.ENDURE],[w,t.HAMMER_ARM],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.EMBER],[1,t.ARM_THRUST],[13,t.DEFENSE_CURL],[15,t.FLAME_CHARGE],[20,t.SMOG],[23,t.ROLLOUT],[28,t.TAKE_DOWN],[31,t.HEAT_CRASH],[38,t.ASSURANCE],[43,t.FLAMETHROWER],[50,t.HEAD_SMASH],[55,t.ROAR],[62,t.FLARE_BLITZ]],[e.OSHAWOTT]:[[1,t.TACKLE],[5,t.TAIL_WHIP],[5,t.WATER_GUN],[11,t.SOAK],[13,t.FOCUS_ENERGY],[17,t.RAZOR_SHELL],[19,t.FURY_CUTTER],[23,t.WATER_PULSE],[25,t.AERIAL_ACE],[29,t.AQUA_JET],[31,t.ENCORE],[35,t.AQUA_TAIL],[37,t.RETALIATE],[41,t.SWORDS_DANCE],[43,t.HYDRO_PUMP]],[e.DEWOTT]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.WATER_GUN],[1,t.SOAK],[13,t.FOCUS_ENERGY],[18,t.RAZOR_SHELL],[21,t.FURY_CUTTER],[26,t.WATER_PULSE],[29,t.AERIAL_ACE],[34,t.AQUA_JET],[37,t.ENCORE],[42,t.AQUA_TAIL],[45,t.RETALIATE],[50,t.SWORDS_DANCE],[53,t.HYDRO_PUMP]],[e.SAMUROTT]:[[Z,t.SLASH],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.WATER_GUN],[1,t.MEGAHORN],[1,t.SOAK],[13,t.FOCUS_ENERGY],[18,t.RAZOR_SHELL],[21,t.FURY_CUTTER],[25,t.WATER_PULSE],[29,t.AERIAL_ACE],[34,t.AQUA_JET],[39,t.ENCORE],[46,t.AQUA_TAIL],[51,t.RETALIATE],[58,t.SWORDS_DANCE],[63,t.HYDRO_PUMP]],[e.PATRAT]:[[1,t.TACKLE],[3,t.LEER],[6,t.BITE],[8,t.BIDE],[11,t.DETECT],[13,t.SAND_ATTACK],[16,t.CRUNCH],[18,t.HYPNOSIS],[21,t.SUPER_FANG],[23,t.AFTER_YOU],[26,t.FOCUS_ENERGY],[28,t.WORK_UP],[31,t.HYPER_FANG],[33,t.NASTY_PLOT],[36,t.MEAN_LOOK],[38,t.BATON_PASS],[41,t.SLAM]],[e.WATCHOG]:[[Z,t.CONFUSE_RAY],[w,t.WORK_UP],[1,t.TACKLE],[1,t.LEER],[1,t.BITE],[1,t.LOW_KICK],[1,t.ROTOTILLER],[8,t.BIDE],[11,t.DETECT],[13,t.SAND_ATTACK],[16,t.CRUNCH],[18,t.HYPNOSIS],[22,t.SUPER_FANG],[25,t.AFTER_YOU],[29,t.FOCUS_ENERGY],[32,t.PSYCH_UP],[36,t.HYPER_FANG],[39,t.NASTY_PLOT],[43,t.MEAN_LOOK],[46,t.BATON_PASS],[50,t.SLAM]],[e.LILLIPUP]:[[1,t.TACKLE],[1,t.LEER],[4,t.WORK_UP],[8,t.BITE],[12,t.RETALIATE],[17,t.BABY_DOLL_EYES],[20,t.PLAY_ROUGH],[24,t.CRUNCH],[28,t.TAKE_DOWN],[32,t.HELPING_HAND],[36,t.REVERSAL],[40,t.ROAR],[44,t.LAST_RESORT],[48,t.GIGA_IMPACT]],[e.HERDIER]:[[1,t.TACKLE],[1,t.LEER],[1,t.BITE],[1,t.WORK_UP],[12,t.RETALIATE],[19,t.BABY_DOLL_EYES],[24,t.PLAY_ROUGH],[30,t.CRUNCH],[36,t.TAKE_DOWN],[42,t.HELPING_HAND],[48,t.REVERSAL],[54,t.ROAR],[60,t.LAST_RESORT],[66,t.GIGA_IMPACT]],[e.STOUTLAND]:[[1,t.TACKLE],[1,t.LEER],[1,t.BITE],[1,t.THUNDER_FANG],[1,t.ICE_FANG],[1,t.FIRE_FANG],[1,t.WORK_UP],[12,t.RETALIATE],[19,t.BABY_DOLL_EYES],[24,t.PLAY_ROUGH],[30,t.CRUNCH],[38,t.TAKE_DOWN],[46,t.HELPING_HAND],[54,t.REVERSAL],[62,t.ROAR],[70,t.LAST_RESORT],[78,t.GIGA_IMPACT]],[e.PURRLOIN]:[[1,t.SCRATCH],[1,t.GROWL],[4,t.SAND_ATTACK],[5,t.FAKE_OUT],[12,t.FURY_SWIPES],[16,t.TORMENT],[21,t.ASSURANCE],[24,t.HONE_CLAWS],[28,t.SUCKER_PUNCH],[32,t.NASTY_PLOT],[36,t.NIGHT_SLASH],[40,t.PLAY_ROUGH]],[e.LIEPARD]:[[1,t.ASSIST],[1,t.SCRATCH],[1,t.SAND_ATTACK],[1,t.GROWL],[1,t.FAKE_OUT],[12,t.FURY_SWIPES],[16,t.TORMENT],[23,t.ASSURANCE],[28,t.HONE_CLAWS],[34,t.SUCKER_PUNCH],[40,t.NASTY_PLOT],[46,t.NIGHT_SLASH],[52,t.PLAY_ROUGH]],[e.PANSAGE]:[[1,t.SCRATCH],[1,t.PLAY_NICE],[4,t.LEER],[7,t.LICK],[10,t.VINE_WHIP],[13,t.FURY_SWIPES],[16,t.LEECH_SEED],[19,t.BITE],[22,t.SEED_BOMB],[25,t.TORMENT],[28,t.FLING],[31,t.ACROBATICS],[34,t.GRASS_KNOT],[37,t.RECYCLE],[40,t.NATURAL_GIFT],[43,t.CRUNCH]],[e.SIMISAGE]:[[w,t.SCRATCH],[w,t.PLAY_NICE],[w,t.VINE_WHIP],[w,t.LEECH_SEED],[w,t.BITE],[w,t.TORMENT],[w,t.FLING],[w,t.ACROBATICS],[w,t.GRASS_KNOT],[w,t.RECYCLE],[w,t.NATURAL_GIFT],[w,t.CRUNCH],[1,t.LEER],[1,t.LICK],[1,t.FURY_SWIPES],[1,t.SEED_BOMB]],[e.PANSEAR]:[[1,t.SCRATCH],[1,t.PLAY_NICE],[4,t.LEER],[7,t.LICK],[10,t.INCINERATE],[13,t.FURY_SWIPES],[16,t.YAWN],[19,t.BITE],[22,t.FLAME_BURST],[25,t.AMNESIA],[28,t.FLING],[31,t.ACROBATICS],[34,t.FIRE_BLAST],[37,t.RECYCLE],[40,t.NATURAL_GIFT],[43,t.CRUNCH]],[e.SIMISEAR]:[[w,t.SCRATCH],[w,t.PLAY_NICE],[w,t.INCINERATE],[w,t.YAWN],[w,t.BITE],[w,t.AMNESIA],[w,t.FLING],[w,t.ACROBATICS],[w,t.FIRE_BLAST],[w,t.RECYCLE],[w,t.NATURAL_GIFT],[w,t.CRUNCH],[1,t.LEER],[1,t.LICK],[1,t.FURY_SWIPES],[1,t.FLAME_BURST]],[e.PANPOUR]:[[1,t.SCRATCH],[1,t.PLAY_NICE],[4,t.LEER],[7,t.LICK],[10,t.WATER_GUN],[13,t.FURY_SWIPES],[16,t.WATER_SPORT],[19,t.BITE],[22,t.SCALD],[25,t.TAUNT],[28,t.FLING],[31,t.ACROBATICS],[34,t.BRINE],[37,t.RECYCLE],[40,t.NATURAL_GIFT],[43,t.CRUNCH]],[e.SIMIPOUR]:[[w,t.SCRATCH],[w,t.PLAY_NICE],[w,t.WATER_GUN],[w,t.WATER_SPORT],[w,t.BITE],[w,t.TAUNT],[w,t.FLING],[w,t.ACROBATICS],[w,t.BRINE],[w,t.RECYCLE],[w,t.NATURAL_GIFT],[w,t.CRUNCH],[1,t.LEER],[1,t.LICK],[1,t.FURY_SWIPES],[1,t.SCALD]],[e.MUNNA]:[[1,t.DEFENSE_CURL],[1,t.STORED_POWER],[1,t.PSYWAVE],[4,t.HYPNOSIS],[8,t.PSYBEAM],[12,t.IMPRISON],[16,t.MOONLIGHT],[20,t.MAGIC_COAT],[24,t.ZEN_HEADBUTT],[28,t.CALM_MIND],[32,t.YAWN],[36,t.PSYCHIC],[40,t.MOONBLAST],[44,t.DREAM_EATER],[48,t.FUTURE_SIGHT],[52,t.WONDER_ROOM]],[e.MUSHARNA]:[[1,t.PSYWAVE],[1,t.PSYBEAM],[1,t.PSYCHIC],[1,t.HYPNOSIS],[1,t.DEFENSE_CURL],[1,t.LUCKY_CHANT],[1,t.DREAM_EATER],[1,t.MOONLIGHT],[1,t.FUTURE_SIGHT],[1,t.MAGIC_COAT],[1,t.YAWN],[1,t.IMPRISON],[1,t.CALM_MIND],[1,t.ZEN_HEADBUTT],[1,t.WONDER_ROOM],[1,t.STORED_POWER],[1,t.MOONBLAST],[1,t.PSYCHIC_TERRAIN]],[e.PIDOVE]:[[1,t.GUST],[1,t.GROWL],[4,t.LEER],[8,t.QUICK_ATTACK],[12,t.TAUNT],[16,t.AIR_CUTTER],[20,t.SWAGGER],[24,t.FEATHER_DANCE],[28,t.DETECT],[32,t.AIR_SLASH],[36,t.ROOST],[40,t.TAILWIND],[44,t.SKY_ATTACK]],[e.TRANQUILL]:[[1,t.GUST],[1,t.LEER],[1,t.GROWL],[1,t.QUICK_ATTACK],[12,t.TAUNT],[16,t.AIR_CUTTER],[20,t.SWAGGER],[26,t.FEATHER_DANCE],[34,t.DETECT],[38,t.AIR_SLASH],[44,t.ROOST],[50,t.TAILWIND],[56,t.SKY_ATTACK]],[e.UNFEZANT]:[[1,t.GUST],[1,t.LEER],[1,t.GROWL],[1,t.QUICK_ATTACK],[12,t.TAUNT],[16,t.AIR_CUTTER],[20,t.SWAGGER],[26,t.FEATHER_DANCE],[36,t.DETECT],[42,t.AIR_SLASH],[50,t.ROOST],[58,t.TAILWIND],[66,t.SKY_ATTACK]],[e.BLITZLE]:[[1,t.QUICK_ATTACK],[4,t.TAIL_WHIP],[8,t.CHARGE],[11,t.SHOCK_WAVE],[15,t.THUNDER_WAVE],[18,t.FLAME_CHARGE],[22,t.SPARK],[25,t.STOMP],[29,t.DISCHARGE],[33,t.AGILITY],[35,t.WILD_CHARGE],[40,t.THRASH]],[e.ZEBSTRIKA]:[[1,t.TAIL_WHIP],[1,t.THUNDER_WAVE],[1,t.QUICK_ATTACK],[1,t.CHARGE],[1,t.ION_DELUGE],[11,t.SHOCK_WAVE],[18,t.FLAME_CHARGE],[25,t.SPARK],[31,t.STOMP],[36,t.DISCHARGE],[42,t.AGILITY],[47,t.WILD_CHARGE],[53,t.THRASH]],[e.ROGGENROLA]:[[1,t.SAND_ATTACK],[1,t.TACKLE],[4,t.HARDEN],[8,t.STEALTH_ROCK],[12,t.MUD_SLAP],[16,t.SMACK_DOWN],[20,t.IRON_DEFENSE],[24,t.HEADBUTT],[28,t.ROCK_SLIDE],[32,t.ROCK_BLAST],[36,t.SANDSTORM],[40,t.STONE_EDGE],[44,t.EXPLOSION]],[e.BOLDORE]:[[Z,t.POWER_GEM],[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.HARDEN],[1,t.STEALTH_ROCK],[12,t.MUD_SLAP],[16,t.SMACK_DOWN],[20,t.IRON_DEFENSE],[24,t.HEADBUTT],[30,t.ROCK_SLIDE],[36,t.ROCK_BLAST],[42,t.SANDSTORM],[48,t.STONE_EDGE],[54,t.EXPLOSION]],[e.GIGALITH]:[[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.HARDEN],[1,t.POWER_GEM],[1,t.STEALTH_ROCK],[12,t.MUD_SLAP],[16,t.SMACK_DOWN],[20,t.IRON_DEFENSE],[24,t.HEADBUTT],[30,t.ROCK_SLIDE],[36,t.ROCK_BLAST],[42,t.SANDSTORM],[48,t.STONE_EDGE],[54,t.EXPLOSION]],[e.WOOBAT]:[[1,t.GUST],[1,t.ATTRACT],[5,t.CONFUSION],[10,t.ENDEAVOR],[15,t.AIR_CUTTER],[20,t.IMPRISON],[25,t.ASSURANCE],[30,t.AMNESIA],[35,t.AIR_SLASH],[40,t.PSYCHIC],[45,t.CALM_MIND],[50,t.FUTURE_SIGHT],[55,t.SIMPLE_BEAM]],[e.SWOOBAT]:[[1,t.GUST],[1,t.CONFUSION],[1,t.ATTRACT],[1,t.ENDEAVOR],[15,t.AIR_CUTTER],[20,t.IMPRISON],[25,t.ASSURANCE],[30,t.AMNESIA],[35,t.AIR_SLASH],[40,t.PSYCHIC],[45,t.CALM_MIND],[50,t.FUTURE_SIGHT],[55,t.SIMPLE_BEAM]],[e.DRILBUR]:[[1,t.MUD_SLAP],[1,t.RAPID_SPIN],[1,t.MUD_SPORT],[4,t.SCRATCH],[8,t.HONE_CLAWS],[12,t.FURY_SWIPES],[16,t.METAL_CLAW],[20,t.SANDSTORM],[24,t.CRUSH_CLAW],[28,t.ROCK_SLIDE],[32,t.DIG],[36,t.SWORDS_DANCE],[40,t.DRILL_RUN],[44,t.EARTHQUAKE],[48,t.FISSURE]],[e.EXCADRILL]:[[Z,t.HORN_DRILL],[1,t.SCRATCH],[1,t.MUD_SLAP],[1,t.RAPID_SPIN],[1,t.MUD_SPORT],[1,t.ROTOTILLER],[1,t.HONE_CLAWS],[12,t.FURY_SWIPES],[16,t.METAL_CLAW],[20,t.SANDSTORM],[24,t.CRUSH_CLAW],[28,t.ROCK_SLIDE],[34,t.DIG],[40,t.SWORDS_DANCE],[46,t.DRILL_RUN],[52,t.EARTHQUAKE],[58,t.FISSURE]],[e.AUDINO]:[[1,t.POUND],[1,t.PLAY_NICE],[4,t.DISARMING_VOICE],[9,t.BABY_DOLL_EYES],[12,t.HELPING_HAND],[16,t.GROWL],[20,t.ZEN_HEADBUTT],[24,t.LIFE_DEW],[28,t.AFTER_YOU],[32,t.TAKE_DOWN],[36,t.SIMPLE_BEAM],[40,t.HYPER_VOICE],[44,t.HEAL_PULSE],[48,t.DOUBLE_EDGE],[52,t.ENTRAINMENT],[56,t.MISTY_TERRAIN],[60,t.LAST_RESORT]],[e.TIMBURR]:[[1,t.POUND],[1,t.LEER],[4,t.LOW_KICK],[8,t.ROCK_THROW],[12,t.FOCUS_ENERGY],[16,t.BULK_UP],[20,t.ROCK_SLIDE],[24,t.SLAM],[28,t.SCARY_FACE],[32,t.DYNAMIC_PUNCH],[36,t.HAMMER_ARM],[40,t.STONE_EDGE],[44,t.SUPERPOWER],[48,t.FOCUS_PUNCH]],[e.GURDURR]:[[1,t.POUND],[1,t.LEER],[1,t.LOW_KICK],[1,t.ROCK_THROW],[1,t.BIDE],[12,t.FOCUS_ENERGY],[16,t.BULK_UP],[20,t.ROCK_SLIDE],[24,t.SLAM],[30,t.SCARY_FACE],[36,t.DYNAMIC_PUNCH],[42,t.HAMMER_ARM],[48,t.STONE_EDGE],[54,t.SUPERPOWER],[60,t.FOCUS_PUNCH]],[e.CONKELDURR]:[[1,t.POUND],[1,t.LEER],[1,t.LOW_KICK],[1,t.ROCK_THROW],[1,t.BIDE],[12,t.FOCUS_ENERGY],[16,t.BULK_UP],[20,t.ROCK_SLIDE],[24,t.SLAM],[30,t.SCARY_FACE],[36,t.DYNAMIC_PUNCH],[42,t.HAMMER_ARM],[48,t.STONE_EDGE],[54,t.SUPERPOWER],[60,t.FOCUS_PUNCH]],[e.TYMPOLE]:[[1,t.BUBBLE],[1,t.GROWL],[1,t.ECHOED_VOICE],[4,t.ACID],[8,t.SUPERSONIC],[12,t.MUD_SHOT],[16,t.ROUND],[20,t.BUBBLE_BEAM],[24,t.FLAIL],[28,t.UPROAR],[32,t.AQUA_RING],[36,t.HYPER_VOICE],[40,t.MUDDY_WATER],[44,t.RAIN_DANCE],[48,t.HYDRO_PUMP]],[e.PALPITOAD]:[[1,t.BUBBLE],[1,t.GROWL],[1,t.SUPERSONIC],[1,t.ACID],[1,t.ECHOED_VOICE],[12,t.MUD_SHOT],[16,t.ROUND],[20,t.BUBBLE_BEAM],[24,t.FLAIL],[30,t.UPROAR],[37,t.AQUA_RING],[42,t.HYPER_VOICE],[48,t.MUDDY_WATER],[54,t.RAIN_DANCE],[60,t.HYDRO_PUMP]],[e.SEISMITOAD]:[[Z,t.DRAIN_PUNCH],[1,t.BUBBLE],[1,t.GROWL],[1,t.SUPERSONIC],[1,t.ACID],[1,t.GASTRO_ACID],[1,t.ECHOED_VOICE],[12,t.MUD_SHOT],[16,t.ROUND],[20,t.BUBBLE_BEAM],[24,t.FLAIL],[30,t.UPROAR],[39,t.AQUA_RING],[46,t.HYPER_VOICE],[54,t.MUDDY_WATER],[62,t.RAIN_DANCE],[70,t.HYDRO_PUMP]],[e.THROH]:[[1,t.ROCK_SMASH],[1,t.LEER],[1,t.BIDE],[1,t.MAT_BLOCK],[1,t.BIND],[5,t.FOCUS_ENERGY],[10,t.CIRCLE_THROW],[15,t.WIDE_GUARD],[20,t.REVENGE],[25,t.BULK_UP],[30,t.STORM_THROW],[35,t.VITAL_THROW],[40,t.SEISMIC_TOSS],[45,t.ENDURE],[50,t.REVERSAL],[55,t.SUPERPOWER]],[e.SAWK]:[[1,t.LEER],[1,t.ROCK_SMASH],[1,t.BIDE],[5,t.FOCUS_ENERGY],[10,t.DOUBLE_KICK],[15,t.QUICK_GUARD],[20,t.LOW_SWEEP],[25,t.BULK_UP],[30,t.RETALIATE],[35,t.BRICK_BREAK],[40,t.COUNTER],[45,t.ENDURE],[50,t.REVERSAL],[55,t.CLOSE_COMBAT]],[e.SEWADDLE]:[[1,t.TACKLE],[1,t.STRING_SHOT],[8,t.BUG_BITE],[15,t.RAZOR_LEAF],[22,t.STRUGGLE_BUG],[29,t.ENDURE],[31,t.STICKY_WEB],[36,t.BUG_BUZZ],[43,t.FLAIL]],[e.SWADLOON]:[[Z,t.PROTECT],[1,t.TACKLE],[1,t.RAZOR_LEAF],[1,t.STRING_SHOT],[1,t.BUG_BITE],[1,t.GRASS_WHISTLE],[22,t.STRUGGLE_BUG],[29,t.ENDURE],[31,t.STICKY_WEB],[36,t.BUG_BUZZ],[43,t.FLAIL]],[e.LEAVANNY]:[[Z,t.SLASH],[w,t.BUG_BITE],[w,t.STICKY_WEB],[w,t.BUG_BUZZ],[1,t.PROTECT],[1,t.TACKLE],[1,t.RAZOR_LEAF],[1,t.STRING_SHOT],[1,t.GRASS_WHISTLE],[1,t.ENDURE],[1,t.FLAIL],[1,t.FALSE_SWIPE],[22,t.STRUGGLE_BUG],[29,t.FELL_STINGER],[32,t.HELPING_HAND],[36,t.LEAF_BLADE],[39,t.X_SCISSOR],[43,t.ENTRAINMENT],[46,t.SWORDS_DANCE],[50,t.LEAF_STORM]],[e.VENIPEDE]:[[1,t.POISON_STING],[1,t.DEFENSE_CURL],[4,t.ROLLOUT],[8,t.PROTECT],[12,t.POISON_TAIL],[16,t.SCREECH],[20,t.BUG_BITE],[24,t.VENOSHOCK],[28,t.TAKE_DOWN],[32,t.AGILITY],[36,t.TOXIC],[40,t.VENOM_DRENCH],[44,t.DOUBLE_EDGE]],[e.WHIRLIPEDE]:[[Z,t.IRON_DEFENSE],[1,t.POISON_STING],[1,t.DEFENSE_CURL],[1,t.PROTECT],[1,t.ROLLOUT],[12,t.POISON_TAIL],[16,t.SCREECH],[20,t.BUG_BITE],[26,t.VENOSHOCK],[32,t.TAKE_DOWN],[38,t.AGILITY],[44,t.TOXIC],[50,t.VENOM_DRENCH],[56,t.DOUBLE_EDGE]],[e.SCOLIPEDE]:[[1,t.POISON_STING],[1,t.DEFENSE_CURL],[1,t.PROTECT],[1,t.ROLLOUT],[1,t.BATON_PASS],[1,t.IRON_DEFENSE],[12,t.POISON_TAIL],[16,t.SCREECH],[20,t.BUG_BITE],[26,t.VENOSHOCK],[34,t.TAKE_DOWN],[42,t.AGILITY],[50,t.TOXIC],[58,t.VENOM_DRENCH],[66,t.DOUBLE_EDGE],[74,t.MEGAHORN]],[e.COTTONEE]:[[1,t.ABSORB],[1,t.HELPING_HAND],[3,t.FAIRY_WIND],[6,t.STUN_SPORE],[12,t.MEGA_DRAIN],[15,t.RAZOR_LEAF],[18,t.GROWTH],[21,t.POISON_POWDER],[24,t.GIGA_DRAIN],[27,t.CHARM],[30,t.LEECH_SEED],[33,t.COTTON_SPORE],[36,t.ENERGY_BALL],[39,t.SUNNY_DAY],[42,t.ENDEAVOR],[45,t.COTTON_GUARD],[48,t.SOLAR_BEAM]],[e.WHIMSICOTT]:[[1,t.GUST],[1,t.ABSORB],[1,t.MEGA_DRAIN],[1,t.LEECH_SEED],[1,t.GROWTH],[1,t.RAZOR_LEAF],[1,t.SOLAR_BEAM],[1,t.POISON_POWDER],[1,t.STUN_SPORE],[1,t.COTTON_SPORE],[1,t.GIGA_DRAIN],[1,t.CHARM],[1,t.SUNNY_DAY],[1,t.MEMENTO],[1,t.HELPING_HAND],[1,t.ENDEAVOR],[1,t.TAILWIND],[1,t.ENERGY_BALL],[1,t.COTTON_GUARD],[1,t.HURRICANE],[1,t.FAIRY_WIND],[1,t.MOONBLAST]],[e.PETILIL]:[[1,t.ABSORB],[1,t.GROWTH],[3,t.HELPING_HAND],[6,t.STUN_SPORE],[9,t.MEGA_DRAIN],[12,t.CHARM],[15,t.MAGICAL_LEAF],[18,t.SLEEP_POWDER],[21,t.GIGA_DRAIN],[24,t.LEECH_SEED],[27,t.AFTER_YOU],[30,t.ENERGY_BALL],[33,t.SYNTHESIS],[36,t.SUNNY_DAY],[39,t.ENTRAINMENT],[42,t.LEAF_STORM]],[e.LILLIGANT]:[[Z,t.PETAL_DANCE],[1,t.ABSORB],[1,t.MEGA_DRAIN],[1,t.LEECH_SEED],[1,t.GROWTH],[1,t.STUN_SPORE],[1,t.SLEEP_POWDER],[1,t.GIGA_DRAIN],[1,t.CHARM],[1,t.SYNTHESIS],[1,t.SUNNY_DAY],[1,t.HELPING_HAND],[1,t.TEETER_DANCE],[1,t.ENERGY_BALL],[1,t.LEAF_STORM],[1,t.QUIVER_DANCE],[1,t.ENTRAINMENT],[1,t.AFTER_YOU],[1,t.PETAL_BLIZZARD],[5,t.MAGICAL_LEAF]],[e.BASCULIN]:[[1,t.TAIL_WHIP],[1,t.WATER_GUN],[4,t.TACKLE],[8,t.FLAIL],[12,t.AQUA_JET],[16,t.BITE],[20,t.SCARY_FACE],[24,t.HEADBUTT],[28,t.SOAK],[32,t.CRUNCH],[36,t.TAKE_DOWN],[40,t.FINAL_GAMBIT],[44,t.WAVE_CRASH],[48,t.THRASH],[52,t.DOUBLE_EDGE],[56,t.HEAD_SMASH]],[e.SANDILE]:[[1,t.LEER],[1,t.POWER_TRIP],[3,t.SAND_ATTACK],[6,t.HONE_CLAWS],[9,t.SAND_TOMB],[12,t.SCARY_FACE],[15,t.BITE],[18,t.TORMENT],[21,t.DIG],[24,t.SWAGGER],[27,t.CRUNCH],[30,t.SANDSTORM],[33,t.FOUL_PLAY],[36,t.EARTHQUAKE],[39,t.THRASH]],[e.KROKOROK]:[[1,t.SAND_ATTACK],[1,t.LEER],[1,t.HONE_CLAWS],[1,t.POWER_TRIP],[9,t.SAND_TOMB],[12,t.SCARY_FACE],[15,t.BITE],[18,t.TORMENT],[21,t.DIG],[24,t.SWAGGER],[27,t.CRUNCH],[32,t.SANDSTORM],[35,t.FOUL_PLAY],[42,t.EARTHQUAKE],[47,t.THRASH]],[e.KROOKODILE]:[[1,t.SAND_ATTACK],[1,t.LEER],[1,t.HONE_CLAWS],[1,t.POWER_TRIP],[9,t.SAND_TOMB],[12,t.SCARY_FACE],[15,t.BITE],[18,t.TORMENT],[21,t.DIG],[24,t.SWAGGER],[27,t.CRUNCH],[32,t.SANDSTORM],[35,t.FOUL_PLAY],[44,t.EARTHQUAKE],[51,t.THRASH],[58,t.OUTRAGE]],[e.DARUMAKA]:[[1,t.TACKLE],[1,t.EMBER],[4,t.TAUNT],[8,t.BITE],[12,t.INCINERATE],[16,t.WORK_UP],[20,t.FIRE_FANG],[24,t.HEADBUTT],[28,t.FIRE_PUNCH],[32,t.UPROAR],[36,t.BELLY_DRUM],[40,t.FLARE_BLITZ],[44,t.THRASH],[48,t.SUPERPOWER]],[e.DARMANITAN]:[[Z,t.HAMMER_ARM],[1,t.TACKLE],[1,t.BITE],[1,t.EMBER],[1,t.TAUNT],[12,t.INCINERATE],[16,t.WORK_UP],[20,t.FIRE_FANG],[24,t.HEADBUTT],[28,t.FIRE_PUNCH],[32,t.UPROAR],[38,t.BELLY_DRUM],[44,t.FLARE_BLITZ],[50,t.THRASH],[56,t.SUPERPOWER]],[e.MARACTUS]:[[1,t.PECK],[1,t.ABSORB],[1,t.INGRAIN],[1,t.AFTER_YOU],[1,t.SPIKY_SHIELD],[4,t.GROWTH],[8,t.MEGA_DRAIN],[12,t.LEECH_SEED],[16,t.SUCKER_PUNCH],[20,t.PIN_MISSILE],[24,t.GIGA_DRAIN],[28,t.SWEET_SCENT],[32,t.SYNTHESIS],[36,t.PETAL_BLIZZARD],[40,t.COTTON_SPORE],[44,t.SUNNY_DAY],[48,t.SOLAR_BEAM],[52,t.ACUPRESSURE],[56,t.PETAL_DANCE],[60,t.COTTON_GUARD]],[e.DWEBBLE]:[[1,t.SAND_ATTACK],[1,t.FURY_CUTTER],[4,t.WITHDRAW],[8,t.SMACK_DOWN],[12,t.BUG_BITE],[16,t.FLAIL],[20,t.SLASH],[24,t.ROCK_SLIDE],[28,t.STEALTH_ROCK],[32,t.ROCK_BLAST],[36,t.X_SCISSOR],[40,t.ROCK_POLISH],[44,t.SHELL_SMASH],[48,t.ROCK_WRECKER]],[e.CRUSTLE]:[[1,t.SAND_ATTACK],[1,t.WITHDRAW],[1,t.FURY_CUTTER],[1,t.SMACK_DOWN],[12,t.BUG_BITE],[16,t.FLAIL],[20,t.SLASH],[24,t.ROCK_SLIDE],[28,t.STEALTH_ROCK],[32,t.ROCK_BLAST],[38,t.X_SCISSOR],[44,t.ROCK_POLISH],[50,t.SHELL_SMASH],[56,t.ROCK_WRECKER]],[e.SCRAGGY]:[[1,t.LEER],[1,t.LOW_KICK],[4,t.PAYBACK],[8,t.HEADBUTT],[12,t.SAND_ATTACK],[16,t.FACADE],[20,t.PROTECT],[24,t.BEAT_UP],[28,t.SCARY_FACE],[32,t.BRICK_BREAK],[36,t.SWAGGER],[40,t.CRUNCH],[44,t.HIGH_JUMP_KICK],[48,t.FOCUS_PUNCH],[52,t.HEAD_SMASH]],[e.SCRAFTY]:[[1,t.HEADBUTT],[1,t.LEER],[1,t.LOW_KICK],[1,t.PAYBACK],[1,t.FEINT_ATTACK],[12,t.SAND_ATTACK],[16,t.FACADE],[20,t.PROTECT],[24,t.BEAT_UP],[28,t.SCARY_FACE],[32,t.BRICK_BREAK],[36,t.SWAGGER],[42,t.CRUNCH],[48,t.HIGH_JUMP_KICK],[54,t.FOCUS_PUNCH],[60,t.HEAD_SMASH]],[e.SIGILYPH]:[[1,t.GUST],[1,t.CONFUSION],[5,t.GRAVITY],[10,t.HYPNOSIS],[15,t.AIR_CUTTER],[20,t.PSYBEAM],[25,t.WHIRLWIND],[30,t.COSMIC_POWER],[35,t.AIR_SLASH],[40,t.PSYCHIC],[45,t.TAILWIND],[50,t.LIGHT_SCREEN],[50,t.REFLECT],[55,t.SKY_ATTACK],[60,t.SKILL_SWAP]],[e.YAMASK]:[[1,t.PROTECT],[1,t.ASTONISH],[1,t.HEAL_BLOCK],[4,t.HAZE],[8,t.NIGHT_SHADE],[12,t.DISABLE],[16,t.WILL_O_WISP],[20,t.CRAFTY_SHIELD],[24,t.HEX],[28,t.MEAN_LOOK],[32,t.GRUDGE],[36,t.CURSE],[40,t.SHADOW_BALL],[44,t.DARK_PULSE],[48,t.GUARD_SPLIT],[48,t.POWER_SPLIT],[52,t.DESTINY_BOND]],[e.COFAGRIGUS]:[[Z,t.SHADOW_CLAW],[1,t.NIGHT_SHADE],[1,t.HAZE],[1,t.PROTECT],[1,t.SCARY_FACE],[1,t.ASTONISH],[1,t.HEAL_BLOCK],[12,t.DISABLE],[16,t.WILL_O_WISP],[20,t.CRAFTY_SHIELD],[24,t.HEX],[28,t.MEAN_LOOK],[32,t.GRUDGE],[38,t.CURSE],[44,t.SHADOW_BALL],[50,t.DARK_PULSE],[56,t.GUARD_SPLIT],[56,t.POWER_SPLIT],[62,t.DESTINY_BOND]],[e.TIRTOUGA]:[[1,t.WATER_GUN],[1,t.WITHDRAW],[1,t.BIDE],[3,t.PROTECT],[6,t.AQUA_JET],[9,t.SMACK_DOWN],[12,t.ANCIENT_POWER],[15,t.BITE],[18,t.WIDE_GUARD],[21,t.BRINE],[24,t.ROCK_SLIDE],[27,t.CRUNCH],[30,t.CURSE],[33,t.IRON_DEFENSE],[36,t.AQUA_TAIL],[39,t.RAIN_DANCE],[42,t.HYDRO_PUMP],[45,t.SHELL_SMASH]],[e.CARRACOSTA]:[[1,t.WATER_GUN],[1,t.WITHDRAW],[1,t.PROTECT],[1,t.AQUA_JET],[1,t.BIDE],[9,t.SMACK_DOWN],[12,t.ANCIENT_POWER],[15,t.BITE],[18,t.WIDE_GUARD],[21,t.BRINE],[24,t.ROCK_SLIDE],[27,t.CRUNCH],[30,t.CURSE],[33,t.IRON_DEFENSE],[36,t.AQUA_TAIL],[41,t.RAIN_DANCE],[46,t.HYDRO_PUMP],[51,t.SHELL_SMASH]],[e.ARCHEN]:[[1,t.LEER],[1,t.QUICK_ATTACK],[3,t.ROCK_THROW],[6,t.WING_ATTACK],[9,t.DRAGON_BREATH],[12,t.ANCIENT_POWER],[15,t.PLUCK],[18,t.QUICK_GUARD],[21,t.U_TURN],[24,t.ROCK_SLIDE],[27,t.SCARY_FACE],[30,t.CRUNCH],[33,t.AGILITY],[36,t.TAILWIND],[39,t.DRAGON_CLAW],[42,t.THRASH],[45,t.ENDEAVOR]],[e.ARCHEOPS]:[[1,t.WING_ATTACK],[1,t.LEER],[1,t.ROCK_THROW],[1,t.QUICK_ATTACK],[9,t.DRAGON_BREATH],[12,t.ANCIENT_POWER],[15,t.PLUCK],[18,t.QUICK_GUARD],[21,t.U_TURN],[24,t.ROCK_SLIDE],[27,t.SCARY_FACE],[30,t.CRUNCH],[33,t.AGILITY],[36,t.TAILWIND],[41,t.DRAGON_CLAW],[46,t.THRASH],[51,t.ENDEAVOR]],[e.TRUBBISH]:[[1,t.POUND],[1,t.POISON_GAS],[3,t.RECYCLE],[6,t.ACID_SPRAY],[9,t.AMNESIA],[12,t.CLEAR_SMOG],[15,t.TOXIC_SPIKES],[18,t.SLUDGE],[21,t.STOCKPILE],[21,t.SWALLOW],[24,t.TAKE_DOWN],[27,t.SLUDGE_BOMB],[30,t.TOXIC],[33,t.BELCH],[37,t.PAIN_SPLIT],[39,t.GUNK_SHOT],[42,t.EXPLOSION]],[e.GARBODOR]:[[1,t.POUND],[1,t.TAKE_DOWN],[1,t.POISON_GAS],[1,t.METAL_CLAW],[1,t.RECYCLE],[1,t.ACID_SPRAY],[9,t.AMNESIA],[12,t.CLEAR_SMOG],[15,t.TOXIC_SPIKES],[18,t.SLUDGE],[21,t.STOCKPILE],[21,t.SWALLOW],[24,t.BODY_SLAM],[27,t.SLUDGE_BOMB],[30,t.TOXIC],[33,t.BELCH],[39,t.PAIN_SPLIT],[43,t.GUNK_SHOT],[48,t.EXPLOSION]],[e.ZORUA]:[[1,t.SCRATCH],[1,t.LEER],[4,t.TORMENT],[8,t.HONE_CLAWS],[12,t.FURY_SWIPES],[16,t.SCARY_FACE],[20,t.TAUNT],[24,t.KNOCK_OFF],[28,t.FAKE_TEARS],[32,t.AGILITY],[36,t.IMPRISON],[40,t.NIGHT_DAZE],[44,t.NASTY_PLOT],[48,t.FOUL_PLAY]],[e.ZOROARK]:[[Z,t.NIGHT_SLASH],[1,t.SCRATCH],[1,t.LEER],[1,t.TORMENT],[1,t.U_TURN],[1,t.HONE_CLAWS],[1,t.SCARY_FACE],[1,t.PURSUIT],[12,t.FURY_SWIPES],[20,t.TAUNT],[24,t.KNOCK_OFF],[28,t.FAKE_TEARS],[34,t.AGILITY],[40,t.IMPRISON],[46,t.NIGHT_DAZE],[52,t.NASTY_PLOT],[58,t.FOUL_PLAY]],[e.MINCCINO]:[[1,t.POUND],[1,t.BABY_DOLL_EYES],[4,t.HELPING_HAND],[8,t.ECHOED_VOICE],[12,t.SING],[16,t.CHARM],[20,t.SWIFT],[24,t.ENCORE],[28,t.AFTER_YOU],[32,t.TAIL_SLAP],[36,t.TICKLE],[40,t.SLAM],[44,t.HYPER_VOICE],[48,t.LAST_RESORT]],[e.CINCCINO]:[[Z,t.TAIL_SLAP],[w,t.SLAM],[w,t.SWIFT],[w,t.ENCORE],[w,t.HELPING_HAND],[w,t.HYPER_VOICE],[w,t.TICKLE],[w,t.ROCK_BLAST],[w,t.LAST_RESORT],[w,t.AFTER_YOU],[w,t.ECHOED_VOICE],[w,t.BABY_DOLL_EYES],[1,t.BULLET_SEED],[1,t.SING],[1,t.CHARM],[1,t.POUND]],[e.GOTHITA]:[[1,t.POUND],[1,t.CONFUSION],[4,t.PLAY_NICE],[8,t.TICKLE],[12,t.PSYBEAM],[16,t.CHARM],[20,t.PSYSHOCK],[24,t.HYPNOSIS],[28,t.FAKE_TEARS],[33,t.PSYCH_UP],[34,t.HEAL_BLOCK],[36,t.PSYCHIC],[40,t.FLATTER],[44,t.FUTURE_SIGHT],[48,t.MAGIC_ROOM]],[e.GOTHORITA]:[[1,t.POUND],[1,t.CONFUSION],[1,t.TICKLE],[1,t.PLAY_NICE],[12,t.PSYBEAM],[16,t.CHARM],[20,t.PSYSHOCK],[24,t.HYPNOSIS],[28,t.FAKE_TEARS],[34,t.HEAL_BLOCK],[35,t.PSYCH_UP],[40,t.PSYCHIC],[46,t.FLATTER],[52,t.FUTURE_SIGHT],[58,t.MAGIC_ROOM]],[e.GOTHITELLE]:[[1,t.POUND],[1,t.CONFUSION],[1,t.TICKLE],[1,t.PLAY_NICE],[12,t.PSYBEAM],[16,t.CHARM],[20,t.PSYSHOCK],[24,t.HYPNOSIS],[28,t.FAKE_TEARS],[34,t.HEAL_BLOCK],[35,t.PSYCH_UP],[40,t.PSYCHIC],[48,t.FLATTER],[56,t.FUTURE_SIGHT],[64,t.MAGIC_ROOM]],[e.SOLOSIS]:[[1,t.CONFUSION],[1,t.PROTECT],[1,t.PSYWAVE],[4,t.RECOVER],[8,t.ENDEAVOR],[12,t.PSYBEAM],[16,t.CHARM],[20,t.PSYSHOCK],[24,t.LIGHT_SCREEN],[24,t.REFLECT],[28,t.ALLY_SWITCH],[33,t.PAIN_SPLIT],[36,t.PSYCHIC],[40,t.SKILL_SWAP],[44,t.FUTURE_SIGHT],[46,t.HEAL_BLOCK],[48,t.WONDER_ROOM]],[e.DUOSION]:[[1,t.CONFUSION],[1,t.RECOVER],[1,t.PSYWAVE],[1,t.PROTECT],[1,t.ENDEAVOR],[1,t.SNATCH],[12,t.PSYBEAM],[16,t.CHARM],[20,t.PSYSHOCK],[24,t.LIGHT_SCREEN],[24,t.REFLECT],[28,t.ALLY_SWITCH],[35,t.PAIN_SPLIT],[40,t.PSYCHIC],[46,t.SKILL_SWAP],[50,t.HEAL_BLOCK],[52,t.FUTURE_SIGHT],[58,t.WONDER_ROOM]],[e.REUNICLUS]:[[Z,t.HAMMER_ARM],[1,t.CONFUSION],[1,t.RECOVER],[1,t.PROTECT],[1,t.ENDEAVOR],[1,t.DIZZY_PUNCH],[1,t.PSYWAVE],[1,t.SNATCH],[12,t.PSYBEAM],[16,t.CHARM],[20,t.PSYSHOCK],[24,t.LIGHT_SCREEN],[24,t.REFLECT],[28,t.ALLY_SWITCH],[35,t.PAIN_SPLIT],[40,t.PSYCHIC],[48,t.SKILL_SWAP],[54,t.HEAL_BLOCK],[56,t.FUTURE_SIGHT],[64,t.WONDER_ROOM]],[e.DUCKLETT]:[[1,t.WATER_GUN],[6,t.DEFOG],[9,t.WING_ATTACK],[13,t.WATER_PULSE],[15,t.AERIAL_ACE],[19,t.BUBBLE_BEAM],[21,t.FEATHER_DANCE],[24,t.AQUA_RING],[27,t.AIR_SLASH],[30,t.ROOST],[34,t.RAIN_DANCE],[37,t.TAILWIND],[41,t.BRAVE_BIRD],[46,t.HURRICANE]],[e.SWANNA]:[[1,t.WING_ATTACK],[1,t.WATER_GUN],[1,t.DEFOG],[13,t.WATER_PULSE],[15,t.AERIAL_ACE],[19,t.BUBBLE_BEAM],[21,t.FEATHER_DANCE],[24,t.AQUA_RING],[27,t.AIR_SLASH],[30,t.ROOST],[34,t.RAIN_DANCE],[40,t.TAILWIND],[47,t.BRAVE_BIRD],[55,t.HURRICANE]],[e.VANILLITE]:[[1,t.HARDEN],[1,t.ASTONISH],[1,t.POWDER_SNOW],[4,t.TAUNT],[8,t.MIST],[12,t.ICY_WIND],[16,t.AVALANCHE],[20,t.HAIL],[24,t.ICICLE_SPEAR],[28,t.UPROAR],[32,t.ACID_ARMOR],[36,t.MIRROR_COAT],[40,t.ICE_BEAM],[44,t.BLIZZARD],[48,t.SHEER_COLD]],[e.VANILLISH]:[[1,t.MIST],[1,t.HARDEN],[1,t.TAUNT],[1,t.ASTONISH],[1,t.POWDER_SNOW],[12,t.ICY_WIND],[16,t.AVALANCHE],[20,t.HAIL],[24,t.ICICLE_SPEAR],[28,t.UPROAR],[32,t.ACID_ARMOR],[38,t.MIRROR_COAT],[44,t.ICE_BEAM],[50,t.BLIZZARD],[56,t.SHEER_COLD]],[e.VANILLUXE]:[[1,t.MIST],[1,t.HARDEN],[1,t.TAUNT],[1,t.ASTONISH],[1,t.POWDER_SNOW],[1,t.WEATHER_BALL],[1,t.ICICLE_CRASH],[1,t.FREEZE_DRY],[12,t.ICY_WIND],[16,t.AVALANCHE],[20,t.HAIL],[24,t.ICICLE_SPEAR],[28,t.UPROAR],[32,t.ACID_ARMOR],[38,t.MIRROR_COAT],[44,t.ICE_BEAM],[52,t.BLIZZARD],[60,t.SHEER_COLD]],[e.DEERLING]:[[1,t.TACKLE],[1,t.CAMOUFLAGE],[4,t.GROWL],[7,t.SAND_ATTACK],[10,t.DOUBLE_KICK],[13,t.LEECH_SEED],[16,t.BULLET_SEED],[20,t.TAKE_DOWN],[24,t.ZEN_HEADBUTT],[28,t.ENERGY_BALL],[32,t.CHARM],[37,t.DOUBLE_EDGE],[42,t.SOLAR_BEAM]],[e.SAWSBUCK]:[[Z,t.HORN_LEECH],[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.GROWL],[1,t.CAMOUFLAGE],[1,t.MEGAHORN],[10,t.DOUBLE_KICK],[13,t.LEECH_SEED],[16,t.BULLET_SEED],[20,t.TAKE_DOWN],[24,t.ZEN_HEADBUTT],[28,t.ENERGY_BALL],[36,t.CHARM],[44,t.DOUBLE_EDGE],[52,t.SOLAR_BEAM]],[e.EMOLGA]:[[1,t.TAIL_WHIP],[1,t.NUZZLE],[5,t.DOUBLE_TEAM],[10,t.QUICK_ATTACK],[15,t.THUNDER_SHOCK],[20,t.CHARGE],[25,t.ACROBATICS],[30,t.SPARK],[35,t.ENCORE],[40,t.VOLT_SWITCH],[45,t.LIGHT_SCREEN],[50,t.DISCHARGE],[55,t.AGILITY]],[e.KARRABLAST]:[[1,t.LEER],[1,t.PECK],[4,t.FURY_CUTTER],[8,t.ENDURE],[12,t.FALSE_SWIPE],[16,t.ACID_SPRAY],[20,t.HEADBUTT],[24,t.FLAIL],[28,t.SCARY_FACE],[32,t.X_SCISSOR],[36,t.SWORDS_DANCE],[40,t.TAKE_DOWN],[44,t.BUG_BUZZ],[48,t.DOUBLE_EDGE]],[e.ESCAVALIER]:[[1,t.TAKE_DOWN],[1,t.DOUBLE_EDGE],[1,t.LEER],[1,t.PECK],[1,t.FLAIL],[1,t.SCARY_FACE],[1,t.ENDURE],[1,t.FURY_CUTTER],[1,t.QUICK_GUARD],[1,t.FELL_STINGER],[1,t.TWINEEDLE],[12,t.FALSE_SWIPE],[16,t.ACID_SPRAY],[20,t.HEADBUTT],[24,t.REVERSAL],[28,t.IRON_DEFENSE],[32,t.X_SCISSOR],[36,t.SWORDS_DANCE],[40,t.IRON_HEAD],[44,t.BUG_BUZZ],[48,t.GIGA_IMPACT],[52,t.METAL_BURST]],[e.FOONGUS]:[[1,t.ABSORB],[1,t.ASTONISH],[4,t.GROWTH],[8,t.STUN_SPORE],[12,t.MEGA_DRAIN],[16,t.SYNTHESIS],[20,t.CLEAR_SMOG],[24,t.SWEET_SCENT],[28,t.GIGA_DRAIN],[32,t.INGRAIN],[36,t.TOXIC],[40,t.RAGE_POWDER],[44,t.SOLAR_BEAM],[48,t.SPORE]],[e.AMOONGUSS]:[[1,t.ABSORB],[1,t.GROWTH],[1,t.STUN_SPORE],[1,t.ASTONISH],[1,t.BIDE],[12,t.MEGA_DRAIN],[16,t.SYNTHESIS],[20,t.CLEAR_SMOG],[24,t.SWEET_SCENT],[28,t.GIGA_DRAIN],[32,t.INGRAIN],[36,t.TOXIC],[42,t.RAGE_POWDER],[48,t.SOLAR_BEAM],[54,t.SPORE]],[e.FRILLISH]:[[1,t.WATER_GUN],[1,t.ABSORB],[1,t.WATER_SPORT],[4,t.POISON_STING],[8,t.NIGHT_SHADE],[12,t.WATER_PULSE],[16,t.RAIN_DANCE],[20,t.HEX],[24,t.BRINE],[28,t.RECOVER],[32,t.SHADOW_BALL],[36,t.WHIRLPOOL],[41,t.HYDRO_PUMP],[44,t.DESTINY_BOND],[48,t.WATER_SPOUT]],[e.JELLICENT]:[[1,t.POISON_STING],[1,t.WATER_GUN],[1,t.WATER_SPORT],[1,t.WRING_OUT],[1,t.ABSORB],[1,t.NIGHT_SHADE],[1,t.ACID_ARMOR],[12,t.WATER_PULSE],[16,t.RAIN_DANCE],[20,t.HEX],[24,t.BRINE],[28,t.RECOVER],[32,t.SHADOW_BALL],[36,t.WHIRLPOOL],[43,t.HYDRO_PUMP],[48,t.DESTINY_BOND],[54,t.WATER_SPOUT]],[e.ALOMOMOLA]:[[1,t.POUND],[1,t.PLAY_NICE],[1,t.WATER_SPORT],[5,t.AQUA_RING],[9,t.AQUA_JET],[13,t.HELPING_HAND],[13,t.WIDE_GUARD],[21,t.PROTECT],[25,t.WATER_PULSE],[29,t.HEALING_WISH],[33,t.SOAK],[37,t.WISH],[41,t.BRINE],[45,t.SAFEGUARD],[49,t.WHIRLPOOL],[55,t.HYDRO_PUMP]],[e.JOLTIK]:[[1,t.ABSORB],[1,t.FURY_CUTTER],[1,t.SPIDER_WEB],[4,t.ELECTROWEB],[8,t.BUG_BITE],[12,t.STRING_SHOT],[16,t.THUNDER_WAVE],[20,t.ELECTRO_BALL],[24,t.AGILITY],[28,t.SUCKER_PUNCH],[32,t.SLASH],[37,t.DISCHARGE],[40,t.SCREECH],[44,t.GASTRO_ACID],[48,t.BUG_BUZZ]],[e.GALVANTULA]:[[Z,t.STICKY_WEB],[1,t.ABSORB],[1,t.FURY_CUTTER],[1,t.BUG_BITE],[1,t.ELECTROWEB],[1,t.SPIDER_WEB],[12,t.STRING_SHOT],[16,t.THUNDER_WAVE],[20,t.ELECTRO_BALL],[24,t.AGILITY],[28,t.SUCKER_PUNCH],[32,t.SLASH],[39,t.DISCHARGE],[44,t.SCREECH],[50,t.GASTRO_ACID],[56,t.BUG_BUZZ]],[e.FERROSEED]:[[1,t.TACKLE],[1,t.HARDEN],[5,t.METAL_CLAW],[10,t.PIN_MISSILE],[15,t.INGRAIN],[20,t.FLASH_CANNON],[25,t.IRON_HEAD],[30,t.SELF_DESTRUCT],[35,t.IRON_DEFENSE],[41,t.CURSE],[45,t.GYRO_BALL],[50,t.EXPLOSION]],[e.FERROTHORN]:[[Z,t.POWER_WHIP],[1,t.TACKLE],[1,t.PIN_MISSILE],[1,t.HARDEN],[1,t.METAL_CLAW],[1,t.ROCK_CLIMB],[15,t.INGRAIN],[20,t.FLASH_CANNON],[25,t.IRON_HEAD],[30,t.SELF_DESTRUCT],[35,t.IRON_DEFENSE],[43,t.CURSE],[49,t.GYRO_BALL],[56,t.EXPLOSION]],[e.KLINK]:[[1,t.VISE_GRIP],[1,t.THUNDER_SHOCK],[4,t.BIND],[8,t.CHARGE],[12,t.CHARGE_BEAM],[16,t.METAL_SOUND],[20,t.AUTOTOMIZE],[24,t.DISCHARGE],[28,t.SCREECH],[32,t.GEAR_GRIND],[36,t.LOCK_ON],[40,t.SHIFT_GEAR],[44,t.ZAP_CANNON],[48,t.HYPER_BEAM]],[e.KLANG]:[[1,t.VISE_GRIP],[1,t.BIND],[1,t.THUNDER_SHOCK],[1,t.CHARGE],[12,t.CHARGE_BEAM],[16,t.METAL_SOUND],[20,t.AUTOTOMIZE],[24,t.DISCHARGE],[28,t.SCREECH],[32,t.GEAR_GRIND],[36,t.LOCK_ON],[42,t.SHIFT_GEAR],[48,t.ZAP_CANNON],[54,t.HYPER_BEAM]],[e.KLINKLANG]:[[1,t.VISE_GRIP],[1,t.BIND],[1,t.THUNDER_SHOCK],[1,t.CHARGE],[1,t.MAGNETIC_FLUX],[1,t.GEAR_UP],[12,t.CHARGE_BEAM],[16,t.METAL_SOUND],[20,t.AUTOTOMIZE],[24,t.DISCHARGE],[28,t.SCREECH],[32,t.GEAR_GRIND],[36,t.LOCK_ON],[42,t.SHIFT_GEAR],[48,t.ZAP_CANNON],[56,t.HYPER_BEAM],[64,t.ELECTRIC_TERRAIN]],[e.TYNAMO]:[[1,t.TACKLE],[1,t.THUNDER_WAVE],[1,t.SPARK],[1,t.CHARGE_BEAM]],[e.EELEKTRIK]:[[Z,t.CRUNCH],[1,t.TACKLE],[1,t.HEADBUTT],[1,t.THUNDER_WAVE],[1,t.SPARK],[1,t.CHARGE_BEAM],[1,t.ION_DELUGE],[9,t.BIND],[19,t.ACID],[29,t.DISCHARGE],[44,t.THUNDERBOLT],[49,t.ACID_SPRAY],[54,t.COIL],[59,t.WILD_CHARGE],[64,t.GASTRO_ACID],[69,t.ZAP_CANNON],[74,t.THRASH]],[e.EELEKTROSS]:[[w,t.THUNDERBOLT],[w,t.ACID_SPRAY],[1,t.TACKLE],[1,t.HEADBUTT],[1,t.THUNDER_WAVE],[1,t.SPARK],[1,t.CHARGE_BEAM],[1,t.ION_DELUGE],[1,t.BIND],[1,t.THRASH],[1,t.ACID],[1,t.ZAP_CANNON],[1,t.CRUNCH],[1,t.CRUSH_CLAW],[1,t.GASTRO_ACID],[1,t.DISCHARGE],[1,t.COIL],[5,t.WILD_CHARGE]],[e.ELGYEM]:[[1,t.GROWL],[1,t.CONFUSION],[6,t.IMPRISON],[8,t.HEAL_BLOCK],[12,t.TELEPORT],[18,t.PSYBEAM],[24,t.GUARD_SPLIT],[24,t.POWER_SPLIT],[30,t.HEADBUTT],[36,t.ZEN_HEADBUTT],[43,t.RECOVER],[48,t.CALM_MIND],[54,t.WONDER_ROOM],[60,t.PSYCHIC]],[e.BEHEEYEM]:[[1,t.GROWL],[1,t.CONFUSION],[1,t.SYNCHRONOISE],[1,t.TELEPORT],[1,t.IMPRISON],[1,t.PSYCHIC_TERRAIN],[8,t.HEAL_BLOCK],[18,t.PSYBEAM],[24,t.GUARD_SPLIT],[24,t.POWER_SPLIT],[30,t.HEADBUTT],[36,t.ZEN_HEADBUTT],[45,t.RECOVER],[52,t.CALM_MIND],[60,t.WONDER_ROOM],[68,t.PSYCHIC]],[e.LITWICK]:[[1,t.SMOG],[1,t.ASTONISH],[4,t.EMBER],[8,t.MINIMIZE],[12,t.CONFUSE_RAY],[16,t.HEX],[20,t.WILL_O_WISP],[24,t.FIRE_SPIN],[28,t.NIGHT_SHADE],[32,t.CURSE],[36,t.SHADOW_BALL],[40,t.INFERNO],[44,t.IMPRISON],[48,t.PAIN_SPLIT],[52,t.OVERHEAT],[56,t.MEMENTO]],[e.LAMPENT]:[[1,t.EMBER],[1,t.MINIMIZE],[1,t.SMOG],[1,t.ASTONISH],[12,t.CONFUSE_RAY],[16,t.HEX],[20,t.WILL_O_WISP],[24,t.FIRE_SPIN],[28,t.NIGHT_SHADE],[32,t.CURSE],[36,t.SHADOW_BALL],[40,t.INFERNO],[46,t.IMPRISON],[52,t.PAIN_SPLIT],[58,t.OVERHEAT],[64,t.MEMENTO]],[e.CHANDELURE]:[[1,t.EMBER],[1,t.FIRE_SPIN],[1,t.NIGHT_SHADE],[1,t.MINIMIZE],[1,t.CONFUSE_RAY],[1,t.SMOG],[1,t.CURSE],[1,t.PAIN_SPLIT],[1,t.SHADOW_BALL],[1,t.WILL_O_WISP],[1,t.MEMENTO],[1,t.IMPRISON],[1,t.ASTONISH],[1,t.OVERHEAT],[1,t.HEX],[1,t.INFERNO]],[e.AXEW]:[[1,t.SCRATCH],[1,t.LEER],[3,t.BITE],[6,t.FALSE_SWIPE],[9,t.ASSURANCE],[12,t.TAUNT],[15,t.SLASH],[18,t.DRAGON_CLAW],[21,t.SCARY_FACE],[24,t.CRUNCH],[27,t.DRAGON_DANCE],[30,t.DUAL_CHOP],[33,t.FOCUS_ENERGY],[36,t.DRAGON_PULSE],[39,t.SWORDS_DANCE],[42,t.OUTRAGE],[45,t.GUILLOTINE],[48,t.GIGA_IMPACT]],[e.FRAXURE]:[[1,t.SCRATCH],[1,t.LEER],[1,t.BITE],[1,t.FALSE_SWIPE],[1,t.DUAL_CHOP],[9,t.ASSURANCE],[12,t.TAUNT],[15,t.SLASH],[18,t.DRAGON_CLAW],[21,t.SCARY_FACE],[24,t.CRUNCH],[27,t.DRAGON_DANCE],[30,t.BREAKING_SWIPE],[33,t.FOCUS_ENERGY],[36,t.DRAGON_PULSE],[41,t.SWORDS_DANCE],[46,t.OUTRAGE],[51,t.GUILLOTINE],[56,t.GIGA_IMPACT]],[e.HAXORUS]:[[1,t.SCRATCH],[1,t.LEER],[1,t.BITE],[1,t.FALSE_SWIPE],[1,t.DUAL_CHOP],[9,t.ASSURANCE],[12,t.TAUNT],[15,t.SLASH],[18,t.DRAGON_CLAW],[21,t.SCARY_FACE],[24,t.CRUNCH],[27,t.DRAGON_DANCE],[30,t.BREAKING_SWIPE],[33,t.FOCUS_ENERGY],[36,t.DRAGON_PULSE],[41,t.SWORDS_DANCE],[46,t.OUTRAGE],[53,t.GUILLOTINE],[60,t.GIGA_IMPACT]],[e.CUBCHOO]:[[1,t.GROWL],[1,t.POWDER_SNOW],[3,t.ENDURE],[6,t.FURY_SWIPES],[9,t.ICY_WIND],[12,t.PLAY_NICE],[15,t.BRINE],[18,t.FROST_BREATH],[21,t.SLASH],[24,t.FLAIL],[27,t.CHARM],[30,t.SNOWSCAPE],[33,t.THRASH],[36,t.REST],[39,t.BLIZZARD],[42,t.SHEER_COLD]],[e.BEARTIC]:[[Z,t.ICICLE_CRASH],[1,t.GROWL],[1,t.FURY_SWIPES],[1,t.POWDER_SNOW],[1,t.ENDURE],[1,t.CHARM],[1,t.AQUA_JET],[1,t.BIDE],[9,t.ICY_WIND],[12,t.PLAY_NICE],[15,t.BRINE],[18,t.FROST_BREATH],[21,t.SLASH],[24,t.FLAIL],[27,t.SWAGGER],[30,t.SNOWSCAPE],[33,t.THRASH],[36,t.REST],[41,t.BLIZZARD],[46,t.SHEER_COLD],[51,t.SUPERPOWER]],[e.CRYOGONAL]:[[1,t.BIND],[1,t.ICE_SHARD],[4,t.CONFUSE_RAY],[8,t.RAPID_SPIN],[12,t.ICY_WIND],[16,t.MIST],[16,t.HAZE],[20,t.ANCIENT_POWER],[24,t.AURORA_BEAM],[28,t.SLASH],[32,t.NIGHT_SLASH],[36,t.FREEZE_DRY],[40,t.LIGHT_SCREEN],[40,t.REFLECT],[44,t.RECOVER],[48,t.ICE_BEAM],[52,t.ACID_ARMOR],[56,t.SOLAR_BEAM],[60,t.SHEER_COLD]],[e.SHELMET]:[[1,t.ABSORB],[1,t.PROTECT],[4,t.ACID],[8,t.CURSE],[12,t.MEGA_DRAIN],[16,t.STRUGGLE_BUG],[20,t.YAWN],[24,t.ACID_ARMOR],[28,t.GIGA_DRAIN],[32,t.GUARD_SWAP],[36,t.BODY_SLAM],[40,t.RECOVER],[44,t.BUG_BUZZ],[48,t.FINAL_GAMBIT]],[e.ACCELGOR]:[[1,t.BODY_SLAM],[1,t.ACID],[1,t.ABSORB],[1,t.PROTECT],[1,t.QUICK_ATTACK],[1,t.DOUBLE_TEAM],[1,t.ACID_ARMOR],[1,t.CURSE],[1,t.YAWN],[1,t.GUARD_SWAP],[1,t.ACID_SPRAY],[1,t.WATER_SHURIKEN],[12,t.MEGA_DRAIN],[16,t.STRUGGLE_BUG],[20,t.SWIFT],[24,t.AGILITY],[28,t.GIGA_DRAIN],[32,t.POWER_SWAP],[36,t.U_TURN],[40,t.RECOVER],[44,t.BUG_BUZZ],[48,t.FINAL_GAMBIT],[52,t.TOXIC]],[e.STUNFISK]:[[1,t.TACKLE],[1,t.WATER_GUN],[1,t.THUNDER_SHOCK],[1,t.MUD_SLAP],[1,t.MUD_SPORT],[5,t.ENDURE],[10,t.MUD_SHOT],[15,t.REVENGE],[20,t.CHARGE],[25,t.SUCKER_PUNCH],[30,t.ELECTRIC_TERRAIN],[35,t.BOUNCE],[40,t.MUDDY_WATER],[45,t.DISCHARGE],[50,t.FLAIL],[55,t.FISSURE]],[e.MIENFOO]:[[1,t.POUND],[1,t.DETECT],[5,t.FAKE_OUT],[10,t.REVERSAL],[15,t.FURY_SWIPES],[20,t.QUICK_GUARD],[25,t.FORCE_PALM],[30,t.U_TURN],[35,t.DRAIN_PUNCH],[40,t.HONE_CLAWS],[45,t.AURA_SPHERE],[51,t.BOUNCE],[55,t.CALM_MIND],[60,t.HIGH_JUMP_KICK]],[e.MIENSHAO]:[[1,t.POUND],[1,t.REVERSAL],[1,t.DETECT],[1,t.FAKE_OUT],[1,t.QUICK_GUARD],[15,t.FURY_SWIPES],[20,t.WIDE_GUARD],[25,t.FORCE_PALM],[30,t.U_TURN],[35,t.DRAIN_PUNCH],[40,t.HONE_CLAWS],[45,t.AURA_SPHERE],[53,t.BOUNCE],[59,t.CALM_MIND],[66,t.HIGH_JUMP_KICK]],[e.DRUDDIGON]:[[1,t.SCRATCH],[1,t.LEER],[5,t.BITE],[10,t.DRAGON_TAIL],[15,t.METAL_CLAW],[20,t.SCARY_FACE],[25,t.SLASH],[30,t.DRAGON_CLAW],[35,t.HONE_CLAWS],[40,t.CRUNCH],[45,t.IRON_HEAD],[50,t.OUTRAGE],[55,t.SUPERPOWER]],[e.GOLETT]:[[1,t.MUD_SLAP],[1,t.ASTONISH],[4,t.DEFENSE_CURL],[8,t.POUND],[12,t.SHADOW_PUNCH],[16,t.CURSE],[20,t.NIGHT_SHADE],[24,t.STOMPING_TANTRUM],[28,t.IRON_DEFENSE],[32,t.MEGA_PUNCH],[36,t.SHADOW_BALL],[40,t.HEAVY_SLAM],[44,t.PHANTOM_FORCE],[48,t.HAMMER_ARM],[52,t.EARTHQUAKE],[56,t.DYNAMIC_PUNCH]],[e.GOLURK]:[[w,t.MUD_SLAP],[w,t.FOCUS_PUNCH],[1,t.POUND],[1,t.DEFENSE_CURL],[1,t.ASTONISH],[1,t.HIGH_HORSEPOWER],[12,t.SHADOW_PUNCH],[16,t.CURSE],[20,t.NIGHT_SHADE],[24,t.STOMPING_TANTRUM],[28,t.IRON_DEFENSE],[32,t.MEGA_PUNCH],[36,t.SHADOW_BALL],[40,t.HEAVY_SLAM],[46,t.PHANTOM_FORCE],[52,t.HAMMER_ARM],[58,t.EARTHQUAKE],[64,t.DYNAMIC_PUNCH]],[e.PAWNIARD]:[[1,t.SCRATCH],[1,t.LEER],[5,t.FURY_CUTTER],[10,t.METAL_CLAW],[15,t.TORMENT],[20,t.SCARY_FACE],[25,t.ASSURANCE],[30,t.METAL_SOUND],[35,t.SLASH],[40,t.NIGHT_SLASH],[45,t.IRON_DEFENSE],[50,t.RETALIATE],[55,t.IRON_HEAD],[60,t.SWORDS_DANCE],[65,t.GUILLOTINE]],[e.BISHARP]:[[1,t.SCRATCH],[1,t.LEER],[1,t.FURY_CUTTER],[1,t.METAL_CLAW],[1,t.METAL_BURST],[15,t.TORMENT],[20,t.SCARY_FACE],[25,t.ASSURANCE],[30,t.METAL_SOUND],[35,t.SLASH],[40,t.NIGHT_SLASH],[45,t.IRON_DEFENSE],[50,t.RETALIATE],[57,t.IRON_HEAD],[64,t.SWORDS_DANCE],[71,t.GUILLOTINE]],[e.BOUFFALANT]:[[1,t.TACKLE],[1,t.LEER],[1,t.PURSUIT],[5,t.FOCUS_ENERGY],[10,t.FURY_ATTACK],[15,t.REVENGE],[20,t.SCARY_FACE],[25,t.HORN_ATTACK],[30,t.REVERSAL],[35,t.THROAT_CHOP],[40,t.HEAD_CHARGE],[45,t.SWORDS_DANCE],[50,t.MEGAHORN],[55,t.GIGA_IMPACT]],[e.RUFFLET]:[[1,t.LEER],[1,t.PECK],[6,t.HONE_CLAWS],[12,t.WING_ATTACK],[18,t.TAILWIND],[24,t.SCARY_FACE],[30,t.AERIAL_ACE],[36,t.SLASH],[42,t.WHIRLWIND],[48,t.CRUSH_CLAW],[55,t.AIR_SLASH],[60,t.DEFOG],[66,t.THRASH],[72,t.BRAVE_BIRD]],[e.BRAVIARY]:[[Z,t.SUPERPOWER],[w,t.BRAVE_BIRD],[1,t.WING_ATTACK],[1,t.LEER],[1,t.PECK],[1,t.SKY_ATTACK],[1,t.HONE_CLAWS],[18,t.TAILWIND],[24,t.SCARY_FACE],[30,t.AERIAL_ACE],[36,t.SLASH],[42,t.WHIRLWIND],[48,t.CRUSH_CLAW],[57,t.AIR_SLASH],[64,t.DEFOG],[72,t.THRASH]],[e.VULLABY]:[[1,t.GUST],[1,t.LEER],[6,t.FLATTER],[12,t.PLUCK],[18,t.TAILWIND],[24,t.KNOCK_OFF],[30,t.IRON_DEFENSE],[36,t.WHIRLWIND],[42,t.AIR_SLASH],[48,t.DARK_PULSE],[54,t.NASTY_PLOT],[60,t.DEFOG],[66,t.ATTRACT],[72,t.BRAVE_BIRD]],[e.MANDIBUZZ]:[[Z,t.BONE_RUSH],[1,t.GUST],[1,t.LEER],[1,t.TOXIC],[1,t.SKY_ATTACK],[1,t.FLATTER],[1,t.PLUCK],[18,t.TAILWIND],[24,t.KNOCK_OFF],[30,t.IRON_DEFENSE],[36,t.WHIRLWIND],[42,t.AIR_SLASH],[48,t.DARK_PULSE],[57,t.NASTY_PLOT],[64,t.DEFOG],[72,t.ATTRACT],[80,t.BRAVE_BIRD]],[e.HEATMOR]:[[1,t.TACKLE],[1,t.LICK],[5,t.FURY_SWIPES],[10,t.INCINERATE],[15,t.BUG_BITE],[20,t.STOCKPILE],[20,t.SPIT_UP],[20,t.SWALLOW],[25,t.SLASH],[30,t.BIND],[35,t.FIRE_LASH],[40,t.HONE_CLAWS],[45,t.AMNESIA],[50,t.FIRE_SPIN],[55,t.INFERNO],[60,t.FLARE_BLITZ]],[e.DURANT]:[[1,t.SAND_ATTACK],[1,t.FURY_CUTTER],[4,t.VISE_GRIP],[8,t.METAL_CLAW],[12,t.BEAT_UP],[16,t.BUG_BITE],[20,t.BITE],[24,t.AGILITY],[28,t.DIG],[32,t.X_SCISSOR],[36,t.CRUNCH],[40,t.METAL_SOUND],[44,t.IRON_HEAD],[48,t.ENTRAINMENT],[52,t.IRON_DEFENSE],[56,t.GUILLOTINE]],[e.DEINO]:[[1,t.TACKLE],[1,t.FOCUS_ENERGY],[4,t.DRAGON_BREATH],[8,t.BITE],[12,t.ROAR],[16,t.ASSURANCE],[20,t.HEADBUTT],[24,t.WORK_UP],[28,t.SLAM],[32,t.CRUNCH],[36,t.SCARY_FACE],[40,t.DRAGON_PULSE],[44,t.BODY_SLAM],[48,t.HYPER_VOICE],[52,t.DRAGON_RUSH],[56,t.NASTY_PLOT],[60,t.OUTRAGE]],[e.ZWEILOUS]:[[1,t.TACKLE],[1,t.BITE],[1,t.FOCUS_ENERGY],[1,t.DRAGON_BREATH],[1,t.DOUBLE_HIT],[12,t.ROAR],[16,t.ASSURANCE],[20,t.HEADBUTT],[24,t.WORK_UP],[28,t.SLAM],[32,t.CRUNCH],[36,t.SCARY_FACE],[40,t.DRAGON_PULSE],[44,t.BODY_SLAM],[48,t.HYPER_VOICE],[54,t.DRAGON_RUSH],[60,t.NASTY_PLOT],[66,t.OUTRAGE]],[e.HYDREIGON]:[[1,t.TACKLE],[1,t.BITE],[1,t.FOCUS_ENERGY],[1,t.TRI_ATTACK],[1,t.DRAGON_BREATH],[1,t.DOUBLE_HIT],[12,t.ROAR],[16,t.ASSURANCE],[20,t.HEADBUTT],[24,t.WORK_UP],[28,t.SLAM],[32,t.CRUNCH],[36,t.SCARY_FACE],[40,t.DRAGON_PULSE],[44,t.BODY_SLAM],[48,t.HYPER_VOICE],[54,t.DRAGON_RUSH],[60,t.NASTY_PLOT],[68,t.OUTRAGE],[76,t.HYPER_BEAM]],[e.LARVESTA]:[[1,t.EMBER],[1,t.STRING_SHOT],[6,t.FLAME_CHARGE],[12,t.STRUGGLE_BUG],[18,t.FLAME_WHEEL],[24,t.BUG_BITE],[30,t.SCREECH],[36,t.LEECH_LIFE],[42,t.BUG_BUZZ],[48,t.TAKE_DOWN],[54,t.AMNESIA],[60,t.DOUBLE_EDGE],[66,t.FLARE_BLITZ]],[e.VOLCARONA]:[[Z,t.QUIVER_DANCE],[1,t.GUST],[1,t.WHIRLWIND],[1,t.TAKE_DOWN],[1,t.DOUBLE_EDGE],[1,t.EMBER],[1,t.STRING_SHOT],[1,t.FIRE_SPIN],[1,t.FLARE_BLITZ],[1,t.FLAME_CHARGE],[1,t.STRUGGLE_BUG],[1,t.FIERY_DANCE],[18,t.FLAME_WHEEL],[24,t.BUG_BITE],[30,t.SCREECH],[36,t.LEECH_LIFE],[42,t.BUG_BUZZ],[48,t.HEAT_WAVE],[54,t.AMNESIA],[62,t.HURRICANE],[70,t.FIRE_BLAST],[78,t.RAGE_POWDER]],[e.COBALION]:[[1,t.LEER],[1,t.QUICK_ATTACK],[1,t.HELPING_HAND],[1,t.WORK_UP],[7,t.METAL_CLAW],[14,t.QUICK_GUARD],[21,t.DOUBLE_KICK],[28,t.RETALIATE],[35,t.METAL_BURST],[42,t.TAKE_DOWN],[49,t.SACRED_SWORD],[56,t.SWORDS_DANCE],[63,t.IRON_HEAD],[70,t.CLOSE_COMBAT]],[e.TERRAKION]:[[1,t.LEER],[1,t.QUICK_ATTACK],[1,t.HELPING_HAND],[1,t.WORK_UP],[7,t.SMACK_DOWN],[14,t.QUICK_GUARD],[21,t.DOUBLE_KICK],[28,t.RETALIATE],[35,t.ROCK_SLIDE],[42,t.TAKE_DOWN],[49,t.SACRED_SWORD],[56,t.SWORDS_DANCE],[63,t.STONE_EDGE],[70,t.CLOSE_COMBAT]],[e.VIRIZION]:[[w,t.TAKE_DOWN],[1,t.LEER],[1,t.QUICK_ATTACK],[1,t.HELPING_HAND],[1,t.WORK_UP],[7,t.MAGICAL_LEAF],[14,t.QUICK_GUARD],[21,t.DOUBLE_KICK],[28,t.RETALIATE],[35,t.GIGA_DRAIN],[42,t.TAKE_DOWN],[49,t.SACRED_SWORD],[56,t.SWORDS_DANCE],[63,t.LEAF_BLADE],[70,t.CLOSE_COMBAT]],[e.TORNADUS]:[[1,t.GUST],[1,t.ASTONISH],[5,t.LEER],[10,t.SWAGGER],[15,t.BITE],[20,t.AIR_CUTTER],[25,t.AGILITY],[30,t.TAILWIND],[35,t.AIR_SLASH],[40,t.CRUNCH],[45,t.EXTRASENSORY],[50,t.UPROAR],[55,t.HAMMER_ARM],[60,t.RAIN_DANCE],[65,t.HURRICANE],[70,t.THRASH],[77,t.BLEAKWIND_STORM]],[e.THUNDURUS]:[[1,t.THUNDER_SHOCK],[1,t.ASTONISH],[5,t.LEER],[10,t.SWAGGER],[15,t.BITE],[20,t.SHOCK_WAVE],[25,t.AGILITY],[30,t.CHARGE],[31,t.HEAL_BLOCK],[35,t.VOLT_SWITCH],[40,t.CRUNCH],[45,t.DISCHARGE],[50,t.UPROAR],[55,t.HAMMER_ARM],[60,t.RAIN_DANCE],[65,t.THUNDER],[70,t.THRASH],[75,t.WILDBOLT_STORM]],[e.RESHIRAM]:[[1,t.DRAGON_BREATH],[1,t.ANCIENT_POWER],[1,t.FIRE_FANG],[1,t.NOBLE_ROAR],[8,t.SLASH],[16,t.CRUNCH],[24,t.EXTRASENSORY],[32,t.DRAGON_PULSE],[40,t.FLAMETHROWER],[48,t.FUSION_FLARE],[56,t.HYPER_VOICE],[64,t.FIRE_BLAST],[72,t.IMPRISON],[80,t.OUTRAGE],[88,t.BLUE_FLARE]],[e.ZEKROM]:[[1,t.DRAGON_BREATH],[1,t.ANCIENT_POWER],[1,t.THUNDER_FANG],[1,t.NOBLE_ROAR],[8,t.SLASH],[16,t.CRUNCH],[24,t.ZEN_HEADBUTT],[32,t.DRAGON_CLAW],[40,t.THUNDERBOLT],[48,t.FUSION_BOLT],[56,t.HYPER_VOICE],[64,t.THUNDER],[72,t.IMPRISON],[80,t.OUTRAGE],[88,t.BOLT_STRIKE]],[e.LANDORUS]:[[1,t.SAND_TOMB],[1,t.SMACK_DOWN],[5,t.LEER],[10,t.BLOCK],[15,t.BULLDOZE],[20,t.ROCK_TOMB],[30,t.IMPRISON],[35,t.ROCK_SLIDE],[40,t.EARTH_POWER],[45,t.EXTRASENSORY],[50,t.STONE_EDGE],[55,t.HAMMER_ARM],[60,t.SANDSTORM],[65,t.EARTHQUAKE],[70,t.OUTRAGE],[75,t.FISSURE],[80,t.SANDSEAR_STORM]],[e.KYUREM]:[[1,t.DRAGON_BREATH],[1,t.ANCIENT_POWER],[1,t.NOBLE_ROAR],[1,t.FREEZE_DRY],[8,t.SLASH],[16,t.ENDEAVOR],[24,t.DRAGON_PULSE],[32,t.ICE_BEAM],[40,t.HYPER_VOICE],[48,t.SCARY_FACE],[56,t.BLIZZARD],[64,t.IMPRISON],[72,t.OUTRAGE],[80,t.GLACIATE],[88,t.SHEER_COLD]],[e.KELDEO]:[[1,t.LEER],[1,t.HELPING_HAND],[1,t.AQUA_JET],[1,t.WORK_UP],[1,t.SECRET_SWORD],[7,t.BUBBLE_BEAM],[14,t.QUICK_GUARD],[21,t.DOUBLE_KICK],[28,t.RETALIATE],[35,t.AQUA_TAIL],[42,t.TAKE_DOWN],[49,t.SACRED_SWORD],[56,t.SWORDS_DANCE],[63,t.HYDRO_PUMP],[70,t.CLOSE_COMBAT]],[e.MELOETTA]:[[1,t.SING],[1,t.CONFUSION],[1,t.QUICK_ATTACK],[1,t.ROUND],[21,t.TEETER_DANCE],[26,t.ACROBATICS],[31,t.PSYBEAM],[36,t.ECHOED_VOICE],[43,t.U_TURN],[50,t.RELIC_SONG],[57,t.PSYCHIC],[64,t.HYPER_VOICE],[71,t.ROLE_PLAY],[78,t.CLOSE_COMBAT],[85,t.PERISH_SONG]],[e.GENESECT]:[[1,t.QUICK_ATTACK],[1,t.FURY_CUTTER],[7,t.SCREECH],[14,t.METAL_CLAW],[21,t.FELL_STINGER],[28,t.FLAME_CHARGE],[35,t.METAL_SOUND],[42,t.X_SCISSOR],[49,t.MAGNET_RISE],[56,t.BUG_BUZZ],[63,t.SIMPLE_BEAM],[70,t.ZAP_CANNON],[77,t.LOCK_ON],[84,t.TECHNO_BLAST],[91,t.SELF_DESTRUCT]],[e.CHESPIN]:[[1,t.TACKLE],[1,t.GROWL],[1,t.VINE_WHIP],[8,t.ROLLOUT],[11,t.BITE],[15,t.LEECH_SEED],[18,t.PIN_MISSILE],[27,t.TAKE_DOWN],[32,t.SEED_BOMB],[35,t.MUD_SHOT],[42,t.BODY_SLAM],[45,t.PAIN_SPLIT],[48,t.WOOD_HAMMER]],[e.QUILLADIN]:[[Z,t.NEEDLE_ARM],[1,t.TACKLE],[1,t.GROWL],[1,t.VINE_WHIP],[8,t.ROLLOUT],[11,t.BITE],[15,t.LEECH_SEED],[20,t.SEED_BOMB],[24,t.PIN_MISSILE],[29,t.TAKE_DOWN],[34,t.MUD_SHOT],[38,t.BULK_UP],[43,t.BODY_SLAM],[47,t.PAIN_SPLIT],[53,t.WOOD_HAMMER]],[e.CHESNAUGHT]:[[Z,t.SPIKY_SHIELD],[1,t.VINE_WHIP],[1,t.TACKLE],[1,t.GROWL],[1,t.ROLLOUT],[1,t.HAMMER_ARM],[1,t.FEINT],[1,t.NEEDLE_ARM],[11,t.BITE],[15,t.LEECH_SEED],[19,t.PIN_MISSILE],[29,t.TAKE_DOWN],[35,t.SEED_BOMB],[41,t.MUD_SHOT],[48,t.BULK_UP],[54,t.BODY_SLAM],[60,t.PAIN_SPLIT],[66,t.WOOD_HAMMER],[78,t.GIGA_IMPACT]],[e.FENNEKIN]:[[1,t.SCRATCH],[1,t.TAIL_WHIP],[5,t.EMBER],[11,t.HOWL],[14,t.FLAME_CHARGE],[17,t.PSYBEAM],[20,t.FIRE_SPIN],[25,t.LIGHT_SCREEN],[31,t.PSYSHOCK],[35,t.FLAMETHROWER],[38,t.WILL_O_WISP],[41,t.PSYCHIC],[43,t.SUNNY_DAY],[48,t.FIRE_BLAST]],[e.BRAIXEN]:[[1,t.SCRATCH],[1,t.TAIL_WHIP],[1,t.EMBER],[11,t.HOWL],[14,t.FLAME_CHARGE],[18,t.PSYBEAM],[22,t.FIRE_SPIN],[28,t.LIGHT_SCREEN],[36,t.PSYSHOCK],[41,t.FLAMETHROWER],[45,t.WILL_O_WISP],[49,t.PSYCHIC],[52,t.SUNNY_DAY],[56,t.MAGIC_ROOM],[59,t.FIRE_BLAST]],[e.DELPHOX]:[[Z,t.MYSTICAL_FIRE],[1,t.SCRATCH],[1,t.TAIL_WHIP],[1,t.EMBER],[1,t.SHADOW_BALL],[1,t.FUTURE_SIGHT],[1,t.ROLE_PLAY],[1,t.HOWL],[1,t.SWITCHEROO],[14,t.FLAME_CHARGE],[18,t.PSYBEAM],[22,t.FIRE_SPIN],[28,t.LIGHT_SCREEN],[38,t.PSYSHOCK],[45,t.FLAMETHROWER],[51,t.WILL_O_WISP],[57,t.PSYCHIC],[62,t.SUNNY_DAY],[68,t.MAGIC_ROOM],[74,t.FIRE_BLAST]],[e.FROAKIE]:[[1,t.POUND],[1,t.GROWL],[5,t.WATER_GUN],[8,t.QUICK_ATTACK],[10,t.LICK],[14,t.WATER_PULSE],[18,t.SMOKESCREEN],[21,t.ROUND],[25,t.FLING],[29,t.SMACK_DOWN],[35,t.SUBSTITUTE],[39,t.BOUNCE],[43,t.DOUBLE_TEAM],[48,t.HYDRO_PUMP]],[e.FROGADIER]:[[1,t.POUND],[1,t.GROWL],[1,t.WATER_GUN],[8,t.QUICK_ATTACK],[10,t.LICK],[14,t.WATER_PULSE],[19,t.SMOKESCREEN],[23,t.ROUND],[28,t.FLING],[33,t.SMACK_DOWN],[40,t.SUBSTITUTE],[45,t.BOUNCE],[50,t.DOUBLE_TEAM],[56,t.HYDRO_PUMP]],[e.GRENINJA]:[[Z,t.WATER_SHURIKEN],[1,t.POUND],[1,t.GROWL],[1,t.WATER_GUN],[1,t.QUICK_ATTACK],[1,t.ROUND],[1,t.FLING],[1,t.SMACK_DOWN],[1,t.BOUNCE],[1,t.HAZE],[1,t.MAT_BLOCK],[1,t.ROLE_PLAY],[1,t.NIGHT_SLASH],[10,t.LICK],[14,t.WATER_PULSE],[19,t.SMOKESCREEN],[23,t.SHADOW_SNEAK],[28,t.SPIKES],[33,t.AERIAL_ACE],[42,t.SUBSTITUTE],[49,t.EXTRASENSORY],[56,t.DOUBLE_TEAM],[68,t.HYDRO_PUMP]],[e.BUNNELBY]:[[1,t.LEER],[1,t.MUD_SLAP],[3,t.TACKLE],[6,t.LASER_FOCUS],[9,t.QUICK_ATTACK],[12,t.MUD_SHOT],[15,t.FLAIL],[18,t.DOUBLE_KICK],[21,t.BULLDOZE],[24,t.DIG],[27,t.BOUNCE],[30,t.TAKE_DOWN],[33,t.SWORDS_DANCE],[36,t.EARTHQUAKE],[39,t.SUPER_FANG]],[e.DIGGERSBY]:[[1,t.TACKLE],[1,t.LEER],[1,t.MUD_SLAP],[1,t.LASER_FOCUS],[1,t.ROTOTILLER],[9,t.QUICK_ATTACK],[12,t.MUD_SHOT],[15,t.FLAIL],[18,t.DOUBLE_KICK],[23,t.BULLDOZE],[28,t.DIG],[33,t.BOUNCE],[38,t.TAKE_DOWN],[43,t.SWORDS_DANCE],[48,t.EARTHQUAKE],[53,t.SUPER_FANG],[58,t.HAMMER_ARM]],[e.FLETCHLING]:[[1,t.GROWL],[1,t.PECK],[5,t.QUICK_ATTACK],[10,t.EMBER],[15,t.FLAIL],[20,t.ACROBATICS],[25,t.AGILITY],[30,t.AERIAL_ACE],[35,t.TAILWIND],[40,t.STEEL_WING],[45,t.ROOST],[50,t.FLY]],[e.FLETCHINDER]:[[Z,t.FLAME_CHARGE],[1,t.GROWL],[1,t.EMBER],[1,t.PECK],[1,t.QUICK_ATTACK],[1,t.FEINT],[15,t.FLAIL],[22,t.ACROBATICS],[29,t.AGILITY],[36,t.AERIAL_ACE],[43,t.TAILWIND],[50,t.STEEL_WING],[57,t.ROOST],[64,t.FLY]],[e.TALONFLAME]:[[1,t.GROWL],[1,t.EMBER],[1,t.PECK],[1,t.QUICK_ATTACK],[1,t.FEINT],[1,t.FLARE_BLITZ],[1,t.FLAME_CHARGE],[15,t.FLAIL],[22,t.ACROBATICS],[29,t.AGILITY],[38,t.AERIAL_ACE],[47,t.TAILWIND],[56,t.STEEL_WING],[65,t.ROOST],[74,t.FLY],[83,t.BRAVE_BIRD]],[e.SCATTERBUG]:[[1,t.TACKLE],[1,t.STRING_SHOT],[6,t.STUN_SPORE],[15,t.BUG_BITE]],[e.SPEWPA]:[[Z,t.PROTECT],[w,t.TACKLE],[w,t.STRING_SHOT],[w,t.STUN_SPORE],[w,t.BUG_BITE],[1,t.HARDEN]],[e.VIVILLON]:[[Z,t.GUST],[1,t.PROTECT],[1,t.TACKLE],[1,t.STRING_SHOT],[1,t.HARDEN],[1,t.BUG_BITE],[1,t.POISON_POWDER],[1,t.STUN_SPORE],[1,t.SLEEP_POWDER],[1,t.STRUGGLE_BUG],[1,t.POWDER],[12,t.LIGHT_SCREEN],[17,t.PSYBEAM],[21,t.SUPERSONIC],[25,t.DRAINING_KISS],[31,t.SAFEGUARD],[35,t.BUG_BUZZ],[45,t.QUIVER_DANCE],[50,t.HURRICANE]],[e.LITLEO]:[[1,t.TACKLE],[1,t.LEER],[5,t.EMBER],[8,t.WORK_UP],[11,t.HEADBUTT],[15,t.NOBLE_ROAR],[20,t.TAKE_DOWN],[23,t.FIRE_FANG],[28,t.ENDEAVOR],[33,t.ECHOED_VOICE],[36,t.FLAMETHROWER],[39,t.CRUNCH],[43,t.HYPER_VOICE],[46,t.INCINERATE],[50,t.OVERHEAT]],[e.PYROAR]:[[1,t.TACKLE],[1,t.LEER],[1,t.EMBER],[1,t.HYPER_BEAM],[1,t.WORK_UP],[11,t.HEADBUTT],[15,t.NOBLE_ROAR],[20,t.TAKE_DOWN],[23,t.FIRE_FANG],[28,t.ENDEAVOR],[33,t.ECHOED_VOICE],[38,t.FLAMETHROWER],[42,t.CRUNCH],[48,t.HYPER_VOICE],[51,t.INCINERATE],[57,t.OVERHEAT]],[e.FLABEBE]:[[1,t.VINE_WHIP],[1,t.TACKLE],[6,t.FAIRY_WIND],[10,t.SAFEGUARD],[15,t.RAZOR_LEAF],[20,t.WISH],[22,t.MAGICAL_LEAF],[24,t.GRASSY_TERRAIN],[28,t.PETAL_BLIZZARD],[33,t.SYNTHESIS],[37,t.MISTY_TERRAIN],[41,t.MOONBLAST],[45,t.PETAL_DANCE],[48,t.SOLAR_BEAM]],[e.FLOETTE]:[[1,t.VINE_WHIP],[1,t.TACKLE],[1,t.FAIRY_WIND],[10,t.SAFEGUARD],[15,t.RAZOR_LEAF],[20,t.WISH],[25,t.MAGICAL_LEAF],[27,t.GRASSY_TERRAIN],[33,t.PETAL_BLIZZARD],[38,t.SYNTHESIS],[43,t.MISTY_TERRAIN],[46,t.MOONBLAST],[51,t.PETAL_DANCE],[58,t.SOLAR_BEAM]],[e.FLORGES]:[[1,t.VINE_WHIP],[1,t.TACKLE],[1,t.FAIRY_WIND],[1,t.RAZOR_LEAF],[1,t.SOLAR_BEAM],[1,t.PETAL_DANCE],[1,t.SAFEGUARD],[1,t.SYNTHESIS],[1,t.WISH],[1,t.LUCKY_CHANT],[1,t.MAGICAL_LEAF],[1,t.GRASS_KNOT],[1,t.PETAL_BLIZZARD],[1,t.DISARMING_VOICE],[1,t.GRASSY_TERRAIN],[1,t.MISTY_TERRAIN],[5,t.MOONBLAST]],[e.SKIDDO]:[[1,t.TACKLE],[1,t.GROWTH],[7,t.VINE_WHIP],[9,t.TAIL_WHIP],[12,t.LEECH_SEED],[13,t.RAZOR_LEAF],[16,t.WORRY_SEED],[20,t.SYNTHESIS],[22,t.TAKE_DOWN],[26,t.BULLDOZE],[30,t.SEED_BOMB],[34,t.BULK_UP],[38,t.DOUBLE_EDGE],[42,t.HORN_LEECH],[45,t.LEAF_BLADE]],[e.GOGOAT]:[[Z,t.AERIAL_ACE],[1,t.VINE_WHIP],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.GROWTH],[1,t.EARTHQUAKE],[12,t.LEECH_SEED],[13,t.RAZOR_LEAF],[16,t.WORRY_SEED],[20,t.SYNTHESIS],[22,t.TAKE_DOWN],[26,t.BULLDOZE],[30,t.SEED_BOMB],[34,t.BULK_UP],[40,t.DOUBLE_EDGE],[47,t.HORN_LEECH],[55,t.LEAF_BLADE],[58,t.MILK_DRINK]],[e.PANCHAM]:[[1,t.TACKLE],[1,t.LEER],[4,t.ARM_THRUST],[8,t.TAUNT],[12,t.CIRCLE_THROW],[16,t.LOW_SWEEP],[20,t.WORK_UP],[24,t.SLASH],[28,t.VITAL_THROW],[33,t.CRUNCH],[36,t.BODY_SLAM],[40,t.PARTING_SHOT],[44,t.ENTRAINMENT]],[e.PANGORO]:[[Z,t.NIGHT_SLASH],[1,t.TACKLE],[1,t.LEER],[1,t.TAUNT],[1,t.ARM_THRUST],[1,t.BULLET_PUNCH],[12,t.CIRCLE_THROW],[16,t.LOW_SWEEP],[20,t.WORK_UP],[24,t.SLASH],[28,t.VITAL_THROW],[35,t.CRUNCH],[40,t.BODY_SLAM],[46,t.PARTING_SHOT],[52,t.ENTRAINMENT],[58,t.HAMMER_ARM]],[e.FURFROU]:[[1,t.TACKLE],[1,t.GROWL],[5,t.SAND_ATTACK],[9,t.BABY_DOLL_EYES],[12,t.HEADBUTT],[15,t.TAIL_WHIP],[22,t.BITE],[27,t.ODOR_SLEUTH],[33,t.RETALIATE],[35,t.TAKE_DOWN],[38,t.CHARM],[42,t.SUCKER_PUNCH],[48,t.COTTON_GUARD]],[e.ESPURR]:[[1,t.SCRATCH],[1,t.LEER],[3,t.FAKE_OUT],[6,t.DISARMING_VOICE],[9,t.CONFUSION],[18,t.COVET],[21,t.PSYBEAM],[30,t.LIGHT_SCREEN],[30,t.REFLECT],[33,t.PSYSHOCK]],[e.MEOWSTIC]:[[1,t.SCRATCH],[1,t.LEER],[1,t.MEAN_LOOK],[1,t.FAKE_OUT],[1,t.DISARMING_VOICE],[9,t.CONFUSION],[12,t.HELPING_HAND],[15,t.CHARM],[18,t.COVET],[21,t.PSYBEAM],[24,t.SUCKER_PUNCH],[29,t.ROLE_PLAY],[34,t.LIGHT_SCREEN],[34,t.REFLECT],[39,t.PSYSHOCK],[44,t.IMPRISON],[49,t.QUICK_GUARD],[54,t.PSYCHIC],[59,t.MISTY_TERRAIN]],[e.HONEDGE]:[[1,t.TACKLE],[1,t.FURY_CUTTER],[4,t.SHADOW_SNEAK],[8,t.AUTOTOMIZE],[12,t.AERIAL_ACE],[16,t.METAL_SOUND],[20,t.SLASH],[24,t.NIGHT_SLASH],[28,t.RETALIATE],[32,t.IRON_DEFENSE],[36,t.IRON_HEAD],[40,t.POWER_TRICK],[44,t.SWORDS_DANCE],[48,t.SACRED_SWORD]],[e.DOUBLADE]:[[1,t.TACKLE],[1,t.FURY_CUTTER],[1,t.SHADOW_SNEAK],[1,t.AUTOTOMIZE],[12,t.AERIAL_ACE],[16,t.METAL_SOUND],[20,t.SLASH],[24,t.NIGHT_SLASH],[28,t.RETALIATE],[32,t.IRON_DEFENSE],[38,t.IRON_HEAD],[44,t.POWER_TRICK],[50,t.SWORDS_DANCE],[56,t.SACRED_SWORD]],[e.AEGISLASH]:[[Z,t.KINGS_SHIELD],[1,t.SWORDS_DANCE],[1,t.PURSUIT],[1,t.TACKLE],[1,t.SLASH],[1,t.FURY_CUTTER],[1,t.METAL_SOUND],[1,t.AERIAL_ACE],[1,t.IRON_DEFENSE],[1,t.POWER_TRICK],[1,t.NIGHT_SLASH],[1,t.SHADOW_SNEAK],[1,t.IRON_HEAD],[1,t.HEAD_SMASH],[1,t.AUTOTOMIZE],[1,t.RETALIATE],[1,t.SACRED_SWORD]],[e.SPRITZEE]:[[1,t.SWEET_SCENT],[1,t.FAIRY_WIND],[3,t.SWEET_KISS],[6,t.ECHOED_VOICE],[9,t.DRAINING_KISS],[12,t.AROMATHERAPY],[18,t.ATTRACT],[21,t.FLAIL],[24,t.MISTY_TERRAIN],[27,t.PSYCHIC],[30,t.CHARM],[33,t.CALM_MIND],[36,t.MOONBLAST],[39,t.SKILL_SWAP]],[e.AROMATISSE]:[[1,t.SWEET_KISS],[1,t.SWEET_SCENT],[1,t.ECHOED_VOICE],[1,t.HEAL_PULSE],[1,t.FAIRY_WIND],[1,t.AROMATIC_MIST],[9,t.DISARMING_VOICE],[12,t.AROMATHERAPY],[15,t.DRAINING_KISS],[18,t.ATTRACT],[21,t.FLAIL],[24,t.MISTY_TERRAIN],[27,t.PSYCHIC],[30,t.CHARM],[33,t.CALM_MIND],[36,t.MOONBLAST],[39,t.SKILL_SWAP],[42,t.PSYCH_UP]],[e.SWIRLIX]:[[1,t.TACKLE],[1,t.SWEET_SCENT],[3,t.PLAY_NICE],[6,t.FAIRY_WIND],[9,t.AROMATHERAPY],[12,t.DRAINING_KISS],[15,t.FAKE_TEARS],[18,t.ROUND],[21,t.STRING_SHOT],[24,t.COTTON_SPORE],[27,t.ENERGY_BALL],[30,t.WISH],[33,t.PLAY_ROUGH],[36,t.COTTON_GUARD],[39,t.ENDEAVOR]],[e.SLURPUFF]:[[1,t.TACKLE],[1,t.SWEET_SCENT],[1,t.FAIRY_WIND],[1,t.PLAY_NICE],[9,t.AROMATHERAPY],[12,t.DRAINING_KISS],[15,t.FAKE_TEARS],[18,t.ROUND],[21,t.STRING_SHOT],[24,t.COTTON_SPORE],[27,t.ENERGY_BALL],[30,t.WISH],[33,t.PLAY_ROUGH],[36,t.COTTON_GUARD],[39,t.ENDEAVOR],[42,t.STICKY_WEB]],[e.INKAY]:[[1,t.TACKLE],[1,t.PECK],[1,t.CONSTRICT],[3,t.HYPNOSIS],[6,t.WRAP],[9,t.PAYBACK],[12,t.PLUCK],[15,t.PSYBEAM],[18,t.SWAGGER],[21,t.SLASH],[24,t.NIGHT_SLASH],[27,t.PSYCHO_CUT],[31,t.SWITCHEROO],[33,t.FOUL_PLAY],[36,t.TOPSY_TURVY],[39,t.SUPERPOWER]],[e.MALAMAR]:[[1,t.TACKLE],[1,t.WRAP],[1,t.PECK],[1,t.CONSTRICT],[1,t.HYPNOSIS],[1,t.REVERSAL],[9,t.PAYBACK],[12,t.PLUCK],[15,t.PSYBEAM],[18,t.SWAGGER],[21,t.SLASH],[24,t.NIGHT_SLASH],[27,t.PSYCHO_CUT],[33,t.SWITCHEROO],[37,t.FOUL_PLAY],[42,t.TOPSY_TURVY],[47,t.SUPERPOWER]],[e.BINACLE]:[[1,t.SCRATCH],[1,t.MUD_SLAP],[4,t.WITHDRAW],[8,t.WATER_GUN],[12,t.FURY_CUTTER],[16,t.FURY_SWIPES],[20,t.ANCIENT_POWER],[24,t.ROCK_POLISH],[28,t.SLASH],[32,t.HONE_CLAWS],[36,t.RAZOR_SHELL],[40,t.SHELL_SMASH],[44,t.CROSS_CHOP]],[e.BARBARACLE]:[[1,t.SCRATCH],[1,t.WATER_GUN],[1,t.WITHDRAW],[1,t.SKULL_BASH],[1,t.MUD_SLAP],[12,t.FURY_CUTTER],[16,t.FURY_SWIPES],[20,t.ANCIENT_POWER],[24,t.ROCK_POLISH],[28,t.SLASH],[32,t.HONE_CLAWS],[36,t.RAZOR_SHELL],[42,t.SHELL_SMASH],[48,t.CROSS_CHOP],[54,t.STONE_EDGE]],[e.SKRELP]:[[1,t.TACKLE],[1,t.SMOKESCREEN],[5,t.ACID],[10,t.WATER_GUN],[15,t.TAIL_WHIP],[20,t.DOUBLE_TEAM],[25,t.POISON_TAIL],[30,t.WATER_PULSE],[35,t.TOXIC],[40,t.DRAGON_PULSE],[45,t.AQUA_TAIL],[50,t.SLUDGE_BOMB],[55,t.HYDRO_PUMP]],[e.DRAGALGE]:[[1,t.TACKLE],[1,t.ACID],[1,t.WATER_GUN],[1,t.SMOKESCREEN],[1,t.FEINT_ATTACK],[15,t.TAIL_WHIP],[20,t.DOUBLE_TEAM],[25,t.POISON_TAIL],[30,t.WATER_PULSE],[35,t.TOXIC],[40,t.DRAGON_PULSE],[45,t.AQUA_TAIL],[52,t.SLUDGE_BOMB],[59,t.HYDRO_PUMP],[66,t.OUTRAGE]],[e.CLAUNCHER]:[[1,t.WATER_GUN],[1,t.SPLASH],[10,t.FLAIL],[15,t.AQUA_JET],[20,t.SMACK_DOWN],[25,t.HONE_CLAWS],[30,t.WATER_PULSE],[35,t.SWORDS_DANCE],[40,t.AURA_SPHERE],[45,t.BOUNCE],[50,t.MUDDY_WATER],[55,t.CRABHAMMER]],[e.CLAWITZER]:[[1,t.WATER_GUN],[1,t.SPLASH],[1,t.FLAIL],[1,t.DARK_PULSE],[1,t.DRAGON_PULSE],[1,t.HEAL_PULSE],[15,t.AQUA_JET],[20,t.SMACK_DOWN],[25,t.HONE_CLAWS],[30,t.WATER_PULSE],[35,t.SWORDS_DANCE],[42,t.AURA_SPHERE],[49,t.BOUNCE],[56,t.MUDDY_WATER],[63,t.CRABHAMMER]],[e.HELIOPTILE]:[[1,t.TAIL_WHIP],[1,t.MUD_SLAP],[4,t.POUND],[8,t.THUNDER_SHOCK],[12,t.QUICK_ATTACK],[16,t.CHARGE],[20,t.BULLDOZE],[24,t.VOLT_SWITCH],[28,t.PARABOLIC_CHARGE],[32,t.THUNDER_WAVE],[36,t.THUNDERBOLT],[40,t.ELECTRIFY],[44,t.THUNDER]],[e.HELIOLISK]:[[1,t.POUND],[1,t.TAIL_WHIP],[1,t.RAZOR_WIND],[1,t.THUNDER_SHOCK],[1,t.THUNDERBOLT],[1,t.THUNDER_WAVE],[1,t.THUNDER],[1,t.QUICK_ATTACK],[1,t.MUD_SLAP],[1,t.CHARGE],[1,t.DISCHARGE],[1,t.VOLT_SWITCH],[1,t.BULLDOZE],[1,t.PARABOLIC_CHARGE],[1,t.ELECTRIFY],[1,t.EERIE_IMPULSE]],[e.TYRUNT]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[4,t.ROAR],[8,t.ANCIENT_POWER],[12,t.CHARM],[16,t.BITE],[20,t.DRAGON_TAIL],[24,t.STOMP],[28,t.ROCK_SLIDE],[32,t.CRUNCH],[36,t.DRAGON_CLAW],[40,t.THRASH],[44,t.EARTHQUAKE],[48,t.HORN_DRILL]],[e.TYRANTRUM]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.ROAR],[1,t.ANCIENT_POWER],[12,t.CHARM],[16,t.BITE],[20,t.DRAGON_TAIL],[24,t.STOMP],[28,t.ROCK_SLIDE],[32,t.CRUNCH],[36,t.DRAGON_CLAW],[42,t.THRASH],[48,t.EARTHQUAKE],[54,t.HORN_DRILL],[60,t.GIGA_IMPACT],[66,t.HEAD_SMASH]],[e.AMAURA]:[[1,t.GROWL],[1,t.POWDER_SNOW],[4,t.ENCORE],[8,t.ANCIENT_POWER],[12,t.ICY_WIND],[16,t.ROUND],[20,t.MIST],[24,t.AURORA_BEAM],[28,t.THUNDER_WAVE],[32,t.NATURE_POWER],[36,t.FREEZE_DRY],[40,t.ICE_BEAM],[44,t.LIGHT_SCREEN],[48,t.HAIL],[52,t.BLIZZARD],[56,t.HYPER_BEAM]],[e.AURORUS]:[[1,t.GROWL],[1,t.POWDER_SNOW],[1,t.ENCORE],[1,t.ANCIENT_POWER],[12,t.ICY_WIND],[16,t.ROUND],[20,t.MIST],[24,t.AURORA_BEAM],[28,t.THUNDER_WAVE],[32,t.NATURE_POWER],[36,t.FREEZE_DRY],[42,t.ICE_BEAM],[48,t.LIGHT_SCREEN],[54,t.HAIL],[60,t.BLIZZARD],[66,t.HYPER_BEAM]],[e.SYLVEON]:[[Z,t.SPARKLY_SWIRL],[w,t.VEEVEE_VOLLEY],[1,t.TACKLE],[1,t.TAKE_DOWN],[1,t.DOUBLE_EDGE],[1,t.TAIL_WHIP],[1,t.BITE],[1,t.GROWL],[1,t.CHARM],[1,t.BATON_PASS],[1,t.HELPING_HAND],[1,t.COVET],[1,t.COPYCAT],[5,t.SAND_ATTACK],[10,t.DISARMING_VOICE],[15,t.QUICK_ATTACK],[20,t.BABY_DOLL_EYES],[25,t.SWIFT],[30,t.LIGHT_SCREEN],[35,t.DRAINING_KISS],[40,t.MISTY_TERRAIN],[45,t.SKILL_SWAP],[50,t.PSYCH_UP],[55,t.MOONBLAST],[60,t.LAST_RESORT]],[e.HAWLUCHA]:[[1,t.TACKLE],[1,t.HONE_CLAWS],[4,t.WING_ATTACK],[8,t.DETECT],[12,t.AERIAL_ACE],[16,t.ENCORE],[20,t.FEATHER_DANCE],[24,t.BRICK_BREAK],[28,t.BOUNCE],[32,t.TAUNT],[36,t.ROOST],[40,t.SWORDS_DANCE],[44,t.FLYING_PRESS],[48,t.HIGH_JUMP_KICK],[52,t.ENDEAVOR],[56,t.SKY_ATTACK]],[e.DEDENNE]:[[1,t.TAIL_WHIP],[1,t.NUZZLE],[5,t.TACKLE],[10,t.CHARGE],[15,t.THUNDER_SHOCK],[20,t.CHARM],[25,t.PARABOLIC_CHARGE],[30,t.VOLT_SWITCH],[35,t.REST],[35,t.SNORE],[40,t.DISCHARGE],[45,t.PLAY_ROUGH],[50,t.SUPER_FANG],[55,t.ENTRAINMENT],[60,t.THUNDER]],[e.CARBINK]:[[1,t.TACKLE],[1,t.HARDEN],[5,t.GUARD_SPLIT],[10,t.SMACK_DOWN],[15,t.FLAIL],[20,t.ANCIENT_POWER],[25,t.ROCK_POLISH],[30,t.LIGHT_SCREEN],[35,t.ROCK_SLIDE],[40,t.SKILL_SWAP],[45,t.POWER_GEM],[50,t.STEALTH_ROCK],[55,t.MOONBLAST],[60,t.STONE_EDGE]],[e.GOOMY]:[[1,t.TACKLE],[1,t.ABSORB],[5,t.WATER_GUN],[10,t.DRAGON_BREATH],[15,t.PROTECT],[20,t.FLAIL],[25,t.WATER_PULSE],[30,t.RAIN_DANCE],[35,t.DRAGON_PULSE],[41,t.CURSE],[45,t.BODY_SLAM],[50,t.MUDDY_WATER]],[e.SLIGGOO]:[[Z,t.ACID_SPRAY],[1,t.TACKLE],[1,t.WATER_GUN],[1,t.ABSORB],[1,t.ACID_ARMOR],[1,t.DRAGON_BREATH],[15,t.PROTECT],[20,t.FLAIL],[25,t.WATER_PULSE],[30,t.RAIN_DANCE],[35,t.DRAGON_PULSE],[43,t.CURSE],[49,t.BODY_SLAM],[56,t.MUDDY_WATER]],[e.GOODRA]:[[Z,t.AQUA_TAIL],[1,t.TACKLE],[1,t.WATER_GUN],[1,t.ABSORB],[1,t.ACID_ARMOR],[1,t.DRAGON_BREATH],[1,t.POISON_TAIL],[1,t.FEINT],[1,t.ACID_SPRAY],[1,t.TEARFUL_LOOK],[15,t.PROTECT],[20,t.FLAIL],[25,t.WATER_PULSE],[30,t.RAIN_DANCE],[35,t.DRAGON_PULSE],[43,t.CURSE],[49,t.BODY_SLAM],[58,t.MUDDY_WATER],[67,t.POWER_WHIP]],[e.KLEFKI]:[[1,t.ASTONISH],[4,t.TACKLE],[8,t.FAIRY_WIND],[12,t.TORMENT],[16,t.FAIRY_LOCK],[20,t.METAL_SOUND],[24,t.DRAINING_KISS],[28,t.RECYCLE],[32,t.IMPRISON],[36,t.FLASH_CANNON],[40,t.PLAY_ROUGH],[44,t.MAGIC_ROOM],[48,t.FOUL_PLAY],[50,t.HEAL_BLOCK],[52,t.LAST_RESORT]],[e.PHANTUMP]:[[1,t.TACKLE],[1,t.ASTONISH],[4,t.BRANCH_POKE],[8,t.LEECH_SEED],[12,t.CONFUSE_RAY],[16,t.WILL_O_WISP],[20,t.HEX],[24,t.GROWTH],[28,t.HORN_LEECH],[32,t.CURSE],[36,t.PHANTOM_FORCE],[40,t.INGRAIN],[44,t.WOOD_HAMMER],[48,t.DESTINY_BOND],[52,t.FORESTS_CURSE]],[e.TREVENANT]:[[Z,t.SHADOW_CLAW],[1,t.TACKLE],[1,t.LEECH_SEED],[1,t.ASTONISH],[1,t.BRANCH_POKE],[12,t.CONFUSE_RAY],[16,t.WILL_O_WISP],[20,t.HEX],[24,t.GROWTH],[28,t.HORN_LEECH],[32,t.CURSE],[36,t.PHANTOM_FORCE],[40,t.INGRAIN],[44,t.WOOD_HAMMER],[48,t.DESTINY_BOND],[52,t.FORESTS_CURSE]],[e.PUMPKABOO]:[[1,t.ASTONISH],[1,t.TRICK_OR_TREAT],[1,t.LEAFAGE],[4,t.SHADOW_SNEAK],[8,t.CONFUSE_RAY],[12,t.RAZOR_LEAF],[16,t.LEECH_SEED],[20,t.BULLET_SEED],[24,t.SCARY_FACE],[28,t.WORRY_SEED],[32,t.SEED_BOMB],[36,t.SHADOW_BALL],[40,t.TRICK],[44,t.PAIN_SPLIT]],[e.GOURGEIST]:[[1,t.CONFUSE_RAY],[1,t.EXPLOSION],[1,t.ASTONISH],[1,t.LEAFAGE],[1,t.SHADOW_SNEAK],[1,t.TRICK_OR_TREAT],[1,t.MOONBLAST],[12,t.RAZOR_LEAF],[16,t.LEECH_SEED],[20,t.BULLET_SEED],[24,t.SCARY_FACE],[28,t.WORRY_SEED],[32,t.SEED_BOMB],[36,t.SHADOW_BALL],[40,t.TRICK],[44,t.PAIN_SPLIT],[48,t.PHANTOM_FORCE]],[e.BERGMITE]:[[1,t.HARDEN],[1,t.RAPID_SPIN],[3,t.TACKLE],[6,t.POWDER_SNOW],[9,t.CURSE],[12,t.ICY_WIND],[15,t.PROTECT],[18,t.AVALANCHE],[21,t.BITE],[24,t.ICE_FANG],[27,t.IRON_DEFENSE],[30,t.RECOVER],[33,t.CRUNCH],[36,t.TAKE_DOWN],[39,t.BLIZZARD],[42,t.DOUBLE_EDGE]],[e.AVALUGG]:[[Z,t.BODY_SLAM],[1,t.TACKLE],[1,t.HARDEN],[1,t.POWDER_SNOW],[1,t.RAPID_SPIN],[1,t.WIDE_GUARD],[9,t.CURSE],[12,t.ICY_WIND],[15,t.PROTECT],[18,t.AVALANCHE],[21,t.BITE],[24,t.ICE_FANG],[27,t.IRON_DEFENSE],[30,t.RECOVER],[33,t.CRUNCH],[36,t.TAKE_DOWN],[41,t.BLIZZARD],[46,t.DOUBLE_EDGE],[51,t.ICICLE_CRASH]],[e.NOIBAT]:[[1,t.TACKLE],[1,t.ABSORB],[4,t.GUST],[8,t.SUPERSONIC],[12,t.DOUBLE_TEAM],[16,t.WING_ATTACK],[20,t.BITE],[24,t.AIR_CUTTER],[28,t.WHIRLWIND],[32,t.SUPER_FANG],[36,t.AIR_SLASH],[40,t.SCREECH],[44,t.ROOST],[49,t.TAILWIND],[52,t.HURRICANE]],[e.NOIVERN]:[[Z,t.DRAGON_PULSE],[1,t.GUST],[1,t.TACKLE],[1,t.SUPERSONIC],[1,t.ABSORB],[1,t.MOONLIGHT],[12,t.DOUBLE_TEAM],[16,t.WING_ATTACK],[20,t.BITE],[24,t.AIR_CUTTER],[28,t.WHIRLWIND],[32,t.SUPER_FANG],[36,t.AIR_SLASH],[40,t.SCREECH],[44,t.ROOST],[51,t.TAILWIND],[56,t.HURRICANE],[62,t.BOOMBURST]],[e.XERNEAS]:[[1,t.TACKLE],[1,t.GRAVITY],[5,t.LIGHT_SCREEN],[10,t.AURORA_BEAM],[15,t.NATURE_POWER],[20,t.NIGHT_SLASH],[25,t.AROMATHERAPY],[30,t.PSYCH_UP],[35,t.HORN_LEECH],[40,t.MISTY_TERRAIN],[45,t.INGRAIN],[50,t.TAKE_DOWN],[55,t.GEOMANCY],[60,t.MOONBLAST],[65,t.HEAL_PULSE],[70,t.MEGAHORN],[75,t.CLOSE_COMBAT],[80,t.OUTRAGE],[85,t.GIGA_IMPACT]],[e.YVELTAL]:[[1,t.GUST],[1,t.DOUBLE_TEAM],[1,t.RAZOR_WIND],[5,t.TAUNT],[10,t.SNARL],[15,t.DISABLE],[20,t.SUCKER_PUNCH],[25,t.TAILWIND],[30,t.ROOST],[35,t.AIR_SLASH],[40,t.DARK_PULSE],[45,t.PSYCHIC],[50,t.OBLIVION_WING],[55,t.PHANTOM_FORCE],[60,t.FOUL_PLAY],[65,t.DRAGON_RUSH],[70,t.HURRICANE],[75,t.FOCUS_BLAST],[80,t.SKY_ATTACK],[85,t.HYPER_BEAM]],[e.ZYGARDE]:[[1,t.BIND],[1,t.BITE],[1,t.DRAGON_BREATH],[1,t.BULLDOZE],[1,t.THOUSAND_ARROWS],[1,t.THOUSAND_WAVES],[1,t.CORE_ENFORCER],[8,t.HAZE],[16,t.DIG],[24,t.SAFEGUARD],[32,t.CRUNCH],[40,t.DRAGON_PULSE],[48,t.LANDS_WRATH],[56,t.GLARE],[64,t.SANDSTORM],[72,t.COIL],[80,t.EARTHQUAKE],[88,t.OUTRAGE]],[e.DIANCIE]:[[1,t.TACKLE],[1,t.HARDEN],[1,t.DIAMOND_STORM],[7,t.GUARD_SPLIT],[14,t.SMACK_DOWN],[21,t.FLAIL],[28,t.ANCIENT_POWER],[35,t.ROCK_POLISH],[42,t.LIGHT_SCREEN],[49,t.ROCK_SLIDE],[56,t.SKILL_SWAP],[63,t.POWER_GEM],[70,t.STEALTH_ROCK],[77,t.MOONBLAST],[84,t.STONE_EDGE]],[e.HOOPA]:[[1,t.CONFUSION],[1,t.DESTINY_BOND],[1,t.ALLY_SWITCH],[6,t.ASTONISH],[10,t.TRICK],[15,t.LIGHT_SCREEN],[19,t.PSYBEAM],[25,t.SKILL_SWAP],[29,t.GUARD_SPLIT],[29,t.POWER_SPLIT],[35,t.PHANTOM_FORCE],[46,t.ZEN_HEADBUTT],[50,t.TRICK_ROOM],[50,t.WONDER_ROOM],[55,t.SHADOW_BALL],[68,t.NASTY_PLOT],[75,t.PSYCHIC],[85,t.HYPERSPACE_HOLE]],[e.VOLCANION]:[[1,t.WATER_GUN],[1,t.FIRE_SPIN],[1,t.STEAM_ERUPTION],[6,t.LEER],[12,t.WEATHER_BALL],[18,t.FLAME_CHARGE],[24,t.WATER_PULSE],[30,t.SCARY_FACE],[36,t.INCINERATE],[42,t.STOMP],[48,t.SCALD],[54,t.TAKE_DOWN],[60,t.MIST],[60,t.HAZE],[66,t.HYDRO_PUMP],[78,t.FLARE_BLITZ],[84,t.OVERHEAT],[90,t.EXPLOSION]],[e.ROWLET]:[[1,t.TACKLE],[1,t.GROWL],[3,t.LEAFAGE],[6,t.ASTONISH],[9,t.PECK],[12,t.SHADOW_SNEAK],[15,t.RAZOR_LEAF],[18,t.SYNTHESIS],[21,t.PLUCK],[24,t.NASTY_PLOT],[27,t.SUCKER_PUNCH],[30,t.LEAF_BLADE],[33,t.FEATHER_DANCE],[36,t.BRAVE_BIRD]],[e.DARTRIX]:[[1,t.TACKLE],[1,t.GROWL],[1,t.ASTONISH],[1,t.LEAFAGE],[9,t.PECK],[12,t.SHADOW_SNEAK],[15,t.RAZOR_LEAF],[20,t.SYNTHESIS],[25,t.PLUCK],[30,t.NASTY_PLOT],[35,t.SUCKER_PUNCH],[40,t.LEAF_BLADE],[45,t.FEATHER_DANCE],[50,t.BRAVE_BIRD]],[e.DECIDUEYE]:[[Z,t.SPIRIT_SHACKLE],[1,t.TACKLE],[1,t.GROWL],[1,t.SPITE],[1,t.ASTONISH],[1,t.U_TURN],[1,t.LEAF_STORM],[1,t.PHANTOM_FORCE],[1,t.LEAFAGE],[9,t.PECK],[12,t.SHADOW_SNEAK],[15,t.RAZOR_LEAF],[20,t.SYNTHESIS],[25,t.PLUCK],[30,t.NASTY_PLOT],[37,t.SUCKER_PUNCH],[44,t.LEAF_BLADE],[51,t.FEATHER_DANCE],[58,t.BRAVE_BIRD]],[e.LITTEN]:[[1,t.SCRATCH],[1,t.GROWL],[3,t.EMBER],[6,t.LICK],[9,t.ROAR],[12,t.FURY_SWIPES],[15,t.BITE],[18,t.DOUBLE_KICK],[21,t.FIRE_FANG],[24,t.SCARY_FACE],[27,t.SWAGGER],[30,t.FLAMETHROWER],[33,t.THRASH],[36,t.FLARE_BLITZ]],[e.TORRACAT]:[[1,t.SCRATCH],[1,t.GROWL],[1,t.EMBER],[1,t.LICK],[9,t.ROAR],[12,t.FURY_SWIPES],[15,t.BITE],[20,t.DOUBLE_KICK],[25,t.FIRE_FANG],[30,t.SCARY_FACE],[35,t.SWAGGER],[40,t.FLAMETHROWER],[45,t.THRASH],[50,t.FLARE_BLITZ]],[e.INCINEROAR]:[[Z,t.DARKEST_LARIAT],[w,t.SCRATCH],[w,t.GROWL],[w,t.THROAT_CHOP],[1,t.EMBER],[1,t.LICK],[1,t.CROSS_CHOP],[1,t.BULK_UP],[9,t.ROAR],[12,t.FURY_SWIPES],[15,t.BITE],[20,t.DOUBLE_KICK],[25,t.FIRE_FANG],[30,t.SCARY_FACE],[32,t.SWAGGER],[44,t.FLAMETHROWER],[51,t.THRASH],[58,t.FLARE_BLITZ]],[e.POPPLIO]:[[1,t.POUND],[1,t.GROWL],[3,t.WATER_GUN],[6,t.DISARMING_VOICE],[9,t.AQUA_JET],[12,t.BABY_DOLL_EYES],[15,t.ICY_WIND],[18,t.SING],[21,t.BUBBLE_BEAM],[24,t.ENCORE],[27,t.MISTY_TERRAIN],[30,t.HYPER_VOICE],[33,t.MOONBLAST],[36,t.HYDRO_PUMP]],[e.BRIONNE]:[[1,t.POUND],[1,t.GROWL],[1,t.WATER_GUN],[1,t.DISARMING_VOICE],[9,t.AQUA_JET],[12,t.BABY_DOLL_EYES],[15,t.ICY_WIND],[20,t.SING],[25,t.BUBBLE_BEAM],[30,t.ENCORE],[35,t.MISTY_TERRAIN],[40,t.HYPER_VOICE],[45,t.MOONBLAST],[50,t.HYDRO_PUMP]],[e.PRIMARINA]:[[Z,t.SPARKLING_ARIA],[1,t.POUND],[1,t.GROWL],[1,t.WATER_GUN],[1,t.DISARMING_VOICE],[9,t.AQUA_JET],[12,t.BABY_DOLL_EYES],[15,t.ICY_WIND],[20,t.SING],[25,t.BUBBLE_BEAM],[30,t.ENCORE],[37,t.MISTY_TERRAIN],[44,t.HYPER_VOICE],[51,t.MOONBLAST],[58,t.HYDRO_PUMP]],[e.PIKIPEK]:[[1,t.PECK],[3,t.GROWL],[7,t.ECHOED_VOICE],[9,t.ROCK_SMASH],[13,t.SUPERSONIC],[15,t.PLUCK],[19,t.ROOST],[21,t.FURY_ATTACK],[25,t.SCREECH],[27,t.DRILL_PECK],[31,t.BULLET_SEED],[33,t.FEATHER_DANCE],[37,t.HYPER_VOICE]],[e.TRUMBEAK]:[[w,t.ECHOED_VOICE],[1,t.GROWL],[1,t.PECK],[1,t.ROCK_SMASH],[1,t.ROCK_BLAST],[13,t.SUPERSONIC],[16,t.PLUCK],[21,t.ROOST],[24,t.FURY_ATTACK],[29,t.SCREECH],[32,t.DRILL_PECK],[37,t.BULLET_SEED],[40,t.FEATHER_DANCE],[45,t.HYPER_VOICE]],[e.TOUCANNON]:[[Z,t.BEAK_BLAST],[1,t.GROWL],[1,t.PECK],[1,t.ROCK_SMASH],[1,t.ROCK_BLAST],[1,t.ECHOED_VOICE],[13,t.SUPERSONIC],[16,t.PLUCK],[21,t.ROOST],[24,t.FURY_ATTACK],[30,t.SCREECH],[34,t.DRILL_PECK],[40,t.BULLET_SEED],[44,t.FEATHER_DANCE],[50,t.HYPER_VOICE]],[e.YUNGOOS]:[[1,t.TACKLE],[3,t.LEER],[7,t.PAYBACK],[10,t.SAND_ATTACK],[13,t.WORK_UP],[19,t.BITE],[22,t.MUD_SLAP],[25,t.SUPER_FANG],[28,t.TAKE_DOWN],[31,t.SCARY_FACE],[34,t.CRUNCH],[37,t.YAWN],[40,t.THRASH],[43,t.REST]],[e.GUMSHOOS]:[[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.LEER],[1,t.PAYBACK],[1,t.PURSUIT],[13,t.WORK_UP],[19,t.BITE],[23,t.MUD_SLAP],[27,t.SUPER_FANG],[31,t.TAKE_DOWN],[35,t.SCARY_FACE],[39,t.CRUNCH],[43,t.YAWN],[47,t.THRASH],[52,t.REST]],[e.GRUBBIN]:[[1,t.VISE_GRIP],[1,t.MUD_SLAP],[5,t.STRING_SHOT],[10,t.BUG_BITE],[15,t.BITE],[21,t.SPARK],[25,t.STICKY_WEB],[30,t.X_SCISSOR],[35,t.CRUNCH],[40,t.DIG]],[e.CHARJABUG]:[[Z,t.CHARGE],[1,t.VISE_GRIP],[1,t.STRING_SHOT],[1,t.MUD_SLAP],[1,t.BUG_BITE],[15,t.BITE],[23,t.SPARK],[29,t.STICKY_WEB],[36,t.X_SCISSOR],[43,t.CRUNCH],[50,t.DIG],[57,t.IRON_DEFENSE],[64,t.DISCHARGE]],[e.VIKAVOLT]:[[Z,t.THUNDERBOLT],[w,t.VISE_GRIP],[w,t.DIG],[w,t.MUD_SLAP],[w,t.IRON_DEFENSE],[w,t.X_SCISSOR],[w,t.BUG_BITE],[1,t.CHARGE],[1,t.CRUNCH],[1,t.DISCHARGE],[1,t.STRING_SHOT],[15,t.BITE],[23,t.SPARK],[29,t.STICKY_WEB],[36,t.BUG_BUZZ],[43,t.GUILLOTINE],[50,t.FLY],[57,t.AGILITY],[64,t.ZAP_CANNON]],[e.CRABRAWLER]:[[1,t.BUBBLE],[1,t.VISE_GRIP],[5,t.ROCK_SMASH],[9,t.LEER],[13,t.BUBBLE_BEAM],[17,t.PROTECT],[22,t.BRICK_BREAK],[25,t.SLAM],[29,t.PAYBACK],[33,t.REVERSAL],[37,t.CRABHAMMER],[42,t.IRON_DEFENSE],[45,t.DYNAMIC_PUNCH],[49,t.CLOSE_COMBAT]],[e.CRABOMINABLE]:[[Z,t.ICE_PUNCH],[w,t.CRABHAMMER],[1,t.VISE_GRIP],[1,t.LEER],[1,t.PROTECT],[1,t.ROCK_SMASH],[1,t.BUBBLE],[1,t.PURSUIT],[1,t.PAYBACK],[17,t.BUBBLE_BEAM],[22,t.BRICK_BREAK],[25,t.SLAM],[29,t.AVALANCHE],[33,t.REVERSAL],[37,t.ICE_HAMMER],[42,t.IRON_DEFENSE],[45,t.DYNAMIC_PUNCH],[49,t.CLOSE_COMBAT]],[e.ORICORIO]:[[1,t.POUND],[4,t.GROWL],[6,t.PECK],[10,t.HELPING_HAND],[13,t.AIR_CUTTER],[16,t.BATON_PASS],[20,t.FEATHER_DANCE],[23,t.ACROBATICS],[26,t.TEETER_DANCE],[30,t.ROOST],[33,t.FLATTER],[36,t.AIR_SLASH],[40,t.REVELATION_DANCE],[43,t.AGILITY],[47,t.HURRICANE]],[e.CUTIEFLY]:[[1,t.ABSORB],[1,t.FAIRY_WIND],[6,t.STUN_SPORE],[12,t.SWEET_SCENT],[18,t.DRAINING_KISS],[24,t.STRUGGLE_BUG],[30,t.COVET],[36,t.SWITCHEROO],[42,t.DAZZLING_GLEAM],[48,t.BUG_BUZZ],[54,t.QUIVER_DANCE]],[e.RIBOMBEE]:[[Z,t.POLLEN_PUFF],[1,t.ABSORB],[1,t.STUN_SPORE],[1,t.SWEET_SCENT],[1,t.FAIRY_WIND],[18,t.DRAINING_KISS],[24,t.STRUGGLE_BUG],[32,t.COVET],[40,t.SWITCHEROO],[48,t.DAZZLING_GLEAM],[56,t.BUG_BUZZ],[64,t.QUIVER_DANCE]],[e.ROCKRUFF]:[[1,t.TACKLE],[1,t.LEER],[4,t.SAND_ATTACK],[8,t.DOUBLE_TEAM],[12,t.ROCK_THROW],[16,t.HOWL],[20,t.BITE],[24,t.ROCK_TOMB],[28,t.ROAR],[32,t.ROCK_SLIDE],[36,t.CRUNCH],[40,t.SCARY_FACE],[44,t.STEALTH_ROCK],[48,t.STONE_EDGE]],[e.LYCANROC]:[[Z,t.SUCKER_PUNCH],[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.LEER],[1,t.QUICK_ATTACK],[1,t.DOUBLE_TEAM],[1,t.QUICK_GUARD],[1,t.ACCELEROCK],[12,t.ROCK_THROW],[16,t.HOWL],[20,t.BITE],[24,t.ROCK_TOMB],[30,t.ROAR],[36,t.ROCK_SLIDE],[42,t.CRUNCH],[48,t.SCARY_FACE],[54,t.STEALTH_ROCK],[60,t.STONE_EDGE]],[e.WISHIWASHI]:[[1,t.GROWL],[1,t.WATER_GUN],[4,t.HELPING_HAND],[8,t.BEAT_UP],[12,t.BRINE],[16,t.TEARFUL_LOOK],[20,t.DIVE],[24,t.SOAK],[28,t.UPROAR],[32,t.AQUA_TAIL],[36,t.AQUA_RING],[40,t.ENDEAVOR],[44,t.HYDRO_PUMP],[48,t.DOUBLE_EDGE]],[e.MAREANIE]:[[1,t.POISON_STING],[1,t.PECK],[5,t.WIDE_GUARD],[10,t.BITE],[15,t.VENOSHOCK],[20,t.RECOVER],[25,t.PIN_MISSILE],[30,t.TOXIC_SPIKES],[35,t.LIQUIDATION],[40,t.ACID_SPRAY],[45,t.POISON_JAB],[50,t.TOXIC]],[e.TOXAPEX]:[[Z,t.BANEFUL_BUNKER],[1,t.POISON_STING],[1,t.BITE],[1,t.PECK],[1,t.WIDE_GUARD],[15,t.VENOSHOCK],[20,t.RECOVER],[25,t.PIN_MISSILE],[30,t.TOXIC_SPIKES],[35,t.LIQUIDATION],[42,t.ACID_SPRAY],[49,t.POISON_JAB],[56,t.TOXIC]],[e.MUDBRAY]:[[1,t.MUD_SLAP],[1,t.ROCK_SMASH],[4,t.IRON_DEFENSE],[8,t.DOUBLE_KICK],[12,t.BULLDOZE],[16,t.STOMP],[20,t.STRENGTH],[24,t.COUNTER],[28,t.HIGH_HORSEPOWER],[32,t.HEAVY_SLAM],[36,t.EARTHQUAKE],[40,t.MEGA_KICK],[44,t.SUPERPOWER]],[e.MUDSDALE]:[[1,t.DOUBLE_KICK],[1,t.MUD_SLAP],[1,t.ROCK_SMASH],[1,t.IRON_DEFENSE],[12,t.BULLDOZE],[16,t.STOMP],[20,t.STRENGTH],[24,t.COUNTER],[28,t.HIGH_HORSEPOWER],[34,t.HEAVY_SLAM],[40,t.EARTHQUAKE],[46,t.MEGA_KICK],[52,t.SUPERPOWER]],[e.DEWPIDER]:[[1,t.WATER_GUN],[1,t.INFESTATION],[1,t.WATER_SPORT],[4,t.BUG_BITE],[8,t.BITE],[12,t.BUBBLE_BEAM],[16,t.AQUA_RING],[20,t.HEADBUTT],[24,t.CRUNCH],[28,t.SOAK],[32,t.ENTRAINMENT],[36,t.LUNGE],[40,t.LIQUIDATION],[44,t.LEECH_LIFE],[48,t.MIRROR_COAT]],[e.ARAQUANID]:[[1,t.BITE],[1,t.WATER_GUN],[1,t.BUG_BITE],[1,t.WIDE_GUARD],[1,t.INFESTATION],[1,t.WATER_SPORT],[1,t.SPIDER_WEB],[12,t.BUBBLE_BEAM],[16,t.AQUA_RING],[20,t.HEADBUTT],[26,t.CRUNCH],[32,t.SOAK],[38,t.ENTRAINMENT],[44,t.LUNGE],[50,t.LIQUIDATION],[56,t.LEECH_LIFE],[62,t.MIRROR_COAT]],[e.FOMANTIS]:[[1,t.FURY_CUTTER],[1,t.LEAFAGE],[5,t.GROWTH],[10,t.INGRAIN],[15,t.RAZOR_LEAF],[20,t.SWEET_SCENT],[25,t.SLASH],[30,t.X_SCISSOR],[35,t.SYNTHESIS],[40,t.LEAF_BLADE],[45,t.SUNNY_DAY],[50,t.SOLAR_BEAM]],[e.LURANTIS]:[[Z,t.PETAL_BLIZZARD],[1,t.GROWTH],[1,t.SOLAR_BEAM],[1,t.FURY_CUTTER],[1,t.INGRAIN],[1,t.NIGHT_SLASH],[1,t.LEAFAGE],[1,t.DUAL_CHOP],[15,t.RAZOR_LEAF],[20,t.SWEET_SCENT],[25,t.SLASH],[30,t.X_SCISSOR],[37,t.SYNTHESIS],[44,t.LEAF_BLADE],[51,t.SUNNY_DAY],[63,t.SOLAR_BLADE]],[e.MORELULL]:[[1,t.ABSORB],[1,t.ASTONISH],[4,t.CONFUSE_RAY],[8,t.INGRAIN],[12,t.MEGA_DRAIN],[16,t.SLEEP_POWDER],[20,t.MOONLIGHT],[25,t.STRENGTH_SAP],[28,t.GIGA_DRAIN],[32,t.DAZZLING_GLEAM],[36,t.SPORE],[40,t.MOONBLAST],[44,t.DREAM_EATER]],[e.SHIINOTIC]:[[1,t.ABSORB],[1,t.CONFUSE_RAY],[1,t.INGRAIN],[1,t.ASTONISH],[1,t.FLASH],[12,t.MEGA_DRAIN],[16,t.SLEEP_POWDER],[20,t.MOONLIGHT],[27,t.STRENGTH_SAP],[32,t.GIGA_DRAIN],[38,t.DAZZLING_GLEAM],[44,t.SPORE],[50,t.MOONBLAST],[56,t.DREAM_EATER]],[e.SALANDIT]:[[1,t.SCRATCH],[1,t.POISON_GAS],[5,t.SMOG],[10,t.EMBER],[15,t.POISON_FANG],[20,t.SWEET_SCENT],[25,t.NASTY_PLOT],[30,t.INCINERATE],[35,t.VENOSHOCK],[40,t.DRAGON_PULSE],[45,t.FLAMETHROWER],[50,t.TOXIC],[55,t.ENDEAVOR]],[e.SALAZZLE]:[[Z,t.FIRE_LASH],[1,t.POUND],[1,t.SCRATCH],[1,t.DISABLE],[1,t.EMBER],[1,t.SMOG],[1,t.POISON_GAS],[1,t.SWAGGER],[1,t.ENCORE],[1,t.TORMENT],[1,t.KNOCK_OFF],[1,t.ENDEAVOR],[1,t.CAPTIVATE],[15,t.POISON_FANG],[20,t.SWEET_SCENT],[25,t.NASTY_PLOT],[30,t.INCINERATE],[37,t.VENOSHOCK],[44,t.DRAGON_PULSE],[51,t.FLAMETHROWER],[58,t.TOXIC]],[e.STUFFUL]:[[1,t.TACKLE],[1,t.LEER],[4,t.BABY_DOLL_EYES],[8,t.PAYBACK],[12,t.BRUTAL_SWING],[16,t.ENDURE],[20,t.STRENGTH],[24,t.TAKE_DOWN],[28,t.FLAIL],[32,t.HAMMER_ARM],[36,t.THRASH],[40,t.PAIN_SPLIT],[44,t.DOUBLE_EDGE],[48,t.SUPERPOWER]],[e.BEWEAR]:[[Z,t.BIND],[1,t.TACKLE],[1,t.LEER],[1,t.PAYBACK],[1,t.BABY_DOLL_EYES],[12,t.BRUTAL_SWING],[16,t.ENDURE],[20,t.STRENGTH],[24,t.TAKE_DOWN],[30,t.FLAIL],[36,t.HAMMER_ARM],[42,t.THRASH],[48,t.PAIN_SPLIT],[54,t.DOUBLE_EDGE],[60,t.SUPERPOWER]],[e.BOUNSWEET]:[[1,t.SPLASH],[1,t.LEAFAGE],[4,t.PLAY_NICE],[8,t.RAPID_SPIN],[12,t.RAZOR_LEAF],[16,t.SWEET_SCENT],[20,t.MAGICAL_LEAF],[24,t.FLAIL],[28,t.TEETER_DANCE],[32,t.AROMATIC_MIST]],[e.STEENEE]:[[1,t.LEAFAGE],[1,t.RAZOR_LEAF],[1,t.SPLASH],[1,t.FLAIL],[1,t.RAPID_SPIN],[1,t.PLAY_NICE],[16,t.SWEET_SCENT],[22,t.MAGICAL_LEAF],[28,t.STOMP],[34,t.TEETER_DANCE],[40,t.AROMATIC_MIST],[46,t.LEAF_STORM]],[e.TSAREENA]:[[Z,t.TROP_KICK],[1,t.LEAFAGE],[1,t.RAZOR_LEAF],[1,t.SPLASH],[1,t.FLAIL],[1,t.SWAGGER],[1,t.RAPID_SPIN],[1,t.POWER_WHIP],[1,t.PLAY_NICE],[1,t.PUNISHMENT],[16,t.SWEET_SCENT],[22,t.MAGICAL_LEAF],[28,t.STOMP],[34,t.TEETER_DANCE],[40,t.AROMATIC_MIST],[46,t.LEAF_STORM],[58,t.HIGH_JUMP_KICK]],[e.COMFEY]:[[1,t.WRAP],[1,t.GROWTH],[3,t.VINE_WHIP],[6,t.HELPING_HAND],[9,t.DRAINING_KISS],[12,t.FLOWER_SHIELD],[15,t.MAGICAL_LEAF],[18,t.SYNTHESIS],[21,t.LEECH_SEED],[24,t.GRASS_KNOT],[27,t.SWEET_KISS],[30,t.FLORAL_HEALING],[33,t.PETAL_BLIZZARD],[36,t.AROMATHERAPY],[39,t.PLAY_ROUGH],[42,t.SWEET_SCENT],[45,t.PETAL_DANCE],[48,t.GRASSY_TERRAIN]],[e.ORANGURU]:[[1,t.CONFUSION],[1,t.TAUNT],[5,t.AFTER_YOU],[10,t.CALM_MIND],[15,t.STORED_POWER],[20,t.PSYCH_UP],[25,t.QUASH],[30,t.NASTY_PLOT],[35,t.ZEN_HEADBUTT],[40,t.TRICK_ROOM],[45,t.PSYCHIC],[50,t.INSTRUCT],[55,t.FOUL_PLAY],[60,t.FUTURE_SIGHT]],[e.PASSIMIAN]:[[1,t.TACKLE],[1,t.LEER],[5,t.ROCK_SMASH],[10,t.FOCUS_ENERGY],[15,t.BEAT_UP],[20,t.SCARY_FACE],[25,t.TAKE_DOWN],[30,t.FLING],[35,t.BULK_UP],[40,t.THRASH],[45,t.DOUBLE_EDGE],[50,t.CLOSE_COMBAT],[55,t.REVERSAL],[60,t.GIGA_IMPACT]],[e.WIMPOD]:[[1,t.SAND_ATTACK],[1,t.DEFENSE_CURL],[1,t.STRUGGLE_BUG]],[e.GOLISOPOD]:[[Z,t.FIRST_IMPRESSION],[1,t.SAND_ATTACK],[1,t.DEFENSE_CURL],[1,t.SPITE],[1,t.STRUGGLE_BUG],[4,t.ROCK_SMASH],[8,t.FURY_CUTTER],[12,t.MUD_SHOT],[16,t.BUG_BITE],[20,t.IRON_DEFENSE],[24,t.SUCKER_PUNCH],[28,t.SLASH],[32,t.RAZOR_SHELL],[36,t.PIN_MISSILE],[40,t.SWORDS_DANCE],[44,t.LIQUIDATION]],[e.SANDYGAST]:[[1,t.ABSORB],[1,t.HARDEN],[5,t.ASTONISH],[10,t.SAND_TOMB],[15,t.MEGA_DRAIN],[20,t.SAND_ATTACK],[25,t.BULLDOZE],[30,t.HYPNOSIS],[35,t.GIGA_DRAIN],[40,t.IRON_DEFENSE],[45,t.SHADOW_BALL],[50,t.EARTH_POWER],[55,t.SHORE_UP],[60,t.SANDSTORM]],[e.PALOSSAND]:[[1,t.ABSORB],[1,t.HARDEN],[1,t.ASTONISH],[1,t.SAND_TOMB],[15,t.MEGA_DRAIN],[20,t.SAND_ATTACK],[25,t.BULLDOZE],[30,t.HYPNOSIS],[35,t.GIGA_DRAIN],[40,t.IRON_DEFENSE],[47,t.SHADOW_BALL],[54,t.EARTH_POWER],[61,t.SHORE_UP],[68,t.SANDSTORM]],[e.PYUKUMUKU]:[[1,t.COUNTER],[1,t.HARDEN],[1,t.BATON_PASS],[1,t.BIDE],[1,t.MUD_SPORT],[1,t.WATER_SPORT],[5,t.HELPING_HAND],[10,t.TAUNT],[15,t.SAFEGUARD],[20,t.MIRROR_COAT],[25,t.PURIFY],[30,t.CURSE],[35,t.GASTRO_ACID],[40,t.PAIN_SPLIT],[45,t.RECOVER],[50,t.SOAK],[55,t.TOXIC],[60,t.MEMENTO]],[e.TYPE_NULL]:[[1,t.TACKLE],[1,t.IMPRISON],[5,t.AERIAL_ACE],[10,t.SCARY_FACE],[15,t.DOUBLE_HIT],[20,t.METAL_SOUND],[25,t.CRUSH_CLAW],[30,t.AIR_SLASH],[35,t.TRI_ATTACK],[40,t.X_SCISSOR],[45,t.IRON_HEAD],[50,t.TAKE_DOWN],[55,t.DOUBLE_EDGE],[60,t.HEAL_BLOCK]],[e.SILVALLY]:[[Z,t.MULTI_ATTACK],[1,t.TACKLE],[1,t.BITE],[1,t.EXPLOSION],[1,t.SCARY_FACE],[1,t.IMPRISON],[1,t.POISON_FANG],[1,t.AERIAL_ACE],[1,t.THUNDER_FANG],[1,t.ICE_FANG],[1,t.FIRE_FANG],[1,t.IRON_HEAD],[1,t.HEAL_BLOCK],[15,t.DOUBLE_HIT],[20,t.METAL_SOUND],[25,t.CRUSH_CLAW],[30,t.AIR_SLASH],[35,t.TRI_ATTACK],[40,t.X_SCISSOR],[45,t.CRUNCH],[50,t.TAKE_DOWN],[55,t.DOUBLE_EDGE],[60,t.PARTING_SHOT]],[e.MINIOR]:[[1,t.TACKLE],[3,t.DEFENSE_CURL],[8,t.ROLLOUT],[10,t.CONFUSE_RAY],[15,t.SWIFT],[17,t.ANCIENT_POWER],[22,t.SELF_DESTRUCT],[24,t.STEALTH_ROCK],[29,t.TAKE_DOWN],[31,t.AUTOTOMIZE],[36,t.COSMIC_POWER],[38,t.POWER_GEM],[43,t.DOUBLE_EDGE],[45,t.SHELL_SMASH],[50,t.EXPLOSION]],[e.KOMALA]:[[1,t.DEFENSE_CURL],[1,t.ROLLOUT],[6,t.STOCKPILE],[6,t.SPIT_UP],[6,t.SWALLOW],[11,t.RAPID_SPIN],[16,t.YAWN],[21,t.SLAM],[26,t.FLAIL],[31,t.SUCKER_PUNCH],[36,t.PSYCH_UP],[41,t.WOOD_HAMMER],[46,t.THRASH]],[e.TURTONATOR]:[[1,t.TACKLE],[1,t.SMOG],[4,t.EMBER],[8,t.PROTECT],[12,t.ENDURE],[16,t.FLAIL],[20,t.INCINERATE],[24,t.IRON_DEFENSE],[28,t.DRAGON_PULSE],[32,t.BODY_SLAM],[36,t.FLAMETHROWER],[40,t.SHELL_TRAP],[44,t.SHELL_SMASH],[48,t.OVERHEAT],[52,t.EXPLOSION]],[e.TOGEDEMARU]:[[1,t.TACKLE],[1,t.NUZZLE],[5,t.DEFENSE_CURL],[10,t.CHARGE],[15,t.THUNDER_SHOCK],[20,t.FELL_STINGER],[25,t.SPARK],[30,t.PIN_MISSILE],[35,t.MAGNET_RISE],[40,t.ZING_ZAP],[45,t.DISCHARGE],[50,t.ELECTRIC_TERRAIN],[55,t.WILD_CHARGE],[60,t.SPIKY_SHIELD]],[e.MIMIKYU]:[[1,t.SCRATCH],[1,t.SPLASH],[1,t.ASTONISH],[1,t.COPYCAT],[1,t.WOOD_HAMMER],[6,t.SHADOW_SNEAK],[12,t.DOUBLE_TEAM],[18,t.BABY_DOLL_EYES],[24,t.MIMIC],[30,t.HONE_CLAWS],[36,t.SLASH],[42,t.SHADOW_CLAW],[48,t.CHARM],[54,t.PLAY_ROUGH],[60,t.PAIN_SPLIT]],[e.BRUXISH]:[[1,t.WATER_GUN],[4,t.ASTONISH],[9,t.CONFUSION],[12,t.BITE],[17,t.AQUA_JET],[20,t.DISABLE],[25,t.PSYSHOCK],[28,t.CRUNCH],[33,t.AQUA_TAIL],[36,t.SCREECH],[41,t.PSYCHIC_FANGS],[44,t.WAVE_CRASH]],[e.DRAMPA]:[[1,t.ECHOED_VOICE],[1,t.PLAY_NICE],[5,t.TWISTER],[10,t.PROTECT],[15,t.GLARE],[20,t.SAFEGUARD],[25,t.DRAGON_BREATH],[30,t.EXTRASENSORY],[35,t.DRAGON_PULSE],[40,t.LIGHT_SCREEN],[45,t.FLY],[50,t.HYPER_VOICE],[55,t.OUTRAGE]],[e.DHELMISE]:[[1,t.ABSORB],[1,t.RAPID_SPIN],[4,t.ASTONISH],[8,t.WRAP],[12,t.MEGA_DRAIN],[16,t.GROWTH],[20,t.GYRO_BALL],[24,t.SWITCHEROO],[28,t.GIGA_DRAIN],[32,t.WHIRLPOOL],[36,t.HEAVY_SLAM],[40,t.SLAM],[44,t.SHADOW_BALL],[48,t.METAL_SOUND],[52,t.ANCHOR_SHOT],[56,t.ENERGY_BALL],[60,t.PHANTOM_FORCE],[64,t.POWER_WHIP]],[e.JANGMO_O]:[[1,t.TACKLE],[1,t.LEER],[4,t.PROTECT],[8,t.DRAGON_TAIL],[12,t.SCARY_FACE],[16,t.HEADBUTT],[20,t.WORK_UP],[24,t.SCREECH],[28,t.IRON_DEFENSE],[32,t.DRAGON_CLAW],[36,t.NOBLE_ROAR],[40,t.DRAGON_DANCE],[44,t.OUTRAGE]],[e.HAKAMO_O]:[[Z,t.SKY_UPPERCUT],[1,t.TACKLE],[1,t.LEER],[1,t.PROTECT],[1,t.DRAGON_TAIL],[1,t.BIDE],[12,t.SCARY_FACE],[16,t.HEADBUTT],[20,t.WORK_UP],[24,t.SCREECH],[28,t.IRON_DEFENSE],[32,t.DRAGON_CLAW],[38,t.NOBLE_ROAR],[44,t.DRAGON_DANCE],[50,t.OUTRAGE],[56,t.CLOSE_COMBAT]],[e.KOMMO_O]:[[Z,t.CLANGING_SCALES],[w,t.BELLY_DRUM],[1,t.TACKLE],[1,t.LEER],[1,t.PROTECT],[1,t.DRAGON_TAIL],[1,t.BIDE],[1,t.SKY_UPPERCUT],[12,t.SCARY_FACE],[16,t.HEADBUTT],[20,t.WORK_UP],[24,t.SCREECH],[28,t.IRON_DEFENSE],[32,t.DRAGON_CLAW],[38,t.NOBLE_ROAR],[44,t.DRAGON_DANCE],[52,t.OUTRAGE],[60,t.CLOSE_COMBAT],[68,t.CLANGOROUS_SOUL],[76,t.BOOMBURST]],[e.TAPU_KOKO]:[[1,t.THUNDER_SHOCK],[1,t.QUICK_ATTACK],[5,t.WITHDRAW],[10,t.FAIRY_WIND],[15,t.FALSE_SWIPE],[20,t.SPARK],[25,t.SHOCK_WAVE],[30,t.CHARGE],[35,t.AGILITY],[40,t.SCREECH],[45,t.DISCHARGE],[50,t.MEAN_LOOK],[55,t.NATURES_MADNESS],[60,t.WILD_CHARGE],[65,t.BRAVE_BIRD],[70,t.POWER_SWAP],[75,t.ELECTRIC_TERRAIN]],[e.TAPU_LELE]:[[1,t.CONFUSION],[1,t.ASTONISH],[5,t.WITHDRAW],[10,t.AROMATHERAPY],[15,t.DRAINING_KISS],[20,t.PSYBEAM],[25,t.FLATTER],[30,t.AROMATIC_MIST],[35,t.SWEET_SCENT],[40,t.EXTRASENSORY],[45,t.PSYSHOCK],[50,t.MEAN_LOOK],[55,t.NATURES_MADNESS],[60,t.MOONBLAST],[65,t.TICKLE],[70,t.SKILL_SWAP],[75,t.PSYCHIC_TERRAIN]],[e.TAPU_BULU]:[[1,t.ROCK_SMASH],[1,t.LEAFAGE],[5,t.WITHDRAW],[10,t.DISABLE],[15,t.LEECH_SEED],[20,t.MEGA_DRAIN],[25,t.WHIRLWIND],[30,t.HORN_ATTACK],[35,t.SCARY_FACE],[40,t.HORN_LEECH],[45,t.ZEN_HEADBUTT],[50,t.MEAN_LOOK],[55,t.NATURES_MADNESS],[60,t.WOOD_HAMMER],[65,t.MEGAHORN],[70,t.SKULL_BASH],[75,t.GRASSY_TERRAIN]],[e.TAPU_FINI]:[[1,t.WATER_GUN],[1,t.DISARMING_VOICE],[5,t.WITHDRAW],[10,t.MIST],[10,t.HAZE],[15,t.AQUA_RING],[20,t.WATER_PULSE],[25,t.BRINE],[30,t.DEFOG],[35,t.HEAL_PULSE],[40,t.SURF],[45,t.MUDDY_WATER],[50,t.MEAN_LOOK],[55,t.NATURES_MADNESS],[60,t.MOONBLAST],[65,t.HYDRO_PUMP],[70,t.SOAK],[75,t.MISTY_TERRAIN]],[e.COSMOG]:[[1,t.TELEPORT],[1,t.SPLASH],[1,t.STORED_POWER]],[e.COSMOEM]:[[Z,t.COSMIC_POWER],[1,t.TELEPORT],[1,t.SPLASH],[1,t.STORED_POWER]],[e.SOLGALEO]:[[Z,t.SUNSTEEL_STRIKE],[1,t.TELEPORT],[1,t.SPLASH],[1,t.STORED_POWER],[1,t.METAL_CLAW],[1,t.COSMIC_POWER],[1,t.NOBLE_ROAR],[1,t.WAKE_UP_SLAP],[7,t.IRON_HEAD],[14,t.METAL_SOUND],[21,t.ZEN_HEADBUTT],[28,t.FLASH_CANNON],[35,t.MORNING_SUN],[42,t.CRUNCH],[49,t.METAL_BURST],[56,t.WILD_CHARGE],[63,t.SOLAR_BEAM],[70,t.FLARE_BLITZ],[77,t.WIDE_GUARD],[84,t.GIGA_IMPACT]],[e.LUNALA]:[[Z,t.MOONGEIST_BEAM],[1,t.CONFUSION],[1,t.HYPNOSIS],[1,t.TELEPORT],[1,t.SPLASH],[1,t.STORED_POWER],[1,t.COSMIC_POWER],[7,t.NIGHT_SHADE],[14,t.CONFUSE_RAY],[21,t.AIR_SLASH],[28,t.SHADOW_BALL],[35,t.MOONLIGHT],[42,t.NIGHT_DAZE],[49,t.MAGIC_COAT],[56,t.MOONBLAST],[63,t.PHANTOM_FORCE],[70,t.DREAM_EATER],[77,t.WIDE_GUARD],[84,t.HYPER_BEAM]],[e.NIHILEGO]:[[1,t.POUND],[1,t.WRAP],[1,t.CONSTRICT],[5,t.ACID],[10,t.TICKLE],[15,t.ACID_SPRAY],[20,t.CLEAR_SMOG],[25,t.GUARD_SPLIT],[25,t.POWER_SPLIT],[30,t.VENOSHOCK],[35,t.HEADBUTT],[40,t.TOXIC_SPIKES],[45,t.VENOM_DRENCH],[50,t.POWER_GEM],[55,t.STEALTH_ROCK],[60,t.MIRROR_COAT],[65,t.WONDER_ROOM],[70,t.HEAD_SMASH]],[e.BUZZWOLE]:[[1,t.HARDEN],[1,t.POWER_UP_PUNCH],[5,t.TAUNT],[10,t.FELL_STINGER],[15,t.VITAL_THROW],[20,t.BULK_UP],[25,t.ENDURE],[30,t.REVERSAL],[35,t.MEGA_PUNCH],[40,t.LUNGE],[45,t.FOCUS_ENERGY],[50,t.DYNAMIC_PUNCH],[55,t.COUNTER],[60,t.HAMMER_ARM],[65,t.SUPERPOWER],[70,t.FOCUS_PUNCH]],[e.PHEROMOSA]:[[1,t.RAPID_SPIN],[1,t.FEINT],[5,t.LEER],[10,t.QUICK_GUARD],[15,t.BUG_BITE],[20,t.LOW_KICK],[25,t.DOUBLE_KICK],[30,t.TRIPLE_KICK],[35,t.STOMP],[40,t.AGILITY],[45,t.LUNGE],[50,t.BOUNCE],[55,t.SPEED_SWAP],[60,t.BUG_BUZZ],[65,t.QUIVER_DANCE],[70,t.HIGH_JUMP_KICK]],[e.XURKITREE]:[[1,t.WRAP],[1,t.THUNDER_SHOCK],[5,t.CHARGE],[10,t.THUNDER_WAVE],[15,t.INGRAIN],[20,t.SPARK],[25,t.SHOCK_WAVE],[30,t.HYPNOSIS],[35,t.EERIE_IMPULSE],[40,t.THUNDER_PUNCH],[45,t.DISCHARGE],[50,t.MAGNET_RISE],[55,t.THUNDERBOLT],[60,t.ELECTRIC_TERRAIN],[65,t.POWER_WHIP],[70,t.ZAP_CANNON]],[e.CELESTEELA]:[[1,t.TACKLE],[1,t.ABSORB],[5,t.HARDEN],[10,t.WIDE_GUARD],[15,t.MEGA_DRAIN],[20,t.SMACK_DOWN],[25,t.INGRAIN],[30,t.AUTOTOMIZE],[35,t.GIGA_DRAIN],[40,t.FLASH_CANNON],[45,t.METAL_SOUND],[50,t.IRON_DEFENSE],[55,t.LEECH_SEED],[60,t.HEAVY_SLAM],[65,t.DOUBLE_EDGE],[70,t.SKULL_BASH]],[e.KARTANA]:[[1,t.FURY_CUTTER],[1,t.VACUUM_WAVE],[5,t.RAZOR_LEAF],[10,t.FALSE_SWIPE],[15,t.CUT],[20,t.AIR_CUTTER],[25,t.AERIAL_ACE],[30,t.DETECT],[35,t.NIGHT_SLASH],[40,t.SYNTHESIS],[45,t.LASER_FOCUS],[50,t.DEFOG],[55,t.LEAF_BLADE],[60,t.SACRED_SWORD],[65,t.SWORDS_DANCE],[70,t.GUILLOTINE]],[e.GUZZLORD]:[[1,t.BITE],[1,t.DRAGON_TAIL],[5,t.STOCKPILE],[5,t.SWALLOW],[10,t.KNOCK_OFF],[15,t.STOMP],[20,t.STOMPING_TANTRUM],[25,t.WIDE_GUARD],[30,t.CRUNCH],[35,t.BODY_SLAM],[40,t.GASTRO_ACID],[45,t.HAMMER_ARM],[50,t.HEAVY_SLAM],[55,t.DRAGON_RUSH],[60,t.BELCH],[65,t.THRASH],[70,t.GIGA_IMPACT]],[e.NECROZMA]:[[1,t.CONFUSION],[1,t.METAL_CLAW],[1,t.MORNING_SUN],[1,t.MOONLIGHT],[1,t.GRAVITY],[1,t.CHARGE_BEAM],[1,t.MIRROR_SHOT],[8,t.STEALTH_ROCK],[16,t.SLASH],[24,t.NIGHT_SLASH],[32,t.PSYCHO_CUT],[40,t.STORED_POWER],[48,t.ROCK_BLAST],[56,t.IRON_DEFENSE],[64,t.POWER_GEM],[72,t.PHOTON_GEYSER],[80,t.AUTOTOMIZE],[88,t.PRISMATIC_LASER]],[e.MAGEARNA]:[[1,t.HELPING_HAND],[1,t.GYRO_BALL],[1,t.DISARMING_VOICE],[1,t.CRAFTY_SHIELD],[1,t.GEAR_UP],[6,t.DEFENSE_CURL],[12,t.ROLLOUT],[18,t.IRON_DEFENSE],[24,t.MAGNETIC_FLUX],[30,t.PSYBEAM],[36,t.AURORA_BEAM],[42,t.LOCK_ON],[48,t.SHIFT_GEAR],[54,t.TRICK],[60,t.IRON_HEAD],[66,t.AURA_SPHERE],[72,t.FLASH_CANNON],[78,t.PAIN_SPLIT],[84,t.ZAP_CANNON],[90,t.FLEUR_CANNON]],[e.MARSHADOW]:[[1,t.FIRE_PUNCH],[1,t.ICE_PUNCH],[1,t.THUNDER_PUNCH],[1,t.COUNTER],[1,t.FEINT],[1,t.COPYCAT],[1,t.SHADOW_SNEAK],[1,t.PURSUIT],[9,t.ROLE_PLAY],[18,t.SHADOW_PUNCH],[27,t.FORCE_PALM],[36,t.ASSURANCE],[45,t.SUCKER_PUNCH],[54,t.DRAIN_PUNCH],[63,t.PSYCH_UP],[72,t.SPECTRAL_THIEF],[81,t.LASER_FOCUS],[90,t.ENDEAVOR],[99,t.CLOSE_COMBAT]],[e.POIPOLE]:[[w,t.DRAGON_PULSE],[1,t.GROWL],[1,t.ACID],[1,t.PECK],[1,t.HELPING_HAND],[7,t.FURY_ATTACK],[14,t.FELL_STINGER],[21,t.CHARM],[28,t.VENOSHOCK],[35,t.VENOM_DRENCH],[42,t.NASTY_PLOT],[49,t.POISON_JAB],[56,t.GASTRO_ACID],[63,t.TOXIC]],[e.NAGANADEL]:[[Z,t.AIR_CUTTER],[1,t.GROWL],[1,t.ACID],[1,t.PECK],[1,t.HELPING_HAND],[1,t.AIR_SLASH],[1,t.DRAGON_PULSE],[7,t.FURY_ATTACK],[14,t.FELL_STINGER],[21,t.CHARM],[28,t.VENOSHOCK],[35,t.VENOM_DRENCH],[42,t.NASTY_PLOT],[49,t.POISON_JAB],[56,t.GASTRO_ACID],[63,t.TOXIC],[70,t.DRAGON_RUSH]],[e.STAKATAKA]:[[1,t.TACKLE],[1,t.HARDEN],[5,t.ROCK_THROW],[10,t.PROTECT],[15,t.STOMP],[20,t.BLOCK],[25,t.ROCK_SLIDE],[30,t.WIDE_GUARD],[35,t.AUTOTOMIZE],[40,t.ROCK_BLAST],[45,t.MAGNET_RISE],[50,t.IRON_DEFENSE],[55,t.IRON_HEAD],[60,t.TAKE_DOWN],[65,t.STEALTH_ROCK],[70,t.DOUBLE_EDGE]],[e.BLACEPHALON]:[[1,t.FIRE_SPIN],[1,t.ASTONISH],[5,t.LIGHT_SCREEN],[10,t.EMBER],[15,t.NIGHT_SHADE],[20,t.CONFUSE_RAY],[25,t.MAGIC_COAT],[30,t.INCINERATE],[35,t.HYPNOSIS],[40,t.MYSTICAL_FIRE],[45,t.SHADOW_BALL],[50,t.CALM_MIND],[55,t.WILL_O_WISP],[60,t.TRICK],[65,t.FIRE_BLAST],[70,t.MIND_BLOWN]],[e.ZERAORA]:[[1,t.SCRATCH],[1,t.QUICK_ATTACK],[1,t.SPARK],[1,t.FAKE_OUT],[1,t.SNARL],[1,t.POWER_UP_PUNCH],[8,t.FURY_SWIPES],[16,t.QUICK_GUARD],[24,t.SLASH],[32,t.VOLT_SWITCH],[40,t.CHARGE],[48,t.THUNDER_PUNCH],[56,t.HONE_CLAWS],[64,t.DISCHARGE],[72,t.WILD_CHARGE],[80,t.AGILITY],[88,t.PLASMA_FISTS],[96,t.CLOSE_COMBAT]],[e.MELTAN]:[[1,t.THUNDER_SHOCK],[1,t.HARDEN],[8,t.TAIL_WHIP],[16,t.HEADBUTT],[24,t.THUNDER_WAVE],[32,t.ACID_ARMOR],[40,t.FLASH_CANNON]],[e.MELMETAL]:[[Z,t.THUNDER_PUNCH],[1,t.HEADBUTT],[1,t.TAIL_WHIP],[1,t.THUNDER_SHOCK],[1,t.HARDEN],[24,t.THUNDER_WAVE],[32,t.ACID_ARMOR],[40,t.FLASH_CANNON],[48,t.MEGA_PUNCH],[56,t.PROTECT],[64,t.DISCHARGE],[72,t.DYNAMIC_PUNCH],[80,t.SUPERPOWER],[88,t.DOUBLE_IRON_BASH],[96,t.HYPER_BEAM]],[e.GROOKEY]:[[1,t.SCRATCH],[1,t.GROWL],[5,t.BRANCH_POKE],[8,t.TAUNT],[12,t.RAZOR_LEAF],[17,t.SCREECH],[20,t.KNOCK_OFF],[24,t.SLAM],[28,t.UPROAR],[32,t.WOOD_HAMMER],[36,t.ENDEAVOR]],[e.THWACKEY]:[[Z,t.DOUBLE_HIT],[1,t.SCRATCH],[1,t.GROWL],[1,t.TAUNT],[1,t.BRANCH_POKE],[12,t.RAZOR_LEAF],[19,t.SCREECH],[24,t.KNOCK_OFF],[30,t.SLAM],[36,t.UPROAR],[42,t.WOOD_HAMMER],[48,t.ENDEAVOR]],[e.RILLABOOM]:[[Z,t.DRUM_BEATING],[1,t.SCRATCH],[1,t.GROWL],[1,t.TAUNT],[1,t.DOUBLE_HIT],[1,t.NOBLE_ROAR],[1,t.GRASSY_TERRAIN],[1,t.BRANCH_POKE],[12,t.RAZOR_LEAF],[19,t.SCREECH],[24,t.KNOCK_OFF],[30,t.SLAM],[38,t.UPROAR],[46,t.WOOD_HAMMER],[54,t.ENDEAVOR],[62,t.BOOMBURST]],[e.SCORBUNNY]:[[1,t.TACKLE],[1,t.GROWL],[5,t.EMBER],[8,t.QUICK_ATTACK],[12,t.DOUBLE_KICK],[17,t.FLAME_CHARGE],[20,t.AGILITY],[24,t.HEADBUTT],[28,t.COUNTER],[32,t.BOUNCE],[36,t.DOUBLE_EDGE]],[e.RABOOT]:[[1,t.TACKLE],[1,t.GROWL],[1,t.EMBER],[1,t.QUICK_ATTACK],[12,t.DOUBLE_KICK],[19,t.FLAME_CHARGE],[24,t.AGILITY],[30,t.HEADBUTT],[36,t.COUNTER],[42,t.BOUNCE],[48,t.DOUBLE_EDGE]],[e.CINDERACE]:[[Z,t.PYRO_BALL],[1,t.TACKLE],[1,t.GROWL],[1,t.EMBER],[1,t.QUICK_ATTACK],[1,t.FEINT],[12,t.DOUBLE_KICK],[19,t.FLAME_CHARGE],[24,t.AGILITY],[30,t.HEADBUTT],[38,t.COUNTER],[46,t.BOUNCE],[54,t.DOUBLE_EDGE],[62,t.COURT_CHANGE]],[e.SOBBLE]:[[1,t.POUND],[1,t.GROWL],[5,t.WATER_GUN],[8,t.BIND],[12,t.WATER_PULSE],[17,t.TEARFUL_LOOK],[20,t.SUCKER_PUNCH],[24,t.U_TURN],[28,t.LIQUIDATION],[32,t.SOAK],[36,t.RAIN_DANCE]],[e.DRIZZILE]:[[1,t.POUND],[1,t.BIND],[1,t.GROWL],[1,t.WATER_GUN],[12,t.WATER_PULSE],[19,t.TEARFUL_LOOK],[24,t.SUCKER_PUNCH],[30,t.U_TURN],[36,t.LIQUIDATION],[42,t.SOAK],[48,t.RAIN_DANCE]],[e.INTELEON]:[[Z,t.SNIPE_SHOT],[1,t.POUND],[1,t.BIND],[1,t.GROWL],[1,t.WATER_GUN],[1,t.ACROBATICS],[12,t.WATER_PULSE],[19,t.TEARFUL_LOOK],[24,t.SUCKER_PUNCH],[30,t.U_TURN],[38,t.LIQUIDATION],[46,t.SOAK],[54,t.RAIN_DANCE],[62,t.HYDRO_PUMP]],[e.SKWOVET]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[5,t.BITE],[10,t.STUFF_CHEEKS],[15,t.STOCKPILE],[15,t.SPIT_UP],[15,t.SWALLOW],[20,t.BODY_SLAM],[25,t.REST],[30,t.COUNTER],[35,t.BULLET_SEED],[40,t.SUPER_FANG],[45,t.BELCH]],[e.GREEDENT]:[[Z,t.COVET],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.BITE],[1,t.STUFF_CHEEKS],[15,t.STOCKPILE],[15,t.SPIT_UP],[15,t.SWALLOW],[20,t.BODY_SLAM],[27,t.REST],[34,t.COUNTER],[41,t.BULLET_SEED],[48,t.SUPER_FANG],[55,t.BELCH]],[e.ROOKIDEE]:[[1,t.LEER],[1,t.PECK],[4,t.POWER_TRIP],[8,t.HONE_CLAWS],[12,t.FURY_ATTACK],[16,t.PLUCK],[20,t.TAUNT],[24,t.SCARY_FACE],[28,t.DRILL_PECK],[32,t.SWAGGER],[36,t.BRAVE_BIRD]],[e.CORVISQUIRE]:[[1,t.LEER],[1,t.PECK],[1,t.HONE_CLAWS],[1,t.POWER_TRIP],[12,t.FURY_ATTACK],[16,t.PLUCK],[22,t.TAUNT],[28,t.SCARY_FACE],[34,t.DRILL_PECK],[40,t.SWAGGER],[46,t.BRAVE_BIRD]],[e.CORVIKNIGHT]:[[Z,t.STEEL_WING],[1,t.LEER],[1,t.PECK],[1,t.SCREECH],[1,t.METAL_SOUND],[1,t.IRON_DEFENSE],[1,t.HONE_CLAWS],[1,t.POWER_TRIP],[12,t.FURY_ATTACK],[16,t.PLUCK],[22,t.TAUNT],[28,t.SCARY_FACE],[34,t.DRILL_PECK],[42,t.SWAGGER],[50,t.BRAVE_BIRD]],[e.BLIPBUG]:[[1,t.STRUGGLE_BUG]],[e.DOTTLER]:[[Z,t.CONFUSION],[Z,t.LIGHT_SCREEN],[Z,t.REFLECT],[1,t.CONFUSION],[1,t.LIGHT_SCREEN],[1,t.REFLECT],[1,t.STRUGGLE_BUG]],[e.ORBEETLE]:[[1,t.CONFUSION],[1,t.LIGHT_SCREEN],[1,t.REFLECT],[1,t.STRUGGLE_BUG],[4,t.CONFUSE_RAY],[8,t.MAGIC_COAT],[12,t.AGILITY],[16,t.PSYBEAM],[20,t.HYPNOSIS],[24,t.ALLY_SWITCH],[28,t.BUG_BUZZ],[32,t.MIRROR_COAT],[36,t.PSYCHIC],[40,t.AFTER_YOU],[44,t.CALM_MIND],[48,t.PSYCHIC_TERRAIN]],[e.NICKIT]:[[1,t.TAIL_WHIP],[1,t.QUICK_ATTACK],[4,t.BEAT_UP],[8,t.HONE_CLAWS],[12,t.SNARL],[16,t.ASSURANCE],[20,t.NASTY_PLOT],[24,t.SUCKER_PUNCH],[28,t.NIGHT_SLASH],[32,t.TAIL_SLAP],[36,t.FOUL_PLAY]],[e.THIEVUL]:[[Z,t.THIEF],[1,t.TAIL_WHIP],[1,t.QUICK_ATTACK],[1,t.BEAT_UP],[1,t.HONE_CLAWS],[12,t.SNARL],[16,t.ASSURANCE],[22,t.NASTY_PLOT],[28,t.SUCKER_PUNCH],[34,t.NIGHT_SLASH],[40,t.TAIL_SLAP],[46,t.FOUL_PLAY],[52,t.PARTING_SHOT]],[e.GOSSIFLEUR]:[[1,t.SING],[1,t.LEAFAGE],[4,t.RAPID_SPIN],[8,t.SWEET_SCENT],[12,t.RAZOR_LEAF],[16,t.ROUND],[21,t.LEAF_TORNADO],[24,t.SYNTHESIS],[28,t.HYPER_VOICE],[32,t.AROMATHERAPY],[36,t.LEAF_STORM]],[e.ELDEGOSS]:[[Z,t.COTTON_SPORE],[1,t.SING],[1,t.RAPID_SPIN],[1,t.SWEET_SCENT],[1,t.LEAFAGE],[12,t.RAZOR_LEAF],[16,t.ROUND],[23,t.LEAF_TORNADO],[28,t.SYNTHESIS],[34,t.HYPER_VOICE],[40,t.AROMATHERAPY],[46,t.LEAF_STORM],[52,t.COTTON_GUARD]],[e.WOOLOO]:[[1,t.TACKLE],[1,t.GROWL],[4,t.DEFENSE_CURL],[8,t.COPYCAT],[12,t.GUARD_SPLIT],[16,t.DOUBLE_KICK],[21,t.HEADBUTT],[25,t.TAKE_DOWN],[28,t.GUARD_SWAP],[32,t.REVERSAL],[36,t.COTTON_GUARD],[40,t.DOUBLE_EDGE]],[e.DUBWOOL]:[[1,t.TACKLE],[1,t.GROWL],[1,t.DEFENSE_CURL],[1,t.COPYCAT],[12,t.GUARD_SPLIT],[16,t.DOUBLE_KICK],[21,t.HEADBUTT],[27,t.TAKE_DOWN],[32,t.GUARD_SWAP],[38,t.REVERSAL],[44,t.COTTON_GUARD],[50,t.DOUBLE_EDGE],[56,t.LAST_RESORT]],[e.CHEWTLE]:[[1,t.TACKLE],[1,t.WATER_GUN],[7,t.BITE],[14,t.PROTECT],[21,t.HEADBUTT],[28,t.COUNTER],[35,t.JAW_LOCK],[42,t.LIQUIDATION],[49,t.BODY_SLAM]],[e.DREDNAW]:[[Z,t.ROCK_TOMB],[1,t.TACKLE],[1,t.BITE],[1,t.WATER_GUN],[1,t.PROTECT],[1,t.CRUNCH],[1,t.ROCK_POLISH],[1,t.RAZOR_SHELL],[21,t.HEADBUTT],[30,t.COUNTER],[39,t.JAW_LOCK],[48,t.LIQUIDATION],[57,t.BODY_SLAM],[66,t.HEAD_SMASH]],[e.YAMPER]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[5,t.NUZZLE],[10,t.BITE],[15,t.ROAR],[20,t.SPARK],[26,t.CHARM],[30,t.CRUNCH],[35,t.CHARGE],[40,t.WILD_CHARGE],[45,t.PLAY_ROUGH]],[e.BOLTUND]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.BITE],[1,t.ELECTRIFY],[1,t.NUZZLE],[15,t.ROAR],[20,t.SPARK],[28,t.CHARM],[34,t.CRUNCH],[41,t.CHARGE],[48,t.WILD_CHARGE],[55,t.PLAY_ROUGH],[62,t.ELECTRIC_TERRAIN]],[e.ROLYCOLY]:[[1,t.TACKLE],[1,t.SMOKESCREEN],[5,t.RAPID_SPIN],[10,t.SMACK_DOWN],[15,t.ROCK_POLISH],[20,t.ANCIENT_POWER],[25,t.INCINERATE],[30,t.STEALTH_ROCK],[35,t.HEAT_CRASH],[40,t.ROCK_BLAST]],[e.CARKOL]:[[Z,t.FLAME_CHARGE],[1,t.TACKLE],[1,t.SMOKESCREEN],[1,t.RAPID_SPIN],[1,t.SMACK_DOWN],[15,t.ROCK_POLISH],[20,t.ANCIENT_POWER],[27,t.INCINERATE],[35,t.STEALTH_ROCK],[41,t.HEAT_CRASH],[48,t.ROCK_BLAST],[55,t.STONE_EDGE]],[e.COALOSSAL]:[[Z,t.TAR_SHOT],[1,t.TACKLE],[1,t.SMOKESCREEN],[1,t.RAPID_SPIN],[1,t.SMACK_DOWN],[1,t.FLAME_CHARGE],[15,t.ROCK_POLISH],[20,t.ANCIENT_POWER],[27,t.INCINERATE],[37,t.STEALTH_ROCK],[45,t.HEAT_CRASH],[54,t.ROCK_BLAST],[63,t.STONE_EDGE]],[e.APPLIN]:[[1,t.WITHDRAW],[1,t.ASTONISH],[1,t.LEAFAGE]],[e.FLAPPLE]:[[Z,t.WING_ATTACK],[1,t.LEAFAGE],[1,t.GROWTH],[1,t.WITHDRAW],[1,t.TWISTER],[1,t.RECYCLE],[1,t.ASTONISH],[4,t.ACID_SPRAY],[8,t.ACROBATICS],[12,t.LEECH_SEED],[16,t.PROTECT],[20,t.DRAGON_BREATH],[24,t.DRAGON_DANCE],[28,t.DRAGON_PULSE],[32,t.GRAV_APPLE],[36,t.IRON_DEFENSE],[40,t.FLY],[44,t.DRAGON_RUSH]],[e.APPLETUN]:[[Z,t.HEADBUTT],[1,t.LEAFAGE],[1,t.GROWTH],[1,t.WITHDRAW],[1,t.SWEET_SCENT],[1,t.RECYCLE],[1,t.ASTONISH],[4,t.CURSE],[8,t.STOMP],[12,t.LEECH_SEED],[16,t.PROTECT],[20,t.BULLET_SEED],[24,t.RECOVER],[28,t.APPLE_ACID],[32,t.BODY_SLAM],[36,t.IRON_DEFENSE],[40,t.DRAGON_PULSE],[44,t.ENERGY_BALL]],[e.SILICOBRA]:[[1,t.SAND_ATTACK],[1,t.WRAP],[1,t.MUD_SLAP],[5,t.MINIMIZE],[10,t.BRUTAL_SWING],[15,t.BULLDOZE],[20,t.HEADBUTT],[25,t.GLARE],[30,t.DIG],[35,t.SANDSTORM],[40,t.SLAM],[45,t.COIL],[50,t.SAND_TOMB]],[e.SANDACONDA]:[[1,t.SAND_ATTACK],[1,t.WRAP],[1,t.MUD_SLAP],[1,t.MINIMIZE],[1,t.BRUTAL_SWING],[15,t.BULLDOZE],[20,t.HEADBUTT],[25,t.GLARE],[30,t.DIG],[35,t.SANDSTORM],[42,t.SLAM],[49,t.COIL],[51,t.SAND_TOMB]],[e.CRAMORANT]:[[w,t.BELCH],[1,t.PECK],[1,t.STOCKPILE],[1,t.SPIT_UP],[1,t.SWALLOW],[7,t.WATER_GUN],[14,t.FURY_ATTACK],[21,t.PLUCK],[28,t.DIVE],[35,t.DRILL_PECK],[42,t.AMNESIA],[49,t.THRASH],[56,t.HYDRO_PUMP]],[e.ARROKUDA]:[[1,t.PECK],[1,t.AQUA_JET],[6,t.FURY_ATTACK],[12,t.BITE],[18,t.AGILITY],[24,t.DIVE],[30,t.FOCUS_ENERGY],[36,t.CRUNCH],[42,t.LIQUIDATION],[48,t.DOUBLE_EDGE]],[e.BARRASKEWDA]:[[1,t.FURY_ATTACK],[1,t.BITE],[1,t.PECK],[1,t.AQUA_JET],[1,t.THROAT_CHOP],[18,t.AGILITY],[24,t.DIVE],[32,t.FOCUS_ENERGY],[40,t.CRUNCH],[48,t.LIQUIDATION],[56,t.DOUBLE_EDGE]],[e.TOXEL]:[[1,t.GROWL],[1,t.ACID],[1,t.FLAIL],[1,t.BELCH],[1,t.NUZZLE],[1,t.TEARFUL_LOOK]],[e.TOXTRICITY]:[[Z,t.SPARK],[1,t.LEER],[1,t.GROWL],[1,t.ACID],[1,t.THUNDER_SHOCK],[1,t.FLAIL],[1,t.ACID_SPRAY],[1,t.BELCH],[1,t.NOBLE_ROAR],[1,t.NUZZLE],[1,t.TEARFUL_LOOK],[4,t.CHARGE],[8,t.SHOCK_WAVE],[12,t.SCARY_FACE],[16,t.TAUNT],[24,t.SCREECH],[28,t.SWAGGER],[32,t.TOXIC],[36,t.DISCHARGE],[40,t.POISON_JAB],[44,t.OVERDRIVE],[48,t.BOOMBURST],[52,t.SHIFT_GEAR]],[e.SIZZLIPEDE]:[[1,t.EMBER],[1,t.SMOKESCREEN],[5,t.WRAP],[10,t.BITE],[15,t.FLAME_WHEEL],[20,t.BUG_BITE],[25,t.COIL],[30,t.SLAM],[35,t.FIRE_SPIN],[40,t.CRUNCH],[45,t.FIRE_LASH],[50,t.LUNGE],[55,t.BURN_UP]],[e.CENTISKORCH]:[[1,t.WRAP],[1,t.BITE],[1,t.EMBER],[1,t.SMOKESCREEN],[1,t.INFERNO],[15,t.FLAME_WHEEL],[20,t.BUG_BITE],[25,t.COIL],[32,t.SLAM],[39,t.FIRE_SPIN],[46,t.CRUNCH],[53,t.FIRE_LASH],[60,t.LUNGE],[67,t.BURN_UP]],[e.CLOBBOPUS]:[[1,t.LEER],[1,t.ROCK_SMASH],[5,t.FEINT],[10,t.BIND],[15,t.DETECT],[20,t.BRICK_BREAK],[25,t.BULK_UP],[30,t.SUBMISSION],[35,t.TAUNT],[40,t.REVERSAL],[45,t.SUPERPOWER]],[e.GRAPPLOCT]:[[Z,t.OCTOLOCK],[1,t.BIND],[1,t.LEER],[1,t.OCTAZOOKA],[1,t.ROCK_SMASH],[1,t.FEINT],[15,t.DETECT],[20,t.BRICK_BREAK],[25,t.BULK_UP],[30,t.SUBMISSION],[35,t.TAUNT],[40,t.REVERSAL],[45,t.SUPERPOWER],[50,t.TOPSY_TURVY]],[e.SINISTEA]:[[1,t.WITHDRAW],[1,t.ASTONISH],[1,t.ABSORB],[6,t.AROMATIC_MIST],[12,t.MEGA_DRAIN],[24,t.SUCKER_PUNCH],[30,t.SWEET_SCENT],[36,t.GIGA_DRAIN],[42,t.NASTY_PLOT],[48,t.SHADOW_BALL],[54,t.MEMENTO],[60,t.SHELL_SMASH]],[e.POLTEAGEIST]:[[Z,t.TEATIME],[1,t.ABSORB],[1,t.MEGA_DRAIN],[1,t.WITHDRAW],[1,t.ASTONISH],[1,t.AROMATIC_MIST],[1,t.STRENGTH_SAP],[18,t.PROTECT],[24,t.SUCKER_PUNCH],[30,t.SWEET_SCENT],[36,t.GIGA_DRAIN],[42,t.NASTY_PLOT],[48,t.SHADOW_BALL],[54,t.MEMENTO],[60,t.SHELL_SMASH],[66,t.CURSE]],[e.HATENNA]:[[1,t.CONFUSION],[1,t.PLAY_NICE],[5,t.LIFE_DEW],[10,t.DISARMING_VOICE],[15,t.AROMATIC_MIST],[20,t.PSYBEAM],[25,t.HEAL_PULSE],[30,t.DAZZLING_GLEAM],[35,t.CALM_MIND],[40,t.PSYCHIC],[45,t.HEALING_WISH]],[e.HATTREM]:[[Z,t.BRUTAL_SWING],[1,t.CONFUSION],[1,t.DISARMING_VOICE],[1,t.PLAY_NICE],[1,t.LIFE_DEW],[15,t.AROMATIC_MIST],[20,t.PSYBEAM],[25,t.HEAL_PULSE],[30,t.DAZZLING_GLEAM],[37,t.CALM_MIND],[44,t.PSYCHIC],[51,t.HEALING_WISH]],[e.HATTERENE]:[[Z,t.PSYCHO_CUT],[1,t.CONFUSION],[1,t.DISARMING_VOICE],[1,t.PLAY_NICE],[1,t.BRUTAL_SWING],[1,t.LIFE_DEW],[15,t.AROMATIC_MIST],[20,t.PSYBEAM],[25,t.HEAL_PULSE],[30,t.DAZZLING_GLEAM],[37,t.CALM_MIND],[46,t.PSYCHIC],[55,t.HEALING_WISH],[64,t.MAGIC_POWDER]],[e.IMPIDIMP]:[[1,t.FAKE_OUT],[1,t.CONFIDE],[4,t.BITE],[8,t.FLATTER],[12,t.FAKE_TEARS],[16,t.ASSURANCE],[20,t.SWAGGER],[24,t.SUCKER_PUNCH],[28,t.TORMENT],[33,t.DARK_PULSE],[36,t.NASTY_PLOT],[40,t.PLAY_ROUGH],[44,t.FOUL_PLAY]],[e.MORGREM]:[[Z,t.FALSE_SURRENDER],[1,t.BITE],[1,t.FAKE_OUT],[1,t.FLATTER],[1,t.CONFIDE],[12,t.FAKE_TEARS],[16,t.ASSURANCE],[20,t.SWAGGER],[24,t.SUCKER_PUNCH],[28,t.TORMENT],[35,t.DARK_PULSE],[40,t.NASTY_PLOT],[46,t.PLAY_ROUGH],[52,t.FOUL_PLAY]],[e.GRIMMSNARL]:[[Z,t.SPIRIT_BREAK],[1,t.BITE],[1,t.FAKE_OUT],[1,t.FLATTER],[1,t.BULK_UP],[1,t.CONFIDE],[1,t.FALSE_SURRENDER],[12,t.FAKE_TEARS],[16,t.ASSURANCE],[20,t.SWAGGER],[24,t.SUCKER_PUNCH],[28,t.TORMENT],[35,t.DARK_PULSE],[40,t.NASTY_PLOT],[48,t.PLAY_ROUGH],[56,t.FOUL_PLAY],[64,t.HAMMER_ARM]],[e.OBSTAGOON]:[[Z,t.OBSTRUCT],[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.PIN_MISSILE],[1,t.LEER],[1,t.SUBMISSION],[1,t.LICK],[1,t.CROSS_CHOP],[1,t.NIGHT_SLASH],[1,t.SWITCHEROO],[1,t.BABY_DOLL_EYES],[9,t.SNARL],[12,t.HEADBUTT],[15,t.HONE_CLAWS],[18,t.FURY_SWIPES],[23,t.REST],[28,t.TAKE_DOWN],[35,t.SCARY_FACE],[42,t.COUNTER],[49,t.TAUNT],[56,t.DOUBLE_EDGE]],[e.PERRSERKER]:[[Z,t.IRON_HEAD],[1,t.SCRATCH],[1,t.GROWL],[1,t.FAKE_OUT],[1,t.IRON_DEFENSE],[1,t.METAL_BURST],[1,t.HONE_CLAWS],[12,t.PAY_DAY],[16,t.METAL_CLAW],[20,t.TAUNT],[24,t.SWAGGER],[31,t.FURY_SWIPES],[36,t.SCREECH],[42,t.SLASH],[48,t.METAL_SOUND],[54,t.THRASH]],[e.CURSOLA]:[[1,t.TACKLE],[1,t.DISABLE],[1,t.HARDEN],[1,t.PERISH_SONG],[1,t.ASTONISH],[15,t.SPITE],[20,t.ANCIENT_POWER],[25,t.HEX],[30,t.CURSE],[35,t.STRENGTH_SAP],[40,t.POWER_GEM],[45,t.NIGHT_SHADE],[50,t.GRUDGE],[55,t.MIRROR_COAT]],[e.SIRFETCHD]:[[Z,t.IRON_DEFENSE],[1,t.SAND_ATTACK],[1,t.LEER],[1,t.PECK],[1,t.FURY_CUTTER],[1,t.FIRST_IMPRESSION],[15,t.ROCK_SMASH],[20,t.BRUTAL_SWING],[25,t.DETECT],[30,t.KNOCK_OFF],[35,t.DEFOG],[40,t.BRICK_BREAK],[45,t.SWORDS_DANCE],[50,t.SLAM],[55,t.LEAF_BLADE],[60,t.FINAL_GAMBIT],[65,t.BRAVE_BIRD],[70,t.METEOR_ASSAULT]],[e.MR_RIME]:[[1,t.POUND],[1,t.BARRIER],[1,t.TICKLE],[1,t.MIMIC],[1,t.LIGHT_SCREEN],[1,t.REFLECT],[1,t.PROTECT],[1,t.SAFEGUARD],[1,t.BATON_PASS],[1,t.ENCORE],[1,t.RAPID_SPIN],[1,t.ROLE_PLAY],[1,t.RECYCLE],[1,t.SLACK_OFF],[1,t.FAKE_TEARS],[1,t.BLOCK],[1,t.COPYCAT],[1,t.ICE_SHARD],[1,t.AFTER_YOU],[1,t.MISTY_TERRAIN],[1,t.DAZZLING_GLEAM],[12,t.CONFUSION],[16,t.ALLY_SWITCH],[20,t.ICY_WIND],[24,t.DOUBLE_KICK],[28,t.PSYBEAM],[32,t.HYPNOSIS],[36,t.MIRROR_COAT],[40,t.SUCKER_PUNCH],[44,t.FREEZE_DRY],[48,t.PSYCHIC],[52,t.TEETER_DANCE]],[e.RUNERIGUS]:[[Z,t.SHADOW_CLAW],[1,t.NIGHT_SHADE],[1,t.HAZE],[1,t.PROTECT],[1,t.SCARY_FACE],[1,t.ASTONISH],[12,t.DISABLE],[16,t.BRUTAL_SWING],[20,t.CRAFTY_SHIELD],[24,t.HEX],[28,t.MEAN_LOOK],[32,t.SLAM],[38,t.CURSE],[44,t.SHADOW_BALL],[50,t.EARTHQUAKE],[56,t.GUARD_SPLIT],[56,t.POWER_SPLIT],[62,t.DESTINY_BOND]],[e.MILCERY]:[[1,t.TACKLE],[1,t.AROMATIC_MIST],[5,t.SWEET_KISS],[10,t.SWEET_SCENT],[15,t.DRAINING_KISS],[20,t.AROMATHERAPY],[25,t.ATTRACT],[30,t.ACID_ARMOR],[35,t.DAZZLING_GLEAM],[40,t.RECOVER],[45,t.MISTY_TERRAIN],[50,t.ENTRAINMENT]],[e.ALCREMIE]:[[Z,t.DECORATE],[1,t.TACKLE],[1,t.SWEET_KISS],[1,t.SWEET_SCENT],[1,t.AROMATIC_MIST],[15,t.DRAINING_KISS],[20,t.AROMATHERAPY],[25,t.ATTRACT],[30,t.ACID_ARMOR],[35,t.DAZZLING_GLEAM],[40,t.RECOVER],[45,t.MISTY_TERRAIN],[50,t.ENTRAINMENT]],[e.FALINKS]:[[1,t.TACKLE],[1,t.PROTECT],[5,t.ROCK_SMASH],[10,t.FOCUS_ENERGY],[15,t.HEADBUTT],[20,t.BULK_UP],[25,t.ENDURE],[30,t.REVERSAL],[35,t.FIRST_IMPRESSION],[40,t.NO_RETREAT],[45,t.IRON_DEFENSE],[50,t.CLOSE_COMBAT],[55,t.MEGAHORN],[60,t.COUNTER]],[e.PINCURCHIN]:[[1,t.PECK],[1,t.THUNDER_SHOCK],[5,t.WATER_GUN],[10,t.CHARGE],[15,t.FURY_ATTACK],[20,t.SPARK],[25,t.BUBBLE_BEAM],[30,t.RECOVER],[35,t.CURSE],[40,t.ELECTRIC_TERRAIN],[45,t.POISON_JAB],[50,t.ZING_ZAP],[55,t.ACUPRESSURE],[60,t.DISCHARGE]],[e.SNOM]:[[1,t.POWDER_SNOW],[1,t.STRUGGLE_BUG]],[e.FROSMOTH]:[[Z,t.ICY_WIND],[1,t.POWDER_SNOW],[1,t.ATTRACT],[1,t.HELPING_HAND],[1,t.STRUGGLE_BUG],[4,t.STUN_SPORE],[8,t.INFESTATION],[12,t.MIST],[16,t.DEFOG],[21,t.FEATHER_DANCE],[24,t.AURORA_BEAM],[28,t.SNOWSCAPE],[32,t.BUG_BUZZ],[36,t.AURORA_VEIL],[40,t.BLIZZARD],[44,t.TAILWIND],[48,t.WIDE_GUARD],[52,t.QUIVER_DANCE]],[e.STONJOURNER]:[[1,t.ROCK_THROW],[1,t.BLOCK],[6,t.ROCK_POLISH],[12,t.ROCK_TOMB],[18,t.GRAVITY],[24,t.STOMP],[30,t.STEALTH_ROCK],[36,t.ROCK_SLIDE],[42,t.BODY_SLAM],[48,t.WIDE_GUARD],[54,t.HEAVY_SLAM],[60,t.STONE_EDGE],[66,t.MEGA_KICK]],[e.EISCUE]:[[1,t.TACKLE],[1,t.POWDER_SNOW],[6,t.MIST],[12,t.WEATHER_BALL],[18,t.ICY_WIND],[24,t.HEADBUTT],[30,t.AMNESIA],[36,t.FREEZE_DRY],[42,t.SNOWSCAPE],[48,t.AURORA_VEIL],[54,t.SURF],[60,t.BLIZZARD]],[e.INDEEDEE]:[[1,t.STORED_POWER],[1,t.PLAY_NICE],[5,t.ENCORE],[10,t.DISARMING_VOICE],[15,t.PSYBEAM],[20,t.HELPING_HAND],[25,t.AFTER_YOU],[30,t.HEALING_WISH],[35,t.PSYCHIC],[40,t.CALM_MIND],[45,t.POWER_SPLIT],[50,t.PSYCHIC_TERRAIN],[55,t.LAST_RESORT]],[e.MORPEKO]:[[1,t.TAIL_WHIP],[1,t.THUNDER_SHOCK],[5,t.LEER],[10,t.POWER_TRIP],[15,t.QUICK_ATTACK],[20,t.FLATTER],[25,t.BITE],[30,t.SPARK],[35,t.TORMENT],[40,t.AGILITY],[45,t.BULLET_SEED],[50,t.CRUNCH],[55,t.AURA_WHEEL],[60,t.THRASH]],[e.CUFANT]:[[1,t.TACKLE],[1,t.GROWL],[5,t.ROLLOUT],[10,t.ROCK_SMASH],[15,t.BULLDOZE],[20,t.STOMP],[25,t.IRON_DEFENSE],[30,t.DIG],[35,t.STRENGTH],[40,t.IRON_HEAD],[45,t.PLAY_ROUGH],[50,t.HIGH_HORSEPOWER],[55,t.SUPERPOWER]],[e.COPPERAJAH]:[[Z,t.HEAVY_SLAM],[1,t.TACKLE],[1,t.GROWL],[1,t.ROLLOUT],[1,t.ROCK_SMASH],[15,t.BULLDOZE],[20,t.STOMP],[25,t.IRON_DEFENSE],[30,t.DIG],[37,t.STRENGTH],[44,t.IRON_HEAD],[51,t.PLAY_ROUGH],[58,t.HIGH_HORSEPOWER],[65,t.SUPERPOWER]],[e.DRACOZOLT]:[[1,t.TACKLE],[1,t.THUNDER_SHOCK],[7,t.CHARGE],[14,t.AERIAL_ACE],[21,t.ANCIENT_POWER],[28,t.PLUCK],[35,t.DRAGON_TAIL],[42,t.STOMP],[49,t.SLAM],[56,t.DISCHARGE],[63,t.BOLT_BEAK],[70,t.DRAGON_PULSE],[77,t.DRAGON_RUSH]],[e.ARCTOZOLT]:[[1,t.THUNDER_SHOCK],[1,t.POWDER_SNOW],[7,t.CHARGE],[14,t.ECHOED_VOICE],[21,t.ANCIENT_POWER],[28,t.PLUCK],[35,t.AVALANCHE],[42,t.FREEZE_DRY],[49,t.SLAM],[56,t.DISCHARGE],[63,t.BOLT_BEAK],[70,t.ICICLE_CRASH],[77,t.BLIZZARD]],[e.DRACOVISH]:[[1,t.TACKLE],[1,t.WATER_GUN],[7,t.PROTECT],[14,t.BRUTAL_SWING],[21,t.ANCIENT_POWER],[28,t.BITE],[35,t.DRAGON_BREATH],[42,t.STOMP],[49,t.SUPER_FANG],[56,t.CRUNCH],[63,t.FISHIOUS_REND],[70,t.DRAGON_PULSE],[77,t.DRAGON_RUSH]],[e.ARCTOVISH]:[[1,t.WATER_GUN],[1,t.POWDER_SNOW],[7,t.PROTECT],[14,t.ICY_WIND],[21,t.ANCIENT_POWER],[28,t.BITE],[35,t.AURORA_VEIL],[42,t.FREEZE_DRY],[49,t.SUPER_FANG],[56,t.CRUNCH],[63,t.FISHIOUS_REND],[70,t.ICICLE_CRASH],[77,t.BLIZZARD]],[e.DURALUDON]:[[1,t.LEER],[1,t.METAL_CLAW],[6,t.ROCK_SMASH],[12,t.HONE_CLAWS],[18,t.METAL_SOUND],[24,t.BREAKING_SWIPE],[30,t.DRAGON_TAIL],[36,t.IRON_DEFENSE],[42,t.LASER_FOCUS],[48,t.DRAGON_CLAW],[54,t.FLASH_CANNON],[60,t.METAL_BURST],[66,t.HYPER_BEAM]],[e.DREEPY]:[[1,t.BITE],[1,t.QUICK_ATTACK],[1,t.ASTONISH],[1,t.INFESTATION]],[e.DRAKLOAK]:[[Z,t.DRAGON_PULSE],[1,t.BITE],[1,t.QUICK_ATTACK],[1,t.ASTONISH],[1,t.INFESTATION],[6,t.LOCK_ON],[12,t.ASSURANCE],[18,t.HEX],[24,t.AGILITY],[30,t.DOUBLE_HIT],[36,t.U_TURN],[42,t.DRAGON_DANCE],[48,t.PHANTOM_FORCE],[54,t.TAKE_DOWN],[61,t.DRAGON_RUSH],[66,t.DOUBLE_EDGE],[72,t.LAST_RESORT]],[e.DRAGAPULT]:[[Z,t.DRAGON_DARTS],[w,t.DRAGON_PULSE],[1,t.BITE],[1,t.QUICK_ATTACK],[1,t.DRAGON_BREATH],[1,t.ASTONISH],[1,t.INFESTATION],[6,t.LOCK_ON],[12,t.ASSURANCE],[18,t.HEX],[24,t.AGILITY],[30,t.DOUBLE_HIT],[36,t.U_TURN],[42,t.DRAGON_DANCE],[48,t.PHANTOM_FORCE],[54,t.TAKE_DOWN],[63,t.DRAGON_RUSH],[70,t.DOUBLE_EDGE],[78,t.LAST_RESORT]],[e.ZACIAN]:[[1,t.BITE],[1,t.QUICK_ATTACK],[1,t.METAL_CLAW],[1,t.HOWL],[1,t.QUICK_GUARD],[1,t.SACRED_SWORD],[11,t.SLASH],[22,t.SWORDS_DANCE],[33,t.IRON_HEAD],[44,t.NOBLE_ROAR],[55,t.CRUNCH],[66,t.MOONBLAST],[77,t.CLOSE_COMBAT],[88,t.GIGA_IMPACT]],[e.ZAMAZENTA]:[[1,t.BITE],[1,t.QUICK_ATTACK],[1,t.METAL_CLAW],[1,t.HOWL],[1,t.WIDE_GUARD],[11,t.SLASH],[22,t.IRON_DEFENSE],[33,t.IRON_HEAD],[44,t.METAL_BURST],[55,t.CRUNCH],[66,t.MOONBLAST],[77,t.CLOSE_COMBAT],[88,t.GIGA_IMPACT]],[e.ETERNATUS]:[[1,t.AGILITY],[1,t.CONFUSE_RAY],[1,t.POISON_TAIL],[1,t.DRAGON_TAIL],[8,t.TOXIC],[16,t.VENOSHOCK],[24,t.DRAGON_DANCE],[32,t.CROSS_POISON],[40,t.DRAGON_PULSE],[48,t.FLAMETHROWER],[56,t.DYNAMAX_CANNON],[64,t.COSMIC_POWER],[72,t.RECOVER],[80,t.HYPER_BEAM],[88,t.OUTRAGE]],[e.KUBFU]:[[1,t.LEER],[1,t.ROCK_SMASH],[4,t.ENDURE],[8,t.FOCUS_ENERGY],[12,t.AERIAL_ACE],[16,t.SCARY_FACE],[20,t.HEADBUTT],[24,t.BRICK_BREAK],[28,t.DETECT],[32,t.BULK_UP],[36,t.IRON_HEAD],[40,t.DYNAMIC_PUNCH],[44,t.COUNTER],[48,t.CLOSE_COMBAT],[52,t.FOCUS_PUNCH]],[e.URSHIFU]:[[Z,t.WICKED_BLOW],[1,t.LEER],[1,t.FOCUS_ENERGY],[1,t.ENDURE],[1,t.ROCK_SMASH],[1,t.SUCKER_PUNCH],[12,t.AERIAL_ACE],[16,t.SCARY_FACE],[20,t.HEADBUTT],[24,t.BRICK_BREAK],[28,t.DETECT],[32,t.BULK_UP],[36,t.IRON_HEAD],[40,t.DYNAMIC_PUNCH],[44,t.COUNTER],[48,t.CLOSE_COMBAT],[52,t.FOCUS_PUNCH]],[e.ZARUDE]:[[1,t.SCRATCH],[1,t.BIND],[6,t.LEER],[12,t.VINE_WHIP],[18,t.GROWTH],[24,t.FURY_SWIPES],[30,t.SCARY_FACE],[36,t.GRASS_KNOT],[42,t.BITE],[48,t.U_TURN],[54,t.SWAGGER],[60,t.ENERGY_BALL],[66,t.SYNTHESIS],[72,t.HAMMER_ARM],[78,t.THRASH],[84,t.POWER_WHIP],[90,t.JUNGLE_HEALING]],[e.REGIELEKI]:[[1,t.THUNDER_SHOCK],[1,t.RAPID_SPIN],[6,t.ELECTROWEB],[12,t.ANCIENT_POWER],[18,t.SHOCK_WAVE],[24,t.THUNDER_WAVE],[30,t.EXTREME_SPEED],[36,t.THUNDER_CAGE],[42,t.THUNDERBOLT],[48,t.MAGNET_RISE],[54,t.THRASH],[60,t.LOCK_ON],[66,t.ZAP_CANNON],[72,t.HYPER_BEAM],[78,t.EXPLOSION]],[e.REGIDRAGO]:[[1,t.TWISTER],[6,t.BITE],[12,t.ANCIENT_POWER],[18,t.DRAGON_BREATH],[30,t.CRUNCH],[36,t.DRAGON_CLAW],[42,t.HAMMER_ARM],[48,t.DRAGON_DANCE],[54,t.THRASH],[60,t.FOCUS_ENERGY],[66,t.DRAGON_ENERGY],[72,t.HYPER_BEAM],[78,t.EXPLOSION]],[e.GLASTRIER]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[6,t.DOUBLE_KICK],[12,t.AVALANCHE],[18,t.STOMP],[24,t.TORMENT],[30,t.MIST],[36,t.ICICLE_CRASH],[42,t.TAKE_DOWN],[48,t.IRON_DEFENSE],[54,t.THRASH],[60,t.TAUNT],[66,t.DOUBLE_EDGE],[72,t.SWORDS_DANCE]],[e.SPECTRIER]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[6,t.DOUBLE_KICK],[12,t.HEX],[18,t.STOMP],[24,t.CONFUSE_RAY],[30,t.HAZE],[36,t.SHADOW_BALL],[42,t.TAKE_DOWN],[48,t.AGILITY],[54,t.THRASH],[60,t.DISABLE],[66,t.DOUBLE_EDGE],[72,t.NASTY_PLOT]],[e.CALYREX]:[[1,t.POUND],[1,t.MEGA_DRAIN],[1,t.GROWTH],[1,t.CONFUSION],[8,t.LIFE_DEW],[16,t.GIGA_DRAIN],[24,t.PSYSHOCK],[32,t.HELPING_HAND],[40,t.GRASSY_TERRAIN],[40,t.PSYCHIC_TERRAIN],[48,t.ENERGY_BALL],[56,t.PSYCHIC],[64,t.LEECH_SEED],[72,t.HEAL_PULSE],[80,t.SOLAR_BEAM],[88,t.FUTURE_SIGHT]],[e.WYRDEER]:[[Z,t.PSYSHIELD_BASH],[1,t.TACKLE],[1,t.ME_FIRST],[3,t.LEER],[7,t.ASTONISH],[10,t.HYPNOSIS],[13,t.STOMP],[16,t.SAND_ATTACK],[21,t.TAKE_DOWN],[23,t.CONFUSE_RAY],[27,t.CALM_MIND],[32,t.ROLE_PLAY],[37,t.ZEN_HEADBUTT],[49,t.IMPRISON],[55,t.DOUBLE_EDGE],[62,t.MEGAHORN]],[e.KLEAVOR]:[[Z,t.STONE_AXE],[1,t.WING_ATTACK],[1,t.AIR_SLASH],[1,t.LEER],[1,t.QUICK_ATTACK],[4,t.FURY_CUTTER],[8,t.FALSE_SWIPE],[12,t.SMACK_DOWN],[16,t.DOUBLE_TEAM],[20,t.DOUBLE_HIT],[24,t.SLASH],[28,t.FOCUS_ENERGY],[30,t.STEEL_WING],[32,t.AGILITY],[36,t.ROCK_SLIDE],[40,t.X_SCISSOR],[44,t.SWORDS_DANCE]],[e.URSALUNA]:[[Z,t.HEADLONG_RUSH],[1,t.SCRATCH],[1,t.LEER],[1,t.LICK],[1,t.COVET],[1,t.FLING],[1,t.BABY_DOLL_EYES],[1,t.FAKE_TEARS],[1,t.CHARM],[8,t.FURY_SWIPES],[13,t.PAYBACK],[17,t.SWEET_SCENT],[22,t.SLASH],[25,t.PLAY_NICE],[29,t.PLAY_ROUGH],[35,t.SCARY_FACE],[41,t.REST],[41,t.SNORE],[48,t.HIGH_HORSEPOWER],[56,t.THRASH],[64,t.HAMMER_ARM]],[e.BASCULEGION]:[[w,t.FINAL_GAMBIT],[1,t.TAIL_WHIP],[1,t.WATER_GUN],[1,t.SHADOW_BALL],[1,t.PHANTOM_FORCE],[4,t.TACKLE],[8,t.FLAIL],[12,t.AQUA_JET],[16,t.BITE],[20,t.SCARY_FACE],[24,t.HEADBUTT],[28,t.SOAK],[32,t.CRUNCH],[36,t.TAKE_DOWN],[40,t.UPROAR],[44,t.WAVE_CRASH],[48,t.THRASH],[52,t.DOUBLE_EDGE],[56,t.HEAD_SMASH]],[e.SNEASLER]:[[Z,t.DIRE_CLAW],[1,t.SCRATCH],[1,t.LEER],[1,t.ROCK_SMASH],[1,t.FLING],[6,t.TAUNT],[12,t.QUICK_ATTACK],[18,t.METAL_CLAW],[24,t.POISON_JAB],[30,t.BRICK_BREAK],[36,t.HONE_CLAWS],[42,t.SLASH],[48,t.AGILITY],[54,t.SCREECH],[60,t.CLOSE_COMBAT]],[e.OVERQWIL]:[[1,t.TACKLE],[1,t.POISON_STING],[4,t.HARDEN],[8,t.BITE],[12,t.FELL_STINGER],[16,t.MINIMIZE],[20,t.SPIKES],[24,t.BRINE],[28,t.BARB_BARRAGE],[32,t.PIN_MISSILE],[36,t.TOXIC_SPIKES],[40,t.STOCKPILE],[40,t.SPIT_UP],[44,t.TOXIC],[48,t.CRUNCH],[52,t.ACUPRESSURE],[56,t.DESTINY_BOND]],[e.ENAMORUS]:[[1,t.ASTONISH],[1,t.FAIRY_WIND],[5,t.TORMENT],[10,t.FLATTER],[15,t.TWISTER],[20,t.DRAINING_KISS],[25,t.IRON_DEFENSE],[30,t.IMPRISON],[35,t.MYSTICAL_FIRE],[40,t.DAZZLING_GLEAM],[45,t.EXTRASENSORY],[50,t.UPROAR],[55,t.SUPERPOWER],[60,t.HEALING_WISH],[65,t.MOONBLAST],[70,t.OUTRAGE],[75,t.SPRINGTIDE_STORM]],[e.SPRIGATITO]:[[1,t.SCRATCH],[1,t.TAIL_WHIP],[1,t.LEAFAGE],[7,t.BITE],[10,t.HONE_CLAWS],[13,t.MAGICAL_LEAF],[15,t.QUICK_ATTACK],[17,t.SEED_BOMB],[21,t.U_TURN],[25,t.WORRY_SEED],[28,t.SLASH],[32,t.ENERGY_BALL],[36,t.PLAY_ROUGH]],[e.FLORAGATO]:[[1,t.SCRATCH],[1,t.TAIL_WHIP],[1,t.LEAFAGE],[7,t.BITE],[10,t.HONE_CLAWS],[13,t.MAGICAL_LEAF],[15,t.QUICK_ATTACK],[20,t.SEED_BOMB],[24,t.U_TURN],[28,t.WORRY_SEED],[33,t.SLASH],[38,t.ENERGY_BALL],[42,t.PLAY_ROUGH],[46,t.LEAF_STORM]],[e.MEOWSCARADA]:[[Z,t.FLOWER_TRICK],[w,t.DOUBLE_TEAM],[w,t.TRICK],[1,t.SCRATCH],[1,t.TAIL_WHIP],[1,t.LEAFAGE],[7,t.BITE],[10,t.HONE_CLAWS],[13,t.MAGICAL_LEAF],[15,t.QUICK_ATTACK],[20,t.SEED_BOMB],[24,t.U_TURN],[29,t.WORRY_SEED],[33,t.SLASH],[38,t.NIGHT_SLASH],[42,t.ENERGY_BALL],[47,t.PLAY_ROUGH],[52,t.KNOCK_OFF],[58,t.GRASSY_TERRAIN],[64,t.LEAF_STORM]],[e.FUECOCO]:[[1,t.TACKLE],[1,t.LEER],[1,t.EMBER],[7,t.ROUND],[12,t.BITE],[15,t.INCINERATE],[17,t.YAWN],[21,t.SNARL],[25,t.ROAR],[28,t.FLAMETHROWER],[32,t.HYPER_VOICE],[36,t.FIRE_BLAST]],[e.CROCALOR]:[[1,t.TACKLE],[1,t.LEER],[1,t.EMBER],[7,t.LICK],[10,t.ROUND],[12,t.BITE],[15,t.YAWN],[17,t.INCINERATE],[24,t.SNARL],[28,t.ROAR],[32,t.FLAMETHROWER],[38,t.HYPER_VOICE],[42,t.WILL_O_WISP],[47,t.FIRE_BLAST]],[e.SKELEDIRGE]:[[Z,t.TORCH_SONG],[w,t.SING],[w,t.YAWN],[1,t.TACKLE],[1,t.LEER],[1,t.EMBER],[7,t.LICK],[10,t.ROUND],[12,t.SCARY_FACE],[15,t.BITE],[17,t.INCINERATE],[24,t.SNARL],[28,t.ROAR],[32,t.FLAMETHROWER],[38,t.SHADOW_BALL],[42,t.HYPER_VOICE],[47,t.WILL_O_WISP],[47,t.HEX],[58,t.FIRE_BLAST],[64,t.OVERHEAT]],[e.QUAXLY]:[[1,t.POUND],[1,t.GROWL],[1,t.WATER_GUN],[7,t.WORK_UP],[10,t.WING_ATTACK],[13,t.AQUA_JET],[17,t.DOUBLE_HIT],[21,t.AQUA_CUTTER],[24,t.AIR_SLASH],[28,t.FOCUS_ENERGY],[31,t.ACROBATICS],[35,t.LIQUIDATION]],[e.QUAXWELL]:[[1,t.POUND],[1,t.GROWL],[1,t.WATER_GUN],[1,t.DOUBLE_HIT],[7,t.WORK_UP],[10,t.WING_ATTACK],[13,t.AQUA_JET],[17,t.WATER_PULSE],[19,t.LOW_SWEEP],[23,t.AQUA_CUTTER],[27,t.AIR_SLASH],[32,t.FOCUS_ENERGY],[38,t.ACROBATICS],[43,t.LIQUIDATION],[48,t.FEATHER_DANCE]],[e.QUAQUAVAL]:[[Z,t.AQUA_STEP],[w,t.COUNTER],[1,t.POUND],[1,t.GROWL],[1,t.WATER_GUN],[1,t.DOUBLE_HIT],[7,t.WORK_UP],[10,t.WING_ATTACK],[13,t.AQUA_JET],[17,t.WATER_PULSE],[17,t.LOW_SWEEP],[21,t.AQUA_CUTTER],[27,t.AIR_SLASH],[32,t.FOCUS_ENERGY],[38,t.MEGA_KICK],[43,t.ACROBATICS],[47,t.LIQUIDATION],[52,t.FEATHER_DANCE],[58,t.CLOSE_COMBAT],[64,t.WAVE_CRASH]],[e.LECHONK]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[5,t.DISARMING_VOICE],[8,t.ECHOED_VOICE],[12,t.MUD_SHOT],[15,t.COVET],[17,t.DIG],[21,t.HEADBUTT],[24,t.YAWN],[27,t.TAKE_DOWN],[30,t.WORK_UP],[32,t.UPROAR],[35,t.DOUBLE_EDGE]],[e.OINKOLOGNE]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[5,t.DISARMING_VOICE],[8,t.ECHOED_VOICE],[12,t.MUD_SHOT],[15,t.COVET],[17,t.DIG],[23,t.HEADBUTT],[26,t.TAKE_DOWN],[27,t.YAWN],[34,t.WORK_UP],[38,t.UPROAR],[42,t.DOUBLE_EDGE],[48,t.EARTH_POWER],[54,t.BELCH]],[e.TAROUNTULA]:[[1,t.TACKLE],[1,t.STRING_SHOT],[5,t.STRUGGLE_BUG],[8,t.ASSURANCE],[11,t.FEINT],[14,t.BUG_BITE],[18,t.BLOCK],[22,t.COUNTER],[25,t.HEADBUTT],[29,t.STICKY_WEB],[33,t.GASTRO_ACID],[36,t.CIRCLE_THROW],[40,t.THROAT_CHOP],[44,t.SKITTER_SMACK]],[e.SPIDOPS]:[[Z,t.SILK_TRAP],[1,t.TACKLE],[1,t.STRING_SHOT],[5,t.STRUGGLE_BUG],[8,t.ASSURANCE],[11,t.FEINT],[14,t.BUG_BITE],[19,t.BLOCK],[24,t.COUNTER],[28,t.HEADBUTT],[33,t.STICKY_WEB],[37,t.GASTRO_ACID],[41,t.CIRCLE_THROW],[45,t.THROAT_CHOP],[49,t.SKITTER_SMACK]],[e.NYMBLE]:[[1,t.TACKLE],[1,t.LEER],[4,t.STRUGGLE_BUG],[6,t.ASTONISH],[9,t.ASSURANCE],[11,t.DOUBLE_KICK],[14,t.SCREECH],[18,t.ENDURE],[22,t.BUG_BITE],[26,t.FEINT],[30,t.AGILITY],[38,t.SUCKER_PUNCH],[41,t.FIRST_IMPRESSION]],[e.LOKIX]:[[Z,t.LUNGE],[1,t.TACKLE],[1,t.LEER],[1,t.LOW_KICK],[1,t.DETECT],[4,t.STRUGGLE_BUG],[6,t.ASTONISH],[9,t.ASSURANCE],[11,t.DOUBLE_KICK],[14,t.SCREECH],[18,t.ENDURE],[22,t.BUG_BITE],[28,t.FEINT],[32,t.AGILITY],[36,t.THROAT_CHOP],[40,t.SUCKER_PUNCH],[44,t.FIRST_IMPRESSION],[48,t.BOUNCE],[53,t.AXE_KICK]],[e.PAWMI]:[[1,t.SCRATCH],[1,t.GROWL],[3,t.THUNDER_SHOCK],[6,t.QUICK_ATTACK],[8,t.CHARGE],[12,t.NUZZLE],[15,t.DIG],[19,t.BITE],[23,t.SPARK],[27,t.THUNDER_WAVE],[31,t.ENTRAINMENT],[35,t.SLAM],[38,t.DISCHARGE],[40,t.AGILITY],[44,t.WILD_CHARGE]],[e.PAWMO]:[[Z,t.ARM_THRUST],[1,t.SCRATCH],[1,t.GROWL],[3,t.THUNDER_SHOCK],[6,t.QUICK_ATTACK],[8,t.CHARGE],[12,t.NUZZLE],[15,t.DIG],[19,t.BITE],[23,t.SPARK],[27,t.THUNDER_WAVE],[32,t.SLAM],[38,t.ENTRAINMENT],[42,t.DISCHARGE],[46,t.AGILITY],[52,t.WILD_CHARGE]],[e.PAWMOT]:[[Z,t.REVIVAL_BLESSING],[1,t.SCRATCH],[1,t.GROWL],[1,t.WILD_CHARGE],[3,t.THUNDER_SHOCK],[6,t.QUICK_ATTACK],[8,t.CHARGE],[12,t.NUZZLE],[15,t.DIG],[19,t.BITE],[23,t.SPARK],[25,t.ARM_THRUST],[29,t.THUNDER_WAVE],[33,t.SLAM],[39,t.ENTRAINMENT],[44,t.CLOSE_COMBAT],[49,t.DISCHARGE],[54,t.AGILITY],[60,t.DOUBLE_SHOCK]],[e.TANDEMAUS]:[[1,t.POUND],[1,t.BABY_DOLL_EYES],[5,t.ECHOED_VOICE],[8,t.HELPING_HAND],[11,t.SUPER_FANG],[14,t.DOUBLE_HIT],[18,t.BULLET_SEED],[22,t.ENCORE],[26,t.PLAY_ROUGH],[30,t.HYPER_VOICE],[33,t.CHARM],[37,t.BEAT_UP],[41,t.COPYCAT],[46,t.POPULATION_BOMB]],[e.MAUSHOLD]:[[1,t.POUND],[1,t.FOLLOW_ME],[1,t.BABY_DOLL_EYES],[1,t.TIDY_UP],[5,t.ECHOED_VOICE],[8,t.HELPING_HAND],[11,t.SUPER_FANG],[14,t.DOUBLE_HIT],[18,t.BULLET_SEED],[22,t.ENCORE],[29,t.PLAY_ROUGH],[33,t.HYPER_VOICE],[37,t.CHARM],[41,t.BEAT_UP],[46,t.COPYCAT],[53,t.POPULATION_BOMB]],[e.FIDOUGH]:[[1,t.TACKLE],[1,t.GROWL],[3,t.LICK],[6,t.TAIL_WHIP],[8,t.COVET],[11,t.BITE],[15,t.BABY_DOLL_EYES],[18,t.PLAY_ROUGH],[22,t.WORK_UP],[26,t.BATON_PASS],[30,t.ROAR],[33,t.DOUBLE_EDGE],[36,t.CHARM],[40,t.CRUNCH],[45,t.LAST_RESORT]],[e.DACHSBUN]:[[1,t.TACKLE],[1,t.GROWL],[3,t.LICK],[6,t.TAIL_WHIP],[8,t.COVET],[11,t.BITE],[15,t.BABY_DOLL_EYES],[18,t.PLAY_ROUGH],[22,t.WORK_UP],[29,t.BATON_PASS],[33,t.ROAR],[38,t.DOUBLE_EDGE],[42,t.CHARM],[47,t.CRUNCH],[53,t.LAST_RESORT]],[e.SMOLIV]:[[1,t.TACKLE],[1,t.SWEET_SCENT],[5,t.ABSORB],[7,t.GROWTH],[10,t.RAZOR_LEAF],[13,t.HELPING_HAND],[16,t.FLAIL],[20,t.MEGA_DRAIN],[23,t.GRASSY_TERRAIN],[27,t.SEED_BOMB],[30,t.ENERGY_BALL],[34,t.LEECH_SEED],[38,t.TERRAIN_PULSE]],[e.DOLLIV]:[[1,t.TACKLE],[1,t.SWEET_SCENT],[5,t.ABSORB],[7,t.GROWTH],[10,t.RAZOR_LEAF],[13,t.HELPING_HAND],[16,t.FLAIL],[20,t.MEGA_DRAIN],[23,t.GRASSY_TERRAIN],[29,t.SEED_BOMB],[34,t.ENERGY_BALL],[37,t.LEECH_SEED],[42,t.TERRAIN_PULSE]],[e.ARBOLIVA]:[[1,t.TACKLE],[1,t.SAFEGUARD],[1,t.SWEET_SCENT],[1,t.MIRROR_COAT],[5,t.ABSORB],[7,t.GROWTH],[10,t.RAZOR_LEAF],[13,t.HELPING_HAND],[16,t.FLAIL],[20,t.MEGA_DRAIN],[23,t.GRASSY_TERRAIN],[29,t.SEED_BOMB],[34,t.ENERGY_BALL],[39,t.LEECH_SEED],[46,t.TERRAIN_PULSE],[52,t.PETAL_BLIZZARD],[58,t.PETAL_DANCE]],[e.SQUAWKABILLY]:[[1,t.GROWL],[1,t.PECK],[1,t.MIMIC],[6,t.QUICK_ATTACK],[10,t.TORMENT],[13,t.AERIAL_ACE],[17,t.FURY_ATTACK],[20,t.TAUNT],[24,t.UPROAR],[27,t.COPYCAT],[30,t.FLY],[34,t.FACADE],[38,t.SWAGGER],[42,t.BRAVE_BIRD],[47,t.ROOST],[52,t.REVERSAL]],[e.NACLI]:[[1,t.TACKLE],[1,t.HARDEN],[5,t.ROCK_THROW],[7,t.MUD_SHOT],[10,t.SMACK_DOWN],[13,t.ROCK_POLISH],[16,t.HEADBUTT],[20,t.IRON_DEFENSE],[25,t.RECOVER],[30,t.ROCK_SLIDE],[33,t.STEALTH_ROCK],[35,t.HEAVY_SLAM],[40,t.EARTHQUAKE],[45,t.STONE_EDGE]],[e.NACLSTACK]:[[Z,t.SALT_CURE],[1,t.TACKLE],[1,t.HARDEN],[5,t.ROCK_THROW],[7,t.MUD_SHOT],[10,t.SMACK_DOWN],[13,t.ROCK_POLISH],[16,t.HEADBUTT],[20,t.IRON_DEFENSE],[30,t.RECOVER],[34,t.ROCK_SLIDE],[38,t.STEALTH_ROCK],[41,t.HEAVY_SLAM],[45,t.EARTHQUAKE],[51,t.STONE_EDGE]],[e.GARGANACL]:[[Z,t.HAMMER_ARM],[w,t.IRON_DEFENSE],[1,t.TACKLE],[1,t.HARDEN],[1,t.BLOCK],[1,t.ROCK_BLAST],[1,t.SMACK_DOWN],[1,t.WIDE_GUARD],[5,t.ROCK_THROW],[7,t.MUD_SHOT],[10,t.ROCK_TOMB],[13,t.ROCK_POLISH],[16,t.HEADBUTT],[24,t.SALT_CURE],[30,t.RECOVER],[34,t.ROCK_SLIDE],[40,t.STEALTH_ROCK],[44,t.HEAVY_SLAM],[49,t.EARTHQUAKE],[54,t.STONE_EDGE],[60,t.EXPLOSION]],[e.CHARCADET]:[[1,t.LEER],[1,t.EMBER],[1,t.ASTONISH],[8,t.CLEAR_SMOG],[12,t.FIRE_SPIN],[16,t.WILL_O_WISP],[20,t.NIGHT_SHADE],[24,t.FLAME_CHARGE],[28,t.INCINERATE],[32,t.LAVA_PLUME]],[e.ARMAROUGE]:[[Z,t.PSYSHOCK],[1,t.LEER],[1,t.EMBER],[1,t.ASTONISH],[1,t.WIDE_GUARD],[1,t.MYSTICAL_FIRE],[8,t.CLEAR_SMOG],[12,t.FIRE_SPIN],[16,t.WILL_O_WISP],[20,t.NIGHT_SHADE],[24,t.FLAME_CHARGE],[28,t.INCINERATE],[32,t.LAVA_PLUME],[37,t.CALM_MIND],[42,t.ALLY_SWITCH],[48,t.FLAMETHROWER],[56,t.EXPANDING_FORCE],[62,t.ARMOR_CANNON]],[e.CERULEDGE]:[[Z,t.SHADOW_CLAW],[w,t.NIGHT_SLASH],[w,t.SHADOW_SNEAK],[w,t.QUICK_GUARD],[w,t.SOLAR_BLADE],[1,t.EMBER],[1,t.LEER],[1,t.ASTONISH],[8,t.CLEAR_SMOG],[12,t.FIRE_SPIN],[16,t.WILL_O_WISP],[20,t.NIGHT_SHADE],[24,t.FLAME_CHARGE],[28,t.INCINERATE],[32,t.LAVA_PLUME],[37,t.SWORDS_DANCE],[42,t.ALLY_SWITCH],[48,t.BITTER_BLADE],[56,t.PSYCHO_CUT],[62,t.FLARE_BLITZ]],[e.TADBULB]:[[1,t.TACKLE],[1,t.MUD_SLAP],[7,t.THUNDER_SHOCK],[11,t.WATER_GUN],[17,t.CHARGE],[21,t.SPARK],[24,t.MUD_SHOT],[25,t.FLAIL],[32,t.DISCHARGE],[36,t.WEATHER_BALL],[40,t.ELECTRIC_TERRAIN],[45,t.SUCKER_PUNCH],[50,t.ZAP_CANNON]],[e.BELLIBOLT]:[[1,t.TACKLE],[1,t.MUD_SLAP],[1,t.SLACK_OFF],[7,t.THUNDER_SHOCK],[11,t.WATER_GUN],[17,t.CHARGE],[21,t.SPARK],[24,t.MUD_SHOT],[25,t.FLAIL],[32,t.DISCHARGE],[36,t.WEATHER_BALL],[40,t.ELECTRIC_TERRAIN],[45,t.SUCKER_PUNCH],[50,t.ZAP_CANNON]],[e.WATTREL]:[[1,t.GROWL],[1,t.PECK],[4,t.THUNDER_SHOCK],[7,t.QUICK_ATTACK],[11,t.PLUCK],[15,t.SPARK],[19,t.UPROAR],[23,t.ROOST],[27,t.DUAL_WINGBEAT],[32,t.AGILITY],[37,t.VOLT_SWITCH],[43,t.DISCHARGE]],[e.KILOWATTREL]:[[Z,t.ELECTRO_BALL],[1,t.GROWL],[1,t.PECK],[4,t.THUNDER_SHOCK],[7,t.QUICK_ATTACK],[11,t.PLUCK],[15,t.SPARK],[19,t.UPROAR],[24,t.ROOST],[30,t.DUAL_WINGBEAT],[36,t.AGILITY],[43,t.VOLT_SWITCH],[48,t.DISCHARGE],[55,t.HURRICANE]],[e.MASCHIFF]:[[1,t.TACKLE],[1,t.LEER],[1,t.SCARY_FACE],[4,t.LICK],[7,t.SNARL],[10,t.HONE_CLAWS],[14,t.BITE],[18,t.ROAR],[22,t.HEADBUTT],[26,t.PAYBACK],[31,t.CRUNCH],[35,t.SWAGGER],[39,t.REVERSAL],[43,t.JAW_LOCK],[49,t.DOUBLE_EDGE]],[e.MABOSSTIFF]:[[Z,t.COMEUPPANCE],[1,t.TACKLE],[1,t.LEER],[1,t.SCARY_FACE],[4,t.LICK],[7,t.SNARL],[10,t.HONE_CLAWS],[14,t.BITE],[18,t.ROAR],[22,t.HEADBUTT],[26,t.PAYBACK],[34,t.CRUNCH],[39,t.SWAGGER],[43,t.REVERSAL],[48,t.JAW_LOCK],[55,t.DOUBLE_EDGE],[60,t.OUTRAGE]],[e.SHROODLE]:[[1,t.SCRATCH],[1,t.LEER],[5,t.ACID_SPRAY],[8,t.BITE],[8,t.FURY_SWIPES],[11,t.SWITCHEROO],[14,t.POISON_FANG],[18,t.FLATTER],[21,t.SLASH],[25,t.U_TURN],[29,t.POISON_JAB],[33,t.TAUNT],[36,t.SUBSTITUTE],[40,t.KNOCK_OFF],[45,t.GUNK_SHOT]],[e.GRAFAIAI]:[[Z,t.DOODLE],[1,t.SCRATCH],[1,t.LEER],[1,t.BITE],[5,t.ACID_SPRAY],[8,t.FURY_SWIPES],[11,t.SWITCHEROO],[14,t.POISON_FANG],[18,t.FLATTER],[21,t.SLASH],[25,t.U_TURN],[33,t.POISON_JAB],[37,t.TAUNT],[40,t.SUBSTITUTE],[45,t.KNOCK_OFF],[51,t.GUNK_SHOT]],[e.BRAMBLIN]:[[1,t.DEFENSE_CURL],[1,t.ROLLOUT],[1,t.ASTONISH],[5,t.ABSORB],[9,t.RAPID_SPIN],[13,t.BULLET_SEED],[17,t.INFESTATION],[21,t.HEX],[25,t.MEGA_DRAIN],[29,t.DISABLE],[35,t.PHANTOM_FORCE],[40,t.GIGA_DRAIN],[45,t.CURSE],[50,t.PAIN_SPLIT],[55,t.POWER_WHIP]],[e.BRAMBLEGHAST]:[[1,t.DEFENSE_CURL],[1,t.ROLLOUT],[1,t.ASTONISH],[5,t.ABSORB],[9,t.RAPID_SPIN],[13,t.BULLET_SEED],[17,t.INFESTATION],[21,t.HEX],[25,t.MEGA_DRAIN],[29,t.DISABLE],[35,t.PHANTOM_FORCE],[40,t.GIGA_DRAIN],[45,t.CURSE],[50,t.PAIN_SPLIT],[55,t.POWER_WHIP]],[e.TOEDSCOOL]:[[1,t.WRAP],[1,t.MUD_SLAP],[4,t.ABSORB],[8,t.POISON_POWDER],[8,t.STUN_SPORE],[12,t.SUPERSONIC],[15,t.TACKLE],[16,t.MEGA_DRAIN],[20,t.SCREECH],[24,t.MUD_SHOT],[28,t.HEX],[32,t.SEED_BOMB],[36,t.SPORE],[40,t.GROWTH],[44,t.GIGA_DRAIN],[48,t.EARTH_POWER],[52,t.POWER_WHIP]],[e.TOEDSCRUEL]:[[1,t.WRAP],[1,t.MUD_SLAP],[1,t.REFLECT_TYPE],[4,t.ABSORB],[8,t.POISON_POWDER],[8,t.STUN_SPORE],[12,t.SUPERSONIC],[15,t.TACKLE],[16,t.MEGA_DRAIN],[20,t.SCREECH],[24,t.MUD_SHOT],[28,t.HEX],[34,t.SEED_BOMB],[40,t.SPORE],[44,t.GROWTH],[48,t.GIGA_DRAIN],[54,t.EARTH_POWER],[58,t.POWER_WHIP]],[e.KLAWF]:[[1,t.ROCK_THROW],[6,t.HARDEN],[9,t.ROCK_SMASH],[13,t.ROCK_TOMB],[17,t.METAL_CLAW],[21,t.PROTECT],[24,t.ROCK_BLAST],[29,t.X_SCISSOR],[33,t.SWORDS_DANCE],[37,t.FLAIL],[42,t.ROCK_SLIDE],[47,t.HIGH_HORSEPOWER],[51,t.IRON_DEFENSE],[56,t.GUILLOTINE]],[e.CAPSAKID]:[[1,t.LEER],[1,t.LEAFAGE],[4,t.BITE],[10,t.GROWTH],[13,t.RAZOR_LEAF],[17,t.SUNNY_DAY],[21,t.BULLET_SEED],[24,t.HEADBUTT],[28,t.ZEN_HEADBUTT],[38,t.CRUNCH],[44,t.SEED_BOMB],[48,t.SOLAR_BEAM]],[e.SCOVILLAIN]:[[Z,t.FLAMETHROWER],[Z,t.SPICY_EXTRACT],[1,t.LEER],[1,t.FIRE_FANG],[1,t.LEAFAGE],[4,t.BITE],[10,t.GROWTH],[13,t.RAZOR_LEAF],[17,t.SUNNY_DAY],[21,t.BULLET_SEED],[24,t.HEADBUTT],[28,t.ZEN_HEADBUTT],[33,t.WORRY_SEED],[38,t.CRUNCH],[44,t.SEED_BOMB],[48,t.SOLAR_BEAM],[48,t.OVERHEAT]],[e.RELLOR]:[[1,t.TACKLE],[1,t.DEFENSE_CURL],[4,t.SAND_ATTACK],[7,t.STRUGGLE_BUG],[11,t.ROLLOUT],[15,t.MUD_SHOT],[20,t.BUG_BITE],[24,t.TAKE_DOWN],[29,t.DIG],[35,t.LUNGE]],[e.RABSCA]:[[Z,t.REVIVAL_BLESSING],[w,t.SAFEGUARD],[w,t.PSYCH_UP],[1,t.TACKLE],[1,t.CONFUSION],[1,t.DEFENSE_CURL],[1,t.MUD_SHOT],[1,t.DIG],[4,t.SAND_ATTACK],[7,t.STRUGGLE_BUG],[11,t.ROLLOUT],[15,t.PSYBEAM],[20,t.BUG_BITE],[24,t.TAKE_DOWN],[29,t.EXTRASENSORY],[35,t.LUNGE],[40,t.POWER_SWAP],[40,t.GUARD_SWAP],[40,t.SPEED_SWAP],[45,t.BUG_BUZZ],[50,t.PSYCHIC]],[e.FLITTLE]:[[1,t.GROWL],[1,t.PECK],[5,t.CONFUSION],[8,t.BABY_DOLL_EYES],[11,t.DISARMING_VOICE],[15,t.QUICK_ATTACK],[19,t.PSYBEAM],[24,t.PLUCK],[29,t.AGILITY],[34,t.UPROAR]],[e.ESPATHRA]:[[Z,t.LUMINA_CRASH],[1,t.GROWL],[1,t.PECK],[1,t.DRILL_PECK],[1,t.FEATHER_DANCE],[5,t.CONFUSION],[8,t.BABY_DOLL_EYES],[11,t.DISARMING_VOICE],[15,t.QUICK_ATTACK],[19,t.PSYBEAM],[24,t.PLUCK],[29,t.AGILITY],[34,t.UPROAR],[43,t.DAZZLING_GLEAM],[49,t.PSYCHIC],[54,t.LAST_RESORT]],[e.TINKATINK]:[[1,t.ASTONISH],[1,t.FAIRY_WIND],[5,t.BABY_DOLL_EYES],[8,t.METAL_CLAW],[11,t.COVET],[14,t.ROCK_SMASH],[17,t.DRAINING_KISS],[21,t.SWEET_KISS],[24,t.BRUTAL_SWING],[27,t.SLAM],[31,t.FLASH_CANNON],[35,t.PLAY_ROUGH],[39,t.FAKE_OUT],[43,t.FLATTER],[47,t.SKITTER_SMACK],[52,t.KNOCK_OFF]],[e.TINKATUFF]:[[1,t.ASTONISH],[1,t.FAIRY_WIND],[5,t.BABY_DOLL_EYES],[8,t.METAL_CLAW],[11,t.COVET],[14,t.ROCK_SMASH],[17,t.DRAINING_KISS],[21,t.SWEET_KISS],[24,t.BRUTAL_SWING],[27,t.SLAM],[31,t.FLASH_CANNON],[35,t.PLAY_ROUGH],[39,t.FAKE_OUT],[43,t.FLATTER],[47,t.SKITTER_SMACK],[52,t.KNOCK_OFF]],[e.TINKATON]:[[Z,t.GIGATON_HAMMER],[1,t.ASTONISH],[1,t.FAIRY_WIND],[5,t.BABY_DOLL_EYES],[8,t.METAL_CLAW],[11,t.COVET],[14,t.ROCK_SMASH],[17,t.DRAINING_KISS],[21,t.SWEET_KISS],[24,t.BRUTAL_SWING],[27,t.SLAM],[31,t.FLASH_CANNON],[35,t.PLAY_ROUGH],[39,t.FAKE_OUT],[43,t.FLATTER],[47,t.SKITTER_SMACK],[52,t.KNOCK_OFF]],[e.WIGLETT]:[[1,t.SAND_ATTACK],[1,t.WATER_GUN],[4,t.MUD_SLAP],[8,t.WRAP],[12,t.AQUA_JET],[20,t.SLAM],[20,t.WATER_PULSE],[24,t.HEADBUTT],[28,t.DIG],[32,t.SUCKER_PUNCH],[36,t.THROAT_CHOP],[40,t.LIQUIDATION]],[e.WUGTRIO]:[[1,t.SAND_ATTACK],[1,t.WRAP],[1,t.WATER_GUN],[1,t.MUD_SLAP],[12,t.AQUA_JET],[16,t.SLAM],[20,t.WATER_PULSE],[24,t.HEADBUTT],[30,t.TRIPLE_DIVE],[36,t.DIG],[42,t.SUCKER_PUNCH],[48,t.THROAT_CHOP],[54,t.LIQUIDATION]],[e.BOMBIRDIER]:[[1,t.WING_ATTACK],[1,t.LEER],[1,t.PECK],[1,t.MEMENTO],[1,t.HONE_CLAWS],[7,t.THIEF],[11,t.ROCK_THROW],[16,t.WHIRLWIND],[20,t.PLUCK],[24,t.TORMENT],[29,t.ROCK_TOMB],[36,t.PAYBACK],[42,t.DUAL_WINGBEAT],[47,t.ROCK_SLIDE],[53,t.KNOCK_OFF],[60,t.PARTING_SHOT]],[e.FINIZEN]:[[1,t.SUPERSONIC],[1,t.WATER_GUN],[7,t.ASTONISH],[10,t.FOCUS_ENERGY],[13,t.AQUA_JET],[17,t.DOUBLE_HIT],[21,t.DIVE],[25,t.CHARM],[29,t.ACROBATICS],[34,t.ENCORE],[39,t.AQUA_TAIL],[44,t.MIST],[50,t.HYDRO_PUMP]],[e.PALAFIN]:[[Z,t.FLIP_TURN],[1,t.SUPERSONIC],[1,t.WATER_GUN],[1,t.JET_PUNCH],[7,t.ASTONISH],[10,t.FOCUS_ENERGY],[13,t.AQUA_JET],[17,t.DOUBLE_HIT],[21,t.DIVE],[25,t.CHARM],[29,t.ACROBATICS],[34,t.ENCORE],[39,t.AQUA_TAIL],[44,t.MIST],[50,t.HYDRO_PUMP],[55,t.FOCUS_PUNCH],[61,t.WAVE_CRASH]],[e.VAROOM]:[[1,t.LICK],[1,t.POISON_GAS],[4,t.SMOG],[7,t.TAUNT],[10,t.ASSURANCE],[13,t.SLUDGE],[17,t.GYRO_BALL],[21,t.HEADBUTT],[25,t.SCREECH],[28,t.IRON_HEAD],[32,t.SWAGGER],[36,t.POISON_JAB],[41,t.UPROAR],[46,t.SPIN_OUT],[50,t.GUNK_SHOT]],[e.REVAVROOM]:[[Z,t.SHIFT_GEAR],[1,t.LICK],[1,t.POISON_GAS],[1,t.MAGNET_RISE],[4,t.SMOG],[7,t.TAUNT],[10,t.ASSURANCE],[13,t.SLUDGE],[17,t.GYRO_BALL],[21,t.HEADBUTT],[25,t.SCREECH],[28,t.IRON_HEAD],[32,t.SWAGGER],[36,t.POISON_JAB],[46,t.UPROAR],[52,t.SPIN_OUT],[58,t.GUNK_SHOT]],[e.CYCLIZAR]:[[1,t.TACKLE],[1,t.GROWL],[7,t.RAPID_SPIN],[11,t.TAUNT],[14,t.BREAKING_SWIPE],[18,t.QUICK_ATTACK],[23,t.BITE],[27,t.U_TURN],[31,t.SHED_TAIL],[36,t.DRAGON_CLAW],[40,t.SHIFT_GEAR],[45,t.DRAGON_PULSE],[51,t.DOUBLE_EDGE],[57,t.DRAGON_RUSH]],[e.ORTHWORM]:[[1,t.TACKLE],[1,t.WRAP],[1,t.HARDEN],[7,t.MUD_SLAP],[12,t.SMACK_DOWN],[16,t.BULLDOZE],[21,t.IRON_HEAD],[26,t.TAKE_DOWN],[30,t.DIG],[34,t.SANDSTORM],[38,t.IRON_DEFENSE],[43,t.IRON_TAIL],[47,t.EARTHQUAKE],[52,t.SHED_TAIL]],[e.GLIMMET]:[[1,t.ROCK_THROW],[1,t.HARDEN],[1,t.SMACK_DOWN],[7,t.ACID_SPRAY],[11,t.ANCIENT_POWER],[15,t.ROCK_POLISH],[18,t.STEALTH_ROCK],[22,t.VENOSHOCK],[26,t.SANDSTORM],[29,t.SELF_DESTRUCT],[33,t.ROCK_SLIDE],[37,t.POWER_GEM],[41,t.ACID_ARMOR],[46,t.SLUDGE_WAVE]],[e.GLIMMORA]:[[Z,t.MORTAL_SPIN],[1,t.ROCK_THROW],[1,t.HARDEN],[1,t.TOXIC_SPIKES],[1,t.SMACK_DOWN],[1,t.SPIKY_SHIELD],[7,t.ACID_SPRAY],[11,t.ANCIENT_POWER],[15,t.ROCK_POLISH],[18,t.STEALTH_ROCK],[22,t.VENOSHOCK],[26,t.SANDSTORM],[29,t.SELF_DESTRUCT],[33,t.ROCK_SLIDE],[39,t.POWER_GEM],[44,t.ACID_ARMOR],[50,t.SLUDGE_WAVE]],[e.GREAVARD]:[[1,t.TACKLE],[1,t.GROWL],[3,t.LICK],[6,t.TAIL_WHIP],[6,t.BITE],[9,t.ROAR],[12,t.HEADBUTT],[16,t.DIG],[24,t.REST],[28,t.CRUNCH],[32,t.PLAY_ROUGH],[37,t.HELPING_HAND],[41,t.PHANTOM_FORCE],[46,t.CHARM],[52,t.DOUBLE_EDGE]],[e.HOUNDSTONE]:[[Z,t.LAST_RESPECTS],[1,t.TACKLE],[1,t.GROWL],[3,t.LICK],[6,t.TAIL_WHIP],[6,t.BITE],[9,t.ROAR],[12,t.HEADBUTT],[16,t.DIG],[24,t.REST],[28,t.CRUNCH],[36,t.PLAY_ROUGH],[41,t.HELPING_HAND],[46,t.PHANTOM_FORCE],[51,t.CHARM],[58,t.DOUBLE_EDGE]],[e.FLAMIGO]:[[1,t.PECK],[1,t.COPYCAT],[5,t.DOUBLE_KICK],[9,t.DETECT],[12,t.WING_ATTACK],[15,t.FOCUS_ENERGY],[18,t.LOW_KICK],[21,t.FEINT],[27,t.PAYBACK],[31,t.ROOST],[35,t.AIR_SLASH],[39,t.MEGA_KICK],[44,t.WIDE_GUARD],[48,t.THROAT_CHOP],[54,t.BRAVE_BIRD]],[e.CETODDLE]:[[1,t.TACKLE],[1,t.POWDER_SNOW],[6,t.GROWL],[9,t.ECHOED_VOICE],[12,t.ICE_SHARD],[15,t.REST],[19,t.TAKE_DOWN],[25,t.FLAIL],[27,t.AVALANCHE],[31,t.BOUNCE],[36,t.BODY_SLAM],[40,t.AMNESIA],[44,t.ICE_SPINNER],[49,t.DOUBLE_EDGE],[53,t.BLIZZARD]],[e.CETITAN]:[[1,t.TACKLE],[1,t.POWDER_SNOW],[6,t.GROWL],[9,t.ECHOED_VOICE],[12,t.ICE_SHARD],[15,t.REST],[19,t.TAKE_DOWN],[25,t.FLAIL],[27,t.AVALANCHE],[31,t.BOUNCE],[36,t.BODY_SLAM],[40,t.AMNESIA],[44,t.ICE_SPINNER],[49,t.DOUBLE_EDGE],[53,t.BLIZZARD]],[e.VELUZA]:[[1,t.TACKLE],[1,t.AQUA_JET],[7,t.PLUCK],[11,t.WATER_PULSE],[15,t.FOCUS_ENERGY],[20,t.SLASH],[25,t.AQUA_CUTTER],[30,t.FILLET_AWAY],[35,t.NIGHT_SLASH],[40,t.PSYCHO_CUT],[45,t.LIQUIDATION],[50,t.CRUNCH],[55,t.FINAL_GAMBIT]],[e.DONDOZO]:[[1,t.TACKLE],[1,t.SUPERSONIC],[1,t.WATER_GUN],[5,t.TICKLE],[10,t.FLAIL],[15,t.REST],[15,t.SLEEP_TALK],[20,t.DIVE],[25,t.NOBLE_ROAR],[30,t.SOAK],[35,t.BODY_SLAM],[40,t.AQUA_TAIL],[45,t.RAIN_DANCE],[50,t.ORDER_UP],[55,t.HEAVY_SLAM],[60,t.DOUBLE_EDGE],[65,t.WAVE_CRASH]],[e.TATSUGIRI]:[[1,t.WATER_GUN],[1,t.SPLASH],[6,t.HARDEN],[12,t.HELPING_HAND],[17,t.WATER_PULSE],[23,t.SOAK],[28,t.TAUNT],[34,t.MEMENTO],[39,t.MUDDY_WATER],[43,t.NASTY_PLOT],[47,t.MIRROR_COAT],[52,t.DRAGON_PULSE]],[e.ANNIHILAPE]:[[Z,t.SHADOW_PUNCH],[1,t.SCRATCH],[1,t.LEER],[1,t.COUNTER],[1,t.FOCUS_ENERGY],[1,t.COVET],[1,t.FLING],[5,t.FURY_SWIPES],[8,t.LOW_KICK],[12,t.SEISMIC_TOSS],[17,t.SWAGGER],[22,t.CROSS_CHOP],[26,t.ASSURANCE],[30,t.THRASH],[35,t.RAGE_FIST],[39,t.CLOSE_COMBAT],[44,t.SCREECH],[48,t.STOMPING_TANTRUM],[53,t.OUTRAGE],[57,t.FINAL_GAMBIT]],[e.CLODSIRE]:[[Z,t.AMNESIA],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.POISON_STING],[4,t.TOXIC_SPIKES],[8,t.MUD_SHOT],[12,t.POISON_TAIL],[16,t.SLAM],[21,t.YAWN],[24,t.POISON_JAB],[30,t.SLUDGE_WAVE],[36,t.MEGAHORN],[40,t.TOXIC],[48,t.EARTHQUAKE]],[e.FARIGIRAF]:[[1,t.TACKLE],[1,t.GROWL],[1,t.ASTONISH],[1,t.POWER_SWAP],[1,t.GUARD_SWAP],[5,t.CONFUSION],[10,t.ASSURANCE],[14,t.STOMP],[19,t.PSYBEAM],[23,t.AGILITY],[28,t.DOUBLE_HIT],[32,t.TWIN_BEAM],[37,t.CRUNCH],[41,t.BATON_PASS],[46,t.NASTY_PLOT],[50,t.PSYCHIC]],[e.DUDUNSPARCE]:[[1,t.DEFENSE_CURL],[1,t.FLAIL],[1,t.TACKLE],[4,t.MUD_SLAP],[8,t.ROLLOUT],[12,t.GLARE],[16,t.SCREECH],[20,t.ANCIENT_POWER],[24,t.DRILL_RUN],[28,t.YAWN],[32,t.HYPER_DRILL],[36,t.ROOST],[40,t.DRAGON_RUSH],[44,t.COIL],[48,t.DOUBLE_EDGE],[52,t.ENDEAVOR],[56,t.HURRICANE],[62,t.BOOMBURST]],[e.KINGAMBIT]:[[Z,t.KOWTOW_CLEAVE],[1,t.SCRATCH],[1,t.LEER],[1,t.FURY_CUTTER],[1,t.METAL_CLAW],[1,t.METAL_BURST],[15,t.TORMENT],[20,t.SCARY_FACE],[25,t.ASSURANCE],[30,t.METAL_SOUND],[35,t.SLASH],[40,t.NIGHT_SLASH],[45,t.IRON_DEFENSE],[50,t.RETALIATE],[57,t.IRON_HEAD],[64,t.SWORDS_DANCE],[71,t.GUILLOTINE]],[e.GREAT_TUSK]:[[1,t.HORN_ATTACK],[1,t.DEFENSE_CURL],[1,t.ROLLOUT],[1,t.SUNNY_DAY],[7,t.BULLDOZE],[14,t.TAUNT],[21,t.RAPID_SPIN],[28,t.BRICK_BREAK],[35,t.STOMPING_TANTRUM],[42,t.KNOCK_OFF],[49,t.EARTHQUAKE],[56,t.GIGA_IMPACT],[63,t.CLOSE_COMBAT],[70,t.ENDEAVOR],[77,t.MEGAHORN],[84,t.HEAD_SMASH],[91,t.HEADLONG_RUSH]],[e.SCREAM_TAIL]:[[w,t.SUNNY_DAY],[1,t.POUND],[1,t.SING],[1,t.DISABLE],[7,t.HOWL],[14,t.NOBLE_ROAR],[21,t.BITE],[28,t.BODY_SLAM],[35,t.REST],[42,t.PLAY_ROUGH],[49,t.HYPER_VOICE],[56,t.PSYCHIC_FANGS],[63,t.CRUNCH],[70,t.WISH],[77,t.GYRO_BALL],[84,t.PERISH_SONG],[91,t.BOOMBURST]],[e.BRUTE_BONNET]:[[w,t.SUNNY_DAY],[1,t.ABSORB],[1,t.GROWTH],[1,t.ASTONISH],[7,t.STUN_SPORE],[14,t.MEGA_DRAIN],[21,t.SYNTHESIS],[28,t.CLEAR_SMOG],[35,t.PAYBACK],[42,t.THRASH],[49,t.GIGA_DRAIN],[56,t.SUCKER_PUNCH],[63,t.SPORE],[70,t.INGRAIN],[77,t.RAGE_POWDER],[91,t.SOLAR_BEAM]],[e.FLUTTER_MANE]:[[w,t.SUNNY_DAY],[1,t.CONFUSE_RAY],[1,t.SPITE],[1,t.ASTONISH],[1,t.PSYBEAM],[14,t.MEAN_LOOK],[21,t.MEMENTO],[28,t.WISH],[35,t.DAZZLING_GLEAM],[42,t.SHADOW_BALL],[49,t.MYSTICAL_FIRE],[56,t.POWER_GEM],[63,t.PSYSHOCK],[70,t.PHANTOM_FORCE],[77,t.PAIN_SPLIT],[84,t.MOONBLAST],[91,t.PERISH_SONG]],[e.SLITHER_WING]:[[w,t.SUNNY_DAY],[1,t.GUST],[1,t.EMBER],[1,t.BUG_BITE],[7,t.POISON_POWDER],[7,t.STUN_SPORE],[14,t.FLAME_CHARGE],[21,t.STOMP],[28,t.LOW_SWEEP],[35,t.MORNING_SUN],[42,t.LUNGE],[49,t.SUPERPOWER],[56,t.BULK_UP],[63,t.DUAL_WINGBEAT],[70,t.FIRST_IMPRESSION],[77,t.WHIRLWIND],[84,t.LEECH_LIFE],[91,t.THRASH]],[e.SANDY_SHOCKS]:[[w,t.SUNNY_DAY],[1,t.SUPERSONIC],[1,t.THUNDER_SHOCK],[1,t.THUNDER_WAVE],[1,t.ELECTRIC_TERRAIN],[7,t.SPARK],[14,t.BULLDOZE],[21,t.CHARGE_BEAM],[28,t.TRI_ATTACK],[35,t.SCREECH],[42,t.HEAVY_SLAM],[49,t.METAL_SOUND],[56,t.DISCHARGE],[63,t.EARTH_POWER],[70,t.MIRROR_COAT],[77,t.GRAVITY],[84,t.ZAP_CANNON],[91,t.MAGNETIC_FLUX]],[e.IRON_TREADS]:[[1,t.HORN_ATTACK],[1,t.DEFENSE_CURL],[1,t.ROLLOUT],[1,t.ELECTRIC_TERRAIN],[7,t.BULLDOZE],[21,t.RAPID_SPIN],[28,t.IRON_HEAD],[35,t.STOMPING_TANTRUM],[42,t.KNOCK_OFF],[49,t.EARTHQUAKE],[56,t.HEAVY_SLAM],[63,t.WILD_CHARGE],[70,t.ENDEAVOR],[77,t.MEGAHORN],[84,t.GIGA_IMPACT],[91,t.STEEL_ROLLER]],[e.IRON_BUNDLE]:[[w,t.ELECTRIC_TERRAIN],[1,t.PRESENT],[1,t.WATER_GUN],[7,t.POWDER_SNOW],[14,t.WHIRLPOOL],[21,t.TAKE_DOWN],[28,t.DRILL_PECK],[35,t.HELPING_HAND],[42,t.FREEZE_DRY],[49,t.FLIP_TURN],[56,t.ICE_BEAM],[63,t.AGILITY],[70,t.SNOWSCAPE],[77,t.HYDRO_PUMP],[84,t.AURORA_VEIL],[91,t.BLIZZARD]],[e.IRON_HANDS]:[[w,t.ELECTRIC_TERRAIN],[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.FOCUS_ENERGY],[1,t.ARM_THRUST],[7,t.FAKE_OUT],[14,t.WHIRLWIND],[21,t.THUNDER_PUNCH],[28,t.SLAM],[35,t.FORCE_PALM],[42,t.SEISMIC_TOSS],[49,t.CHARGE],[56,t.WILD_CHARGE],[63,t.CLOSE_COMBAT],[70,t.DETECT],[77,t.HEAVY_SLAM],[84,t.BELLY_DRUM],[91,t.FOCUS_PUNCH]],[e.IRON_JUGULIS]:[[w,t.ELECTRIC_TERRAIN],[1,t.FOCUS_ENERGY],[1,t.TRI_ATTACK],[1,t.AIR_CUTTER],[1,t.WORK_UP],[1,t.ELECTRIC_TERRAIN],[7,t.ROAR],[14,t.ASSURANCE],[21,t.DRAGON_BREATH],[28,t.SNARL],[35,t.CRUNCH],[42,t.HYPER_VOICE],[56,t.AIR_SLASH],[63,t.KNOCK_OFF],[70,t.DARK_PULSE],[77,t.OUTRAGE],[84,t.DRAGON_PULSE],[91,t.HYPER_BEAM]],[e.IRON_MOTH]:[[w,t.ELECTRIC_TERRAIN],[1,t.GUST],[1,t.WHIRLWIND],[1,t.EMBER],[1,t.ACID_SPRAY],[7,t.STRUGGLE_BUG],[14,t.FIRE_SPIN],[21,t.TAKE_DOWN],[28,t.LUNGE],[35,t.SCREECH],[42,t.DISCHARGE],[49,t.SLUDGE_WAVE],[56,t.FIERY_DANCE],[63,t.METAL_SOUND],[70,t.MORNING_SUN],[77,t.HURRICANE],[84,t.BUG_BUZZ],[91,t.OVERHEAT]],[e.IRON_THORNS]:[[w,t.ELECTRIC_TERRAIN],[1,t.ROCK_THROW],[1,t.IRON_DEFENSE],[1,t.THUNDER_FANG],[1,t.ICE_FANG],[1,t.FIRE_FANG],[7,t.SCREECH],[21,t.ROCK_TOMB],[28,t.BITE],[35,t.CHARGE],[42,t.ROCK_SLIDE],[49,t.SANDSTORM],[56,t.WILD_CHARGE],[63,t.PIN_MISSILE],[70,t.EARTHQUAKE],[77,t.STEALTH_ROCK],[84,t.STONE_EDGE],[91,t.GIGA_IMPACT]],[e.FRIGIBAX]:[[1,t.TACKLE],[1,t.LEER],[1,t.DRAGON_TAIL],[6,t.ICY_WIND],[12,t.DRAGON_BREATH],[18,t.FOCUS_ENERGY],[24,t.BITE],[29,t.ICE_FANG],[32,t.DRAGON_CLAW],[36,t.TAKE_DOWN],[40,t.ICE_BEAM],[44,t.CRUNCH],[48,t.ICICLE_CRASH]],[e.ARCTIBAX]:[[1,t.TACKLE],[1,t.LEER],[1,t.DRAGON_TAIL],[6,t.ICY_WIND],[12,t.DRAGON_BREATH],[18,t.FOCUS_ENERGY],[24,t.BITE],[29,t.ICE_FANG],[32,t.DRAGON_CLAW],[40,t.TAKE_DOWN],[45,t.ICE_BEAM],[50,t.CRUNCH],[55,t.ICICLE_CRASH]],[e.BAXCALIBUR]:[[Z,t.GLAIVE_RUSH],[1,t.TACKLE],[1,t.LEER],[1,t.ICE_SHARD],[1,t.DRAGON_TAIL],[1,t.BREAKING_SWIPE],[1,t.SNOWSCAPE],[6,t.ICY_WIND],[12,t.DRAGON_BREATH],[18,t.FOCUS_ENERGY],[24,t.BITE],[29,t.ICE_FANG],[35,t.DRAGON_CLAW],[42,t.TAKE_DOWN],[48,t.ICE_BEAM],[55,t.CRUNCH],[62,t.ICICLE_CRASH]],[e.GIMMIGHOUL]:[[1,t.TACKLE],[1,t.ASTONISH]],[e.GHOLDENGO]:[[1,t.TACKLE],[1,t.ASTONISH],[7,t.NIGHT_SHADE],[14,t.CONFUSE_RAY],[21,t.SUBSTITUTE],[28,t.METAL_SOUND],[35,t.SHADOW_BALL],[42,t.RECOVER],[49,t.POWER_GEM],[56,t.MAKE_IT_RAIN],[63,t.NASTY_PLOT],[70,t.MEMENTO]],[e.WO_CHIEN]:[[1,t.ABSORB],[1,t.SPITE],[1,t.MEAN_LOOK],[5,t.TICKLE],[10,t.PAYBACK],[15,t.POISON_POWDER],[15,t.STUN_SPORE],[20,t.MEGA_DRAIN],[25,t.LEECH_SEED],[30,t.GROWTH],[35,t.INGRAIN],[40,t.DARK_PULSE],[45,t.GIGA_DRAIN],[50,t.RUINATION],[55,t.FOUL_PLAY],[60,t.POWER_WHIP],[65,t.GRASSY_TERRAIN],[70,t.KNOCK_OFF],[75,t.LEAF_STORM]],[e.CHIEN_PAO]:[[1,t.SPITE],[1,t.POWDER_SNOW],[1,t.MEAN_LOOK],[5,t.ICY_WIND],[10,t.PAYBACK],[15,t.MIST],[15,t.HAZE],[20,t.ICE_SHARD],[25,t.SWORDS_DANCE],[30,t.SNOWSCAPE],[35,t.NIGHT_SLASH],[40,t.DARK_PULSE],[45,t.ICICLE_CRASH],[50,t.RUINATION],[55,t.SUCKER_PUNCH],[60,t.SACRED_SWORD],[65,t.RECOVER],[70,t.THROAT_CHOP],[75,t.SHEER_COLD]],[e.TING_LU]:[[1,t.SPITE],[1,t.MEAN_LOOK],[1,t.SAND_TOMB],[5,t.SPIKES],[10,t.PAYBACK],[15,t.STOMP],[20,t.BULLDOZE],[25,t.WHIRLWIND],[30,t.TAUNT],[35,t.THRASH],[40,t.DARK_PULSE],[45,t.STOMPING_TANTRUM],[50,t.RUINATION],[55,t.THROAT_CHOP],[60,t.ROCK_SLIDE],[65,t.MEMENTO],[70,t.EARTHQUAKE],[75,t.FISSURE]],[e.CHI_YU]:[[1,t.EMBER],[1,t.SPITE],[1,t.MEAN_LOOK],[5,t.FLAME_WHEEL],[10,t.PAYBACK],[15,t.WILL_O_WISP],[20,t.FLAME_CHARGE],[25,t.INCINERATE],[30,t.CONFUSE_RAY],[35,t.NASTY_PLOT],[40,t.DARK_PULSE],[45,t.LAVA_PLUME],[50,t.RUINATION],[55,t.BOUNCE],[60,t.SWAGGER],[65,t.INFERNO],[70,t.MEMENTO],[75,t.OVERHEAT]],[e.ROARING_MOON]:[[w,t.SUNNY_DAY],[w,t.JAW_LOCK],[w,t.BREAKING_SWIPE],[w,t.SCALE_SHOT],[1,t.LEER],[1,t.BITE],[1,t.FOCUS_ENERGY],[1,t.DRAGON_BREATH],[7,t.INCINERATE],[14,t.HEADBUTT],[21,t.SCARY_FACE],[28,t.DRAGON_CLAW],[35,t.ZEN_HEADBUTT],[42,t.FLAMETHROWER],[49,t.NIGHT_SLASH],[56,t.DRAGON_DANCE],[63,t.DRAGON_RUSH],[70,t.FLY],[77,t.THROAT_CHOP],[84,t.ROOST],[91,t.DOUBLE_EDGE]],[e.IRON_VALIANT]:[[w,t.ELECTRIC_TERRAIN],[1,t.DISABLE],[1,t.DOUBLE_TEAM],[1,t.FURY_CUTTER],[1,t.SHADOW_SNEAK],[7,t.HYPNOSIS],[14,t.FEINT],[21,t.FUTURE_SIGHT],[28,t.DAZZLING_GLEAM],[35,t.PSYCHO_CUT],[42,t.NIGHT_SLASH],[49,t.LEAF_BLADE],[56,t.MOONBLAST],[63,t.CLOSE_COMBAT],[70,t.KNOCK_OFF],[77,t.DESTINY_BOND],[84,t.WIDE_GUARD],[84,t.QUICK_GUARD],[91,t.SPIRIT_BREAK]],[e.KORAIDON]:[[1,t.SUNNY_DAY],[1,t.BREAKING_SWIPE],[7,t.ROCK_SMASH],[14,t.ANCIENT_POWER],[21,t.DRAIN_PUNCH],[28,t.BRICK_BREAK],[35,t.AGILITY],[42,t.DRAGON_CLAW],[49,t.FLAMETHROWER],[56,t.COLLISION_COURSE],[63,t.SCREECH],[70,t.COUNTER],[77,t.OUTRAGE],[84,t.CLOSE_COMBAT],[91,t.FLARE_BLITZ],[98,t.GIGA_IMPACT]],[e.MIRAIDON]:[[1,t.THUNDER_SHOCK],[1,t.DRAGON_BREATH],[1,t.ELECTRIC_TERRAIN],[7,t.SHOCK_WAVE],[14,t.CHARGE],[21,t.PARABOLIC_CHARGE],[28,t.DISCHARGE],[35,t.AGILITY],[42,t.DRAGON_PULSE],[56,t.ELECTRO_DRIFT],[63,t.METAL_SOUND],[70,t.MIRROR_COAT],[77,t.OUTRAGE],[84,t.THUNDER],[91,t.OVERHEAT],[98,t.HYPER_BEAM]],[e.WALKING_WAKE]:[[w,t.SUNNY_DAY],[w,t.HONE_CLAWS],[1,t.LEER],[1,t.ROAR],[1,t.TWISTER],[1,t.AQUA_JET],[7,t.BITE],[14,t.WATER_PULSE],[21,t.NOBLE_ROAR],[28,t.DRAGON_BREATH],[35,t.BREAKING_SWIPE],[42,t.DRAGON_RUSH],[56,t.HYDRO_STEAM],[63,t.DRAGON_PULSE],[70,t.OUTRAGE],[77,t.FLAMETHROWER],[84,t.HYDRO_PUMP]],[e.IRON_LEAVES]:[[w,t.ELECTRIC_TERRAIN],[w,t.QUASH],[1,t.LEER],[1,t.QUICK_ATTACK],[1,t.HELPING_HAND],[1,t.WORK_UP],[7,t.MAGICAL_LEAF],[14,t.RETALIATE],[21,t.QUICK_GUARD],[28,t.NIGHT_SLASH],[35,t.SWORDS_DANCE],[42,t.SACRED_SWORD],[49,t.LEAF_BLADE],[56,t.PSYBLADE],[63,t.CLOSE_COMBAT],[70,t.IMPRISON],[77,t.MEGAHORN],[84,t.ALLY_SWITCH],[91,t.SOLAR_BLADE]],[e.DIPPLIN]:[[Z,t.DOUBLE_HIT],[w,t.DRAGON_CHEER],[1,t.LEAFAGE],[1,t.WITHDRAW],[1,t.SWEET_SCENT],[1,t.RECYCLE],[1,t.ASTONISH],[4,t.DRAGON_TAIL],[8,t.GROWTH],[12,t.DRAGON_BREATH],[16,t.PROTECT],[20,t.BULLET_SEED],[28,t.SYRUP_BOMB],[32,t.DRAGON_PULSE],[36,t.RECOVER],[40,t.ENERGY_BALL],[44,t.SUBSTITUTE]],[e.POLTCHAGEIST]:[[1,t.STUN_SPORE],[1,t.WITHDRAW],[1,t.ASTONISH],[5,t.ABSORB],[12,t.LIFE_DEW],[18,t.FOUL_PLAY],[24,t.MEGA_DRAIN],[30,t.HEX],[36,t.RAGE_POWDER],[42,t.GIGA_DRAIN],[48,t.SHADOW_BALL],[54,t.MEMENTO],[60,t.LEAF_STORM]],[e.SINISTCHA]:[[Z,t.MATCHA_GOTCHA],[w,t.GIGA_DRAIN],[1,t.STUN_SPORE],[1,t.WITHDRAW],[1,t.ASTONISH],[6,t.ABSORB],[12,t.LIFE_DEW],[18,t.FOUL_PLAY],[24,t.MEGA_DRAIN],[30,t.HEX],[36,t.RAGE_POWDER],[42,t.STRENGTH_SAP],[48,t.SHADOW_BALL],[54,t.MEMENTO],[60,t.LEAF_STORM]],[e.OKIDOGI]:[[1,t.BITE],[1,t.LOW_KICK],[1,t.BULK_UP],[8,t.HOWL],[16,t.POISON_FANG],[24,t.FORCE_PALM],[32,t.COUNTER],[40,t.POISON_JAB],[48,t.BRUTAL_SWING],[56,t.CRUNCH],[64,t.SUPERPOWER],[72,t.GIGA_IMPACT]],[e.MUNKIDORI]:[[1,t.SCRATCH],[1,t.CONFUSION],[1,t.FAKE_OUT],[1,t.FLATTER],[8,t.HELPING_HAND],[16,t.PSYBEAM],[24,t.CLEAR_SMOG],[32,t.POISON_JAB],[40,t.PSYCHIC],[48,t.SLUDGE_WAVE],[56,t.NASTY_PLOT],[64,t.FUTURE_SIGHT],[72,t.PARTING_SHOT]],[e.FEZANDIPITI]:[[1,t.DOUBLE_KICK],[1,t.PECK],[1,t.POISON_GAS],[1,t.DISARMING_VOICE],[8,t.QUICK_ATTACK],[16,t.ATTRACT],[24,t.WING_ATTACK],[32,t.CROSS_POISON],[40,t.TAIL_SLAP],[48,t.BEAT_UP],[56,t.SWAGGER],[56,t.FLATTER],[64,t.ROOST],[72,t.MOONBLAST]],[e.OGERPON]:[[w,t.DOUBLE_KICK],[w,t.COUNTER],[w,t.RETALIATE],[w,t.HORN_LEECH],[1,t.VINE_WHIP],[1,t.LEECH_SEED],[1,t.QUICK_ATTACK],[1,t.FOLLOW_ME],[6,t.FOCUS_ENERGY],[12,t.GROWTH],[18,t.SLAM],[24,t.LOW_SWEEP],[30,t.IVY_CUDGEL],[36,t.THROAT_CHOP],[42,t.SYNTHESIS],[48,t.SPIKY_SHIELD],[54,t.POWER_WHIP],[60,t.SUPERPOWER],[66,t.WOOD_HAMMER]],[e.ARCHALUDON]:[[Z,t.ELECTRO_SHOT],[w,t.LASER_FOCUS],[1,t.LEER],[1,t.METAL_CLAW],[6,t.ROCK_SMASH],[12,t.HONE_CLAWS],[18,t.METAL_SOUND],[24,t.BREAKING_SWIPE],[30,t.DRAGON_TAIL],[36,t.IRON_DEFENSE],[42,t.FOCUS_ENERGY],[48,t.DRAGON_CLAW],[54,t.FLASH_CANNON],[60,t.METAL_BURST],[66,t.HYPER_BEAM]],[e.HYDRAPPLE]:[[Z,t.FICKLE_BEAM],[w,t.YAWN],[w,t.DOUBLE_HIT],[w,t.INFESTATION],[w,t.DRAGON_CHEER],[1,t.LEAFAGE],[1,t.WITHDRAW],[1,t.SWEET_SCENT],[1,t.RECYCLE],[1,t.ASTONISH],[4,t.DRAGON_TAIL],[8,t.GROWTH],[12,t.DRAGON_BREATH],[16,t.PROTECT],[20,t.BULLET_SEED],[28,t.SYRUP_BOMB],[32,t.DRAGON_PULSE],[36,t.RECOVER],[40,t.ENERGY_BALL],[44,t.SUBSTITUTE],[54,t.POWER_WHIP]],[e.GOUGING_FIRE]:[[w,t.DOUBLE_KICK],[w,t.ANCIENT_POWER],[w,t.NOBLE_ROAR],[1,t.STOMP],[1,t.LEER],[1,t.INCINERATE],[1,t.SUNNY_DAY],[7,t.FIRE_FANG],[14,t.HOWL],[21,t.BITE],[28,t.DRAGON_CLAW],[35,t.CRUSH_CLAW],[42,t.MORNING_SUN],[49,t.BURNING_BULWARK],[56,t.DRAGON_RUSH],[63,t.FIRE_BLAST],[70,t.LAVA_PLUME],[77,t.OUTRAGE],[84,t.FLARE_BLITZ],[91,t.RAGING_FURY]],[e.RAGING_BOLT]:[[w,t.ANCIENT_POWER],[1,t.TWISTER],[1,t.SUNNY_DAY],[1,t.SHOCK_WAVE],[1,t.STOMP],[7,t.CHARGE],[14,t.DRAGON_BREATH],[21,t.ELECTRIC_TERRAIN],[28,t.DISCHARGE],[35,t.DRAGON_TAIL],[42,t.CALM_MIND],[49,t.THUNDERCLAP],[56,t.DRAGON_HAMMER],[63,t.RISING_VOLTAGE],[70,t.DRAGON_PULSE],[77,t.ZAP_CANNON],[84,t.BODY_PRESS],[91,t.THUNDER]],[e.IRON_BOULDER]:[[1,t.HORN_ATTACK],[1,t.LEER],[1,t.ROCK_THROW],[1,t.ELECTRIC_TERRAIN],[7,t.QUICK_ATTACK],[14,t.SLASH],[21,t.AGILITY],[28,t.PSYCHO_CUT],[35,t.COUNTER],[42,t.ROCK_TOMB],[49,t.SACRED_SWORD],[56,t.MIGHTY_CLEAVE],[63,t.SWORDS_DANCE],[70,t.MEGAHORN],[77,t.QUICK_GUARD],[84,t.STONE_EDGE],[91,t.GIGA_IMPACT]],[e.IRON_CROWN]:[[1,t.LEER],[1,t.ELECTRIC_TERRAIN],[1,t.CONFUSION],[1,t.METAL_CLAW],[7,t.SMART_STRIKE],[14,t.SLASH],[21,t.IRON_DEFENSE],[28,t.PSYSHOCK],[35,t.PSYCHO_CUT],[42,t.FLASH_CANNON],[49,t.SACRED_SWORD],[56,t.TACHYON_CUTTER],[63,t.FUTURE_SIGHT],[70,t.VOLT_SWITCH],[77,t.QUICK_GUARD],[84,t.METAL_BURST],[91,t.HYPER_BEAM]],[e.TERAPAGOS]:[[1,t.WITHDRAW],[1,t.TRI_ATTACK],[1,t.RAPID_SPIN],[10,t.ANCIENT_POWER],[20,t.HEADBUTT],[30,t.PROTECT],[40,t.EARTH_POWER],[50,t.HEAVY_SLAM],[60,t.TERA_STARSTORM],[70,t.DOUBLE_EDGE],[80,t.ROCK_POLISH],[90,t.GYRO_BALL]],[e.PECHARUNT]:[[w,t.DEFENSE_CURL],[w,t.ROLLOUT],[w,t.MEAN_LOOK],[1,t.SMOG],[1,t.POISON_GAS],[1,t.MEMENTO],[1,t.ASTONISH],[8,t.WITHDRAW],[16,t.DESTINY_BOND],[24,t.FAKE_TEARS],[32,t.PARTING_SHOT],[40,t.SHADOW_BALL],[48,t.MALIGNANT_CHAIN],[56,t.TOXIC],[64,t.NASTY_PLOT],[72,t.RECOVER]],[e.ALOLA_RATTATA]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[4,t.QUICK_ATTACK],[7,t.FOCUS_ENERGY],[10,t.BITE],[13,t.PURSUIT],[16,t.HYPER_FANG],[19,t.ASSURANCE],[22,t.CRUNCH],[25,t.SUCKER_PUNCH],[28,t.SUPER_FANG],[31,t.DOUBLE_EDGE],[34,t.ENDEAVOR]],[e.ALOLA_RATICATE]:[[Z,t.SCARY_FACE],[1,t.SWORDS_DANCE],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.QUICK_ATTACK],[1,t.FOCUS_ENERGY],[10,t.BITE],[13,t.PURSUIT],[16,t.HYPER_FANG],[19,t.ASSURANCE],[24,t.CRUNCH],[29,t.SUCKER_PUNCH],[34,t.SUPER_FANG],[39,t.DOUBLE_EDGE],[44,t.ENDEAVOR]],[e.ALOLA_RAICHU]:[[Z,t.PSYCHIC],[Z,t.ZIPPY_ZAP],[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.THUNDER_SHOCK],[1,t.THUNDER_WAVE],[1,t.THUNDER],[1,t.AGILITY],[1,t.QUICK_ATTACK],[1,t.DOUBLE_TEAM],[1,t.LIGHT_SCREEN],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.SPARK],[1,t.IRON_TAIL],[1,t.FEINT],[1,t.NASTY_PLOT],[1,t.DISCHARGE],[1,t.ELECTRO_BALL],[1,t.PLAY_NICE],[1,t.NUZZLE],[5,t.THUNDERBOLT],[50,t.PIKA_PAPOW]],[e.ALOLA_SANDSHREW]:[[1,t.SCRATCH],[1,t.DEFENSE_CURL],[3,t.MIST],[6,t.POWDER_SNOW],[9,t.ROLLOUT],[12,t.FURY_CUTTER],[15,t.RAPID_SPIN],[18,t.METAL_CLAW],[21,t.SWIFT],[24,t.FURY_SWIPES],[27,t.IRON_DEFENSE],[30,t.SLASH],[33,t.IRON_HEAD],[36,t.GYRO_BALL],[39,t.SWORDS_DANCE],[42,t.SNOWSCAPE],[45,t.BLIZZARD]],[e.ALOLA_SANDSLASH]:[[Z,t.ICICLE_SPEAR],[w,t.SCRATCH],[w,t.MIST],[w,t.BLIZZARD],[w,t.DEFENSE_CURL],[w,t.SWIFT],[w,t.FURY_SWIPES],[w,t.POWDER_SNOW],[w,t.ROLLOUT],[w,t.FURY_CUTTER],[w,t.RAPID_SPIN],[w,t.IRON_DEFENSE],[w,t.GYRO_BALL],[w,t.METAL_BURST],[w,t.IRON_HEAD],[w,t.SNOWSCAPE],[1,t.ICICLE_CRASH],[1,t.METAL_CLAW],[1,t.SLASH],[1,t.SWORDS_DANCE],[1,t.ICE_BALL]],[e.ALOLA_VULPIX]:[[1,t.TAIL_WHIP],[1,t.POWDER_SNOW],[4,t.DISABLE],[8,t.ICE_SHARD],[12,t.SPITE],[16,t.ICY_WIND],[20,t.CONFUSE_RAY],[24,t.AURORA_BEAM],[28,t.EXTRASENSORY],[32,t.ICE_BEAM],[36,t.IMPRISON],[40,t.MIST],[44,t.AURORA_VEIL],[48,t.FREEZE_DRY],[52,t.BLIZZARD]],[e.ALOLA_NINETALES]:[[Z,t.DAZZLING_GLEAM],[w,t.DISABLE],[w,t.MIST],[w,t.ICE_BEAM],[w,t.AURORA_BEAM],[w,t.CONFUSE_RAY],[w,t.SPITE],[w,t.POWDER_SNOW],[w,t.EXTRASENSORY],[w,t.NASTY_PLOT],[w,t.ICE_SHARD],[w,t.FREEZE_DRY],[w,t.AURORA_VEIL],[1,t.ICY_WIND],[1,t.IMPRISON],[1,t.BLIZZARD],[1,t.TAIL_WHIP]],[e.ALOLA_DIGLETT]:[[1,t.SAND_ATTACK],[1,t.METAL_CLAW],[4,t.GROWL],[8,t.ASTONISH],[12,t.MUD_SLAP],[16,t.BULLDOZE],[20,t.SUCKER_PUNCH],[24,t.IRON_HEAD],[28,t.SANDSTORM],[32,t.DIG],[36,t.EARTH_POWER],[40,t.EARTHQUAKE],[44,t.FISSURE]],[e.ALOLA_DUGTRIO]:[[Z,t.SAND_TOMB],[1,t.SAND_ATTACK],[1,t.GROWL],[1,t.TRI_ATTACK],[1,t.METAL_CLAW],[1,t.ASTONISH],[1,t.NIGHT_SLASH],[1,t.ROTOTILLER],[12,t.MUD_SLAP],[16,t.BULLDOZE],[20,t.SUCKER_PUNCH],[24,t.IRON_HEAD],[30,t.SANDSTORM],[36,t.DIG],[42,t.EARTH_POWER],[48,t.EARTHQUAKE],[54,t.FISSURE]],[e.ALOLA_MEOWTH]:[[1,t.GROWL],[1,t.FAKE_OUT],[4,t.FEINT],[8,t.SCRATCH],[12,t.PAY_DAY],[16,t.BITE],[20,t.TAUNT],[24,t.ASSURANCE],[29,t.FURY_SWIPES],[32,t.SCREECH],[36,t.NIGHT_SLASH],[40,t.NASTY_PLOT],[44,t.PLAY_ROUGH]],[e.ALOLA_PERSIAN]:[[Z,t.POWER_GEM],[1,t.SCRATCH],[1,t.GROWL],[1,t.FAKE_OUT],[1,t.FEINT],[1,t.SWITCHEROO],[1,t.QUASH],[12,t.PAY_DAY],[16,t.BITE],[20,t.TAUNT],[24,t.ASSURANCE],[31,t.FURY_SWIPES],[36,t.SCREECH],[42,t.NIGHT_SLASH],[48,t.NASTY_PLOT],[54,t.PLAY_ROUGH]],[e.ALOLA_GEODUDE]:[[1,t.TACKLE],[1,t.DEFENSE_CURL],[4,t.CHARGE],[6,t.ROCK_POLISH],[10,t.ROLLOUT],[12,t.SPARK],[16,t.ROCK_THROW],[18,t.SMACK_DOWN],[22,t.THUNDER_PUNCH],[24,t.SELF_DESTRUCT],[28,t.STEALTH_ROCK],[30,t.ROCK_BLAST],[34,t.DISCHARGE],[36,t.EXPLOSION],[40,t.DOUBLE_EDGE],[42,t.STONE_EDGE]],[e.ALOLA_GRAVELER]:[[1,t.TACKLE],[1,t.DEFENSE_CURL],[1,t.CHARGE],[1,t.ROCK_POLISH],[10,t.ROLLOUT],[12,t.SPARK],[16,t.ROCK_THROW],[18,t.SMACK_DOWN],[22,t.THUNDER_PUNCH],[24,t.SELF_DESTRUCT],[30,t.STEALTH_ROCK],[34,t.ROCK_BLAST],[40,t.DISCHARGE],[44,t.EXPLOSION],[50,t.DOUBLE_EDGE],[54,t.STONE_EDGE]],[e.ALOLA_GOLEM]:[[1,t.TACKLE],[1,t.DEFENSE_CURL],[1,t.CHARGE],[1,t.ROCK_POLISH],[1,t.ROLLOUT],[1,t.HEAVY_SLAM],[12,t.SPARK],[16,t.ROCK_THROW],[18,t.SMACK_DOWN],[22,t.THUNDER_PUNCH],[24,t.SELF_DESTRUCT],[30,t.STEALTH_ROCK],[34,t.ROCK_BLAST],[40,t.DISCHARGE],[44,t.EXPLOSION],[50,t.DOUBLE_EDGE],[54,t.STONE_EDGE]],[e.ALOLA_GRIMER]:[[1,t.POUND],[1,t.POISON_GAS],[4,t.HARDEN],[7,t.BITE],[12,t.DISABLE],[15,t.ACID_SPRAY],[18,t.POISON_FANG],[21,t.MINIMIZE],[26,t.TOXIC],[29,t.KNOCK_OFF],[32,t.CRUNCH],[37,t.SCREECH],[40,t.GUNK_SHOT],[43,t.ACID_ARMOR],[46,t.BELCH],[48,t.MEMENTO]],[e.ALOLA_MUK]:[[1,t.POUND],[1,t.BITE],[1,t.HARDEN],[1,t.POISON_GAS],[12,t.DISABLE],[15,t.ACID_SPRAY],[18,t.POISON_FANG],[21,t.MINIMIZE],[26,t.TOXIC],[29,t.KNOCK_OFF],[32,t.CRUNCH],[37,t.SCREECH],[40,t.GUNK_SHOT],[46,t.ACID_ARMOR],[52,t.BELCH],[57,t.MEMENTO]],[e.ALOLA_EXEGGUTOR]:[[Z,t.DRAGON_HAMMER],[w,t.GROWTH],[1,t.BARRAGE],[1,t.SEED_BOMB],[1,t.PSYSHOCK],[1,t.WOOD_HAMMER],[1,t.LEAF_STORM],[1,t.MEGA_DRAIN],[1,t.CONFUSION],[1,t.SYNTHESIS],[1,t.BULLET_SEED],[1,t.GIGA_DRAIN],[1,t.EXTRASENSORY],[1,t.UPROAR],[1,t.WORRY_SEED],[1,t.SOLAR_BEAM],[1,t.ABSORB],[1,t.HYPNOSIS],[1,t.REFLECT],[1,t.LEECH_SEED]],[e.ALOLA_MAROWAK]:[[Z,t.SHADOW_BONE],[1,t.BONE_CLUB],[1,t.HEADBUTT],[1,t.DOUBLE_EDGE],[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.FIRE_SPIN],[1,t.FOCUS_ENERGY],[1,t.MUD_SLAP],[1,t.FALSE_SWIPE],[1,t.RETALIATE],[12,t.FLAME_WHEEL],[16,t.HEX],[20,t.FLING],[24,t.STOMPING_TANTRUM],[31,t.BONE_RUSH],[36,t.WILL_O_WISP],[42,t.ENDEAVOR],[48,t.BONEMERANG],[54,t.THRASH],[60,t.FLARE_BLITZ]],[e.ETERNAL_FLOETTE]:[[1,t.VINE_WHIP],[1,t.TACKLE],[1,t.FAIRY_WIND],[10,t.LUCKY_CHANT],[15,t.RAZOR_LEAF],[20,t.WISH],[25,t.MAGICAL_LEAF],[27,t.GRASSY_TERRAIN],[33,t.PETAL_BLIZZARD],[38,t.AROMATHERAPY],[43,t.MISTY_TERRAIN],[46,t.MOONBLAST],[50,t.LIGHT_OF_RUIN],[51,t.PETAL_DANCE],[58,t.SOLAR_BEAM]],[e.GALAR_MEOWTH]:[[1,t.GROWL],[1,t.FAKE_OUT],[4,t.HONE_CLAWS],[8,t.SCRATCH],[12,t.PAY_DAY],[16,t.METAL_CLAW],[20,t.TAUNT],[24,t.SWAGGER],[29,t.FURY_SWIPES],[32,t.SCREECH],[36,t.SLASH],[40,t.METAL_SOUND],[44,t.THRASH]],[e.GALAR_PONYTA]:[[1,t.TACKLE],[1,t.GROWL],[5,t.TAIL_WHIP],[10,t.CONFUSION],[15,t.FAIRY_WIND],[20,t.AGILITY],[25,t.PSYBEAM],[30,t.STOMP],[35,t.HEAL_PULSE],[41,t.TAKE_DOWN],[45,t.DAZZLING_GLEAM],[50,t.PSYCHIC],[55,t.HEALING_WISH]],[e.GALAR_RAPIDASH]:[[Z,t.PSYCHO_CUT],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.CONFUSION],[1,t.QUICK_ATTACK],[1,t.MEGAHORN],[15,t.FAIRY_WIND],[20,t.AGILITY],[25,t.PSYBEAM],[30,t.STOMP],[35,t.HEAL_PULSE],[43,t.TAKE_DOWN],[49,t.DAZZLING_GLEAM],[56,t.PSYCHIC],[63,t.HEALING_WISH]],[e.GALAR_SLOWPOKE]:[[1,t.TACKLE],[1,t.CURSE],[3,t.GROWL],[6,t.ACID],[9,t.YAWN],[12,t.CONFUSION],[15,t.DISABLE],[18,t.WATER_PULSE],[21,t.HEADBUTT],[24,t.ZEN_HEADBUTT],[27,t.AMNESIA],[30,t.SURF],[33,t.SLACK_OFF],[36,t.PSYCHIC],[39,t.PSYCH_UP],[42,t.RAIN_DANCE],[45,t.HEAL_PULSE]],[e.GALAR_SLOWBRO]:[[Z,t.SHELL_SIDE_ARM],[1,t.TACKLE],[1,t.GROWL],[1,t.ACID],[1,t.WITHDRAW],[1,t.CURSE],[9,t.YAWN],[12,t.CONFUSION],[15,t.DISABLE],[18,t.WATER_PULSE],[21,t.HEADBUTT],[24,t.ZEN_HEADBUTT],[27,t.AMNESIA],[30,t.SURF],[33,t.SLACK_OFF],[36,t.PSYCHIC],[39,t.PSYCH_UP],[42,t.RAIN_DANCE],[45,t.HEAL_PULSE]],[e.GALAR_FARFETCHD]:[[1,t.SAND_ATTACK],[1,t.PECK],[5,t.LEER],[10,t.FURY_CUTTER],[15,t.ROCK_SMASH],[20,t.BRUTAL_SWING],[25,t.DETECT],[30,t.KNOCK_OFF],[35,t.DEFOG],[40,t.BRICK_BREAK],[45,t.SWORDS_DANCE],[50,t.SLAM],[55,t.LEAF_BLADE],[60,t.FINAL_GAMBIT],[65,t.BRAVE_BIRD]],[e.GALAR_WEEZING]:[[Z,t.DOUBLE_HIT],[1,t.TACKLE],[1,t.SMOKESCREEN],[1,t.HAZE],[1,t.SMOG],[1,t.POISON_GAS],[1,t.HEAT_WAVE],[1,t.DEFOG],[1,t.AROMATIC_MIST],[1,t.STRANGE_STEAM],[12,t.CLEAR_SMOG],[16,t.ASSURANCE],[20,t.SLUDGE],[24,t.FAIRY_WIND],[28,t.SELF_DESTRUCT],[32,t.SLUDGE_BOMB],[38,t.TOXIC],[44,t.BELCH],[50,t.EXPLOSION],[56,t.MEMENTO],[62,t.DESTINY_BOND],[68,t.MISTY_TERRAIN]],[e.GALAR_MR_MIME]:[[1,t.POUND],[1,t.BARRIER],[1,t.TICKLE],[1,t.MIMIC],[1,t.LIGHT_SCREEN],[1,t.REFLECT],[1,t.PROTECT],[1,t.SAFEGUARD],[1,t.BATON_PASS],[1,t.ENCORE],[1,t.RAPID_SPIN],[1,t.ROLE_PLAY],[1,t.RECYCLE],[1,t.COPYCAT],[1,t.ICE_SHARD],[1,t.MISTY_TERRAIN],[1,t.DAZZLING_GLEAM],[12,t.CONFUSION],[16,t.ALLY_SWITCH],[20,t.ICY_WIND],[24,t.DOUBLE_KICK],[28,t.PSYBEAM],[32,t.HYPNOSIS],[36,t.MIRROR_COAT],[40,t.SUCKER_PUNCH],[44,t.FREEZE_DRY],[48,t.PSYCHIC],[52,t.TEETER_DANCE]],[e.GALAR_ARTICUNO]:[[1,t.GUST],[5,t.CONFUSION],[10,t.REFLECT],[15,t.HYPNOSIS],[20,t.AGILITY],[25,t.ANCIENT_POWER],[30,t.TAILWIND],[35,t.PSYCHO_CUT],[40,t.RECOVER],[45,t.FREEZING_GLARE],[50,t.DREAM_EATER],[55,t.HURRICANE],[60,t.DOUBLE_TEAM],[65,t.FUTURE_SIGHT],[70,t.TRICK_ROOM]],[e.GALAR_ZAPDOS]:[[1,t.PECK],[1,t.FOCUS_ENERGY],[5,t.ROCK_SMASH],[10,t.LIGHT_SCREEN],[15,t.PLUCK],[20,t.AGILITY],[25,t.ANCIENT_POWER],[30,t.BRICK_BREAK],[35,t.DRILL_PECK],[40,t.QUICK_GUARD],[45,t.THUNDEROUS_KICK],[50,t.BULK_UP],[55,t.COUNTER],[60,t.DETECT],[65,t.CLOSE_COMBAT],[70,t.REVERSAL]],[e.GALAR_MOLTRES]:[[1,t.GUST],[1,t.LEER],[5,t.PAYBACK],[10,t.SAFEGUARD],[15,t.WING_ATTACK],[20,t.AGILITY],[25,t.ANCIENT_POWER],[30,t.SUCKER_PUNCH],[35,t.AIR_SLASH],[40,t.AFTER_YOU],[45,t.FIERY_WRATH],[50,t.NASTY_PLOT],[55,t.HURRICANE],[60,t.ENDURE],[65,t.MEMENTO],[70,t.SKY_ATTACK]],[e.GALAR_SLOWKING]:[[Z,t.EERIE_SPELL],[w,t.FUTURE_SIGHT],[w,t.CHILLY_RECEPTION],[w,t.TOXIC],[1,t.POWER_GEM],[1,t.NASTY_PLOT],[1,t.SWAGGER],[1,t.TACKLE],[1,t.CURSE],[1,t.GROWL],[1,t.ACID],[9,t.YAWN],[12,t.CONFUSION],[15,t.DISABLE],[18,t.WATER_PULSE],[21,t.HEADBUTT],[24,t.ZEN_HEADBUTT],[27,t.AMNESIA],[30,t.SURF],[33,t.SLACK_OFF],[36,t.PSYCHIC],[39,t.PSYCH_UP],[42,t.RAIN_DANCE],[45,t.HEAL_PULSE]],[e.GALAR_CORSOLA]:[[1,t.TACKLE],[1,t.HARDEN],[5,t.ASTONISH],[10,t.DISABLE],[15,t.SPITE],[20,t.ANCIENT_POWER],[25,t.HEX],[30,t.CURSE],[35,t.STRENGTH_SAP],[40,t.POWER_GEM],[45,t.NIGHT_SHADE],[50,t.GRUDGE],[55,t.MIRROR_COAT]],[e.GALAR_ZIGZAGOON]:[[1,t.TACKLE],[1,t.LEER],[3,t.SAND_ATTACK],[6,t.LICK],[9,t.SNARL],[12,t.HEADBUTT],[15,t.BABY_DOLL_EYES],[18,t.PIN_MISSILE],[21,t.REST],[24,t.TAKE_DOWN],[27,t.SCARY_FACE],[30,t.COUNTER],[33,t.TAUNT],[36,t.DOUBLE_EDGE]],[e.GALAR_LINOONE]:[[Z,t.NIGHT_SLASH],[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.PIN_MISSILE],[1,t.LEER],[1,t.LICK],[1,t.SWITCHEROO],[1,t.BABY_DOLL_EYES],[9,t.SNARL],[12,t.HEADBUTT],[15,t.HONE_CLAWS],[18,t.FURY_SWIPES],[23,t.REST],[28,t.TAKE_DOWN],[33,t.SCARY_FACE],[38,t.COUNTER],[43,t.TAUNT],[48,t.DOUBLE_EDGE]],[e.GALAR_DARUMAKA]:[[1,t.TACKLE],[1,t.POWDER_SNOW],[4,t.TAUNT],[8,t.BITE],[12,t.AVALANCHE],[16,t.WORK_UP],[20,t.ICE_FANG],[24,t.HEADBUTT],[28,t.ICE_PUNCH],[32,t.UPROAR],[36,t.BELLY_DRUM],[40,t.BLIZZARD],[44,t.THRASH],[48,t.SUPERPOWER]],[e.GALAR_DARMANITAN]:[[Z,t.ICICLE_CRASH],[1,t.TACKLE],[1,t.BITE],[1,t.POWDER_SNOW],[1,t.TAUNT],[12,t.AVALANCHE],[16,t.WORK_UP],[20,t.ICE_FANG],[24,t.HEADBUTT],[28,t.ICE_PUNCH],[32,t.UPROAR],[38,t.BELLY_DRUM],[44,t.BLIZZARD],[50,t.THRASH],[56,t.SUPERPOWER]],[e.GALAR_YAMASK]:[[1,t.PROTECT],[1,t.ASTONISH],[4,t.HAZE],[8,t.NIGHT_SHADE],[12,t.DISABLE],[16,t.BRUTAL_SWING],[20,t.CRAFTY_SHIELD],[24,t.HEX],[28,t.MEAN_LOOK],[32,t.SLAM],[36,t.CURSE],[40,t.SHADOW_BALL],[44,t.EARTHQUAKE],[48,t.GUARD_SPLIT],[48,t.POWER_SPLIT],[52,t.DESTINY_BOND]],[e.GALAR_STUNFISK]:[[1,t.TACKLE],[1,t.WATER_GUN],[1,t.MUD_SLAP],[1,t.METAL_CLAW],[5,t.ENDURE],[10,t.MUD_SHOT],[15,t.REVENGE],[20,t.METAL_SOUND],[25,t.SUCKER_PUNCH],[30,t.IRON_DEFENSE],[35,t.BOUNCE],[40,t.MUDDY_WATER],[45,t.SNAP_TRAP],[50,t.FLAIL],[55,t.FISSURE]],[e.HISUI_GROWLITHE]:[[1,t.LEER],[1,t.EMBER],[4,t.HOWL],[8,t.BITE],[12,t.FLAME_WHEEL],[16,t.HELPING_HAND],[24,t.FIRE_FANG],[28,t.RETALIATE],[32,t.CRUNCH],[36,t.TAKE_DOWN],[40,t.FLAMETHROWER],[44,t.ROAR],[48,t.ROCK_SLIDE],[52,t.REVERSAL],[56,t.FLARE_BLITZ]],[e.HISUI_ARCANINE]:[[Z,t.EXTREME_SPEED],[1,t.TAKE_DOWN],[1,t.LEER],[1,t.BITE],[1,t.ROAR],[1,t.EMBER],[1,t.ROCK_THROW],[1,t.AGILITY],[1,t.ROCK_SLIDE],[1,t.FLAME_WHEEL],[1,t.REVERSAL],[1,t.CRUNCH],[1,t.HELPING_HAND],[1,t.HOWL],[1,t.FLARE_BLITZ],[1,t.FIRE_FANG],[1,t.RETALIATE],[5,t.FLAMETHROWER],[64,t.RAGING_FURY]],[e.HISUI_VOLTORB]:[[1,t.TACKLE],[1,t.CHARGE],[4,t.THUNDER_SHOCK],[6,t.STUN_SPORE],[9,t.BULLET_SEED],[11,t.ROLLOUT],[13,t.SCREECH],[16,t.CHARGE_BEAM],[20,t.SWIFT],[22,t.ELECTRO_BALL],[26,t.SELF_DESTRUCT],[29,t.ENERGY_BALL],[34,t.SEED_BOMB],[34,t.DISCHARGE],[41,t.EXPLOSION],[46,t.GYRO_BALL],[50,t.GRASSY_TERRAIN]],[e.HISUI_ELECTRODE]:[[Z,t.CHLOROBLAST],[1,t.TACKLE],[1,t.CHARGE],[4,t.THUNDER_SHOCK],[6,t.STUN_SPORE],[9,t.BULLET_SEED],[11,t.ROLLOUT],[13,t.SCREECH],[16,t.CHARGE_BEAM],[20,t.SWIFT],[22,t.ELECTRO_BALL],[26,t.SELF_DESTRUCT],[29,t.ENERGY_BALL],[34,t.SEED_BOMB],[34,t.DISCHARGE],[41,t.EXPLOSION],[46,t.GYRO_BALL],[50,t.GRASSY_TERRAIN]],[e.HISUI_TYPHLOSION]:[[Z,t.INFERNAL_PARADE],[1,t.TACKLE],[1,t.DOUBLE_EDGE],[1,t.LEER],[1,t.EMBER],[1,t.SMOKESCREEN],[1,t.ERUPTION],[1,t.GYRO_BALL],[13,t.QUICK_ATTACK],[20,t.FLAME_WHEEL],[24,t.DEFENSE_CURL],[31,t.SWIFT],[35,t.FLAME_CHARGE],[43,t.LAVA_PLUME],[48,t.FLAMETHROWER],[56,t.INFERNO],[61,t.ROLLOUT],[74,t.OVERHEAT]],[e.HISUI_QWILFISH]:[[1,t.TACKLE],[1,t.POISON_STING],[4,t.HARDEN],[8,t.BITE],[12,t.FELL_STINGER],[16,t.MINIMIZE],[20,t.SPIKES],[24,t.BRINE],[28,t.BARB_BARRAGE],[32,t.PIN_MISSILE],[36,t.TOXIC_SPIKES],[40,t.STOCKPILE],[40,t.SPIT_UP],[44,t.TOXIC],[48,t.CRUNCH],[52,t.ACUPRESSURE],[56,t.DESTINY_BOND]],[e.HISUI_SNEASEL]:[[1,t.SCRATCH],[1,t.LEER],[1,t.ROCK_SMASH],[6,t.TAUNT],[12,t.QUICK_ATTACK],[18,t.METAL_CLAW],[24,t.POISON_JAB],[30,t.BRICK_BREAK],[36,t.HONE_CLAWS],[42,t.SLASH],[48,t.AGILITY],[54,t.SCREECH],[60,t.CLOSE_COMBAT]],[e.HISUI_SAMUROTT]:[[Z,t.CEASELESS_EDGE],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.WATER_GUN],[1,t.SOAK],[1,t.SLASH],[1,t.MEGAHORN],[1,t.SUCKER_PUNCH],[13,t.FOCUS_ENERGY],[18,t.RAZOR_SHELL],[21,t.FURY_CUTTER],[25,t.WATER_PULSE],[29,t.AERIAL_ACE],[34,t.AQUA_JET],[39,t.ENCORE],[46,t.AQUA_TAIL],[51,t.RETALIATE],[58,t.SWORDS_DANCE],[63,t.HYDRO_PUMP]],[e.HISUI_LILLIGANT]:[[Z,t.VICTORY_DANCE],[1,t.MEGA_KICK],[1,t.ABSORB],[1,t.MEGA_DRAIN],[1,t.LEECH_SEED],[1,t.GROWTH],[1,t.STUN_SPORE],[1,t.SLEEP_POWDER],[1,t.GIGA_DRAIN],[1,t.CHARM],[1,t.SYNTHESIS],[1,t.SUNNY_DAY],[1,t.HELPING_HAND],[1,t.TEETER_DANCE],[1,t.MAGICAL_LEAF],[1,t.LEAF_BLADE],[1,t.ENERGY_BALL],[1,t.DEFOG],[1,t.LEAF_STORM],[1,t.ENTRAINMENT],[1,t.AFTER_YOU],[1,t.PETAL_BLIZZARD],[1,t.SOLAR_BLADE],[5,t.AXE_KICK]],[e.HISUI_ZORUA]:[[1,t.SCRATCH],[1,t.LEER],[4,t.TORMENT],[8,t.HONE_CLAWS],[12,t.SHADOW_SNEAK],[16,t.CURSE],[20,t.TAUNT],[24,t.KNOCK_OFF],[28,t.SPITE],[32,t.AGILITY],[36,t.SHADOW_BALL],[40,t.BITTER_MALICE],[44,t.NASTY_PLOT],[48,t.FOUL_PLAY]],[e.HISUI_ZOROARK]:[[Z,t.SHADOW_CLAW],[1,t.SCRATCH],[1,t.LEER],[1,t.TORMENT],[1,t.U_TURN],[1,t.HONE_CLAWS],[12,t.SHADOW_SNEAK],[16,t.CURSE],[20,t.TAUNT],[24,t.KNOCK_OFF],[28,t.SPITE],[34,t.AGILITY],[40,t.SHADOW_BALL],[46,t.BITTER_MALICE],[52,t.NASTY_PLOT],[58,t.FOUL_PLAY]],[e.HISUI_BRAVIARY]:[[Z,t.ESPER_WING],[w,t.BRAVE_BIRD],[1,t.WING_ATTACK],[1,t.LEER],[1,t.PECK],[1,t.SKY_ATTACK],[1,t.SUPERPOWER],[1,t.HONE_CLAWS],[18,t.TAILWIND],[24,t.SCARY_FACE],[30,t.AERIAL_ACE],[36,t.SLASH],[42,t.WHIRLWIND],[48,t.CRUSH_CLAW],[57,t.AIR_SLASH],[64,t.DEFOG],[72,t.THRASH],[80,t.HURRICANE]],[e.HISUI_SLIGGOO]:[[Z,t.SHELTER],[1,t.TACKLE],[1,t.WATER_GUN],[1,t.ABSORB],[1,t.ACID_ARMOR],[1,t.DRAGON_BREATH],[1,t.BODY_SLAM],[15,t.PROTECT],[20,t.FLAIL],[25,t.WATER_PULSE],[30,t.RAIN_DANCE],[35,t.DRAGON_PULSE],[43,t.CURSE],[49,t.IRON_HEAD],[56,t.MUDDY_WATER]],[e.HISUI_GOODRA]:[[Z,t.IRON_TAIL],[1,t.TACKLE],[1,t.WATER_GUN],[1,t.ABSORB],[1,t.ACID_ARMOR],[1,t.DRAGON_BREATH],[1,t.FEINT],[1,t.ACID_SPRAY],[1,t.TEARFUL_LOOK],[1,t.SHELTER],[15,t.PROTECT],[20,t.FLAIL],[25,t.WATER_PULSE],[30,t.RAIN_DANCE],[35,t.DRAGON_PULSE],[43,t.CURSE],[49,t.BODY_SLAM],[49,t.IRON_HEAD],[58,t.MUDDY_WATER],[67,t.HEAVY_SLAM]],[e.HISUI_AVALUGG]:[[Z,t.ROCK_SLIDE],[1,t.TACKLE],[1,t.HARDEN],[1,t.POWDER_SNOW],[1,t.RAPID_SPIN],[1,t.WIDE_GUARD],[9,t.CURSE],[12,t.ICY_WIND],[15,t.PROTECT],[18,t.AVALANCHE],[21,t.BITE],[24,t.ICE_FANG],[27,t.IRON_DEFENSE],[30,t.RECOVER],[33,t.CRUNCH],[36,t.TAKE_DOWN],[41,t.BLIZZARD],[46,t.DOUBLE_EDGE],[51,t.STONE_EDGE],[61,t.MOUNTAIN_GALE]],[e.HISUI_DECIDUEYE]:[[Z,t.TRIPLE_ARROWS],[w,t.NASTY_PLOT],[1,t.TACKLE],[1,t.GROWL],[1,t.U_TURN],[1,t.ASTONISH],[1,t.LEAF_STORM],[1,t.LEAFAGE],[9,t.PECK],[12,t.SHADOW_SNEAK],[15,t.RAZOR_LEAF],[20,t.SYNTHESIS],[25,t.PLUCK],[30,t.BULK_UP],[37,t.SUCKER_PUNCH],[44,t.LEAF_BLADE],[51,t.FEATHER_DANCE],[58,t.BRAVE_BIRD]],[e.PALDEA_TAUROS]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[5,t.WORK_UP],[10,t.DOUBLE_KICK],[15,t.ASSURANCE],[20,t.HEADBUTT],[25,t.SCARY_FACE],[30,t.ZEN_HEADBUTT],[35,t.RAGING_BULL],[40,t.REST],[45,t.SWAGGER],[50,t.THRASH],[55,t.DOUBLE_EDGE],[60,t.CLOSE_COMBAT]],[e.PALDEA_WOOPER]:[[1,t.TAIL_WHIP],[1,t.MUD_SHOT],[4,t.TACKLE],[8,t.POISON_TAIL],[12,t.TOXIC_SPIKES],[16,t.SLAM],[21,t.YAWN],[24,t.POISON_JAB],[28,t.SLUDGE_WAVE],[32,t.AMNESIA],[36,t.TOXIC],[40,t.EARTHQUAKE]],[e.BLOODMOON_URSALUNA]:[[w,t.MOONLIGHT],[1,t.HEADLONG_RUSH],[1,t.SCRATCH],[1,t.LEER],[1,t.LICK],[8,t.FURY_SWIPES],[13,t.PAYBACK],[17,t.HARDEN],[22,t.SLASH],[25,t.PLAY_NICE],[35,t.SCARY_FACE],[41,t.REST],[41,t.SNORE],[48,t.EARTH_POWER],[56,t.MOONBLAST],[64,t.HAMMER_ARM],[70,t.BLOOD_MOON]]},JO={[e.PIKACHU]:{1:[[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.THUNDER_SHOCK],[1,t.QUICK_ATTACK],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.NASTY_PLOT],[1,t.PLAY_NICE],[1,t.NUZZLE],[4,t.THUNDER_WAVE],[8,t.DOUBLE_TEAM],[12,t.ELECTRO_BALL],[16,t.FEINT],[20,t.ZIPPY_ZAP],[24,t.AGILITY],[28,t.IRON_TAIL],[32,t.DISCHARGE],[34,t.FLOATY_FALL],[36,t.THUNDERBOLT],[40,t.LIGHT_SCREEN],[42,t.SPLISHY_SPLASH],[44,t.THUNDER],[48,t.PIKA_PAPOW]],2:[[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.THUNDER_SHOCK],[1,t.QUICK_ATTACK],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.NASTY_PLOT],[1,t.PLAY_NICE],[1,t.NUZZLE],[4,t.THUNDER_WAVE],[8,t.DOUBLE_TEAM],[12,t.ELECTRO_BALL],[16,t.FEINT],[20,t.SPARK],[24,t.AGILITY],[28,t.IRON_TAIL],[32,t.DISCHARGE],[36,t.THUNDERBOLT],[40,t.LIGHT_SCREEN],[44,t.THUNDER],[48,t.PIKA_PAPOW]],3:[[1,t.METEOR_MASH],[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.THUNDER_SHOCK],[1,t.QUICK_ATTACK],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.NASTY_PLOT],[1,t.PLAY_NICE],[1,t.NUZZLE],[4,t.THUNDER_WAVE],[8,t.DOUBLE_TEAM],[12,t.ELECTRO_BALL],[16,t.FEINT],[20,t.SPARK],[24,t.AGILITY],[28,t.IRON_TAIL],[32,t.DISCHARGE],[36,t.THUNDERBOLT],[40,t.LIGHT_SCREEN],[44,t.THUNDER],[48,t.PIKA_PAPOW]],4:[[1,t.ICICLE_CRASH],[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.THUNDER_SHOCK],[1,t.QUICK_ATTACK],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.NASTY_PLOT],[1,t.PLAY_NICE],[1,t.NUZZLE],[4,t.THUNDER_WAVE],[8,t.DOUBLE_TEAM],[12,t.ELECTRO_BALL],[16,t.FEINT],[20,t.SPARK],[24,t.AGILITY],[28,t.IRON_TAIL],[32,t.DISCHARGE],[36,t.THUNDERBOLT],[40,t.LIGHT_SCREEN],[44,t.THUNDER],[48,t.PIKA_PAPOW]],5:[[1,t.DRAINING_KISS],[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.THUNDER_SHOCK],[1,t.QUICK_ATTACK],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.NASTY_PLOT],[1,t.PLAY_NICE],[1,t.NUZZLE],[4,t.THUNDER_WAVE],[8,t.DOUBLE_TEAM],[12,t.ELECTRO_BALL],[16,t.FEINT],[20,t.SPARK],[24,t.AGILITY],[28,t.IRON_TAIL],[32,t.DISCHARGE],[36,t.THUNDERBOLT],[40,t.LIGHT_SCREEN],[44,t.THUNDER],[48,t.PIKA_PAPOW]],6:[[1,t.ELECTRIC_TERRAIN],[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.THUNDER_SHOCK],[1,t.QUICK_ATTACK],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.NASTY_PLOT],[1,t.PLAY_NICE],[1,t.NUZZLE],[4,t.THUNDER_WAVE],[8,t.DOUBLE_TEAM],[12,t.ELECTRO_BALL],[16,t.FEINT],[20,t.SPARK],[24,t.AGILITY],[28,t.IRON_TAIL],[32,t.DISCHARGE],[36,t.THUNDERBOLT],[40,t.LIGHT_SCREEN],[44,t.THUNDER],[48,t.PIKA_PAPOW]],7:[[1,t.FLYING_PRESS],[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.THUNDER_SHOCK],[1,t.QUICK_ATTACK],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.NASTY_PLOT],[1,t.PLAY_NICE],[1,t.NUZZLE],[4,t.THUNDER_WAVE],[8,t.DOUBLE_TEAM],[12,t.ELECTRO_BALL],[16,t.FEINT],[20,t.SPARK],[24,t.AGILITY],[28,t.IRON_TAIL],[32,t.DISCHARGE],[36,t.THUNDERBOLT],[40,t.LIGHT_SCREEN],[44,t.THUNDER],[48,t.PIKA_PAPOW]],8:[[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.THUNDER_SHOCK],[1,t.QUICK_ATTACK],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.NASTY_PLOT],[1,t.PLAY_NICE],[1,t.NUZZLE],[4,t.THUNDER_WAVE],[8,t.DOUBLE_TEAM],[12,t.ELECTRO_BALL],[16,t.FEINT],[20,t.ZIPPY_ZAP],[24,t.AGILITY],[28,t.IRON_TAIL],[32,t.DISCHARGE],[34,t.FLOATY_FALL],[36,t.THUNDERBOLT],[40,t.LIGHT_SCREEN],[42,t.SPLISHY_SPLASH],[44,t.THUNDER],[48,t.PIKA_PAPOW]]},[e.EEVEE]:{1:[[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.HELPING_HAND],[1,t.COVET],[5,t.SAND_ATTACK],[10,t.QUICK_ATTACK],[15,t.BABY_DOLL_EYES],[18,t.BOUNCY_BUBBLE],[18,t.SIZZLY_SLIDE],[18,t.BUZZY_BUZZ],[20,t.SWIFT],[25,t.BITE],[30,t.COPYCAT],[33,t.BADDY_BAD],[33,t.GLITZY_GLOW],[35,t.BATON_PASS],[40,t.VEEVEE_VOLLEY],[43,t.FREEZY_FROST],[43,t.SAPPY_SEED],[45,t.CHARM],[50,t.DOUBLE_EDGE],[53,t.SPARKLY_SWIRL],[55,t.LAST_RESORT]],2:[[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.HELPING_HAND],[1,t.COVET],[5,t.SAND_ATTACK],[10,t.QUICK_ATTACK],[15,t.BABY_DOLL_EYES],[18,t.BOUNCY_BUBBLE],[18,t.SIZZLY_SLIDE],[18,t.BUZZY_BUZZ],[20,t.SWIFT],[25,t.BITE],[30,t.COPYCAT],[33,t.BADDY_BAD],[33,t.GLITZY_GLOW],[35,t.BATON_PASS],[40,t.VEEVEE_VOLLEY],[43,t.FREEZY_FROST],[43,t.SAPPY_SEED],[45,t.CHARM],[50,t.DOUBLE_EDGE],[53,t.SPARKLY_SWIRL],[55,t.LAST_RESORT]]},[e.DEOXYS]:{1:[[1,t.CONFUSION],[1,t.WRAP],[1,t.LEER],[7,t.NIGHT_SHADE],[13,t.TELEPORT],[19,t.TAUNT],[25,t.PURSUIT],[31,t.PSYCHIC],[37,t.SUPERPOWER],[43,t.PSYCHO_SHIFT],[49,t.ZEN_HEADBUTT],[55,t.COSMIC_POWER],[61,t.ZAP_CANNON],[67,t.PSYCHO_BOOST],[73,t.HYPER_BEAM]],2:[[1,t.CONFUSION],[1,t.WRAP],[1,t.LEER],[7,t.NIGHT_SHADE],[13,t.TELEPORT],[19,t.KNOCK_OFF],[25,t.SPIKES],[31,t.PSYCHIC],[37,t.SNATCH],[43,t.PSYCHO_SHIFT],[49,t.ZEN_HEADBUTT],[55,t.AMNESIA],[55,t.IRON_DEFENSE],[61,t.RECOVER],[67,t.PSYCHO_BOOST],[73,t.COUNTER],[73,t.MIRROR_COAT]],3:[[1,t.CONFUSION],[1,t.WRAP],[1,t.LEER],[7,t.NIGHT_SHADE],[13,t.DOUBLE_TEAM],[19,t.KNOCK_OFF],[25,t.PURSUIT],[31,t.PSYCHIC],[37,t.SWIFT],[43,t.PSYCHO_SHIFT],[49,t.ZEN_HEADBUTT],[55,t.AGILITY],[61,t.RECOVER],[67,t.PSYCHO_BOOST],[73,t.EXTREME_SPEED]]},[e.WORMADAM]:{1:[[Z,t.QUIVER_DANCE],[1,t.STRUGGLE_BUG],[1,t.TACKLE],[1,t.PROTECT],[1,t.SUCKER_PUNCH],[1,t.BUG_BITE],[1,t.PROTECT],[10,t.TACKLE],[20,t.STRING_SHOT],[23,t.CONFUSION],[26,t.ROCK_BLAST],[29,t.HARDEN],[32,t.PSYBEAM],[35,t.INFESTATION],[38,t.FLAIL],[41,t.ATTRACT],[44,t.PSYCHIC],[47,t.FISSURE],[50,t.BUG_BUZZ]],2:[[Z,t.QUIVER_DANCE],[1,t.STRUGGLE_BUG],[1,t.METAL_BURST],[1,t.TACKLE],[1,t.PROTECT],[1,t.SUCKER_PUNCH],[1,t.BUG_BITE],[1,t.PROTECT],[10,t.TACKLE],[20,t.STRING_SHOT],[23,t.CONFUSION],[26,t.METAL_BURST],[29,t.METAL_SOUND],[32,t.PSYBEAM],[35,t.INFESTATION],[38,t.FLAIL],[41,t.ATTRACT],[44,t.PSYCHIC],[47,t.IRON_HEAD],[50,t.BUG_BUZZ]]},[e.ROTOM]:{1:[[1,t.OVERHEAT],[1,t.DOUBLE_TEAM],[1,t.ASTONISH],[5,t.THUNDER_SHOCK],[10,t.CONFUSE_RAY],[15,t.CHARGE],[20,t.ELECTRO_BALL],[25,t.THUNDER_WAVE],[30,t.SHOCK_WAVE],[35,t.HEX],[40,t.SUBSTITUTE],[45,t.TRICK],[50,t.DISCHARGE],[55,t.UPROAR]],2:[[1,t.HYDRO_PUMP],[1,t.DOUBLE_TEAM],[1,t.ASTONISH],[5,t.THUNDER_SHOCK],[10,t.CONFUSE_RAY],[15,t.CHARGE],[20,t.ELECTRO_BALL],[25,t.THUNDER_WAVE],[30,t.SHOCK_WAVE],[35,t.HEX],[40,t.SUBSTITUTE],[45,t.TRICK],[50,t.DISCHARGE],[55,t.UPROAR]],3:[[1,t.BLIZZARD],[1,t.DOUBLE_TEAM],[1,t.ASTONISH],[5,t.THUNDER_SHOCK],[10,t.CONFUSE_RAY],[15,t.CHARGE],[20,t.ELECTRO_BALL],[25,t.THUNDER_WAVE],[30,t.SHOCK_WAVE],[35,t.HEX],[40,t.SUBSTITUTE],[45,t.TRICK],[50,t.DISCHARGE],[55,t.UPROAR]],4:[[1,t.AIR_SLASH],[1,t.DOUBLE_TEAM],[1,t.ASTONISH],[5,t.THUNDER_SHOCK],[10,t.CONFUSE_RAY],[15,t.CHARGE],[20,t.ELECTRO_BALL],[25,t.THUNDER_WAVE],[30,t.SHOCK_WAVE],[35,t.HEX],[40,t.SUBSTITUTE],[45,t.TRICK],[50,t.DISCHARGE],[55,t.UPROAR]],5:[[1,t.LEAF_STORM],[1,t.DOUBLE_TEAM],[1,t.ASTONISH],[5,t.THUNDER_SHOCK],[10,t.CONFUSE_RAY],[15,t.CHARGE],[20,t.ELECTRO_BALL],[25,t.THUNDER_WAVE],[30,t.SHOCK_WAVE],[35,t.HEX],[40,t.SUBSTITUTE],[45,t.TRICK],[50,t.DISCHARGE],[55,t.UPROAR]]},[e.SHAYMIN]:{1:[[1,t.LEAFAGE],[1,t.GROWTH],[10,t.MAGICAL_LEAF],[19,t.LEECH_SEED],[28,t.QUICK_ATTACK],[37,t.SWEET_SCENT],[46,t.NATURAL_GIFT],[55,t.WORRY_SEED],[64,t.AIR_SLASH],[73,t.ENERGY_BALL],[82,t.SWEET_KISS],[91,t.LEAF_STORM],[100,t.SEED_FLARE]]},[e.KYUREM]:{1:[[1,t.DRAGON_BREATH],[1,t.ANCIENT_POWER],[1,t.NOBLE_ROAR],[1,t.FREEZE_DRY],[8,t.SLASH],[16,t.ENDEAVOR],[24,t.DRAGON_PULSE],[32,t.ICE_BEAM],[40,t.HYPER_VOICE],[48,t.FUSION_BOLT],[56,t.BLIZZARD],[64,t.IMPRISON],[72,t.OUTRAGE],[80,t.FREEZE_SHOCK],[88,t.SHEER_COLD]],2:[[1,t.DRAGON_BREATH],[1,t.ANCIENT_POWER],[1,t.NOBLE_ROAR],[1,t.FREEZE_DRY],[8,t.SLASH],[16,t.ENDEAVOR],[24,t.DRAGON_PULSE],[32,t.ICE_BEAM],[40,t.HYPER_VOICE],[48,t.FUSION_FLARE],[56,t.BLIZZARD],[64,t.IMPRISON],[72,t.OUTRAGE],[80,t.ICE_BURN],[88,t.SHEER_COLD]]},[e.MEOWSTIC]:{1:[[1,t.SCRATCH],[1,t.LEER],[1,t.FAKE_OUT],[1,t.MAGICAL_LEAF],[1,t.DISARMING_VOICE],[9,t.CONFUSION],[12,t.STORED_POWER],[15,t.CHARGE_BEAM],[18,t.COVET],[21,t.PSYBEAM],[24,t.SUCKER_PUNCH],[29,t.ROLE_PLAY],[34,t.LIGHT_SCREEN],[34,t.REFLECT],[39,t.PSYSHOCK],[44,t.EXTRASENSORY],[49,t.SHADOW_BALL],[54,t.PSYCHIC],[59,t.FUTURE_SIGHT]]},[e.HOOPA]:{1:[[1,t.CONFUSION],[1,t.DESTINY_BOND],[1,t.ALLY_SWITCH],[6,t.ASTONISH],[10,t.TRICK],[15,t.LIGHT_SCREEN],[19,t.PSYBEAM],[25,t.SKILL_SWAP],[29,t.GUARD_SPLIT],[29,t.POWER_SPLIT],[46,t.KNOCK_OFF],[50,t.TRICK_ROOM],[50,t.WONDER_ROOM],[55,t.DARK_PULSE],[75,t.PSYCHIC],[85,t.HYPERSPACE_FURY]]},[e.GRENINJA]:{1:[[Z,t.WATER_SHURIKEN],[Z,t.WATER_SHURIKEN],[1,t.POUND],[1,t.GROWL],[1,t.WATER_GUN],[1,t.QUICK_ATTACK],[1,t.ROUND],[1,t.FLING],[1,t.SMACK_DOWN],[1,t.BOUNCE],[1,t.HAZE],[1,t.ROLE_PLAY],[1,t.NIGHT_SLASH],[10,t.LICK],[14,t.WATER_PULSE],[19,t.SMOKESCREEN],[23,t.SHADOW_SNEAK],[28,t.SPIKES],[33,t.AERIAL_ACE],[42,t.SUBSTITUTE],[49,t.EXTRASENSORY],[56,t.DOUBLE_TEAM],[68,t.HYDRO_PUMP]]},[e.LYCANROC]:{1:[[Z,t.COUNTER],[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.LEER],[1,t.DOUBLE_TEAM],[1,t.REVERSAL],[1,t.ENDURE],[1,t.TAUNT],[12,t.ROCK_THROW],[16,t.HOWL],[20,t.BITE],[24,t.ROCK_TOMB],[30,t.ROAR],[36,t.ROCK_SLIDE],[42,t.CRUNCH],[48,t.SCARY_FACE],[54,t.STEALTH_ROCK],[60,t.STONE_EDGE]],2:[[Z,t.CRUSH_CLAW],[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.LEER],[1,t.COUNTER],[1,t.QUICK_ATTACK],[1,t.DOUBLE_TEAM],[1,t.REVERSAL],[1,t.ENDURE],[1,t.TAUNT],[1,t.SUCKER_PUNCH],[1,t.QUICK_GUARD],[1,t.ACCELEROCK],[12,t.ROCK_THROW],[16,t.HOWL],[20,t.BITE],[24,t.ROCK_TOMB],[30,t.ROAR],[36,t.ROCK_SLIDE],[42,t.CRUNCH],[48,t.SCARY_FACE],[54,t.STEALTH_ROCK],[60,t.STONE_EDGE]]},[e.NECROZMA]:{1:[[Z,t.SUNSTEEL_STRIKE],[1,t.CONFUSION],[1,t.METAL_CLAW],[1,t.MORNING_SUN],[1,t.MOONLIGHT],[1,t.GRAVITY],[1,t.CHARGE_BEAM],[8,t.STEALTH_ROCK],[16,t.SLASH],[24,t.NIGHT_SLASH],[32,t.PSYCHO_CUT],[40,t.STORED_POWER],[48,t.ROCK_BLAST],[56,t.IRON_DEFENSE],[64,t.POWER_GEM],[72,t.PHOTON_GEYSER],[80,t.AUTOTOMIZE],[88,t.PRISMATIC_LASER]],2:[[Z,t.MOONGEIST_BEAM],[1,t.CONFUSION],[1,t.METAL_CLAW],[1,t.MORNING_SUN],[1,t.MOONLIGHT],[1,t.GRAVITY],[1,t.CHARGE_BEAM],[8,t.STEALTH_ROCK],[16,t.SLASH],[24,t.NIGHT_SLASH],[32,t.PSYCHO_CUT],[40,t.STORED_POWER],[48,t.ROCK_BLAST],[56,t.IRON_DEFENSE],[64,t.POWER_GEM],[72,t.PHOTON_GEYSER],[80,t.AUTOTOMIZE],[88,t.PRISMATIC_LASER]],3:[[Z,t.SUNSTEEL_STRIKE],[Z,t.MOONGEIST_BEAM],[1,t.CONFUSION],[1,t.METAL_CLAW],[1,t.MORNING_SUN],[1,t.MOONLIGHT],[1,t.GRAVITY],[1,t.CHARGE_BEAM],[8,t.STEALTH_ROCK],[16,t.SLASH],[24,t.NIGHT_SLASH],[32,t.PSYCHO_CUT],[40,t.STORED_POWER],[48,t.ROCK_BLAST],[56,t.IRON_DEFENSE],[64,t.POWER_GEM],[72,t.PHOTON_GEYSER],[80,t.AUTOTOMIZE],[88,t.PRISMATIC_LASER]]},[e.TOXTRICITY]:{1:[[Z,t.SPARK],[1,t.LEER],[1,t.GROWL],[1,t.ACID],[1,t.THUNDER_SHOCK],[1,t.FLAIL],[1,t.ACID_SPRAY],[1,t.BELCH],[1,t.NOBLE_ROAR],[1,t.NUZZLE],[1,t.TEARFUL_LOOK],[4,t.CHARGE],[8,t.SHOCK_WAVE],[12,t.SCARY_FACE],[16,t.TAUNT],[24,t.SCREECH],[28,t.SWAGGER],[32,t.TOXIC],[36,t.DISCHARGE],[40,t.POISON_JAB],[44,t.OVERDRIVE],[48,t.BOOMBURST],[52,t.MAGNETIC_FLUX]]},[e.INDEEDEE]:{1:[[1,t.STORED_POWER],[1,t.PLAY_NICE],[5,t.BATON_PASS],[10,t.DISARMING_VOICE],[15,t.PSYBEAM],[20,t.HELPING_HAND],[25,t.FOLLOW_ME],[30,t.HEALING_WISH],[35,t.PSYCHIC],[40,t.CALM_MIND],[45,t.GUARD_SPLIT],[50,t.PSYCHIC_TERRAIN]]},[e.ZACIAN]:{1:[[Z,t.BEHEMOTH_BLADE],[1,t.BITE],[1,t.QUICK_ATTACK],[1,t.METAL_CLAW],[1,t.HOWL],[1,t.QUICK_GUARD],[1,t.SACRED_SWORD],[11,t.SLASH],[22,t.SWORDS_DANCE],[33,t.IRON_HEAD],[44,t.NOBLE_ROAR],[55,t.CRUNCH],[66,t.MOONBLAST],[77,t.CLOSE_COMBAT],[88,t.GIGA_IMPACT]]},[e.ZAMAZENTA]:{1:[[Z,t.BEHEMOTH_BASH],[1,t.BITE],[1,t.QUICK_ATTACK],[1,t.METAL_CLAW],[1,t.HOWL],[1,t.WIDE_GUARD],[11,t.SLASH],[22,t.IRON_DEFENSE],[33,t.IRON_HEAD],[44,t.METAL_BURST],[55,t.CRUNCH],[66,t.MOONBLAST],[77,t.CLOSE_COMBAT],[88,t.GIGA_IMPACT]]},[e.ETERNATUS]:{1:[[1,t.AGILITY],[1,t.CONFUSE_RAY],[1,t.POISON_TAIL],[1,t.DRAGON_TAIL],[8,t.TOXIC],[16,t.VENOSHOCK],[24,t.DRAGON_DANCE],[32,t.CROSS_POISON],[40,t.DRAGON_PULSE],[48,t.FLAMETHROWER],[56,t.DYNAMAX_CANNON],[64,t.COSMIC_POWER],[72,t.RECOVER],[80,t.HYPER_BEAM],[88,t.ETERNABEAM]]},[e.URSHIFU]:{1:[[Z,t.SURGING_STRIKES],[1,t.LEER],[1,t.FOCUS_ENERGY],[1,t.ENDURE],[1,t.ROCK_SMASH],[1,t.AQUA_JET],[12,t.AERIAL_ACE],[16,t.SCARY_FACE],[20,t.HEADBUTT],[24,t.BRICK_BREAK],[28,t.DETECT],[32,t.BULK_UP],[36,t.IRON_HEAD],[40,t.DYNAMIC_PUNCH],[44,t.COUNTER],[48,t.CLOSE_COMBAT],[52,t.FOCUS_PUNCH]]},[e.CALYREX]:{1:[[1,t.POUND],[1,t.SWORDS_DANCE],[1,t.STOMP],[1,t.DOUBLE_KICK],[1,t.TACKLE],[1,t.TAKE_DOWN],[1,t.THRASH],[1,t.DOUBLE_EDGE],[1,t.TAIL_WHIP],[1,t.MIST],[1,t.MEGA_DRAIN],[1,t.GROWTH],[1,t.CONFUSION],[1,t.TORMENT],[1,t.TAUNT],[1,t.IRON_DEFENSE],[1,t.AVALANCHE],[1,t.ICICLE_CRASH],[1,t.GLACIAL_LANCE],[8,t.LIFE_DEW],[16,t.GIGA_DRAIN],[24,t.PSYSHOCK],[32,t.HELPING_HAND],[40,t.AROMATHERAPY],[40,t.GRASSY_TERRAIN],[48,t.ENERGY_BALL],[56,t.PSYCHIC],[64,t.LEECH_SEED],[72,t.HEAL_PULSE],[80,t.SOLAR_BEAM],[88,t.FUTURE_SIGHT]],2:[[1,t.POUND],[1,t.STOMP],[1,t.DOUBLE_KICK],[1,t.TACKLE],[1,t.TAKE_DOWN],[1,t.THRASH],[1,t.DOUBLE_EDGE],[1,t.TAIL_WHIP],[1,t.DISABLE],[1,t.MEGA_DRAIN],[1,t.GROWTH],[1,t.CONFUSION],[1,t.AGILITY],[1,t.CONFUSE_RAY],[1,t.HAZE],[1,t.SHADOW_BALL],[1,t.NASTY_PLOT],[1,t.HEX],[1,t.ASTRAL_BARRAGE],[8,t.LIFE_DEW],[16,t.GIGA_DRAIN],[24,t.PSYSHOCK],[32,t.HELPING_HAND],[40,t.GRASSY_TERRAIN],[40,t.PSYCHIC_TERRAIN],[48,t.ENERGY_BALL],[56,t.PSYCHIC],[64,t.LEECH_SEED],[72,t.HEAL_PULSE],[80,t.SOLAR_BEAM],[88,t.FUTURE_SIGHT]]},[e.OINKOLOGNE]:{1:[[1,t.TACKLE],[1,t.TAIL_WHIP],[3,t.DISARMING_VOICE],[6,t.ECHOED_VOICE],[9,t.MUD_SHOT],[12,t.COVET],[15,t.DIG],[17,t.HEADBUTT],[23,t.YAWN],[28,t.TAKE_DOWN],[30,t.WORK_UP],[34,t.UPROAR],[39,t.DOUBLE_EDGE],[45,t.EARTH_POWER],[51,t.BELCH]]},[e.REVAVROOM]:{1:[[Z,t.WICKED_TORQUE],[Z,t.SHIFT_GEAR],[1,t.LICK],[1,t.POISON_GAS],[1,t.MAGNET_RISE],[4,t.SMOG],[7,t.TAUNT],[10,t.ASSURANCE],[13,t.SLUDGE],[17,t.GYRO_BALL],[21,t.HEADBUTT],[25,t.SCREECH],[28,t.IRON_HEAD],[32,t.SWAGGER],[36,t.POISON_JAB],[46,t.UPROAR],[52,t.SPIN_OUT],[58,t.GUNK_SHOT]],2:[[Z,t.BLAZING_TORQUE],[Z,t.SHIFT_GEAR],[1,t.LICK],[1,t.POISON_GAS],[1,t.MAGNET_RISE],[4,t.SMOG],[7,t.TAUNT],[10,t.ASSURANCE],[13,t.SLUDGE],[17,t.GYRO_BALL],[21,t.HEADBUTT],[25,t.SCREECH],[28,t.IRON_HEAD],[32,t.SWAGGER],[36,t.POISON_JAB],[46,t.UPROAR],[52,t.SPIN_OUT],[58,t.GUNK_SHOT]],3:[[Z,t.NOXIOUS_TORQUE],[Z,t.SHIFT_GEAR],[1,t.LICK],[1,t.POISON_GAS],[1,t.MAGNET_RISE],[4,t.SMOG],[7,t.TAUNT],[10,t.ASSURANCE],[13,t.SLUDGE],[17,t.GYRO_BALL],[21,t.HEADBUTT],[25,t.SCREECH],[28,t.IRON_HEAD],[32,t.SWAGGER],[36,t.POISON_JAB],[46,t.UPROAR],[52,t.SPIN_OUT],[58,t.GUNK_SHOT]],4:[[Z,t.MAGICAL_TORQUE],[Z,t.SHIFT_GEAR],[1,t.LICK],[1,t.POISON_GAS],[1,t.MAGNET_RISE],[4,t.SMOG],[7,t.TAUNT],[10,t.ASSURANCE],[13,t.SLUDGE],[17,t.GYRO_BALL],[21,t.HEADBUTT],[25,t.SCREECH],[28,t.IRON_HEAD],[32,t.SWAGGER],[36,t.POISON_JAB],[46,t.UPROAR],[52,t.SPIN_OUT],[58,t.GUNK_SHOT]],5:[[Z,t.COMBAT_TORQUE],[Z,t.SHIFT_GEAR],[1,t.LICK],[1,t.POISON_GAS],[1,t.MAGNET_RISE],[4,t.SMOG],[7,t.TAUNT],[10,t.ASSURANCE],[13,t.SLUDGE],[17,t.GYRO_BALL],[21,t.HEADBUTT],[25,t.SCREECH],[28,t.IRON_HEAD],[32,t.SWAGGER],[36,t.POISON_JAB],[46,t.UPROAR],[52,t.SPIN_OUT],[58,t.GUNK_SHOT]]},[e.PALDEA_TAUROS]:{1:[[1,t.TACKLE],[1,t.TAIL_WHIP],[5,t.WORK_UP],[10,t.DOUBLE_KICK],[15,t.FLAME_CHARGE],[20,t.HEADBUTT],[25,t.SCARY_FACE],[30,t.ZEN_HEADBUTT],[35,t.RAGING_BULL],[40,t.REST],[45,t.SWAGGER],[50,t.THRASH],[55,t.FLARE_BLITZ],[60,t.CLOSE_COMBAT]],2:[[1,t.TACKLE],[1,t.TAIL_WHIP],[5,t.WORK_UP],[10,t.DOUBLE_KICK],[15,t.AQUA_JET],[20,t.HEADBUTT],[25,t.SCARY_FACE],[30,t.ZEN_HEADBUTT],[35,t.RAGING_BULL],[40,t.REST],[45,t.SWAGGER],[50,t.THRASH],[55,t.WAVE_CRASH],[60,t.CLOSE_COMBAT]]}},E6=5,D8=2,M8=2,u8=5,h8=10;function D1(E){switch(E){case 1:return 20;case 2:return 40;case 3:return 60;case 4:return 100;case 5:return 140;case 6:return 200;case 7:return 280;case 8:case 9:return 450;default:return 600}}T(D1,"getStarterValueFriendshipCap");const CA={[e.BULBASAUR]:3,[e.CHARMANDER]:3,[e.SQUIRTLE]:3,[e.CATERPIE]:2,[e.WEEDLE]:1,[e.PIDGEY]:1,[e.RATTATA]:1,[e.SPEAROW]:1,[e.EKANS]:2,[e.PIKACHU]:3,[e.SANDSHREW]:2,[e.NIDORAN_F]:3,[e.NIDORAN_M]:3,[e.CLEFAIRY]:3,[e.VULPIX]:3,[e.JIGGLYPUFF]:2,[e.ZUBAT]:3,[e.ODDISH]:3,[e.PARAS]:2,[e.VENONAT]:2,[e.DIGLETT]:2,[e.MEOWTH]:3,[e.PSYDUCK]:2,[e.MANKEY]:4,[e.GROWLITHE]:4,[e.POLIWAG]:2,[e.ABRA]:4,[e.MACHOP]:3,[e.BELLSPROUT]:2,[e.TENTACOOL]:3,[e.GEODUDE]:3,[e.PONYTA]:2,[e.SLOWPOKE]:3,[e.MAGNEMITE]:4,[e.FARFETCHD]:2,[e.DODUO]:3,[e.SEEL]:1,[e.GRIMER]:2,[e.SHELLDER]:5,[e.GASTLY]:4,[e.ONIX]:3,[e.DROWZEE]:2,[e.KRABBY]:3,[e.VOLTORB]:2,[e.EXEGGCUTE]:3,[e.CUBONE]:3,[e.HITMONLEE]:4,[e.HITMONCHAN]:4,[e.LICKITUNG]:3,[e.KOFFING]:2,[e.RHYHORN]:3,[e.CHANSEY]:3,[e.TANGELA]:3,[e.KANGASKHAN]:4,[e.HORSEA]:3,[e.GOLDEEN]:2,[e.STARYU]:3,[e.MR_MIME]:3,[e.SCYTHER]:5,[e.JYNX]:4,[e.ELECTABUZZ]:4,[e.MAGMAR]:4,[e.PINSIR]:4,[e.TAUROS]:4,[e.MAGIKARP]:4,[e.LAPRAS]:4,[e.DITTO]:2,[e.EEVEE]:3,[e.PORYGON]:4,[e.OMANYTE]:3,[e.KABUTO]:3,[e.AERODACTYL]:5,[e.SNORLAX]:5,[e.ARTICUNO]:6,[e.ZAPDOS]:6,[e.MOLTRES]:6,[e.DRATINI]:4,[e.MEWTWO]:8,[e.MEW]:6,[e.CHIKORITA]:2,[e.CYNDAQUIL]:3,[e.TOTODILE]:3,[e.SENTRET]:1,[e.HOOTHOOT]:2,[e.LEDYBA]:1,[e.SPINARAK]:1,[e.CHINCHOU]:2,[e.PICHU]:2,[e.CLEFFA]:2,[e.IGGLYBUFF]:1,[e.TOGEPI]:3,[e.NATU]:2,[e.MAREEP]:2,[e.MARILL]:4,[e.SUDOWOODO]:3,[e.HOPPIP]:2,[e.AIPOM]:2,[e.SUNKERN]:1,[e.YANMA]:3,[e.WOOPER]:2,[e.MURKROW]:3,[e.MISDREAVUS]:2,[e.UNOWN]:1,[e.WOBBUFFET]:2,[e.GIRAFARIG]:3,[e.PINECO]:2,[e.DUNSPARCE]:3,[e.GLIGAR]:3,[e.SNUBBULL]:2,[e.QWILFISH]:3,[e.SHUCKLE]:3,[e.HERACROSS]:5,[e.SNEASEL]:4,[e.TEDDIURSA]:4,[e.SLUGMA]:2,[e.SWINUB]:3,[e.CORSOLA]:2,[e.REMORAID]:2,[e.DELIBIRD]:2,[e.MANTINE]:3,[e.SKARMORY]:4,[e.HOUNDOUR]:3,[e.PHANPY]:3,[e.STANTLER]:3,[e.SMEARGLE]:1,[e.TYROGUE]:3,[e.SMOOCHUM]:3,[e.ELEKID]:3,[e.MAGBY]:3,[e.MILTANK]:4,[e.RAIKOU]:6,[e.ENTEI]:6,[e.SUICUNE]:6,[e.LARVITAR]:4,[e.LUGIA]:8,[e.HO_OH]:8,[e.CELEBI]:6,[e.TREECKO]:3,[e.TORCHIC]:4,[e.MUDKIP]:3,[e.POOCHYENA]:2,[e.ZIGZAGOON]:2,[e.WURMPLE]:1,[e.LOTAD]:3,[e.SEEDOT]:2,[e.TAILLOW]:3,[e.WINGULL]:2,[e.RALTS]:3,[e.SURSKIT]:2,[e.SHROOMISH]:3,[e.SLAKOTH]:4,[e.NINCADA]:4,[e.WHISMUR]:2,[e.MAKUHITA]:3,[e.AZURILL]:4,[e.NOSEPASS]:2,[e.SKITTY]:1,[e.SABLEYE]:2,[e.MAWILE]:3,[e.ARON]:3,[e.MEDITITE]:3,[e.ELECTRIKE]:2,[e.PLUSLE]:2,[e.MINUN]:2,[e.VOLBEAT]:2,[e.ILLUMISE]:2,[e.ROSELIA]:3,[e.GULPIN]:1,[e.CARVANHA]:3,[e.WAILMER]:2,[e.NUMEL]:2,[e.TORKOAL]:3,[e.SPOINK]:2,[e.SPINDA]:1,[e.TRAPINCH]:3,[e.CACNEA]:2,[e.SWABLU]:2,[e.ZANGOOSE]:4,[e.SEVIPER]:3,[e.LUNATONE]:3,[e.SOLROCK]:3,[e.BARBOACH]:2,[e.CORPHISH]:3,[e.BALTOY]:2,[e.LILEEP]:3,[e.ANORITH]:3,[e.FEEBAS]:4,[e.CASTFORM]:1,[e.KECLEON]:2,[e.SHUPPET]:2,[e.DUSKULL]:3,[e.TROPIUS]:3,[e.CHIMECHO]:3,[e.ABSOL]:4,[e.WYNAUT]:2,[e.SNORUNT]:2,[e.SPHEAL]:2,[e.CLAMPERL]:3,[e.RELICANTH]:3,[e.LUVDISC]:1,[e.BAGON]:4,[e.BELDUM]:4,[e.REGIROCK]:6,[e.REGICE]:6,[e.REGISTEEL]:6,[e.LATIAS]:7,[e.LATIOS]:7,[e.KYOGRE]:9,[e.GROUDON]:9,[e.RAYQUAZA]:9,[e.JIRACHI]:7,[e.DEOXYS]:7,[e.TURTWIG]:3,[e.CHIMCHAR]:3,[e.PIPLUP]:3,[e.STARLY]:3,[e.BIDOOF]:2,[e.KRICKETOT]:1,[e.SHINX]:2,[e.BUDEW]:3,[e.CRANIDOS]:3,[e.SHIELDON]:3,[e.BURMY]:2,[e.COMBEE]:2,[e.PACHIRISU]:2,[e.BUIZEL]:2,[e.CHERUBI]:1,[e.SHELLOS]:3,[e.DRIFLOON]:2,[e.BUNEARY]:2,[e.GLAMEOW]:2,[e.CHINGLING]:2,[e.STUNKY]:2,[e.BRONZOR]:3,[e.BONSLY]:2,[e.MIME_JR]:2,[e.HAPPINY]:2,[e.CHATOT]:2,[e.SPIRITOMB]:4,[e.GIBLE]:4,[e.MUNCHLAX]:4,[e.RIOLU]:3,[e.HIPPOPOTAS]:3,[e.SKORUPI]:3,[e.CROAGUNK]:2,[e.CARNIVINE]:2,[e.FINNEON]:1,[e.MANTYKE]:2,[e.SNOVER]:2,[e.ROTOM]:5,[e.UXIE]:6,[e.MESPRIT]:6,[e.AZELF]:6,[e.DIALGA]:8,[e.PALKIA]:8,[e.HEATRAN]:6,[e.REGIGIGAS]:7,[e.GIRATINA]:8,[e.CRESSELIA]:6,[e.PHIONE]:4,[e.MANAPHY]:7,[e.DARKRAI]:7,[e.SHAYMIN]:6,[e.ARCEUS]:9,[e.VICTINI]:7,[e.SNIVY]:3,[e.TEPIG]:3,[e.OSHAWOTT]:3,[e.PATRAT]:1,[e.LILLIPUP]:3,[e.PURRLOIN]:2,[e.PANSAGE]:2,[e.PANSEAR]:2,[e.PANPOUR]:2,[e.MUNNA]:2,[e.PIDOVE]:1,[e.BLITZLE]:2,[e.ROGGENROLA]:3,[e.WOOBAT]:3,[e.DRILBUR]:4,[e.AUDINO]:3,[e.TIMBURR]:4,[e.TYMPOLE]:3,[e.THROH]:4,[e.SAWK]:4,[e.SEWADDLE]:2,[e.VENIPEDE]:3,[e.COTTONEE]:3,[e.PETILIL]:3,[e.BASCULIN]:4,[e.SANDILE]:4,[e.DARUMAKA]:4,[e.MARACTUS]:2,[e.DWEBBLE]:2,[e.SCRAGGY]:3,[e.SIGILYPH]:4,[e.YAMASK]:3,[e.TIRTOUGA]:3,[e.ARCHEN]:3,[e.TRUBBISH]:2,[e.ZORUA]:3,[e.MINCCINO]:3,[e.GOTHITA]:3,[e.SOLOSIS]:3,[e.DUCKLETT]:2,[e.VANILLITE]:3,[e.DEERLING]:2,[e.EMOLGA]:2,[e.KARRABLAST]:3,[e.FOONGUS]:2,[e.FRILLISH]:3,[e.ALOMOMOLA]:4,[e.JOLTIK]:3,[e.FERROSEED]:3,[e.KLINK]:3,[e.TYNAMO]:2,[e.ELGYEM]:2,[e.LITWICK]:3,[e.AXEW]:4,[e.CUBCHOO]:2,[e.CRYOGONAL]:4,[e.SHELMET]:2,[e.STUNFISK]:3,[e.MIENFOO]:3,[e.DRUDDIGON]:4,[e.GOLETT]:3,[e.PAWNIARD]:4,[e.BOUFFALANT]:4,[e.RUFFLET]:3,[e.VULLABY]:3,[e.HEATMOR]:3,[e.DURANT]:4,[e.DEINO]:4,[e.LARVESTA]:4,[e.COBALION]:6,[e.TERRAKION]:6,[e.VIRIZION]:6,[e.TORNADUS]:7,[e.THUNDURUS]:7,[e.RESHIRAM]:8,[e.ZEKROM]:8,[e.LANDORUS]:7,[e.KYUREM]:8,[e.KELDEO]:6,[e.MELOETTA]:7,[e.GENESECT]:6,[e.CHESPIN]:3,[e.FENNEKIN]:3,[e.FROAKIE]:4,[e.BUNNELBY]:3,[e.FLETCHLING]:3,[e.SCATTERBUG]:2,[e.LITLEO]:2,[e.FLABEBE]:3,[e.SKIDDO]:2,[e.PANCHAM]:3,[e.FURFROU]:3,[e.ESPURR]:2,[e.HONEDGE]:4,[e.SPRITZEE]:2,[e.SWIRLIX]:3,[e.INKAY]:3,[e.BINACLE]:3,[e.SKRELP]:2,[e.CLAUNCHER]:3,[e.HELIOPTILE]:3,[e.TYRUNT]:3,[e.AMAURA]:3,[e.HAWLUCHA]:4,[e.DEDENNE]:2,[e.CARBINK]:2,[e.GOOMY]:4,[e.KLEFKI]:3,[e.PHANTUMP]:2,[e.PUMPKABOO]:2,[e.BERGMITE]:3,[e.NOIBAT]:3,[e.XERNEAS]:8,[e.YVELTAL]:8,[e.ZYGARDE]:8,[e.DIANCIE]:7,[e.HOOPA]:7,[e.VOLCANION]:6,[e.ETERNAL_FLOETTE]:4,[e.ROWLET]:3,[e.LITTEN]:3,[e.POPPLIO]:4,[e.PIKIPEK]:2,[e.YUNGOOS]:2,[e.GRUBBIN]:3,[e.CRABRAWLER]:3,[e.ORICORIO]:3,[e.CUTIEFLY]:3,[e.ROCKRUFF]:3,[e.WISHIWASHI]:2,[e.MAREANIE]:2,[e.MUDBRAY]:3,[e.DEWPIDER]:3,[e.FOMANTIS]:2,[e.MORELULL]:2,[e.SALANDIT]:3,[e.STUFFUL]:3,[e.BOUNSWEET]:3,[e.COMFEY]:4,[e.ORANGURU]:4,[e.PASSIMIAN]:4,[e.WIMPOD]:3,[e.SANDYGAST]:3,[e.PYUKUMUKU]:2,[e.TYPE_NULL]:5,[e.MINIOR]:4,[e.KOMALA]:3,[e.TURTONATOR]:4,[e.TOGEDEMARU]:3,[e.MIMIKYU]:4,[e.BRUXISH]:4,[e.DRAMPA]:4,[e.DHELMISE]:4,[e.JANGMO_O]:4,[e.TAPU_KOKO]:6,[e.TAPU_LELE]:6,[e.TAPU_BULU]:6,[e.TAPU_FINI]:6,[e.COSMOG]:7,[e.NIHILEGO]:6,[e.BUZZWOLE]:6,[e.PHEROMOSA]:7,[e.XURKITREE]:6,[e.CELESTEELA]:6,[e.KARTANA]:7,[e.GUZZLORD]:6,[e.NECROZMA]:8,[e.MAGEARNA]:7,[e.MARSHADOW]:7,[e.POIPOLE]:7,[e.STAKATAKA]:6,[e.BLACEPHALON]:7,[e.ZERAORA]:6,[e.MELTAN]:6,[e.ALOLA_RATTATA]:1,[e.ALOLA_SANDSHREW]:2,[e.ALOLA_VULPIX]:3,[e.ALOLA_DIGLETT]:2,[e.ALOLA_MEOWTH]:3,[e.ALOLA_GEODUDE]:3,[e.ALOLA_GRIMER]:3,[e.GROOKEY]:3,[e.SCORBUNNY]:4,[e.SOBBLE]:3,[e.SKWOVET]:2,[e.ROOKIDEE]:3,[e.BLIPBUG]:2,[e.NICKIT]:1,[e.GOSSIFLEUR]:2,[e.WOOLOO]:2,[e.CHEWTLE]:3,[e.YAMPER]:2,[e.ROLYCOLY]:3,[e.APPLIN]:3,[e.SILICOBRA]:3,[e.CRAMORANT]:3,[e.ARROKUDA]:3,[e.TOXEL]:3,[e.SIZZLIPEDE]:3,[e.CLOBBOPUS]:2,[e.SINISTEA]:3,[e.HATENNA]:3,[e.IMPIDIMP]:3,[e.MILCERY]:3,[e.FALINKS]:4,[e.PINCURCHIN]:3,[e.SNOM]:3,[e.STONJOURNER]:3,[e.EISCUE]:3,[e.INDEEDEE]:4,[e.MORPEKO]:3,[e.CUFANT]:3,[e.DRACOZOLT]:5,[e.ARCTOZOLT]:4,[e.DRACOVISH]:5,[e.ARCTOVISH]:4,[e.DURALUDON]:5,[e.DREEPY]:4,[e.ZACIAN]:9,[e.ZAMAZENTA]:8,[e.ETERNATUS]:10,[e.KUBFU]:6,[e.ZARUDE]:6,[e.REGIELEKI]:6,[e.REGIDRAGO]:6,[e.GLASTRIER]:6,[e.SPECTRIER]:7,[e.CALYREX]:8,[e.GALAR_MEOWTH]:3,[e.GALAR_PONYTA]:2,[e.GALAR_SLOWPOKE]:3,[e.GALAR_FARFETCHD]:3,[e.GALAR_CORSOLA]:3,[e.GALAR_ZIGZAGOON]:3,[e.GALAR_DARUMAKA]:4,[e.GALAR_YAMASK]:3,[e.GALAR_STUNFISK]:2,[e.GALAR_MR_MIME]:3,[e.GALAR_ARTICUNO]:6,[e.GALAR_ZAPDOS]:6,[e.GALAR_MOLTRES]:6,[e.HISUI_GROWLITHE]:4,[e.HISUI_VOLTORB]:3,[e.HISUI_QWILFISH]:4,[e.HISUI_SNEASEL]:5,[e.HISUI_ZORUA]:3,[e.ENAMORUS]:7,[e.SPRIGATITO]:4,[e.FUECOCO]:4,[e.QUAXLY]:4,[e.LECHONK]:2,[e.TAROUNTULA]:1,[e.NYMBLE]:3,[e.PAWMI]:3,[e.TANDEMAUS]:4,[e.FIDOUGH]:2,[e.SMOLIV]:3,[e.SQUAWKABILLY]:2,[e.NACLI]:4,[e.CHARCADET]:4,[e.TADBULB]:3,[e.WATTREL]:3,[e.MASCHIFF]:3,[e.SHROODLE]:2,[e.BRAMBLIN]:3,[e.TOEDSCOOL]:3,[e.KLAWF]:3,[e.CAPSAKID]:3,[e.RELLOR]:2,[e.FLITTLE]:3,[e.TINKATINK]:4,[e.WIGLETT]:2,[e.BOMBIRDIER]:3,[e.FINIZEN]:3,[e.VAROOM]:4,[e.CYCLIZAR]:4,[e.ORTHWORM]:4,[e.GLIMMET]:4,[e.GREAVARD]:3,[e.FLAMIGO]:4,[e.CETODDLE]:3,[e.VELUZA]:4,[e.DONDOZO]:4,[e.TATSUGIRI]:4,[e.GREAT_TUSK]:6,[e.SCREAM_TAIL]:6,[e.BRUTE_BONNET]:6,[e.FLUTTER_MANE]:7,[e.SLITHER_WING]:6,[e.SANDY_SHOCKS]:6,[e.IRON_TREADS]:6,[e.IRON_BUNDLE]:6,[e.IRON_HANDS]:6,[e.IRON_JUGULIS]:6,[e.IRON_MOTH]:6,[e.IRON_THORNS]:6,[e.FRIGIBAX]:4,[e.GIMMIGHOUL]:4,[e.WO_CHIEN]:6,[e.CHIEN_PAO]:7,[e.TING_LU]:6,[e.CHI_YU]:7,[e.ROARING_MOON]:6,[e.IRON_VALIANT]:6,[e.KORAIDON]:9,[e.MIRAIDON]:9,[e.WALKING_WAKE]:6,[e.IRON_LEAVES]:6,[e.POLTCHAGEIST]:4,[e.OKIDOGI]:6,[e.MUNKIDORI]:6,[e.FEZANDIPITI]:6,[e.OGERPON]:7,[e.GOUGING_FIRE]:7,[e.RAGING_BOLT]:6,[e.IRON_BOULDER]:7,[e.IRON_CROWN]:6,[e.TERAPAGOS]:8,[e.PECHARUNT]:6,[e.PALDEA_TAUROS]:5,[e.PALDEA_WOOPER]:3,[e.BLOODMOON_URSALUNA]:6},M1=[{passive:40,costReduction:[25,60],egg:30},{passive:40,costReduction:[25,60],egg:30},{passive:35,costReduction:[20,50],egg:25},{passive:30,costReduction:[15,40],egg:20},{passive:25,costReduction:[12,35],egg:18},{passive:20,costReduction:[10,30],egg:15},{passive:15,costReduction:[8,20],egg:12},{passive:10,costReduction:[5,15],egg:10},{passive:10,costReduction:[5,15],egg:10},{passive:10,costReduction:[5,15],egg:10}];function YV(E){return M1[E-1].passive}T(YV,"getPassiveCandyCount");function pV(E){return M1[E-1].costReduction}T(pV,"getValueReductionCandyCounts");function yV(E){return M1[E-1].egg}T(yV,"getSameSpeciesEggCandyCounts");var Ee=(E=>(E.MEGA="mega",E.MEGA_X="mega-x",E.MEGA_Y="mega-y",E.PRIMAL="primal",E.ORIGIN="origin",E.INCARNATE="incarnate",E.THERIAN="therian",E.GIGANTAMAX="gigantamax",E.GIGANTAMAX_SINGLE="gigantamax-single",E.GIGANTAMAX_RAPID="gigantamax-rapid",E.ETERNAMAX="eternamax",E))(Ee||{});function Ke(E){if(!E)throw new Error("`species` must not be undefined in `getPokemonSpecies()`");return Array.isArray(E)&&(E=E[Math.floor(Math.random()*E.length)]),E>=2e3?MR.find(A=>A.speciesId===E):MR[E-1]}T(Ke,"getPokemonSpecies");function GI(E,A){var R;const s=E>=2e3?MR.find(I=>I.speciesId===E):MR[E-1];return A<((R=s.forms)==null?void 0:R.length)?s.forms[A]:s}T(GI,"getPokemonSpeciesForm");function c8(E,A){const s=/([a-z]{2}.*?[aeiou(?:y$)\-\']+)(.*?)$/i,R=/([a-z]{2}.*?[aeiou(?:y$)\-\'])(.*?)$/i,[I,i]=[E,A].map(H=>/^(?:[^ ]+) /.exec(H)),[a,L]=[I,i].map(H=>H?H[0]:"");a&&(E=E.slice(a.length)),L&&(A=A.slice(L.length));const[S,o]=[E,A].map(H=>/ (?:[^ ]+)$/.exec(H)),[l,D]=[S,o].map(H=>H?H[0]:"");l&&(E=E.slice(0,-l.length)),D&&(A=A.slice(0,-D.length));const M=E.split(/ /g),c=A.split(/ /g),G=s.exec(E),P=R.exec(A);let _,g;if(_=M.length===1?G?G[1]:E:M[M.length-1],c.length===1)if(P){const H=_.slice(_.length-1),F=P[1].slice(P.length-1);if(g=(/[\-']/.test(F)?F:"")+P[2]||F,H===g[0])if(/[aiu]/.test(H))g=g.slice(1);else{const p=new RegExp(`[^${H}]`).exec(g);(p==null?void 0:p.index)!==void 0&&p.index>0&&(g=g.slice(p.index))}}else g=A;else g=c[c.length-1];return M.length>1&&(_=`${M.slice(0,M.length-1).join(" ")} ${_}`),g=`${g.slice(0,1).toLowerCase()}${g.slice(1)}`,`${a||L}${_}${g}${D||l}`}T(c8,"getFusedSpeciesName");const Id=class Id{constructor(A,s,R,I,i,a,L,S,o,l,D,M,c,G,P,_,g,H,F){this.type1=A,this.type2=s,this.height=R,this.weight=I,this.ability1=i,this.ability2=a===O.NONE?i:a,this.abilityHidden=L,this.baseTotal=S,this.baseStats=[o,l,D,M,c,G],this.catchRate=P,this.baseFriendship=_,this.baseExp=g,this.genderDiffs=H,this.isStarterSelectable=F}getRootSpeciesId(A=!1){let s=this.speciesId;for(;KA.hasOwnProperty(s)&&(!A||!CA.hasOwnProperty(s));)s=KA[s];return s}isOfType(A){return this.type1===A||this.type2!==null&&this.type2===A}getAbilityCount(){return this.abilityHidden!==O.NONE?3:2}getAbility(A){let s;return A===0?s=this.ability1:A===1?s=this.ability2:s=this.abilityHidden,s}getLevelMoves(){return JO.hasOwnProperty(this.speciesId)&&JO[this.speciesId].hasOwnProperty(this.formIndex)?JO[this.speciesId][this.formIndex].slice(0):m0[this.speciesId].slice(0)}getRegion(){return Math.floor(this.speciesId/2e3)}isObtainable(){return this.generation<=9||KA.hasOwnProperty(this.speciesId)}isCatchable(){return this.isObtainable()&&Nb.indexOf(this.speciesId)===-1}isRegional(){return this.getRegion()>0}isTrainerForbidden(){return[e.ETERNAL_FLOETTE,e.BLOODMOON_URSALUNA].includes(this.speciesId)}isRareRegional(){switch(this.getRegion()){case 3:return!0}return!1}getBaseStatTotal(){return this.baseStats.reduce((A,s)=>s+A)}getBaseStat(A){return this.baseStats[A]}getBaseExp(){let A=this.baseExp;switch(this.getFormSpriteKey()){case Ee.MEGA:case Ee.MEGA_X:case Ee.MEGA_Y:case Ee.PRIMAL:case Ee.GIGANTAMAX:case Ee.ETERNAMAX:A*=1.5;break}return A}getSpriteAtlasPath(A,s,R,I){const i=this.getSpriteId(A,s,R,I).replace(/\_{2}/g,"/");return`${/_[1-3]$/.test(i)?"variant/":""}${i}`}getSpriteId(A,s,R,I=0,i){(s===void 0||this instanceof K)&&(s=this.formIndex);const a=this.getFormSpriteKey(s),S=`${this.genderDiffs&&A&&![Ee.MEGA,Ee.GIGANTAMAX].find(D=>a===D)?"female__":""}${this.speciesId}${a?`-${a}`:""}`;let o=Ys;`${i?"back__":""}${S}`.split("__").map(D=>o?o=o[D]:null);const l=o;return`${i?"back__":""}${R&&(!l||!I&&!l[I||0])?"shiny__":""}${S}${R&&l&&l[I]===2?`_${I+1}`:""}`}getSpriteKey(A,s,R,I){return`pkmn__${this.getSpriteId(A,s,R,I)}`}getVariantDataIndex(A){var i;let s=null,R=this.speciesId;const I=Ke(this.speciesId);return I.forms.length>0&&A!==void 0&&(s=(i=I.forms[A])==null?void 0:i.getFormSpriteKey(A),s&&(R=`${this.speciesId}-${s}`)),R}getIconAtlasKey(A,s,R){const I=this.getVariantDataIndex(A),i=s&&Ys[I]&&R!==void 0&&Ys[I][R];return`pokemon_icons_${this.generation}${i?"v":""}`}getIconId(A,s,R,I){s===void 0&&(s=this.formIndex);const i=this.getVariantDataIndex(s);let a=this.speciesId.toString();const L=R&&Ys[i]&&I!==void 0&&Ys[i][I];switch(R&&!L&&(a+="s"),this.speciesId){case e.HIPPOPOTAS:case e.HIPPOWDON:case e.UNFEZANT:case e.FRILLISH:case e.JELLICENT:case e.PYROAR:a+=A?"-f":"";break}let S=this.getFormSpriteKey(s);if(S)switch(this.speciesId){case e.DUDUNSPARCE:break;case e.ZACIAN:case e.ZAMAZENTA:S.startsWith("behemoth")&&(S="crowned");default:a+=`-${S}`;break}return L&&(a+=`_${I+1}`),a}getCryKey(A){let s=this.speciesId;if(this.speciesId>2e3)switch(this.speciesId){case e.GALAR_SLOWPOKE:break;case e.ETERNAL_FLOETTE:break;case e.BLOODMOON_URSALUNA:break;default:s=s%2e3;break}let R=s.toString();const I=Ke(s).forms;if(I.length){A!==void 0&&A>=I.length&&(console.warn(`Attempted accessing form with index ${A} of species ${Ke(s).getName()} with only ${I.length||0} forms`),A=Math.min(A,I.length-1));const i=I[A||0].formKey;switch(i){case Ee.MEGA:case Ee.MEGA_X:case Ee.MEGA_Y:case Ee.GIGANTAMAX:case Ee.GIGANTAMAX_SINGLE:case Ee.GIGANTAMAX_RAPID:case"white":case"black":case"therian":case"sky":case"gorging":case"gulping":case"no-ice":case"hangry":case"crowned":case"eternamax":case"four":case"droopy":case"stretchy":case"hero":case"roaming":case"complete":case"10-complete":case"10":case"10-pc":case"super":case"unbound":case"pau":case"pompom":case"sensu":case"dusk":case"midnight":case"school":case"dawn-wings":case"dusk-mane":case"ultra":R+=`-${i}`;break}}return R}validateStarterMoveset(A,s){const R=this.getRootSpeciesId();for(const I of A){if(oE.hasOwnProperty(R)){const i=oE[R].findIndex(a=>a===I);if(i>-1&&s&1<<i)continue}if(JO.hasOwnProperty(this.speciesId)&&JO[this.speciesId].hasOwnProperty(this.formIndex)){if(!JO[this.speciesId][this.formIndex].find(i=>i[0]<=5&&i[1]===I))return!1}else if(!m0[this.speciesId].find(i=>i[0]<=5&&i[1]===I))return!1}return!0}loadAssets(A,s,R,I,i,a){return new Promise(L=>{const S=this.getSpriteKey(s,R,I,i);A.loadPokemonAtlas(S,this.getSpriteAtlasPath(s,R,I,i)),A.load.audio(`cry/${this.getCryKey(R)}`,`audio/cry/${this.getCryKey(R)}.m4a`),A.load.once(Phaser.Loader.Events.COMPLETE,()=>{const o=console.warn;console.warn=()=>{};const l=A.anims.generateFrameNames(S,{zeroPad:4,suffix:".png",start:1,end:400});console.warn=o,A.anims.exists(S)?A.anims.get(S).frameRate=12:A.anims.create({key:this.getSpriteKey(s,R,I,i),frames:l,frameRate:12,repeat:-1});let D=this.getSpriteAtlasPath(s,R,I,i).replace("variant/","").replace(/_[1-3]$/,"");A.experimentalSprites&&A.hasExpSprite(S)&&(D=`exp/${D}`);let c=Ys;D.split("/").map(P=>c?c=c[P]:null);const G=c;if(G&&i!==void 0&&G[i]===1){T(_=>new Promise(g=>{if(ii.hasOwnProperty(_))return g();A.cachedFetch(`./images/pokemon/variant/${D}.json`).then(H=>H.json()).then(H=>{ii[_]=H,g()})}),"populateVariantColors")(S).then(()=>L());return}L()}),a?A.load.isLoading()||A.load.start():L()})}cry(A,s,R){const I=this.getCryKey(this.formIndex);let i=A.sound.get(I);return i!=null&&i.pendingRemove&&(i=null),i=A.playSound(`cry/${i??I}`,s),R&&i.stop(),i}generateCandyColors(A){const s=A.textures.get(this.getSpriteKey(!1)),R=s.frames[s.firstFrame],I=s.getSourceImage(),i=document.createElement("canvas"),a=[],L=i.getContext("2d"),S=R;i.width=S.width,i.height=S.height,L==null||L.drawImage(I,S.cutX,S.cutY,S.width,S.height,0,0,S.width,S.height);const o=L==null?void 0:L.getImageData(S.cutX,S.cutY,S.width,S.height),l=o==null?void 0:o.data,D=[];if((l==null?void 0:l.length)!==void 0){for(let G=0;G<l.length;G+=4)if(l[G+3]){const P=l.slice(G,G+4),[_,g,H,F]=P;a.find(p=>p[0]===_&&p[1]===g&&p[2]===H)||a.push([_,g,H,F])}for(let G=0;G<l.length;G+=4)l.slice(G,G+3).reduce((_,g)=>_+g,0)&&D.push(ps({r:l[G],g:l[G+1],b:l[G+2],a:l[G+3]}))}let M=new Map;const c=Math.random;return Math.random=()=>Phaser.Math.RND.realInRange(0,1),A.executeWithSeedOffset(()=>{M=oT.quantize(D,2)},0,"This result should not vary"),Math.random=c,Array.from(M.keys()).map(G=>Object.values(G0(G)))}};T(Id,"PokemonSpeciesForm");let nl=Id;const id=class id extends nl{constructor(A,s,R,I,i,a,L,S,o,l,D,M,c,G,P,_,g,H,F,p,v,k,j,q,ie,z,Oe,...ae){super(L,S,o,l,D,M,c,G,P,_,g,H,F,p,v,k,j,z,!1),this.speciesId=A,this.formIndex=0,this.generation=s,this.subLegendary=R,this.legendary=I,this.mythical=i,this.species=a,this.growthRate=q,this.malePercent=ie,this.genderDiffs=z,this.canChangeForm=!!Oe,this.forms=ae,this.localize(),ae.forEach((Le,Ne)=>{Le.speciesId=A,Le.formIndex=Ne,Le.generation=s})}getName(A){if(A!==void 0&&this.forms.length){const s=this.forms[A];let R;switch(s.formKey){case Ee.MEGA:case Ee.PRIMAL:case Ee.ETERNAMAX:case Ee.MEGA_X:case Ee.MEGA_Y:R=s.formKey;break;default:s.formKey.indexOf(Ee.GIGANTAMAX)>-1?R="gigantamax":R=null}if(R)return U.t(`battlePokemonForm:${R}`,{pokemonName:this.name})}return this.name}localize(){this.name=U.t(`pokemon:${e[this.speciesId].toLowerCase()}`)}getWildSpeciesForLevel(A,s,R,I){return this.getSpeciesForLevel(A,s,!1,(R?Pe.WEAKER:Pe.AVERAGE)+(I!=null&&I.isEndless?1:0))}getTrainerSpeciesForLevel(A,s=!1,R,I=0){return this.getSpeciesForLevel(A,s,!0,R,I)}getStrengthLevelDiff(A){switch(Math.min(A,Pe.STRONGER)){case Pe.WEAKEST:return 60;case Pe.WEAKER:return 40;case Pe.WEAK:return 20;case Pe.AVERAGE:return 8;case Pe.STRONG:return 4;default:return 0}}getSpeciesForLevel(A,s=!1,R=!1,I=Pe.WEAKER,i=0){const a=this.getPrevolutionLevels();if(a.length)for(let G=a.length-1;G>=0;G--){const P=a[G];if(A<P[1])return P[0]}if(!s||!Ht.hasOwnProperty(this.speciesId))return this.speciesId;const L=Ht[this.speciesId],S=Phaser.Tweens.Builders.GetEaseFunction("Sine.easeIn"),o=Phaser.Tweens.Builders.GetEaseFunction("Sine.easeOut"),l=new Map;let D=0,M=1;for(const G of L){if(G.level>A)continue;let P;const _=Ke(G.speciesId),g=!this.isRegional()&&_.isRegional();if(!R&&g)P=0;else if(G.wildDelay===rb.NONE)if(I===Pe.STRONGER)P=1;else{const H=this.getStrengthLevelDiff(I),F=.875-.125*I;P=Math.min(F+S(Math.min(A-G.level,H)/H)*(1-F),1)}else{const H=Math.max(G.level-1+G.wildDelay*this.getStrengthLevelDiff(I),1);let F=Math.max(G.level>1?G.level:Math.floor(H/2),1);if(G.level<=1&&KA.hasOwnProperty(this.speciesId)){const p=Ht[KA[this.speciesId]].find(v=>v.speciesId===this.speciesId).level;p>1&&(F=p)}P=Math.min(.65*S(Math.min(Math.max(A-F,0),H)/H)+.35*o(Math.min(Math.max(A-F,0),H*2.5)/(H*2.5)),1)}i>=80&&R&&I>Pe.WEAKER&&(P=1,M=0),P>0&&(g&&(P/=_.isRareRegional()?16:4),D+=P,l.set(D,G.speciesId),1-P<M&&(M=1-P))}if(M===1||Phaser.Math.RND.realInRange(0,1)<M)return this.speciesId;const c=l.size===1?0:le(D);for(const G of l.keys())if(c<G)return Ke(l.get(G)).getSpeciesForLevel(A,!0,R,I,i);return this.speciesId}getEvolutionLevels(){const A=[];if(Ht.hasOwnProperty(this.speciesId))for(const s of Ht[this.speciesId]){const R=s.speciesId,I=s.level;A.push([R,I]);const i=Ke(R).getEvolutionLevels();for(const a of i)A.push(a)}return A}getPrevolutionLevels(){const A=[],s=Object.keys(Ht);for(const R of s)for(const I of Ht[R])if(I.speciesId===this.speciesId&&(!this.forms.length||!I.evoFormKey||I.evoFormKey===this.forms[this.formIndex].formKey)&&A.every(i=>i[0]!==parseInt(R))){const i=parseInt(R),a=I.level;A.push([i,a]);const L=Ke(i).getPrevolutionLevels();for(const S of L)A.push(S)}return A}getSimulatedEvolutionChain(A,s=!1,R=!1,I=!1){const i=[];if(KA.hasOwnProperty(this.speciesId)){const a=this.getPrevolutionLevels().reverse(),L=I?0:s||R?s&&R?2.5:5:10;i.push([a[0][0],1]);for(let l=1;l<a.length;l++){const D=Ht[a[l-1][0]].find(M=>M.speciesId===a[l][0]);i.push([a[l][0],Math.min(Math.max((D==null?void 0:D.level)+Math.round(a0(.5,1+L*.2)*Math.max(D==null?void 0:D.wildDelay,.5)*5)-1,2,D==null?void 0:D.level),A-1)])}const S=i[a.length-1][1],o=Ht[a[a.length-1][0]].find(l=>l.speciesId===this.speciesId);i.push([this.speciesId,Math.min(Math.max(S+Math.round(a0(.5,1+L*.2)*Math.max(o==null?void 0:o.wildDelay,.5)*5),S+1,o==null?void 0:o.level),A)])}else i.push([this.speciesId,1]);return i}getCompatibleFusionSpeciesFilter(){const A=Ht.hasOwnProperty(this.speciesId),s=KA.hasOwnProperty(this.speciesId),R=this.subLegendary,I=this.legendary,i=this.mythical;return a=>(R||I||i||Ht.hasOwnProperty(a.speciesId)===A&&KA.hasOwnProperty(a.speciesId)===s)&&a.subLegendary===R&&a.legendary===I&&a.mythical===i&&(this.isTrainerForbidden()||!a.isTrainerForbidden())}isObtainable(){return super.isObtainable()}hasVariants(){var s;let A=this.speciesId;if(this.forms.length>0){const R=(s=this.forms[this.formIndex])==null?void 0:s.formKey;R&&(A=`${A}-${R}`)}return Ys.hasOwnProperty(A)||Ys.hasOwnProperty(this.speciesId)}getFormSpriteKey(A){var s;return this.forms.length&&A!==void 0&&A>=this.forms.length&&(console.warn(`Attempted accessing form with index ${A} of species ${this.getName()} with only ${this.forms.length||0} forms`),A=Math.min(A,this.forms.length-1)),(s=this.forms)!=null&&s.length?this.forms[A||0].getFormSpriteKey():""}};T(id,"PokemonSpecies");let u=id;const ad=class ad extends nl{constructor(A,s,R,I,i,a,L,S,o,l,D,M,c,G,P,_,g,H,F,p,v,k){super(R,I,i,a,L,S,o,l,D,M,c,G,P,_,g,H,F,!!p,!!k||!s),this.starterSelectableKeys=["10","50","10-pc","50-pc","red","orange","yellow","green","blue","indigo","violet"],this.formName=A,this.formKey=s,this.formSpriteKey=v!==void 0?v:null}getFormSpriteKey(A){return this.formSpriteKey!==null?this.formSpriteKey:this.formKey}};T(ad,"PokemonForm");let K=ad;const G8=[Ee.MEGA,Ee.MEGA_X,Ee.MEGA_Y,Ee.PRIMAL,Ee.ORIGIN,Ee.THERIAN,Ee.GIGANTAMAX,Ee.GIGANTAMAX_RAPID,Ee.GIGANTAMAX_SINGLE,Ee.ETERNAMAX].map(E=>E.toString());function P8(E){const A=[],s=new Date;return s.setUTCHours(0,0,0,0),E.executeWithSeedOffset(()=>{for(;A.length<E6;){const R=parseInt(RE(Object.keys(CA)),10),I=Ke(R);A.includes(I)||A.push(I)}},0,s.getTime().toString()),A}T(P8,"getPokerusStarters");const MR=[];function _8(){MR.push(new u(e.BULBASAUR,1,!1,!1,!1,"Seed Pokémon",n.GRASS,n.POISON,.7,6.9,O.OVERGROW,O.NONE,O.CHLOROPHYLL,318,45,49,49,65,65,45,45,50,64,h.MEDIUM_SLOW,87.5,!1),new u(e.IVYSAUR,1,!1,!1,!1,"Seed Pokémon",n.GRASS,n.POISON,1,13,O.OVERGROW,O.NONE,O.CHLOROPHYLL,405,60,62,63,80,80,60,45,50,142,h.MEDIUM_SLOW,87.5,!1),new u(e.VENUSAUR,1,!1,!1,!1,"Seed Pokémon",n.GRASS,n.POISON,2,100,O.OVERGROW,O.NONE,O.CHLOROPHYLL,525,80,82,83,100,100,80,45,50,263,h.MEDIUM_SLOW,87.5,!0,!0,new K("Normal","",n.GRASS,n.POISON,2,100,O.OVERGROW,O.NONE,O.CHLOROPHYLL,525,80,82,83,100,100,80,45,50,263,!0,null,!0),new K("Mega",Ee.MEGA,n.GRASS,n.POISON,2.4,155.5,O.THICK_FAT,O.THICK_FAT,O.THICK_FAT,625,80,100,123,122,120,80,45,50,263,!0),new K("G-Max",Ee.GIGANTAMAX,n.GRASS,n.POISON,24,999.9,O.EFFECT_SPORE,O.NONE,O.EFFECT_SPORE,625,120,82,98,130,115,80,45,50,263,!0)),new u(e.CHARMANDER,1,!1,!1,!1,"Lizard Pokémon",n.FIRE,null,.6,8.5,O.BLAZE,O.NONE,O.SOLAR_POWER,309,39,52,43,60,50,65,45,50,62,h.MEDIUM_SLOW,87.5,!1),new u(e.CHARMELEON,1,!1,!1,!1,"Flame Pokémon",n.FIRE,null,1.1,19,O.BLAZE,O.NONE,O.SOLAR_POWER,405,58,64,58,80,65,80,45,50,142,h.MEDIUM_SLOW,87.5,!1),new u(e.CHARIZARD,1,!1,!1,!1,"Flame Pokémon",n.FIRE,n.FLYING,1.7,90.5,O.BLAZE,O.NONE,O.SOLAR_POWER,534,78,84,78,109,85,100,45,50,267,h.MEDIUM_SLOW,87.5,!1,!0,new K("Normal","",n.FIRE,n.FLYING,1.7,90.5,O.BLAZE,O.NONE,O.SOLAR_POWER,534,78,84,78,109,85,100,45,50,267,!1,null,!0),new K("Mega X",Ee.MEGA_X,n.FIRE,n.DRAGON,1.7,110.5,O.TOUGH_CLAWS,O.NONE,O.TOUGH_CLAWS,634,78,130,111,130,85,100,45,50,267),new K("Mega Y",Ee.MEGA_Y,n.FIRE,n.FLYING,1.7,100.5,O.DROUGHT,O.NONE,O.DROUGHT,634,78,104,78,159,115,100,45,50,267),new K("G-Max",Ee.GIGANTAMAX,n.FIRE,n.FLYING,28,999.9,O.BERSERK,O.NONE,O.BERSERK,634,118,84,93,139,100,100,45,50,267)),new u(e.SQUIRTLE,1,!1,!1,!1,"Tiny Turtle Pokémon",n.WATER,null,.5,9,O.TORRENT,O.NONE,O.RAIN_DISH,314,44,48,65,50,64,43,45,50,63,h.MEDIUM_SLOW,87.5,!1),new u(e.WARTORTLE,1,!1,!1,!1,"Turtle Pokémon",n.WATER,null,1,22.5,O.TORRENT,O.NONE,O.RAIN_DISH,405,59,63,80,65,80,58,45,50,142,h.MEDIUM_SLOW,87.5,!1),new u(e.BLASTOISE,1,!1,!1,!1,"Shellfish Pokémon",n.WATER,null,1.6,85.5,O.TORRENT,O.NONE,O.RAIN_DISH,530,79,83,100,85,105,78,45,50,265,h.MEDIUM_SLOW,87.5,!1,!0,new K("Normal","",n.WATER,null,1.6,85.5,O.TORRENT,O.NONE,O.RAIN_DISH,530,79,83,100,85,105,78,45,50,265,!1,null,!0),new K("Mega",Ee.MEGA,n.WATER,null,1.6,101.1,O.MEGA_LAUNCHER,O.NONE,O.MEGA_LAUNCHER,630,79,103,120,135,115,78,45,50,265),new K("G-Max",Ee.GIGANTAMAX,n.WATER,n.STEEL,25,999.9,O.SHELL_ARMOR,O.NONE,O.SHELL_ARMOR,630,119,83,135,115,110,68,45,50,265)),new u(e.CATERPIE,1,!1,!1,!1,"Worm Pokémon",n.BUG,null,.3,2.9,O.SHIELD_DUST,O.NONE,O.RUN_AWAY,195,45,30,35,20,20,45,255,50,39,h.MEDIUM_FAST,50,!1),new u(e.METAPOD,1,!1,!1,!1,"Cocoon Pokémon",n.BUG,null,.7,9.9,O.SHED_SKIN,O.NONE,O.SHED_SKIN,205,50,20,55,25,25,30,120,50,72,h.MEDIUM_FAST,50,!1),new u(e.BUTTERFREE,1,!1,!1,!1,"Butterfly Pokémon",n.BUG,n.FLYING,1.1,32,O.COMPOUND_EYES,O.NONE,O.TINTED_LENS,395,60,45,50,90,80,70,45,50,198,h.MEDIUM_FAST,50,!0,!0,new K("Normal","",n.BUG,n.FLYING,1.1,32,O.COMPOUND_EYES,O.NONE,O.TINTED_LENS,395,60,45,50,90,80,70,45,50,198,!0,null,!0),new K("G-Max",Ee.GIGANTAMAX,n.BUG,n.FLYING,17,999.9,O.COMPOUND_EYES,O.NONE,O.COMPOUND_EYES,495,85,35,80,120,90,85,45,50,198,!0)),new u(e.WEEDLE,1,!1,!1,!1,"Hairy Bug Pokémon",n.BUG,n.POISON,.3,3.2,O.SHIELD_DUST,O.NONE,O.RUN_AWAY,195,40,35,30,20,20,50,255,70,39,h.MEDIUM_FAST,50,!1),new u(e.KAKUNA,1,!1,!1,!1,"Cocoon Pokémon",n.BUG,n.POISON,.6,10,O.SHED_SKIN,O.NONE,O.SHED_SKIN,205,45,25,50,25,25,35,120,70,72,h.MEDIUM_FAST,50,!1),new u(e.BEEDRILL,1,!1,!1,!1,"Poison Bee Pokémon",n.BUG,n.POISON,1,29.5,O.SWARM,O.NONE,O.SNIPER,395,65,90,40,45,80,75,45,70,178,h.MEDIUM_FAST,50,!1,!0,new K("Normal","",n.BUG,n.POISON,1,29.5,O.SWARM,O.NONE,O.SNIPER,395,65,90,40,45,80,75,45,70,178,!1,null,!0),new K("Mega",Ee.MEGA,n.BUG,n.POISON,1.4,40.5,O.ADAPTABILITY,O.NONE,O.ADAPTABILITY,495,65,150,40,15,80,145,45,70,178)),new u(e.PIDGEY,1,!1,!1,!1,"Tiny Bird Pokémon",n.NORMAL,n.FLYING,.3,1.8,O.KEEN_EYE,O.TANGLED_FEET,O.BIG_PECKS,251,40,45,40,35,35,56,255,70,50,h.MEDIUM_SLOW,50,!1),new u(e.PIDGEOTTO,1,!1,!1,!1,"Bird Pokémon",n.NORMAL,n.FLYING,1.1,30,O.KEEN_EYE,O.TANGLED_FEET,O.BIG_PECKS,349,63,60,55,50,50,71,120,70,122,h.MEDIUM_SLOW,50,!1),new u(e.PIDGEOT,1,!1,!1,!1,"Bird Pokémon",n.NORMAL,n.FLYING,1.5,39.5,O.KEEN_EYE,O.TANGLED_FEET,O.BIG_PECKS,479,83,80,75,70,70,101,45,70,216,h.MEDIUM_SLOW,50,!1,!0,new K("Normal","",n.NORMAL,n.FLYING,1.5,39.5,O.KEEN_EYE,O.TANGLED_FEET,O.BIG_PECKS,479,83,80,75,70,70,101,45,70,216,!1,null,!0),new K("Mega",Ee.MEGA,n.NORMAL,n.FLYING,2.2,50.5,O.NO_GUARD,O.NO_GUARD,O.NO_GUARD,579,83,80,80,135,80,121,45,70,216)),new u(e.RATTATA,1,!1,!1,!1,"Mouse Pokémon",n.NORMAL,null,.3,3.5,O.RUN_AWAY,O.GUTS,O.HUSTLE,253,30,56,35,25,35,72,255,70,51,h.MEDIUM_FAST,50,!0),new u(e.RATICATE,1,!1,!1,!1,"Mouse Pokémon",n.NORMAL,null,.7,18.5,O.RUN_AWAY,O.GUTS,O.HUSTLE,413,55,81,60,50,70,97,127,70,145,h.MEDIUM_FAST,50,!0),new u(e.SPEAROW,1,!1,!1,!1,"Tiny Bird Pokémon",n.NORMAL,n.FLYING,.3,2,O.KEEN_EYE,O.NONE,O.SNIPER,262,40,60,30,31,31,70,255,70,52,h.MEDIUM_FAST,50,!1),new u(e.FEAROW,1,!1,!1,!1,"Beak Pokémon",n.NORMAL,n.FLYING,1.2,38,O.KEEN_EYE,O.NONE,O.SNIPER,442,65,90,65,61,61,100,90,70,155,h.MEDIUM_FAST,50,!1),new u(e.EKANS,1,!1,!1,!1,"Snake Pokémon",n.POISON,null,2,6.9,O.INTIMIDATE,O.SHED_SKIN,O.UNNERVE,288,35,60,44,40,54,55,255,70,58,h.MEDIUM_FAST,50,!1),new u(e.ARBOK,1,!1,!1,!1,"Cobra Pokémon",n.POISON,null,3.5,65,O.INTIMIDATE,O.SHED_SKIN,O.UNNERVE,448,60,95,69,65,79,80,90,70,157,h.MEDIUM_FAST,50,!1),new u(e.PIKACHU,1,!1,!1,!1,"Mouse Pokémon",n.ELECTRIC,null,.4,6,O.STATIC,O.NONE,O.LIGHTNING_ROD,320,35,55,40,50,50,90,190,50,112,h.MEDIUM_FAST,50,!0,!0,new K("Normal","",n.ELECTRIC,null,.4,6,O.STATIC,O.NONE,O.LIGHTNING_ROD,320,35,55,40,50,50,90,190,50,112,!0,null,!0),new K("Partner","partner",n.ELECTRIC,null,.4,6,O.STATIC,O.NONE,O.LIGHTNING_ROD,430,45,80,50,75,60,120,190,50,112,!0,null,!0),new K("Cosplay","cosplay",n.ELECTRIC,null,.4,6,O.STATIC,O.NONE,O.LIGHTNING_ROD,430,45,80,50,75,60,120,190,50,112,!0,null,!0),new K("Cool Cosplay","cool-cosplay",n.ELECTRIC,null,.4,6,O.STATIC,O.NONE,O.LIGHTNING_ROD,430,45,80,50,75,60,120,190,50,112,!0,null,!0),new K("Beauty Cosplay","beauty-cosplay",n.ELECTRIC,null,.4,6,O.STATIC,O.NONE,O.LIGHTNING_ROD,430,45,80,50,75,60,120,190,50,112,!0,null,!0),new K("Cute Cosplay","cute-cosplay",n.ELECTRIC,null,.4,6,O.STATIC,O.NONE,O.LIGHTNING_ROD,430,45,80,50,75,60,120,190,50,112,!0,null,!0),new K("Smart Cosplay","smart-cosplay",n.ELECTRIC,null,.4,6,O.STATIC,O.NONE,O.LIGHTNING_ROD,430,45,80,50,75,60,120,190,50,112,!0,null,!0),new K("Tough Cosplay","tough-cosplay",n.ELECTRIC,null,.4,6,O.STATIC,O.NONE,O.LIGHTNING_ROD,430,45,80,50,75,60,120,190,50,112,!0,null,!0),new K("G-Max",Ee.GIGANTAMAX,n.ELECTRIC,null,21,999.9,O.LIGHTNING_ROD,O.NONE,O.LIGHTNING_ROD,530,125,95,60,90,70,90,190,50,112)),new u(e.RAICHU,1,!1,!1,!1,"Mouse Pokémon",n.ELECTRIC,null,.8,30,O.STATIC,O.NONE,O.LIGHTNING_ROD,485,60,90,55,90,80,110,75,50,243,h.MEDIUM_FAST,50,!0),new u(e.SANDSHREW,1,!1,!1,!1,"Mouse Pokémon",n.GROUND,null,.6,12,O.SAND_VEIL,O.NONE,O.SAND_RUSH,300,50,75,85,20,30,40,255,50,60,h.MEDIUM_FAST,50,!1),new u(e.SANDSLASH,1,!1,!1,!1,"Mouse Pokémon",n.GROUND,null,1,29.5,O.SAND_VEIL,O.NONE,O.SAND_RUSH,450,75,100,110,45,55,65,90,50,158,h.MEDIUM_FAST,50,!1),new u(e.NIDORAN_F,1,!1,!1,!1,"Poison Pin Pokémon",n.POISON,null,.4,7,O.POISON_POINT,O.RIVALRY,O.HUSTLE,275,55,47,52,40,40,41,235,50,55,h.MEDIUM_SLOW,0,!1),new u(e.NIDORINA,1,!1,!1,!1,"Poison Pin Pokémon",n.POISON,null,.8,20,O.POISON_POINT,O.RIVALRY,O.HUSTLE,365,70,62,67,55,55,56,120,50,128,h.MEDIUM_SLOW,0,!1),new u(e.NIDOQUEEN,1,!1,!1,!1,"Drill Pokémon",n.POISON,n.GROUND,1.3,60,O.POISON_POINT,O.RIVALRY,O.SHEER_FORCE,505,90,92,87,75,85,76,45,50,253,h.MEDIUM_SLOW,0,!1),new u(e.NIDORAN_M,1,!1,!1,!1,"Poison Pin Pokémon",n.POISON,null,.5,9,O.POISON_POINT,O.RIVALRY,O.HUSTLE,273,46,57,40,40,40,50,235,50,55,h.MEDIUM_SLOW,100,!1),new u(e.NIDORINO,1,!1,!1,!1,"Poison Pin Pokémon",n.POISON,null,.9,19.5,O.POISON_POINT,O.RIVALRY,O.HUSTLE,365,61,72,57,55,55,65,120,50,128,h.MEDIUM_SLOW,100,!1),new u(e.NIDOKING,1,!1,!1,!1,"Drill Pokémon",n.POISON,n.GROUND,1.4,62,O.POISON_POINT,O.RIVALRY,O.SHEER_FORCE,505,81,102,77,85,75,85,45,50,253,h.MEDIUM_SLOW,100,!1),new u(e.CLEFAIRY,1,!1,!1,!1,"Fairy Pokémon",n.FAIRY,null,.6,7.5,O.CUTE_CHARM,O.MAGIC_GUARD,O.FRIEND_GUARD,323,70,45,48,60,65,35,150,140,113,h.FAST,25,!1),new u(e.CLEFABLE,1,!1,!1,!1,"Fairy Pokémon",n.FAIRY,null,1.3,40,O.CUTE_CHARM,O.MAGIC_GUARD,O.UNAWARE,483,95,70,73,95,90,60,25,140,242,h.FAST,25,!1),new u(e.VULPIX,1,!1,!1,!1,"Fox Pokémon",n.FIRE,null,.6,9.9,O.FLASH_FIRE,O.NONE,O.DROUGHT,299,38,41,40,50,65,65,190,50,60,h.MEDIUM_FAST,25,!1),new u(e.NINETALES,1,!1,!1,!1,"Fox Pokémon",n.FIRE,null,1.1,19.9,O.FLASH_FIRE,O.NONE,O.DROUGHT,505,73,76,75,81,100,100,75,50,177,h.MEDIUM_FAST,25,!1),new u(e.JIGGLYPUFF,1,!1,!1,!1,"Balloon Pokémon",n.NORMAL,n.FAIRY,.5,5.5,O.CUTE_CHARM,O.COMPETITIVE,O.FRIEND_GUARD,270,115,45,20,45,25,20,170,50,95,h.FAST,25,!1),new u(e.WIGGLYTUFF,1,!1,!1,!1,"Balloon Pokémon",n.NORMAL,n.FAIRY,1,12,O.CUTE_CHARM,O.COMPETITIVE,O.FRISK,435,140,70,45,85,50,45,50,50,218,h.FAST,25,!1),new u(e.ZUBAT,1,!1,!1,!1,"Bat Pokémon",n.POISON,n.FLYING,.8,7.5,O.INNER_FOCUS,O.NONE,O.INFILTRATOR,245,40,45,35,30,40,55,255,50,49,h.MEDIUM_FAST,50,!0),new u(e.GOLBAT,1,!1,!1,!1,"Bat Pokémon",n.POISON,n.FLYING,1.6,55,O.INNER_FOCUS,O.NONE,O.INFILTRATOR,455,75,80,70,65,75,90,90,50,159,h.MEDIUM_FAST,50,!0),new u(e.ODDISH,1,!1,!1,!1,"Weed Pokémon",n.GRASS,n.POISON,.5,5.4,O.CHLOROPHYLL,O.NONE,O.RUN_AWAY,320,45,50,55,75,65,30,255,50,64,h.MEDIUM_SLOW,50,!1),new u(e.GLOOM,1,!1,!1,!1,"Weed Pokémon",n.GRASS,n.POISON,.8,8.6,O.CHLOROPHYLL,O.NONE,O.STENCH,395,60,65,70,85,75,40,120,50,138,h.MEDIUM_SLOW,50,!0),new u(e.VILEPLUME,1,!1,!1,!1,"Flower Pokémon",n.GRASS,n.POISON,1.2,18.6,O.CHLOROPHYLL,O.NONE,O.EFFECT_SPORE,490,75,80,85,110,90,50,45,50,245,h.MEDIUM_SLOW,50,!0),new u(e.PARAS,1,!1,!1,!1,"Mushroom Pokémon",n.BUG,n.GRASS,.3,5.4,O.EFFECT_SPORE,O.DRY_SKIN,O.DAMP,285,35,70,55,45,55,25,190,70,57,h.MEDIUM_FAST,50,!1),new u(e.PARASECT,1,!1,!1,!1,"Mushroom Pokémon",n.BUG,n.GRASS,1,29.5,O.EFFECT_SPORE,O.DRY_SKIN,O.DAMP,405,60,95,80,60,80,30,75,70,142,h.MEDIUM_FAST,50,!1),new u(e.VENONAT,1,!1,!1,!1,"Insect Pokémon",n.BUG,n.POISON,1,30,O.COMPOUND_EYES,O.TINTED_LENS,O.RUN_AWAY,305,60,55,50,40,55,45,190,70,61,h.MEDIUM_FAST,50,!1),new u(e.VENOMOTH,1,!1,!1,!1,"Poison Moth Pokémon",n.BUG,n.POISON,1.5,12.5,O.SHIELD_DUST,O.TINTED_LENS,O.WONDER_SKIN,450,70,65,60,90,75,90,75,70,158,h.MEDIUM_FAST,50,!1),new u(e.DIGLETT,1,!1,!1,!1,"Mole Pokémon",n.GROUND,null,.2,.8,O.SAND_VEIL,O.ARENA_TRAP,O.SAND_FORCE,265,10,55,25,35,45,95,255,50,53,h.MEDIUM_FAST,50,!1),new u(e.DUGTRIO,1,!1,!1,!1,"Mole Pokémon",n.GROUND,null,.7,33.3,O.SAND_VEIL,O.ARENA_TRAP,O.SAND_FORCE,425,35,100,50,50,70,120,50,50,149,h.MEDIUM_FAST,50,!1),new u(e.MEOWTH,1,!1,!1,!1,"Scratch Cat Pokémon",n.NORMAL,null,.4,4.2,O.PICKUP,O.TECHNICIAN,O.UNNERVE,290,40,45,35,40,40,90,255,50,58,h.MEDIUM_FAST,50,!1,!0,new K("Normal","",n.NORMAL,null,.4,4.2,O.PICKUP,O.TECHNICIAN,O.UNNERVE,290,40,45,35,40,40,90,255,50,58,!1,null,!0),new K("G-Max",Ee.GIGANTAMAX,n.NORMAL,null,33,999.9,O.TECHNICIAN,O.TECHNICIAN,O.TECHNICIAN,540,115,110,65,65,70,115,255,50,58)),new u(e.PERSIAN,1,!1,!1,!1,"Classy Cat Pokémon",n.NORMAL,null,1,32,O.LIMBER,O.TECHNICIAN,O.UNNERVE,440,65,70,60,65,65,115,90,50,154,h.MEDIUM_FAST,50,!1),new u(e.PSYDUCK,1,!1,!1,!1,"Duck Pokémon",n.WATER,null,.8,19.6,O.DAMP,O.CLOUD_NINE,O.SWIFT_SWIM,320,50,52,48,65,50,55,190,50,64,h.MEDIUM_FAST,50,!1),new u(e.GOLDUCK,1,!1,!1,!1,"Duck Pokémon",n.WATER,null,1.7,76.6,O.DAMP,O.CLOUD_NINE,O.SWIFT_SWIM,500,80,82,78,95,80,85,75,50,175,h.MEDIUM_FAST,50,!1),new u(e.MANKEY,1,!1,!1,!1,"Pig Monkey Pokémon",n.FIGHTING,null,.5,28,O.VITAL_SPIRIT,O.ANGER_POINT,O.DEFIANT,305,40,80,35,35,45,70,190,70,61,h.MEDIUM_FAST,50,!1),new u(e.PRIMEAPE,1,!1,!1,!1,"Pig Monkey Pokémon",n.FIGHTING,null,1,32,O.VITAL_SPIRIT,O.ANGER_POINT,O.DEFIANT,455,65,105,60,60,70,95,75,70,159,h.MEDIUM_FAST,50,!1),new u(e.GROWLITHE,1,!1,!1,!1,"Puppy Pokémon",n.FIRE,null,.7,19,O.INTIMIDATE,O.FLASH_FIRE,O.JUSTIFIED,350,55,70,45,70,50,60,190,50,70,h.SLOW,75,!1),new u(e.ARCANINE,1,!1,!1,!1,"Legendary Pokémon",n.FIRE,null,1.9,155,O.INTIMIDATE,O.FLASH_FIRE,O.JUSTIFIED,555,90,110,80,100,80,95,75,50,194,h.SLOW,75,!1),new u(e.POLIWAG,1,!1,!1,!1,"Tadpole Pokémon",n.WATER,null,.6,12.4,O.WATER_ABSORB,O.DAMP,O.SWIFT_SWIM,300,40,50,40,40,40,90,255,50,60,h.MEDIUM_SLOW,50,!1),new u(e.POLIWHIRL,1,!1,!1,!1,"Tadpole Pokémon",n.WATER,null,1,20,O.WATER_ABSORB,O.DAMP,O.SWIFT_SWIM,385,65,65,65,50,50,90,120,50,135,h.MEDIUM_SLOW,50,!1),new u(e.POLIWRATH,1,!1,!1,!1,"Tadpole Pokémon",n.WATER,n.FIGHTING,1.3,54,O.WATER_ABSORB,O.DAMP,O.SWIFT_SWIM,510,90,95,95,70,90,70,45,50,255,h.MEDIUM_SLOW,50,!1),new u(e.ABRA,1,!1,!1,!1,"Psi Pokémon",n.PSYCHIC,null,.9,19.5,O.SYNCHRONIZE,O.INNER_FOCUS,O.MAGIC_GUARD,310,25,20,15,105,55,90,200,50,62,h.MEDIUM_SLOW,75,!1),new u(e.KADABRA,1,!1,!1,!1,"Psi Pokémon",n.PSYCHIC,null,1.3,56.5,O.SYNCHRONIZE,O.INNER_FOCUS,O.MAGIC_GUARD,400,40,35,30,120,70,105,100,50,140,h.MEDIUM_SLOW,75,!0),new u(e.ALAKAZAM,1,!1,!1,!1,"Psi Pokémon",n.PSYCHIC,null,1.5,48,O.SYNCHRONIZE,O.INNER_FOCUS,O.MAGIC_GUARD,500,55,50,45,135,95,120,50,50,250,h.MEDIUM_SLOW,75,!0,!0,new K("Normal","",n.PSYCHIC,null,1.5,48,O.SYNCHRONIZE,O.INNER_FOCUS,O.MAGIC_GUARD,500,55,50,45,135,95,120,50,50,250,!0,null,!0),new K("Mega",Ee.MEGA,n.PSYCHIC,null,1.2,48,O.TRACE,O.TRACE,O.TRACE,600,55,50,65,175,105,150,50,50,250,!0)),new u(e.MACHOP,1,!1,!1,!1,"Superpower Pokémon",n.FIGHTING,null,.8,19.5,O.GUTS,O.NO_GUARD,O.STEADFAST,305,70,80,50,35,35,35,180,50,61,h.MEDIUM_SLOW,75,!1),new u(e.MACHOKE,1,!1,!1,!1,"Superpower Pokémon",n.FIGHTING,null,1.5,70.5,O.GUTS,O.NO_GUARD,O.STEADFAST,405,80,100,70,50,60,45,90,50,142,h.MEDIUM_SLOW,75,!1),new u(e.MACHAMP,1,!1,!1,!1,"Superpower Pokémon",n.FIGHTING,null,1.6,130,O.GUTS,O.NO_GUARD,O.STEADFAST,505,90,130,80,65,85,55,45,50,253,h.MEDIUM_SLOW,75,!1,!0,new K("Normal","",n.FIGHTING,null,1.6,130,O.GUTS,O.NO_GUARD,O.STEADFAST,505,90,130,80,65,85,55,45,50,253,!1,null,!0),new K("G-Max",Ee.GIGANTAMAX,n.FIGHTING,null,25,999.9,O.GUTS,O.GUTS,O.GUTS,605,115,170,95,65,95,65,45,50,253)),new u(e.BELLSPROUT,1,!1,!1,!1,"Flower Pokémon",n.GRASS,n.POISON,.7,4,O.CHLOROPHYLL,O.NONE,O.GLUTTONY,300,50,75,35,70,30,40,255,70,60,h.MEDIUM_SLOW,50,!1),new u(e.WEEPINBELL,1,!1,!1,!1,"Flycatcher Pokémon",n.GRASS,n.POISON,1,6.4,O.CHLOROPHYLL,O.NONE,O.GLUTTONY,390,65,90,50,85,45,55,120,70,137,h.MEDIUM_SLOW,50,!1),new u(e.VICTREEBEL,1,!1,!1,!1,"Flycatcher Pokémon",n.GRASS,n.POISON,1.7,15.5,O.CHLOROPHYLL,O.NONE,O.GLUTTONY,490,80,105,65,100,70,70,45,70,221,h.MEDIUM_SLOW,50,!1),new u(e.TENTACOOL,1,!1,!1,!1,"Jellyfish Pokémon",n.WATER,n.POISON,.9,45.5,O.CLEAR_BODY,O.LIQUID_OOZE,O.RAIN_DISH,335,40,40,35,50,100,70,190,50,67,h.SLOW,50,!1),new u(e.TENTACRUEL,1,!1,!1,!1,"Jellyfish Pokémon",n.WATER,n.POISON,1.6,55,O.CLEAR_BODY,O.LIQUID_OOZE,O.RAIN_DISH,515,80,70,65,80,120,100,60,50,180,h.SLOW,50,!1),new u(e.GEODUDE,1,!1,!1,!1,"Rock Pokémon",n.ROCK,n.GROUND,.4,20,O.ROCK_HEAD,O.STURDY,O.SAND_VEIL,300,40,80,100,30,30,20,255,70,60,h.MEDIUM_SLOW,50,!1),new u(e.GRAVELER,1,!1,!1,!1,"Rock Pokémon",n.ROCK,n.GROUND,1,105,O.ROCK_HEAD,O.STURDY,O.SAND_VEIL,390,55,95,115,45,45,35,120,70,137,h.MEDIUM_SLOW,50,!1),new u(e.GOLEM,1,!1,!1,!1,"Megaton Pokémon",n.ROCK,n.GROUND,1.4,300,O.ROCK_HEAD,O.STURDY,O.SAND_VEIL,495,80,120,130,55,65,45,45,70,223,h.MEDIUM_SLOW,50,!1),new u(e.PONYTA,1,!1,!1,!1,"Fire Horse Pokémon",n.FIRE,null,1,30,O.RUN_AWAY,O.FLASH_FIRE,O.FLAME_BODY,410,50,85,55,65,65,90,190,50,82,h.MEDIUM_FAST,50,!1),new u(e.RAPIDASH,1,!1,!1,!1,"Fire Horse Pokémon",n.FIRE,null,1.7,95,O.RUN_AWAY,O.FLASH_FIRE,O.FLAME_BODY,500,65,100,70,80,80,105,60,50,175,h.MEDIUM_FAST,50,!1),new u(e.SLOWPOKE,1,!1,!1,!1,"Dopey Pokémon",n.WATER,n.PSYCHIC,1.2,36,O.OBLIVIOUS,O.OWN_TEMPO,O.REGENERATOR,315,90,65,65,40,40,15,190,50,63,h.MEDIUM_FAST,50,!1),new u(e.SLOWBRO,1,!1,!1,!1,"Hermit Crab Pokémon",n.WATER,n.PSYCHIC,1.6,78.5,O.OBLIVIOUS,O.OWN_TEMPO,O.REGENERATOR,490,95,75,110,100,80,30,75,50,172,h.MEDIUM_FAST,50,!1,!0,new K("Normal","",n.WATER,n.PSYCHIC,1.6,78.5,O.OBLIVIOUS,O.OWN_TEMPO,O.REGENERATOR,490,95,75,110,100,80,30,75,50,172,!1,null,!0),new K("Mega",Ee.MEGA,n.WATER,n.PSYCHIC,2,120,O.SHELL_ARMOR,O.SHELL_ARMOR,O.SHELL_ARMOR,590,95,75,180,130,80,30,75,50,172)),new u(e.MAGNEMITE,1,!1,!1,!1,"Magnet Pokémon",n.ELECTRIC,n.STEEL,.3,6,O.MAGNET_PULL,O.STURDY,O.ANALYTIC,325,25,35,70,95,55,45,190,50,65,h.MEDIUM_FAST,null,!1),new u(e.MAGNETON,1,!1,!1,!1,"Magnet Pokémon",n.ELECTRIC,n.STEEL,1,60,O.MAGNET_PULL,O.STURDY,O.ANALYTIC,465,50,60,95,120,70,70,60,50,163,h.MEDIUM_FAST,null,!1),new u(e.FARFETCHD,1,!1,!1,!1,"Wild Duck Pokémon",n.NORMAL,n.FLYING,.8,15,O.KEEN_EYE,O.INNER_FOCUS,O.DEFIANT,377,52,90,55,58,62,60,45,50,132,h.MEDIUM_FAST,50,!1),new u(e.DODUO,1,!1,!1,!1,"Twin Bird Pokémon",n.NORMAL,n.FLYING,1.4,39.2,O.RUN_AWAY,O.EARLY_BIRD,O.TANGLED_FEET,310,35,85,45,35,35,75,190,70,62,h.MEDIUM_FAST,50,!0),new u(e.DODRIO,1,!1,!1,!1,"Triple Bird Pokémon",n.NORMAL,n.FLYING,1.8,85.2,O.RUN_AWAY,O.EARLY_BIRD,O.TANGLED_FEET,470,60,110,70,60,60,110,45,70,165,h.MEDIUM_FAST,50,!0),new u(e.SEEL,1,!1,!1,!1,"Sea Lion Pokémon",n.WATER,null,1.1,90,O.THICK_FAT,O.HYDRATION,O.ICE_BODY,325,65,45,55,45,70,45,190,70,65,h.MEDIUM_FAST,50,!1),new u(e.DEWGONG,1,!1,!1,!1,"Sea Lion Pokémon",n.WATER,n.ICE,1.7,120,O.THICK_FAT,O.HYDRATION,O.ICE_BODY,475,90,70,80,70,95,70,75,70,166,h.MEDIUM_FAST,50,!1),new u(e.GRIMER,1,!1,!1,!1,"Sludge Pokémon",n.POISON,null,.9,30,O.STENCH,O.STICKY_HOLD,O.POISON_TOUCH,325,80,80,50,40,50,25,190,70,65,h.MEDIUM_FAST,50,!1),new u(e.MUK,1,!1,!1,!1,"Sludge Pokémon",n.POISON,null,1.2,30,O.STENCH,O.STICKY_HOLD,O.POISON_TOUCH,500,105,105,75,65,100,50,75,70,175,h.MEDIUM_FAST,50,!1),new u(e.SHELLDER,1,!1,!1,!1,"Bivalve Pokémon",n.WATER,null,.3,4,O.SHELL_ARMOR,O.SKILL_LINK,O.OVERCOAT,305,30,65,100,45,25,40,190,50,61,h.SLOW,50,!1),new u(e.CLOYSTER,1,!1,!1,!1,"Bivalve Pokémon",n.WATER,n.ICE,1.5,132.5,O.SHELL_ARMOR,O.SKILL_LINK,O.OVERCOAT,525,50,95,180,85,45,70,60,50,184,h.SLOW,50,!1),new u(e.GASTLY,1,!1,!1,!1,"Gas Pokémon",n.GHOST,n.POISON,1.3,.1,O.LEVITATE,O.NONE,O.NONE,310,30,35,30,100,35,80,190,50,62,h.MEDIUM_SLOW,50,!1),new u(e.HAUNTER,1,!1,!1,!1,"Gas Pokémon",n.GHOST,n.POISON,1.6,.1,O.LEVITATE,O.NONE,O.NONE,405,45,50,45,115,55,95,90,50,142,h.MEDIUM_SLOW,50,!1),new u(e.GENGAR,1,!1,!1,!1,"Shadow Pokémon",n.GHOST,n.POISON,1.5,40.5,O.CURSED_BODY,O.NONE,O.NONE,500,60,65,60,130,75,110,45,50,250,h.MEDIUM_SLOW,50,!1,!0,new K("Normal","",n.GHOST,n.POISON,1.5,40.5,O.CURSED_BODY,O.NONE,O.NONE,500,60,65,60,130,75,110,45,50,250,!1,null,!0),new K("Mega",Ee.MEGA,n.GHOST,n.POISON,1.4,40.5,O.SHADOW_TAG,O.NONE,O.NONE,600,60,65,80,170,95,130,45,50,250),new K("G-Max",Ee.GIGANTAMAX,n.GHOST,n.POISON,20,999.9,O.CURSED_BODY,O.NONE,O.NONE,600,140,65,70,140,85,100,45,50,250)),new u(e.ONIX,1,!1,!1,!1,"Rock Snake Pokémon",n.ROCK,n.GROUND,8.8,210,O.ROCK_HEAD,O.STURDY,O.WEAK_ARMOR,385,35,45,160,30,45,70,45,50,77,h.MEDIUM_FAST,50,!1),new u(e.DROWZEE,1,!1,!1,!1,"Hypnosis Pokémon",n.PSYCHIC,null,1,32.4,O.INSOMNIA,O.FOREWARN,O.INNER_FOCUS,328,60,48,45,43,90,42,190,70,66,h.MEDIUM_FAST,50,!1),new u(e.HYPNO,1,!1,!1,!1,"Hypnosis Pokémon",n.PSYCHIC,null,1.6,75.6,O.INSOMNIA,O.FOREWARN,O.INNER_FOCUS,483,85,73,70,73,115,67,75,70,169,h.MEDIUM_FAST,50,!0),new u(e.KRABBY,1,!1,!1,!1,"River Crab Pokémon",n.WATER,null,.4,6.5,O.HYPER_CUTTER,O.SHELL_ARMOR,O.SHEER_FORCE,325,30,105,90,25,25,50,225,50,65,h.MEDIUM_FAST,50,!1),new u(e.KINGLER,1,!1,!1,!1,"Pincer Pokémon",n.WATER,null,1.3,60,O.HYPER_CUTTER,O.SHELL_ARMOR,O.SHEER_FORCE,475,55,130,115,50,50,75,60,50,166,h.MEDIUM_FAST,50,!1,!0,new K("Normal","",n.WATER,null,1.3,60,O.HYPER_CUTTER,O.SHELL_ARMOR,O.SHEER_FORCE,475,55,130,115,50,50,75,60,50,166,!1,null,!0),new K("G-Max",Ee.GIGANTAMAX,n.WATER,null,19,999.9,O.TOUGH_CLAWS,O.TOUGH_CLAWS,O.TOUGH_CLAWS,575,90,155,140,50,70,70,60,50,166)),new u(e.VOLTORB,1,!1,!1,!1,"Ball Pokémon",n.ELECTRIC,null,.5,10.4,O.SOUNDPROOF,O.STATIC,O.AFTERMATH,330,40,30,50,55,55,100,190,70,66,h.MEDIUM_FAST,null,!1),new u(e.ELECTRODE,1,!1,!1,!1,"Ball Pokémon",n.ELECTRIC,null,1.2,66.6,O.SOUNDPROOF,O.STATIC,O.AFTERMATH,490,60,50,70,80,80,150,60,70,172,h.MEDIUM_FAST,null,!1),new u(e.EXEGGCUTE,1,!1,!1,!1,"Egg Pokémon",n.GRASS,n.PSYCHIC,.4,2.5,O.CHLOROPHYLL,O.NONE,O.HARVEST,325,60,40,80,60,45,40,90,50,65,h.SLOW,50,!1),new u(e.EXEGGUTOR,1,!1,!1,!1,"Coconut Pokémon",n.GRASS,n.PSYCHIC,2,120,O.CHLOROPHYLL,O.NONE,O.HARVEST,530,95,95,85,125,75,55,45,50,186,h.SLOW,50,!1),new u(e.CUBONE,1,!1,!1,!1,"Lonely Pokémon",n.GROUND,null,.4,6.5,O.ROCK_HEAD,O.LIGHTNING_ROD,O.BATTLE_ARMOR,320,50,50,95,40,50,35,190,50,64,h.MEDIUM_FAST,50,!1),new u(e.MAROWAK,1,!1,!1,!1,"Bone Keeper Pokémon",n.GROUND,null,1,45,O.ROCK_HEAD,O.LIGHTNING_ROD,O.BATTLE_ARMOR,425,60,80,110,50,80,45,75,50,149,h.MEDIUM_FAST,50,!1),new u(e.HITMONLEE,1,!1,!1,!1,"Kicking Pokémon",n.FIGHTING,null,1.5,49.8,O.LIMBER,O.RECKLESS,O.UNBURDEN,455,50,120,53,35,110,87,45,50,159,h.MEDIUM_FAST,100,!1),new u(e.HITMONCHAN,1,!1,!1,!1,"Punching Pokémon",n.FIGHTING,null,1.4,50.2,O.KEEN_EYE,O.IRON_FIST,O.INNER_FOCUS,455,50,105,79,35,110,76,45,50,159,h.MEDIUM_FAST,100,!1),new u(e.LICKITUNG,1,!1,!1,!1,"Licking Pokémon",n.NORMAL,null,1.2,65.5,O.OWN_TEMPO,O.OBLIVIOUS,O.CLOUD_NINE,385,90,55,75,60,75,30,45,50,77,h.MEDIUM_FAST,50,!1),new u(e.KOFFING,1,!1,!1,!1,"Poison Gas Pokémon",n.POISON,null,.6,1,O.LEVITATE,O.NEUTRALIZING_GAS,O.STENCH,340,40,65,95,60,45,35,190,50,68,h.MEDIUM_FAST,50,!1),new u(e.WEEZING,1,!1,!1,!1,"Poison Gas Pokémon",n.POISON,null,1.2,9.5,O.LEVITATE,O.NEUTRALIZING_GAS,O.STENCH,490,65,90,120,85,70,60,60,50,172,h.MEDIUM_FAST,50,!1),new u(e.RHYHORN,1,!1,!1,!1,"Spikes Pokémon",n.GROUND,n.ROCK,1,115,O.LIGHTNING_ROD,O.ROCK_HEAD,O.RECKLESS,345,80,85,95,30,30,25,120,50,69,h.SLOW,50,!0),new u(e.RHYDON,1,!1,!1,!1,"Drill Pokémon",n.GROUND,n.ROCK,1.9,120,O.LIGHTNING_ROD,O.ROCK_HEAD,O.RECKLESS,485,105,130,120,45,45,40,60,50,170,h.SLOW,50,!0),new u(e.CHANSEY,1,!1,!1,!1,"Egg Pokémon",n.NORMAL,null,1.1,34.6,O.NATURAL_CURE,O.SERENE_GRACE,O.HEALER,450,250,5,5,35,105,50,30,140,395,h.FAST,0,!1),new u(e.TANGELA,1,!1,!1,!1,"Vine Pokémon",n.GRASS,null,1,35,O.CHLOROPHYLL,O.LEAF_GUARD,O.REGENERATOR,435,65,55,115,100,40,60,45,50,87,h.MEDIUM_FAST,50,!1),new u(e.KANGASKHAN,1,!1,!1,!1,"Parent Pokémon",n.NORMAL,null,2.2,80,O.EARLY_BIRD,O.SCRAPPY,O.INNER_FOCUS,490,105,95,80,40,80,90,45,50,172,h.MEDIUM_FAST,0,!1,!0,new K("Normal","",n.NORMAL,null,2.2,80,O.EARLY_BIRD,O.SCRAPPY,O.INNER_FOCUS,490,105,95,80,40,80,90,45,50,172,!1,null,!0),new K("Mega",Ee.MEGA,n.NORMAL,null,2.2,100,O.PARENTAL_BOND,O.PARENTAL_BOND,O.PARENTAL_BOND,590,105,125,100,60,100,100,45,50,172)),new u(e.HORSEA,1,!1,!1,!1,"Dragon Pokémon",n.WATER,null,.4,8,O.SWIFT_SWIM,O.SNIPER,O.DAMP,295,30,40,70,70,25,60,225,50,59,h.MEDIUM_FAST,50,!1),new u(e.SEADRA,1,!1,!1,!1,"Dragon Pokémon",n.WATER,null,1.2,25,O.POISON_POINT,O.SNIPER,O.DAMP,440,55,65,95,95,45,85,75,50,154,h.MEDIUM_FAST,50,!1),new u(e.GOLDEEN,1,!1,!1,!1,"Goldfish Pokémon",n.WATER,null,.6,15,O.SWIFT_SWIM,O.WATER_VEIL,O.LIGHTNING_ROD,320,45,67,60,35,50,63,225,50,64,h.MEDIUM_FAST,50,!0),new u(e.SEAKING,1,!1,!1,!1,"Goldfish Pokémon",n.WATER,null,1.3,39,O.SWIFT_SWIM,O.WATER_VEIL,O.LIGHTNING_ROD,450,80,92,65,65,80,68,60,50,158,h.MEDIUM_FAST,50,!0),new u(e.STARYU,1,!1,!1,!1,"Star Shape Pokémon",n.WATER,null,.8,34.5,O.ILLUMINATE,O.NATURAL_CURE,O.ANALYTIC,340,30,45,55,70,55,85,225,50,68,h.SLOW,null,!1),new u(e.STARMIE,1,!1,!1,!1,"Mysterious Pokémon",n.WATER,n.PSYCHIC,1.1,80,O.ILLUMINATE,O.NATURAL_CURE,O.ANALYTIC,520,60,75,85,100,85,115,60,50,182,h.SLOW,null,!1),new u(e.MR_MIME,1,!1,!1,!1,"Barrier Pokémon",n.PSYCHIC,n.FAIRY,1.3,54.5,O.SOUNDPROOF,O.FILTER,O.TECHNICIAN,460,40,45,65,100,120,90,45,50,161,h.MEDIUM_FAST,50,!1),new u(e.SCYTHER,1,!1,!1,!1,"Mantis Pokémon",n.BUG,n.FLYING,1.5,56,O.SWARM,O.TECHNICIAN,O.STEADFAST,500,70,110,80,55,80,105,45,50,100,h.MEDIUM_FAST,50,!0),new u(e.JYNX,1,!1,!1,!1,"Human Shape Pokémon",n.ICE,n.PSYCHIC,1.4,40.6,O.OBLIVIOUS,O.FOREWARN,O.DRY_SKIN,455,65,50,35,115,95,95,45,50,159,h.MEDIUM_FAST,0,!1),new u(e.ELECTABUZZ,1,!1,!1,!1,"Electric Pokémon",n.ELECTRIC,null,1.1,30,O.STATIC,O.NONE,O.VITAL_SPIRIT,490,65,83,57,95,85,105,45,50,172,h.MEDIUM_FAST,75,!1),new u(e.MAGMAR,1,!1,!1,!1,"Spitfire Pokémon",n.FIRE,null,1.3,44.5,O.FLAME_BODY,O.NONE,O.VITAL_SPIRIT,495,65,95,57,100,85,93,45,50,173,h.MEDIUM_FAST,75,!1),new u(e.PINSIR,1,!1,!1,!1,"Stag Beetle Pokémon",n.BUG,null,1.5,55,O.HYPER_CUTTER,O.MOLD_BREAKER,O.MOXIE,500,65,125,100,55,70,85,45,50,175,h.SLOW,50,!1,!0,new K("Normal","",n.BUG,null,1.5,55,O.HYPER_CUTTER,O.MOLD_BREAKER,O.MOXIE,500,65,125,100,55,70,85,45,50,175,!1,null,!0),new K("Mega",Ee.MEGA,n.BUG,n.FLYING,1.7,59,O.AERILATE,O.AERILATE,O.AERILATE,600,65,155,120,65,90,105,45,50,175)),new u(e.TAUROS,1,!1,!1,!1,"Wild Bull Pokémon",n.NORMAL,null,1.4,88.4,O.INTIMIDATE,O.ANGER_POINT,O.SHEER_FORCE,490,75,100,95,40,70,110,45,50,172,h.SLOW,100,!1),new u(e.MAGIKARP,1,!1,!1,!1,"Fish Pokémon",n.WATER,null,.9,10,O.SWIFT_SWIM,O.NONE,O.RATTLED,200,20,10,55,15,20,80,255,50,40,h.SLOW,50,!0),new u(e.GYARADOS,1,!1,!1,!1,"Atrocious Pokémon",n.WATER,n.FLYING,6.5,235,O.INTIMIDATE,O.NONE,O.MOXIE,540,95,125,79,60,100,81,45,50,189,h.SLOW,50,!0,!0,new K("Normal","",n.WATER,n.FLYING,6.5,235,O.INTIMIDATE,O.NONE,O.MOXIE,540,95,125,79,60,100,81,45,50,189,!0,null,!0),new K("Mega",Ee.MEGA,n.WATER,n.DARK,6.5,305,O.MOLD_BREAKER,O.MOLD_BREAKER,O.MOLD_BREAKER,640,95,155,109,70,130,81,45,50,189,!0)),new u(e.LAPRAS,1,!1,!1,!1,"Transport Pokémon",n.WATER,n.ICE,2.5,220,O.WATER_ABSORB,O.SHELL_ARMOR,O.HYDRATION,535,130,85,80,85,95,60,45,50,187,h.SLOW,50,!1,!0,new K("Normal","",n.WATER,n.ICE,2.5,220,O.WATER_ABSORB,O.SHELL_ARMOR,O.HYDRATION,535,130,85,80,85,95,60,45,50,187,!1,null,!0),new K("G-Max",Ee.GIGANTAMAX,n.WATER,n.ICE,24,999.9,O.SHIELD_DUST,O.SHIELD_DUST,O.SHIELD_DUST,635,170,85,85,105,130,60,45,50,187)),new u(e.DITTO,1,!1,!1,!1,"Transform Pokémon",n.NORMAL,null,.3,4,O.LIMBER,O.NONE,O.IMPOSTER,288,48,48,48,48,48,48,35,50,101,h.MEDIUM_FAST,null,!1),new u(e.EEVEE,1,!1,!1,!1,"Evolution Pokémon",n.NORMAL,null,.3,6.5,O.RUN_AWAY,O.ADAPTABILITY,O.ANTICIPATION,325,55,55,50,45,65,55,45,50,65,h.MEDIUM_FAST,87.5,!1,!0,new K("Normal","",n.NORMAL,null,.3,6.5,O.RUN_AWAY,O.ADAPTABILITY,O.ANTICIPATION,325,55,55,50,45,65,55,45,50,65,!1,null,!0),new K("Partner","partner",n.NORMAL,null,.3,6.5,O.RUN_AWAY,O.ADAPTABILITY,O.ANTICIPATION,435,65,75,70,65,85,75,45,50,65,!1,null,!0),new K("G-Max",Ee.GIGANTAMAX,n.NORMAL,null,18,999.9,O.PROTEAN,O.PROTEAN,O.PROTEAN,535,110,90,70,95,85,85,45,50,65)),new u(e.VAPOREON,1,!1,!1,!1,"Bubble Jet Pokémon",n.WATER,null,1,29,O.WATER_ABSORB,O.NONE,O.HYDRATION,525,130,65,60,110,95,65,45,50,184,h.MEDIUM_FAST,87.5,!1),new u(e.JOLTEON,1,!1,!1,!1,"Lightning Pokémon",n.ELECTRIC,null,.8,24.5,O.VOLT_ABSORB,O.NONE,O.QUICK_FEET,525,65,65,60,110,95,130,45,50,184,h.MEDIUM_FAST,87.5,!1),new u(e.FLAREON,1,!1,!1,!1,"Flame Pokémon",n.FIRE,null,.9,25,O.FLASH_FIRE,O.NONE,O.GUTS,525,65,130,60,95,110,65,45,50,184,h.MEDIUM_FAST,87.5,!1),new u(e.PORYGON,1,!1,!1,!1,"Virtual Pokémon",n.NORMAL,null,.8,36.5,O.TRACE,O.DOWNLOAD,O.ANALYTIC,395,65,60,70,85,75,40,45,50,79,h.MEDIUM_FAST,null,!1),new u(e.OMANYTE,1,!1,!1,!1,"Spiral Pokémon",n.ROCK,n.WATER,.4,7.5,O.SWIFT_SWIM,O.SHELL_ARMOR,O.WEAK_ARMOR,355,35,40,100,90,55,35,45,50,71,h.MEDIUM_FAST,87.5,!1),new u(e.OMASTAR,1,!1,!1,!1,"Spiral Pokémon",n.ROCK,n.WATER,1,35,O.SWIFT_SWIM,O.SHELL_ARMOR,O.WEAK_ARMOR,495,70,60,125,115,70,55,45,50,173,h.MEDIUM_FAST,87.5,!1),new u(e.KABUTO,1,!1,!1,!1,"Shellfish Pokémon",n.ROCK,n.WATER,.5,11.5,O.SWIFT_SWIM,O.BATTLE_ARMOR,O.WEAK_ARMOR,355,30,80,90,55,45,55,45,50,71,h.MEDIUM_FAST,87.5,!1),new u(e.KABUTOPS,1,!1,!1,!1,"Shellfish Pokémon",n.ROCK,n.WATER,1.3,40.5,O.SWIFT_SWIM,O.BATTLE_ARMOR,O.WEAK_ARMOR,495,60,115,105,65,70,80,45,50,173,h.MEDIUM_FAST,87.5,!1),new u(e.AERODACTYL,1,!1,!1,!1,"Fossil Pokémon",n.ROCK,n.FLYING,1.8,59,O.ROCK_HEAD,O.PRESSURE,O.UNNERVE,515,80,105,65,60,75,130,45,50,180,h.SLOW,87.5,!1,!0,new K("Normal","",n.ROCK,n.FLYING,1.8,59,O.ROCK_HEAD,O.PRESSURE,O.UNNERVE,515,80,105,65,60,75,130,45,50,180,!1,null,!0),new K("Mega",Ee.MEGA,n.ROCK,n.FLYING,2.1,79,O.TOUGH_CLAWS,O.TOUGH_CLAWS,O.TOUGH_CLAWS,615,80,135,85,70,95,150,45,50,180)),new u(e.SNORLAX,1,!1,!1,!1,"Sleeping Pokémon",n.NORMAL,null,2.1,460,O.IMMUNITY,O.THICK_FAT,O.GLUTTONY,540,160,110,65,65,110,30,25,50,189,h.SLOW,87.5,!1,!0,new K("Normal","",n.NORMAL,null,2.1,460,O.IMMUNITY,O.THICK_FAT,O.GLUTTONY,540,160,110,65,65,110,30,25,50,189,!1,null,!0),new K("G-Max",Ee.GIGANTAMAX,n.NORMAL,null,35,999.9,O.HARVEST,O.HARVEST,O.HARVEST,640,200,135,80,80,125,20,25,50,189)),new u(e.ARTICUNO,1,!0,!1,!1,"Freeze Pokémon",n.ICE,n.FLYING,1.7,55.4,O.PRESSURE,O.NONE,O.SNOW_CLOAK,580,90,85,100,95,125,85,3,35,290,h.SLOW,null,!1),new u(e.ZAPDOS,1,!0,!1,!1,"Electric Pokémon",n.ELECTRIC,n.FLYING,1.6,52.6,O.PRESSURE,O.NONE,O.STATIC,580,90,90,85,125,90,100,3,35,290,h.SLOW,null,!1),new u(e.MOLTRES,1,!0,!1,!1,"Flame Pokémon",n.FIRE,n.FLYING,2,60,O.PRESSURE,O.NONE,O.FLAME_BODY,580,90,100,90,125,85,90,3,35,290,h.SLOW,null,!1),new u(e.DRATINI,1,!1,!1,!1,"Dragon Pokémon",n.DRAGON,null,1.8,3.3,O.SHED_SKIN,O.NONE,O.MARVEL_SCALE,300,41,64,45,50,50,50,45,35,60,h.SLOW,50,!1),new u(e.DRAGONAIR,1,!1,!1,!1,"Dragon Pokémon",n.DRAGON,null,4,16.5,O.SHED_SKIN,O.NONE,O.MARVEL_SCALE,420,61,84,65,70,70,70,45,35,147,h.SLOW,50,!1),new u(e.DRAGONITE,1,!1,!1,!1,"Dragon Pokémon",n.DRAGON,n.FLYING,2.2,210,O.INNER_FOCUS,O.NONE,O.MULTISCALE,600,91,134,95,100,100,80,45,35,300,h.SLOW,50,!1),new u(e.MEWTWO,1,!1,!0,!1,"Genetic Pokémon",n.PSYCHIC,null,2,122,O.PRESSURE,O.NONE,O.UNNERVE,680,106,110,90,154,90,130,3,0,340,h.SLOW,null,!1,!0,new K("Normal","",n.PSYCHIC,null,2,122,O.PRESSURE,O.NONE,O.UNNERVE,680,106,110,90,154,90,130,3,0,340,!1,null,!0),new K("Mega X",Ee.MEGA_X,n.PSYCHIC,n.FIGHTING,2.3,127,O.STEADFAST,O.NONE,O.STEADFAST,780,106,190,100,154,100,130,3,0,340),new K("Mega Y",Ee.MEGA_Y,n.PSYCHIC,null,1.5,33,O.INSOMNIA,O.NONE,O.INSOMNIA,780,106,150,70,194,120,140,3,0,340)),new u(e.MEW,1,!1,!1,!0,"New Species Pokémon",n.PSYCHIC,null,.4,4,O.SYNCHRONIZE,O.NONE,O.NONE,600,100,100,100,100,100,100,45,100,300,h.MEDIUM_SLOW,null,!1),new u(e.CHIKORITA,2,!1,!1,!1,"Leaf Pokémon",n.GRASS,null,.9,6.4,O.OVERGROW,O.NONE,O.LEAF_GUARD,318,45,49,65,49,65,45,45,70,64,h.MEDIUM_SLOW,87.5,!1),new u(e.BAYLEEF,2,!1,!1,!1,"Leaf Pokémon",n.GRASS,null,1.2,15.8,O.OVERGROW,O.NONE,O.LEAF_GUARD,405,60,62,80,63,80,60,45,70,142,h.MEDIUM_SLOW,87.5,!1),new u(e.MEGANIUM,2,!1,!1,!1,"Herb Pokémon",n.GRASS,null,1.8,100.5,O.OVERGROW,O.NONE,O.LEAF_GUARD,525,80,82,100,83,100,80,45,70,236,h.MEDIUM_SLOW,87.5,!0),new u(e.CYNDAQUIL,2,!1,!1,!1,"Fire Mouse Pokémon",n.FIRE,null,.5,7.9,O.BLAZE,O.NONE,O.FLASH_FIRE,309,39,52,43,60,50,65,45,70,62,h.MEDIUM_SLOW,87.5,!1),new u(e.QUILAVA,2,!1,!1,!1,"Volcano Pokémon",n.FIRE,null,.9,19,O.BLAZE,O.NONE,O.FLASH_FIRE,405,58,64,58,80,65,80,45,70,142,h.MEDIUM_SLOW,87.5,!1),new u(e.TYPHLOSION,2,!1,!1,!1,"Volcano Pokémon",n.FIRE,null,1.7,79.5,O.BLAZE,O.NONE,O.FLASH_FIRE,534,78,84,78,109,85,100,45,70,240,h.MEDIUM_SLOW,87.5,!1),new u(e.TOTODILE,2,!1,!1,!1,"Big Jaw Pokémon",n.WATER,null,.6,9.5,O.TORRENT,O.NONE,O.SHEER_FORCE,314,50,65,64,44,48,43,45,70,63,h.MEDIUM_SLOW,87.5,!1),new u(e.CROCONAW,2,!1,!1,!1,"Big Jaw Pokémon",n.WATER,null,1.1,25,O.TORRENT,O.NONE,O.SHEER_FORCE,405,65,80,80,59,63,58,45,70,142,h.MEDIUM_SLOW,87.5,!1),new u(e.FERALIGATR,2,!1,!1,!1,"Big Jaw Pokémon",n.WATER,null,2.3,88.8,O.TORRENT,O.NONE,O.SHEER_FORCE,530,85,105,100,79,83,78,45,70,239,h.MEDIUM_SLOW,87.5,!1),new u(e.SENTRET,2,!1,!1,!1,"Scout Pokémon",n.NORMAL,null,.8,6,O.RUN_AWAY,O.KEEN_EYE,O.FRISK,215,35,46,34,35,45,20,255,70,43,h.MEDIUM_FAST,50,!1),new u(e.FURRET,2,!1,!1,!1,"Long Body Pokémon",n.NORMAL,null,1.8,32.5,O.RUN_AWAY,O.KEEN_EYE,O.FRISK,415,85,76,64,45,55,90,90,70,145,h.MEDIUM_FAST,50,!1),new u(e.HOOTHOOT,2,!1,!1,!1,"Owl Pokémon",n.NORMAL,n.FLYING,.7,21.2,O.INSOMNIA,O.KEEN_EYE,O.TINTED_LENS,262,60,30,30,36,56,50,255,50,52,h.MEDIUM_FAST,50,!1),new u(e.NOCTOWL,2,!1,!1,!1,"Owl Pokémon",n.NORMAL,n.FLYING,1.6,40.8,O.INSOMNIA,O.KEEN_EYE,O.TINTED_LENS,452,100,50,50,86,96,70,90,50,158,h.MEDIUM_FAST,50,!1),new u(e.LEDYBA,2,!1,!1,!1,"Five Star Pokémon",n.BUG,n.FLYING,1,10.8,O.SWARM,O.EARLY_BIRD,O.RATTLED,265,40,20,30,40,80,55,255,70,53,h.FAST,50,!0),new u(e.LEDIAN,2,!1,!1,!1,"Five Star Pokémon",n.BUG,n.FLYING,1.4,35.6,O.SWARM,O.EARLY_BIRD,O.IRON_FIST,390,55,35,50,55,110,85,90,70,137,h.FAST,50,!0),new u(e.SPINARAK,2,!1,!1,!1,"String Spit Pokémon",n.BUG,n.POISON,.5,8.5,O.SWARM,O.INSOMNIA,O.SNIPER,250,40,60,40,40,40,30,255,70,50,h.FAST,50,!1),new u(e.ARIADOS,2,!1,!1,!1,"Long Leg Pokémon",n.BUG,n.POISON,1.1,33.5,O.SWARM,O.INSOMNIA,O.SNIPER,400,70,90,70,60,70,40,90,70,140,h.FAST,50,!1),new u(e.CROBAT,2,!1,!1,!1,"Bat Pokémon",n.POISON,n.FLYING,1.8,75,O.INNER_FOCUS,O.NONE,O.INFILTRATOR,535,85,90,80,70,80,130,90,50,268,h.MEDIUM_FAST,50,!1),new u(e.CHINCHOU,2,!1,!1,!1,"Angler Pokémon",n.WATER,n.ELECTRIC,.5,12,O.VOLT_ABSORB,O.ILLUMINATE,O.WATER_ABSORB,330,75,38,38,56,56,67,190,50,66,h.SLOW,50,!1),new u(e.LANTURN,2,!1,!1,!1,"Light Pokémon",n.WATER,n.ELECTRIC,1.2,22.5,O.VOLT_ABSORB,O.ILLUMINATE,O.WATER_ABSORB,460,125,58,58,76,76,67,75,50,161,h.SLOW,50,!1),new u(e.PICHU,2,!1,!1,!1,"Tiny Mouse Pokémon",n.ELECTRIC,null,.3,2,O.STATIC,O.NONE,O.LIGHTNING_ROD,205,20,40,15,35,35,60,190,70,41,h.MEDIUM_FAST,50,!1,!1,new K("Normal","",n.ELECTRIC,null,1.4,61.5,O.STATIC,O.NONE,O.LIGHTNING_ROD,205,20,40,15,35,35,60,190,70,41,!1,null,!0),new K("Spiky-Eared","spiky",n.ELECTRIC,null,1.4,61.5,O.STATIC,O.NONE,O.LIGHTNING_ROD,205,20,40,15,35,35,60,190,70,41,!1,null,!0)),new u(e.CLEFFA,2,!1,!1,!1,"Star Shape Pokémon",n.FAIRY,null,.3,3,O.CUTE_CHARM,O.MAGIC_GUARD,O.FRIEND_GUARD,218,50,25,28,45,55,15,150,140,44,h.FAST,25,!1),new u(e.IGGLYBUFF,2,!1,!1,!1,"Balloon Pokémon",n.NORMAL,n.FAIRY,.3,1,O.CUTE_CHARM,O.COMPETITIVE,O.FRIEND_GUARD,210,90,30,15,40,20,15,170,50,42,h.FAST,25,!1),new u(e.TOGEPI,2,!1,!1,!1,"Spike Ball Pokémon",n.FAIRY,null,.3,1.5,O.HUSTLE,O.SERENE_GRACE,O.SUPER_LUCK,245,35,20,65,40,65,20,190,50,49,h.FAST,87.5,!1),new u(e.TOGETIC,2,!1,!1,!1,"Happiness Pokémon",n.FAIRY,n.FLYING,.6,3.2,O.HUSTLE,O.SERENE_GRACE,O.SUPER_LUCK,405,55,40,85,80,105,40,75,50,142,h.FAST,87.5,!1),new u(e.NATU,2,!1,!1,!1,"Tiny Bird Pokémon",n.PSYCHIC,n.FLYING,.2,2,O.SYNCHRONIZE,O.EARLY_BIRD,O.MAGIC_BOUNCE,320,40,50,45,70,45,70,190,50,64,h.MEDIUM_FAST,50,!1),new u(e.XATU,2,!1,!1,!1,"Mystic Pokémon",n.PSYCHIC,n.FLYING,1.5,15,O.SYNCHRONIZE,O.EARLY_BIRD,O.MAGIC_BOUNCE,470,65,75,70,95,70,95,75,50,165,h.MEDIUM_FAST,50,!0),new u(e.MAREEP,2,!1,!1,!1,"Wool Pokémon",n.ELECTRIC,null,.6,7.8,O.STATIC,O.NONE,O.PLUS,280,55,40,40,65,45,35,235,70,56,h.MEDIUM_SLOW,50,!1),new u(e.FLAAFFY,2,!1,!1,!1,"Wool Pokémon",n.ELECTRIC,null,.8,13.3,O.STATIC,O.NONE,O.PLUS,365,70,55,55,80,60,45,120,70,128,h.MEDIUM_SLOW,50,!1),new u(e.AMPHAROS,2,!1,!1,!1,"Light Pokémon",n.ELECTRIC,null,1.4,61.5,O.STATIC,O.NONE,O.PLUS,510,90,75,85,115,90,55,45,70,230,h.MEDIUM_SLOW,50,!1,!0,new K("Normal","",n.ELECTRIC,null,1.4,61.5,O.STATIC,O.NONE,O.PLUS,510,90,75,85,115,90,55,45,70,230,!1,null,!0),new K("Mega",Ee.MEGA,n.ELECTRIC,n.DRAGON,1.4,61.5,O.MOLD_BREAKER,O.NONE,O.MOLD_BREAKER,610,90,95,105,165,110,45,45,70,230)),new u(e.BELLOSSOM,2,!1,!1,!1,"Flower Pokémon",n.GRASS,null,.4,5.8,O.CHLOROPHYLL,O.NONE,O.HEALER,490,75,80,95,90,100,50,45,50,245,h.MEDIUM_SLOW,50,!1),new u(e.MARILL,2,!1,!1,!1,"Aqua Mouse Pokémon",n.WATER,n.FAIRY,.4,8.5,O.THICK_FAT,O.HUGE_POWER,O.SAP_SIPPER,250,70,20,50,20,50,40,190,50,88,h.FAST,50,!1),new u(e.AZUMARILL,2,!1,!1,!1,"Aqua Rabbit Pokémon",n.WATER,n.FAIRY,.8,28.5,O.THICK_FAT,O.HUGE_POWER,O.SAP_SIPPER,420,100,50,80,60,80,50,75,50,210,h.FAST,50,!1),new u(e.SUDOWOODO,2,!1,!1,!1,"Imitation Pokémon",n.ROCK,null,1.2,38,O.STURDY,O.ROCK_HEAD,O.RATTLED,410,70,100,115,30,65,30,65,50,144,h.MEDIUM_FAST,50,!0),new u(e.POLITOED,2,!1,!1,!1,"Frog Pokémon",n.WATER,null,1.1,33.9,O.WATER_ABSORB,O.DAMP,O.DRIZZLE,500,90,75,75,90,100,70,45,50,250,h.MEDIUM_SLOW,50,!0),new u(e.HOPPIP,2,!1,!1,!1,"Cottonweed Pokémon",n.GRASS,n.FLYING,.4,.5,O.CHLOROPHYLL,O.LEAF_GUARD,O.INFILTRATOR,250,35,35,40,35,55,50,255,70,50,h.MEDIUM_SLOW,50,!1),new u(e.SKIPLOOM,2,!1,!1,!1,"Cottonweed Pokémon",n.GRASS,n.FLYING,.6,1,O.CHLOROPHYLL,O.LEAF_GUARD,O.INFILTRATOR,340,55,45,50,45,65,80,120,70,119,h.MEDIUM_SLOW,50,!1),new u(e.JUMPLUFF,2,!1,!1,!1,"Cottonweed Pokémon",n.GRASS,n.FLYING,.8,3,O.CHLOROPHYLL,O.LEAF_GUARD,O.INFILTRATOR,460,75,55,70,55,95,110,45,70,207,h.MEDIUM_SLOW,50,!1),new u(e.AIPOM,2,!1,!1,!1,"Long Tail Pokémon",n.NORMAL,null,.8,11.5,O.RUN_AWAY,O.PICKUP,O.SKILL_LINK,360,55,70,55,40,55,85,45,70,72,h.FAST,50,!0),new u(e.SUNKERN,2,!1,!1,!1,"Seed Pokémon",n.GRASS,null,.3,1.8,O.CHLOROPHYLL,O.SOLAR_POWER,O.EARLY_BIRD,180,30,30,30,30,30,30,235,70,36,h.MEDIUM_SLOW,50,!1),new u(e.SUNFLORA,2,!1,!1,!1,"Sun Pokémon",n.GRASS,null,.8,8.5,O.CHLOROPHYLL,O.SOLAR_POWER,O.EARLY_BIRD,425,75,75,55,105,85,30,120,70,149,h.MEDIUM_SLOW,50,!1),new u(e.YANMA,2,!1,!1,!1,"Clear Wing Pokémon",n.BUG,n.FLYING,1.2,38,O.SPEED_BOOST,O.COMPOUND_EYES,O.FRISK,390,65,65,45,75,45,95,75,70,78,h.MEDIUM_FAST,50,!1),new u(e.WOOPER,2,!1,!1,!1,"Water Fish Pokémon",n.WATER,n.GROUND,.4,8.5,O.DAMP,O.WATER_ABSORB,O.UNAWARE,210,55,45,45,25,25,15,255,50,42,h.MEDIUM_FAST,50,!0),new u(e.QUAGSIRE,2,!1,!1,!1,"Water Fish Pokémon",n.WATER,n.GROUND,1.4,75,O.DAMP,O.WATER_ABSORB,O.UNAWARE,430,95,85,85,65,65,35,90,50,151,h.MEDIUM_FAST,50,!0),new u(e.ESPEON,2,!1,!1,!1,"Sun Pokémon",n.PSYCHIC,null,.9,26.5,O.SYNCHRONIZE,O.NONE,O.MAGIC_BOUNCE,525,65,65,60,130,95,110,45,50,184,h.MEDIUM_FAST,87.5,!1),new u(e.UMBREON,2,!1,!1,!1,"Moonlight Pokémon",n.DARK,null,1,27,O.SYNCHRONIZE,O.NONE,O.INNER_FOCUS,525,95,65,110,60,130,65,45,35,184,h.MEDIUM_FAST,87.5,!1),new u(e.MURKROW,2,!1,!1,!1,"Darkness Pokémon",n.DARK,n.FLYING,.5,2.1,O.INSOMNIA,O.SUPER_LUCK,O.PRANKSTER,405,60,85,42,85,42,91,30,35,81,h.MEDIUM_SLOW,50,!0),new u(e.SLOWKING,2,!1,!1,!1,"Royal Pokémon",n.WATER,n.PSYCHIC,2,79.5,O.OBLIVIOUS,O.OWN_TEMPO,O.REGENERATOR,490,95,75,80,100,110,30,70,50,172,h.MEDIUM_FAST,50,!1),new u(e.MISDREAVUS,2,!1,!1,!1,"Screech Pokémon",n.GHOST,null,.7,1,O.LEVITATE,O.NONE,O.NONE,435,60,60,60,85,85,85,45,35,87,h.FAST,50,!1),new u(e.UNOWN,2,!1,!1,!1,"Symbol Pokémon",n.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,h.MEDIUM_FAST,null,!1,!1,new K("A","a",n.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new K("B","b",n.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new K("C","c",n.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new K("D","d",n.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new K("E","e",n.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new K("F","f",n.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new K("G","g",n.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new K("H","h",n.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new K("I","i",n.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new K("J","j",n.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new K("K","k",n.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new K("L","l",n.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new K("M","m",n.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new K("N","n",n.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new K("O","o",n.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new K("P","p",n.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new K("Q","q",n.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new K("R","r",n.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new K("S","s",n.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new K("T","t",n.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new K("U","u",n.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new K("V","v",n.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new K("W","w",n.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new K("X","x",n.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new K("Y","y",n.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new K("Z","z",n.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new K("!","exclamation",n.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new K("?","question",n.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0)),new u(e.WOBBUFFET,2,!1,!1,!1,"Patient Pokémon",n.PSYCHIC,null,1.3,28.5,O.SHADOW_TAG,O.NONE,O.TELEPATHY,405,190,33,58,33,58,33,45,50,142,h.MEDIUM_FAST,50,!0),new u(e.GIRAFARIG,2,!1,!1,!1,"Long Neck Pokémon",n.NORMAL,n.PSYCHIC,1.5,41.5,O.INNER_FOCUS,O.EARLY_BIRD,O.SAP_SIPPER,455,70,80,65,90,65,85,60,70,159,h.MEDIUM_FAST,50,!0),new u(e.PINECO,2,!1,!1,!1,"Bagworm Pokémon",n.BUG,null,.6,7.2,O.STURDY,O.NONE,O.OVERCOAT,290,50,65,90,35,35,15,190,70,58,h.MEDIUM_FAST,50,!1),new u(e.FORRETRESS,2,!1,!1,!1,"Bagworm Pokémon",n.BUG,n.STEEL,1.2,125.8,O.STURDY,O.NONE,O.OVERCOAT,465,75,90,140,60,60,40,75,70,163,h.MEDIUM_FAST,50,!1),new u(e.DUNSPARCE,2,!1,!1,!1,"Land Snake Pokémon",n.NORMAL,null,1.5,14,O.SERENE_GRACE,O.RUN_AWAY,O.RATTLED,415,100,70,70,65,65,45,190,50,145,h.MEDIUM_FAST,50,!1),new u(e.GLIGAR,2,!1,!1,!1,"Fly Scorpion Pokémon",n.GROUND,n.FLYING,1.1,64.8,O.HYPER_CUTTER,O.SAND_VEIL,O.IMMUNITY,430,65,75,105,35,65,85,60,70,86,h.MEDIUM_SLOW,50,!0),new u(e.STEELIX,2,!1,!1,!1,"Iron Snake Pokémon",n.STEEL,n.GROUND,9.2,400,O.ROCK_HEAD,O.STURDY,O.SHEER_FORCE,510,75,85,200,55,65,30,25,50,179,h.MEDIUM_FAST,50,!0,!0,new K("Normal","",n.STEEL,n.GROUND,9.2,400,O.ROCK_HEAD,O.STURDY,O.SHEER_FORCE,510,75,85,200,55,65,30,25,50,179,!0,null,!0),new K("Mega",Ee.MEGA,n.STEEL,n.GROUND,10.5,740,O.SAND_FORCE,O.SAND_FORCE,O.SAND_FORCE,610,75,125,230,55,95,30,25,50,179,!0)),new u(e.SNUBBULL,2,!1,!1,!1,"Fairy Pokémon",n.FAIRY,null,.6,7.8,O.INTIMIDATE,O.RUN_AWAY,O.RATTLED,300,60,80,50,40,40,30,190,70,60,h.FAST,25,!1),new u(e.GRANBULL,2,!1,!1,!1,"Fairy Pokémon",n.FAIRY,null,1.4,48.7,O.INTIMIDATE,O.QUICK_FEET,O.RATTLED,450,90,120,75,60,60,45,75,70,158,h.FAST,25,!1),new u(e.QWILFISH,2,!1,!1,!1,"Balloon Pokémon",n.WATER,n.POISON,.5,3.9,O.POISON_POINT,O.SWIFT_SWIM,O.INTIMIDATE,440,65,95,85,55,55,85,45,50,88,h.MEDIUM_FAST,50,!1),new u(e.SCIZOR,2,!1,!1,!1,"Pincer Pokémon",n.BUG,n.STEEL,1.8,118,O.SWARM,O.TECHNICIAN,O.LIGHT_METAL,500,70,130,100,55,80,65,25,50,175,h.MEDIUM_FAST,50,!0,!0,new K("Normal","",n.BUG,n.STEEL,1.8,118,O.SWARM,O.TECHNICIAN,O.LIGHT_METAL,500,70,130,100,55,80,65,25,50,175,!0,null,!0),new K("Mega",Ee.MEGA,n.BUG,n.STEEL,2,125,O.TECHNICIAN,O.TECHNICIAN,O.TECHNICIAN,600,70,150,140,65,100,75,25,50,175,!0)),new u(e.SHUCKLE,2,!1,!1,!1,"Mold Pokémon",n.BUG,n.ROCK,.6,20.5,O.STURDY,O.GLUTTONY,O.CONTRARY,505,20,10,230,10,230,5,190,50,177,h.MEDIUM_SLOW,50,!1),new u(e.HERACROSS,2,!1,!1,!1,"Single Horn Pokémon",n.BUG,n.FIGHTING,1.5,54,O.SWARM,O.GUTS,O.MOXIE,500,80,125,75,40,95,85,45,50,175,h.SLOW,50,!0,!0,new K("Normal","",n.BUG,n.FIGHTING,1.5,54,O.SWARM,O.GUTS,O.MOXIE,500,80,125,75,40,95,85,45,50,175,!0,null,!0),new K("Mega",Ee.MEGA,n.BUG,n.FIGHTING,1.7,62.5,O.SKILL_LINK,O.SKILL_LINK,O.SKILL_LINK,600,80,185,115,40,105,75,45,50,175,!0)),new u(e.SNEASEL,2,!1,!1,!1,"Sharp Claw Pokémon",n.DARK,n.ICE,.9,28,O.INNER_FOCUS,O.KEEN_EYE,O.PICKPOCKET,430,55,95,55,35,75,115,60,35,86,h.MEDIUM_SLOW,50,!0),new u(e.TEDDIURSA,2,!1,!1,!1,"Little Bear Pokémon",n.NORMAL,null,.6,8.8,O.PICKUP,O.QUICK_FEET,O.HONEY_GATHER,330,60,80,50,50,50,40,120,70,66,h.MEDIUM_FAST,50,!1),new u(e.URSARING,2,!1,!1,!1,"Hibernator Pokémon",n.NORMAL,null,1.8,125.8,O.GUTS,O.QUICK_FEET,O.UNNERVE,500,90,130,75,75,75,55,60,70,175,h.MEDIUM_FAST,50,!0),new u(e.SLUGMA,2,!1,!1,!1,"Lava Pokémon",n.FIRE,null,.7,35,O.MAGMA_ARMOR,O.FLAME_BODY,O.WEAK_ARMOR,250,40,40,40,70,40,20,190,70,50,h.MEDIUM_FAST,50,!1),new u(e.MAGCARGO,2,!1,!1,!1,"Lava Pokémon",n.FIRE,n.ROCK,.8,55,O.MAGMA_ARMOR,O.FLAME_BODY,O.WEAK_ARMOR,430,60,50,120,90,80,30,75,70,151,h.MEDIUM_FAST,50,!1),new u(e.SWINUB,2,!1,!1,!1,"Pig Pokémon",n.ICE,n.GROUND,.4,6.5,O.OBLIVIOUS,O.SNOW_CLOAK,O.THICK_FAT,250,50,50,40,30,30,50,225,50,50,h.SLOW,50,!1),new u(e.PILOSWINE,2,!1,!1,!1,"Swine Pokémon",n.ICE,n.GROUND,1.1,55.8,O.OBLIVIOUS,O.SNOW_CLOAK,O.THICK_FAT,450,100,100,80,60,60,50,75,50,158,h.SLOW,50,!0),new u(e.CORSOLA,2,!1,!1,!1,"Coral Pokémon",n.WATER,n.ROCK,.6,5,O.HUSTLE,O.NATURAL_CURE,O.REGENERATOR,410,65,55,95,65,95,35,60,50,144,h.FAST,25,!1),new u(e.REMORAID,2,!1,!1,!1,"Jet Pokémon",n.WATER,null,.6,12,O.HUSTLE,O.SNIPER,O.MOODY,300,35,65,35,65,35,65,190,50,60,h.MEDIUM_FAST,50,!1),new u(e.OCTILLERY,2,!1,!1,!1,"Jet Pokémon",n.WATER,null,.9,28.5,O.SUCTION_CUPS,O.SNIPER,O.MOODY,480,75,105,75,105,75,45,75,50,168,h.MEDIUM_FAST,50,!0),new u(e.DELIBIRD,2,!1,!1,!1,"Delivery Pokémon",n.ICE,n.FLYING,.9,16,O.VITAL_SPIRIT,O.HUSTLE,O.INSOMNIA,330,45,55,45,65,45,75,45,50,116,h.FAST,50,!1),new u(e.MANTINE,2,!1,!1,!1,"Kite Pokémon",n.WATER,n.FLYING,2.1,220,O.SWIFT_SWIM,O.WATER_ABSORB,O.WATER_VEIL,485,85,40,70,80,140,70,25,50,170,h.SLOW,50,!1),new u(e.SKARMORY,2,!1,!1,!1,"Armor Bird Pokémon",n.STEEL,n.FLYING,1.7,50.5,O.KEEN_EYE,O.STURDY,O.WEAK_ARMOR,465,65,80,140,40,70,70,25,50,163,h.SLOW,50,!1),new u(e.HOUNDOUR,2,!1,!1,!1,"Dark Pokémon",n.DARK,n.FIRE,.6,10.8,O.EARLY_BIRD,O.FLASH_FIRE,O.UNNERVE,330,45,60,30,80,50,65,120,35,66,h.SLOW,50,!1),new u(e.HOUNDOOM,2,!1,!1,!1,"Dark Pokémon",n.DARK,n.FIRE,1.4,35,O.EARLY_BIRD,O.FLASH_FIRE,O.UNNERVE,500,75,90,50,110,80,95,45,35,175,h.SLOW,50,!0,!0,new K("Normal","",n.DARK,n.FIRE,1.4,35,O.EARLY_BIRD,O.FLASH_FIRE,O.UNNERVE,500,75,90,50,110,80,95,45,35,175,!0,null,!0),new K("Mega",Ee.MEGA,n.DARK,n.FIRE,1.9,49.5,O.SOLAR_POWER,O.SOLAR_POWER,O.SOLAR_POWER,600,75,90,90,140,90,115,45,35,175,!0)),new u(e.KINGDRA,2,!1,!1,!1,"Dragon Pokémon",n.WATER,n.DRAGON,1.8,152,O.SWIFT_SWIM,O.SNIPER,O.DAMP,540,75,95,95,95,95,85,45,50,270,h.MEDIUM_FAST,50,!1),new u(e.PHANPY,2,!1,!1,!1,"Long Nose Pokémon",n.GROUND,null,.5,33.5,O.PICKUP,O.NONE,O.SAND_VEIL,330,90,60,60,40,40,40,120,70,66,h.MEDIUM_FAST,50,!1),new u(e.DONPHAN,2,!1,!1,!1,"Armor Pokémon",n.GROUND,null,1.1,120,O.STURDY,O.NONE,O.SAND_VEIL,500,90,120,120,60,60,50,60,70,175,h.MEDIUM_FAST,50,!0),new u(e.PORYGON2,2,!1,!1,!1,"Virtual Pokémon",n.NORMAL,null,.6,32.5,O.TRACE,O.DOWNLOAD,O.ANALYTIC,515,85,80,90,105,95,60,45,50,180,h.MEDIUM_FAST,null,!1),new u(e.STANTLER,2,!1,!1,!1,"Big Horn Pokémon",n.NORMAL,null,1.4,71.2,O.INTIMIDATE,O.FRISK,O.SAP_SIPPER,465,73,95,62,85,65,85,45,70,163,h.SLOW,50,!1),new u(e.SMEARGLE,2,!1,!1,!1,"Painter Pokémon",n.NORMAL,null,1.2,58,O.OWN_TEMPO,O.TECHNICIAN,O.MOODY,250,55,20,35,20,45,75,45,70,88,h.FAST,50,!1),new u(e.TYROGUE,2,!1,!1,!1,"Scuffle Pokémon",n.FIGHTING,null,.7,21,O.GUTS,O.STEADFAST,O.VITAL_SPIRIT,210,35,35,35,35,35,35,75,50,42,h.MEDIUM_FAST,100,!1),new u(e.HITMONTOP,2,!1,!1,!1,"Handstand Pokémon",n.FIGHTING,null,1.4,48,O.INTIMIDATE,O.TECHNICIAN,O.STEADFAST,455,50,95,95,35,110,70,45,50,159,h.MEDIUM_FAST,100,!1),new u(e.SMOOCHUM,2,!1,!1,!1,"Kiss Pokémon",n.ICE,n.PSYCHIC,.4,6,O.OBLIVIOUS,O.FOREWARN,O.HYDRATION,305,45,30,15,85,65,65,45,50,61,h.MEDIUM_FAST,0,!1),new u(e.ELEKID,2,!1,!1,!1,"Electric Pokémon",n.ELECTRIC,null,.6,23.5,O.STATIC,O.NONE,O.VITAL_SPIRIT,360,45,63,37,65,55,95,45,50,72,h.MEDIUM_FAST,75,!1),new u(e.MAGBY,2,!1,!1,!1,"Live Coal Pokémon",n.FIRE,null,.7,21.4,O.FLAME_BODY,O.NONE,O.VITAL_SPIRIT,365,45,75,37,70,55,83,45,50,73,h.MEDIUM_FAST,75,!1),new u(e.MILTANK,2,!1,!1,!1,"Milk Cow Pokémon",n.NORMAL,null,1.2,75.5,O.THICK_FAT,O.SCRAPPY,O.SAP_SIPPER,490,95,80,105,40,70,100,45,50,172,h.SLOW,0,!1),new u(e.BLISSEY,2,!1,!1,!1,"Happiness Pokémon",n.NORMAL,null,1.5,46.8,O.NATURAL_CURE,O.SERENE_GRACE,O.HEALER,540,255,10,10,75,135,55,30,140,635,h.FAST,0,!1),new u(e.RAIKOU,2,!0,!1,!1,"Thunder Pokémon",n.ELECTRIC,null,1.9,178,O.PRESSURE,O.NONE,O.INNER_FOCUS,580,90,85,75,115,100,115,3,35,290,h.SLOW,null,!1),new u(e.ENTEI,2,!0,!1,!1,"Volcano Pokémon",n.FIRE,null,2.1,198,O.PRESSURE,O.NONE,O.INNER_FOCUS,580,115,115,85,90,75,100,3,35,290,h.SLOW,null,!1),new u(e.SUICUNE,2,!0,!1,!1,"Aurora Pokémon",n.WATER,null,2,187,O.PRESSURE,O.NONE,O.INNER_FOCUS,580,100,75,115,90,115,85,3,35,290,h.SLOW,null,!1),new u(e.LARVITAR,2,!1,!1,!1,"Rock Skin Pokémon",n.ROCK,n.GROUND,.6,72,O.GUTS,O.NONE,O.SAND_VEIL,300,50,64,50,45,50,41,45,35,60,h.SLOW,50,!1),new u(e.PUPITAR,2,!1,!1,!1,"Hard Shell Pokémon",n.ROCK,n.GROUND,1.2,152,O.SHED_SKIN,O.NONE,O.SHED_SKIN,410,70,84,70,65,70,51,45,35,144,h.SLOW,50,!1),new u(e.TYRANITAR,2,!1,!1,!1,"Armor Pokémon",n.ROCK,n.DARK,2,202,O.SAND_STREAM,O.NONE,O.UNNERVE,600,100,134,110,95,100,61,45,35,300,h.SLOW,50,!1,!0,new K("Normal","",n.ROCK,n.DARK,2,202,O.SAND_STREAM,O.NONE,O.UNNERVE,600,100,134,110,95,100,61,45,35,300,!1,null,!0),new K("Mega",Ee.MEGA,n.ROCK,n.DARK,2.5,255,O.SAND_STREAM,O.NONE,O.SAND_STREAM,700,100,164,150,95,120,71,45,35,300)),new u(e.LUGIA,2,!1,!0,!1,"Diving Pokémon",n.PSYCHIC,n.FLYING,5.2,216,O.PRESSURE,O.NONE,O.MULTISCALE,680,106,90,130,90,154,110,3,0,340,h.SLOW,null,!1),new u(e.HO_OH,2,!1,!0,!1,"Rainbow Pokémon",n.FIRE,n.FLYING,3.8,199,O.PRESSURE,O.NONE,O.REGENERATOR,680,106,130,90,110,154,90,3,0,340,h.SLOW,null,!1),new u(e.CELEBI,2,!1,!1,!0,"Time Travel Pokémon",n.PSYCHIC,n.GRASS,.6,5,O.NATURAL_CURE,O.NONE,O.NONE,600,100,100,100,100,100,100,45,100,300,h.MEDIUM_SLOW,null,!1),new u(e.TREECKO,3,!1,!1,!1,"Wood Gecko Pokémon",n.GRASS,null,.5,5,O.OVERGROW,O.NONE,O.UNBURDEN,310,40,45,35,65,55,70,45,50,62,h.MEDIUM_SLOW,87.5,!1),new u(e.GROVYLE,3,!1,!1,!1,"Wood Gecko Pokémon",n.GRASS,null,.9,21.6,O.OVERGROW,O.NONE,O.UNBURDEN,405,50,65,45,85,65,95,45,50,142,h.MEDIUM_SLOW,87.5,!1),new u(e.SCEPTILE,3,!1,!1,!1,"Forest Pokémon",n.GRASS,null,1.7,52.2,O.OVERGROW,O.NONE,O.UNBURDEN,530,70,85,65,105,85,120,45,50,265,h.MEDIUM_SLOW,87.5,!1,!0,new K("Normal","",n.GRASS,null,1.7,52.2,O.OVERGROW,O.NONE,O.UNBURDEN,530,70,85,65,105,85,120,45,50,265,!1,null,!0),new K("Mega",Ee.MEGA,n.GRASS,n.DRAGON,1.9,55.2,O.LIGHTNING_ROD,O.NONE,O.LIGHTNING_ROD,630,70,110,75,145,85,145,45,50,265)),new u(e.TORCHIC,3,!1,!1,!1,"Chick Pokémon",n.FIRE,null,.4,2.5,O.BLAZE,O.NONE,O.SPEED_BOOST,310,45,60,40,70,50,45,45,50,62,h.MEDIUM_SLOW,87.5,!0),new u(e.COMBUSKEN,3,!1,!1,!1,"Young Fowl Pokémon",n.FIRE,n.FIGHTING,.9,19.5,O.BLAZE,O.NONE,O.SPEED_BOOST,405,60,85,60,85,60,55,45,50,142,h.MEDIUM_SLOW,87.5,!0),new u(e.BLAZIKEN,3,!1,!1,!1,"Blaze Pokémon",n.FIRE,n.FIGHTING,1.9,52,O.BLAZE,O.NONE,O.SPEED_BOOST,530,80,120,70,110,70,80,45,50,265,h.MEDIUM_SLOW,87.5,!0,!0,new K("Normal","",n.FIRE,n.FIGHTING,1.9,52,O.BLAZE,O.NONE,O.SPEED_BOOST,530,80,120,70,110,70,80,45,50,265,!0,null,!0),new K("Mega",Ee.MEGA,n.FIRE,n.FIGHTING,1.9,52,O.SPEED_BOOST,O.NONE,O.SPEED_BOOST,630,80,160,80,130,80,100,45,50,265,!0)),new u(e.MUDKIP,3,!1,!1,!1,"Mud Fish Pokémon",n.WATER,null,.4,7.6,O.TORRENT,O.NONE,O.DAMP,310,50,70,50,50,50,40,45,50,62,h.MEDIUM_SLOW,87.5,!1),new u(e.MARSHTOMP,3,!1,!1,!1,"Mud Fish Pokémon",n.WATER,n.GROUND,.7,28,O.TORRENT,O.NONE,O.DAMP,405,70,85,70,60,70,50,45,50,142,h.MEDIUM_SLOW,87.5,!1),new u(e.SWAMPERT,3,!1,!1,!1,"Mud Fish Pokémon",n.WATER,n.GROUND,1.5,81.9,O.TORRENT,O.NONE,O.DAMP,535,100,110,90,85,90,60,45,50,268,h.MEDIUM_SLOW,87.5,!1,!0,new K("Normal","",n.WATER,n.GROUND,1.5,81.9,O.TORRENT,O.NONE,O.DAMP,535,100,110,90,85,90,60,45,50,268,!1,null,!0),new K("Mega",Ee.MEGA,n.WATER,n.GROUND,1.9,102,O.SWIFT_SWIM,O.NONE,O.SWIFT_SWIM,635,100,150,110,95,110,70,45,50,268)),new u(e.POOCHYENA,3,!1,!1,!1,"Bite Pokémon",n.DARK,null,.5,13.6,O.RUN_AWAY,O.QUICK_FEET,O.RATTLED,220,35,55,35,30,30,35,255,70,56,h.MEDIUM_FAST,50,!1),new u(e.MIGHTYENA,3,!1,!1,!1,"Bite Pokémon",n.DARK,null,1,37,O.INTIMIDATE,O.QUICK_FEET,O.MOXIE,420,70,90,70,60,60,70,127,70,147,h.MEDIUM_FAST,50,!1),new u(e.ZIGZAGOON,3,!1,!1,!1,"Tiny Raccoon Pokémon",n.NORMAL,null,.4,17.5,O.PICKUP,O.GLUTTONY,O.QUICK_FEET,240,38,30,41,30,41,60,255,50,56,h.MEDIUM_FAST,50,!1),new u(e.LINOONE,3,!1,!1,!1,"Rushing Pokémon",n.NORMAL,null,.5,32.5,O.PICKUP,O.GLUTTONY,O.QUICK_FEET,420,78,70,61,50,61,100,90,50,147,h.MEDIUM_FAST,50,!1),new u(e.WURMPLE,3,!1,!1,!1,"Worm Pokémon",n.BUG,null,.3,3.6,O.SHIELD_DUST,O.NONE,O.RUN_AWAY,195,45,45,35,20,30,20,255,70,56,h.MEDIUM_FAST,50,!1),new u(e.SILCOON,3,!1,!1,!1,"Cocoon Pokémon",n.BUG,null,.6,10,O.SHED_SKIN,O.NONE,O.SHED_SKIN,205,50,35,55,25,25,15,120,70,72,h.MEDIUM_FAST,50,!1),new u(e.BEAUTIFLY,3,!1,!1,!1,"Butterfly Pokémon",n.BUG,n.FLYING,1,28.4,O.SWARM,O.NONE,O.RIVALRY,395,60,70,50,100,50,65,45,70,178,h.MEDIUM_FAST,50,!0),new u(e.CASCOON,3,!1,!1,!1,"Cocoon Pokémon",n.BUG,null,.7,11.5,O.SHED_SKIN,O.NONE,O.SHED_SKIN,205,50,35,55,25,25,15,120,70,72,h.MEDIUM_FAST,50,!1),new u(e.DUSTOX,3,!1,!1,!1,"Poison Moth Pokémon",n.BUG,n.POISON,1.2,31.6,O.SHIELD_DUST,O.NONE,O.COMPOUND_EYES,385,60,50,70,50,90,65,45,70,173,h.MEDIUM_FAST,50,!0),new u(e.LOTAD,3,!1,!1,!1,"Water Weed Pokémon",n.WATER,n.GRASS,.5,2.6,O.SWIFT_SWIM,O.RAIN_DISH,O.OWN_TEMPO,220,40,30,30,40,50,30,255,50,44,h.MEDIUM_SLOW,50,!1),new u(e.LOMBRE,3,!1,!1,!1,"Jolly Pokémon",n.WATER,n.GRASS,1.2,32.5,O.SWIFT_SWIM,O.RAIN_DISH,O.OWN_TEMPO,340,60,50,50,60,70,50,120,50,119,h.MEDIUM_SLOW,50,!1),new u(e.LUDICOLO,3,!1,!1,!1,"Carefree Pokémon",n.WATER,n.GRASS,1.5,55,O.SWIFT_SWIM,O.RAIN_DISH,O.OWN_TEMPO,480,80,70,70,90,100,70,45,50,240,h.MEDIUM_SLOW,50,!0),new u(e.SEEDOT,3,!1,!1,!1,"Acorn Pokémon",n.GRASS,null,.5,4,O.CHLOROPHYLL,O.EARLY_BIRD,O.PICKPOCKET,220,40,40,50,30,30,30,255,50,44,h.MEDIUM_SLOW,50,!1),new u(e.NUZLEAF,3,!1,!1,!1,"Wily Pokémon",n.GRASS,n.DARK,1,28,O.CHLOROPHYLL,O.EARLY_BIRD,O.PICKPOCKET,340,70,70,40,60,40,60,120,50,119,h.MEDIUM_SLOW,50,!0),new u(e.SHIFTRY,3,!1,!1,!1,"Wicked Pokémon",n.GRASS,n.DARK,1.3,59.6,O.CHLOROPHYLL,O.WIND_RIDER,O.PICKPOCKET,480,90,100,60,90,60,80,45,50,240,h.MEDIUM_SLOW,50,!0),new u(e.TAILLOW,3,!1,!1,!1,"Tiny Swallow Pokémon",n.NORMAL,n.FLYING,.3,2.3,O.GUTS,O.NONE,O.SCRAPPY,270,40,55,30,30,30,85,200,70,54,h.MEDIUM_SLOW,50,!1),new u(e.SWELLOW,3,!1,!1,!1,"Swallow Pokémon",n.NORMAL,n.FLYING,.7,19.8,O.GUTS,O.NONE,O.SCRAPPY,455,60,85,60,75,50,125,45,70,159,h.MEDIUM_SLOW,50,!1),new u(e.WINGULL,3,!1,!1,!1,"Seagull Pokémon",n.WATER,n.FLYING,.6,9.5,O.KEEN_EYE,O.HYDRATION,O.RAIN_DISH,270,40,30,30,55,30,85,190,50,54,h.MEDIUM_FAST,50,!1),new u(e.PELIPPER,3,!1,!1,!1,"Water Bird Pokémon",n.WATER,n.FLYING,1.2,28,O.KEEN_EYE,O.DRIZZLE,O.RAIN_DISH,440,60,50,100,95,70,65,45,50,154,h.MEDIUM_FAST,50,!1),new u(e.RALTS,3,!1,!1,!1,"Feeling Pokémon",n.PSYCHIC,n.FAIRY,.4,6.6,O.SYNCHRONIZE,O.TRACE,O.TELEPATHY,198,28,25,25,45,35,40,235,35,40,h.SLOW,50,!1),new u(e.KIRLIA,3,!1,!1,!1,"Emotion Pokémon",n.PSYCHIC,n.FAIRY,.8,20.2,O.SYNCHRONIZE,O.TRACE,O.TELEPATHY,278,38,35,35,65,55,50,120,35,97,h.SLOW,50,!1),new u(e.GARDEVOIR,3,!1,!1,!1,"Embrace Pokémon",n.PSYCHIC,n.FAIRY,1.6,48.4,O.SYNCHRONIZE,O.TRACE,O.TELEPATHY,518,68,65,65,125,115,80,45,35,259,h.SLOW,50,!1,!0,new K("Normal","",n.PSYCHIC,n.FAIRY,1.6,48.4,O.SYNCHRONIZE,O.TRACE,O.TELEPATHY,518,68,65,65,125,115,80,45,35,259,!1,null,!0),new K("Mega",Ee.MEGA,n.PSYCHIC,n.FAIRY,1.6,48.4,O.PIXILATE,O.PIXILATE,O.PIXILATE,618,68,85,65,165,135,100,45,35,259)),new u(e.SURSKIT,3,!1,!1,!1,"Pond Skater Pokémon",n.BUG,n.WATER,.5,1.7,O.SWIFT_SWIM,O.NONE,O.RAIN_DISH,269,40,30,32,50,52,65,200,70,54,h.MEDIUM_FAST,50,!1),new u(e.MASQUERAIN,3,!1,!1,!1,"Eyeball Pokémon",n.BUG,n.FLYING,.8,3.6,O.INTIMIDATE,O.NONE,O.UNNERVE,454,70,60,62,100,82,80,75,70,159,h.MEDIUM_FAST,50,!1),new u(e.SHROOMISH,3,!1,!1,!1,"Mushroom Pokémon",n.GRASS,null,.4,4.5,O.EFFECT_SPORE,O.POISON_HEAL,O.QUICK_FEET,295,60,40,60,40,60,35,255,70,59,h.FLUCTUATING,50,!1),new u(e.BRELOOM,3,!1,!1,!1,"Mushroom Pokémon",n.GRASS,n.FIGHTING,1.2,39.2,O.EFFECT_SPORE,O.POISON_HEAL,O.TECHNICIAN,460,60,130,80,60,60,70,90,70,161,h.FLUCTUATING,50,!1),new u(e.SLAKOTH,3,!1,!1,!1,"Slacker Pokémon",n.NORMAL,null,.8,24,O.TRUANT,O.NONE,O.STALL,280,60,60,60,35,35,30,255,70,56,h.SLOW,50,!1),new u(e.VIGOROTH,3,!1,!1,!1,"Wild Monkey Pokémon",n.NORMAL,null,1.4,46.5,O.VITAL_SPIRIT,O.NONE,O.INSOMNIA,440,80,80,80,55,55,90,120,70,154,h.SLOW,50,!1),new u(e.SLAKING,3,!1,!1,!1,"Lazy Pokémon",n.NORMAL,null,2,130.5,O.TRUANT,O.NONE,O.STALL,670,150,160,100,95,65,100,45,70,252,h.SLOW,50,!1),new u(e.NINCADA,3,!1,!1,!1,"Trainee Pokémon",n.BUG,n.GROUND,.5,5.5,O.COMPOUND_EYES,O.NONE,O.RUN_AWAY,266,31,45,90,30,30,40,255,50,53,h.ERRATIC,50,!1),new u(e.NINJASK,3,!1,!1,!1,"Ninja Pokémon",n.BUG,n.FLYING,.8,12,O.SPEED_BOOST,O.NONE,O.INFILTRATOR,456,61,90,45,50,50,160,120,50,160,h.ERRATIC,50,!1),new u(e.SHEDINJA,3,!1,!1,!1,"Shed Pokémon",n.BUG,n.GHOST,.8,1.2,O.WONDER_GUARD,O.NONE,O.NONE,236,1,90,45,30,30,40,45,50,83,h.ERRATIC,null,!1),new u(e.WHISMUR,3,!1,!1,!1,"Whisper Pokémon",n.NORMAL,null,.6,16.3,O.SOUNDPROOF,O.NONE,O.RATTLED,240,64,51,23,51,23,28,190,50,48,h.MEDIUM_SLOW,50,!1),new u(e.LOUDRED,3,!1,!1,!1,"Big Voice Pokémon",n.NORMAL,null,1,40.5,O.SOUNDPROOF,O.NONE,O.SCRAPPY,360,84,71,43,71,43,48,120,50,126,h.MEDIUM_SLOW,50,!1),new u(e.EXPLOUD,3,!1,!1,!1,"Loud Noise Pokémon",n.NORMAL,null,1.5,84,O.SOUNDPROOF,O.NONE,O.SCRAPPY,490,104,91,63,91,73,68,45,50,245,h.MEDIUM_SLOW,50,!1),new u(e.MAKUHITA,3,!1,!1,!1,"Guts Pokémon",n.FIGHTING,null,1,86.4,O.THICK_FAT,O.GUTS,O.SHEER_FORCE,237,72,60,30,20,30,25,180,70,47,h.FLUCTUATING,75,!1),new u(e.HARIYAMA,3,!1,!1,!1,"Arm Thrust Pokémon",n.FIGHTING,null,2.3,253.8,O.THICK_FAT,O.GUTS,O.SHEER_FORCE,474,144,120,60,40,60,50,200,70,166,h.FLUCTUATING,75,!1),new u(e.AZURILL,3,!1,!1,!1,"Polka Dot Pokémon",n.NORMAL,n.FAIRY,.2,2,O.THICK_FAT,O.HUGE_POWER,O.SAP_SIPPER,190,50,20,40,20,40,20,150,50,38,h.FAST,25,!1),new u(e.NOSEPASS,3,!1,!1,!1,"Compass Pokémon",n.ROCK,null,1,97,O.STURDY,O.MAGNET_PULL,O.SAND_FORCE,375,30,45,135,45,90,30,255,70,75,h.MEDIUM_FAST,50,!1),new u(e.SKITTY,3,!1,!1,!1,"Kitten Pokémon",n.NORMAL,null,.6,11,O.CUTE_CHARM,O.NORMALIZE,O.WONDER_SKIN,260,50,45,45,35,35,50,255,70,52,h.FAST,25,!1),new u(e.DELCATTY,3,!1,!1,!1,"Prim Pokémon",n.NORMAL,null,1.1,32.6,O.CUTE_CHARM,O.NORMALIZE,O.WONDER_SKIN,400,70,65,65,55,55,90,60,70,140,h.FAST,25,!1),new u(e.SABLEYE,3,!1,!1,!1,"Darkness Pokémon",n.DARK,n.GHOST,.5,11,O.KEEN_EYE,O.STALL,O.PRANKSTER,380,50,75,75,65,65,50,45,35,133,h.MEDIUM_SLOW,50,!1,!0,new K("Normal","",n.DARK,n.GHOST,.5,11,O.KEEN_EYE,O.STALL,O.PRANKSTER,380,50,75,75,65,65,50,45,35,133,!1,null,!0),new K("Mega",Ee.MEGA,n.DARK,n.GHOST,.5,161,O.MAGIC_BOUNCE,O.MAGIC_BOUNCE,O.MAGIC_BOUNCE,480,50,85,125,85,115,20,45,35,133)),new u(e.MAWILE,3,!1,!1,!1,"Deceiver Pokémon",n.STEEL,n.FAIRY,.6,11.5,O.HYPER_CUTTER,O.INTIMIDATE,O.SHEER_FORCE,380,50,85,85,55,55,50,45,50,133,h.FAST,50,!1,!0,new K("Normal","",n.STEEL,n.FAIRY,.6,11.5,O.HYPER_CUTTER,O.INTIMIDATE,O.SHEER_FORCE,380,50,85,85,55,55,50,45,50,133,!1,null,!0),new K("Mega",Ee.MEGA,n.STEEL,n.FAIRY,1,23.5,O.HUGE_POWER,O.HUGE_POWER,O.HUGE_POWER,480,50,105,125,55,95,50,45,50,133)),new u(e.ARON,3,!1,!1,!1,"Iron Armor Pokémon",n.STEEL,n.ROCK,.4,60,O.STURDY,O.ROCK_HEAD,O.HEAVY_METAL,330,50,70,100,40,40,30,180,35,66,h.SLOW,50,!1),new u(e.LAIRON,3,!1,!1,!1,"Iron Armor Pokémon",n.STEEL,n.ROCK,.9,120,O.STURDY,O.ROCK_HEAD,O.HEAVY_METAL,430,60,90,140,50,50,40,90,35,151,h.SLOW,50,!1),new u(e.AGGRON,3,!1,!1,!1,"Iron Armor Pokémon",n.STEEL,n.ROCK,2.1,360,O.STURDY,O.ROCK_HEAD,O.HEAVY_METAL,530,70,110,180,60,60,50,45,35,265,h.SLOW,50,!1,!0,new K("Normal","",n.STEEL,n.ROCK,2.1,360,O.STURDY,O.ROCK_HEAD,O.HEAVY_METAL,530,70,110,180,60,60,50,45,35,265,!1,null,!0),new K("Mega",Ee.MEGA,n.STEEL,null,2.2,395,O.FILTER,O.FILTER,O.FILTER,630,70,140,230,60,80,50,45,35,265)),new u(e.MEDITITE,3,!1,!1,!1,"Meditate Pokémon",n.FIGHTING,n.PSYCHIC,.6,11.2,O.PURE_POWER,O.NONE,O.TELEPATHY,280,30,40,55,40,55,60,180,70,56,h.MEDIUM_FAST,50,!0),new u(e.MEDICHAM,3,!1,!1,!1,"Meditate Pokémon",n.FIGHTING,n.PSYCHIC,1.3,31.5,O.PURE_POWER,O.NONE,O.TELEPATHY,410,60,60,75,60,75,80,90,70,144,h.MEDIUM_FAST,50,!0,!0,new K("Normal","",n.FIGHTING,n.PSYCHIC,1.3,31.5,O.PURE_POWER,O.NONE,O.TELEPATHY,410,60,60,75,60,75,80,90,70,144,!0,null,!0),new K("Mega",Ee.MEGA,n.FIGHTING,n.PSYCHIC,1.3,31.5,O.PURE_POWER,O.NONE,O.PURE_POWER,510,60,100,85,80,85,100,90,70,144,!0)),new u(e.ELECTRIKE,3,!1,!1,!1,"Lightning Pokémon",n.ELECTRIC,null,.6,15.2,O.STATIC,O.LIGHTNING_ROD,O.MINUS,295,40,45,40,65,40,65,120,50,59,h.SLOW,50,!1),new u(e.MANECTRIC,3,!1,!1,!1,"Discharge Pokémon",n.ELECTRIC,null,1.5,40.2,O.STATIC,O.LIGHTNING_ROD,O.MINUS,475,70,75,60,105,60,105,45,50,166,h.SLOW,50,!1,!0,new K("Normal","",n.ELECTRIC,null,1.5,40.2,O.STATIC,O.LIGHTNING_ROD,O.MINUS,475,70,75,60,105,60,105,45,50,166,!1,null,!0),new K("Mega",Ee.MEGA,n.ELECTRIC,null,1.8,44,O.INTIMIDATE,O.INTIMIDATE,O.INTIMIDATE,575,70,75,80,135,80,135,45,50,166)),new u(e.PLUSLE,3,!1,!1,!1,"Cheering Pokémon",n.ELECTRIC,null,.4,4.2,O.PLUS,O.NONE,O.LIGHTNING_ROD,405,60,50,40,85,75,95,200,70,142,h.MEDIUM_FAST,50,!1),new u(e.MINUN,3,!1,!1,!1,"Cheering Pokémon",n.ELECTRIC,null,.4,4.2,O.MINUS,O.NONE,O.VOLT_ABSORB,405,60,40,50,75,85,95,200,70,142,h.MEDIUM_FAST,50,!1),new u(e.VOLBEAT,3,!1,!1,!1,"Firefly Pokémon",n.BUG,null,.7,17.7,O.ILLUMINATE,O.SWARM,O.PRANKSTER,430,65,73,75,47,85,85,150,70,151,h.ERRATIC,100,!1),new u(e.ILLUMISE,3,!1,!1,!1,"Firefly Pokémon",n.BUG,null,.6,17.7,O.OBLIVIOUS,O.TINTED_LENS,O.PRANKSTER,430,65,47,75,73,85,85,150,70,151,h.FLUCTUATING,0,!1),new u(e.ROSELIA,3,!1,!1,!1,"Thorn Pokémon",n.GRASS,n.POISON,.3,2,O.NATURAL_CURE,O.POISON_POINT,O.LEAF_GUARD,400,50,60,45,100,80,65,150,50,140,h.MEDIUM_SLOW,50,!0),new u(e.GULPIN,3,!1,!1,!1,"Stomach Pokémon",n.POISON,null,.4,10.3,O.LIQUID_OOZE,O.STICKY_HOLD,O.GLUTTONY,302,70,43,53,43,53,40,225,70,60,h.FLUCTUATING,50,!0),new u(e.SWALOT,3,!1,!1,!1,"Poison Bag Pokémon",n.POISON,null,1.7,80,O.LIQUID_OOZE,O.STICKY_HOLD,O.GLUTTONY,467,100,73,83,73,83,55,75,70,163,h.FLUCTUATING,50,!0),new u(e.CARVANHA,3,!1,!1,!1,"Savage Pokémon",n.WATER,n.DARK,.8,20.8,O.ROUGH_SKIN,O.NONE,O.SPEED_BOOST,305,45,90,20,65,20,65,225,35,61,h.SLOW,50,!1),new u(e.SHARPEDO,3,!1,!1,!1,"Brutal Pokémon",n.WATER,n.DARK,1.8,88.8,O.ROUGH_SKIN,O.NONE,O.SPEED_BOOST,460,70,120,40,95,40,95,60,35,161,h.SLOW,50,!1,!0,new K("Normal","",n.WATER,n.DARK,1.8,88.8,O.ROUGH_SKIN,O.NONE,O.SPEED_BOOST,460,70,120,40,95,40,95,60,35,161,!1,null,!0),new K("Mega",Ee.MEGA,n.WATER,n.DARK,2.5,130.3,O.STRONG_JAW,O.NONE,O.STRONG_JAW,560,70,140,70,110,65,105,60,35,161)),new u(e.WAILMER,3,!1,!1,!1,"Ball Whale Pokémon",n.WATER,null,2,130,O.WATER_VEIL,O.OBLIVIOUS,O.PRESSURE,400,130,70,35,70,35,60,125,50,80,h.FLUCTUATING,50,!1),new u(e.WAILORD,3,!1,!1,!1,"Float Whale Pokémon",n.WATER,null,14.5,398,O.WATER_VEIL,O.OBLIVIOUS,O.PRESSURE,500,170,90,45,90,45,60,60,50,175,h.FLUCTUATING,50,!1),new u(e.NUMEL,3,!1,!1,!1,"Numb Pokémon",n.FIRE,n.GROUND,.7,24,O.OBLIVIOUS,O.SIMPLE,O.OWN_TEMPO,305,60,60,40,65,45,35,255,70,61,h.MEDIUM_FAST,50,!0),new u(e.CAMERUPT,3,!1,!1,!1,"Eruption Pokémon",n.FIRE,n.GROUND,1.9,220,O.MAGMA_ARMOR,O.SOLID_ROCK,O.ANGER_POINT,460,70,100,70,105,75,40,150,70,161,h.MEDIUM_FAST,50,!0,!0,new K("Normal","",n.FIRE,n.GROUND,1.9,220,O.MAGMA_ARMOR,O.SOLID_ROCK,O.ANGER_POINT,460,70,100,70,105,75,40,150,70,161,!0,null,!0),new K("Mega",Ee.MEGA,n.FIRE,n.GROUND,2.5,320.5,O.SHEER_FORCE,O.SHEER_FORCE,O.SHEER_FORCE,560,70,120,100,145,105,20,150,70,161)),new u(e.TORKOAL,3,!1,!1,!1,"Coal Pokémon",n.FIRE,null,.5,80.4,O.WHITE_SMOKE,O.DROUGHT,O.SHELL_ARMOR,470,70,85,140,85,70,20,90,50,165,h.MEDIUM_FAST,50,!1),new u(e.SPOINK,3,!1,!1,!1,"Bounce Pokémon",n.PSYCHIC,null,.7,30.6,O.THICK_FAT,O.OWN_TEMPO,O.GLUTTONY,330,60,25,35,70,80,60,255,70,66,h.FAST,50,!1),new u(e.GRUMPIG,3,!1,!1,!1,"Manipulate Pokémon",n.PSYCHIC,null,.9,71.5,O.THICK_FAT,O.OWN_TEMPO,O.GLUTTONY,470,80,45,65,90,110,80,60,70,165,h.FAST,50,!1),new u(e.SPINDA,3,!1,!1,!1,"Spot Panda Pokémon",n.NORMAL,null,1.1,5,O.OWN_TEMPO,O.TANGLED_FEET,O.CONTRARY,360,60,60,60,60,60,60,255,70,126,h.FAST,50,!1),new u(e.TRAPINCH,3,!1,!1,!1,"Ant Pit Pokémon",n.GROUND,null,.7,15,O.HYPER_CUTTER,O.ARENA_TRAP,O.SHEER_FORCE,290,45,100,45,45,45,10,255,50,58,h.MEDIUM_SLOW,50,!1),new u(e.VIBRAVA,3,!1,!1,!1,"Vibration Pokémon",n.GROUND,n.DRAGON,1.1,15.3,O.LEVITATE,O.NONE,O.NONE,340,50,70,50,50,50,70,120,50,119,h.MEDIUM_SLOW,50,!1),new u(e.FLYGON,3,!1,!1,!1,"Mystic Pokémon",n.GROUND,n.DRAGON,2,82,O.LEVITATE,O.NONE,O.NONE,520,80,100,80,80,80,100,45,50,260,h.MEDIUM_SLOW,50,!1),new u(e.CACNEA,3,!1,!1,!1,"Cactus Pokémon",n.GRASS,null,.4,51.3,O.SAND_VEIL,O.NONE,O.WATER_ABSORB,335,50,85,40,85,40,35,190,35,67,h.MEDIUM_SLOW,50,!1),new u(e.CACTURNE,3,!1,!1,!1,"Scarecrow Pokémon",n.GRASS,n.DARK,1.3,77.4,O.SAND_VEIL,O.NONE,O.WATER_ABSORB,475,70,115,60,115,60,55,60,35,166,h.MEDIUM_SLOW,50,!0),new u(e.SWABLU,3,!1,!1,!1,"Cotton Bird Pokémon",n.NORMAL,n.FLYING,.4,1.2,O.NATURAL_CURE,O.NONE,O.CLOUD_NINE,310,45,40,60,40,75,50,255,50,62,h.ERRATIC,50,!1),new u(e.ALTARIA,3,!1,!1,!1,"Humming Pokémon",n.DRAGON,n.FLYING,1.1,20.6,O.NATURAL_CURE,O.NONE,O.CLOUD_NINE,490,75,70,90,70,105,80,45,50,172,h.ERRATIC,50,!1,!0,new K("Normal","",n.DRAGON,n.FLYING,1.1,20.6,O.NATURAL_CURE,O.NONE,O.CLOUD_NINE,490,75,70,90,70,105,80,45,50,172,!1,null,!0),new K("Mega",Ee.MEGA,n.DRAGON,n.FAIRY,1.5,20.6,O.PIXILATE,O.NONE,O.PIXILATE,590,75,110,110,110,105,80,45,50,172)),new u(e.ZANGOOSE,3,!1,!1,!1,"Cat Ferret Pokémon",n.NORMAL,null,1.3,40.3,O.IMMUNITY,O.NONE,O.TOXIC_BOOST,458,73,115,60,60,60,90,90,70,160,h.ERRATIC,50,!1),new u(e.SEVIPER,3,!1,!1,!1,"Fang Snake Pokémon",n.POISON,null,2.7,52.5,O.SHED_SKIN,O.NONE,O.INFILTRATOR,458,73,100,60,100,60,65,90,70,160,h.FLUCTUATING,50,!1),new u(e.LUNATONE,3,!1,!1,!1,"Meteorite Pokémon",n.ROCK,n.PSYCHIC,1,168,O.LEVITATE,O.NONE,O.NONE,460,90,55,65,95,85,70,45,50,161,h.FAST,null,!1),new u(e.SOLROCK,3,!1,!1,!1,"Meteorite Pokémon",n.ROCK,n.PSYCHIC,1.2,154,O.LEVITATE,O.NONE,O.NONE,460,90,95,85,55,65,70,45,50,161,h.FAST,null,!1),new u(e.BARBOACH,3,!1,!1,!1,"Whiskers Pokémon",n.WATER,n.GROUND,.4,1.9,O.OBLIVIOUS,O.ANTICIPATION,O.HYDRATION,288,50,48,43,46,41,60,190,50,58,h.MEDIUM_FAST,50,!1),new u(e.WHISCASH,3,!1,!1,!1,"Whiskers Pokémon",n.WATER,n.GROUND,.9,23.6,O.OBLIVIOUS,O.ANTICIPATION,O.HYDRATION,468,110,78,73,76,71,60,75,50,164,h.MEDIUM_FAST,50,!1),new u(e.CORPHISH,3,!1,!1,!1,"Ruffian Pokémon",n.WATER,null,.6,11.5,O.HYPER_CUTTER,O.SHELL_ARMOR,O.ADAPTABILITY,308,43,80,65,50,35,35,205,50,62,h.FLUCTUATING,50,!1),new u(e.CRAWDAUNT,3,!1,!1,!1,"Rogue Pokémon",n.WATER,n.DARK,1.1,32.8,O.HYPER_CUTTER,O.SHELL_ARMOR,O.ADAPTABILITY,468,63,120,85,90,55,55,155,50,164,h.FLUCTUATING,50,!1),new u(e.BALTOY,3,!1,!1,!1,"Clay Doll Pokémon",n.GROUND,n.PSYCHIC,.5,21.5,O.LEVITATE,O.NONE,O.NONE,300,40,40,55,40,70,55,255,50,60,h.MEDIUM_FAST,null,!1),new u(e.CLAYDOL,3,!1,!1,!1,"Clay Doll Pokémon",n.GROUND,n.PSYCHIC,1.5,108,O.LEVITATE,O.NONE,O.NONE,500,60,70,105,70,120,75,90,50,175,h.MEDIUM_FAST,null,!1),new u(e.LILEEP,3,!1,!1,!1,"Sea Lily Pokémon",n.ROCK,n.GRASS,1,23.8,O.SUCTION_CUPS,O.NONE,O.STORM_DRAIN,355,66,41,77,61,87,23,45,50,71,h.ERRATIC,87.5,!1),new u(e.CRADILY,3,!1,!1,!1,"Barnacle Pokémon",n.ROCK,n.GRASS,1.5,60.4,O.SUCTION_CUPS,O.NONE,O.STORM_DRAIN,495,86,81,97,81,107,43,45,50,173,h.ERRATIC,87.5,!1),new u(e.ANORITH,3,!1,!1,!1,"Old Shrimp Pokémon",n.ROCK,n.BUG,.7,12.5,O.BATTLE_ARMOR,O.NONE,O.SWIFT_SWIM,355,45,95,50,40,50,75,45,50,71,h.ERRATIC,87.5,!1),new u(e.ARMALDO,3,!1,!1,!1,"Plate Pokémon",n.ROCK,n.BUG,1.5,68.2,O.BATTLE_ARMOR,O.NONE,O.SWIFT_SWIM,495,75,125,100,70,80,45,45,50,173,h.ERRATIC,87.5,!1),new u(e.FEEBAS,3,!1,!1,!1,"Fish Pokémon",n.WATER,null,.6,7.4,O.SWIFT_SWIM,O.OBLIVIOUS,O.ADAPTABILITY,200,20,15,20,10,55,80,255,50,40,h.ERRATIC,50,!1),new u(e.MILOTIC,3,!1,!1,!1,"Tender Pokémon",n.WATER,null,6.2,162,O.MARVEL_SCALE,O.COMPETITIVE,O.CUTE_CHARM,540,95,60,79,100,125,81,60,50,189,h.ERRATIC,50,!0),new u(e.CASTFORM,3,!1,!1,!1,"Weather Pokémon",n.NORMAL,null,.3,.8,O.FORECAST,O.NONE,O.NONE,420,70,70,70,70,70,70,45,70,147,h.MEDIUM_FAST,50,!1,!0,new K("Normal Form","",n.NORMAL,null,.3,.8,O.FORECAST,O.NONE,O.NONE,420,70,70,70,70,70,70,45,70,147,!1,null,!0),new K("Sunny Form","sunny",n.FIRE,null,.3,.8,O.FORECAST,O.NONE,O.NONE,420,70,70,70,70,70,70,45,70,147),new K("Rainy Form","rainy",n.WATER,null,.3,.8,O.FORECAST,O.NONE,O.NONE,420,70,70,70,70,70,70,45,70,147),new K("Snowy Form","snowy",n.ICE,null,.3,.8,O.FORECAST,O.NONE,O.NONE,420,70,70,70,70,70,70,45,70,147)),new u(e.KECLEON,3,!1,!1,!1,"Color Swap Pokémon",n.NORMAL,null,1,22,O.COLOR_CHANGE,O.NONE,O.PROTEAN,440,60,90,70,60,120,40,200,70,154,h.MEDIUM_SLOW,50,!1),new u(e.SHUPPET,3,!1,!1,!1,"Puppet Pokémon",n.GHOST,null,.6,2.3,O.INSOMNIA,O.FRISK,O.CURSED_BODY,295,44,75,35,63,33,45,225,35,59,h.FAST,50,!1),new u(e.BANETTE,3,!1,!1,!1,"Marionette Pokémon",n.GHOST,null,1.1,12.5,O.INSOMNIA,O.FRISK,O.CURSED_BODY,455,64,115,65,83,63,65,45,35,159,h.FAST,50,!1,!0,new K("Normal","",n.GHOST,null,1.1,12.5,O.INSOMNIA,O.FRISK,O.CURSED_BODY,455,64,115,65,83,63,65,45,35,159,!1,null,!0),new K("Mega",Ee.MEGA,n.GHOST,null,1.2,13,O.PRANKSTER,O.PRANKSTER,O.PRANKSTER,555,64,165,75,93,83,75,45,35,159)),new u(e.DUSKULL,3,!1,!1,!1,"Requiem Pokémon",n.GHOST,null,.8,15,O.LEVITATE,O.NONE,O.FRISK,295,20,40,90,30,90,25,190,35,59,h.FAST,50,!1),new u(e.DUSCLOPS,3,!1,!1,!1,"Beckon Pokémon",n.GHOST,null,1.6,30.6,O.PRESSURE,O.NONE,O.FRISK,455,40,70,130,60,130,25,90,35,159,h.FAST,50,!1),new u(e.TROPIUS,3,!1,!1,!1,"Fruit Pokémon",n.GRASS,n.FLYING,2,100,O.CHLOROPHYLL,O.SOLAR_POWER,O.HARVEST,460,99,68,83,72,87,51,200,70,161,h.SLOW,50,!1),new u(e.CHIMECHO,3,!1,!1,!1,"Wind Chime Pokémon",n.PSYCHIC,null,.6,1,O.LEVITATE,O.NONE,O.NONE,455,75,50,80,95,90,65,45,70,159,h.FAST,50,!1),new u(e.ABSOL,3,!1,!1,!1,"Disaster Pokémon",n.DARK,null,1.2,47,O.PRESSURE,O.SUPER_LUCK,O.JUSTIFIED,465,65,130,60,75,60,75,30,35,163,h.MEDIUM_SLOW,50,!1,!0,new K("Normal","",n.DARK,null,1.2,47,O.PRESSURE,O.SUPER_LUCK,O.JUSTIFIED,465,65,130,60,75,60,75,30,35,163,!1,null,!0),new K("Mega",Ee.MEGA,n.DARK,null,1.2,49,O.MAGIC_BOUNCE,O.MAGIC_BOUNCE,O.MAGIC_BOUNCE,565,65,150,60,115,60,115,30,35,163)),new u(e.WYNAUT,3,!1,!1,!1,"Bright Pokémon",n.PSYCHIC,null,.6,14,O.SHADOW_TAG,O.NONE,O.TELEPATHY,260,95,23,48,23,48,23,125,50,52,h.MEDIUM_FAST,50,!1),new u(e.SNORUNT,3,!1,!1,!1,"Snow Hat Pokémon",n.ICE,null,.7,16.8,O.INNER_FOCUS,O.ICE_BODY,O.MOODY,300,50,50,50,50,50,50,190,50,60,h.MEDIUM_FAST,50,!1),new u(e.GLALIE,3,!1,!1,!1,"Face Pokémon",n.ICE,null,1.5,256.5,O.INNER_FOCUS,O.ICE_BODY,O.MOODY,480,80,80,80,80,80,80,75,50,168,h.MEDIUM_FAST,50,!1,!0,new K("Normal","",n.ICE,null,1.5,256.5,O.INNER_FOCUS,O.ICE_BODY,O.MOODY,480,80,80,80,80,80,80,75,50,168,!1,null,!0),new K("Mega",Ee.MEGA,n.ICE,null,2.1,350.2,O.REFRIGERATE,O.REFRIGERATE,O.REFRIGERATE,580,80,120,80,120,80,100,75,50,168)),new u(e.SPHEAL,3,!1,!1,!1,"Clap Pokémon",n.ICE,n.WATER,.8,39.5,O.THICK_FAT,O.ICE_BODY,O.OBLIVIOUS,290,70,40,50,55,50,25,255,50,58,h.MEDIUM_SLOW,50,!1),new u(e.SEALEO,3,!1,!1,!1,"Ball Roll Pokémon",n.ICE,n.WATER,1.1,87.6,O.THICK_FAT,O.ICE_BODY,O.OBLIVIOUS,410,90,60,70,75,70,45,120,50,144,h.MEDIUM_SLOW,50,!1),new u(e.WALREIN,3,!1,!1,!1,"Ice Break Pokémon",n.ICE,n.WATER,1.4,150.6,O.THICK_FAT,O.ICE_BODY,O.OBLIVIOUS,530,110,80,90,95,90,65,45,50,265,h.MEDIUM_SLOW,50,!1),new u(e.CLAMPERL,3,!1,!1,!1,"Bivalve Pokémon",n.WATER,null,.4,52.5,O.SHELL_ARMOR,O.NONE,O.RATTLED,345,35,64,85,74,55,32,255,70,69,h.ERRATIC,50,!1),new u(e.HUNTAIL,3,!1,!1,!1,"Deep Sea Pokémon",n.WATER,null,1.7,27,O.SWIFT_SWIM,O.NONE,O.WATER_VEIL,485,55,104,105,94,75,52,60,70,170,h.ERRATIC,50,!1),new u(e.GOREBYSS,3,!1,!1,!1,"South Sea Pokémon",n.WATER,null,1.8,22.6,O.SWIFT_SWIM,O.NONE,O.HYDRATION,485,55,84,105,114,75,52,60,70,170,h.ERRATIC,50,!1),new u(e.RELICANTH,3,!1,!1,!1,"Longevity Pokémon",n.WATER,n.ROCK,1,23.4,O.SWIFT_SWIM,O.ROCK_HEAD,O.STURDY,485,100,90,130,45,65,55,25,50,170,h.SLOW,87.5,!0),new u(e.LUVDISC,3,!1,!1,!1,"Rendezvous Pokémon",n.WATER,null,.6,8.7,O.SWIFT_SWIM,O.NONE,O.HYDRATION,330,43,30,55,40,65,97,225,70,116,h.FAST,25,!1),new u(e.BAGON,3,!1,!1,!1,"Rock Head Pokémon",n.DRAGON,null,.6,42.1,O.ROCK_HEAD,O.NONE,O.SHEER_FORCE,300,45,75,60,40,30,50,45,35,60,h.SLOW,50,!1),new u(e.SHELGON,3,!1,!1,!1,"Endurance Pokémon",n.DRAGON,null,1.1,110.5,O.ROCK_HEAD,O.NONE,O.OVERCOAT,420,65,95,100,60,50,50,45,35,147,h.SLOW,50,!1),new u(e.SALAMENCE,3,!1,!1,!1,"Dragon Pokémon",n.DRAGON,n.FLYING,1.5,102.6,O.INTIMIDATE,O.NONE,O.MOXIE,600,95,135,80,110,80,100,45,35,300,h.SLOW,50,!1,!0,new K("Normal","",n.DRAGON,n.FLYING,1.5,102.6,O.INTIMIDATE,O.NONE,O.MOXIE,600,95,135,80,110,80,100,45,35,300,!1,null,!0),new K("Mega",Ee.MEGA,n.DRAGON,n.FLYING,1.8,112.6,O.AERILATE,O.NONE,O.AERILATE,700,95,145,130,120,90,120,45,35,300)),new u(e.BELDUM,3,!1,!1,!1,"Iron Ball Pokémon",n.STEEL,n.PSYCHIC,.6,95.2,O.CLEAR_BODY,O.NONE,O.LIGHT_METAL,300,40,55,80,35,60,30,45,35,60,h.SLOW,null,!1),new u(e.METANG,3,!1,!1,!1,"Iron Claw Pokémon",n.STEEL,n.PSYCHIC,1.2,202.5,O.CLEAR_BODY,O.NONE,O.LIGHT_METAL,420,60,75,100,55,80,50,25,35,147,h.SLOW,null,!1),new u(e.METAGROSS,3,!1,!1,!1,"Iron Leg Pokémon",n.STEEL,n.PSYCHIC,1.6,550,O.CLEAR_BODY,O.NONE,O.LIGHT_METAL,600,80,135,130,95,90,70,10,35,300,h.SLOW,null,!1,!0,new K("Normal","",n.STEEL,n.PSYCHIC,1.6,550,O.CLEAR_BODY,O.NONE,O.LIGHT_METAL,600,80,135,130,95,90,70,3,35,300,!1,null,!0),new K("Mega",Ee.MEGA,n.STEEL,n.PSYCHIC,2.5,942.9,O.TOUGH_CLAWS,O.NONE,O.TOUGH_CLAWS,700,80,145,150,105,110,110,3,35,300)),new u(e.REGIROCK,3,!0,!1,!1,"Rock Peak Pokémon",n.ROCK,null,1.7,230,O.CLEAR_BODY,O.NONE,O.STURDY,580,80,100,200,50,100,50,3,35,290,h.SLOW,null,!1),new u(e.REGICE,3,!0,!1,!1,"Iceberg Pokémon",n.ICE,null,1.8,175,O.CLEAR_BODY,O.NONE,O.ICE_BODY,580,80,50,100,100,200,50,3,35,290,h.SLOW,null,!1),new u(e.REGISTEEL,3,!0,!1,!1,"Iron Pokémon",n.STEEL,null,1.9,205,O.CLEAR_BODY,O.NONE,O.LIGHT_METAL,580,80,75,150,75,150,50,3,35,290,h.SLOW,null,!1),new u(e.LATIAS,3,!0,!1,!1,"Eon Pokémon",n.DRAGON,n.PSYCHIC,1.4,40,O.LEVITATE,O.NONE,O.NONE,600,80,80,90,110,130,110,3,90,300,h.SLOW,0,!1,!0,new K("Normal","",n.DRAGON,n.PSYCHIC,1.4,40,O.LEVITATE,O.NONE,O.NONE,600,80,80,90,110,130,110,3,90,300,!1,null,!0),new K("Mega",Ee.MEGA,n.DRAGON,n.PSYCHIC,1.8,52,O.LEVITATE,O.NONE,O.NONE,700,80,100,120,140,150,110,3,90,300)),new u(e.LATIOS,3,!0,!1,!1,"Eon Pokémon",n.DRAGON,n.PSYCHIC,2,60,O.LEVITATE,O.NONE,O.NONE,600,80,90,80,130,110,110,3,90,300,h.SLOW,100,!1,!0,new K("Normal","",n.DRAGON,n.PSYCHIC,2,60,O.LEVITATE,O.NONE,O.NONE,600,80,90,80,130,110,110,3,90,300,!1,null,!0),new K("Mega",Ee.MEGA,n.DRAGON,n.PSYCHIC,2.3,70,O.LEVITATE,O.NONE,O.NONE,700,80,130,100,160,120,110,3,90,300)),new u(e.KYOGRE,3,!1,!0,!1,"Sea Basin Pokémon",n.WATER,null,4.5,352,O.DRIZZLE,O.NONE,O.NONE,670,100,100,90,150,140,90,3,0,335,h.SLOW,null,!1,!0,new K("Normal","",n.WATER,null,4.5,352,O.DRIZZLE,O.NONE,O.NONE,670,100,100,90,150,140,90,3,0,335,!1,null,!0),new K("Primal","primal",n.WATER,null,9.8,430,O.PRIMORDIAL_SEA,O.NONE,O.NONE,770,100,150,90,180,160,90,3,0,335)),new u(e.GROUDON,3,!1,!0,!1,"Continent Pokémon",n.GROUND,null,3.5,950,O.DROUGHT,O.NONE,O.NONE,670,100,150,140,100,90,90,3,0,335,h.SLOW,null,!1,!0,new K("Normal","",n.GROUND,null,3.5,950,O.DROUGHT,O.NONE,O.NONE,670,100,150,140,100,90,90,3,0,335,!1,null,!0),new K("Primal","primal",n.GROUND,n.FIRE,5,999.7,O.DESOLATE_LAND,O.NONE,O.NONE,770,100,180,160,150,90,90,3,0,335)),new u(e.RAYQUAZA,3,!1,!0,!1,"Sky High Pokémon",n.DRAGON,n.FLYING,7,206.5,O.AIR_LOCK,O.NONE,O.NONE,680,105,150,90,150,90,95,45,0,340,h.SLOW,null,!1,!0,new K("Normal","",n.DRAGON,n.FLYING,7,206.5,O.AIR_LOCK,O.NONE,O.NONE,680,105,150,90,150,90,95,45,0,340,!1,null,!0),new K("Mega",Ee.MEGA,n.DRAGON,n.FLYING,10.8,392,O.DELTA_STREAM,O.NONE,O.NONE,780,105,180,100,180,100,115,45,0,340)),new u(e.JIRACHI,3,!1,!1,!0,"Wish Pokémon",n.STEEL,n.PSYCHIC,.3,1.1,O.SERENE_GRACE,O.NONE,O.NONE,600,100,100,100,100,100,100,3,100,300,h.SLOW,null,!1),new u(e.DEOXYS,3,!1,!1,!0,"DNA Pokémon",n.PSYCHIC,null,1.7,60.8,O.PRESSURE,O.NONE,O.NONE,600,50,150,50,150,50,150,3,0,270,h.SLOW,null,!1,!0,new K("Normal Forme","normal",n.PSYCHIC,null,1.7,60.8,O.PRESSURE,O.NONE,O.NONE,600,50,150,50,150,50,150,3,0,270,!1,"",!0),new K("Attack Forme","attack",n.PSYCHIC,null,1.7,60.8,O.PRESSURE,O.NONE,O.NONE,600,50,180,20,180,20,150,3,0,270),new K("Defense Forme","defense",n.PSYCHIC,null,1.7,60.8,O.PRESSURE,O.NONE,O.NONE,600,50,70,160,70,160,90,3,0,270),new K("Speed Forme","speed",n.PSYCHIC,null,1.7,60.8,O.PRESSURE,O.NONE,O.NONE,600,50,95,90,95,90,180,3,0,270)),new u(e.TURTWIG,4,!1,!1,!1,"Tiny Leaf Pokémon",n.GRASS,null,.4,10.2,O.OVERGROW,O.NONE,O.SHELL_ARMOR,318,55,68,64,45,55,31,45,70,64,h.MEDIUM_SLOW,87.5,!1),new u(e.GROTLE,4,!1,!1,!1,"Grove Pokémon",n.GRASS,null,1.1,97,O.OVERGROW,O.NONE,O.SHELL_ARMOR,405,75,89,85,55,65,36,45,70,142,h.MEDIUM_SLOW,87.5,!1),new u(e.TORTERRA,4,!1,!1,!1,"Continent Pokémon",n.GRASS,n.GROUND,2.2,310,O.OVERGROW,O.NONE,O.SHELL_ARMOR,525,95,109,105,75,85,56,45,70,236,h.MEDIUM_SLOW,87.5,!1),new u(e.CHIMCHAR,4,!1,!1,!1,"Chimp Pokémon",n.FIRE,null,.5,6.2,O.BLAZE,O.NONE,O.IRON_FIST,309,44,58,44,58,44,61,45,70,62,h.MEDIUM_SLOW,87.5,!1),new u(e.MONFERNO,4,!1,!1,!1,"Playful Pokémon",n.FIRE,n.FIGHTING,.9,22,O.BLAZE,O.NONE,O.IRON_FIST,405,64,78,52,78,52,81,45,70,142,h.MEDIUM_SLOW,87.5,!1),new u(e.INFERNAPE,4,!1,!1,!1,"Flame Pokémon",n.FIRE,n.FIGHTING,1.2,55,O.BLAZE,O.NONE,O.IRON_FIST,534,76,104,71,104,71,108,45,70,240,h.MEDIUM_SLOW,87.5,!1),new u(e.PIPLUP,4,!1,!1,!1,"Penguin Pokémon",n.WATER,null,.4,5.2,O.TORRENT,O.NONE,O.COMPETITIVE,314,53,51,53,61,56,40,45,70,63,h.MEDIUM_SLOW,87.5,!1),new u(e.PRINPLUP,4,!1,!1,!1,"Penguin Pokémon",n.WATER,null,.8,23,O.TORRENT,O.NONE,O.COMPETITIVE,405,64,66,68,81,76,50,45,70,142,h.MEDIUM_SLOW,87.5,!1),new u(e.EMPOLEON,4,!1,!1,!1,"Emperor Pokémon",n.WATER,n.STEEL,1.7,84.5,O.TORRENT,O.NONE,O.COMPETITIVE,530,84,86,88,111,101,60,45,70,239,h.MEDIUM_SLOW,87.5,!1),new u(e.STARLY,4,!1,!1,!1,"Starling Pokémon",n.NORMAL,n.FLYING,.3,2,O.KEEN_EYE,O.NONE,O.RECKLESS,245,40,55,30,30,30,60,255,70,49,h.MEDIUM_SLOW,50,!0),new u(e.STARAVIA,4,!1,!1,!1,"Starling Pokémon",n.NORMAL,n.FLYING,.6,15.5,O.INTIMIDATE,O.NONE,O.RECKLESS,340,55,75,50,40,40,80,120,70,119,h.MEDIUM_SLOW,50,!0),new u(e.STARAPTOR,4,!1,!1,!1,"Predator Pokémon",n.NORMAL,n.FLYING,1.2,24.9,O.INTIMIDATE,O.NONE,O.RECKLESS,485,85,120,70,50,60,100,45,70,218,h.MEDIUM_SLOW,50,!0),new u(e.BIDOOF,4,!1,!1,!1,"Plump Mouse Pokémon",n.NORMAL,null,.5,20,O.SIMPLE,O.UNAWARE,O.MOODY,250,59,45,40,35,40,31,255,70,50,h.MEDIUM_FAST,50,!0),new u(e.BIBAREL,4,!1,!1,!1,"Beaver Pokémon",n.NORMAL,n.WATER,1,31.5,O.SIMPLE,O.UNAWARE,O.MOODY,410,79,85,60,55,60,71,127,70,144,h.MEDIUM_FAST,50,!0),new u(e.KRICKETOT,4,!1,!1,!1,"Cricket Pokémon",n.BUG,null,.3,2.2,O.SHED_SKIN,O.NONE,O.RUN_AWAY,194,37,25,41,25,41,25,255,70,39,h.MEDIUM_SLOW,50,!0),new u(e.KRICKETUNE,4,!1,!1,!1,"Cricket Pokémon",n.BUG,null,1,25.5,O.SWARM,O.NONE,O.TECHNICIAN,384,77,85,51,55,51,65,45,70,134,h.MEDIUM_SLOW,50,!0),new u(e.SHINX,4,!1,!1,!1,"Flash Pokémon",n.ELECTRIC,null,.5,9.5,O.RIVALRY,O.INTIMIDATE,O.GUTS,263,45,65,34,40,34,45,235,50,53,h.MEDIUM_SLOW,50,!0),new u(e.LUXIO,4,!1,!1,!1,"Spark Pokémon",n.ELECTRIC,null,.9,30.5,O.RIVALRY,O.INTIMIDATE,O.GUTS,363,60,85,49,60,49,60,120,100,127,h.MEDIUM_SLOW,50,!0),new u(e.LUXRAY,4,!1,!1,!1,"Gleam Eyes Pokémon",n.ELECTRIC,null,1.4,42,O.RIVALRY,O.INTIMIDATE,O.GUTS,523,80,120,79,95,79,70,45,50,262,h.MEDIUM_SLOW,50,!0),new u(e.BUDEW,4,!1,!1,!1,"Bud Pokémon",n.GRASS,n.POISON,.2,1.2,O.NATURAL_CURE,O.POISON_POINT,O.LEAF_GUARD,280,40,30,35,50,70,55,255,50,56,h.MEDIUM_SLOW,50,!1),new u(e.ROSERADE,4,!1,!1,!1,"Bouquet Pokémon",n.GRASS,n.POISON,.9,14.5,O.NATURAL_CURE,O.POISON_POINT,O.TECHNICIAN,515,60,70,65,125,105,90,75,50,258,h.MEDIUM_SLOW,50,!0),new u(e.CRANIDOS,4,!1,!1,!1,"Head Butt Pokémon",n.ROCK,null,.9,31.5,O.MOLD_BREAKER,O.NONE,O.SHEER_FORCE,350,67,125,40,30,30,58,45,70,70,h.ERRATIC,87.5,!1),new u(e.RAMPARDOS,4,!1,!1,!1,"Head Butt Pokémon",n.ROCK,null,1.6,102.5,O.MOLD_BREAKER,O.NONE,O.SHEER_FORCE,495,97,165,60,65,50,58,45,70,173,h.ERRATIC,87.5,!1),new u(e.SHIELDON,4,!1,!1,!1,"Shield Pokémon",n.ROCK,n.STEEL,.5,57,O.STURDY,O.NONE,O.SOUNDPROOF,350,30,42,118,42,88,30,45,70,70,h.ERRATIC,87.5,!1),new u(e.BASTIODON,4,!1,!1,!1,"Shield Pokémon",n.ROCK,n.STEEL,1.3,149.5,O.STURDY,O.NONE,O.SOUNDPROOF,495,60,52,168,47,138,30,45,70,173,h.ERRATIC,87.5,!1),new u(e.BURMY,4,!1,!1,!1,"Bagworm Pokémon",n.BUG,null,.2,3.4,O.SHED_SKIN,O.NONE,O.OVERCOAT,224,40,29,45,29,45,36,120,70,45,h.MEDIUM_FAST,50,!1,!0,new K("Plant Cloak","plant",n.BUG,null,.2,3.4,O.SHED_SKIN,O.NONE,O.OVERCOAT,224,40,29,45,29,45,36,120,70,45,!1,null,!0),new K("Sandy Cloak","sandy",n.BUG,null,.2,3.4,O.SHED_SKIN,O.NONE,O.OVERCOAT,224,40,29,45,29,45,36,120,70,45,!1,null,!0),new K("Trash Cloak","trash",n.BUG,null,.2,3.4,O.SHED_SKIN,O.NONE,O.OVERCOAT,224,40,29,45,29,45,36,120,70,45,!1,null,!0)),new u(e.WORMADAM,4,!1,!1,!1,"Bagworm Pokémon",n.BUG,n.GRASS,.5,6.5,O.ANTICIPATION,O.NONE,O.OVERCOAT,424,60,59,85,79,105,36,45,70,148,h.MEDIUM_FAST,0,!1,!1,new K("Plant Cloak","plant",n.BUG,n.GRASS,.5,6.5,O.ANTICIPATION,O.NONE,O.OVERCOAT,424,60,59,85,79,105,36,45,70,148,!1,null,!0),new K("Sandy Cloak","sandy",n.BUG,n.GROUND,.5,6.5,O.ANTICIPATION,O.NONE,O.OVERCOAT,424,60,79,105,59,85,36,45,70,148,!1,null,!0),new K("Trash Cloak","trash",n.BUG,n.STEEL,.5,6.5,O.ANTICIPATION,O.NONE,O.OVERCOAT,424,60,69,95,69,95,36,45,70,148,!1,null,!0)),new u(e.MOTHIM,4,!1,!1,!1,"Moth Pokémon",n.BUG,n.FLYING,.9,23.3,O.SWARM,O.NONE,O.TINTED_LENS,424,70,94,50,94,50,66,45,70,148,h.MEDIUM_FAST,100,!1),new u(e.COMBEE,4,!1,!1,!1,"Tiny Bee Pokémon",n.BUG,n.FLYING,.3,5.5,O.HONEY_GATHER,O.NONE,O.HUSTLE,244,30,30,42,30,42,70,120,50,49,h.MEDIUM_SLOW,87.5,!0),new u(e.VESPIQUEN,4,!1,!1,!1,"Beehive Pokémon",n.BUG,n.FLYING,1.2,38.5,O.PRESSURE,O.NONE,O.UNNERVE,474,70,80,102,80,102,40,45,50,166,h.MEDIUM_SLOW,0,!1),new u(e.PACHIRISU,4,!1,!1,!1,"EleSquirrel Pokémon",n.ELECTRIC,null,.4,3.9,O.RUN_AWAY,O.PICKUP,O.VOLT_ABSORB,405,60,45,70,45,90,95,200,100,142,h.MEDIUM_FAST,50,!0),new u(e.BUIZEL,4,!1,!1,!1,"Sea Weasel Pokémon",n.WATER,null,.7,29.5,O.SWIFT_SWIM,O.NONE,O.WATER_VEIL,330,55,65,35,60,30,85,190,70,66,h.MEDIUM_FAST,50,!0),new u(e.FLOATZEL,4,!1,!1,!1,"Sea Weasel Pokémon",n.WATER,null,1.1,33.5,O.SWIFT_SWIM,O.NONE,O.WATER_VEIL,495,85,105,55,85,50,115,75,70,173,h.MEDIUM_FAST,50,!0),new u(e.CHERUBI,4,!1,!1,!1,"Cherry Pokémon",n.GRASS,null,.4,3.3,O.CHLOROPHYLL,O.NONE,O.NONE,275,45,35,45,62,53,35,190,50,55,h.MEDIUM_FAST,50,!1),new u(e.CHERRIM,4,!1,!1,!1,"Blossom Pokémon",n.GRASS,null,.5,9.3,O.FLOWER_GIFT,O.NONE,O.NONE,450,70,60,70,87,78,85,75,50,158,h.MEDIUM_FAST,50,!1,!0,new K("Overcast Form","overcast",n.GRASS,null,.5,9.3,O.FLOWER_GIFT,O.NONE,O.NONE,450,70,60,70,87,78,85,75,50,158,!1,null,!0),new K("Sunshine Form","sunshine",n.GRASS,null,.5,9.3,O.FLOWER_GIFT,O.NONE,O.NONE,450,70,60,70,87,78,85,75,50,158)),new u(e.SHELLOS,4,!1,!1,!1,"Sea Slug Pokémon",n.WATER,null,.3,6.3,O.STICKY_HOLD,O.STORM_DRAIN,O.SAND_FORCE,325,76,48,48,57,62,34,190,50,65,h.MEDIUM_FAST,50,!1,!1,new K("East Sea","east",n.WATER,null,.3,6.3,O.STICKY_HOLD,O.STORM_DRAIN,O.SAND_FORCE,325,76,48,48,57,62,34,190,50,65,!1,null,!0),new K("West Sea","west",n.WATER,null,.3,6.3,O.STICKY_HOLD,O.STORM_DRAIN,O.SAND_FORCE,325,76,48,48,57,62,34,190,50,65,!1,null,!0)),new u(e.GASTRODON,4,!1,!1,!1,"Sea Slug Pokémon",n.WATER,n.GROUND,.9,29.9,O.STICKY_HOLD,O.STORM_DRAIN,O.SAND_FORCE,475,111,83,68,92,82,39,75,50,166,h.MEDIUM_FAST,50,!1,!1,new K("East Sea","east",n.WATER,n.GROUND,.9,29.9,O.STICKY_HOLD,O.STORM_DRAIN,O.SAND_FORCE,475,111,83,68,92,82,39,75,50,166,!1,null,!0),new K("West Sea","west",n.WATER,n.GROUND,.9,29.9,O.STICKY_HOLD,O.STORM_DRAIN,O.SAND_FORCE,475,111,83,68,92,82,39,75,50,166,!1,null,!0)),new u(e.AMBIPOM,4,!1,!1,!1,"Long Tail Pokémon",n.NORMAL,null,1.2,20.3,O.TECHNICIAN,O.PICKUP,O.SKILL_LINK,482,75,100,66,60,66,115,45,100,169,h.FAST,50,!0),new u(e.DRIFLOON,4,!1,!1,!1,"Balloon Pokémon",n.GHOST,n.FLYING,.4,1.2,O.AFTERMATH,O.UNBURDEN,O.FLARE_BOOST,348,90,50,34,60,44,70,125,50,70,h.FLUCTUATING,50,!1),new u(e.DRIFBLIM,4,!1,!1,!1,"Blimp Pokémon",n.GHOST,n.FLYING,1.2,15,O.AFTERMATH,O.UNBURDEN,O.FLARE_BOOST,498,150,80,44,90,54,80,60,50,174,h.FLUCTUATING,50,!1),new u(e.BUNEARY,4,!1,!1,!1,"Rabbit Pokémon",n.NORMAL,null,.4,5.5,O.RUN_AWAY,O.KLUTZ,O.LIMBER,350,55,66,44,44,56,85,190,0,70,h.MEDIUM_FAST,50,!1),new u(e.LOPUNNY,4,!1,!1,!1,"Rabbit Pokémon",n.NORMAL,null,1.2,33.3,O.CUTE_CHARM,O.KLUTZ,O.LIMBER,480,65,76,84,54,96,105,60,140,168,h.MEDIUM_FAST,50,!1,!0,new K("Normal","",n.NORMAL,null,1.2,33.3,O.CUTE_CHARM,O.KLUTZ,O.LIMBER,480,65,76,84,54,96,105,60,140,168,!1,null,!0),new K("Mega",Ee.MEGA,n.NORMAL,n.FIGHTING,1.3,28.3,O.SCRAPPY,O.SCRAPPY,O.SCRAPPY,580,65,136,94,54,96,135,60,140,168)),new u(e.MISMAGIUS,4,!1,!1,!1,"Magical Pokémon",n.GHOST,null,.9,4.4,O.LEVITATE,O.NONE,O.NONE,495,60,60,60,105,105,105,45,35,173,h.FAST,50,!1),new u(e.HONCHKROW,4,!1,!1,!1,"Big Boss Pokémon",n.DARK,n.FLYING,.9,27.3,O.INSOMNIA,O.SUPER_LUCK,O.MOXIE,505,100,125,52,105,52,71,30,35,177,h.MEDIUM_SLOW,50,!1),new u(e.GLAMEOW,4,!1,!1,!1,"Catty Pokémon",n.NORMAL,null,.5,3.9,O.LIMBER,O.OWN_TEMPO,O.KEEN_EYE,310,49,55,42,42,37,85,190,70,62,h.FAST,25,!1),new u(e.PURUGLY,4,!1,!1,!1,"Tiger Cat Pokémon",n.NORMAL,null,1,43.8,O.THICK_FAT,O.OWN_TEMPO,O.DEFIANT,452,71,82,64,64,59,112,75,70,158,h.FAST,25,!1),new u(e.CHINGLING,4,!1,!1,!1,"Bell Pokémon",n.PSYCHIC,null,.2,.6,O.LEVITATE,O.NONE,O.NONE,285,45,30,50,65,50,45,120,70,57,h.FAST,50,!1),new u(e.STUNKY,4,!1,!1,!1,"Skunk Pokémon",n.POISON,n.DARK,.4,19.2,O.STENCH,O.AFTERMATH,O.KEEN_EYE,329,63,63,47,41,41,74,225,50,66,h.MEDIUM_FAST,50,!1),new u(e.SKUNTANK,4,!1,!1,!1,"Skunk Pokémon",n.POISON,n.DARK,1,38,O.STENCH,O.AFTERMATH,O.KEEN_EYE,479,103,93,67,71,61,84,60,50,168,h.MEDIUM_FAST,50,!1),new u(e.BRONZOR,4,!1,!1,!1,"Bronze Pokémon",n.STEEL,n.PSYCHIC,.5,60.5,O.LEVITATE,O.HEATPROOF,O.HEAVY_METAL,300,57,24,86,24,86,23,255,50,60,h.MEDIUM_FAST,null,!1),new u(e.BRONZONG,4,!1,!1,!1,"Bronze Bell Pokémon",n.STEEL,n.PSYCHIC,1.3,187,O.LEVITATE,O.HEATPROOF,O.HEAVY_METAL,500,67,89,116,79,116,33,90,50,175,h.MEDIUM_FAST,null,!1),new u(e.BONSLY,4,!1,!1,!1,"Bonsai Pokémon",n.ROCK,null,.5,15,O.STURDY,O.ROCK_HEAD,O.RATTLED,290,50,80,95,10,45,10,255,50,58,h.MEDIUM_FAST,50,!1),new u(e.MIME_JR,4,!1,!1,!1,"Mime Pokémon",n.PSYCHIC,n.FAIRY,.6,13,O.SOUNDPROOF,O.FILTER,O.TECHNICIAN,310,20,25,45,70,90,60,145,50,62,h.MEDIUM_FAST,50,!1),new u(e.HAPPINY,4,!1,!1,!1,"Playhouse Pokémon",n.NORMAL,null,.6,24.4,O.NATURAL_CURE,O.SERENE_GRACE,O.FRIEND_GUARD,220,100,5,5,15,65,30,130,140,110,h.FAST,0,!1),new u(e.CHATOT,4,!1,!1,!1,"Music Note Pokémon",n.NORMAL,n.FLYING,.5,1.9,O.KEEN_EYE,O.TANGLED_FEET,O.BIG_PECKS,411,76,65,45,92,42,91,30,35,144,h.MEDIUM_SLOW,50,!1),new u(e.SPIRITOMB,4,!1,!1,!1,"Forbidden Pokémon",n.GHOST,n.DARK,1,108,O.PRESSURE,O.NONE,O.INFILTRATOR,485,50,92,108,92,108,35,100,50,170,h.MEDIUM_FAST,50,!1),new u(e.GIBLE,4,!1,!1,!1,"Land Shark Pokémon",n.DRAGON,n.GROUND,.7,20.5,O.SAND_VEIL,O.NONE,O.ROUGH_SKIN,300,58,70,45,40,45,42,45,50,60,h.SLOW,50,!0),new u(e.GABITE,4,!1,!1,!1,"Cave Pokémon",n.DRAGON,n.GROUND,1.4,56,O.SAND_VEIL,O.NONE,O.ROUGH_SKIN,410,68,90,65,50,55,82,45,50,144,h.SLOW,50,!0),new u(e.GARCHOMP,4,!1,!1,!1,"Mach Pokémon",n.DRAGON,n.GROUND,1.9,95,O.SAND_VEIL,O.NONE,O.ROUGH_SKIN,600,108,130,95,80,85,102,45,50,300,h.SLOW,50,!0,!0,new K("Normal","",n.DRAGON,n.GROUND,1.9,95,O.SAND_VEIL,O.NONE,O.ROUGH_SKIN,600,108,130,95,80,85,102,45,50,300,!0,null,!0),new K("Mega",Ee.MEGA,n.DRAGON,n.GROUND,1.9,95,O.SAND_FORCE,O.NONE,O.SAND_FORCE,700,108,170,115,120,95,92,45,50,300,!0)),new u(e.MUNCHLAX,4,!1,!1,!1,"Big Eater Pokémon",n.NORMAL,null,.6,105,O.PICKUP,O.THICK_FAT,O.GLUTTONY,390,135,85,40,40,85,5,50,50,78,h.SLOW,87.5,!1),new u(e.RIOLU,4,!1,!1,!1,"Emanation Pokémon",n.FIGHTING,null,.7,20.2,O.STEADFAST,O.INNER_FOCUS,O.PRANKSTER,285,40,70,40,35,40,60,75,50,57,h.MEDIUM_SLOW,87.5,!1),new u(e.LUCARIO,4,!1,!1,!1,"Aura Pokémon",n.FIGHTING,n.STEEL,1.2,54,O.STEADFAST,O.INNER_FOCUS,O.JUSTIFIED,525,70,110,70,115,70,90,45,50,184,h.MEDIUM_SLOW,87.5,!1,!0,new K("Normal","",n.FIGHTING,n.STEEL,1.2,54,O.STEADFAST,O.INNER_FOCUS,O.JUSTIFIED,525,70,110,70,115,70,90,45,50,184,!1,null,!0),new K("Mega",Ee.MEGA,n.FIGHTING,n.STEEL,1.3,57.5,O.ADAPTABILITY,O.ADAPTABILITY,O.ADAPTABILITY,625,70,145,88,140,70,112,45,50,184)),new u(e.HIPPOPOTAS,4,!1,!1,!1,"Hippo Pokémon",n.GROUND,null,.8,49.5,O.SAND_STREAM,O.NONE,O.SAND_FORCE,330,68,72,78,38,42,32,140,50,66,h.SLOW,50,!0),new u(e.HIPPOWDON,4,!1,!1,!1,"Heavyweight Pokémon",n.GROUND,null,2,300,O.SAND_STREAM,O.NONE,O.SAND_FORCE,525,108,112,118,68,72,47,60,50,184,h.SLOW,50,!0),new u(e.SKORUPI,4,!1,!1,!1,"Scorpion Pokémon",n.POISON,n.BUG,.8,12,O.BATTLE_ARMOR,O.SNIPER,O.KEEN_EYE,330,40,50,90,30,55,65,120,50,66,h.SLOW,50,!1),new u(e.DRAPION,4,!1,!1,!1,"Ogre Scorpion Pokémon",n.POISON,n.DARK,1.3,61.5,O.BATTLE_ARMOR,O.SNIPER,O.KEEN_EYE,500,70,90,110,60,75,95,45,50,175,h.SLOW,50,!1),new u(e.CROAGUNK,4,!1,!1,!1,"Toxic Mouth Pokémon",n.POISON,n.FIGHTING,.7,23,O.ANTICIPATION,O.DRY_SKIN,O.POISON_TOUCH,300,48,61,40,61,40,50,140,100,60,h.MEDIUM_FAST,50,!0),new u(e.TOXICROAK,4,!1,!1,!1,"Toxic Mouth Pokémon",n.POISON,n.FIGHTING,1.3,44.4,O.ANTICIPATION,O.DRY_SKIN,O.POISON_TOUCH,490,83,106,65,86,65,85,75,50,172,h.MEDIUM_FAST,50,!0),new u(e.CARNIVINE,4,!1,!1,!1,"Bug Catcher Pokémon",n.GRASS,null,1.4,27,O.LEVITATE,O.NONE,O.NONE,454,74,100,72,90,72,46,200,70,159,h.SLOW,50,!1),new u(e.FINNEON,4,!1,!1,!1,"Wing Fish Pokémon",n.WATER,null,.4,7,O.SWIFT_SWIM,O.STORM_DRAIN,O.WATER_VEIL,330,49,49,56,49,61,66,190,70,66,h.ERRATIC,50,!0),new u(e.LUMINEON,4,!1,!1,!1,"Neon Pokémon",n.WATER,null,1.2,24,O.SWIFT_SWIM,O.STORM_DRAIN,O.WATER_VEIL,460,69,69,76,69,86,91,75,70,161,h.ERRATIC,50,!0),new u(e.MANTYKE,4,!1,!1,!1,"Kite Pokémon",n.WATER,n.FLYING,1,65,O.SWIFT_SWIM,O.WATER_ABSORB,O.WATER_VEIL,345,45,20,50,60,120,50,25,50,69,h.SLOW,50,!1),new u(e.SNOVER,4,!1,!1,!1,"Frost Tree Pokémon",n.GRASS,n.ICE,1,50.5,O.SNOW_WARNING,O.NONE,O.SOUNDPROOF,334,60,62,50,62,60,40,120,50,67,h.SLOW,50,!0),new u(e.ABOMASNOW,4,!1,!1,!1,"Frost Tree Pokémon",n.GRASS,n.ICE,2.2,135.5,O.SNOW_WARNING,O.NONE,O.SOUNDPROOF,494,90,92,75,92,85,60,60,50,173,h.SLOW,50,!0,!0,new K("Normal","",n.GRASS,n.ICE,2.2,135.5,O.SNOW_WARNING,O.NONE,O.SOUNDPROOF,494,90,92,75,92,85,60,60,50,173,!0,null,!0),new K("Mega",Ee.MEGA,n.GRASS,n.ICE,2.7,185,O.SNOW_WARNING,O.NONE,O.SNOW_WARNING,594,90,132,105,132,105,30,60,50,173,!0)),new u(e.WEAVILE,4,!1,!1,!1,"Sharp Claw Pokémon",n.DARK,n.ICE,1.1,34,O.PRESSURE,O.NONE,O.PICKPOCKET,510,70,120,65,45,85,125,45,35,179,h.MEDIUM_SLOW,50,!0),new u(e.MAGNEZONE,4,!1,!1,!1,"Magnet Area Pokémon",n.ELECTRIC,n.STEEL,1.2,180,O.MAGNET_PULL,O.STURDY,O.ANALYTIC,535,70,70,115,130,90,60,30,50,268,h.MEDIUM_FAST,null,!1),new u(e.LICKILICKY,4,!1,!1,!1,"Licking Pokémon",n.NORMAL,null,1.7,140,O.OWN_TEMPO,O.OBLIVIOUS,O.CLOUD_NINE,515,110,85,95,80,95,50,30,50,180,h.MEDIUM_FAST,50,!1),new u(e.RHYPERIOR,4,!1,!1,!1,"Drill Pokémon",n.GROUND,n.ROCK,2.4,282.8,O.LIGHTNING_ROD,O.SOLID_ROCK,O.RECKLESS,535,115,140,130,55,55,40,30,50,268,h.SLOW,50,!0),new u(e.TANGROWTH,4,!1,!1,!1,"Vine Pokémon",n.GRASS,null,2,128.6,O.CHLOROPHYLL,O.LEAF_GUARD,O.REGENERATOR,535,100,100,125,110,50,50,30,50,187,h.MEDIUM_FAST,50,!0),new u(e.ELECTIVIRE,4,!1,!1,!1,"Thunderbolt Pokémon",n.ELECTRIC,null,1.8,138.6,O.MOTOR_DRIVE,O.NONE,O.VITAL_SPIRIT,540,75,123,67,95,85,95,30,50,270,h.MEDIUM_FAST,75,!1),new u(e.MAGMORTAR,4,!1,!1,!1,"Blast Pokémon",n.FIRE,null,1.6,68,O.FLAME_BODY,O.NONE,O.VITAL_SPIRIT,540,75,95,67,125,95,83,30,50,270,h.MEDIUM_FAST,75,!1),new u(e.TOGEKISS,4,!1,!1,!1,"Jubilee Pokémon",n.FAIRY,n.FLYING,1.5,38,O.HUSTLE,O.SERENE_GRACE,O.SUPER_LUCK,545,85,50,95,120,115,80,30,50,273,h.FAST,87.5,!1),new u(e.YANMEGA,4,!1,!1,!1,"Ogre Darner Pokémon",n.BUG,n.FLYING,1.9,51.5,O.SPEED_BOOST,O.TINTED_LENS,O.FRISK,515,86,76,86,116,56,95,30,70,180,h.MEDIUM_FAST,50,!1),new u(e.LEAFEON,4,!1,!1,!1,"Verdant Pokémon",n.GRASS,null,1,25.5,O.LEAF_GUARD,O.NONE,O.CHLOROPHYLL,525,65,110,130,60,65,95,45,35,184,h.MEDIUM_FAST,87.5,!1),new u(e.GLACEON,4,!1,!1,!1,"Fresh Snow Pokémon",n.ICE,null,.8,25.9,O.SNOW_CLOAK,O.NONE,O.ICE_BODY,525,65,60,110,130,95,65,45,35,184,h.MEDIUM_FAST,87.5,!1),new u(e.GLISCOR,4,!1,!1,!1,"Fang Scorpion Pokémon",n.GROUND,n.FLYING,2,42.5,O.HYPER_CUTTER,O.SAND_VEIL,O.POISON_HEAL,510,75,95,125,45,75,95,30,70,179,h.MEDIUM_SLOW,50,!1),new u(e.MAMOSWINE,4,!1,!1,!1,"Twin Tusk Pokémon",n.ICE,n.GROUND,2.5,291,O.OBLIVIOUS,O.SNOW_CLOAK,O.THICK_FAT,530,110,130,80,70,60,80,50,50,265,h.SLOW,50,!0),new u(e.PORYGON_Z,4,!1,!1,!1,"Virtual Pokémon",n.NORMAL,null,.9,34,O.ADAPTABILITY,O.DOWNLOAD,O.ANALYTIC,535,85,80,70,135,75,90,30,50,268,h.MEDIUM_FAST,null,!1),new u(e.GALLADE,4,!1,!1,!1,"Blade Pokémon",n.PSYCHIC,n.FIGHTING,1.6,52,O.STEADFAST,O.SHARPNESS,O.JUSTIFIED,518,68,125,65,65,115,80,45,35,259,h.SLOW,100,!1,!0,new K("Normal","",n.PSYCHIC,n.FIGHTING,1.6,52,O.STEADFAST,O.SHARPNESS,O.JUSTIFIED,518,68,125,65,65,115,80,45,35,259,!1,null,!0),new K("Mega",Ee.MEGA,n.PSYCHIC,n.FIGHTING,1.6,56.4,O.SHARPNESS,O.SHARPNESS,O.SHARPNESS,618,68,165,95,65,115,110,45,35,259)),new u(e.PROBOPASS,4,!1,!1,!1,"Compass Pokémon",n.ROCK,n.STEEL,1.4,340,O.STURDY,O.MAGNET_PULL,O.SAND_FORCE,525,60,55,145,75,150,40,60,70,184,h.MEDIUM_FAST,50,!1),new u(e.DUSKNOIR,4,!1,!1,!1,"Gripper Pokémon",n.GHOST,null,2.2,106.6,O.PRESSURE,O.NONE,O.FRISK,525,45,100,135,65,135,45,45,35,263,h.FAST,50,!1),new u(e.FROSLASS,4,!1,!1,!1,"Snow Land Pokémon",n.ICE,n.GHOST,1.3,26.6,O.SNOW_CLOAK,O.NONE,O.CURSED_BODY,480,70,80,70,80,70,110,75,50,168,h.MEDIUM_FAST,0,!1),new u(e.ROTOM,4,!1,!1,!1,"Plasma Pokémon",n.ELECTRIC,n.GHOST,.3,.3,O.LEVITATE,O.NONE,O.NONE,440,50,50,77,95,77,91,45,50,154,h.MEDIUM_FAST,null,!1,!1,new K("Normal","",n.ELECTRIC,n.GHOST,.3,.3,O.LEVITATE,O.NONE,O.NONE,440,50,50,77,95,77,91,45,50,154,!1,null,!0),new K("Heat","heat",n.ELECTRIC,n.FIRE,.3,.3,O.LEVITATE,O.NONE,O.NONE,520,50,65,107,105,107,86,45,50,154,!1,null,!0),new K("Wash","wash",n.ELECTRIC,n.WATER,.3,.3,O.LEVITATE,O.NONE,O.NONE,520,50,65,107,105,107,86,45,50,154,!1,null,!0),new K("Frost","frost",n.ELECTRIC,n.ICE,.3,.3,O.LEVITATE,O.NONE,O.NONE,520,50,65,107,105,107,86,45,50,154,!1,null,!0),new K("Fan","fan",n.ELECTRIC,n.FLYING,.3,.3,O.LEVITATE,O.NONE,O.NONE,520,50,65,107,105,107,86,45,50,154,!1,null,!0),new K("Mow","mow",n.ELECTRIC,n.GRASS,.3,.3,O.LEVITATE,O.NONE,O.NONE,520,50,65,107,105,107,86,45,50,154,!1,null,!0)),new u(e.UXIE,4,!0,!1,!1,"Knowledge Pokémon",n.PSYCHIC,null,.3,.3,O.LEVITATE,O.NONE,O.NONE,580,75,75,130,75,130,95,3,140,290,h.SLOW,null,!1),new u(e.MESPRIT,4,!0,!1,!1,"Emotion Pokémon",n.PSYCHIC,null,.3,.3,O.LEVITATE,O.NONE,O.NONE,580,80,105,105,105,105,80,3,140,290,h.SLOW,null,!1),new u(e.AZELF,4,!0,!1,!1,"Willpower Pokémon",n.PSYCHIC,null,.3,.3,O.LEVITATE,O.NONE,O.NONE,580,75,125,70,125,70,115,3,140,290,h.SLOW,null,!1),new u(e.DIALGA,4,!1,!0,!1,"Temporal Pokémon",n.STEEL,n.DRAGON,5.4,683,O.PRESSURE,O.NONE,O.TELEPATHY,680,100,120,120,150,100,90,3,0,340,h.SLOW,null,!1,!1,new K("Normal","",n.STEEL,n.DRAGON,5.4,683,O.PRESSURE,O.NONE,O.TELEPATHY,680,100,120,120,150,100,90,3,0,340,!1,null,!0),new K("Origin Forme","origin",n.STEEL,n.DRAGON,7,848.7,O.PRESSURE,O.NONE,O.TELEPATHY,680,100,100,120,150,120,90,3,0,340)),new u(e.PALKIA,4,!1,!0,!1,"Spatial Pokémon",n.WATER,n.DRAGON,4.2,336,O.PRESSURE,O.NONE,O.TELEPATHY,680,90,120,100,150,120,100,3,0,340,h.SLOW,null,!1,!1,new K("Normal","",n.WATER,n.DRAGON,4.2,336,O.PRESSURE,O.NONE,O.TELEPATHY,680,90,120,100,150,120,100,3,0,340,!1,null,!0),new K("Origin Forme","origin",n.WATER,n.DRAGON,6.3,659,O.PRESSURE,O.NONE,O.TELEPATHY,680,90,100,100,150,120,120,3,0,340)),new u(e.HEATRAN,4,!0,!1,!1,"Lava Dome Pokémon",n.FIRE,n.STEEL,1.7,430,O.FLASH_FIRE,O.NONE,O.FLAME_BODY,600,91,90,106,130,106,77,3,100,300,h.SLOW,50,!1),new u(e.REGIGIGAS,4,!0,!1,!1,"Colossal Pokémon",n.NORMAL,null,3.7,420,O.SLOW_START,O.NONE,O.NORMALIZE,670,110,160,110,80,110,100,3,0,335,h.SLOW,null,!1),new u(e.GIRATINA,4,!1,!0,!1,"Renegade Pokémon",n.GHOST,n.DRAGON,4.5,750,O.PRESSURE,O.NONE,O.TELEPATHY,680,150,100,120,100,120,90,3,0,340,h.SLOW,null,!1,!0,new K("Altered Forme","altered",n.GHOST,n.DRAGON,4.5,750,O.PRESSURE,O.NONE,O.TELEPATHY,680,150,100,120,100,120,90,3,0,340,!1,null,!0),new K("Origin Forme","origin",n.GHOST,n.DRAGON,6.9,650,O.LEVITATE,O.NONE,O.NONE,680,150,120,100,120,100,90,3,0,340)),new u(e.CRESSELIA,4,!0,!1,!1,"Lunar Pokémon",n.PSYCHIC,null,1.5,85.6,O.LEVITATE,O.NONE,O.NONE,580,120,70,110,75,120,85,3,100,300,h.SLOW,0,!1),new u(e.PHIONE,4,!1,!1,!0,"Sea Drifter Pokémon",n.WATER,null,.4,3.1,O.HYDRATION,O.NONE,O.NONE,480,80,80,80,80,80,80,30,70,216,h.SLOW,null,!1),new u(e.MANAPHY,4,!1,!1,!0,"Seafaring Pokémon",n.WATER,null,.3,1.4,O.HYDRATION,O.NONE,O.NONE,600,100,100,100,100,100,100,3,70,270,h.SLOW,null,!1),new u(e.DARKRAI,4,!1,!1,!0,"Pitch-Black Pokémon",n.DARK,null,1.5,50.5,O.BAD_DREAMS,O.NONE,O.NONE,600,70,90,90,135,90,125,3,0,270,h.SLOW,null,!1),new u(e.SHAYMIN,4,!1,!1,!0,"Gratitude Pokémon",n.GRASS,null,.2,2.1,O.NATURAL_CURE,O.NONE,O.NONE,600,100,100,100,100,100,100,45,100,270,h.MEDIUM_SLOW,null,!1,!0,new K("Land Forme","land",n.GRASS,null,.2,2.1,O.NATURAL_CURE,O.NONE,O.NONE,600,100,100,100,100,100,100,45,100,270,!1,null,!0),new K("Sky Forme","sky",n.GRASS,n.FLYING,.4,5.2,O.SERENE_GRACE,O.NONE,O.NONE,600,100,103,75,120,75,127,45,100,270)),new u(e.ARCEUS,4,!1,!1,!0,"Alpha Pokémon",n.NORMAL,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,324,h.SLOW,null,!1,!0,new K("Normal","normal",n.NORMAL,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,324,!1,null,!0),new K("Fighting","fighting",n.FIGHTING,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,324),new K("Flying","flying",n.FLYING,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,324),new K("Poison","poison",n.POISON,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,324),new K("Ground","ground",n.GROUND,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,324),new K("Rock","rock",n.ROCK,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,324),new K("Bug","bug",n.BUG,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,324),new K("Ghost","ghost",n.GHOST,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,324),new K("Steel","steel",n.STEEL,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,324),new K("Fire","fire",n.FIRE,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,324),new K("Water","water",n.WATER,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,324),new K("Grass","grass",n.GRASS,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,324),new K("Electric","electric",n.ELECTRIC,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,324),new K("Psychic","psychic",n.PSYCHIC,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,324),new K("Ice","ice",n.ICE,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,324),new K("Dragon","dragon",n.DRAGON,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,324),new K("Dark","dark",n.DARK,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,324),new K("Fairy","fairy",n.FAIRY,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,324),new K("???","unknown",n.UNKNOWN,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,324)),new u(e.VICTINI,5,!1,!1,!0,"Victory Pokémon",n.PSYCHIC,n.FIRE,.4,4,O.VICTORY_STAR,O.NONE,O.NONE,600,100,100,100,100,100,100,3,100,300,h.SLOW,null,!1),new u(e.SNIVY,5,!1,!1,!1,"Grass Snake Pokémon",n.GRASS,null,.6,8.1,O.OVERGROW,O.NONE,O.CONTRARY,308,45,45,55,45,55,63,45,70,62,h.MEDIUM_SLOW,87.5,!1),new u(e.SERVINE,5,!1,!1,!1,"Grass Snake Pokémon",n.GRASS,null,.8,16,O.OVERGROW,O.NONE,O.CONTRARY,413,60,60,75,60,75,83,45,70,145,h.MEDIUM_SLOW,87.5,!1),new u(e.SERPERIOR,5,!1,!1,!1,"Regal Pokémon",n.GRASS,null,3.3,63,O.OVERGROW,O.NONE,O.CONTRARY,528,75,75,95,75,95,113,45,70,238,h.MEDIUM_SLOW,87.5,!1),new u(e.TEPIG,5,!1,!1,!1,"Fire Pig Pokémon",n.FIRE,null,.5,9.9,O.BLAZE,O.NONE,O.THICK_FAT,308,65,63,45,45,45,45,45,70,62,h.MEDIUM_SLOW,87.5,!1),new u(e.PIGNITE,5,!1,!1,!1,"Fire Pig Pokémon",n.FIRE,n.FIGHTING,1,55.5,O.BLAZE,O.NONE,O.THICK_FAT,418,90,93,55,70,55,55,45,70,146,h.MEDIUM_SLOW,87.5,!1),new u(e.EMBOAR,5,!1,!1,!1,"Mega Fire Pig Pokémon",n.FIRE,n.FIGHTING,1.6,150,O.BLAZE,O.NONE,O.RECKLESS,528,110,123,65,100,65,65,45,70,238,h.MEDIUM_SLOW,87.5,!1),new u(e.OSHAWOTT,5,!1,!1,!1,"Sea Otter Pokémon",n.WATER,null,.5,5.9,O.TORRENT,O.NONE,O.SHELL_ARMOR,308,55,55,45,63,45,45,45,70,62,h.MEDIUM_SLOW,87.5,!1),new u(e.DEWOTT,5,!1,!1,!1,"Discipline Pokémon",n.WATER,null,.8,24.5,O.TORRENT,O.NONE,O.SHELL_ARMOR,413,75,75,60,83,60,60,45,70,145,h.MEDIUM_SLOW,87.5,!1),new u(e.SAMUROTT,5,!1,!1,!1,"Formidable Pokémon",n.WATER,null,1.5,94.6,O.TORRENT,O.NONE,O.SHELL_ARMOR,528,95,100,85,108,70,70,45,70,238,h.MEDIUM_SLOW,87.5,!1),new u(e.PATRAT,5,!1,!1,!1,"Scout Pokémon",n.NORMAL,null,.5,11.6,O.RUN_AWAY,O.KEEN_EYE,O.ANALYTIC,255,45,55,39,35,39,42,255,70,51,h.MEDIUM_FAST,50,!1),new u(e.WATCHOG,5,!1,!1,!1,"Lookout Pokémon",n.NORMAL,null,1.1,27,O.ILLUMINATE,O.KEEN_EYE,O.ANALYTIC,420,60,85,69,60,69,77,255,70,147,h.MEDIUM_FAST,50,!1),new u(e.LILLIPUP,5,!1,!1,!1,"Puppy Pokémon",n.NORMAL,null,.4,4.1,O.VITAL_SPIRIT,O.PICKUP,O.RUN_AWAY,275,45,60,45,25,45,55,255,50,55,h.MEDIUM_SLOW,50,!1),new u(e.HERDIER,5,!1,!1,!1,"Loyal Dog Pokémon",n.NORMAL,null,.9,14.7,O.INTIMIDATE,O.SAND_RUSH,O.SCRAPPY,370,65,80,65,35,65,60,120,50,130,h.MEDIUM_SLOW,50,!1),new u(e.STOUTLAND,5,!1,!1,!1,"Big-Hearted Pokémon",n.NORMAL,null,1.2,61,O.INTIMIDATE,O.SAND_RUSH,O.SCRAPPY,500,85,110,90,45,90,80,45,50,250,h.MEDIUM_SLOW,50,!1),new u(e.PURRLOIN,5,!1,!1,!1,"Devious Pokémon",n.DARK,null,.4,10.1,O.LIMBER,O.UNBURDEN,O.PRANKSTER,281,41,50,37,50,37,66,255,50,56,h.MEDIUM_FAST,50,!1),new u(e.LIEPARD,5,!1,!1,!1,"Cruel Pokémon",n.DARK,null,1.1,37.5,O.LIMBER,O.UNBURDEN,O.PRANKSTER,446,64,88,50,88,50,106,90,50,156,h.MEDIUM_FAST,50,!1),new u(e.PANSAGE,5,!1,!1,!1,"Grass Monkey Pokémon",n.GRASS,null,.6,10.5,O.GLUTTONY,O.NONE,O.OVERGROW,316,50,53,48,53,48,64,190,70,63,h.MEDIUM_FAST,87.5,!1),new u(e.SIMISAGE,5,!1,!1,!1,"Thorn Monkey Pokémon",n.GRASS,null,1.1,30.5,O.GLUTTONY,O.NONE,O.OVERGROW,498,75,98,63,98,63,101,75,70,174,h.MEDIUM_FAST,87.5,!1),new u(e.PANSEAR,5,!1,!1,!1,"High Temp Pokémon",n.FIRE,null,.6,11,O.GLUTTONY,O.NONE,O.BLAZE,316,50,53,48,53,48,64,190,70,63,h.MEDIUM_FAST,87.5,!1),new u(e.SIMISEAR,5,!1,!1,!1,"Ember Pokémon",n.FIRE,null,1,28,O.GLUTTONY,O.NONE,O.BLAZE,498,75,98,63,98,63,101,75,70,174,h.MEDIUM_FAST,87.5,!1),new u(e.PANPOUR,5,!1,!1,!1,"Spray Pokémon",n.WATER,null,.6,13.5,O.GLUTTONY,O.NONE,O.TORRENT,316,50,53,48,53,48,64,190,70,63,h.MEDIUM_FAST,87.5,!1),new u(e.SIMIPOUR,5,!1,!1,!1,"Geyser Pokémon",n.WATER,null,1,29,O.GLUTTONY,O.NONE,O.TORRENT,498,75,98,63,98,63,101,75,70,174,h.MEDIUM_FAST,87.5,!1),new u(e.MUNNA,5,!1,!1,!1,"Dream Eater Pokémon",n.PSYCHIC,null,.6,23.3,O.FOREWARN,O.SYNCHRONIZE,O.TELEPATHY,292,76,25,45,67,55,24,190,50,58,h.FAST,50,!1),new u(e.MUSHARNA,5,!1,!1,!1,"Drowsing Pokémon",n.PSYCHIC,null,1.1,60.5,O.FOREWARN,O.SYNCHRONIZE,O.TELEPATHY,487,116,55,85,107,95,29,75,50,170,h.FAST,50,!1),new u(e.PIDOVE,5,!1,!1,!1,"Tiny Pigeon Pokémon",n.NORMAL,n.FLYING,.3,2.1,O.BIG_PECKS,O.SUPER_LUCK,O.RIVALRY,264,50,55,50,36,30,43,255,50,53,h.MEDIUM_SLOW,50,!1),new u(e.TRANQUILL,5,!1,!1,!1,"Wild Pigeon Pokémon",n.NORMAL,n.FLYING,.6,15,O.BIG_PECKS,O.SUPER_LUCK,O.RIVALRY,358,62,77,62,50,42,65,120,50,125,h.MEDIUM_SLOW,50,!1),new u(e.UNFEZANT,5,!1,!1,!1,"Proud Pokémon",n.NORMAL,n.FLYING,1.2,29,O.BIG_PECKS,O.SUPER_LUCK,O.RIVALRY,488,80,115,80,65,55,93,45,50,244,h.MEDIUM_SLOW,50,!0),new u(e.BLITZLE,5,!1,!1,!1,"Electrified Pokémon",n.ELECTRIC,null,.8,29.8,O.LIGHTNING_ROD,O.MOTOR_DRIVE,O.SAP_SIPPER,295,45,60,32,50,32,76,190,70,59,h.MEDIUM_FAST,50,!1),new u(e.ZEBSTRIKA,5,!1,!1,!1,"Thunderbolt Pokémon",n.ELECTRIC,null,1.6,79.5,O.LIGHTNING_ROD,O.MOTOR_DRIVE,O.SAP_SIPPER,497,75,100,63,80,63,116,75,70,174,h.MEDIUM_FAST,50,!1),new u(e.ROGGENROLA,5,!1,!1,!1,"Mantle Pokémon",n.ROCK,null,.4,18,O.STURDY,O.WEAK_ARMOR,O.SAND_FORCE,280,55,75,85,25,25,15,255,50,56,h.MEDIUM_SLOW,50,!1),new u(e.BOLDORE,5,!1,!1,!1,"Ore Pokémon",n.ROCK,null,.9,102,O.STURDY,O.WEAK_ARMOR,O.SAND_FORCE,390,70,105,105,50,40,20,120,50,137,h.MEDIUM_SLOW,50,!1),new u(e.GIGALITH,5,!1,!1,!1,"Compressed Pokémon",n.ROCK,null,1.7,260,O.STURDY,O.SAND_STREAM,O.SAND_FORCE,515,85,135,130,60,80,25,45,50,258,h.MEDIUM_SLOW,50,!1),new u(e.WOOBAT,5,!1,!1,!1,"Bat Pokémon",n.PSYCHIC,n.FLYING,.4,2.1,O.UNAWARE,O.KLUTZ,O.SIMPLE,323,65,45,43,55,43,72,190,50,65,h.MEDIUM_FAST,50,!1),new u(e.SWOOBAT,5,!1,!1,!1,"Courting Pokémon",n.PSYCHIC,n.FLYING,.9,10.5,O.UNAWARE,O.KLUTZ,O.SIMPLE,425,67,57,55,77,55,114,45,50,149,h.MEDIUM_FAST,50,!1),new u(e.DRILBUR,5,!1,!1,!1,"Mole Pokémon",n.GROUND,null,.3,8.5,O.SAND_RUSH,O.SAND_FORCE,O.MOLD_BREAKER,328,60,85,40,30,45,68,120,50,66,h.MEDIUM_FAST,50,!1),new u(e.EXCADRILL,5,!1,!1,!1,"Subterrene Pokémon",n.GROUND,n.STEEL,.7,40.4,O.SAND_RUSH,O.SAND_FORCE,O.MOLD_BREAKER,508,110,135,60,50,65,88,60,50,178,h.MEDIUM_FAST,50,!1),new u(e.AUDINO,5,!1,!1,!1,"Hearing Pokémon",n.NORMAL,null,1.1,31,O.HEALER,O.REGENERATOR,O.KLUTZ,445,103,60,86,60,86,50,255,50,390,h.FAST,50,!1,!0,new K("Normal","",n.NORMAL,null,1.1,31,O.HEALER,O.REGENERATOR,O.KLUTZ,445,103,60,86,60,86,50,255,50,390,!1,null,!0),new K("Mega",Ee.MEGA,n.NORMAL,n.FAIRY,1.5,32,O.REGENERATOR,O.REGENERATOR,O.REGENERATOR,545,103,60,126,80,126,50,255,50,390)),new u(e.TIMBURR,5,!1,!1,!1,"Muscular Pokémon",n.FIGHTING,null,.6,12.5,O.GUTS,O.SHEER_FORCE,O.IRON_FIST,305,75,80,55,25,35,35,180,70,61,h.MEDIUM_SLOW,75,!1),new u(e.GURDURR,5,!1,!1,!1,"Muscular Pokémon",n.FIGHTING,null,1.2,40,O.GUTS,O.SHEER_FORCE,O.IRON_FIST,405,85,105,85,40,50,40,90,50,142,h.MEDIUM_SLOW,75,!1),new u(e.CONKELDURR,5,!1,!1,!1,"Muscular Pokémon",n.FIGHTING,null,1.4,87,O.GUTS,O.SHEER_FORCE,O.IRON_FIST,505,105,140,95,55,65,45,45,50,253,h.MEDIUM_SLOW,75,!1),new u(e.TYMPOLE,5,!1,!1,!1,"Tadpole Pokémon",n.WATER,null,.5,4.5,O.SWIFT_SWIM,O.HYDRATION,O.WATER_ABSORB,294,50,50,40,50,40,64,255,50,59,h.MEDIUM_SLOW,50,!1),new u(e.PALPITOAD,5,!1,!1,!1,"Vibration Pokémon",n.WATER,n.GROUND,.8,17,O.SWIFT_SWIM,O.HYDRATION,O.WATER_ABSORB,384,75,65,55,65,55,69,120,50,134,h.MEDIUM_SLOW,50,!1),new u(e.SEISMITOAD,5,!1,!1,!1,"Vibration Pokémon",n.WATER,n.GROUND,1.5,62,O.SWIFT_SWIM,O.POISON_TOUCH,O.WATER_ABSORB,509,105,95,75,85,75,74,45,50,255,h.MEDIUM_SLOW,50,!1),new u(e.THROH,5,!1,!1,!1,"Judo Pokémon",n.FIGHTING,null,1.3,55.5,O.GUTS,O.INNER_FOCUS,O.MOLD_BREAKER,465,120,100,85,30,85,45,45,50,163,h.MEDIUM_FAST,100,!1),new u(e.SAWK,5,!1,!1,!1,"Karate Pokémon",n.FIGHTING,null,1.4,51,O.STURDY,O.INNER_FOCUS,O.MOLD_BREAKER,465,75,125,75,30,75,85,45,50,163,h.MEDIUM_FAST,100,!1),new u(e.SEWADDLE,5,!1,!1,!1,"Sewing Pokémon",n.BUG,n.GRASS,.3,2.5,O.SWARM,O.CHLOROPHYLL,O.OVERCOAT,310,45,53,70,40,60,42,255,70,62,h.MEDIUM_SLOW,50,!1),new u(e.SWADLOON,5,!1,!1,!1,"Leaf-Wrapped Pokémon",n.BUG,n.GRASS,.5,7.3,O.LEAF_GUARD,O.CHLOROPHYLL,O.OVERCOAT,380,55,63,90,50,80,42,120,70,133,h.MEDIUM_SLOW,50,!1),new u(e.LEAVANNY,5,!1,!1,!1,"Nurturing Pokémon",n.BUG,n.GRASS,1.2,20.5,O.SWARM,O.CHLOROPHYLL,O.OVERCOAT,500,75,103,80,70,80,92,45,70,225,h.MEDIUM_SLOW,50,!1),new u(e.VENIPEDE,5,!1,!1,!1,"Centipede Pokémon",n.BUG,n.POISON,.4,5.3,O.POISON_POINT,O.SWARM,O.SPEED_BOOST,260,30,45,59,30,39,57,255,50,52,h.MEDIUM_SLOW,50,!1),new u(e.WHIRLIPEDE,5,!1,!1,!1,"Curlipede Pokémon",n.BUG,n.POISON,1.2,58.5,O.POISON_POINT,O.SWARM,O.SPEED_BOOST,360,40,55,99,40,79,47,120,50,126,h.MEDIUM_SLOW,50,!1),new u(e.SCOLIPEDE,5,!1,!1,!1,"Megapede Pokémon",n.BUG,n.POISON,2.5,200.5,O.POISON_POINT,O.SWARM,O.SPEED_BOOST,485,60,100,89,55,69,112,45,50,243,h.MEDIUM_SLOW,50,!1),new u(e.COTTONEE,5,!1,!1,!1,"Cotton Puff Pokémon",n.GRASS,n.FAIRY,.3,.6,O.PRANKSTER,O.INFILTRATOR,O.CHLOROPHYLL,280,40,27,60,37,50,66,190,50,56,h.MEDIUM_FAST,50,!1),new u(e.WHIMSICOTT,5,!1,!1,!1,"Windveiled Pokémon",n.GRASS,n.FAIRY,.7,6.6,O.PRANKSTER,O.INFILTRATOR,O.CHLOROPHYLL,480,60,67,85,77,75,116,75,50,168,h.MEDIUM_FAST,50,!1),new u(e.PETILIL,5,!1,!1,!1,"Bulb Pokémon",n.GRASS,null,.5,6.6,O.CHLOROPHYLL,O.OWN_TEMPO,O.LEAF_GUARD,280,45,35,50,70,50,30,190,50,56,h.MEDIUM_FAST,0,!1),new u(e.LILLIGANT,5,!1,!1,!1,"Flowering Pokémon",n.GRASS,null,1.1,16.3,O.CHLOROPHYLL,O.OWN_TEMPO,O.LEAF_GUARD,480,70,60,75,110,75,90,75,50,168,h.MEDIUM_FAST,0,!1),new u(e.BASCULIN,5,!1,!1,!1,"Hostile Pokémon",n.WATER,null,1,18,O.RECKLESS,O.ADAPTABILITY,O.MOLD_BREAKER,460,70,92,65,80,55,98,25,50,161,h.MEDIUM_FAST,50,!1,!1,new K("Red-Striped Form","red-striped",n.WATER,null,1,18,O.RECKLESS,O.ADAPTABILITY,O.MOLD_BREAKER,460,70,92,65,80,55,98,25,50,161,!1,null,!0),new K("Blue-Striped Form","blue-striped",n.WATER,null,1,18,O.ROCK_HEAD,O.ADAPTABILITY,O.MOLD_BREAKER,460,70,92,65,80,55,98,25,50,161,!1,null,!0),new K("White-Striped Form","white-striped",n.WATER,null,1,18,O.RATTLED,O.ADAPTABILITY,O.MOLD_BREAKER,460,70,92,65,80,55,98,25,50,161,!1,null,!0)),new u(e.SANDILE,5,!1,!1,!1,"Desert Croc Pokémon",n.GROUND,n.DARK,.7,15.2,O.INTIMIDATE,O.MOXIE,O.ANGER_POINT,292,50,72,35,35,35,65,180,50,58,h.MEDIUM_SLOW,50,!1),new u(e.KROKOROK,5,!1,!1,!1,"Desert Croc Pokémon",n.GROUND,n.DARK,1,33.4,O.INTIMIDATE,O.MOXIE,O.ANGER_POINT,351,60,82,45,45,45,74,90,50,123,h.MEDIUM_SLOW,50,!1),new u(e.KROOKODILE,5,!1,!1,!1,"Intimidation Pokémon",n.GROUND,n.DARK,1.5,96.3,O.INTIMIDATE,O.MOXIE,O.ANGER_POINT,519,95,117,80,65,70,92,45,50,260,h.MEDIUM_SLOW,50,!1),new u(e.DARUMAKA,5,!1,!1,!1,"Zen Charm Pokémon",n.FIRE,null,.6,37.5,O.HUSTLE,O.NONE,O.INNER_FOCUS,315,70,90,45,15,45,50,120,50,63,h.MEDIUM_SLOW,50,!1),new u(e.DARMANITAN,5,!1,!1,!1,"Blazing Pokémon",n.FIRE,null,1.3,92.9,O.SHEER_FORCE,O.NONE,O.ZEN_MODE,480,105,140,55,30,55,95,60,50,168,h.MEDIUM_SLOW,50,!1,!0,new K("Standard Mode","",n.FIRE,null,1.3,92.9,O.SHEER_FORCE,O.NONE,O.ZEN_MODE,480,105,140,55,30,55,95,60,50,168,!1,null,!0),new K("Zen Mode","zen",n.FIRE,n.PSYCHIC,1.3,92.9,O.SHEER_FORCE,O.NONE,O.ZEN_MODE,540,105,30,105,140,105,55,60,50,168)),new u(e.MARACTUS,5,!1,!1,!1,"Cactus Pokémon",n.GRASS,null,1,28,O.WATER_ABSORB,O.CHLOROPHYLL,O.STORM_DRAIN,461,75,86,67,106,67,60,255,50,161,h.MEDIUM_FAST,50,!1),new u(e.DWEBBLE,5,!1,!1,!1,"Rock Inn Pokémon",n.BUG,n.ROCK,.3,14.5,O.STURDY,O.SHELL_ARMOR,O.WEAK_ARMOR,325,50,65,85,35,35,55,190,50,65,h.MEDIUM_FAST,50,!1),new u(e.CRUSTLE,5,!1,!1,!1,"Stone Home Pokémon",n.BUG,n.ROCK,1.4,200,O.STURDY,O.SHELL_ARMOR,O.WEAK_ARMOR,485,70,105,125,65,75,45,75,50,170,h.MEDIUM_FAST,50,!1),new u(e.SCRAGGY,5,!1,!1,!1,"Shedding Pokémon",n.DARK,n.FIGHTING,.6,11.8,O.SHED_SKIN,O.MOXIE,O.INTIMIDATE,348,50,75,70,35,70,48,180,35,70,h.MEDIUM_FAST,50,!1),new u(e.SCRAFTY,5,!1,!1,!1,"Hoodlum Pokémon",n.DARK,n.FIGHTING,1.1,30,O.SHED_SKIN,O.MOXIE,O.INTIMIDATE,488,65,90,115,45,115,58,90,50,171,h.MEDIUM_FAST,50,!1),new u(e.SIGILYPH,5,!1,!1,!1,"Avianoid Pokémon",n.PSYCHIC,n.FLYING,1.4,14,O.WONDER_SKIN,O.MAGIC_GUARD,O.TINTED_LENS,490,72,58,80,103,80,97,45,50,172,h.MEDIUM_FAST,50,!1),new u(e.YAMASK,5,!1,!1,!1,"Spirit Pokémon",n.GHOST,null,.5,1.5,O.MUMMY,O.NONE,O.NONE,303,38,30,85,55,65,30,190,50,61,h.MEDIUM_FAST,50,!1),new u(e.COFAGRIGUS,5,!1,!1,!1,"Coffin Pokémon",n.GHOST,null,1.7,76.5,O.MUMMY,O.NONE,O.NONE,483,58,50,145,95,105,30,90,50,169,h.MEDIUM_FAST,50,!1),new u(e.TIRTOUGA,5,!1,!1,!1,"Prototurtle Pokémon",n.WATER,n.ROCK,.7,16.5,O.SOLID_ROCK,O.STURDY,O.SWIFT_SWIM,355,54,78,103,53,45,22,45,50,71,h.MEDIUM_FAST,87.5,!1),new u(e.CARRACOSTA,5,!1,!1,!1,"Prototurtle Pokémon",n.WATER,n.ROCK,1.2,81,O.SOLID_ROCK,O.STURDY,O.SWIFT_SWIM,495,74,108,133,83,65,32,45,50,173,h.MEDIUM_FAST,87.5,!1),new u(e.ARCHEN,5,!1,!1,!1,"First Bird Pokémon",n.ROCK,n.FLYING,.5,9.5,O.DEFEATIST,O.NONE,O.EMERGENCY_EXIT,401,55,112,45,74,45,70,45,50,71,h.MEDIUM_FAST,87.5,!1),new u(e.ARCHEOPS,5,!1,!1,!1,"First Bird Pokémon",n.ROCK,n.FLYING,1.4,32,O.DEFEATIST,O.NONE,O.EMERGENCY_EXIT,567,75,140,65,112,65,110,45,50,177,h.MEDIUM_FAST,87.5,!1),new u(e.TRUBBISH,5,!1,!1,!1,"Trash Bag Pokémon",n.POISON,null,.6,31,O.STENCH,O.STICKY_HOLD,O.AFTERMATH,329,50,50,62,40,62,65,190,50,66,h.MEDIUM_FAST,50,!1),new u(e.GARBODOR,5,!1,!1,!1,"Trash Heap Pokémon",n.POISON,null,1.9,107.3,O.STENCH,O.WEAK_ARMOR,O.AFTERMATH,474,80,95,82,60,82,75,60,50,166,h.MEDIUM_FAST,50,!1,!0,new K("Normal","",n.POISON,null,1.9,107.3,O.STENCH,O.WEAK_ARMOR,O.AFTERMATH,474,80,95,82,60,82,75,60,50,166,!1,null,!0),new K("G-Max",Ee.GIGANTAMAX,n.POISON,n.STEEL,21,999.9,O.TOXIC_DEBRIS,O.TOXIC_DEBRIS,O.TOXIC_DEBRIS,574,135,125,102,57,102,53,60,50,166)),new u(e.ZORUA,5,!1,!1,!1,"Tricky Fox Pokémon",n.DARK,null,.7,12.5,O.ILLUSION,O.NONE,O.NONE,330,40,65,40,80,40,65,75,50,66,h.MEDIUM_SLOW,87.5,!1),new u(e.ZOROARK,5,!1,!1,!1,"Illusion Fox Pokémon",n.DARK,null,1.6,81.1,O.ILLUSION,O.NONE,O.NONE,510,60,105,60,120,60,105,45,50,179,h.MEDIUM_SLOW,87.5,!1),new u(e.MINCCINO,5,!1,!1,!1,"Chinchilla Pokémon",n.NORMAL,null,.4,5.8,O.CUTE_CHARM,O.TECHNICIAN,O.SKILL_LINK,300,55,50,40,40,40,75,255,50,60,h.FAST,25,!1),new u(e.CINCCINO,5,!1,!1,!1,"Scarf Pokémon",n.NORMAL,null,.5,7.5,O.CUTE_CHARM,O.TECHNICIAN,O.SKILL_LINK,470,75,95,60,65,60,115,60,50,165,h.FAST,25,!1),new u(e.GOTHITA,5,!1,!1,!1,"Fixation Pokémon",n.PSYCHIC,null,.4,5.8,O.FRISK,O.COMPETITIVE,O.SHADOW_TAG,290,45,30,50,55,65,45,200,50,58,h.MEDIUM_SLOW,25,!1),new u(e.GOTHORITA,5,!1,!1,!1,"Manipulate Pokémon",n.PSYCHIC,null,.7,18,O.FRISK,O.COMPETITIVE,O.SHADOW_TAG,390,60,45,70,75,85,55,100,50,137,h.MEDIUM_SLOW,25,!1),new u(e.GOTHITELLE,5,!1,!1,!1,"Astral Body Pokémon",n.PSYCHIC,null,1.5,44,O.FRISK,O.COMPETITIVE,O.SHADOW_TAG,490,70,55,95,95,110,65,50,50,245,h.MEDIUM_SLOW,25,!1),new u(e.SOLOSIS,5,!1,!1,!1,"Cell Pokémon",n.PSYCHIC,null,.3,1,O.OVERCOAT,O.MAGIC_GUARD,O.REGENERATOR,290,45,30,40,105,50,20,200,50,58,h.MEDIUM_SLOW,50,!1),new u(e.DUOSION,5,!1,!1,!1,"Mitosis Pokémon",n.PSYCHIC,null,.6,8,O.OVERCOAT,O.MAGIC_GUARD,O.REGENERATOR,370,65,40,50,125,60,30,100,50,130,h.MEDIUM_SLOW,50,!1),new u(e.REUNICLUS,5,!1,!1,!1,"Multiplying Pokémon",n.PSYCHIC,null,1,20.1,O.OVERCOAT,O.MAGIC_GUARD,O.REGENERATOR,490,110,65,75,125,85,30,50,50,245,h.MEDIUM_SLOW,50,!1),new u(e.DUCKLETT,5,!1,!1,!1,"Water Bird Pokémon",n.WATER,n.FLYING,.5,5.5,O.KEEN_EYE,O.BIG_PECKS,O.HYDRATION,305,62,44,50,44,50,55,190,70,61,h.MEDIUM_FAST,50,!1),new u(e.SWANNA,5,!1,!1,!1,"White Bird Pokémon",n.WATER,n.FLYING,1.3,24.2,O.KEEN_EYE,O.BIG_PECKS,O.HYDRATION,473,75,87,63,87,63,98,45,70,166,h.MEDIUM_FAST,50,!1),new u(e.VANILLITE,5,!1,!1,!1,"Fresh Snow Pokémon",n.ICE,null,.4,5.7,O.ICE_BODY,O.SNOW_CLOAK,O.WEAK_ARMOR,305,36,50,50,65,60,44,255,50,61,h.SLOW,50,!1),new u(e.VANILLISH,5,!1,!1,!1,"Icy Snow Pokémon",n.ICE,null,1.1,41,O.ICE_BODY,O.SNOW_CLOAK,O.WEAK_ARMOR,395,51,65,65,80,75,59,120,50,138,h.SLOW,50,!1),new u(e.VANILLUXE,5,!1,!1,!1,"Snowstorm Pokémon",n.ICE,null,1.3,57.5,O.ICE_BODY,O.SNOW_WARNING,O.WEAK_ARMOR,535,71,95,85,110,95,79,45,50,268,h.SLOW,50,!1),new u(e.DEERLING,5,!1,!1,!1,"Season Pokémon",n.NORMAL,n.GRASS,.6,19.5,O.CHLOROPHYLL,O.SAP_SIPPER,O.SERENE_GRACE,335,60,60,50,40,50,75,190,70,67,h.MEDIUM_FAST,50,!1,!0,new K("Spring Form","spring",n.NORMAL,n.GRASS,.6,19.5,O.CHLOROPHYLL,O.SAP_SIPPER,O.SERENE_GRACE,335,60,60,50,40,50,75,190,70,67,!1,null,!0),new K("Summer Form","summer",n.NORMAL,n.GRASS,.6,19.5,O.CHLOROPHYLL,O.SAP_SIPPER,O.SERENE_GRACE,335,60,60,50,40,50,75,190,70,67,!1,null,!0),new K("Autumn Form","autumn",n.NORMAL,n.GRASS,.6,19.5,O.CHLOROPHYLL,O.SAP_SIPPER,O.SERENE_GRACE,335,60,60,50,40,50,75,190,70,67,!1,null,!0),new K("Winter Form","winter",n.NORMAL,n.GRASS,.6,19.5,O.CHLOROPHYLL,O.SAP_SIPPER,O.SERENE_GRACE,335,60,60,50,40,50,75,190,70,67,!1,null,!0)),new u(e.SAWSBUCK,5,!1,!1,!1,"Season Pokémon",n.NORMAL,n.GRASS,1.9,92.5,O.CHLOROPHYLL,O.SAP_SIPPER,O.SERENE_GRACE,475,80,100,70,60,70,95,75,70,166,h.MEDIUM_FAST,50,!1,!0,new K("Spring Form","spring",n.NORMAL,n.GRASS,1.9,92.5,O.CHLOROPHYLL,O.SAP_SIPPER,O.SERENE_GRACE,475,80,100,70,60,70,95,75,70,166,!1,null,!0),new K("Summer Form","summer",n.NORMAL,n.GRASS,1.9,92.5,O.CHLOROPHYLL,O.SAP_SIPPER,O.SERENE_GRACE,475,80,100,70,60,70,95,75,70,166,!1,null,!0),new K("Autumn Form","autumn",n.NORMAL,n.GRASS,1.9,92.5,O.CHLOROPHYLL,O.SAP_SIPPER,O.SERENE_GRACE,475,80,100,70,60,70,95,75,70,166,!1,null,!0),new K("Winter Form","winter",n.NORMAL,n.GRASS,1.9,92.5,O.CHLOROPHYLL,O.SAP_SIPPER,O.SERENE_GRACE,475,80,100,70,60,70,95,75,70,166,!1,null,!0)),new u(e.EMOLGA,5,!1,!1,!1,"Sky Squirrel Pokémon",n.ELECTRIC,n.FLYING,.4,5,O.STATIC,O.NONE,O.MOTOR_DRIVE,428,55,75,60,75,60,103,200,50,150,h.MEDIUM_FAST,50,!1),new u(e.KARRABLAST,5,!1,!1,!1,"Clamping Pokémon",n.BUG,null,.5,5.9,O.SWARM,O.SHED_SKIN,O.NO_GUARD,315,50,75,45,40,45,60,200,50,63,h.MEDIUM_FAST,50,!1),new u(e.ESCAVALIER,5,!1,!1,!1,"Cavalry Pokémon",n.BUG,n.STEEL,1,33,O.SWARM,O.SHELL_ARMOR,O.OVERCOAT,495,70,135,105,60,105,20,75,50,173,h.MEDIUM_FAST,50,!1),new u(e.FOONGUS,5,!1,!1,!1,"Mushroom Pokémon",n.GRASS,n.POISON,.2,1,O.EFFECT_SPORE,O.NONE,O.REGENERATOR,294,69,55,45,55,55,15,190,50,59,h.MEDIUM_FAST,50,!1),new u(e.AMOONGUSS,5,!1,!1,!1,"Mushroom Pokémon",n.GRASS,n.POISON,.6,10.5,O.EFFECT_SPORE,O.NONE,O.REGENERATOR,464,114,85,70,85,80,30,75,50,162,h.MEDIUM_FAST,50,!1),new u(e.FRILLISH,5,!1,!1,!1,"Floating Pokémon",n.WATER,n.GHOST,1.2,33,O.WATER_ABSORB,O.CURSED_BODY,O.DAMP,335,55,40,50,65,85,40,190,50,67,h.MEDIUM_FAST,50,!0),new u(e.JELLICENT,5,!1,!1,!1,"Floating Pokémon",n.WATER,n.GHOST,2.2,135,O.WATER_ABSORB,O.CURSED_BODY,O.DAMP,480,100,60,70,85,105,60,60,50,168,h.MEDIUM_FAST,50,!0),new u(e.ALOMOMOLA,5,!1,!1,!1,"Caring Pokémon",n.WATER,null,1.2,31.6,O.HEALER,O.HYDRATION,O.REGENERATOR,470,165,75,80,40,45,65,75,70,165,h.FAST,50,!1),new u(e.JOLTIK,5,!1,!1,!1,"Attaching Pokémon",n.BUG,n.ELECTRIC,.1,.6,O.COMPOUND_EYES,O.UNNERVE,O.SWARM,319,50,47,50,57,50,65,190,50,64,h.MEDIUM_FAST,50,!1),new u(e.GALVANTULA,5,!1,!1,!1,"EleSpider Pokémon",n.BUG,n.ELECTRIC,.8,14.3,O.COMPOUND_EYES,O.UNNERVE,O.SWARM,472,70,77,60,97,60,108,75,50,165,h.MEDIUM_FAST,50,!1),new u(e.FERROSEED,5,!1,!1,!1,"Thorn Seed Pokémon",n.GRASS,n.STEEL,.6,18.8,O.IRON_BARBS,O.NONE,O.ANTICIPATION,305,44,50,91,24,86,10,255,50,61,h.MEDIUM_FAST,50,!1),new u(e.FERROTHORN,5,!1,!1,!1,"Thorn Pod Pokémon",n.GRASS,n.STEEL,1,110,O.IRON_BARBS,O.NONE,O.ANTICIPATION,489,74,94,131,54,116,20,90,50,171,h.MEDIUM_FAST,50,!1),new u(e.KLINK,5,!1,!1,!1,"Gear Pokémon",n.STEEL,null,.3,21,O.PLUS,O.MINUS,O.CLEAR_BODY,300,40,55,70,45,60,30,130,50,60,h.MEDIUM_SLOW,null,!1),new u(e.KLANG,5,!1,!1,!1,"Gear Pokémon",n.STEEL,null,.6,51,O.PLUS,O.MINUS,O.CLEAR_BODY,440,60,80,95,70,85,50,60,50,154,h.MEDIUM_SLOW,null,!1),new u(e.KLINKLANG,5,!1,!1,!1,"Gear Pokémon",n.STEEL,null,.6,81,O.PLUS,O.MINUS,O.CLEAR_BODY,520,60,100,115,70,85,90,30,50,260,h.MEDIUM_SLOW,null,!1),new u(e.TYNAMO,5,!1,!1,!1,"EleFish Pokémon",n.ELECTRIC,null,.2,.3,O.LEVITATE,O.NONE,O.NONE,275,35,55,40,45,40,60,190,70,55,h.SLOW,50,!1),new u(e.EELEKTRIK,5,!1,!1,!1,"EleFish Pokémon",n.ELECTRIC,null,1.2,22,O.LEVITATE,O.NONE,O.NONE,405,65,85,70,75,70,40,60,70,142,h.SLOW,50,!1),new u(e.EELEKTROSS,5,!1,!1,!1,"EleFish Pokémon",n.ELECTRIC,null,2.1,80.5,O.LEVITATE,O.NONE,O.NONE,515,85,115,80,105,80,50,30,70,232,h.SLOW,50,!1),new u(e.ELGYEM,5,!1,!1,!1,"Cerebral Pokémon",n.PSYCHIC,null,.5,9,O.TELEPATHY,O.SYNCHRONIZE,O.ANALYTIC,335,55,55,55,85,55,30,255,50,67,h.MEDIUM_FAST,50,!1),new u(e.BEHEEYEM,5,!1,!1,!1,"Cerebral Pokémon",n.PSYCHIC,null,1,34.5,O.TELEPATHY,O.SYNCHRONIZE,O.ANALYTIC,485,75,75,75,125,95,40,90,50,170,h.MEDIUM_FAST,50,!1),new u(e.LITWICK,5,!1,!1,!1,"Candle Pokémon",n.GHOST,n.FIRE,.3,3.1,O.FLASH_FIRE,O.FLAME_BODY,O.INFILTRATOR,275,50,30,55,65,55,20,190,50,55,h.MEDIUM_SLOW,50,!1),new u(e.LAMPENT,5,!1,!1,!1,"Lamp Pokémon",n.GHOST,n.FIRE,.6,13,O.FLASH_FIRE,O.FLAME_BODY,O.INFILTRATOR,370,60,40,60,95,60,55,90,50,130,h.MEDIUM_SLOW,50,!1),new u(e.CHANDELURE,5,!1,!1,!1,"Luring Pokémon",n.GHOST,n.FIRE,1,34.3,O.FLASH_FIRE,O.FLAME_BODY,O.INFILTRATOR,520,60,55,90,145,90,80,45,50,260,h.MEDIUM_SLOW,50,!1),new u(e.AXEW,5,!1,!1,!1,"Tusk Pokémon",n.DRAGON,null,.6,18,O.RIVALRY,O.MOLD_BREAKER,O.UNNERVE,320,46,87,60,30,40,57,75,35,64,h.SLOW,50,!1),new u(e.FRAXURE,5,!1,!1,!1,"Axe Jaw Pokémon",n.DRAGON,null,1,36,O.RIVALRY,O.MOLD_BREAKER,O.UNNERVE,410,66,117,70,40,50,67,60,35,144,h.SLOW,50,!1),new u(e.HAXORUS,5,!1,!1,!1,"Axe Jaw Pokémon",n.DRAGON,null,1.8,105.5,O.RIVALRY,O.MOLD_BREAKER,O.UNNERVE,540,76,147,90,60,70,97,45,35,270,h.SLOW,50,!1),new u(e.CUBCHOO,5,!1,!1,!1,"Chill Pokémon",n.ICE,null,.5,8.5,O.SNOW_CLOAK,O.SLUSH_RUSH,O.RATTLED,305,55,70,40,60,40,40,120,50,61,h.MEDIUM_FAST,50,!1),new u(e.BEARTIC,5,!1,!1,!1,"Freezing Pokémon",n.ICE,null,2.6,260,O.SNOW_CLOAK,O.SLUSH_RUSH,O.SWIFT_SWIM,505,95,130,80,70,80,50,60,50,177,h.MEDIUM_FAST,50,!1),new u(e.CRYOGONAL,5,!1,!1,!1,"Crystallizing Pokémon",n.ICE,null,1.1,148,O.LEVITATE,O.NONE,O.NONE,515,80,50,50,95,135,105,25,50,180,h.MEDIUM_FAST,null,!1),new u(e.SHELMET,5,!1,!1,!1,"Snail Pokémon",n.BUG,null,.4,7.7,O.HYDRATION,O.SHELL_ARMOR,O.OVERCOAT,305,50,40,85,40,65,25,200,50,61,h.MEDIUM_FAST,50,!1),new u(e.ACCELGOR,5,!1,!1,!1,"Shell Out Pokémon",n.BUG,null,.8,25.3,O.HYDRATION,O.STICKY_HOLD,O.UNBURDEN,495,80,70,40,100,60,145,75,50,173,h.MEDIUM_FAST,50,!1),new u(e.STUNFISK,5,!1,!1,!1,"Trap Pokémon",n.GROUND,n.ELECTRIC,.7,11,O.STATIC,O.LIMBER,O.SAND_VEIL,471,109,66,84,81,99,32,75,70,165,h.MEDIUM_FAST,50,!1),new u(e.MIENFOO,5,!1,!1,!1,"Martial Arts Pokémon",n.FIGHTING,null,.9,20,O.INNER_FOCUS,O.REGENERATOR,O.RECKLESS,350,45,85,50,55,50,65,180,50,70,h.MEDIUM_SLOW,50,!1),new u(e.MIENSHAO,5,!1,!1,!1,"Martial Arts Pokémon",n.FIGHTING,null,1.4,35.5,O.INNER_FOCUS,O.REGENERATOR,O.RECKLESS,510,65,125,60,95,60,105,45,50,179,h.MEDIUM_SLOW,50,!1),new u(e.DRUDDIGON,5,!1,!1,!1,"Cave Pokémon",n.DRAGON,null,1.6,139,O.ROUGH_SKIN,O.SHEER_FORCE,O.MOLD_BREAKER,485,77,120,90,60,90,48,45,50,170,h.MEDIUM_FAST,50,!1),new u(e.GOLETT,5,!1,!1,!1,"Automaton Pokémon",n.GROUND,n.GHOST,1,92,O.IRON_FIST,O.KLUTZ,O.NO_GUARD,303,59,74,50,35,50,35,190,50,61,h.MEDIUM_FAST,null,!1),new u(e.GOLURK,5,!1,!1,!1,"Automaton Pokémon",n.GROUND,n.GHOST,2.8,330,O.IRON_FIST,O.KLUTZ,O.NO_GUARD,483,89,124,80,55,80,55,90,50,169,h.MEDIUM_FAST,null,!1),new u(e.PAWNIARD,5,!1,!1,!1,"Sharp Blade Pokémon",n.DARK,n.STEEL,.5,10.2,O.DEFIANT,O.INNER_FOCUS,O.PRESSURE,340,45,85,70,40,40,60,120,35,68,h.MEDIUM_FAST,50,!1),new u(e.BISHARP,5,!1,!1,!1,"Sword Blade Pokémon",n.DARK,n.STEEL,1.6,70,O.DEFIANT,O.INNER_FOCUS,O.PRESSURE,490,65,125,100,60,70,70,45,35,172,h.MEDIUM_FAST,50,!1),new u(e.BOUFFALANT,5,!1,!1,!1,"Bash Buffalo Pokémon",n.NORMAL,null,1.6,94.6,O.RECKLESS,O.SAP_SIPPER,O.SOUNDPROOF,490,95,110,95,40,95,55,45,50,172,h.MEDIUM_FAST,50,!1),new u(e.RUFFLET,5,!1,!1,!1,"Eaglet Pokémon",n.NORMAL,n.FLYING,.5,10.5,O.KEEN_EYE,O.SHEER_FORCE,O.HUSTLE,350,70,83,50,37,50,60,190,50,70,h.SLOW,100,!1),new u(e.BRAVIARY,5,!1,!1,!1,"Valiant Pokémon",n.NORMAL,n.FLYING,1.5,41,O.KEEN_EYE,O.SHEER_FORCE,O.DEFIANT,510,100,123,75,57,75,80,60,50,179,h.SLOW,100,!1),new u(e.VULLABY,5,!1,!1,!1,"Diapered Pokémon",n.DARK,n.FLYING,.5,9,O.BIG_PECKS,O.OVERCOAT,O.WEAK_ARMOR,370,70,55,75,45,65,60,190,35,74,h.SLOW,0,!1),new u(e.MANDIBUZZ,5,!1,!1,!1,"Bone Vulture Pokémon",n.DARK,n.FLYING,1.2,39.5,O.BIG_PECKS,O.OVERCOAT,O.WEAK_ARMOR,510,110,65,105,55,95,80,60,35,179,h.SLOW,0,!1),new u(e.HEATMOR,5,!1,!1,!1,"Anteater Pokémon",n.FIRE,null,1.4,58,O.GLUTTONY,O.FLASH_FIRE,O.WHITE_SMOKE,484,85,97,66,105,66,65,90,50,169,h.MEDIUM_FAST,50,!1),new u(e.DURANT,5,!1,!1,!1,"Iron Ant Pokémon",n.BUG,n.STEEL,.3,33,O.SWARM,O.HUSTLE,O.TRUANT,484,58,109,112,48,48,109,90,50,169,h.MEDIUM_FAST,50,!1),new u(e.DEINO,5,!1,!1,!1,"Irate Pokémon",n.DARK,n.DRAGON,.8,17.3,O.HUSTLE,O.NONE,O.NONE,300,52,65,50,45,50,38,45,35,60,h.SLOW,50,!1),new u(e.ZWEILOUS,5,!1,!1,!1,"Hostile Pokémon",n.DARK,n.DRAGON,1.4,50,O.HUSTLE,O.NONE,O.NONE,420,72,85,70,65,70,58,45,35,147,h.SLOW,50,!1),new u(e.HYDREIGON,5,!1,!1,!1,"Brutal Pokémon",n.DARK,n.DRAGON,1.8,160,O.LEVITATE,O.NONE,O.NONE,600,92,105,90,125,90,98,45,35,300,h.SLOW,50,!1),new u(e.LARVESTA,5,!1,!1,!1,"Torch Pokémon",n.BUG,n.FIRE,1.1,28.8,O.FLAME_BODY,O.NONE,O.SWARM,360,55,85,55,50,55,60,45,50,72,h.SLOW,50,!1),new u(e.VOLCARONA,5,!1,!1,!1,"Sun Pokémon",n.BUG,n.FIRE,1.6,46,O.FLAME_BODY,O.NONE,O.SWARM,550,85,60,65,135,105,100,15,50,275,h.SLOW,50,!1),new u(e.COBALION,5,!0,!1,!1,"Iron Will Pokémon",n.STEEL,n.FIGHTING,2.1,250,O.JUSTIFIED,O.NONE,O.NONE,580,91,90,129,90,72,108,3,35,290,h.SLOW,null,!1),new u(e.TERRAKION,5,!0,!1,!1,"Cavern Pokémon",n.ROCK,n.FIGHTING,1.9,260,O.JUSTIFIED,O.NONE,O.NONE,580,91,129,90,72,90,108,3,35,290,h.SLOW,null,!1),new u(e.VIRIZION,5,!0,!1,!1,"Grassland Pokémon",n.GRASS,n.FIGHTING,2,200,O.JUSTIFIED,O.NONE,O.NONE,580,91,90,72,90,129,108,3,35,290,h.SLOW,null,!1),new u(e.TORNADUS,5,!0,!1,!1,"Cyclone Pokémon",n.FLYING,null,1.5,63,O.PRANKSTER,O.NONE,O.DEFIANT,580,79,115,70,125,80,111,3,90,290,h.SLOW,100,!1,!0,new K("Incarnate Forme","incarnate",n.FLYING,null,1.5,63,O.PRANKSTER,O.NONE,O.DEFIANT,580,79,115,70,125,80,111,3,90,290,!1,null,!0),new K("Therian Forme","therian",n.FLYING,null,1.4,63,O.REGENERATOR,O.NONE,O.REGENERATOR,580,79,100,80,110,90,121,3,90,290)),new u(e.THUNDURUS,5,!0,!1,!1,"Bolt Strike Pokémon",n.ELECTRIC,n.FLYING,1.5,61,O.PRANKSTER,O.NONE,O.DEFIANT,580,79,115,70,125,80,111,3,90,290,h.SLOW,100,!1,!0,new K("Incarnate Forme","incarnate",n.ELECTRIC,n.FLYING,1.5,61,O.PRANKSTER,O.NONE,O.DEFIANT,580,79,115,70,125,80,111,3,90,290,!1,null,!0),new K("Therian Forme","therian",n.ELECTRIC,n.FLYING,3,61,O.VOLT_ABSORB,O.NONE,O.VOLT_ABSORB,580,79,105,70,145,80,101,3,90,290)),new u(e.RESHIRAM,5,!1,!0,!1,"Vast White Pokémon",n.DRAGON,n.FIRE,3.2,330,O.TURBOBLAZE,O.NONE,O.NONE,680,100,120,100,150,120,90,3,0,340,h.SLOW,null,!1),new u(e.ZEKROM,5,!1,!0,!1,"Deep Black Pokémon",n.DRAGON,n.ELECTRIC,2.9,345,O.TERAVOLT,O.NONE,O.NONE,680,100,150,120,120,100,90,3,0,340,h.SLOW,null,!1),new u(e.LANDORUS,5,!0,!1,!1,"Abundance Pokémon",n.GROUND,n.FLYING,1.5,68,O.SAND_FORCE,O.NONE,O.SHEER_FORCE,600,89,125,90,115,80,101,3,90,300,h.SLOW,100,!1,!0,new K("Incarnate Forme","incarnate",n.GROUND,n.FLYING,1.5,68,O.SAND_FORCE,O.NONE,O.SHEER_FORCE,600,89,125,90,115,80,101,3,90,300,!1,null,!0),new K("Therian Forme","therian",n.GROUND,n.FLYING,1.3,68,O.INTIMIDATE,O.NONE,O.INTIMIDATE,600,89,145,90,105,80,91,3,90,300)),new u(e.KYUREM,5,!1,!0,!1,"Boundary Pokémon",n.DRAGON,n.ICE,3,325,O.PRESSURE,O.NONE,O.NONE,660,125,130,90,130,90,95,3,0,330,h.SLOW,null,!1,!0,new K("Normal","",n.DRAGON,n.ICE,3,325,O.PRESSURE,O.NONE,O.NONE,660,125,130,90,130,90,95,3,0,330,!1,null,!0),new K("Black","black",n.DRAGON,n.ICE,3.3,325,O.TERAVOLT,O.NONE,O.NONE,700,125,170,100,120,90,95,3,0,330),new K("White","white",n.DRAGON,n.ICE,3.6,325,O.TURBOBLAZE,O.NONE,O.NONE,700,125,120,90,170,100,95,3,0,330)),new u(e.KELDEO,5,!1,!1,!0,"Colt Pokémon",n.WATER,n.FIGHTING,1.4,48.5,O.JUSTIFIED,O.NONE,O.NONE,580,91,72,90,129,90,108,3,35,290,h.SLOW,null,!1,!0,new K("Ordinary Form","ordinary",n.WATER,n.FIGHTING,1.4,48.5,O.JUSTIFIED,O.NONE,O.NONE,580,91,72,90,129,90,108,3,35,290,!1,null,!0),new K("Resolute","resolute",n.WATER,n.FIGHTING,1.4,48.5,O.JUSTIFIED,O.NONE,O.NONE,580,91,72,90,129,90,108,3,35,290)),new u(e.MELOETTA,5,!1,!1,!0,"Melody Pokémon",n.NORMAL,n.PSYCHIC,.6,6.5,O.SERENE_GRACE,O.NONE,O.NONE,600,100,77,77,128,128,90,3,100,270,h.SLOW,null,!1,!0,new K("Aria Forme","aria",n.NORMAL,n.PSYCHIC,.6,6.5,O.SERENE_GRACE,O.NONE,O.NONE,600,100,77,77,128,128,90,3,100,270,!1,null,!0),new K("Pirouette Forme","pirouette",n.NORMAL,n.FIGHTING,.6,6.5,O.SERENE_GRACE,O.NONE,O.NONE,600,100,128,90,77,77,128,3,100,270,!1,null,!0)),new u(e.GENESECT,5,!1,!1,!0,"Paleozoic Pokémon",n.BUG,n.STEEL,1.5,82.5,O.DOWNLOAD,O.NONE,O.NONE,600,71,120,95,120,95,99,3,0,300,h.SLOW,null,!1,!0,new K("Normal","",n.BUG,n.STEEL,1.5,82.5,O.DOWNLOAD,O.NONE,O.NONE,600,71,120,95,120,95,99,3,0,300,!1,null,!0),new K("Shock Drive","shock",n.BUG,n.STEEL,1.5,82.5,O.DOWNLOAD,O.NONE,O.NONE,600,71,120,95,120,95,99,3,0,300),new K("Burn Drive","burn",n.BUG,n.STEEL,1.5,82.5,O.DOWNLOAD,O.NONE,O.NONE,600,71,120,95,120,95,99,3,0,300),new K("Chill Drive","chill",n.BUG,n.STEEL,1.5,82.5,O.DOWNLOAD,O.NONE,O.NONE,600,71,120,95,120,95,99,3,0,300),new K("Douse Drive","douse",n.BUG,n.STEEL,1.5,82.5,O.DOWNLOAD,O.NONE,O.NONE,600,71,120,95,120,95,99,3,0,300)),new u(e.CHESPIN,6,!1,!1,!1,"Spiny Nut Pokémon",n.GRASS,null,.4,9,O.OVERGROW,O.NONE,O.BULLETPROOF,313,56,61,65,48,45,38,45,70,63,h.MEDIUM_SLOW,87.5,!1),new u(e.QUILLADIN,6,!1,!1,!1,"Spiny Armor Pokémon",n.GRASS,null,.7,29,O.OVERGROW,O.NONE,O.BULLETPROOF,405,61,78,95,56,58,57,45,70,142,h.MEDIUM_SLOW,87.5,!1),new u(e.CHESNAUGHT,6,!1,!1,!1,"Spiny Armor Pokémon",n.GRASS,n.FIGHTING,1.6,90,O.OVERGROW,O.NONE,O.BULLETPROOF,530,88,107,122,74,75,64,45,70,239,h.MEDIUM_SLOW,87.5,!1),new u(e.FENNEKIN,6,!1,!1,!1,"Fox Pokémon",n.FIRE,null,.4,9.4,O.BLAZE,O.NONE,O.MAGICIAN,307,40,45,40,62,60,60,45,70,61,h.MEDIUM_SLOW,87.5,!1),new u(e.BRAIXEN,6,!1,!1,!1,"Fox Pokémon",n.FIRE,null,1,14.5,O.BLAZE,O.NONE,O.MAGICIAN,409,59,59,58,90,70,73,45,70,143,h.MEDIUM_SLOW,87.5,!1),new u(e.DELPHOX,6,!1,!1,!1,"Fox Pokémon",n.FIRE,n.PSYCHIC,1.5,39,O.BLAZE,O.NONE,O.MAGICIAN,534,75,69,72,114,100,104,45,70,240,h.MEDIUM_SLOW,87.5,!1),new u(e.FROAKIE,6,!1,!1,!1,"Bubble Frog Pokémon",n.WATER,null,.3,7,O.TORRENT,O.NONE,O.PROTEAN,314,41,56,40,62,44,71,45,70,63,h.MEDIUM_SLOW,87.5,!1,!1,new K("Normal","",n.WATER,null,.3,7,O.TORRENT,O.NONE,O.PROTEAN,314,41,56,40,62,44,71,45,70,63,!1,null,!0),new K("Battle Bond","battle-bond",n.WATER,null,.3,7,O.TORRENT,O.NONE,O.PROTEAN,314,41,56,40,62,44,71,45,70,63,!1,"",!0)),new u(e.FROGADIER,6,!1,!1,!1,"Bubble Frog Pokémon",n.WATER,null,.6,10.9,O.TORRENT,O.NONE,O.PROTEAN,405,54,63,52,83,56,97,45,70,142,h.MEDIUM_SLOW,87.5,!1,!1,new K("Normal","",n.WATER,null,.6,10.9,O.TORRENT,O.NONE,O.PROTEAN,405,54,63,52,83,56,97,45,70,142,!1,null,!0),new K("Battle Bond","battle-bond",n.WATER,null,.6,10.9,O.TORRENT,O.NONE,O.PROTEAN,405,54,63,52,83,56,97,45,70,142,!1,"",!0)),new u(e.GRENINJA,6,!1,!1,!1,"Ninja Pokémon",n.WATER,n.DARK,1.5,40,O.TORRENT,O.NONE,O.PROTEAN,530,72,95,67,103,71,122,45,70,239,h.MEDIUM_SLOW,87.5,!1,!1,new K("Normal","",n.WATER,n.DARK,1.5,40,O.TORRENT,O.NONE,O.PROTEAN,530,72,95,67,103,71,122,45,70,239,!1,null,!0),new K("Battle Bond","battle-bond",n.WATER,n.DARK,1.5,40,O.BATTLE_BOND,O.NONE,O.BATTLE_BOND,530,72,95,67,103,71,122,45,70,239,!1,"",!0),new K("Ash","ash",n.WATER,n.DARK,1.5,40,O.BATTLE_BOND,O.NONE,O.BATTLE_BOND,640,72,145,67,153,71,132,45,70,239)),new u(e.BUNNELBY,6,!1,!1,!1,"Digging Pokémon",n.NORMAL,null,.4,5,O.PICKUP,O.CHEEK_POUCH,O.HUGE_POWER,237,38,36,38,32,36,57,255,50,47,h.MEDIUM_FAST,50,!1),new u(e.DIGGERSBY,6,!1,!1,!1,"Digging Pokémon",n.NORMAL,n.GROUND,1,42.4,O.PICKUP,O.CHEEK_POUCH,O.HUGE_POWER,423,85,56,77,50,77,78,127,50,148,h.MEDIUM_FAST,50,!1),new u(e.FLETCHLING,6,!1,!1,!1,"Tiny Robin Pokémon",n.NORMAL,n.FLYING,.3,1.7,O.BIG_PECKS,O.NONE,O.GALE_WINGS,278,45,50,43,40,38,62,255,50,56,h.MEDIUM_SLOW,50,!1),new u(e.FLETCHINDER,6,!1,!1,!1,"Ember Pokémon",n.FIRE,n.FLYING,.7,16,O.FLAME_BODY,O.NONE,O.GALE_WINGS,382,62,73,55,56,52,84,120,50,134,h.MEDIUM_SLOW,50,!1),new u(e.TALONFLAME,6,!1,!1,!1,"Scorching Pokémon",n.FIRE,n.FLYING,1.2,24.5,O.FLAME_BODY,O.NONE,O.GALE_WINGS,499,78,81,71,74,69,126,45,50,175,h.MEDIUM_SLOW,50,!1),new u(e.SCATTERBUG,6,!1,!1,!1,"Scatterdust Pokémon",n.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,h.MEDIUM_FAST,50,!1,!1,new K("Meadow Pattern","meadow",n.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new K("Icy Snow Pattern","icy-snow",n.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new K("Polar Pattern","polar",n.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new K("Tundra Pattern","tundra",n.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new K("Continental Pattern","continental",n.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new K("Garden Pattern","garden",n.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new K("Elegant Pattern","elegant",n.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new K("Modern Pattern","modern",n.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new K("Marine Pattern","marine",n.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new K("Archipelago Pattern","archipelago",n.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new K("High Plains Pattern","high-plains",n.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new K("Sandstorm Pattern","sandstorm",n.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new K("River Pattern","river",n.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new K("Monsoon Pattern","monsoon",n.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new K("Savanna Pattern","savanna",n.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new K("Sun Pattern","sun",n.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new K("Ocean Pattern","ocean",n.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new K("Jungle Pattern","jungle",n.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new K("Fancy Pattern","fancy",n.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new K("Poké Ball Pattern","poke-ball",n.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0)),new u(e.SPEWPA,6,!1,!1,!1,"Scatterdust Pokémon",n.BUG,null,.3,8.4,O.SHED_SKIN,O.SHED_SKIN,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,h.MEDIUM_FAST,50,!1,!1,new K("Meadow Pattern","meadow",n.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new K("Icy Snow Pattern","icy-snow",n.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new K("Polar Pattern","polar",n.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new K("Tundra Pattern","tundra",n.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new K("Continental Pattern","continental",n.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new K("Garden Pattern","garden",n.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new K("Elegant Pattern","elegant",n.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new K("Modern Pattern","modern",n.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new K("Marine Pattern","marine",n.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new K("Archipelago Pattern","archipelago",n.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new K("High Plains Pattern","high-plains",n.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new K("Sandstorm Pattern","sandstorm",n.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new K("River Pattern","river",n.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new K("Monsoon Pattern","monsoon",n.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new K("Savanna Pattern","savanna",n.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new K("Sun Pattern","sun",n.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new K("Ocean Pattern","ocean",n.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new K("Jungle Pattern","jungle",n.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new K("Fancy Pattern","fancy",n.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new K("Poké Ball Pattern","poke-ball",n.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0)),new u(e.VIVILLON,6,!1,!1,!1,"Scale Pokémon",n.BUG,n.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,h.MEDIUM_FAST,50,!1,!1,new K("Meadow Pattern","meadow",n.BUG,n.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,!1,null,!0),new K("Icy Snow Pattern","icy-snow",n.BUG,n.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,!1,null,!0),new K("Polar Pattern","polar",n.BUG,n.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,!1,null,!0),new K("Tundra Pattern","tundra",n.BUG,n.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,!1,null,!0),new K("Continental Pattern","continental",n.BUG,n.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,!1,null,!0),new K("Garden Pattern","garden",n.BUG,n.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,!1,null,!0),new K("Elegant Pattern","elegant",n.BUG,n.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,!1,null,!0),new K("Modern Pattern","modern",n.BUG,n.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,!1,null,!0),new K("Marine Pattern","marine",n.BUG,n.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,!1,null,!0),new K("Archipelago Pattern","archipelago",n.BUG,n.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,!1,null,!0),new K("High Plains Pattern","high-plains",n.BUG,n.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,!1,null,!0),new K("Sandstorm Pattern","sandstorm",n.BUG,n.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,!1,null,!0),new K("River Pattern","river",n.BUG,n.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,!1,null,!0),new K("Monsoon Pattern","monsoon",n.BUG,n.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,!1,null,!0),new K("Savanna Pattern","savanna",n.BUG,n.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,!1,null,!0),new K("Sun Pattern","sun",n.BUG,n.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,!1,null,!0),new K("Ocean Pattern","ocean",n.BUG,n.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,!1,null,!0),new K("Jungle Pattern","jungle",n.BUG,n.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,!1,null,!0),new K("Fancy Pattern","fancy",n.BUG,n.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,!1,null,!0),new K("Poké Ball Pattern","poke-ball",n.BUG,n.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,!1,null,!0)),new u(e.LITLEO,6,!1,!1,!1,"Lion Cub Pokémon",n.FIRE,n.NORMAL,.6,13.5,O.RIVALRY,O.UNNERVE,O.MOXIE,369,62,50,58,73,54,72,220,70,74,h.MEDIUM_SLOW,12.5,!1),new u(e.PYROAR,6,!1,!1,!1,"Royal Pokémon",n.FIRE,n.NORMAL,1.5,81.5,O.RIVALRY,O.UNNERVE,O.MOXIE,507,86,68,72,109,66,106,65,70,177,h.MEDIUM_SLOW,12.5,!0),new u(e.FLABEBE,6,!1,!1,!1,"Single Bloom Pokémon",n.FAIRY,null,.1,.1,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,303,44,38,39,61,79,42,225,70,61,h.MEDIUM_FAST,0,!1,!1,new K("Red Flower","red",n.FAIRY,null,.1,.1,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,303,44,38,39,61,79,42,225,70,61,!1,null,!0),new K("Yellow Flower","yellow",n.FAIRY,null,.1,.1,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,303,44,38,39,61,79,42,225,70,61,!1,null,!0),new K("Orange Flower","orange",n.FAIRY,null,.1,.1,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,303,44,38,39,61,79,42,225,70,61,!1,null,!0),new K("Blue Flower","blue",n.FAIRY,null,.1,.1,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,303,44,38,39,61,79,42,225,70,61,!1,null,!0),new K("White Flower","white",n.FAIRY,null,.1,.1,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,303,44,38,39,61,79,42,225,70,61,!1,null,!0)),new u(e.FLOETTE,6,!1,!1,!1,"Single Bloom Pokémon",n.FAIRY,null,.2,.9,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,371,54,45,47,75,98,52,120,70,130,h.MEDIUM_FAST,0,!1,!1,new K("Red Flower","red",n.FAIRY,null,.2,.9,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,371,54,45,47,75,98,52,120,70,130,!1,null,!0),new K("Yellow Flower","yellow",n.FAIRY,null,.2,.9,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,371,54,45,47,75,98,52,120,70,130,!1,null,!0),new K("Orange Flower","orange",n.FAIRY,null,.2,.9,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,371,54,45,47,75,98,52,120,70,130,!1,null,!0),new K("Blue Flower","blue",n.FAIRY,null,.2,.9,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,371,54,45,47,75,98,52,120,70,130,!1,null,!0),new K("White Flower","white",n.FAIRY,null,.2,.9,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,371,54,45,47,75,98,52,120,70,130,!1,null,!0)),new u(e.FLORGES,6,!1,!1,!1,"Garden Pokémon",n.FAIRY,null,1.1,10,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,552,78,65,68,112,154,75,45,70,248,h.MEDIUM_FAST,0,!1,!1,new K("Red Flower","red",n.FAIRY,null,1.1,10,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,552,78,65,68,112,154,75,45,70,248,!1,null,!0),new K("Yellow Flower","yellow",n.FAIRY,null,1.1,10,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,552,78,65,68,112,154,75,45,70,248,!1,null,!0),new K("Orange Flower","orange",n.FAIRY,null,1.1,10,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,552,78,65,68,112,154,75,45,70,248,!1,null,!0),new K("Blue Flower","blue",n.FAIRY,null,1.1,10,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,552,78,65,68,112,154,75,45,70,248,!1,null,!0),new K("White Flower","white",n.FAIRY,null,1.1,10,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,552,78,65,68,112,154,75,45,70,248,!1,null,!0)),new u(e.SKIDDO,6,!1,!1,!1,"Mount Pokémon",n.GRASS,null,.9,31,O.SAP_SIPPER,O.NONE,O.GRASS_PELT,350,66,65,48,62,57,52,200,70,70,h.MEDIUM_FAST,50,!1),new u(e.GOGOAT,6,!1,!1,!1,"Mount Pokémon",n.GRASS,null,1.7,91,O.SAP_SIPPER,O.NONE,O.GRASS_PELT,531,123,100,62,97,81,68,45,70,186,h.MEDIUM_FAST,50,!1),new u(e.PANCHAM,6,!1,!1,!1,"Playful Pokémon",n.FIGHTING,null,.6,8,O.IRON_FIST,O.MOLD_BREAKER,O.SCRAPPY,348,67,82,62,46,48,43,220,50,70,h.MEDIUM_FAST,50,!1),new u(e.PANGORO,6,!1,!1,!1,"Daunting Pokémon",n.FIGHTING,n.DARK,2.1,136,O.IRON_FIST,O.MOLD_BREAKER,O.SCRAPPY,495,95,124,78,69,71,58,65,50,173,h.MEDIUM_FAST,50,!1),new u(e.FURFROU,6,!1,!1,!1,"Poodle Pokémon",n.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,h.MEDIUM_FAST,50,!1,!0,new K("Natural Form","",n.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,!1,null,!0),new K("Heart Trim","heart",n.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,!1,null,!0),new K("Star Trim","star",n.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,!1,null,!0),new K("Diamond Trim","diamond",n.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,!1,null,!0),new K("Debutante Trim","debutante",n.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,!1,null,!0),new K("Matron Trim","matron",n.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,!1,null,!0),new K("Dandy Trim","dandy",n.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,!1,null,!0),new K("La Reine Trim","la-reine",n.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,!1,null,!0),new K("Kabuki Trim","kabuki",n.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,!1,null,!0),new K("Pharaoh Trim","pharaoh",n.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,!1,null,!0)),new u(e.ESPURR,6,!1,!1,!1,"Restraint Pokémon",n.PSYCHIC,null,.3,3.5,O.KEEN_EYE,O.INFILTRATOR,O.OWN_TEMPO,355,62,48,54,63,60,68,190,50,71,h.MEDIUM_FAST,50,!1),new u(e.MEOWSTIC,6,!1,!1,!1,"Constraint Pokémon",n.PSYCHIC,null,.6,8.5,O.KEEN_EYE,O.INFILTRATOR,O.PRANKSTER,466,74,48,76,83,81,104,75,50,163,h.MEDIUM_FAST,50,!1,!1,new K("Male","male",n.PSYCHIC,null,.6,8.5,O.KEEN_EYE,O.INFILTRATOR,O.PRANKSTER,466,74,48,76,83,81,104,75,50,163,!1,"",!0),new K("Female","female",n.PSYCHIC,null,.6,8.5,O.KEEN_EYE,O.INFILTRATOR,O.COMPETITIVE,466,74,48,76,83,81,104,75,50,163,!1,null,!0)),new u(e.HONEDGE,6,!1,!1,!1,"Sword Pokémon",n.STEEL,n.GHOST,.8,2,O.NO_GUARD,O.NONE,O.NONE,325,45,80,100,35,37,28,180,50,65,h.MEDIUM_FAST,50,!1),new u(e.DOUBLADE,6,!1,!1,!1,"Sword Pokémon",n.STEEL,n.GHOST,.8,4.5,O.NO_GUARD,O.NONE,O.NONE,448,59,110,150,45,49,35,90,50,157,h.MEDIUM_FAST,50,!1),new u(e.AEGISLASH,6,!1,!1,!1,"Royal Sword Pokémon",n.STEEL,n.GHOST,1.7,53,O.STANCE_CHANGE,O.NONE,O.NONE,500,60,50,140,50,140,60,45,50,250,h.MEDIUM_FAST,50,!1,!0,new K("Shield Forme","shield",n.STEEL,n.GHOST,1.7,53,O.STANCE_CHANGE,O.NONE,O.NONE,500,60,50,140,50,140,60,45,50,250,!1,"",!0),new K("Blade Forme","blade",n.STEEL,n.GHOST,1.7,53,O.STANCE_CHANGE,O.NONE,O.NONE,500,60,140,50,140,50,60,45,50,250)),new u(e.SPRITZEE,6,!1,!1,!1,"Perfume Pokémon",n.FAIRY,null,.2,.5,O.HEALER,O.NONE,O.AROMA_VEIL,341,78,52,60,63,65,23,200,50,68,h.MEDIUM_FAST,50,!1),new u(e.AROMATISSE,6,!1,!1,!1,"Fragrance Pokémon",n.FAIRY,null,.8,15.5,O.HEALER,O.NONE,O.AROMA_VEIL,462,101,72,72,99,89,29,140,50,162,h.MEDIUM_FAST,50,!1),new u(e.SWIRLIX,6,!1,!1,!1,"Cotton Candy Pokémon",n.FAIRY,null,.4,3.5,O.SWEET_VEIL,O.NONE,O.UNBURDEN,341,62,48,66,59,57,49,200,50,68,h.MEDIUM_FAST,50,!1),new u(e.SLURPUFF,6,!1,!1,!1,"Meringue Pokémon",n.FAIRY,null,.8,5,O.SWEET_VEIL,O.NONE,O.UNBURDEN,480,82,80,86,85,75,72,140,50,168,h.MEDIUM_FAST,50,!1),new u(e.INKAY,6,!1,!1,!1,"Revolving Pokémon",n.DARK,n.PSYCHIC,.4,3.5,O.CONTRARY,O.SUCTION_CUPS,O.INFILTRATOR,288,53,54,53,37,46,45,190,50,58,h.MEDIUM_FAST,50,!1),new u(e.MALAMAR,6,!1,!1,!1,"Overturning Pokémon",n.DARK,n.PSYCHIC,1.5,47,O.CONTRARY,O.SUCTION_CUPS,O.INFILTRATOR,482,86,92,88,68,75,73,80,50,169,h.MEDIUM_FAST,50,!1),new u(e.BINACLE,6,!1,!1,!1,"Two-Handed Pokémon",n.ROCK,n.WATER,.5,31,O.TOUGH_CLAWS,O.SNIPER,O.PICKPOCKET,306,42,52,67,39,56,50,120,50,61,h.MEDIUM_FAST,50,!1),new u(e.BARBARACLE,6,!1,!1,!1,"Collective Pokémon",n.ROCK,n.WATER,1.3,96,O.TOUGH_CLAWS,O.SNIPER,O.PICKPOCKET,500,72,105,115,54,86,68,45,50,175,h.MEDIUM_FAST,50,!1),new u(e.SKRELP,6,!1,!1,!1,"Mock Kelp Pokémon",n.POISON,n.WATER,.5,7.3,O.POISON_POINT,O.POISON_TOUCH,O.ADAPTABILITY,320,50,60,60,60,60,30,225,50,64,h.MEDIUM_FAST,50,!1),new u(e.DRAGALGE,6,!1,!1,!1,"Mock Kelp Pokémon",n.POISON,n.DRAGON,1.8,81.5,O.POISON_POINT,O.POISON_TOUCH,O.ADAPTABILITY,494,65,75,90,97,123,44,55,50,173,h.MEDIUM_FAST,50,!1),new u(e.CLAUNCHER,6,!1,!1,!1,"Water Gun Pokémon",n.WATER,null,.5,8.3,O.MEGA_LAUNCHER,O.NONE,O.NONE,330,50,53,62,58,63,44,225,50,66,h.SLOW,50,!1),new u(e.CLAWITZER,6,!1,!1,!1,"Howitzer Pokémon",n.WATER,null,1.3,35.3,O.MEGA_LAUNCHER,O.NONE,O.NONE,500,71,73,88,120,89,59,55,50,100,h.SLOW,50,!1),new u(e.HELIOPTILE,6,!1,!1,!1,"Generator Pokémon",n.ELECTRIC,n.NORMAL,.5,6,O.DRY_SKIN,O.SAND_VEIL,O.SOLAR_POWER,289,44,38,33,61,43,70,190,50,58,h.MEDIUM_FAST,50,!1),new u(e.HELIOLISK,6,!1,!1,!1,"Generator Pokémon",n.ELECTRIC,n.NORMAL,1,21,O.DRY_SKIN,O.SAND_VEIL,O.SOLAR_POWER,481,62,55,52,109,94,109,75,50,168,h.MEDIUM_FAST,50,!1),new u(e.TYRUNT,6,!1,!1,!1,"Royal Heir Pokémon",n.ROCK,n.DRAGON,.8,26,O.STRONG_JAW,O.NONE,O.STURDY,362,58,89,77,45,45,48,45,50,72,h.MEDIUM_FAST,87.5,!1),new u(e.TYRANTRUM,6,!1,!1,!1,"Despot Pokémon",n.ROCK,n.DRAGON,2.5,270,O.STRONG_JAW,O.NONE,O.ROCK_HEAD,521,82,121,119,69,59,71,45,50,182,h.MEDIUM_FAST,87.5,!1),new u(e.AMAURA,6,!1,!1,!1,"Tundra Pokémon",n.ROCK,n.ICE,1.3,25.2,O.REFRIGERATE,O.NONE,O.SNOW_WARNING,362,77,59,50,67,63,46,45,50,72,h.MEDIUM_FAST,87.5,!1),new u(e.AURORUS,6,!1,!1,!1,"Tundra Pokémon",n.ROCK,n.ICE,2.7,225,O.REFRIGERATE,O.NONE,O.SNOW_WARNING,521,123,77,72,99,92,58,45,50,104,h.MEDIUM_FAST,87.5,!1),new u(e.SYLVEON,6,!1,!1,!1,"Intertwining Pokémon",n.FAIRY,null,1,23.5,O.CUTE_CHARM,O.NONE,O.PIXILATE,525,95,65,65,110,130,60,45,50,184,h.MEDIUM_FAST,87.5,!1),new u(e.HAWLUCHA,6,!1,!1,!1,"Wrestling Pokémon",n.FIGHTING,n.FLYING,.8,21.5,O.LIMBER,O.UNBURDEN,O.MOLD_BREAKER,500,78,92,75,74,63,118,100,50,175,h.MEDIUM_FAST,50,!1),new u(e.DEDENNE,6,!1,!1,!1,"Antenna Pokémon",n.ELECTRIC,n.FAIRY,.2,2.2,O.CHEEK_POUCH,O.PICKUP,O.PLUS,431,67,58,57,81,67,101,180,50,151,h.MEDIUM_FAST,50,!1),new u(e.CARBINK,6,!1,!1,!1,"Jewel Pokémon",n.ROCK,n.FAIRY,.3,5.7,O.CLEAR_BODY,O.NONE,O.STURDY,500,50,50,150,50,150,50,60,50,100,h.SLOW,null,!1),new u(e.GOOMY,6,!1,!1,!1,"Soft Tissue Pokémon",n.DRAGON,null,.3,2.8,O.SAP_SIPPER,O.HYDRATION,O.GOOEY,300,45,50,35,55,75,40,45,35,60,h.SLOW,50,!1),new u(e.SLIGGOO,6,!1,!1,!1,"Soft Tissue Pokémon",n.DRAGON,null,.8,17.5,O.SAP_SIPPER,O.HYDRATION,O.GOOEY,452,68,75,53,83,113,60,45,35,158,h.SLOW,50,!1),new u(e.GOODRA,6,!1,!1,!1,"Dragon Pokémon",n.DRAGON,null,2,150.5,O.SAP_SIPPER,O.HYDRATION,O.GOOEY,600,90,100,70,110,150,80,45,35,300,h.SLOW,50,!1),new u(e.KLEFKI,6,!1,!1,!1,"Key Ring Pokémon",n.STEEL,n.FAIRY,.2,3,O.PRANKSTER,O.NONE,O.MAGICIAN,470,57,80,91,80,87,75,75,50,165,h.FAST,50,!1),new u(e.PHANTUMP,6,!1,!1,!1,"Stump Pokémon",n.GHOST,n.GRASS,.4,7,O.NATURAL_CURE,O.FRISK,O.HARVEST,309,43,70,48,50,60,38,120,50,62,h.MEDIUM_FAST,50,!1),new u(e.TREVENANT,6,!1,!1,!1,"Elder Tree Pokémon",n.GHOST,n.GRASS,1.5,71,O.NATURAL_CURE,O.FRISK,O.HARVEST,474,85,110,76,65,82,56,60,50,166,h.MEDIUM_FAST,50,!1),new u(e.PUMPKABOO,6,!1,!1,!1,"Pumpkin Pokémon",n.GHOST,n.GRASS,.4,5,O.PICKUP,O.FRISK,O.INSOMNIA,335,49,66,70,44,55,51,120,50,67,h.MEDIUM_FAST,50,!1,!1,new K("Average Size","",n.GHOST,n.GRASS,.4,5,O.PICKUP,O.FRISK,O.INSOMNIA,335,49,66,70,44,55,51,120,50,67,!1,null,!0),new K("Small Size","small",n.GHOST,n.GRASS,.3,3.5,O.PICKUP,O.FRISK,O.INSOMNIA,335,44,66,70,44,55,56,120,50,67,!1,"",!0),new K("Large Size","large",n.GHOST,n.GRASS,.5,7.5,O.PICKUP,O.FRISK,O.INSOMNIA,335,54,66,70,44,55,46,120,50,67,!1,"",!0),new K("Super Size","super",n.GHOST,n.GRASS,.8,15,O.PICKUP,O.FRISK,O.INSOMNIA,335,59,66,70,44,55,41,120,50,67,!1,"",!0)),new u(e.GOURGEIST,6,!1,!1,!1,"Pumpkin Pokémon",n.GHOST,n.GRASS,.9,12.5,O.PICKUP,O.FRISK,O.INSOMNIA,494,65,90,122,58,75,84,60,50,173,h.MEDIUM_FAST,50,!1,!1,new K("Average Size","",n.GHOST,n.GRASS,.9,12.5,O.PICKUP,O.FRISK,O.INSOMNIA,494,65,90,122,58,75,84,60,50,173,!1,null,!0),new K("Small Size","small",n.GHOST,n.GRASS,.7,9.5,O.PICKUP,O.FRISK,O.INSOMNIA,494,55,85,122,58,75,99,60,50,173,!1,"",!0),new K("Large Size","large",n.GHOST,n.GRASS,1.1,14,O.PICKUP,O.FRISK,O.INSOMNIA,494,75,95,122,58,75,69,60,50,173,!1,"",!0),new K("Super Size","super",n.GHOST,n.GRASS,1.7,39,O.PICKUP,O.FRISK,O.INSOMNIA,494,85,100,122,58,75,54,60,50,173,!1,"",!0)),new u(e.BERGMITE,6,!1,!1,!1,"Ice Chunk Pokémon",n.ICE,null,1,99.5,O.OWN_TEMPO,O.ICE_BODY,O.STURDY,304,55,69,85,32,35,28,190,50,61,h.MEDIUM_FAST,50,!1),new u(e.AVALUGG,6,!1,!1,!1,"Iceberg Pokémon",n.ICE,null,2,505,O.OWN_TEMPO,O.ICE_BODY,O.STURDY,514,95,117,184,44,46,28,55,50,180,h.MEDIUM_FAST,50,!1),new u(e.NOIBAT,6,!1,!1,!1,"Sound Wave Pokémon",n.FLYING,n.DRAGON,.5,8,O.FRISK,O.INFILTRATOR,O.TELEPATHY,245,40,30,35,45,40,55,190,50,49,h.MEDIUM_FAST,50,!1),new u(e.NOIVERN,6,!1,!1,!1,"Sound Wave Pokémon",n.FLYING,n.DRAGON,1.5,85,O.FRISK,O.INFILTRATOR,O.TELEPATHY,535,85,70,80,97,80,123,45,50,187,h.MEDIUM_FAST,50,!1),new u(e.XERNEAS,6,!1,!0,!1,"Life Pokémon",n.FAIRY,null,3,215,O.FAIRY_AURA,O.NONE,O.NONE,680,126,131,95,131,98,99,45,0,340,h.SLOW,null,!1,!0,new K("Neutral Mode","neutral",n.FAIRY,null,3,215,O.FAIRY_AURA,O.NONE,O.NONE,680,126,131,95,131,98,99,45,0,340,!1,null,!0),new K("Active Mode","active",n.FAIRY,null,3,215,O.FAIRY_AURA,O.NONE,O.NONE,680,126,131,95,131,98,99,45,0,340)),new u(e.YVELTAL,6,!1,!0,!1,"Destruction Pokémon",n.DARK,n.FLYING,5.8,203,O.DARK_AURA,O.NONE,O.NONE,680,126,131,95,131,98,99,45,0,340,h.SLOW,null,!1),new u(e.ZYGARDE,6,!1,!0,!1,"Order Pokémon",n.DRAGON,n.GROUND,5,305,O.AURA_BREAK,O.NONE,O.NONE,600,108,100,121,81,95,95,3,0,300,h.SLOW,null,!1,!1,new K("50% Forme","50",n.DRAGON,n.GROUND,5,305,O.AURA_BREAK,O.NONE,O.NONE,600,108,100,121,81,95,95,3,0,300,!1,"",!0),new K("10% Forme","10",n.DRAGON,n.GROUND,1.2,33.5,O.AURA_BREAK,O.NONE,O.NONE,486,54,100,71,61,85,115,3,0,300,!1,null,!0),new K("50% Forme Power Construct","50-pc",n.DRAGON,n.GROUND,5,305,O.POWER_CONSTRUCT,O.NONE,O.NONE,600,108,100,121,81,95,95,3,0,300,!1,"",!0),new K("10% Forme Power Construct","10-pc",n.DRAGON,n.GROUND,1.2,33.5,O.POWER_CONSTRUCT,O.NONE,O.NONE,486,54,100,71,61,85,115,3,0,300,!1,"10",!0),new K("Complete Forme (50% PC)","complete",n.DRAGON,n.GROUND,4.5,610,O.POWER_CONSTRUCT,O.NONE,O.NONE,708,216,100,121,91,95,85,3,0,300),new K("Complete Forme (10% PC)","10-complete",n.DRAGON,n.GROUND,4.5,610,O.POWER_CONSTRUCT,O.NONE,O.NONE,708,216,100,121,91,95,85,3,0,300,!1,"complete")),new u(e.DIANCIE,6,!1,!1,!0,"Jewel Pokémon",n.ROCK,n.FAIRY,.7,8.8,O.CLEAR_BODY,O.NONE,O.NONE,600,50,100,150,100,150,50,3,50,300,h.SLOW,null,!1,!0,new K("Normal","",n.ROCK,n.FAIRY,.7,8.8,O.CLEAR_BODY,O.NONE,O.NONE,600,50,100,150,100,150,50,3,50,300,!1,null,!0),new K("Mega",Ee.MEGA,n.ROCK,n.FAIRY,1.1,27.8,O.MAGIC_BOUNCE,O.NONE,O.NONE,700,50,160,110,160,110,110,3,50,300)),new u(e.HOOPA,6,!1,!1,!0,"Mischief Pokémon",n.PSYCHIC,n.GHOST,.5,9,O.MAGICIAN,O.NONE,O.NONE,600,80,110,60,150,130,70,3,100,270,h.SLOW,null,!1,!1,new K("Hoopa Confined","",n.PSYCHIC,n.GHOST,.5,9,O.MAGICIAN,O.NONE,O.NONE,600,80,110,60,150,130,70,3,100,270,!1,null,!0),new K("Hoopa Unbound","unbound",n.PSYCHIC,n.DARK,6.5,490,O.MAGICIAN,O.NONE,O.NONE,680,80,160,60,170,130,80,3,100,270)),new u(e.VOLCANION,6,!1,!1,!0,"Steam Pokémon",n.FIRE,n.WATER,1.7,195,O.WATER_ABSORB,O.NONE,O.NONE,600,80,110,120,130,90,70,3,100,300,h.SLOW,null,!1),new u(e.ROWLET,7,!1,!1,!1,"Grass Quill Pokémon",n.GRASS,n.FLYING,.3,1.5,O.OVERGROW,O.NONE,O.LONG_REACH,320,68,55,55,50,50,42,45,50,64,h.MEDIUM_SLOW,87.5,!1),new u(e.DARTRIX,7,!1,!1,!1,"Blade Quill Pokémon",n.GRASS,n.FLYING,.7,16,O.OVERGROW,O.NONE,O.LONG_REACH,420,78,75,75,70,70,52,45,50,147,h.MEDIUM_SLOW,87.5,!1),new u(e.DECIDUEYE,7,!1,!1,!1,"Arrow Quill Pokémon",n.GRASS,n.GHOST,1.6,36.6,O.OVERGROW,O.NONE,O.LONG_REACH,530,78,107,75,100,100,70,45,50,265,h.MEDIUM_SLOW,87.5,!1),new u(e.LITTEN,7,!1,!1,!1,"Fire Cat Pokémon",n.FIRE,null,.4,4.3,O.BLAZE,O.NONE,O.INTIMIDATE,320,45,65,40,60,40,70,45,50,64,h.MEDIUM_SLOW,87.5,!1),new u(e.TORRACAT,7,!1,!1,!1,"Fire Cat Pokémon",n.FIRE,null,.7,25,O.BLAZE,O.NONE,O.INTIMIDATE,420,65,85,50,80,50,90,45,50,147,h.MEDIUM_SLOW,87.5,!1),new u(e.INCINEROAR,7,!1,!1,!1,"Heel Pokémon",n.FIRE,n.DARK,1.8,83,O.BLAZE,O.NONE,O.INTIMIDATE,530,95,115,90,80,90,60,45,50,265,h.MEDIUM_SLOW,87.5,!1),new u(e.POPPLIO,7,!1,!1,!1,"Sea Lion Pokémon",n.WATER,null,.4,7.5,O.TORRENT,O.NONE,O.LIQUID_VOICE,320,50,54,54,66,56,40,45,50,64,h.MEDIUM_SLOW,87.5,!1),new u(e.BRIONNE,7,!1,!1,!1,"Pop Star Pokémon",n.WATER,null,.6,17.5,O.TORRENT,O.NONE,O.LIQUID_VOICE,420,60,69,69,91,81,50,45,50,147,h.MEDIUM_SLOW,87.5,!1),new u(e.PRIMARINA,7,!1,!1,!1,"Soloist Pokémon",n.WATER,n.FAIRY,1.8,44,O.TORRENT,O.NONE,O.LIQUID_VOICE,530,80,74,74,126,116,60,45,50,265,h.MEDIUM_SLOW,87.5,!1),new u(e.PIKIPEK,7,!1,!1,!1,"Woodpecker Pokémon",n.NORMAL,n.FLYING,.3,1.2,O.KEEN_EYE,O.SKILL_LINK,O.PICKUP,265,35,75,30,30,30,65,255,70,53,h.MEDIUM_FAST,50,!1),new u(e.TRUMBEAK,7,!1,!1,!1,"Bugle Beak Pokémon",n.NORMAL,n.FLYING,.6,14.8,O.KEEN_EYE,O.SKILL_LINK,O.PICKUP,355,55,85,50,40,50,75,120,70,124,h.MEDIUM_FAST,50,!1),new u(e.TOUCANNON,7,!1,!1,!1,"Cannon Pokémon",n.NORMAL,n.FLYING,1.1,26,O.KEEN_EYE,O.SKILL_LINK,O.SHEER_FORCE,485,80,120,75,75,75,60,45,70,218,h.MEDIUM_FAST,50,!1),new u(e.YUNGOOS,7,!1,!1,!1,"Loitering Pokémon",n.NORMAL,null,.4,6,O.STAKEOUT,O.STRONG_JAW,O.ADAPTABILITY,253,48,70,30,30,30,45,255,70,51,h.MEDIUM_FAST,50,!1),new u(e.GUMSHOOS,7,!1,!1,!1,"Stakeout Pokémon",n.NORMAL,null,.7,14.2,O.STAKEOUT,O.STRONG_JAW,O.ADAPTABILITY,418,88,110,60,55,60,45,127,70,146,h.MEDIUM_FAST,50,!1),new u(e.GRUBBIN,7,!1,!1,!1,"Larva Pokémon",n.BUG,null,.4,4.4,O.SWARM,O.NONE,O.NONE,300,47,62,45,55,45,46,255,50,60,h.MEDIUM_FAST,50,!1),new u(e.CHARJABUG,7,!1,!1,!1,"Battery Pokémon",n.BUG,n.ELECTRIC,.5,10.5,O.BATTERY,O.NONE,O.NONE,400,57,82,95,55,75,36,120,50,140,h.MEDIUM_FAST,50,!1),new u(e.VIKAVOLT,7,!1,!1,!1,"Stag Beetle Pokémon",n.BUG,n.ELECTRIC,1.5,45,O.LEVITATE,O.NONE,O.NONE,500,77,70,90,145,75,43,45,50,250,h.MEDIUM_FAST,50,!1),new u(e.CRABRAWLER,7,!1,!1,!1,"Boxing Pokémon",n.FIGHTING,null,.6,7,O.HYPER_CUTTER,O.IRON_FIST,O.ANGER_POINT,338,47,82,57,42,47,63,225,70,68,h.MEDIUM_FAST,50,!1),new u(e.CRABOMINABLE,7,!1,!1,!1,"Woolly Crab Pokémon",n.FIGHTING,n.ICE,1.7,180,O.HYPER_CUTTER,O.IRON_FIST,O.ANGER_POINT,478,97,132,77,62,67,43,60,70,167,h.MEDIUM_FAST,50,!1),new u(e.ORICORIO,7,!1,!1,!1,"Dancing Pokémon",n.FIRE,n.FLYING,.6,3.4,O.DANCER,O.NONE,O.NONE,476,75,70,70,98,70,93,45,70,167,h.MEDIUM_FAST,25,!1,!1,new K("Baile Style","baile",n.FIRE,n.FLYING,.6,3.4,O.DANCER,O.NONE,O.NONE,476,75,70,70,98,70,93,45,70,167,!1,"",!0),new K("Pom-Pom Style","pompom",n.ELECTRIC,n.FLYING,.6,3.4,O.DANCER,O.NONE,O.NONE,476,75,70,70,98,70,93,45,70,167,!1,null,!0),new K("Pau Style","pau",n.PSYCHIC,n.FLYING,.6,3.4,O.DANCER,O.NONE,O.NONE,476,75,70,70,98,70,93,45,70,167,!1,null,!0),new K("Sensu Style","sensu",n.GHOST,n.FLYING,.6,3.4,O.DANCER,O.NONE,O.NONE,476,75,70,70,98,70,93,45,70,167,!1,null,!0)),new u(e.CUTIEFLY,7,!1,!1,!1,"Bee Fly Pokémon",n.BUG,n.FAIRY,.1,.2,O.HONEY_GATHER,O.SHIELD_DUST,O.SWEET_VEIL,304,40,45,40,55,40,84,190,50,61,h.MEDIUM_FAST,50,!1),new u(e.RIBOMBEE,7,!1,!1,!1,"Bee Fly Pokémon",n.BUG,n.FAIRY,.2,.5,O.HONEY_GATHER,O.SHIELD_DUST,O.SWEET_VEIL,464,60,55,60,95,70,124,75,50,162,h.MEDIUM_FAST,50,!1),new u(e.ROCKRUFF,7,!1,!1,!1,"Puppy Pokémon",n.ROCK,null,.5,9.2,O.KEEN_EYE,O.VITAL_SPIRIT,O.STEADFAST,280,45,65,40,30,40,60,190,50,56,h.MEDIUM_FAST,50,!1,!1,new K("Normal","",n.ROCK,null,.5,9.2,O.KEEN_EYE,O.VITAL_SPIRIT,O.STEADFAST,280,45,65,40,30,40,60,190,50,56,!1,null,!0),new K("Own Tempo","own-tempo",n.ROCK,null,.5,9.2,O.OWN_TEMPO,O.NONE,O.OWN_TEMPO,280,45,65,40,30,40,60,190,50,56,!1,"",!0)),new u(e.LYCANROC,7,!1,!1,!1,"Wolf Pokémon",n.ROCK,null,.8,25,O.KEEN_EYE,O.SAND_RUSH,O.STEADFAST,487,75,115,65,55,65,112,90,50,170,h.MEDIUM_FAST,50,!1,!1,new K("Midday Form","midday",n.ROCK,null,.8,25,O.KEEN_EYE,O.SAND_RUSH,O.STEADFAST,487,75,115,65,55,65,112,90,50,170,!1,"",!0),new K("Midnight Form","midnight",n.ROCK,null,1.1,25,O.KEEN_EYE,O.VITAL_SPIRIT,O.NO_GUARD,487,85,115,75,55,75,82,90,50,170,!1,null,!0),new K("Dusk Form","dusk",n.ROCK,null,.8,25,O.TOUGH_CLAWS,O.TOUGH_CLAWS,O.TOUGH_CLAWS,487,75,117,65,55,65,110,90,50,170,!1,null,!0)),new u(e.WISHIWASHI,7,!1,!1,!1,"Small Fry Pokémon",n.WATER,null,.2,.3,O.SCHOOLING,O.NONE,O.NONE,175,45,20,20,25,25,40,60,50,61,h.FAST,50,!1,!1,new K("Solo Form","",n.WATER,null,.2,.3,O.SCHOOLING,O.NONE,O.NONE,175,45,20,20,25,25,40,60,50,61,!1,null,!0),new K("School","school",n.WATER,null,8.2,78.6,O.SCHOOLING,O.NONE,O.NONE,620,45,140,130,140,135,30,60,50,61)),new u(e.MAREANIE,7,!1,!1,!1,"Brutal Star Pokémon",n.POISON,n.WATER,.4,8,O.MERCILESS,O.LIMBER,O.REGENERATOR,305,50,53,62,43,52,45,190,50,61,h.MEDIUM_FAST,50,!1),new u(e.TOXAPEX,7,!1,!1,!1,"Brutal Star Pokémon",n.POISON,n.WATER,.7,14.5,O.MERCILESS,O.LIMBER,O.REGENERATOR,495,50,63,152,53,142,35,75,50,173,h.MEDIUM_FAST,50,!1),new u(e.MUDBRAY,7,!1,!1,!1,"Donkey Pokémon",n.GROUND,null,1,110,O.OWN_TEMPO,O.STAMINA,O.INNER_FOCUS,385,70,100,70,45,55,45,190,50,77,h.MEDIUM_FAST,50,!1),new u(e.MUDSDALE,7,!1,!1,!1,"Draft Horse Pokémon",n.GROUND,null,2.5,920,O.OWN_TEMPO,O.STAMINA,O.INNER_FOCUS,500,100,125,100,55,85,35,60,50,175,h.MEDIUM_FAST,50,!1),new u(e.DEWPIDER,7,!1,!1,!1,"Water Bubble Pokémon",n.WATER,n.BUG,.3,4,O.WATER_BUBBLE,O.NONE,O.WATER_ABSORB,269,38,40,52,40,72,27,200,50,54,h.MEDIUM_FAST,50,!1),new u(e.ARAQUANID,7,!1,!1,!1,"Water Bubble Pokémon",n.WATER,n.BUG,1.8,82,O.WATER_BUBBLE,O.NONE,O.WATER_ABSORB,454,68,70,92,50,132,42,100,50,159,h.MEDIUM_FAST,50,!1),new u(e.FOMANTIS,7,!1,!1,!1,"Sickle Grass Pokémon",n.GRASS,null,.3,1.5,O.LEAF_GUARD,O.NONE,O.CONTRARY,250,40,55,35,50,35,35,190,50,50,h.MEDIUM_FAST,50,!1),new u(e.LURANTIS,7,!1,!1,!1,"Bloom Sickle Pokémon",n.GRASS,null,.9,18.5,O.LEAF_GUARD,O.NONE,O.CONTRARY,480,70,105,90,80,90,45,75,50,168,h.MEDIUM_FAST,50,!1),new u(e.MORELULL,7,!1,!1,!1,"Illuminating Pokémon",n.GRASS,n.FAIRY,.2,1.5,O.ILLUMINATE,O.EFFECT_SPORE,O.RAIN_DISH,285,40,35,55,65,75,15,190,50,57,h.MEDIUM_FAST,50,!1),new u(e.SHIINOTIC,7,!1,!1,!1,"Illuminating Pokémon",n.GRASS,n.FAIRY,1,11.5,O.ILLUMINATE,O.EFFECT_SPORE,O.RAIN_DISH,405,60,45,80,90,100,30,75,50,142,h.MEDIUM_FAST,50,!1),new u(e.SALANDIT,7,!1,!1,!1,"Toxic Lizard Pokémon",n.POISON,n.FIRE,.6,4.8,O.CORROSION,O.NONE,O.OBLIVIOUS,320,48,44,40,71,40,77,120,50,64,h.MEDIUM_FAST,87.5,!1),new u(e.SALAZZLE,7,!1,!1,!1,"Toxic Lizard Pokémon",n.POISON,n.FIRE,1.2,22.2,O.CORROSION,O.NONE,O.OBLIVIOUS,480,68,64,60,111,60,117,45,50,168,h.MEDIUM_FAST,0,!1),new u(e.STUFFUL,7,!1,!1,!1,"Flailing Pokémon",n.NORMAL,n.FIGHTING,.5,6.8,O.FLUFFY,O.KLUTZ,O.CUTE_CHARM,340,70,75,50,45,50,50,140,50,68,h.MEDIUM_FAST,50,!1),new u(e.BEWEAR,7,!1,!1,!1,"Strong Arm Pokémon",n.NORMAL,n.FIGHTING,2.1,135,O.FLUFFY,O.KLUTZ,O.UNNERVE,500,120,125,80,55,60,60,70,50,175,h.MEDIUM_FAST,50,!1),new u(e.BOUNSWEET,7,!1,!1,!1,"Fruit Pokémon",n.GRASS,null,.3,3.2,O.LEAF_GUARD,O.OBLIVIOUS,O.SWEET_VEIL,210,42,30,38,30,38,32,235,50,42,h.MEDIUM_SLOW,0,!1),new u(e.STEENEE,7,!1,!1,!1,"Fruit Pokémon",n.GRASS,null,.7,8.2,O.LEAF_GUARD,O.OBLIVIOUS,O.SWEET_VEIL,290,52,40,48,40,48,62,120,50,102,h.MEDIUM_SLOW,0,!1),new u(e.TSAREENA,7,!1,!1,!1,"Fruit Pokémon",n.GRASS,null,1.2,21.4,O.LEAF_GUARD,O.QUEENLY_MAJESTY,O.SWEET_VEIL,510,72,120,98,50,98,72,45,50,255,h.MEDIUM_SLOW,0,!1),new u(e.COMFEY,7,!1,!1,!1,"Posy Picker Pokémon",n.FAIRY,null,.1,.3,O.FLOWER_VEIL,O.TRIAGE,O.NATURAL_CURE,485,51,52,90,82,110,100,60,50,170,h.FAST,25,!1),new u(e.ORANGURU,7,!1,!1,!1,"Sage Pokémon",n.NORMAL,n.PSYCHIC,1.5,76,O.INNER_FOCUS,O.TELEPATHY,O.SYMBIOSIS,490,90,60,80,90,110,60,45,50,172,h.SLOW,50,!1),new u(e.PASSIMIAN,7,!1,!1,!1,"Teamwork Pokémon",n.FIGHTING,null,2,82.8,O.RECEIVER,O.NONE,O.DEFIANT,490,100,120,90,40,60,80,45,50,172,h.SLOW,50,!1),new u(e.WIMPOD,7,!1,!1,!1,"Turn Tail Pokémon",n.BUG,n.WATER,.5,12,O.WIMP_OUT,O.NONE,O.RUN_AWAY,230,25,35,40,20,30,80,90,50,46,h.MEDIUM_FAST,50,!1),new u(e.GOLISOPOD,7,!1,!1,!1,"Hard Scale Pokémon",n.BUG,n.WATER,2,108,O.EMERGENCY_EXIT,O.NONE,O.ANTICIPATION,530,75,125,140,60,90,40,45,50,186,h.MEDIUM_FAST,50,!1),new u(e.SANDYGAST,7,!1,!1,!1,"Sand Heap Pokémon",n.GHOST,n.GROUND,.5,70,O.WATER_COMPACTION,O.NONE,O.SAND_VEIL,320,55,55,80,70,45,15,140,50,64,h.MEDIUM_FAST,50,!1),new u(e.PALOSSAND,7,!1,!1,!1,"Sand Castle Pokémon",n.GHOST,n.GROUND,1.3,250,O.WATER_COMPACTION,O.NONE,O.SAND_VEIL,480,85,75,110,100,75,35,60,50,168,h.MEDIUM_FAST,50,!1),new u(e.PYUKUMUKU,7,!1,!1,!1,"Sea Cucumber Pokémon",n.WATER,null,.3,1.2,O.INNARDS_OUT,O.NONE,O.UNAWARE,410,55,60,130,30,130,5,60,50,144,h.FAST,50,!1),new u(e.TYPE_NULL,7,!0,!1,!1,"Synthetic Pokémon",n.NORMAL,null,1.9,120.5,O.BATTLE_ARMOR,O.NONE,O.NONE,534,95,95,95,95,95,59,3,0,107,h.SLOW,null,!1),new u(e.SILVALLY,7,!0,!1,!1,"Synthetic Pokémon",n.NORMAL,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285,h.SLOW,null,!1,!1,new K("Type: Normal","normal",n.NORMAL,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285,!1,"",!0),new K("Type: Fighting","fighting",n.FIGHTING,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new K("Type: Flying","flying",n.FLYING,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new K("Type: Poison","poison",n.POISON,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new K("Type: Ground","ground",n.GROUND,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new K("Type: Rock","rock",n.ROCK,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new K("Type: Bug","bug",n.BUG,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new K("Type: Ghost","ghost",n.GHOST,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new K("Type: Steel","steel",n.STEEL,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new K("Type: Fire","fire",n.FIRE,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new K("Type: Water","water",n.WATER,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new K("Type: Grass","grass",n.GRASS,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new K("Type: Electric","electric",n.ELECTRIC,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new K("Type: Psychic","psychic",n.PSYCHIC,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new K("Type: Ice","ice",n.ICE,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new K("Type: Dragon","dragon",n.DRAGON,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new K("Type: Dark","dark",n.DARK,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new K("Type: Fairy","fairy",n.FAIRY,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285)),new u(e.MINIOR,7,!1,!1,!1,"Meteor Pokémon",n.ROCK,n.FLYING,.3,40,O.SHIELDS_DOWN,O.NONE,O.NONE,440,60,60,100,60,100,60,30,70,154,h.MEDIUM_SLOW,null,!1,!1,new K("Red Meteor Form","red-meteor",n.ROCK,n.FLYING,.3,40,O.SHIELDS_DOWN,O.NONE,O.NONE,440,60,60,100,60,100,60,30,70,154,!1,"",!0),new K("Orange Meteor Form","orange-meteor",n.ROCK,n.FLYING,.3,40,O.SHIELDS_DOWN,O.NONE,O.NONE,440,60,60,100,60,100,60,30,70,154,!1,"",!0),new K("Yellow Meteor Form","yellow-meteor",n.ROCK,n.FLYING,.3,40,O.SHIELDS_DOWN,O.NONE,O.NONE,440,60,60,100,60,100,60,30,70,154,!1,"",!0),new K("Green Meteor Form","green-meteor",n.ROCK,n.FLYING,.3,40,O.SHIELDS_DOWN,O.NONE,O.NONE,440,60,60,100,60,100,60,30,70,154,!1,"",!0),new K("Blue Meteor Form","blue-meteor",n.ROCK,n.FLYING,.3,40,O.SHIELDS_DOWN,O.NONE,O.NONE,440,60,60,100,60,100,60,30,70,154,!1,"",!0),new K("Indigo Meteor Form","indigo-meteor",n.ROCK,n.FLYING,.3,40,O.SHIELDS_DOWN,O.NONE,O.NONE,440,60,60,100,60,100,60,30,70,154,!1,"",!0),new K("Violet Meteor Form","violet-meteor",n.ROCK,n.FLYING,.3,40,O.SHIELDS_DOWN,O.NONE,O.NONE,440,60,60,100,60,100,60,30,70,154,!1,"",!0),new K("Red Core Form","red",n.ROCK,n.FLYING,.3,.3,O.SHIELDS_DOWN,O.NONE,O.NONE,500,60,100,60,100,60,120,30,70,154,!1,null,!0),new K("Orange Core Form","orange",n.ROCK,n.FLYING,.3,.3,O.SHIELDS_DOWN,O.NONE,O.NONE,500,60,100,60,100,60,120,30,70,154,!1,null,!0),new K("Yellow Core Form","yellow",n.ROCK,n.FLYING,.3,.3,O.SHIELDS_DOWN,O.NONE,O.NONE,500,60,100,60,100,60,120,30,70,154,!1,null,!0),new K("Green Core Form","green",n.ROCK,n.FLYING,.3,.3,O.SHIELDS_DOWN,O.NONE,O.NONE,500,60,100,60,100,60,120,30,70,154,!1,null,!0),new K("Blue Core Form","blue",n.ROCK,n.FLYING,.3,.3,O.SHIELDS_DOWN,O.NONE,O.NONE,500,60,100,60,100,60,120,30,70,154,!1,null,!0),new K("Indigo Core Form","indigo",n.ROCK,n.FLYING,.3,.3,O.SHIELDS_DOWN,O.NONE,O.NONE,500,60,100,60,100,60,120,30,70,154,!1,null,!0),new K("Violet Core Form","violet",n.ROCK,n.FLYING,.3,.3,O.SHIELDS_DOWN,O.NONE,O.NONE,500,60,100,60,100,60,120,30,70,154,!1,null,!0)),new u(e.KOMALA,7,!1,!1,!1,"Drowsing Pokémon",n.NORMAL,null,.4,19.9,O.COMATOSE,O.NONE,O.NONE,480,65,115,65,75,95,65,45,70,168,h.SLOW,50,!1),new u(e.TURTONATOR,7,!1,!1,!1,"Blast Turtle Pokémon",n.FIRE,n.DRAGON,2,212,O.SHELL_ARMOR,O.NONE,O.NONE,485,60,78,135,91,85,36,70,50,170,h.MEDIUM_FAST,50,!1),new u(e.TOGEDEMARU,7,!1,!1,!1,"Roly-Poly Pokémon",n.ELECTRIC,n.STEEL,.3,3.3,O.IRON_BARBS,O.LIGHTNING_ROD,O.STURDY,435,65,98,63,40,73,96,180,50,152,h.MEDIUM_FAST,50,!1),new u(e.MIMIKYU,7,!1,!1,!1,"Disguise Pokémon",n.GHOST,n.FAIRY,.2,.7,O.DISGUISE,O.NONE,O.NONE,476,55,90,80,50,105,96,45,50,167,h.MEDIUM_FAST,50,!1,!1,new K("Disguised Form","disguised",n.GHOST,n.FAIRY,.2,.7,O.DISGUISE,O.NONE,O.NONE,476,55,90,80,50,105,96,45,50,167,!1,null,!0),new K("Busted Form","busted",n.GHOST,n.FAIRY,.2,.7,O.DISGUISE,O.NONE,O.NONE,476,55,90,80,50,105,96,45,50,167)),new u(e.BRUXISH,7,!1,!1,!1,"Gnash Teeth Pokémon",n.WATER,n.PSYCHIC,.9,19,O.DAZZLING,O.STRONG_JAW,O.WONDER_SKIN,475,68,105,70,70,70,92,80,70,166,h.MEDIUM_FAST,50,!1),new u(e.DRAMPA,7,!1,!1,!1,"Placid Pokémon",n.NORMAL,n.DRAGON,3,185,O.BERSERK,O.SAP_SIPPER,O.CLOUD_NINE,485,78,60,85,135,91,36,70,50,170,h.MEDIUM_FAST,50,!1),new u(e.DHELMISE,7,!1,!1,!1,"Sea Creeper Pokémon",n.GHOST,n.GRASS,3.9,210,O.STEELWORKER,O.NONE,O.NONE,517,70,131,100,86,90,40,25,50,181,h.MEDIUM_FAST,null,!1),new u(e.JANGMO_O,7,!1,!1,!1,"Scaly Pokémon",n.DRAGON,null,.6,29.7,O.BULLETPROOF,O.SOUNDPROOF,O.OVERCOAT,300,45,55,65,45,45,45,45,50,60,h.SLOW,50,!1),new u(e.HAKAMO_O,7,!1,!1,!1,"Scaly Pokémon",n.DRAGON,n.FIGHTING,1.2,47,O.BULLETPROOF,O.SOUNDPROOF,O.OVERCOAT,420,55,75,90,65,70,65,45,50,147,h.SLOW,50,!1),new u(e.KOMMO_O,7,!1,!1,!1,"Scaly Pokémon",n.DRAGON,n.FIGHTING,1.6,78.2,O.BULLETPROOF,O.SOUNDPROOF,O.OVERCOAT,600,75,110,125,100,105,85,45,50,300,h.SLOW,50,!1),new u(e.TAPU_KOKO,7,!0,!1,!1,"Land Spirit Pokémon",n.ELECTRIC,n.FAIRY,1.8,20.5,O.ELECTRIC_SURGE,O.NONE,O.TELEPATHY,570,70,115,85,95,75,130,3,50,285,h.SLOW,null,!1),new u(e.TAPU_LELE,7,!0,!1,!1,"Land Spirit Pokémon",n.PSYCHIC,n.FAIRY,1.2,18.6,O.PSYCHIC_SURGE,O.NONE,O.TELEPATHY,570,70,85,75,130,115,95,3,50,285,h.SLOW,null,!1),new u(e.TAPU_BULU,7,!0,!1,!1,"Land Spirit Pokémon",n.GRASS,n.FAIRY,1.9,45.5,O.GRASSY_SURGE,O.NONE,O.TELEPATHY,570,70,130,115,85,95,75,3,50,285,h.SLOW,null,!1),new u(e.TAPU_FINI,7,!0,!1,!1,"Land Spirit Pokémon",n.WATER,n.FAIRY,1.3,21.2,O.MISTY_SURGE,O.NONE,O.TELEPATHY,570,70,75,115,95,130,85,3,50,285,h.SLOW,null,!1),new u(e.COSMOG,7,!0,!1,!1,"Nebula Pokémon",n.PSYCHIC,null,.2,.1,O.UNAWARE,O.NONE,O.NONE,200,43,29,31,29,31,37,45,0,40,h.SLOW,null,!1),new u(e.COSMOEM,7,!0,!1,!1,"Protostar Pokémon",n.PSYCHIC,null,.1,999.9,O.STURDY,O.NONE,O.NONE,400,43,29,131,29,131,37,45,0,140,h.SLOW,null,!1),new u(e.SOLGALEO,7,!1,!0,!1,"Sunne Pokémon",n.PSYCHIC,n.STEEL,3.4,230,O.FULL_METAL_BODY,O.NONE,O.NONE,680,137,137,107,113,89,97,45,0,340,h.SLOW,null,!1),new u(e.LUNALA,7,!1,!0,!1,"Moone Pokémon",n.PSYCHIC,n.GHOST,4,120,O.SHADOW_SHIELD,O.NONE,O.NONE,680,137,113,89,137,107,97,45,0,340,h.SLOW,null,!1),new u(e.NIHILEGO,7,!0,!1,!1,"Parasite Pokémon",n.ROCK,n.POISON,1.2,55.5,O.BEAST_BOOST,O.NONE,O.NONE,570,109,53,47,127,131,103,45,0,285,h.SLOW,null,!1),new u(e.BUZZWOLE,7,!0,!1,!1,"Swollen Pokémon",n.BUG,n.FIGHTING,2.4,333.6,O.BEAST_BOOST,O.NONE,O.NONE,570,107,139,139,53,53,79,45,0,285,h.SLOW,null,!1),new u(e.PHEROMOSA,7,!0,!1,!1,"Lissome Pokémon",n.BUG,n.FIGHTING,1.8,25,O.BEAST_BOOST,O.NONE,O.NONE,570,71,137,37,137,37,151,45,0,285,h.SLOW,null,!1),new u(e.XURKITREE,7,!0,!1,!1,"Glowing Pokémon",n.ELECTRIC,null,3.8,100,O.BEAST_BOOST,O.NONE,O.NONE,570,83,89,71,173,71,83,45,0,285,h.SLOW,null,!1),new u(e.CELESTEELA,7,!0,!1,!1,"Launch Pokémon",n.STEEL,n.FLYING,9.2,999.9,O.BEAST_BOOST,O.NONE,O.NONE,570,97,101,103,107,101,61,45,0,285,h.SLOW,null,!1),new u(e.KARTANA,7,!0,!1,!1,"Drawn Sword Pokémon",n.GRASS,n.STEEL,.3,.1,O.BEAST_BOOST,O.NONE,O.NONE,570,59,181,131,59,31,109,45,0,285,h.SLOW,null,!1),new u(e.GUZZLORD,7,!0,!1,!1,"Junkivore Pokémon",n.DARK,n.DRAGON,5.5,888,O.BEAST_BOOST,O.NONE,O.NONE,570,223,101,53,97,53,43,45,0,285,h.SLOW,null,!1),new u(e.NECROZMA,7,!1,!0,!1,"Prism Pokémon",n.PSYCHIC,null,2.4,230,O.PRISM_ARMOR,O.NONE,O.NONE,600,97,107,101,127,89,79,255,0,300,h.SLOW,null,!1,!1,new K("Normal","",n.PSYCHIC,null,2.4,230,O.PRISM_ARMOR,O.NONE,O.NONE,600,97,107,101,127,89,79,255,0,300,!1,null,!0),new K("Dusk Mane","dusk-mane",n.PSYCHIC,n.STEEL,3.8,460,O.PRISM_ARMOR,O.NONE,O.NONE,680,97,157,127,113,109,77,255,0,300),new K("Dawn Wings","dawn-wings",n.PSYCHIC,n.GHOST,4.2,350,O.PRISM_ARMOR,O.NONE,O.NONE,680,97,113,109,157,127,77,255,0,300),new K("Ultra","ultra",n.PSYCHIC,n.DRAGON,7.5,230,O.NEUROFORCE,O.NONE,O.NONE,754,97,167,97,167,97,129,255,0,300)),new u(e.MAGEARNA,7,!1,!1,!0,"Artificial Pokémon",n.STEEL,n.FAIRY,1,80.5,O.SOUL_HEART,O.NONE,O.NONE,600,80,95,115,130,115,65,3,0,300,h.SLOW,null,!1,!1,new K("Normal","",n.STEEL,n.FAIRY,1,80.5,O.SOUL_HEART,O.NONE,O.NONE,600,80,95,115,130,115,65,3,0,300,!1,null,!0),new K("Original","original",n.STEEL,n.FAIRY,1,80.5,O.SOUL_HEART,O.NONE,O.NONE,600,80,95,115,130,115,65,3,0,300,!1,null,!0)),new u(e.MARSHADOW,7,!1,!1,!0,"Gloomdweller Pokémon",n.FIGHTING,n.GHOST,.7,22.2,O.TECHNICIAN,O.NONE,O.NONE,600,90,125,80,90,90,125,3,0,300,h.SLOW,null,!1,!0,new K("Normal","",n.FIGHTING,n.GHOST,.7,22.2,O.TECHNICIAN,O.NONE,O.NONE,600,90,125,80,90,90,125,3,0,300,!1,null,!0),new K("Zenith","zenith",n.FIGHTING,n.GHOST,.7,22.2,O.TECHNICIAN,O.NONE,O.NONE,600,90,125,80,90,90,125,3,0,300)),new u(e.POIPOLE,7,!0,!1,!1,"Poison Pin Pokémon",n.POISON,null,.6,1.8,O.BEAST_BOOST,O.NONE,O.NONE,420,67,73,67,73,67,73,45,0,210,h.SLOW,null,!1),new u(e.NAGANADEL,7,!0,!1,!1,"Poison Pin Pokémon",n.POISON,n.DRAGON,3.6,150,O.BEAST_BOOST,O.NONE,O.NONE,540,73,73,73,127,73,121,45,0,270,h.SLOW,null,!1),new u(e.STAKATAKA,7,!0,!1,!1,"Rampart Pokémon",n.ROCK,n.STEEL,5.5,820,O.BEAST_BOOST,O.NONE,O.NONE,570,61,131,211,53,101,13,30,0,285,h.SLOW,null,!1),new u(e.BLACEPHALON,7,!0,!1,!1,"Fireworks Pokémon",n.FIRE,n.GHOST,1.8,13,O.BEAST_BOOST,O.NONE,O.NONE,570,53,127,53,151,79,107,30,0,285,h.SLOW,null,!1),new u(e.ZERAORA,7,!1,!1,!0,"Thunderclap Pokémon",n.ELECTRIC,null,1.5,44.5,O.VOLT_ABSORB,O.NONE,O.NONE,600,88,112,75,102,80,143,3,0,300,h.SLOW,null,!1),new u(e.MELTAN,7,!1,!1,!0,"Hex Nut Pokémon",n.STEEL,null,.2,8,O.MAGNET_PULL,O.NONE,O.NONE,300,46,65,65,55,35,34,3,0,150,h.SLOW,null,!1),new u(e.MELMETAL,7,!1,!1,!0,"Hex Nut Pokémon",n.STEEL,null,2.5,800,O.IRON_FIST,O.NONE,O.NONE,600,135,143,143,80,65,34,3,0,300,h.SLOW,null,!1,!0,new K("Normal","",n.STEEL,null,2.5,800,O.IRON_FIST,O.NONE,O.NONE,600,135,143,143,80,65,34,3,0,300,!1,null,!0),new K("G-Max",Ee.GIGANTAMAX,n.STEEL,null,25,999.9,O.IRON_FIST,O.NONE,O.NONE,700,175,165,155,85,75,45,3,0,300)),new u(e.GROOKEY,8,!1,!1,!1,"Chimp Pokémon",n.GRASS,null,.3,5,O.OVERGROW,O.NONE,O.GRASSY_SURGE,310,50,65,50,40,40,65,45,50,62,h.MEDIUM_SLOW,87.5,!1),new u(e.THWACKEY,8,!1,!1,!1,"Beat Pokémon",n.GRASS,null,.7,14,O.OVERGROW,O.NONE,O.GRASSY_SURGE,420,70,85,70,55,60,80,45,50,147,h.MEDIUM_SLOW,87.5,!1),new u(e.RILLABOOM,8,!1,!1,!1,"Drummer Pokémon",n.GRASS,null,2.1,90,O.OVERGROW,O.NONE,O.GRASSY_SURGE,530,100,125,90,60,70,85,45,50,265,h.MEDIUM_SLOW,87.5,!1,!0,new K("Normal","",n.GRASS,null,2.1,90,O.OVERGROW,O.NONE,O.GRASSY_SURGE,530,100,125,90,60,70,85,45,50,265,!1,null,!0),new K("G-Max",Ee.GIGANTAMAX,n.GRASS,null,28,999.9,O.GRASSY_SURGE,O.NONE,O.GRASSY_SURGE,630,125,150,105,85,85,80,45,50,265)),new u(e.SCORBUNNY,8,!1,!1,!1,"Rabbit Pokémon",n.FIRE,null,.3,4.5,O.BLAZE,O.NONE,O.LIBERO,310,50,71,40,40,40,69,45,50,62,h.MEDIUM_SLOW,87.5,!1),new u(e.RABOOT,8,!1,!1,!1,"Rabbit Pokémon",n.FIRE,null,.6,9,O.BLAZE,O.NONE,O.LIBERO,420,65,86,60,55,60,94,45,50,147,h.MEDIUM_SLOW,87.5,!1),new u(e.CINDERACE,8,!1,!1,!1,"Striker Pokémon",n.FIRE,null,1.4,33,O.BLAZE,O.NONE,O.LIBERO,530,80,116,75,65,75,119,45,50,265,h.MEDIUM_SLOW,87.5,!1,!0,new K("Normal","",n.FIRE,null,1.4,33,O.BLAZE,O.NONE,O.LIBERO,530,80,116,75,65,75,119,45,50,265,!1,null,!0),new K("G-Max",Ee.GIGANTAMAX,n.FIRE,null,27,999.9,O.LIBERO,O.NONE,O.LIBERO,630,100,146,80,90,80,134,45,50,265)),new u(e.SOBBLE,8,!1,!1,!1,"Water Lizard Pokémon",n.WATER,null,.3,4,O.TORRENT,O.NONE,O.SNIPER,310,50,40,40,70,40,70,45,50,62,h.MEDIUM_SLOW,87.5,!1),new u(e.DRIZZILE,8,!1,!1,!1,"Water Lizard Pokémon",n.WATER,null,.7,11.5,O.TORRENT,O.NONE,O.SNIPER,420,65,60,55,95,55,90,45,50,147,h.MEDIUM_SLOW,87.5,!1),new u(e.INTELEON,8,!1,!1,!1,"Secret Agent Pokémon",n.WATER,null,1.9,45.2,O.TORRENT,O.NONE,O.SNIPER,530,70,85,65,125,65,120,45,50,265,h.MEDIUM_SLOW,87.5,!1,!0,new K("Normal","",n.WATER,null,1.9,45.2,O.TORRENT,O.NONE,O.SNIPER,530,70,85,65,125,65,120,45,50,265,!1,null,!0),new K("G-Max",Ee.GIGANTAMAX,n.WATER,null,40,999.9,O.SNIPER,O.NONE,O.SNIPER,630,95,97,77,147,77,137,45,50,265)),new u(e.SKWOVET,8,!1,!1,!1,"Cheeky Pokémon",n.NORMAL,null,.3,2.5,O.CHEEK_POUCH,O.NONE,O.GLUTTONY,275,70,55,55,35,35,25,255,50,55,h.MEDIUM_FAST,50,!1),new u(e.GREEDENT,8,!1,!1,!1,"Greedy Pokémon",n.NORMAL,null,.6,6,O.CHEEK_POUCH,O.NONE,O.GLUTTONY,460,120,95,95,55,75,20,90,50,161,h.MEDIUM_FAST,50,!1),new u(e.ROOKIDEE,8,!1,!1,!1,"Tiny Bird Pokémon",n.FLYING,null,.2,1.8,O.KEEN_EYE,O.UNNERVE,O.BIG_PECKS,245,38,47,35,33,35,57,255,50,49,h.MEDIUM_SLOW,50,!1),new u(e.CORVISQUIRE,8,!1,!1,!1,"Raven Pokémon",n.FLYING,null,.8,16,O.KEEN_EYE,O.UNNERVE,O.BIG_PECKS,365,68,67,55,43,55,77,120,50,128,h.MEDIUM_SLOW,50,!1),new u(e.CORVIKNIGHT,8,!1,!1,!1,"Raven Pokémon",n.FLYING,n.STEEL,2.2,75,O.PRESSURE,O.UNNERVE,O.MIRROR_ARMOR,495,98,87,105,53,85,67,45,50,248,h.MEDIUM_SLOW,50,!1,!0,new K("Normal","",n.FLYING,n.STEEL,2.2,75,O.PRESSURE,O.UNNERVE,O.MIRROR_ARMOR,495,98,87,105,53,85,67,45,50,248,!1,null,!0),new K("G-Max",Ee.GIGANTAMAX,n.FLYING,n.STEEL,14,999.9,O.MIRROR_ARMOR,O.MIRROR_ARMOR,O.MIRROR_ARMOR,595,128,102,140,53,95,77,45,50,248)),new u(e.BLIPBUG,8,!1,!1,!1,"Larva Pokémon",n.BUG,null,.4,8,O.SWARM,O.COMPOUND_EYES,O.TELEPATHY,180,25,20,20,25,45,45,255,50,36,h.MEDIUM_FAST,50,!1),new u(e.DOTTLER,8,!1,!1,!1,"Radome Pokémon",n.BUG,n.PSYCHIC,.4,19.5,O.SWARM,O.COMPOUND_EYES,O.TELEPATHY,335,50,35,80,50,90,30,120,50,117,h.MEDIUM_FAST,50,!1),new u(e.ORBEETLE,8,!1,!1,!1,"Seven Spot Pokémon",n.BUG,n.PSYCHIC,.4,40.8,O.SWARM,O.FRISK,O.TELEPATHY,505,60,45,110,80,120,90,45,50,253,h.MEDIUM_FAST,50,!1,!0,new K("Normal","",n.BUG,n.PSYCHIC,.4,40.8,O.SWARM,O.FRISK,O.TELEPATHY,505,60,45,110,80,120,90,45,50,253,!1,null,!0),new K("G-Max",Ee.GIGANTAMAX,n.BUG,n.PSYCHIC,14,999.9,O.TRACE,O.TRACE,O.TRACE,605,90,45,130,110,140,90,45,50,253)),new u(e.NICKIT,8,!1,!1,!1,"Fox Pokémon",n.DARK,null,.6,8.9,O.RUN_AWAY,O.UNBURDEN,O.STAKEOUT,245,40,28,28,47,52,50,255,50,49,h.FAST,50,!1),new u(e.THIEVUL,8,!1,!1,!1,"Fox Pokémon",n.DARK,null,1.2,19.9,O.RUN_AWAY,O.UNBURDEN,O.STAKEOUT,455,70,58,58,87,92,90,127,50,159,h.FAST,50,!1),new u(e.GOSSIFLEUR,8,!1,!1,!1,"Flowering Pokémon",n.GRASS,null,.4,2.2,O.COTTON_DOWN,O.REGENERATOR,O.EFFECT_SPORE,250,40,40,60,40,60,10,190,50,50,h.MEDIUM_FAST,50,!1),new u(e.ELDEGOSS,8,!1,!1,!1,"Cotton Bloom Pokémon",n.GRASS,null,.5,2.5,O.COTTON_DOWN,O.REGENERATOR,O.EFFECT_SPORE,460,60,50,90,80,120,60,75,50,161,h.MEDIUM_FAST,50,!1),new u(e.WOOLOO,8,!1,!1,!1,"Sheep Pokémon",n.NORMAL,null,.6,6,O.FLUFFY,O.RUN_AWAY,O.BULLETPROOF,270,42,40,55,40,45,48,255,50,122,h.MEDIUM_FAST,50,!1),new u(e.DUBWOOL,8,!1,!1,!1,"Sheep Pokémon",n.NORMAL,null,1.3,43,O.FLUFFY,O.STEADFAST,O.BULLETPROOF,490,72,80,100,60,90,88,127,50,172,h.MEDIUM_FAST,50,!1),new u(e.CHEWTLE,8,!1,!1,!1,"Snapping Pokémon",n.WATER,null,.3,8.5,O.STRONG_JAW,O.SHELL_ARMOR,O.SWIFT_SWIM,284,50,64,50,38,38,44,255,50,57,h.MEDIUM_FAST,50,!1),new u(e.DREDNAW,8,!1,!1,!1,"Bite Pokémon",n.WATER,n.ROCK,1,115.5,O.STRONG_JAW,O.SHELL_ARMOR,O.SWIFT_SWIM,485,90,115,90,48,68,74,75,50,170,h.MEDIUM_FAST,50,!1,!0,new K("Normal","",n.WATER,n.ROCK,1,115.5,O.STRONG_JAW,O.SHELL_ARMOR,O.SWIFT_SWIM,485,90,115,90,48,68,74,75,50,170,!1,null,!0),new K("G-Max",Ee.GIGANTAMAX,n.WATER,n.ROCK,24,999.9,O.STRONG_JAW,O.STRONG_JAW,O.STRONG_JAW,585,115,145,115,43,83,84,75,50,170)),new u(e.YAMPER,8,!1,!1,!1,"Puppy Pokémon",n.ELECTRIC,null,.3,13.5,O.BALL_FETCH,O.NONE,O.RATTLED,270,59,45,50,40,50,26,255,50,54,h.FAST,50,!1),new u(e.BOLTUND,8,!1,!1,!1,"Dog Pokémon",n.ELECTRIC,null,1,34,O.STRONG_JAW,O.NONE,O.COMPETITIVE,490,69,90,60,90,60,121,45,50,172,h.FAST,50,!1),new u(e.ROLYCOLY,8,!1,!1,!1,"Coal Pokémon",n.ROCK,null,.3,12,O.STEAM_ENGINE,O.HEATPROOF,O.FLASH_FIRE,240,30,40,50,40,50,30,255,50,48,h.MEDIUM_SLOW,50,!1),new u(e.CARKOL,8,!1,!1,!1,"Coal Pokémon",n.ROCK,n.FIRE,1.1,78,O.STEAM_ENGINE,O.FLAME_BODY,O.FLASH_FIRE,410,80,60,90,60,70,50,120,50,144,h.MEDIUM_SLOW,50,!1),new u(e.COALOSSAL,8,!1,!1,!1,"Coal Pokémon",n.ROCK,n.FIRE,2.8,310.5,O.STEAM_ENGINE,O.FLAME_BODY,O.FLASH_FIRE,510,110,80,120,80,90,30,45,50,255,h.MEDIUM_SLOW,50,!1,!0,new K("Normal","",n.ROCK,n.FIRE,2.8,310.5,O.STEAM_ENGINE,O.FLAME_BODY,O.FLASH_FIRE,510,110,80,120,80,90,30,45,50,255,!1,null,!0),new K("G-Max",Ee.GIGANTAMAX,n.ROCK,n.FIRE,42,999.9,O.STEAM_ENGINE,O.STEAM_ENGINE,O.STEAM_ENGINE,610,140,95,130,95,110,40,45,50,255)),new u(e.APPLIN,8,!1,!1,!1,"Apple Core Pokémon",n.GRASS,n.DRAGON,.2,.5,O.RIPEN,O.GLUTTONY,O.BULLETPROOF,260,40,40,80,40,40,20,255,50,52,h.ERRATIC,50,!1),new u(e.FLAPPLE,8,!1,!1,!1,"Apple Wing Pokémon",n.GRASS,n.DRAGON,.3,1,O.RIPEN,O.GLUTTONY,O.HUSTLE,485,70,110,80,95,60,70,45,50,170,h.ERRATIC,50,!1,!0,new K("Normal","",n.GRASS,n.DRAGON,.3,1,O.RIPEN,O.GLUTTONY,O.HUSTLE,485,70,110,80,95,60,70,45,50,170,!1,null,!0),new K("G-Max",Ee.GIGANTAMAX,n.GRASS,n.DRAGON,24,999.9,O.HUSTLE,O.HUSTLE,O.HUSTLE,585,90,130,100,85,80,100,45,50,170)),new u(e.APPLETUN,8,!1,!1,!1,"Apple Nectar Pokémon",n.GRASS,n.DRAGON,.4,13,O.RIPEN,O.GLUTTONY,O.THICK_FAT,485,110,85,80,100,80,30,45,50,170,h.ERRATIC,50,!1,!0,new K("Normal","",n.GRASS,n.DRAGON,.4,13,O.RIPEN,O.GLUTTONY,O.THICK_FAT,485,110,85,80,100,80,30,45,50,170,!1,null,!0),new K("G-Max",Ee.GIGANTAMAX,n.GRASS,n.DRAGON,24,999.9,O.THICK_FAT,O.THICK_FAT,O.THICK_FAT,585,130,75,115,125,115,25,45,50,170)),new u(e.SILICOBRA,8,!1,!1,!1,"Sand Snake Pokémon",n.GROUND,null,2.2,7.6,O.SAND_SPIT,O.SHED_SKIN,O.SAND_VEIL,315,52,57,75,35,50,46,255,50,63,h.MEDIUM_FAST,50,!1),new u(e.SANDACONDA,8,!1,!1,!1,"Sand Snake Pokémon",n.GROUND,null,3.8,65.5,O.SAND_SPIT,O.SHED_SKIN,O.SAND_VEIL,510,72,107,125,65,70,71,120,50,179,h.MEDIUM_FAST,50,!1,!0,new K("Normal","",n.GROUND,null,3.8,65.5,O.SAND_SPIT,O.SHED_SKIN,O.SAND_VEIL,510,72,107,125,65,70,71,120,50,179,!1,null,!0),new K("G-Max",Ee.GIGANTAMAX,n.GROUND,null,22,999.9,O.SAND_SPIT,O.SAND_SPIT,O.SAND_SPIT,610,117,137,140,55,80,81,120,50,179)),new u(e.CRAMORANT,8,!1,!1,!1,"Gulp Pokémon",n.FLYING,n.WATER,.8,18,O.GULP_MISSILE,O.NONE,O.NONE,475,70,85,55,85,95,85,45,50,166,h.MEDIUM_FAST,50,!1,!1,new K("Normal","",n.FLYING,n.WATER,.8,18,O.GULP_MISSILE,O.NONE,O.NONE,475,70,85,55,85,95,85,45,50,166,!1,null,!0),new K("Gulping Form","gulping",n.FLYING,n.WATER,.8,18,O.GULP_MISSILE,O.NONE,O.NONE,475,70,85,55,85,95,85,45,50,166),new K("Gorging Form","gorging",n.FLYING,n.WATER,.8,18,O.GULP_MISSILE,O.NONE,O.NONE,475,70,85,55,85,95,85,45,50,166)),new u(e.ARROKUDA,8,!1,!1,!1,"Rush Pokémon",n.WATER,null,.5,1,O.SWIFT_SWIM,O.NONE,O.PROPELLER_TAIL,280,41,63,40,40,30,66,255,50,56,h.SLOW,50,!1),new u(e.BARRASKEWDA,8,!1,!1,!1,"Skewer Pokémon",n.WATER,null,1.3,30,O.SWIFT_SWIM,O.NONE,O.PROPELLER_TAIL,490,61,123,60,60,50,136,60,50,172,h.SLOW,50,!1),new u(e.TOXEL,8,!1,!1,!1,"Baby Pokémon",n.ELECTRIC,n.POISON,.4,11,O.RATTLED,O.STATIC,O.KLUTZ,242,40,38,35,54,35,40,75,50,48,h.MEDIUM_SLOW,50,!1),new u(e.TOXTRICITY,8,!1,!1,!1,"Punk Pokémon",n.ELECTRIC,n.POISON,1.6,40,O.PUNK_ROCK,O.PLUS,O.TECHNICIAN,502,75,98,70,114,70,75,45,50,176,h.MEDIUM_SLOW,50,!1,!0,new K("Amped Form","amped",n.ELECTRIC,n.POISON,1.6,40,O.PUNK_ROCK,O.PLUS,O.TECHNICIAN,502,75,98,70,114,70,75,45,50,176,!1,"",!0),new K("Low-Key Form","lowkey",n.ELECTRIC,n.POISON,1.6,40,O.PUNK_ROCK,O.MINUS,O.TECHNICIAN,502,75,98,70,114,70,75,45,50,176,!1,"lowkey",!0),new K("G-Max",Ee.GIGANTAMAX,n.ELECTRIC,n.POISON,24,999.9,O.PUNK_ROCK,O.PUNK_ROCK,O.PUNK_ROCK,602,114,98,82,144,82,82,45,50,176)),new u(e.SIZZLIPEDE,8,!1,!1,!1,"Radiator Pokémon",n.FIRE,n.BUG,.7,1,O.FLASH_FIRE,O.WHITE_SMOKE,O.FLAME_BODY,305,50,65,45,50,50,45,190,50,61,h.MEDIUM_FAST,50,!1),new u(e.CENTISKORCH,8,!1,!1,!1,"Radiator Pokémon",n.FIRE,n.BUG,3,120,O.FLASH_FIRE,O.WHITE_SMOKE,O.FLAME_BODY,525,100,115,65,90,90,65,75,50,184,h.MEDIUM_FAST,50,!1,!0,new K("Normal","",n.FIRE,n.BUG,3,120,O.FLASH_FIRE,O.WHITE_SMOKE,O.FLAME_BODY,525,100,115,65,90,90,65,75,50,184,!1,null,!0),new K("G-Max",Ee.GIGANTAMAX,n.FIRE,n.BUG,75,999.9,O.FLASH_FIRE,O.FLASH_FIRE,O.FLASH_FIRE,625,140,145,75,90,100,75,75,50,184)),new u(e.CLOBBOPUS,8,!1,!1,!1,"Tantrum Pokémon",n.FIGHTING,null,.6,4,O.LIMBER,O.NONE,O.TECHNICIAN,310,50,68,60,50,50,32,180,50,62,h.MEDIUM_SLOW,50,!1),new u(e.GRAPPLOCT,8,!1,!1,!1,"Jujitsu Pokémon",n.FIGHTING,null,1.6,39,O.LIMBER,O.NONE,O.TECHNICIAN,480,80,118,90,70,80,42,45,50,168,h.MEDIUM_SLOW,50,!1),new u(e.SINISTEA,8,!1,!1,!1,"Black Tea Pokémon",n.GHOST,null,.1,.2,O.WEAK_ARMOR,O.NONE,O.CURSED_BODY,308,40,45,45,74,54,50,120,50,62,h.MEDIUM_FAST,null,!1,!1,new K("Phony Form","phony",n.GHOST,null,.1,.2,O.WEAK_ARMOR,O.NONE,O.CURSED_BODY,308,40,45,45,74,54,50,120,50,62,!1,"",!0),new K("Antique Form","antique",n.GHOST,null,.1,.2,O.WEAK_ARMOR,O.NONE,O.CURSED_BODY,308,40,45,45,74,54,50,120,50,62,!1,"",!0)),new u(e.POLTEAGEIST,8,!1,!1,!1,"Black Tea Pokémon",n.GHOST,null,.2,.4,O.WEAK_ARMOR,O.NONE,O.CURSED_BODY,508,60,65,65,134,114,70,60,50,178,h.MEDIUM_FAST,null,!1,!1,new K("Phony Form","phony",n.GHOST,null,.2,.4,O.WEAK_ARMOR,O.NONE,O.CURSED_BODY,508,60,65,65,134,114,70,60,50,178,!1,"",!0),new K("Antique Form","antique",n.GHOST,null,.2,.4,O.WEAK_ARMOR,O.NONE,O.CURSED_BODY,508,60,65,65,134,114,70,60,50,178,!1,"",!0)),new u(e.HATENNA,8,!1,!1,!1,"Calm Pokémon",n.PSYCHIC,null,.4,3.4,O.HEALER,O.ANTICIPATION,O.MAGIC_BOUNCE,265,42,30,45,56,53,39,235,50,53,h.SLOW,0,!1),new u(e.HATTREM,8,!1,!1,!1,"Serene Pokémon",n.PSYCHIC,null,.6,4.8,O.HEALER,O.ANTICIPATION,O.MAGIC_BOUNCE,370,57,40,65,86,73,49,120,50,130,h.SLOW,0,!1),new u(e.HATTERENE,8,!1,!1,!1,"Silent Pokémon",n.PSYCHIC,n.FAIRY,2.1,5.1,O.HEALER,O.ANTICIPATION,O.MAGIC_BOUNCE,510,57,90,95,136,103,29,45,50,255,h.SLOW,0,!1,!0,new K("Normal","",n.PSYCHIC,n.FAIRY,2.1,5.1,O.HEALER,O.ANTICIPATION,O.MAGIC_BOUNCE,510,57,90,95,136,103,29,45,50,255,!1,null,!0),new K("G-Max",Ee.GIGANTAMAX,n.PSYCHIC,n.FAIRY,26,999.9,O.MAGIC_BOUNCE,O.MAGIC_BOUNCE,O.MAGIC_BOUNCE,610,97,90,105,146,122,50,45,50,255)),new u(e.IMPIDIMP,8,!1,!1,!1,"Wily Pokémon",n.DARK,n.FAIRY,.4,5.5,O.PRANKSTER,O.FRISK,O.PICKPOCKET,265,45,45,30,55,40,50,255,50,53,h.MEDIUM_FAST,100,!1),new u(e.MORGREM,8,!1,!1,!1,"Devious Pokémon",n.DARK,n.FAIRY,.8,12.5,O.PRANKSTER,O.FRISK,O.PICKPOCKET,370,65,60,45,75,55,70,120,50,130,h.MEDIUM_FAST,100,!1),new u(e.GRIMMSNARL,8,!1,!1,!1,"Bulk Up Pokémon",n.DARK,n.FAIRY,1.5,61,O.PRANKSTER,O.FRISK,O.PICKPOCKET,510,95,120,65,95,75,60,45,50,255,h.MEDIUM_FAST,100,!1,!0,new K("Normal","",n.DARK,n.FAIRY,1.5,61,O.PRANKSTER,O.FRISK,O.PICKPOCKET,510,95,120,65,95,75,60,45,50,255,!1,null,!0),new K("G-Max",Ee.GIGANTAMAX,n.DARK,n.FAIRY,32,999.9,O.PRANKSTER,O.PRANKSTER,O.PRANKSTER,610,135,138,77,110,85,65,45,50,255)),new u(e.OBSTAGOON,8,!1,!1,!1,"Blocking Pokémon",n.DARK,n.NORMAL,1.6,46,O.RECKLESS,O.GUTS,O.DEFIANT,520,93,90,101,60,81,95,45,50,260,h.MEDIUM_FAST,50,!1),new u(e.PERRSERKER,8,!1,!1,!1,"Viking Pokémon",n.STEEL,null,.8,28,O.BATTLE_ARMOR,O.TOUGH_CLAWS,O.STEELY_SPIRIT,440,70,110,100,50,60,50,90,50,154,h.MEDIUM_FAST,50,!1),new u(e.CURSOLA,8,!1,!1,!1,"Coral Pokémon",n.GHOST,null,1,.4,O.WEAK_ARMOR,O.NONE,O.PERISH_BODY,510,60,95,50,145,130,30,30,50,179,h.FAST,25,!1),new u(e.SIRFETCHD,8,!1,!1,!1,"Wild Duck Pokémon",n.FIGHTING,null,.8,117,O.STEADFAST,O.NONE,O.SCRAPPY,507,62,135,95,68,82,65,45,50,177,h.MEDIUM_FAST,50,!1),new u(e.MR_RIME,8,!1,!1,!1,"Comedian Pokémon",n.ICE,n.PSYCHIC,1.5,58.2,O.TANGLED_FEET,O.SCREEN_CLEANER,O.ICE_BODY,520,80,85,75,110,100,70,45,50,182,h.MEDIUM_FAST,50,!1),new u(e.RUNERIGUS,8,!1,!1,!1,"Grudge Pokémon",n.GROUND,n.GHOST,1.6,66.6,O.WANDERING_SPIRIT,O.NONE,O.NONE,483,58,95,145,50,105,30,90,50,169,h.MEDIUM_FAST,50,!1),new u(e.MILCERY,8,!1,!1,!1,"Cream Pokémon",n.FAIRY,null,.2,.3,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,270,45,40,40,50,61,34,200,50,54,h.MEDIUM_FAST,0,!1),new u(e.ALCREMIE,8,!1,!1,!1,"Cream Pokémon",n.FAIRY,null,.3,.5,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,495,65,60,75,110,121,64,100,50,173,h.MEDIUM_FAST,0,!1,!0,new K("Vanilla Cream","vanilla-cream",n.FAIRY,null,.3,.5,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,495,65,60,75,110,121,64,100,50,173,!1,"",!0),new K("Ruby Cream","ruby-cream",n.FAIRY,null,.3,.5,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,495,65,60,75,110,121,64,100,50,173,!1,null,!0),new K("Matcha Cream","matcha-cream",n.FAIRY,null,.3,.5,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,495,65,60,75,110,121,64,100,50,173,!1,null,!0),new K("Mint Cream","mint-cream",n.FAIRY,null,.3,.5,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,495,65,60,75,110,121,64,100,50,173,!1,null,!0),new K("Lemon Cream","lemon-cream",n.FAIRY,null,.3,.5,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,495,65,60,75,110,121,64,100,50,173,!1,null,!0),new K("Salted Cream","salted-cream",n.FAIRY,null,.3,.5,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,495,65,60,75,110,121,64,100,50,173,!1,null,!0),new K("Ruby Swirl","ruby-swirl",n.FAIRY,null,.3,.5,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,495,65,60,75,110,121,64,100,50,173,!1,null,!0),new K("Caramel Swirl","caramel-swirl",n.FAIRY,null,.3,.5,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,495,65,60,75,110,121,64,100,50,173,!1,null,!0),new K("Rainbow Swirl","rainbow-swirl",n.FAIRY,null,.3,.5,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,495,65,60,75,110,121,64,100,50,173,!1,null,!0),new K("G-Max",Ee.GIGANTAMAX,n.FAIRY,null,30,999.9,O.MISTY_SURGE,O.NONE,O.MISTY_SURGE,595,135,60,75,130,131,64,100,50,173)),new u(e.FALINKS,8,!1,!1,!1,"Formation Pokémon",n.FIGHTING,null,3,62,O.BATTLE_ARMOR,O.NONE,O.DEFIANT,470,65,100,100,70,60,75,45,50,165,h.MEDIUM_FAST,null,!1),new u(e.PINCURCHIN,8,!1,!1,!1,"Sea Urchin Pokémon",n.ELECTRIC,null,.3,1,O.LIGHTNING_ROD,O.NONE,O.ELECTRIC_SURGE,435,48,101,95,91,85,15,75,50,152,h.MEDIUM_FAST,50,!1),new u(e.SNOM,8,!1,!1,!1,"Worm Pokémon",n.ICE,n.BUG,.3,3.8,O.SHIELD_DUST,O.NONE,O.ICE_SCALES,185,30,25,35,45,30,20,190,50,37,h.MEDIUM_FAST,50,!1),new u(e.FROSMOTH,8,!1,!1,!1,"Frost Moth Pokémon",n.ICE,n.BUG,1.3,42,O.SHIELD_DUST,O.NONE,O.ICE_SCALES,475,70,65,60,125,90,65,75,50,166,h.MEDIUM_FAST,50,!1),new u(e.STONJOURNER,8,!1,!1,!1,"Big Rock Pokémon",n.ROCK,null,2.5,520,O.POWER_SPOT,O.NONE,O.NONE,470,100,125,135,20,20,70,60,50,165,h.SLOW,50,!1),new u(e.EISCUE,8,!1,!1,!1,"Penguin Pokémon",n.ICE,null,1.4,89,O.ICE_FACE,O.NONE,O.NONE,470,75,80,110,65,90,50,60,50,165,h.SLOW,50,!1,!1,new K("Ice Face","",n.ICE,null,1.4,89,O.ICE_FACE,O.NONE,O.NONE,470,75,80,110,65,90,50,60,50,165,!1,null,!0),new K("No Ice","no-ice",n.ICE,null,1.4,89,O.ICE_FACE,O.NONE,O.NONE,470,75,80,70,65,50,130,60,50,165)),new u(e.INDEEDEE,8,!1,!1,!1,"Emotion Pokémon",n.PSYCHIC,n.NORMAL,.9,28,O.INNER_FOCUS,O.SYNCHRONIZE,O.PSYCHIC_SURGE,475,60,65,55,105,95,95,30,140,166,h.FAST,50,!1,!1,new K("Male","male",n.PSYCHIC,n.NORMAL,.9,28,O.INNER_FOCUS,O.SYNCHRONIZE,O.PSYCHIC_SURGE,475,60,65,55,105,95,95,30,140,166,!1,"",!0),new K("Female","female",n.PSYCHIC,n.NORMAL,.9,28,O.OWN_TEMPO,O.SYNCHRONIZE,O.PSYCHIC_SURGE,475,70,55,65,95,105,85,30,140,166,!1,null,!0)),new u(e.MORPEKO,8,!1,!1,!1,"Two-Sided Pokémon",n.ELECTRIC,n.DARK,.3,3,O.HUNGER_SWITCH,O.NONE,O.NONE,436,58,95,58,70,58,97,180,50,153,h.MEDIUM_FAST,50,!1,!1,new K("Full Belly Mode","full-belly",n.ELECTRIC,n.DARK,.3,3,O.HUNGER_SWITCH,O.NONE,O.NONE,436,58,95,58,70,58,97,180,50,153,!1,"",!0),new K("Hangry Mode","hangry",n.ELECTRIC,n.DARK,.3,3,O.HUNGER_SWITCH,O.NONE,O.NONE,436,58,95,58,70,58,97,180,50,153)),new u(e.CUFANT,8,!1,!1,!1,"Copperderm Pokémon",n.STEEL,null,1.2,100,O.SHEER_FORCE,O.NONE,O.HEAVY_METAL,330,72,80,49,40,49,40,190,50,66,h.MEDIUM_FAST,50,!1),new u(e.COPPERAJAH,8,!1,!1,!1,"Copperderm Pokémon",n.STEEL,null,3,650,O.SHEER_FORCE,O.NONE,O.HEAVY_METAL,500,122,130,69,80,69,30,90,50,175,h.MEDIUM_FAST,50,!1,!0,new K("Normal","",n.STEEL,null,3,650,O.SHEER_FORCE,O.NONE,O.HEAVY_METAL,500,122,130,69,80,69,30,90,50,175,!1,null,!0),new K("G-Max",Ee.GIGANTAMAX,n.STEEL,n.GROUND,23,999.9,O.MOLD_BREAKER,O.NONE,O.MOLD_BREAKER,600,167,155,89,80,89,20,90,50,175)),new u(e.DRACOZOLT,8,!1,!1,!1,"Fossil Pokémon",n.ELECTRIC,n.DRAGON,1.8,190,O.VOLT_ABSORB,O.HUSTLE,O.SAND_RUSH,505,90,100,90,80,70,75,45,50,177,h.SLOW,null,!1),new u(e.ARCTOZOLT,8,!1,!1,!1,"Fossil Pokémon",n.ELECTRIC,n.ICE,2.3,150,O.VOLT_ABSORB,O.STATIC,O.SLUSH_RUSH,505,90,100,90,90,80,55,45,50,177,h.SLOW,null,!1),new u(e.DRACOVISH,8,!1,!1,!1,"Fossil Pokémon",n.WATER,n.DRAGON,2.3,215,O.WATER_ABSORB,O.STRONG_JAW,O.SAND_RUSH,505,90,90,100,70,80,75,45,50,177,h.SLOW,null,!1),new u(e.ARCTOVISH,8,!1,!1,!1,"Fossil Pokémon",n.WATER,n.ICE,2,175,O.WATER_ABSORB,O.ICE_BODY,O.SLUSH_RUSH,505,90,90,100,80,90,55,45,50,177,h.SLOW,null,!1),new u(e.DURALUDON,8,!1,!1,!1,"Alloy Pokémon",n.STEEL,n.DRAGON,1.8,40,O.LIGHT_METAL,O.HEAVY_METAL,O.STALWART,535,70,95,115,120,50,85,45,50,187,h.MEDIUM_FAST,50,!1,!0,new K("Normal","",n.STEEL,n.DRAGON,1.8,40,O.LIGHT_METAL,O.HEAVY_METAL,O.STALWART,535,70,95,115,120,50,85,45,50,187,!1,null,!0),new K("G-Max",Ee.GIGANTAMAX,n.STEEL,n.DRAGON,43,999.9,O.LIGHTNING_ROD,O.LIGHTNING_ROD,O.LIGHTNING_ROD,635,100,110,120,175,60,70,45,50,187)),new u(e.DREEPY,8,!1,!1,!1,"Lingering Pokémon",n.DRAGON,n.GHOST,.5,2,O.CLEAR_BODY,O.INFILTRATOR,O.CURSED_BODY,270,28,60,30,40,30,82,45,50,54,h.SLOW,50,!1),new u(e.DRAKLOAK,8,!1,!1,!1,"Caretaker Pokémon",n.DRAGON,n.GHOST,1.4,11,O.CLEAR_BODY,O.INFILTRATOR,O.CURSED_BODY,410,68,80,50,60,50,102,45,50,144,h.SLOW,50,!1),new u(e.DRAGAPULT,8,!1,!1,!1,"Stealth Pokémon",n.DRAGON,n.GHOST,3,50,O.CLEAR_BODY,O.INFILTRATOR,O.CURSED_BODY,600,88,120,75,100,75,142,45,50,300,h.SLOW,50,!1),new u(e.ZACIAN,8,!1,!0,!1,"Warrior Pokémon",n.FAIRY,null,2.8,110,O.INTREPID_SWORD,O.NONE,O.NONE,660,92,120,115,80,115,138,10,0,335,h.SLOW,null,!1,!1,new K("Hero of Many Battles","hero-of-many-battles",n.FAIRY,null,2.8,110,O.INTREPID_SWORD,O.NONE,O.NONE,660,92,120,115,80,115,138,10,0,335,!1,"",!0),new K("Crowned","crowned",n.FAIRY,n.STEEL,2.8,355,O.INTREPID_SWORD,O.NONE,O.NONE,700,92,150,115,80,115,148,10,0,335)),new u(e.ZAMAZENTA,8,!1,!0,!1,"Warrior Pokémon",n.FIGHTING,null,2.9,210,O.DAUNTLESS_SHIELD,O.NONE,O.NONE,660,92,120,115,80,115,138,10,0,335,h.SLOW,null,!1,!1,new K("Hero of Many Battles","hero-of-many-battles",n.FIGHTING,null,2.9,210,O.DAUNTLESS_SHIELD,O.NONE,O.NONE,660,92,120,115,80,115,138,10,0,335,!1,"",!0),new K("Crowned","crowned",n.FIGHTING,n.STEEL,2.9,785,O.DAUNTLESS_SHIELD,O.NONE,O.NONE,700,92,120,140,80,140,128,10,0,335)),new u(e.ETERNATUS,8,!1,!0,!1,"Gigantic Pokémon",n.POISON,n.DRAGON,20,950,O.PRESSURE,O.NONE,O.NONE,690,140,85,95,145,95,130,255,0,345,h.SLOW,null,!1,!0,new K("Normal","",n.POISON,n.DRAGON,20,950,O.PRESSURE,O.NONE,O.NONE,690,140,85,95,145,95,130,255,0,345,!1,null,!0),new K("E-Max","eternamax",n.POISON,n.DRAGON,100,999.9,O.PRESSURE,O.NONE,O.NONE,1125,255,115,250,125,250,130,255,0,345)),new u(e.KUBFU,8,!0,!1,!1,"Wushu Pokémon",n.FIGHTING,null,.6,12,O.INNER_FOCUS,O.NONE,O.NONE,385,60,90,60,53,50,72,3,50,77,h.SLOW,87.5,!1),new u(e.URSHIFU,8,!0,!1,!1,"Wushu Pokémon",n.FIGHTING,n.DARK,1.9,105,O.UNSEEN_FIST,O.NONE,O.NONE,550,100,130,100,63,60,97,3,50,275,h.SLOW,87.5,!1,!0,new K("Single Strike Style","single-strike",n.FIGHTING,n.DARK,1.9,105,O.UNSEEN_FIST,O.NONE,O.NONE,550,100,130,100,63,60,97,3,50,275,!1,"",!0),new K("Rapid Strike Style","rapid-strike",n.FIGHTING,n.WATER,1.9,105,O.UNSEEN_FIST,O.NONE,O.NONE,550,100,130,100,63,60,97,3,50,275,!1,null,!0),new K("G-Max Single Strike Style",Ee.GIGANTAMAX_SINGLE,n.FIGHTING,n.DARK,29,999.9,O.UNSEEN_FIST,O.NONE,O.NONE,650,125,150,115,73,70,117,3,50,275),new K("G-Max Rapid Strike Style",Ee.GIGANTAMAX_RAPID,n.FIGHTING,n.WATER,26,999.9,O.UNSEEN_FIST,O.NONE,O.NONE,650,125,150,115,73,70,117,3,50,275)),new u(e.ZARUDE,8,!1,!1,!0,"Rogue Monkey Pokémon",n.DARK,n.GRASS,1.8,70,O.LEAF_GUARD,O.NONE,O.NONE,600,105,120,105,70,95,105,3,0,300,h.SLOW,null,!1,!1,new K("Normal","",n.DARK,n.GRASS,1.8,70,O.LEAF_GUARD,O.NONE,O.NONE,600,105,120,105,70,95,105,3,0,300,!1,null,!0),new K("Dada","dada",n.DARK,n.GRASS,1.8,70,O.LEAF_GUARD,O.NONE,O.NONE,600,105,120,105,70,95,105,3,0,300,!1,null,!0)),new u(e.REGIELEKI,8,!0,!1,!1,"Electron Pokémon",n.ELECTRIC,null,1.2,145,O.TRANSISTOR,O.NONE,O.NONE,580,80,100,50,100,50,200,3,35,290,h.SLOW,null,!1),new u(e.REGIDRAGO,8,!0,!1,!1,"Dragon Orb Pokémon",n.DRAGON,null,2.1,200,O.DRAGONS_MAW,O.NONE,O.NONE,580,200,100,50,100,50,80,3,35,290,h.SLOW,null,!1),new u(e.GLASTRIER,8,!0,!1,!1,"Wild Horse Pokémon",n.ICE,null,2.2,800,O.CHILLING_NEIGH,O.NONE,O.NONE,580,100,145,130,65,110,30,3,35,290,h.SLOW,null,!1),new u(e.SPECTRIER,8,!0,!1,!1,"Swift Horse Pokémon",n.GHOST,null,2,44.5,O.GRIM_NEIGH,O.NONE,O.NONE,580,100,65,60,145,80,130,3,35,290,h.SLOW,null,!1),new u(e.CALYREX,8,!1,!0,!1,"King Pokémon",n.PSYCHIC,n.GRASS,1.1,7.7,O.UNNERVE,O.NONE,O.NONE,500,100,80,80,80,80,80,3,100,250,h.SLOW,null,!1,!0,new K("Normal","",n.PSYCHIC,n.GRASS,1.1,7.7,O.UNNERVE,O.NONE,O.NONE,500,100,80,80,80,80,80,3,100,250,!1,null,!0),new K("Ice","ice",n.PSYCHIC,n.ICE,2.4,809.1,O.AS_ONE_GLASTRIER,O.NONE,O.NONE,680,100,165,150,85,130,50,3,100,250),new K("Shadow","shadow",n.PSYCHIC,n.GHOST,2.4,53.6,O.AS_ONE_SPECTRIER,O.NONE,O.NONE,680,100,85,80,165,100,150,3,100,250)),new u(e.WYRDEER,8,!1,!1,!1,"Big Horn Pokémon",n.NORMAL,n.PSYCHIC,1.8,95.1,O.INTIMIDATE,O.FRISK,O.SAP_SIPPER,525,103,105,72,105,75,65,135,50,263,h.SLOW,50,!1),new u(e.KLEAVOR,8,!1,!1,!1,"Axe Pokémon",n.BUG,n.ROCK,1.8,89,O.SWARM,O.SHEER_FORCE,O.SHARPNESS,500,70,135,95,45,70,85,115,50,175,h.MEDIUM_FAST,50,!1),new u(e.URSALUNA,8,!1,!1,!1,"Peat Pokémon",n.GROUND,n.NORMAL,2.4,290,O.GUTS,O.BULLETPROOF,O.UNNERVE,550,130,140,105,45,80,50,75,50,275,h.MEDIUM_FAST,50,!1),new u(e.BASCULEGION,8,!1,!1,!1,"Big Fish Pokémon",n.WATER,n.GHOST,3,110,O.SWIFT_SWIM,O.ADAPTABILITY,O.MOLD_BREAKER,530,120,112,65,80,75,78,135,50,265,h.MEDIUM_FAST,50,!1,!1,new K("Male","male",n.WATER,n.GHOST,3,110,O.SWIFT_SWIM,O.ADAPTABILITY,O.MOLD_BREAKER,530,120,112,65,80,75,78,135,50,265,!1,"",!0),new K("Female","female",n.WATER,n.GHOST,3,110,O.SWIFT_SWIM,O.ADAPTABILITY,O.MOLD_BREAKER,530,120,92,65,100,75,78,135,50,265,!1,null,!0)),new u(e.SNEASLER,8,!1,!1,!1,"Free Climb Pokémon",n.FIGHTING,n.POISON,1.3,43,O.PRESSURE,O.UNBURDEN,O.POISON_TOUCH,510,80,130,60,40,80,120,135,50,102,h.MEDIUM_SLOW,50,!1),new u(e.OVERQWIL,8,!1,!1,!1,"Pin Cluster Pokémon",n.DARK,n.POISON,2.5,60.5,O.POISON_POINT,O.SWIFT_SWIM,O.INTIMIDATE,510,85,115,95,65,65,85,135,50,179,h.MEDIUM_FAST,50,!1),new u(e.ENAMORUS,8,!0,!1,!1,"Love-Hate Pokémon",n.FAIRY,n.FLYING,1.6,48,O.CUTE_CHARM,O.NONE,O.CONTRARY,580,74,115,70,135,80,106,3,50,116,h.SLOW,0,!1,!0,new K("Incarnate Forme","incarnate",n.FAIRY,n.FLYING,1.6,48,O.CUTE_CHARM,O.NONE,O.CONTRARY,580,74,115,70,135,80,106,3,50,116,!1,null,!0),new K("Therian Forme","therian",n.FAIRY,n.FLYING,1.6,48,O.OVERCOAT,O.NONE,O.OVERCOAT,580,74,115,110,135,100,46,3,50,116)),new u(e.SPRIGATITO,9,!1,!1,!1,"Grass Cat Pokémon",n.GRASS,null,.4,4.1,O.OVERGROW,O.NONE,O.PROTEAN,310,40,61,54,45,45,65,45,50,62,h.MEDIUM_SLOW,87.5,!1),new u(e.FLORAGATO,9,!1,!1,!1,"Grass Cat Pokémon",n.GRASS,null,.9,12.2,O.OVERGROW,O.NONE,O.PROTEAN,410,61,80,63,60,63,83,45,50,144,h.MEDIUM_SLOW,87.5,!1),new u(e.MEOWSCARADA,9,!1,!1,!1,"Magician Pokémon",n.GRASS,n.DARK,1.5,31.2,O.OVERGROW,O.NONE,O.PROTEAN,530,76,110,70,81,70,123,45,50,265,h.MEDIUM_SLOW,87.5,!1),new u(e.FUECOCO,9,!1,!1,!1,"Fire Croc Pokémon",n.FIRE,null,.4,9.8,O.BLAZE,O.NONE,O.UNAWARE,310,67,45,59,63,40,36,45,50,62,h.MEDIUM_SLOW,87.5,!1),new u(e.CROCALOR,9,!1,!1,!1,"Fire Croc Pokémon",n.FIRE,null,1,30.7,O.BLAZE,O.NONE,O.UNAWARE,411,81,55,78,90,58,49,45,50,144,h.MEDIUM_SLOW,87.5,!1),new u(e.SKELEDIRGE,9,!1,!1,!1,"Singer Pokémon",n.FIRE,n.GHOST,1.6,326.5,O.BLAZE,O.NONE,O.UNAWARE,530,104,75,100,110,75,66,45,50,265,h.MEDIUM_SLOW,87.5,!1),new u(e.QUAXLY,9,!1,!1,!1,"Duckling Pokémon",n.WATER,null,.5,6.1,O.TORRENT,O.NONE,O.MOXIE,310,55,65,45,50,45,50,45,50,62,h.MEDIUM_SLOW,87.5,!1),new u(e.QUAXWELL,9,!1,!1,!1,"Practicing Pokémon",n.WATER,null,1.2,21.5,O.TORRENT,O.NONE,O.MOXIE,410,70,85,65,65,60,65,45,50,144,h.MEDIUM_SLOW,87.5,!1),new u(e.QUAQUAVAL,9,!1,!1,!1,"Dancer Pokémon",n.WATER,n.FIGHTING,1.8,61.9,O.TORRENT,O.NONE,O.MOXIE,530,85,120,80,85,75,85,45,50,265,h.MEDIUM_SLOW,87.5,!1),new u(e.LECHONK,9,!1,!1,!1,"Hog Pokémon",n.NORMAL,null,.5,10.2,O.AROMA_VEIL,O.GLUTTONY,O.THICK_FAT,254,54,45,40,35,45,35,255,50,51,h.MEDIUM_FAST,50,!1),new u(e.OINKOLOGNE,9,!1,!1,!1,"Hog Pokémon",n.NORMAL,null,1,120,O.LINGERING_AROMA,O.GLUTTONY,O.THICK_FAT,489,110,100,75,59,80,65,100,50,171,h.MEDIUM_FAST,50,!1,!1,new K("Male","male",n.NORMAL,null,1,120,O.LINGERING_AROMA,O.GLUTTONY,O.THICK_FAT,489,110,100,75,59,80,65,100,50,171,!1,"",!0),new K("Female","female",n.NORMAL,null,1,120,O.AROMA_VEIL,O.GLUTTONY,O.THICK_FAT,489,115,90,70,59,90,65,100,50,171,!1,null,!0)),new u(e.TAROUNTULA,9,!1,!1,!1,"String Ball Pokémon",n.BUG,null,.3,4,O.INSOMNIA,O.NONE,O.STAKEOUT,210,35,41,45,29,40,20,255,50,42,h.ERRATIC,50,!1),new u(e.SPIDOPS,9,!1,!1,!1,"Trap Pokémon",n.BUG,null,1,16.5,O.INSOMNIA,O.NONE,O.STAKEOUT,404,60,79,92,52,86,35,120,50,141,h.ERRATIC,50,!1),new u(e.NYMBLE,9,!1,!1,!1,"Grasshopper Pokémon",n.BUG,null,.2,1,O.SWARM,O.NONE,O.TINTED_LENS,210,33,46,40,21,25,45,190,20,42,h.MEDIUM_FAST,50,!1),new u(e.LOKIX,9,!1,!1,!1,"Grasshopper Pokémon",n.BUG,n.DARK,1,17.5,O.SWARM,O.NONE,O.TINTED_LENS,450,71,102,78,52,55,92,30,0,158,h.MEDIUM_FAST,50,!1),new u(e.PAWMI,9,!1,!1,!1,"Mouse Pokémon",n.ELECTRIC,null,.3,2.5,O.STATIC,O.NATURAL_CURE,O.IRON_FIST,240,45,50,20,40,25,60,190,50,48,h.MEDIUM_FAST,50,!1),new u(e.PAWMO,9,!1,!1,!1,"Mouse Pokémon",n.ELECTRIC,n.FIGHTING,.4,6.5,O.VOLT_ABSORB,O.NATURAL_CURE,O.IRON_FIST,350,60,75,40,50,40,85,80,50,123,h.MEDIUM_FAST,50,!1),new u(e.PAWMOT,9,!1,!1,!1,"Hands-On Pokémon",n.ELECTRIC,n.FIGHTING,.9,41,O.VOLT_ABSORB,O.NATURAL_CURE,O.IRON_FIST,490,70,115,70,70,60,105,45,50,245,h.MEDIUM_FAST,50,!1),new u(e.TANDEMAUS,9,!1,!1,!1,"Couple Pokémon",n.NORMAL,null,.3,1.8,O.RUN_AWAY,O.PICKUP,O.OWN_TEMPO,305,50,50,45,40,45,75,150,50,61,h.FAST,null,!1),new u(e.MAUSHOLD,9,!1,!1,!1,"Family Pokémon",n.NORMAL,null,.3,2.3,O.FRIEND_GUARD,O.CHEEK_POUCH,O.TECHNICIAN,470,74,75,70,65,75,111,75,50,165,h.FAST,null,!1,!1,new K("Family of Four","four",n.NORMAL,null,.3,2.8,O.FRIEND_GUARD,O.CHEEK_POUCH,O.TECHNICIAN,470,74,75,70,65,75,111,75,50,165),new K("Family of Three","three",n.NORMAL,null,.3,2.3,O.FRIEND_GUARD,O.CHEEK_POUCH,O.TECHNICIAN,470,74,75,70,65,75,111,75,50,165)),new u(e.FIDOUGH,9,!1,!1,!1,"Puppy Pokémon",n.FAIRY,null,.3,10.9,O.OWN_TEMPO,O.NONE,O.KLUTZ,312,37,55,70,30,55,65,190,50,62,h.MEDIUM_SLOW,50,!1),new u(e.DACHSBUN,9,!1,!1,!1,"Dog Pokémon",n.FAIRY,null,.5,14.9,O.WELL_BAKED_BODY,O.NONE,O.AROMA_VEIL,477,57,80,115,50,80,95,90,50,167,h.MEDIUM_SLOW,50,!1),new u(e.SMOLIV,9,!1,!1,!1,"Olive Pokémon",n.GRASS,n.NORMAL,.3,6.5,O.EARLY_BIRD,O.NONE,O.HARVEST,260,41,35,45,58,51,30,255,50,52,h.MEDIUM_SLOW,50,!1),new u(e.DOLLIV,9,!1,!1,!1,"Olive Pokémon",n.GRASS,n.NORMAL,.6,11.9,O.EARLY_BIRD,O.NONE,O.HARVEST,354,52,53,60,78,78,33,120,50,124,h.MEDIUM_SLOW,50,!1),new u(e.ARBOLIVA,9,!1,!1,!1,"Olive Pokémon",n.GRASS,n.NORMAL,1.4,48.2,O.SEED_SOWER,O.NONE,O.HARVEST,510,78,69,90,125,109,39,45,50,255,h.MEDIUM_SLOW,50,!1),new u(e.SQUAWKABILLY,9,!1,!1,!1,"Parrot Pokémon",n.NORMAL,n.FLYING,.6,2.4,O.INTIMIDATE,O.HUSTLE,O.GUTS,417,82,96,51,45,51,92,190,50,146,h.ERRATIC,50,!1,!1,new K("Green Plumage","green-plumage",n.NORMAL,n.FLYING,.6,2.4,O.INTIMIDATE,O.HUSTLE,O.GUTS,417,82,96,51,45,51,92,190,50,146,!1,null,!0),new K("Blue Plumage","blue-plumage",n.NORMAL,n.FLYING,.6,2.4,O.INTIMIDATE,O.HUSTLE,O.GUTS,417,82,96,51,45,51,92,190,50,146,!1,null,!0),new K("Yellow Plumage","yellow-plumage",n.NORMAL,n.FLYING,.6,2.4,O.INTIMIDATE,O.HUSTLE,O.SHEER_FORCE,417,82,96,51,45,51,92,190,50,146,!1,null,!0),new K("White Plumage","white-plumage",n.NORMAL,n.FLYING,.6,2.4,O.INTIMIDATE,O.HUSTLE,O.SHEER_FORCE,417,82,96,51,45,51,92,190,50,146,!1,null,!0)),new u(e.NACLI,9,!1,!1,!1,"Rock Salt Pokémon",n.ROCK,null,.4,16,O.PURIFYING_SALT,O.STURDY,O.CLEAR_BODY,280,55,55,75,35,35,25,255,50,56,h.MEDIUM_SLOW,50,!1),new u(e.NACLSTACK,9,!1,!1,!1,"Rock Salt Pokémon",n.ROCK,null,.6,105,O.PURIFYING_SALT,O.STURDY,O.CLEAR_BODY,355,60,60,100,35,65,35,120,50,124,h.MEDIUM_SLOW,50,!1),new u(e.GARGANACL,9,!1,!1,!1,"Rock Salt Pokémon",n.ROCK,null,2.3,240,O.PURIFYING_SALT,O.STURDY,O.CLEAR_BODY,500,100,100,130,45,90,35,45,50,250,h.MEDIUM_SLOW,50,!1),new u(e.CHARCADET,9,!1,!1,!1,"Fire Child Pokémon",n.FIRE,null,.6,10.5,O.FLASH_FIRE,O.NONE,O.FLAME_BODY,255,40,50,40,50,40,35,90,50,51,h.SLOW,50,!1),new u(e.ARMAROUGE,9,!1,!1,!1,"Fire Warrior Pokémon",n.FIRE,n.PSYCHIC,1.5,85,O.FLASH_FIRE,O.NONE,O.WEAK_ARMOR,525,85,60,100,125,80,75,25,20,263,h.SLOW,50,!1),new u(e.CERULEDGE,9,!1,!1,!1,"Fire Blades Pokémon",n.FIRE,n.GHOST,1.6,62,O.FLASH_FIRE,O.NONE,O.WEAK_ARMOR,525,75,125,80,60,100,85,25,20,263,h.SLOW,50,!1),new u(e.TADBULB,9,!1,!1,!1,"EleTadpole Pokémon",n.ELECTRIC,null,.3,.4,O.OWN_TEMPO,O.STATIC,O.DAMP,272,61,31,41,59,35,45,190,50,54,h.MEDIUM_FAST,50,!1),new u(e.BELLIBOLT,9,!1,!1,!1,"EleFrog Pokémon",n.ELECTRIC,null,1.2,113,O.ELECTROMORPHOSIS,O.STATIC,O.DAMP,495,109,64,91,103,83,45,50,50,173,h.MEDIUM_FAST,50,!1),new u(e.WATTREL,9,!1,!1,!1,"Storm Petrel Pokémon",n.ELECTRIC,n.FLYING,.4,3.6,O.WIND_POWER,O.VOLT_ABSORB,O.COMPETITIVE,280,40,40,35,55,40,70,180,50,56,h.MEDIUM_SLOW,50,!1),new u(e.KILOWATTREL,9,!1,!1,!1,"Frigatebird Pokémon",n.ELECTRIC,n.FLYING,1.4,38.6,O.WIND_POWER,O.VOLT_ABSORB,O.COMPETITIVE,490,70,70,60,105,60,125,90,50,172,h.MEDIUM_SLOW,50,!1),new u(e.MASCHIFF,9,!1,!1,!1,"Rascal Pokémon",n.DARK,null,.5,16,O.INTIMIDATE,O.RUN_AWAY,O.STAKEOUT,340,60,78,60,40,51,51,150,50,68,h.MEDIUM_SLOW,50,!1),new u(e.MABOSSTIFF,9,!1,!1,!1,"Boss Pokémon",n.DARK,null,1.1,61,O.INTIMIDATE,O.GUARD_DOG,O.STAKEOUT,505,80,120,90,60,70,85,75,50,177,h.MEDIUM_SLOW,50,!1),new u(e.SHROODLE,9,!1,!1,!1,"Toxic Mouse Pokémon",n.POISON,n.NORMAL,.2,.7,O.UNBURDEN,O.PICKPOCKET,O.PRANKSTER,290,40,65,35,40,35,75,190,50,58,h.MEDIUM_SLOW,50,!1),new u(e.GRAFAIAI,9,!1,!1,!1,"Toxic Monkey Pokémon",n.POISON,n.NORMAL,.7,27.2,O.UNBURDEN,O.POISON_TOUCH,O.PRANKSTER,485,63,95,65,80,72,110,90,50,170,h.MEDIUM_SLOW,50,!1),new u(e.BRAMBLIN,9,!1,!1,!1,"Tumbleweed Pokémon",n.GRASS,n.GHOST,.6,.6,O.WIND_RIDER,O.NONE,O.INFILTRATOR,275,40,65,30,45,35,60,190,50,55,h.MEDIUM_FAST,50,!1),new u(e.BRAMBLEGHAST,9,!1,!1,!1,"Tumbleweed Pokémon",n.GRASS,n.GHOST,1.2,6,O.WIND_RIDER,O.NONE,O.INFILTRATOR,480,55,115,70,80,70,90,45,50,168,h.MEDIUM_FAST,50,!1),new u(e.TOEDSCOOL,9,!1,!1,!1,"Woodear Pokémon",n.GROUND,n.GRASS,.9,33,O.MYCELIUM_MIGHT,O.NONE,O.NONE,335,40,40,35,50,100,70,190,50,67,h.MEDIUM_SLOW,50,!1),new u(e.TOEDSCRUEL,9,!1,!1,!1,"Woodear Pokémon",n.GROUND,n.GRASS,1.9,58,O.MYCELIUM_MIGHT,O.NONE,O.NONE,515,80,70,65,80,120,100,90,50,180,h.MEDIUM_SLOW,50,!1),new u(e.KLAWF,9,!1,!1,!1,"Ambush Pokémon",n.ROCK,null,1.3,79,O.ANGER_SHELL,O.SHELL_ARMOR,O.REGENERATOR,450,70,100,115,35,55,75,120,50,158,h.MEDIUM_FAST,50,!1),new u(e.CAPSAKID,9,!1,!1,!1,"Spicy Pepper Pokémon",n.GRASS,null,.3,3,O.CHLOROPHYLL,O.INSOMNIA,O.KLUTZ,304,50,62,40,62,40,50,190,50,61,h.MEDIUM_FAST,50,!1),new u(e.SCOVILLAIN,9,!1,!1,!1,"Spicy Pepper Pokémon",n.GRASS,n.FIRE,.9,15,O.CHLOROPHYLL,O.INSOMNIA,O.MOODY,486,65,108,65,108,65,75,75,50,170,h.MEDIUM_FAST,50,!1),new u(e.RELLOR,9,!1,!1,!1,"Rolling Pokémon",n.BUG,null,.2,1,O.COMPOUND_EYES,O.NONE,O.SHED_SKIN,270,41,50,60,31,58,30,190,50,54,h.FAST,50,!1),new u(e.RABSCA,9,!1,!1,!1,"Rolling Pokémon",n.BUG,n.PSYCHIC,.3,3.5,O.SYNCHRONIZE,O.NONE,O.TELEPATHY,470,75,50,85,115,100,45,45,50,165,h.FAST,50,!1),new u(e.FLITTLE,9,!1,!1,!1,"Frill Pokémon",n.PSYCHIC,null,.2,1.5,O.ANTICIPATION,O.FRISK,O.SPEED_BOOST,255,30,35,30,55,30,75,120,50,51,h.MEDIUM_SLOW,50,!1),new u(e.ESPATHRA,9,!1,!1,!1,"Ostrich Pokémon",n.PSYCHIC,null,1.9,90,O.OPPORTUNIST,O.FRISK,O.SPEED_BOOST,481,95,60,60,101,60,105,60,50,168,h.MEDIUM_SLOW,50,!1),new u(e.TINKATINK,9,!1,!1,!1,"Metalsmith Pokémon",n.FAIRY,n.STEEL,.4,8.9,O.MOLD_BREAKER,O.OWN_TEMPO,O.PICKPOCKET,297,50,45,45,35,64,58,190,50,59,h.MEDIUM_SLOW,0,!1),new u(e.TINKATUFF,9,!1,!1,!1,"Hammer Pokémon",n.FAIRY,n.STEEL,.7,59.1,O.MOLD_BREAKER,O.OWN_TEMPO,O.PICKPOCKET,380,65,55,55,45,82,78,90,50,133,h.MEDIUM_SLOW,0,!1),new u(e.TINKATON,9,!1,!1,!1,"Hammer Pokémon",n.FAIRY,n.STEEL,.7,112.8,O.MOLD_BREAKER,O.OWN_TEMPO,O.PICKPOCKET,506,85,75,77,70,105,94,45,50,253,h.MEDIUM_SLOW,0,!1),new u(e.WIGLETT,9,!1,!1,!1,"Garden Eel Pokémon",n.WATER,null,1.2,1.8,O.GOOEY,O.RATTLED,O.SAND_VEIL,245,10,55,25,35,25,95,255,50,49,h.MEDIUM_FAST,50,!1),new u(e.WUGTRIO,9,!1,!1,!1,"Garden Eel Pokémon",n.WATER,null,1.2,5.4,O.GOOEY,O.RATTLED,O.SAND_VEIL,425,35,100,50,50,70,120,50,50,149,h.MEDIUM_FAST,50,!1),new u(e.BOMBIRDIER,9,!1,!1,!1,"Item Drop Pokémon",n.FLYING,n.DARK,1.5,42.9,O.BIG_PECKS,O.KEEN_EYE,O.ROCKY_PAYLOAD,485,70,103,85,60,85,82,25,50,243,h.SLOW,50,!1),new u(e.FINIZEN,9,!1,!1,!1,"Dolphin Pokémon",n.WATER,null,1.3,60.2,O.WATER_VEIL,O.NONE,O.NONE,315,70,45,40,45,40,75,200,50,63,h.SLOW,50,!1),new u(e.PALAFIN,9,!1,!1,!1,"Dolphin Pokémon",n.WATER,null,1.3,60.2,O.ZERO_TO_HERO,O.NONE,O.NONE,457,100,70,72,53,62,100,45,50,160,h.SLOW,50,!1,!0,new K("Zero Form","zero",n.WATER,null,1.3,60.2,O.ZERO_TO_HERO,O.NONE,O.ZERO_TO_HERO,457,100,70,72,53,62,100,45,50,160,!1,null,!0),new K("Hero Form","hero",n.WATER,null,1.8,97.4,O.ZERO_TO_HERO,O.NONE,O.ZERO_TO_HERO,650,100,160,97,106,87,100,45,50,160)),new u(e.VAROOM,9,!1,!1,!1,"Single-Cyl Pokémon",n.STEEL,n.POISON,1,35,O.OVERCOAT,O.NONE,O.SLOW_START,300,45,70,63,30,45,47,190,50,60,h.MEDIUM_FAST,50,!1),new u(e.REVAVROOM,9,!1,!1,!1,"Multi-Cyl Pokémon",n.STEEL,n.POISON,1.8,120,O.OVERCOAT,O.NONE,O.FILTER,500,80,119,90,54,67,90,75,50,175,h.MEDIUM_FAST,50,!1,!1,new K("Normal","",n.STEEL,n.POISON,1.8,120,O.OVERCOAT,O.NONE,O.FILTER,500,80,119,90,54,67,90,75,50,175,!1,null,!0),new K("Segin Starmobile","segin-starmobile",n.STEEL,n.DARK,1.8,240,O.INTIMIDATE,O.NONE,O.INTIMIDATE,600,110,129,100,77,79,105,75,50,175),new K("Schedar Starmobile","schedar-starmobile",n.STEEL,n.FIRE,1.8,240,O.SPEED_BOOST,O.NONE,O.SPEED_BOOST,600,110,129,100,77,79,105,75,50,175),new K("Navi Starmobile","navi-starmobile",n.STEEL,n.POISON,1.8,240,O.TOXIC_DEBRIS,O.NONE,O.TOXIC_DEBRIS,600,110,129,100,77,79,105,75,50,175),new K("Ruchbah Starmobile","ruchbah-starmobile",n.STEEL,n.FAIRY,1.8,240,O.MISTY_SURGE,O.NONE,O.MISTY_SURGE,600,110,129,100,77,79,105,75,50,175),new K("Caph Starmobile","caph-starmobile",n.STEEL,n.FIGHTING,1.8,240,O.STAMINA,O.NONE,O.STAMINA,600,110,129,100,77,79,105,75,50,175)),new u(e.CYCLIZAR,9,!1,!1,!1,"Mount Pokémon",n.DRAGON,n.NORMAL,1.6,63,O.SHED_SKIN,O.NONE,O.REGENERATOR,501,70,95,65,85,65,121,190,50,175,h.MEDIUM_SLOW,50,!1),new u(e.ORTHWORM,9,!1,!1,!1,"Earthworm Pokémon",n.STEEL,null,2.5,310,O.EARTH_EATER,O.NONE,O.SAND_VEIL,480,70,85,145,60,55,65,25,50,240,h.SLOW,50,!1),new u(e.GLIMMET,9,!1,!1,!1,"Ore Pokémon",n.ROCK,n.POISON,.7,8,O.TOXIC_DEBRIS,O.NONE,O.CORROSION,350,48,35,42,105,60,60,70,50,70,h.MEDIUM_SLOW,50,!1),new u(e.GLIMMORA,9,!1,!1,!1,"Ore Pokémon",n.ROCK,n.POISON,1.5,45,O.TOXIC_DEBRIS,O.NONE,O.CORROSION,525,83,55,90,130,81,86,25,50,184,h.MEDIUM_SLOW,50,!1),new u(e.GREAVARD,9,!1,!1,!1,"Ghost Dog Pokémon",n.GHOST,null,.6,35,O.PICKUP,O.NONE,O.FLUFFY,290,50,61,60,30,55,34,120,50,58,h.MEDIUM_SLOW,50,!1),new u(e.HOUNDSTONE,9,!1,!1,!1,"Ghost Dog Pokémon",n.GHOST,null,2,15,O.SAND_RUSH,O.NONE,O.FLUFFY,488,72,101,100,50,97,68,60,50,171,h.MEDIUM_SLOW,50,!1),new u(e.FLAMIGO,9,!1,!1,!1,"Synchronize Pokémon",n.FLYING,n.FIGHTING,1.6,37,O.SCRAPPY,O.TANGLED_FEET,O.COSTAR,500,82,115,74,75,64,90,100,50,175,h.MEDIUM_SLOW,50,!1),new u(e.CETODDLE,9,!1,!1,!1,"Terra Whale Pokémon",n.ICE,null,1.2,45,O.THICK_FAT,O.SNOW_CLOAK,O.SHEER_FORCE,334,108,68,45,30,40,43,150,50,67,h.MEDIUM_SLOW,50,!1),new u(e.CETITAN,9,!1,!1,!1,"Terra Whale Pokémon",n.ICE,null,4.5,700,O.THICK_FAT,O.SLUSH_RUSH,O.SHEER_FORCE,521,170,113,65,45,55,73,50,50,182,h.MEDIUM_SLOW,50,!1),new u(e.VELUZA,9,!1,!1,!1,"Jettison Pokémon",n.WATER,n.PSYCHIC,2.5,90,O.MOLD_BREAKER,O.NONE,O.SHARPNESS,478,90,102,73,78,65,70,100,50,167,h.FAST,50,!1),new u(e.DONDOZO,9,!1,!1,!1,"Big Catfish Pokémon",n.WATER,null,12,220,O.UNAWARE,O.OBLIVIOUS,O.WATER_VEIL,530,150,100,115,65,65,35,25,50,265,h.SLOW,50,!1),new u(e.TATSUGIRI,9,!1,!1,!1,"Mimicry Pokémon",n.DRAGON,n.WATER,.3,8,O.COMMANDER,O.NONE,O.STORM_DRAIN,475,68,50,60,120,95,82,100,50,166,h.MEDIUM_SLOW,50,!1,!1,new K("Curly Form","curly",n.DRAGON,n.WATER,.3,8,O.COMMANDER,O.NONE,O.STORM_DRAIN,475,68,50,60,120,95,82,100,50,166,!1,null,!0),new K("Droopy Form","droopy",n.DRAGON,n.WATER,.3,8,O.COMMANDER,O.NONE,O.STORM_DRAIN,475,68,50,60,120,95,82,100,50,166,!1,null,!0),new K("Stretchy Form","stretchy",n.DRAGON,n.WATER,.3,8,O.COMMANDER,O.NONE,O.STORM_DRAIN,475,68,50,60,120,95,82,100,50,166,!1,null,!0)),new u(e.ANNIHILAPE,9,!1,!1,!1,"Rage Monkey Pokémon",n.FIGHTING,n.GHOST,1.2,56,O.VITAL_SPIRIT,O.INNER_FOCUS,O.DEFIANT,535,110,115,80,50,90,90,45,50,268,h.MEDIUM_FAST,50,!1),new u(e.CLODSIRE,9,!1,!1,!1,"Spiny Fish Pokémon",n.POISON,n.GROUND,1.8,223,O.POISON_POINT,O.WATER_ABSORB,O.UNAWARE,430,130,75,60,45,100,20,90,50,151,h.MEDIUM_FAST,50,!1),new u(e.FARIGIRAF,9,!1,!1,!1,"Long Neck Pokémon",n.NORMAL,n.PSYCHIC,3.2,160,O.CUD_CHEW,O.ARMOR_TAIL,O.SAP_SIPPER,520,120,90,70,110,70,60,45,50,260,h.MEDIUM_FAST,50,!1),new u(e.DUDUNSPARCE,9,!1,!1,!1,"Land Snake Pokémon",n.NORMAL,null,3.6,39.2,O.SERENE_GRACE,O.RUN_AWAY,O.RATTLED,520,125,100,80,85,75,55,45,50,182,h.MEDIUM_FAST,50,!1,!1,new K("Two-Segment Form","two-segment",n.NORMAL,null,3.6,39.2,O.SERENE_GRACE,O.RUN_AWAY,O.RATTLED,520,125,100,80,85,75,55,45,50,182,!1,""),new K("Three-Segment Form","three-segment",n.NORMAL,null,4.5,47.4,O.SERENE_GRACE,O.RUN_AWAY,O.RATTLED,520,125,100,80,85,75,55,45,50,182)),new u(e.KINGAMBIT,9,!1,!1,!1,"Big Blade Pokémon",n.DARK,n.STEEL,2,120,O.DEFIANT,O.SUPREME_OVERLORD,O.PRESSURE,550,100,135,120,60,85,50,25,50,275,h.MEDIUM_FAST,50,!1),new u(e.GREAT_TUSK,9,!1,!1,!1,"Paradox Pokémon",n.GROUND,n.FIGHTING,2.2,320,O.PROTOSYNTHESIS,O.NONE,O.NONE,570,115,131,131,53,53,87,30,0,285,h.SLOW,null,!1),new u(e.SCREAM_TAIL,9,!1,!1,!1,"Paradox Pokémon",n.FAIRY,n.PSYCHIC,1.2,8,O.PROTOSYNTHESIS,O.NONE,O.NONE,570,115,65,99,65,115,111,50,0,285,h.SLOW,null,!1),new u(e.BRUTE_BONNET,9,!1,!1,!1,"Paradox Pokémon",n.GRASS,n.DARK,1.2,21,O.PROTOSYNTHESIS,O.NONE,O.NONE,570,111,127,99,79,99,55,50,0,285,h.SLOW,null,!1),new u(e.FLUTTER_MANE,9,!1,!1,!1,"Paradox Pokémon",n.GHOST,n.FAIRY,1.4,4,O.PROTOSYNTHESIS,O.NONE,O.NONE,570,55,55,55,135,135,135,30,0,285,h.SLOW,null,!1),new u(e.SLITHER_WING,9,!1,!1,!1,"Paradox Pokémon",n.BUG,n.FIGHTING,3.2,92,O.PROTOSYNTHESIS,O.NONE,O.NONE,570,85,135,79,85,105,81,30,0,285,h.SLOW,null,!1),new u(e.SANDY_SHOCKS,9,!1,!1,!1,"Paradox Pokémon",n.ELECTRIC,n.GROUND,2.3,60,O.PROTOSYNTHESIS,O.NONE,O.NONE,570,85,81,97,121,85,101,30,0,285,h.SLOW,null,!1),new u(e.IRON_TREADS,9,!1,!1,!1,"Paradox Pokémon",n.GROUND,n.STEEL,.9,240,O.QUARK_DRIVE,O.NONE,O.NONE,570,90,112,120,72,70,106,30,0,285,h.SLOW,null,!1),new u(e.IRON_BUNDLE,9,!1,!1,!1,"Paradox Pokémon",n.ICE,n.WATER,.6,11,O.QUARK_DRIVE,O.NONE,O.NONE,570,56,80,114,124,60,136,50,0,285,h.SLOW,null,!1),new u(e.IRON_HANDS,9,!1,!1,!1,"Paradox Pokémon",n.FIGHTING,n.ELECTRIC,1.8,380.7,O.QUARK_DRIVE,O.NONE,O.NONE,570,154,140,108,50,68,50,50,0,285,h.SLOW,null,!1),new u(e.IRON_JUGULIS,9,!1,!1,!1,"Paradox Pokémon",n.DARK,n.FLYING,1.3,111,O.QUARK_DRIVE,O.NONE,O.NONE,570,94,80,86,122,80,108,30,0,285,h.SLOW,null,!1),new u(e.IRON_MOTH,9,!1,!1,!1,"Paradox Pokémon",n.FIRE,n.POISON,1.2,36,O.QUARK_DRIVE,O.NONE,O.NONE,570,80,70,60,140,110,110,30,0,285,h.SLOW,null,!1),new u(e.IRON_THORNS,9,!1,!1,!1,"Paradox Pokémon",n.ROCK,n.ELECTRIC,1.6,303,O.QUARK_DRIVE,O.NONE,O.NONE,570,100,134,110,70,84,72,30,0,285,h.SLOW,null,!1),new u(e.FRIGIBAX,9,!1,!1,!1,"Ice Fin Pokémon",n.DRAGON,n.ICE,.5,17,O.THERMAL_EXCHANGE,O.NONE,O.ICE_BODY,320,65,75,45,35,45,55,45,50,64,h.SLOW,50,!1),new u(e.ARCTIBAX,9,!1,!1,!1,"Ice Fin Pokémon",n.DRAGON,n.ICE,.8,30,O.THERMAL_EXCHANGE,O.NONE,O.ICE_BODY,423,90,95,66,45,65,62,25,50,148,h.SLOW,50,!1),new u(e.BAXCALIBUR,9,!1,!1,!1,"Ice Dragon Pokémon",n.DRAGON,n.ICE,2.1,210,O.THERMAL_EXCHANGE,O.NONE,O.ICE_BODY,600,115,145,92,75,86,87,10,50,300,h.SLOW,50,!1),new u(e.GIMMIGHOUL,9,!1,!1,!1,"Coin Chest Pokémon",n.GHOST,null,.3,5,O.RATTLED,O.NONE,O.NONE,300,45,30,70,75,70,10,45,50,60,h.SLOW,null,!1,!1,new K("Chest Form","chest",n.GHOST,null,.3,5,O.RATTLED,O.NONE,O.NONE,300,45,30,70,75,70,10,45,50,60,!1,"",!0),new K("Roaming Form","roaming",n.GHOST,null,.1,1,O.RUN_AWAY,O.NONE,O.NONE,300,45,30,25,75,45,80,45,50,60,!1,null,!0)),new u(e.GHOLDENGO,9,!1,!1,!1,"Coin Entity Pokémon",n.STEEL,n.GHOST,1.2,30,O.GOOD_AS_GOLD,O.NONE,O.NONE,550,87,60,95,133,91,84,45,50,275,h.SLOW,null,!1),new u(e.WO_CHIEN,9,!0,!1,!1,"Ruinous Pokémon",n.DARK,n.GRASS,1.5,74.2,O.TABLETS_OF_RUIN,O.NONE,O.NONE,570,85,85,100,95,135,70,6,0,285,h.SLOW,null,!1),new u(e.CHIEN_PAO,9,!0,!1,!1,"Ruinous Pokémon",n.DARK,n.ICE,1.9,152.2,O.SWORD_OF_RUIN,O.NONE,O.NONE,570,80,120,80,90,65,135,6,0,285,h.SLOW,null,!1),new u(e.TING_LU,9,!0,!1,!1,"Ruinous Pokémon",n.DARK,n.GROUND,2.7,699.7,O.VESSEL_OF_RUIN,O.NONE,O.NONE,570,155,110,125,55,80,45,6,0,285,h.SLOW,null,!1),new u(e.CHI_YU,9,!0,!1,!1,"Ruinous Pokémon",n.DARK,n.FIRE,.4,4.9,O.BEADS_OF_RUIN,O.NONE,O.NONE,570,55,80,80,135,120,100,6,0,285,h.SLOW,null,!1),new u(e.ROARING_MOON,9,!1,!1,!1,"Paradox Pokémon",n.DRAGON,n.DARK,2,380,O.PROTOSYNTHESIS,O.NONE,O.NONE,590,105,139,71,55,101,119,10,0,295,h.SLOW,null,!1),new u(e.IRON_VALIANT,9,!1,!1,!1,"Paradox Pokémon",n.FAIRY,n.FIGHTING,1.4,35,O.QUARK_DRIVE,O.NONE,O.NONE,590,74,130,90,120,60,116,10,0,295,h.SLOW,null,!1),new u(e.KORAIDON,9,!1,!0,!1,"Paradox Pokémon",n.FIGHTING,n.DRAGON,2.5,303,O.ORICHALCUM_PULSE,O.NONE,O.NONE,670,100,135,115,85,100,135,3,0,335,h.SLOW,null,!1,!1,new K("Apex Build","apex-build",n.FIGHTING,n.DRAGON,2.5,303,O.ORICHALCUM_PULSE,O.NONE,O.NONE,670,100,135,115,85,100,135,3,0,335,!1,null,!0),new K("Limited Build","limited-build",n.FIGHTING,n.DRAGON,3.5,303,O.ORICHALCUM_PULSE,O.NONE,O.NONE,670,100,135,115,85,100,135,3,0,335,!1,null,!0),new K("Sprinting Build","sprinting-build",n.FIGHTING,n.DRAGON,3.5,303,O.ORICHALCUM_PULSE,O.NONE,O.NONE,670,100,135,115,85,100,135,3,0,335,!1,null,!0),new K("Swimming Build","swimming-build",n.FIGHTING,n.DRAGON,3.5,303,O.ORICHALCUM_PULSE,O.NONE,O.NONE,670,100,135,115,85,100,135,3,0,335,!1,null,!0),new K("Gliding Build","gliding-build",n.FIGHTING,n.DRAGON,3.5,303,O.ORICHALCUM_PULSE,O.NONE,O.NONE,670,100,135,115,85,100,135,3,0,335,!1,null,!0)),new u(e.MIRAIDON,9,!1,!0,!1,"Paradox Pokémon",n.ELECTRIC,n.DRAGON,3.5,240,O.HADRON_ENGINE,O.NONE,O.NONE,670,100,85,100,135,115,135,3,0,335,h.SLOW,null,!1,!1,new K("Ultimate Mode","ultimate-mode",n.ELECTRIC,n.DRAGON,3.5,240,O.HADRON_ENGINE,O.NONE,O.NONE,670,100,85,100,135,115,135,3,0,335,!1,null,!0),new K("Low-Power Mode","low-power-mode",n.ELECTRIC,n.DRAGON,2.8,240,O.HADRON_ENGINE,O.NONE,O.NONE,670,100,85,100,135,115,135,3,0,335,!1,null,!0),new K("Drive Mode","drive-mode",n.ELECTRIC,n.DRAGON,2.8,240,O.HADRON_ENGINE,O.NONE,O.NONE,670,100,85,100,135,115,135,3,0,335,!1,null,!0),new K("Aquatic Mode","aquatic-mode",n.ELECTRIC,n.DRAGON,2.8,240,O.HADRON_ENGINE,O.NONE,O.NONE,670,100,85,100,135,115,135,3,0,335,!1,null,!0),new K("Glide Mode","glide-mode",n.ELECTRIC,n.DRAGON,2.8,240,O.HADRON_ENGINE,O.NONE,O.NONE,670,100,85,100,135,115,135,3,0,335,!1,null,!0)),new u(e.WALKING_WAKE,9,!1,!1,!1,"Paradox Pokémon",n.WATER,n.DRAGON,3.5,280,O.PROTOSYNTHESIS,O.NONE,O.NONE,590,99,83,91,125,83,109,10,0,295,h.SLOW,null,!1),new u(e.IRON_LEAVES,9,!1,!1,!1,"Paradox Pokémon",n.GRASS,n.PSYCHIC,1.5,125,O.QUARK_DRIVE,O.NONE,O.NONE,590,90,130,88,70,108,104,10,0,295,h.SLOW,null,!1),new u(e.DIPPLIN,9,!1,!1,!1,"Candy Apple Pokémon",n.GRASS,n.DRAGON,.4,9.7,O.SUPERSWEET_SYRUP,O.GLUTTONY,O.STICKY_HOLD,485,80,80,110,95,80,40,45,50,170,h.ERRATIC,50,!1),new u(e.POLTCHAGEIST,9,!1,!1,!1,"Matcha Pokémon",n.GRASS,n.GHOST,.1,1.1,O.HOSPITALITY,O.NONE,O.HEATPROOF,308,40,45,45,74,54,50,120,50,62,h.SLOW,null,!1,!1,new K("Counterfeit Form","counterfeit",n.GRASS,n.GHOST,.1,1.1,O.HOSPITALITY,O.NONE,O.HEATPROOF,308,40,45,45,74,54,50,120,50,62,!1,null,!0),new K("Artisan Form","artisan",n.GRASS,n.GHOST,.1,1.1,O.HOSPITALITY,O.NONE,O.HEATPROOF,308,40,45,45,74,54,50,120,50,62,!1,null,!0)),new u(e.SINISTCHA,9,!1,!1,!1,"Matcha Pokémon",n.GRASS,n.GHOST,.2,2.2,O.HOSPITALITY,O.NONE,O.HEATPROOF,508,71,60,106,121,80,70,60,50,178,h.SLOW,null,!1,!1,new K("Unremarkable Form","unremarkable",n.GRASS,n.GHOST,.2,2.2,O.HOSPITALITY,O.NONE,O.HEATPROOF,508,71,60,106,121,80,70,60,50,178),new K("Masterpiece Form","masterpiece",n.GRASS,n.GHOST,.2,2.2,O.HOSPITALITY,O.NONE,O.HEATPROOF,508,71,60,106,121,80,70,60,50,178)),new u(e.OKIDOGI,9,!0,!1,!1,"Retainer Pokémon",n.POISON,n.FIGHTING,1.8,92.2,O.TOXIC_CHAIN,O.NONE,O.GUARD_DOG,555,88,128,115,58,86,80,3,0,276,h.SLOW,100,!1),new u(e.MUNKIDORI,9,!0,!1,!1,"Retainer Pokémon",n.POISON,n.PSYCHIC,1,12.2,O.TOXIC_CHAIN,O.NONE,O.FRISK,555,88,75,66,130,90,106,3,0,276,h.SLOW,100,!1),new u(e.FEZANDIPITI,9,!0,!1,!1,"Retainer Pokémon",n.POISON,n.FAIRY,1.4,30.1,O.TOXIC_CHAIN,O.NONE,O.TECHNICIAN,555,88,91,82,70,125,99,3,0,276,h.SLOW,100,!1),new u(e.OGERPON,9,!0,!1,!1,"Mask Pokémon",n.GRASS,null,1.2,39.8,O.DEFIANT,O.NONE,O.NONE,550,80,120,84,60,96,110,5,50,275,h.SLOW,0,!1,!1,new K("Teal Mask","teal-mask",n.GRASS,null,1.2,39.8,O.DEFIANT,O.NONE,O.NONE,550,80,120,84,60,96,110,5,50,275,!1,null,!0),new K("Wellspring Mask","wellspring-mask",n.GRASS,n.WATER,1.2,39.8,O.WATER_ABSORB,O.NONE,O.NONE,550,80,120,84,60,96,110,5,50,275),new K("Hearthflame Mask","hearthflame-mask",n.GRASS,n.FIRE,1.2,39.8,O.MOLD_BREAKER,O.NONE,O.NONE,550,80,120,84,60,96,110,5,50,275),new K("Cornerstone Mask","cornerstone-mask",n.GRASS,n.ROCK,1.2,39.8,O.STURDY,O.NONE,O.NONE,550,80,120,84,60,96,110,5,50,275),new K("Teal Mask Terastallized","teal-mask-tera",n.GRASS,null,1.2,39.8,O.EMBODY_ASPECT_TEAL,O.NONE,O.NONE,550,80,120,84,60,96,110,5,50,275),new K("Wellspring Mask Terastallized","wellspring-mask-tera",n.GRASS,n.WATER,1.2,39.8,O.EMBODY_ASPECT_WELLSPRING,O.NONE,O.NONE,550,80,120,84,60,96,110,5,50,275),new K("Hearthflame Mask Terastallized","hearthflame-mask-tera",n.GRASS,n.FIRE,1.2,39.8,O.EMBODY_ASPECT_HEARTHFLAME,O.NONE,O.NONE,550,80,120,84,60,96,110,5,50,275),new K("Cornerstone Mask Terastallized","cornerstone-mask-tera",n.GRASS,n.ROCK,1.2,39.8,O.EMBODY_ASPECT_CORNERSTONE,O.NONE,O.NONE,550,80,120,84,60,96,110,5,50,275)),new u(e.ARCHALUDON,9,!1,!1,!1,"Alloy Pokémon",n.STEEL,n.DRAGON,2,60,O.STAMINA,O.STURDY,O.STALWART,600,90,105,130,125,65,85,10,50,300,h.MEDIUM_FAST,50,!1),new u(e.HYDRAPPLE,9,!1,!1,!1,"Apple Hydra Pokémon",n.GRASS,n.DRAGON,1.8,93,O.SUPERSWEET_SYRUP,O.REGENERATOR,O.STICKY_HOLD,540,106,80,110,120,80,44,10,50,270,h.ERRATIC,50,!1),new u(e.GOUGING_FIRE,9,!1,!1,!1,"Paradox Pokémon",n.FIRE,n.DRAGON,3.5,590,O.PROTOSYNTHESIS,O.NONE,O.NONE,590,105,115,121,65,93,91,10,0,295,h.SLOW,null,!1),new u(e.RAGING_BOLT,9,!1,!1,!1,"Paradox Pokémon",n.ELECTRIC,n.DRAGON,5.2,480,O.PROTOSYNTHESIS,O.NONE,O.NONE,590,125,73,91,137,89,75,10,0,295,h.SLOW,null,!1),new u(e.IRON_BOULDER,9,!1,!1,!1,"Paradox Pokémon",n.ROCK,n.PSYCHIC,1.5,162.5,O.QUARK_DRIVE,O.NONE,O.NONE,590,90,120,80,68,108,124,10,0,295,h.SLOW,null,!1),new u(e.IRON_CROWN,9,!1,!1,!1,"Paradox Pokémon",n.STEEL,n.PSYCHIC,1.6,156,O.QUARK_DRIVE,O.NONE,O.NONE,590,90,72,100,122,108,98,10,0,295,h.SLOW,null,!1),new u(e.TERAPAGOS,9,!1,!0,!1,"Tera Pokémon",n.NORMAL,null,.2,6.5,O.TERA_SHIFT,O.NONE,O.NONE,450,90,65,85,65,85,60,5,50,90,h.SLOW,50,!1,!1,new K("Normal Form","",n.NORMAL,null,.2,6.5,O.TERA_SHIFT,O.NONE,O.NONE,450,90,65,85,65,85,60,5,50,90,!1,null,!0),new K("Terastal Form","terastal",n.NORMAL,null,.3,16,O.TERA_SHELL,O.NONE,O.NONE,600,95,95,110,105,110,85,5,50,90),new K("Stellar Form","stellar",n.NORMAL,null,1.7,77,O.TERAFORM_ZERO,O.NONE,O.NONE,700,160,105,110,130,110,85,5,50,90)),new u(e.PECHARUNT,9,!1,!1,!0,"Subjugation Pokémon",n.POISON,n.GHOST,.3,.3,O.POISON_PUPPETEER,O.NONE,O.NONE,600,88,88,160,88,88,88,3,0,300,h.SLOW,null,!1),new u(e.ALOLA_RATTATA,7,!1,!1,!1,"Mouse Pokémon",n.DARK,n.NORMAL,.3,3.8,O.GLUTTONY,O.HUSTLE,O.THICK_FAT,253,30,56,35,25,35,72,255,70,51,h.MEDIUM_FAST,50,!1),new u(e.ALOLA_RATICATE,7,!1,!1,!1,"Mouse Pokémon",n.DARK,n.NORMAL,.7,25.5,O.GLUTTONY,O.HUSTLE,O.THICK_FAT,413,75,71,70,40,80,77,127,70,145,h.MEDIUM_FAST,50,!1),new u(e.ALOLA_RAICHU,7,!1,!1,!1,"Mouse Pokémon",n.ELECTRIC,n.PSYCHIC,.7,21,O.SURGE_SURFER,O.NONE,O.NONE,485,60,85,50,95,85,110,75,50,243,h.MEDIUM_FAST,50,!1),new u(e.ALOLA_SANDSHREW,7,!1,!1,!1,"Mouse Pokémon",n.ICE,n.STEEL,.7,40,O.SNOW_CLOAK,O.NONE,O.SLUSH_RUSH,300,50,75,90,10,35,40,255,50,60,h.MEDIUM_FAST,50,!1),new u(e.ALOLA_SANDSLASH,7,!1,!1,!1,"Mouse Pokémon",n.ICE,n.STEEL,1.2,55,O.SNOW_CLOAK,O.NONE,O.SLUSH_RUSH,450,75,100,120,25,65,65,90,50,158,h.MEDIUM_FAST,50,!1),new u(e.ALOLA_VULPIX,7,!1,!1,!1,"Fox Pokémon",n.ICE,null,.6,9.9,O.SNOW_CLOAK,O.NONE,O.SNOW_WARNING,299,38,41,40,50,65,65,190,50,60,h.MEDIUM_FAST,25,!1),new u(e.ALOLA_NINETALES,7,!1,!1,!1,"Fox Pokémon",n.ICE,n.FAIRY,1.1,19.9,O.SNOW_CLOAK,O.NONE,O.SNOW_WARNING,505,73,67,75,81,100,109,75,50,177,h.MEDIUM_FAST,25,!1),new u(e.ALOLA_DIGLETT,7,!1,!1,!1,"Mole Pokémon",n.GROUND,n.STEEL,.2,1,O.SAND_VEIL,O.TANGLING_HAIR,O.SAND_FORCE,265,10,55,30,35,45,90,255,50,53,h.MEDIUM_FAST,50,!1),new u(e.ALOLA_DUGTRIO,7,!1,!1,!1,"Mole Pokémon",n.GROUND,n.STEEL,.7,66.6,O.SAND_VEIL,O.TANGLING_HAIR,O.SAND_FORCE,425,35,100,60,50,70,110,50,50,149,h.MEDIUM_FAST,50,!1),new u(e.ALOLA_MEOWTH,7,!1,!1,!1,"Scratch Cat Pokémon",n.DARK,null,.4,4.2,O.PICKUP,O.TECHNICIAN,O.RATTLED,290,40,35,35,50,40,90,255,50,58,h.MEDIUM_FAST,50,!1),new u(e.ALOLA_PERSIAN,7,!1,!1,!1,"Classy Cat Pokémon",n.DARK,null,1.1,33,O.FUR_COAT,O.TECHNICIAN,O.RATTLED,440,65,60,60,75,65,115,90,50,154,h.MEDIUM_FAST,50,!1),new u(e.ALOLA_GEODUDE,7,!1,!1,!1,"Rock Pokémon",n.ROCK,n.ELECTRIC,.4,20.3,O.MAGNET_PULL,O.STURDY,O.GALVANIZE,300,40,80,100,30,30,20,255,70,60,h.MEDIUM_SLOW,50,!1),new u(e.ALOLA_GRAVELER,7,!1,!1,!1,"Rock Pokémon",n.ROCK,n.ELECTRIC,1,110,O.MAGNET_PULL,O.STURDY,O.GALVANIZE,390,55,95,115,45,45,35,120,70,137,h.MEDIUM_SLOW,50,!1),new u(e.ALOLA_GOLEM,7,!1,!1,!1,"Megaton Pokémon",n.ROCK,n.ELECTRIC,1.7,316,O.MAGNET_PULL,O.STURDY,O.GALVANIZE,495,80,120,130,55,65,45,45,70,223,h.MEDIUM_SLOW,50,!1),new u(e.ALOLA_GRIMER,7,!1,!1,!1,"Sludge Pokémon",n.POISON,n.DARK,.7,42,O.POISON_TOUCH,O.GLUTTONY,O.POWER_OF_ALCHEMY,325,80,80,50,40,50,25,190,70,65,h.MEDIUM_FAST,50,!1),new u(e.ALOLA_MUK,7,!1,!1,!1,"Sludge Pokémon",n.POISON,n.DARK,1,52,O.POISON_TOUCH,O.GLUTTONY,O.POWER_OF_ALCHEMY,500,105,105,75,65,100,50,75,70,175,h.MEDIUM_FAST,50,!1),new u(e.ALOLA_EXEGGUTOR,7,!1,!1,!1,"Coconut Pokémon",n.GRASS,n.DRAGON,10.9,415.6,O.FRISK,O.NONE,O.HARVEST,530,95,105,85,125,75,45,45,50,186,h.SLOW,50,!1),new u(e.ALOLA_MAROWAK,7,!1,!1,!1,"Bone Keeper Pokémon",n.FIRE,n.GHOST,1,34,O.CURSED_BODY,O.LIGHTNING_ROD,O.ROCK_HEAD,425,60,80,110,50,80,45,75,50,149,h.MEDIUM_FAST,50,!1),new u(e.ETERNAL_FLOETTE,6,!0,!1,!1,"Single Bloom Pokémon",n.FAIRY,null,.2,.9,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,551,74,65,67,125,128,92,120,70,130,h.MEDIUM_FAST,0,!1),new u(e.GALAR_MEOWTH,8,!1,!1,!1,"Scratch Cat Pokémon",n.STEEL,null,.4,7.5,O.PICKUP,O.TOUGH_CLAWS,O.UNNERVE,290,50,65,55,40,40,40,255,50,58,h.MEDIUM_FAST,50,!1),new u(e.GALAR_PONYTA,8,!1,!1,!1,"Fire Horse Pokémon",n.PSYCHIC,null,.8,24,O.RUN_AWAY,O.PASTEL_VEIL,O.ANTICIPATION,410,50,85,55,65,65,90,190,50,82,h.MEDIUM_FAST,50,!1),new u(e.GALAR_RAPIDASH,8,!1,!1,!1,"Fire Horse Pokémon",n.PSYCHIC,n.FAIRY,1.7,80,O.RUN_AWAY,O.PASTEL_VEIL,O.ANTICIPATION,500,65,100,70,80,80,105,60,50,175,h.MEDIUM_FAST,50,!1),new u(e.GALAR_SLOWPOKE,8,!1,!1,!1,"Dopey Pokémon",n.PSYCHIC,null,1.2,36,O.GLUTTONY,O.OWN_TEMPO,O.REGENERATOR,315,90,65,65,40,40,15,190,50,63,h.MEDIUM_FAST,50,!1),new u(e.GALAR_SLOWBRO,8,!1,!1,!1,"Hermit Crab Pokémon",n.POISON,n.PSYCHIC,1.6,70.5,O.QUICK_DRAW,O.OWN_TEMPO,O.REGENERATOR,490,95,100,95,100,70,30,75,50,172,h.MEDIUM_FAST,50,!1),new u(e.GALAR_FARFETCHD,8,!1,!1,!1,"Wild Duck Pokémon",n.FIGHTING,null,.8,42,O.STEADFAST,O.NONE,O.SCRAPPY,377,52,95,55,58,62,55,45,50,132,h.MEDIUM_FAST,50,!1),new u(e.GALAR_WEEZING,8,!1,!1,!1,"Poison Gas Pokémon",n.POISON,n.FAIRY,3,16,O.LEVITATE,O.NEUTRALIZING_GAS,O.MISTY_SURGE,490,65,90,120,85,70,60,60,50,172,h.MEDIUM_FAST,50,!1),new u(e.GALAR_MR_MIME,8,!1,!1,!1,"Barrier Pokémon",n.ICE,n.PSYCHIC,1.4,56.8,O.VITAL_SPIRIT,O.SCREEN_CLEANER,O.ICE_BODY,460,50,65,65,90,90,100,45,50,161,h.MEDIUM_FAST,50,!1),new u(e.GALAR_ARTICUNO,8,!0,!1,!1,"Freeze Pokémon",n.PSYCHIC,n.FLYING,1.7,50.9,O.COMPETITIVE,O.NONE,O.NONE,580,90,85,85,125,100,95,3,35,290,h.SLOW,null,!1),new u(e.GALAR_ZAPDOS,8,!0,!1,!1,"Electric Pokémon",n.FIGHTING,n.FLYING,1.6,58.2,O.DEFIANT,O.NONE,O.NONE,580,90,125,90,85,90,100,3,35,290,h.SLOW,null,!1),new u(e.GALAR_MOLTRES,8,!0,!1,!1,"Flame Pokémon",n.DARK,n.FLYING,2,66,O.BERSERK,O.NONE,O.NONE,580,90,85,90,100,125,90,3,35,290,h.SLOW,null,!1),new u(e.GALAR_SLOWKING,8,!1,!1,!1,"Royal Pokémon",n.POISON,n.PSYCHIC,1.8,79.5,O.CURIOUS_MEDICINE,O.OWN_TEMPO,O.REGENERATOR,490,95,65,80,110,110,30,70,50,172,h.MEDIUM_FAST,50,!1),new u(e.GALAR_CORSOLA,8,!1,!1,!1,"Coral Pokémon",n.GHOST,null,.6,.5,O.WEAK_ARMOR,O.NONE,O.CURSED_BODY,410,60,55,100,65,100,30,60,50,144,h.FAST,25,!1),new u(e.GALAR_ZIGZAGOON,8,!1,!1,!1,"Tiny Raccoon Pokémon",n.DARK,n.NORMAL,.4,17.5,O.PICKUP,O.GLUTTONY,O.QUICK_FEET,240,38,30,41,30,41,60,255,50,56,h.MEDIUM_FAST,50,!1),new u(e.GALAR_LINOONE,8,!1,!1,!1,"Rushing Pokémon",n.DARK,n.NORMAL,.5,32.5,O.PICKUP,O.GLUTTONY,O.QUICK_FEET,420,78,70,61,50,61,100,90,50,147,h.MEDIUM_FAST,50,!1),new u(e.GALAR_DARUMAKA,8,!1,!1,!1,"Zen Charm Pokémon",n.ICE,null,.7,40,O.HUSTLE,O.NONE,O.INNER_FOCUS,315,70,90,45,15,45,50,120,50,63,h.MEDIUM_SLOW,50,!1),new u(e.GALAR_DARMANITAN,8,!1,!1,!1,"Blazing Pokémon",n.ICE,null,1.7,120,O.GORILLA_TACTICS,O.NONE,O.ZEN_MODE,480,105,140,55,30,55,95,60,50,168,h.MEDIUM_SLOW,50,!1,!0,new K("Standard Mode","",n.ICE,null,1.7,120,O.GORILLA_TACTICS,O.NONE,O.ZEN_MODE,480,105,140,55,30,55,95,60,50,168,!1,null,!0),new K("Zen Mode","zen",n.ICE,n.FIRE,1.7,120,O.GORILLA_TACTICS,O.NONE,O.ZEN_MODE,540,105,160,55,30,55,135,60,50,189)),new u(e.GALAR_YAMASK,8,!1,!1,!1,"Spirit Pokémon",n.GROUND,n.GHOST,.5,1.5,O.WANDERING_SPIRIT,O.NONE,O.NONE,303,38,55,85,30,65,30,190,50,61,h.MEDIUM_FAST,50,!1),new u(e.GALAR_STUNFISK,8,!1,!1,!1,"Trap Pokémon",n.GROUND,n.STEEL,.7,20.5,O.MIMICRY,O.NONE,O.NONE,471,109,81,99,66,84,32,75,70,165,h.MEDIUM_FAST,50,!1),new u(e.HISUI_GROWLITHE,8,!1,!1,!1,"Puppy Pokémon",n.FIRE,n.ROCK,.8,22.7,O.INTIMIDATE,O.FLASH_FIRE,O.ROCK_HEAD,350,60,75,45,65,50,55,190,50,70,h.SLOW,75,!1),new u(e.HISUI_ARCANINE,8,!1,!1,!1,"Legendary Pokémon",n.FIRE,n.ROCK,2,168,O.INTIMIDATE,O.FLASH_FIRE,O.ROCK_HEAD,555,95,115,80,95,80,90,85,50,194,h.SLOW,75,!1),new u(e.HISUI_VOLTORB,8,!1,!1,!1,"Ball Pokémon",n.ELECTRIC,n.GRASS,.5,13,O.SOUNDPROOF,O.STATIC,O.AFTERMATH,330,40,30,50,55,55,100,190,80,66,h.MEDIUM_FAST,null,!1),new u(e.HISUI_ELECTRODE,8,!1,!1,!1,"Ball Pokémon",n.ELECTRIC,n.GRASS,1.2,81,O.SOUNDPROOF,O.STATIC,O.AFTERMATH,490,60,50,70,80,80,150,60,70,172,h.MEDIUM_FAST,null,!1),new u(e.HISUI_TYPHLOSION,8,!1,!1,!1,"Volcano Pokémon",n.FIRE,n.GHOST,1.6,69.8,O.BLAZE,O.NONE,O.FRISK,534,73,84,78,119,85,95,45,70,240,h.MEDIUM_SLOW,87.5,!1),new u(e.HISUI_QWILFISH,8,!1,!1,!1,"Balloon Pokémon",n.DARK,n.POISON,.5,3.9,O.POISON_POINT,O.SWIFT_SWIM,O.INTIMIDATE,440,65,95,85,55,55,85,45,50,88,h.MEDIUM_FAST,50,!1),new u(e.HISUI_SNEASEL,8,!1,!1,!1,"Sharp Claw Pokémon",n.FIGHTING,n.POISON,.9,27,O.INNER_FOCUS,O.KEEN_EYE,O.PICKPOCKET,430,55,95,55,35,75,115,60,35,86,h.MEDIUM_SLOW,50,!0),new u(e.HISUI_SAMUROTT,8,!1,!1,!1,"Formidable Pokémon",n.WATER,n.DARK,1.5,58.2,O.TORRENT,O.NONE,O.SHARPNESS,528,90,108,80,100,65,85,45,80,238,h.MEDIUM_SLOW,87.5,!1),new u(e.HISUI_LILLIGANT,8,!1,!1,!1,"Flowering Pokémon",n.GRASS,n.FIGHTING,1.2,19.2,O.CHLOROPHYLL,O.HUSTLE,O.LEAF_GUARD,480,70,105,75,50,75,105,75,50,168,h.MEDIUM_FAST,0,!1),new u(e.HISUI_ZORUA,8,!1,!1,!1,"Tricky Fox Pokémon",n.NORMAL,n.GHOST,.7,12.5,O.ILLUSION,O.NONE,O.NONE,330,35,60,40,85,40,70,75,50,66,h.MEDIUM_SLOW,87.5,!1),new u(e.HISUI_ZOROARK,8,!1,!1,!1,"Illusion Fox Pokémon",n.NORMAL,n.GHOST,1.6,83,O.ILLUSION,O.NONE,O.NONE,510,55,100,60,125,60,110,45,50,179,h.MEDIUM_SLOW,87.5,!1),new u(e.HISUI_BRAVIARY,8,!1,!1,!1,"Valiant Pokémon",n.PSYCHIC,n.FLYING,1.7,43.4,O.KEEN_EYE,O.SHEER_FORCE,O.TINTED_LENS,510,110,83,70,112,70,65,60,50,179,h.SLOW,100,!1),new u(e.HISUI_SLIGGOO,8,!1,!1,!1,"Soft Tissue Pokémon",n.STEEL,n.DRAGON,.7,68.5,O.SAP_SIPPER,O.SHELL_ARMOR,O.GOOEY,452,58,75,83,83,113,40,45,35,158,h.SLOW,50,!1),new u(e.HISUI_GOODRA,8,!1,!1,!1,"Dragon Pokémon",n.STEEL,n.DRAGON,1.7,334.1,O.SAP_SIPPER,O.SHELL_ARMOR,O.GOOEY,600,80,100,100,110,150,60,45,35,270,h.SLOW,50,!1),new u(e.HISUI_AVALUGG,8,!1,!1,!1,"Iceberg Pokémon",n.ICE,n.ROCK,1.4,262.4,O.STRONG_JAW,O.ICE_BODY,O.STURDY,514,95,127,184,34,36,38,55,50,180,h.MEDIUM_FAST,50,!1),new u(e.HISUI_DECIDUEYE,8,!1,!1,!1,"Arrow Quill Pokémon",n.GRASS,n.FIGHTING,1.6,37,O.OVERGROW,O.NONE,O.SCRAPPY,530,88,112,80,95,95,60,45,50,239,h.MEDIUM_SLOW,87.5,!1),new u(e.PALDEA_TAUROS,9,!1,!1,!1,"Wild Bull Pokémon",n.FIGHTING,null,1.4,115,O.INTIMIDATE,O.ANGER_POINT,O.CUD_CHEW,490,75,110,105,30,70,100,45,50,172,h.SLOW,100,!1,!1,new K("Combat Breed","combat",n.FIGHTING,null,1.4,115,O.INTIMIDATE,O.ANGER_POINT,O.CUD_CHEW,490,75,110,105,30,70,100,45,50,172,!1,"",!0),new K("Blaze Breed","blaze",n.FIGHTING,n.FIRE,1.4,85,O.INTIMIDATE,O.ANGER_POINT,O.CUD_CHEW,490,75,110,105,30,70,100,45,50,172,!1,null,!0),new K("Aqua Breed","aqua",n.FIGHTING,n.WATER,1.4,110,O.INTIMIDATE,O.ANGER_POINT,O.CUD_CHEW,490,75,110,105,30,70,100,45,50,172,!1,null,!0)),new u(e.PALDEA_WOOPER,9,!1,!1,!1,"Water Fish Pokémon",n.POISON,n.GROUND,.4,11,O.POISON_POINT,O.WATER_ABSORB,O.UNAWARE,210,55,45,45,25,25,15,255,50,42,h.MEDIUM_FAST,50,!1),new u(e.BLOODMOON_URSALUNA,9,!0,!1,!1,"Peat Pokémon",n.GROUND,n.NORMAL,2.7,333,O.MINDS_EYE,O.NONE,O.NONE,555,113,70,120,135,65,52,75,50,275,h.MEDIUM_FAST,50,!1))}T(_8,"initSpecies");const W0={[e.BULBASAUR]:O.GRASSY_SURGE,[e.CHARMANDER]:O.BEAST_BOOST,[e.SQUIRTLE]:O.STURDY,[e.CATERPIE]:O.MAGICIAN,[e.WEEDLE]:O.TINTED_LENS,[e.PIDGEY]:O.SHEER_FORCE,[e.RATTATA]:O.STRONG_JAW,[e.SPEAROW]:O.MOXIE,[e.EKANS]:O.REGENERATOR,[e.SANDSHREW]:O.TOUGH_CLAWS,[e.NIDORAN_F]:O.FLARE_BOOST,[e.NIDORAN_M]:O.GUTS,[e.VULPIX]:O.FUR_COAT,[e.ZUBAT]:O.INTIMIDATE,[e.ODDISH]:O.TRIAGE,[e.PARAS]:O.TRIAGE,[e.VENONAT]:O.SIMPLE,[e.DIGLETT]:O.STURDY,[e.MEOWTH]:O.TOUGH_CLAWS,[e.PSYDUCK]:O.SIMPLE,[e.MANKEY]:O.IRON_FIST,[e.GROWLITHE]:O.SPEED_BOOST,[e.POLIWAG]:O.NO_GUARD,[e.ABRA]:O.PSYCHIC_SURGE,[e.MACHOP]:O.QUICK_FEET,[e.BELLSPROUT]:O.FLOWER_GIFT,[e.TENTACOOL]:O.TOXIC_CHAIN,[e.GEODUDE]:O.DRY_SKIN,[e.PONYTA]:O.MAGIC_GUARD,[e.SLOWPOKE]:O.UNAWARE,[e.MAGNEMITE]:O.LEVITATE,[e.FARFETCHD]:O.SNIPER,[e.DODUO]:O.PARENTAL_BOND,[e.SEEL]:O.WATER_BUBBLE,[e.GRIMER]:O.WATER_ABSORB,[e.SHELLDER]:O.ICE_SCALES,[e.GASTLY]:O.SHADOW_SHIELD,[e.ONIX]:O.ROCKY_PAYLOAD,[e.DROWZEE]:O.MAGICIAN,[e.KRABBY]:O.THERMAL_EXCHANGE,[e.VOLTORB]:O.TRANSISTOR,[e.EXEGGCUTE]:O.RIPEN,[e.CUBONE]:O.PARENTAL_BOND,[e.LICKITUNG]:O.CHEEK_POUCH,[e.KOFFING]:O.PARENTAL_BOND,[e.RHYHORN]:O.FILTER,[e.TANGELA]:O.SEED_SOWER,[e.KANGASKHAN]:O.GUTS,[e.HORSEA]:O.DRAGONS_MAW,[e.GOLDEEN]:O.MULTISCALE,[e.STARYU]:O.REGENERATOR,[e.SCYTHER]:O.TINTED_LENS,[e.PINSIR]:O.TINTED_LENS,[e.TAUROS]:O.STAMINA,[e.MAGIKARP]:O.MULTISCALE,[e.LAPRAS]:O.LIGHTNING_ROD,[e.DITTO]:O.ADAPTABILITY,[e.EEVEE]:O.PICKUP,[e.PORYGON]:O.PROTEAN,[e.OMANYTE]:O.STURDY,[e.KABUTO]:O.TOUGH_CLAWS,[e.AERODACTYL]:O.ORICHALCUM_PULSE,[e.ARTICUNO]:O.SNOW_WARNING,[e.ZAPDOS]:O.DRIZZLE,[e.MOLTRES]:O.DROUGHT,[e.DRATINI]:O.AERILATE,[e.MEWTWO]:O.NEUROFORCE,[e.MEW]:O.PROTEAN,[e.CHIKORITA]:O.THICK_FAT,[e.CYNDAQUIL]:O.DROUGHT,[e.TOTODILE]:O.TOUGH_CLAWS,[e.SENTRET]:O.PICKUP,[e.HOOTHOOT]:O.AERILATE,[e.LEDYBA]:O.PRANKSTER,[e.SPINARAK]:O.PRANKSTER,[e.CHINCHOU]:O.WATER_BUBBLE,[e.PICHU]:O.ELECTRIC_SURGE,[e.CLEFFA]:O.ANALYTIC,[e.IGGLYBUFF]:O.HUGE_POWER,[e.TOGEPI]:O.PIXILATE,[e.NATU]:O.TINTED_LENS,[e.MAREEP]:O.ELECTROMORPHOSIS,[e.HOPPIP]:O.FLUFFY,[e.AIPOM]:O.SCRAPPY,[e.SUNKERN]:O.DROUGHT,[e.YANMA]:O.SHEER_FORCE,[e.WOOPER]:O.COMATOSE,[e.MURKROW]:O.DARK_AURA,[e.MISDREAVUS]:O.BEADS_OF_RUIN,[e.UNOWN]:O.PICKUP,[e.GIRAFARIG]:O.PARENTAL_BOND,[e.PINECO]:O.IRON_BARBS,[e.DUNSPARCE]:O.UNAWARE,[e.GLIGAR]:O.TOXIC_BOOST,[e.SNUBBULL]:O.PIXILATE,[e.QWILFISH]:O.TOXIC_DEBRIS,[e.SHUCKLE]:O.HARVEST,[e.HERACROSS]:O.TECHNICIAN,[e.SNEASEL]:O.TOUGH_CLAWS,[e.TEDDIURSA]:O.THICK_FAT,[e.SLUGMA]:O.DESOLATE_LAND,[e.SWINUB]:O.SLUSH_RUSH,[e.CORSOLA]:O.STORM_DRAIN,[e.REMORAID]:O.SIMPLE,[e.DELIBIRD]:O.HUGE_POWER,[e.SKARMORY]:O.LIGHTNING_ROD,[e.HOUNDOUR]:O.DROUGHT,[e.PHANPY]:O.SPEED_BOOST,[e.STANTLER]:O.SPEED_BOOST,[e.SMEARGLE]:O.PRANKSTER,[e.TYROGUE]:O.MOXIE,[e.SMOOCHUM]:O.PSYCHIC_SURGE,[e.ELEKID]:O.SHEER_FORCE,[e.MAGBY]:O.CONTRARY,[e.MILTANK]:O.STAMINA,[e.RAIKOU]:O.TRANSISTOR,[e.ENTEI]:O.MOXIE,[e.SUICUNE]:O.UNAWARE,[e.LARVITAR]:O.SAND_RUSH,[e.LUGIA]:O.DELTA_STREAM,[e.HO_OH]:O.MAGIC_GUARD,[e.CELEBI]:O.PSYCHIC_SURGE,[e.TREECKO]:O.TINTED_LENS,[e.TORCHIC]:O.RECKLESS,[e.MUDKIP]:O.DRIZZLE,[e.POOCHYENA]:O.TOUGH_CLAWS,[e.ZIGZAGOON]:O.RUN_AWAY,[e.WURMPLE]:O.SIMPLE,[e.LOTAD]:O.DRIZZLE,[e.SEEDOT]:O.SHARPNESS,[e.TAILLOW]:O.AERILATE,[e.WINGULL]:O.SWIFT_SWIM,[e.RALTS]:O.PSYCHIC_SURGE,[e.SURSKIT]:O.WATER_BUBBLE,[e.SHROOMISH]:O.GUTS,[e.SLAKOTH]:O.GUTS,[e.NINCADA]:O.MAGIC_GUARD,[e.WHISMUR]:O.PUNK_ROCK,[e.MAKUHITA]:O.STAMINA,[e.AZURILL]:O.MISTY_SURGE,[e.NOSEPASS]:O.LEVITATE,[e.SKITTY]:O.SCRAPPY,[e.SABLEYE]:O.UNNERVE,[e.MAWILE]:O.UNNERVE,[e.ARON]:O.EARTH_EATER,[e.MEDITITE]:O.MINDS_EYE,[e.ELECTRIKE]:O.ELECTRIC_SURGE,[e.PLUSLE]:O.POWER_SPOT,[e.MINUN]:O.POWER_SPOT,[e.VOLBEAT]:O.HONEY_GATHER,[e.ILLUMISE]:O.HONEY_GATHER,[e.GULPIN]:O.EARTH_EATER,[e.CARVANHA]:O.SHEER_FORCE,[e.WAILMER]:O.LEVITATE,[e.NUMEL]:O.FUR_COAT,[e.TORKOAL]:O.ANALYTIC,[e.SPOINK]:O.PSYCHIC_SURGE,[e.SPINDA]:O.SIMPLE,[e.TRAPINCH]:O.ADAPTABILITY,[e.CACNEA]:O.SAND_RUSH,[e.SWABLU]:O.ADAPTABILITY,[e.ZANGOOSE]:O.POISON_HEAL,[e.SEVIPER]:O.MULTISCALE,[e.LUNATONE]:O.SHADOW_SHIELD,[e.SOLROCK]:O.DROUGHT,[e.BARBOACH]:O.SIMPLE,[e.CORPHISH]:O.TOUGH_CLAWS,[e.BALTOY]:O.WELL_BAKED_BODY,[e.LILEEP]:O.SEED_SOWER,[e.ANORITH]:O.WATER_ABSORB,[e.FEEBAS]:O.MAGIC_GUARD,[e.CASTFORM]:O.ADAPTABILITY,[e.KECLEON]:O.ADAPTABILITY,[e.SHUPPET]:O.SHADOW_SHIELD,[e.DUSKULL]:O.UNNERVE,[e.TROPIUS]:O.RIPEN,[e.ABSOL]:O.SHARPNESS,[e.WYNAUT]:O.STURDY,[e.SNORUNT]:O.SNOW_WARNING,[e.SPHEAL]:O.UNAWARE,[e.CLAMPERL]:O.DRIZZLE,[e.RELICANTH]:O.PRIMORDIAL_SEA,[e.LUVDISC]:O.MULTISCALE,[e.BAGON]:O.DRAGONS_MAW,[e.BELDUM]:O.LEVITATE,[e.REGIROCK]:O.SAND_STREAM,[e.REGICE]:O.SNOW_WARNING,[e.REGISTEEL]:O.FILTER,[e.LATIAS]:O.PRISM_ARMOR,[e.LATIOS]:O.TINTED_LENS,[e.KYOGRE]:O.MOLD_BREAKER,[e.GROUDON]:O.TURBOBLAZE,[e.RAYQUAZA]:O.UNNERVE,[e.JIRACHI]:O.COMATOSE,[e.DEOXYS]:O.PROTEAN,[e.TURTWIG]:O.THICK_FAT,[e.CHIMCHAR]:O.BEAST_BOOST,[e.PIPLUP]:O.DRIZZLE,[e.STARLY]:O.ROCK_HEAD,[e.BIDOOF]:O.SAP_SIPPER,[e.KRICKETOT]:O.SHARPNESS,[e.SHINX]:O.SPEED_BOOST,[e.BUDEW]:O.GRASSY_SURGE,[e.CRANIDOS]:O.ROCK_HEAD,[e.SHIELDON]:O.EARTH_EATER,[e.BURMY]:O.STURDY,[e.COMBEE]:O.INTIMIDATE,[e.PACHIRISU]:O.HONEY_GATHER,[e.BUIZEL]:O.MOXIE,[e.CHERUBI]:O.ORICHALCUM_PULSE,[e.SHELLOS]:O.REGENERATOR,[e.DRIFLOON]:O.MAGIC_GUARD,[e.BUNEARY]:O.ADAPTABILITY,[e.GLAMEOW]:O.INTIMIDATE,[e.CHINGLING]:O.PUNK_ROCK,[e.STUNKY]:O.NEUTRALIZING_GAS,[e.BRONZOR]:O.BULLETPROOF,[e.BONSLY]:O.SAP_SIPPER,[e.MIME_JR]:O.OPPORTUNIST,[e.HAPPINY]:O.FUR_COAT,[e.CHATOT]:O.PUNK_ROCK,[e.SPIRITOMB]:O.VESSEL_OF_RUIN,[e.GIBLE]:O.SAND_STREAM,[e.MUNCHLAX]:O.RIPEN,[e.RIOLU]:O.MINDS_EYE,[e.HIPPOPOTAS]:O.UNAWARE,[e.SKORUPI]:O.SUPER_LUCK,[e.CROAGUNK]:O.MOXIE,[e.CARNIVINE]:O.ARENA_TRAP,[e.FINNEON]:O.WATER_BUBBLE,[e.MANTYKE]:O.UNAWARE,[e.SNOVER]:O.THICK_FAT,[e.ROTOM]:O.HADRON_ENGINE,[e.UXIE]:O.UNAWARE,[e.MESPRIT]:O.MOODY,[e.AZELF]:O.NEUROFORCE,[e.DIALGA]:O.LEVITATE,[e.PALKIA]:O.SPEED_BOOST,[e.HEATRAN]:O.EARTH_EATER,[e.REGIGIGAS]:O.SCRAPPY,[e.GIRATINA]:O.SHADOW_SHIELD,[e.CRESSELIA]:O.SHADOW_SHIELD,[e.PHIONE]:O.SIMPLE,[e.MANAPHY]:O.PRIMORDIAL_SEA,[e.DARKRAI]:O.UNNERVE,[e.SHAYMIN]:O.WIND_RIDER,[e.ARCEUS]:O.ADAPTABILITY,[e.VICTINI]:O.SHEER_FORCE,[e.SNIVY]:O.MULTISCALE,[e.TEPIG]:O.ROCK_HEAD,[e.OSHAWOTT]:O.INTREPID_SWORD,[e.PATRAT]:O.NO_GUARD,[e.LILLIPUP]:O.FUR_COAT,[e.PURRLOIN]:O.PICKUP,[e.PANSAGE]:O.WELL_BAKED_BODY,[e.PANSEAR]:O.WATER_ABSORB,[e.PANPOUR]:O.SAP_SIPPER,[e.MUNNA]:O.NEUTRALIZING_GAS,[e.PIDOVE]:O.SNIPER,[e.BLITZLE]:O.ELECTRIC_SURGE,[e.ROGGENROLA]:O.SOLID_ROCK,[e.WOOBAT]:O.OPPORTUNIST,[e.DRILBUR]:O.SAND_STREAM,[e.AUDINO]:O.FRIEND_GUARD,[e.TIMBURR]:O.ROCKY_PAYLOAD,[e.TYMPOLE]:O.POISON_HEAL,[e.THROH]:O.STAMINA,[e.SAWK]:O.SCRAPPY,[e.SEWADDLE]:O.SHARPNESS,[e.VENIPEDE]:O.STAMINA,[e.COTTONEE]:O.FLUFFY,[e.PETILIL]:O.SIMPLE,[e.BASCULIN]:O.SUPREME_OVERLORD,[e.SANDILE]:O.TOUGH_CLAWS,[e.DARUMAKA]:O.GORILLA_TACTICS,[e.MARACTUS]:O.WELL_BAKED_BODY,[e.DWEBBLE]:O.ROCKY_PAYLOAD,[e.SCRAGGY]:O.PROTEAN,[e.SIGILYPH]:O.FLARE_BOOST,[e.YAMASK]:O.PURIFYING_SALT,[e.TIRTOUGA]:O.WATER_ABSORB,[e.ARCHEN]:O.MULTISCALE,[e.TRUBBISH]:O.NEUTRALIZING_GAS,[e.ZORUA]:O.DARK_AURA,[e.MINCCINO]:O.FUR_COAT,[e.GOTHITA]:O.UNNERVE,[e.SOLOSIS]:O.PSYCHIC_SURGE,[e.DUCKLETT]:O.DRIZZLE,[e.VANILLITE]:O.SLUSH_RUSH,[e.DEERLING]:O.FUR_COAT,[e.EMOLGA]:O.TRANSISTOR,[e.KARRABLAST]:O.QUICK_DRAW,[e.FOONGUS]:O.THICK_FAT,[e.FRILLISH]:O.POISON_HEAL,[e.ALOMOMOLA]:O.MULTISCALE,[e.JOLTIK]:O.TRANSISTOR,[e.FERROSEED]:O.ROUGH_SKIN,[e.KLINK]:O.STEELY_SPIRIT,[e.TYNAMO]:O.POISON_HEAL,[e.ELGYEM]:O.PRISM_ARMOR,[e.LITWICK]:O.SOUL_HEART,[e.AXEW]:O.DRAGONS_MAW,[e.CUBCHOO]:O.TOUGH_CLAWS,[e.CRYOGONAL]:O.SNOW_WARNING,[e.SHELMET]:O.PROTEAN,[e.STUNFISK]:O.STORM_DRAIN,[e.MIENFOO]:O.NO_GUARD,[e.DRUDDIGON]:O.INTIMIDATE,[e.GOLETT]:O.SHADOW_SHIELD,[e.PAWNIARD]:O.SWORD_OF_RUIN,[e.BOUFFALANT]:O.ROCK_HEAD,[e.RUFFLET]:O.SPEED_BOOST,[e.VULLABY]:O.THICK_FAT,[e.HEATMOR]:O.CONTRARY,[e.DURANT]:O.COMPOUND_EYES,[e.DEINO]:O.PARENTAL_BOND,[e.LARVESTA]:O.DROUGHT,[e.COBALION]:O.INTREPID_SWORD,[e.TERRAKION]:O.ROCKY_PAYLOAD,[e.VIRIZION]:O.SHARPNESS,[e.TORNADUS]:O.DRIZZLE,[e.THUNDURUS]:O.DRIZZLE,[e.RESHIRAM]:O.ORICHALCUM_PULSE,[e.ZEKROM]:O.HADRON_ENGINE,[e.LANDORUS]:O.STORM_DRAIN,[e.KYUREM]:O.SNOW_WARNING,[e.KELDEO]:O.GRIM_NEIGH,[e.MELOETTA]:O.MINDS_EYE,[e.GENESECT]:O.PROTEAN,[e.CHESPIN]:O.DAUNTLESS_SHIELD,[e.FENNEKIN]:O.PSYCHIC_SURGE,[e.FROAKIE]:O.STAKEOUT,[e.BUNNELBY]:O.GUTS,[e.FLETCHLING]:O.MAGIC_GUARD,[e.SCATTERBUG]:O.PRANKSTER,[e.LITLEO]:O.BEAST_BOOST,[e.FLABEBE]:O.GRASSY_SURGE,[e.SKIDDO]:O.SEED_SOWER,[e.PANCHAM]:O.FUR_COAT,[e.FURFROU]:O.FLUFFY,[e.ESPURR]:O.FUR_COAT,[e.HONEDGE]:O.SHARPNESS,[e.SPRITZEE]:O.FUR_COAT,[e.SWIRLIX]:O.WELL_BAKED_BODY,[e.INKAY]:O.UNNERVE,[e.BINACLE]:O.SAP_SIPPER,[e.SKRELP]:O.DRAGONS_MAW,[e.CLAUNCHER]:O.SWIFT_SWIM,[e.HELIOPTILE]:O.PROTEAN,[e.TYRUNT]:O.RECKLESS,[e.AMAURA]:O.ICE_SCALES,[e.HAWLUCHA]:O.MOXIE,[e.DEDENNE]:O.PIXILATE,[e.CARBINK]:O.SOLID_ROCK,[e.GOOMY]:O.REGENERATOR,[e.KLEFKI]:O.LEVITATE,[e.PHANTUMP]:O.SHADOW_TAG,[e.PUMPKABOO]:O.WELL_BAKED_BODY,[e.BERGMITE]:O.ICE_SCALES,[e.NOIBAT]:O.PUNK_ROCK,[e.XERNEAS]:O.HARVEST,[e.YVELTAL]:O.SOUL_HEART,[e.ZYGARDE]:O.HUGE_POWER,[e.DIANCIE]:O.LEVITATE,[e.HOOPA]:O.OPPORTUNIST,[e.VOLCANION]:O.FILTER,[e.ROWLET]:O.SNIPER,[e.LITTEN]:O.OPPORTUNIST,[e.POPPLIO]:O.PUNK_ROCK,[e.PIKIPEK]:O.TECHNICIAN,[e.YUNGOOS]:O.TOUGH_CLAWS,[e.GRUBBIN]:O.SPEED_BOOST,[e.CRABRAWLER]:O.WATER_BUBBLE,[e.ORICORIO]:O.ADAPTABILITY,[e.CUTIEFLY]:O.TINTED_LENS,[e.ROCKRUFF]:O.ROCKY_PAYLOAD,[e.WISHIWASHI]:O.REGENERATOR,[e.MAREANIE]:O.TOXIC_DEBRIS,[e.MUDBRAY]:O.CUD_CHEW,[e.DEWPIDER]:O.TINTED_LENS,[e.FOMANTIS]:O.SHARPNESS,[e.MORELULL]:O.TRIAGE,[e.SALANDIT]:O.DRAGONS_MAW,[e.STUFFUL]:O.SCRAPPY,[e.BOUNSWEET]:O.MOXIE,[e.COMFEY]:O.FRIEND_GUARD,[e.ORANGURU]:O.POWER_SPOT,[e.PASSIMIAN]:O.LIBERO,[e.WIMPOD]:O.REGENERATOR,[e.SANDYGAST]:O.SAND_SPIT,[e.PYUKUMUKU]:O.PURIFYING_SALT,[e.TYPE_NULL]:O.ADAPTABILITY,[e.MINIOR]:O.STURDY,[e.KOMALA]:O.GUTS,[e.TURTONATOR]:O.DAUNTLESS_SHIELD,[e.TOGEDEMARU]:O.ROUGH_SKIN,[e.MIMIKYU]:O.TOUGH_CLAWS,[e.BRUXISH]:O.MULTISCALE,[e.DRAMPA]:O.THICK_FAT,[e.DHELMISE]:O.WATER_BUBBLE,[e.JANGMO_O]:O.DAUNTLESS_SHIELD,[e.TAPU_KOKO]:O.TRANSISTOR,[e.TAPU_LELE]:O.SHEER_FORCE,[e.TAPU_BULU]:O.TRIAGE,[e.TAPU_FINI]:O.FAIRY_AURA,[e.COSMOG]:O.BEAST_BOOST,[e.NIHILEGO]:O.LEVITATE,[e.BUZZWOLE]:O.MOXIE,[e.PHEROMOSA]:O.TINTED_LENS,[e.XURKITREE]:O.TRANSISTOR,[e.CELESTEELA]:O.HEATPROOF,[e.KARTANA]:O.SHARPNESS,[e.GUZZLORD]:O.POISON_HEAL,[e.NECROZMA]:O.BEAST_BOOST,[e.MAGEARNA]:O.STEELY_SPIRIT,[e.MARSHADOW]:O.IRON_FIST,[e.POIPOLE]:O.SHEER_FORCE,[e.STAKATAKA]:O.SOLID_ROCK,[e.BLACEPHALON]:O.MAGIC_GUARD,[e.ZERAORA]:O.TOUGH_CLAWS,[e.MELTAN]:O.STEELY_SPIRIT,[e.GROOKEY]:O.GRASS_PELT,[e.SCORBUNNY]:O.NO_GUARD,[e.SOBBLE]:O.SUPER_LUCK,[e.SKWOVET]:O.HARVEST,[e.ROOKIDEE]:O.IRON_BARBS,[e.BLIPBUG]:O.PSYCHIC_SURGE,[e.NICKIT]:O.MAGICIAN,[e.GOSSIFLEUR]:O.GRASSY_SURGE,[e.WOOLOO]:O.SIMPLE,[e.CHEWTLE]:O.ROCKY_PAYLOAD,[e.YAMPER]:O.SHEER_FORCE,[e.ROLYCOLY]:O.SOLID_ROCK,[e.APPLIN]:O.DRAGONS_MAW,[e.SILICOBRA]:O.SAND_RUSH,[e.CRAMORANT]:O.LIGHTNING_ROD,[e.ARROKUDA]:O.INTIMIDATE,[e.TOXEL]:O.ELECTRIC_SURGE,[e.SIZZLIPEDE]:O.SPEED_BOOST,[e.CLOBBOPUS]:O.WATER_BUBBLE,[e.SINISTEA]:O.SHADOW_SHIELD,[e.HATENNA]:O.FAIRY_AURA,[e.IMPIDIMP]:O.FUR_COAT,[e.MILCERY]:O.REGENERATOR,[e.FALINKS]:O.PARENTAL_BOND,[e.PINCURCHIN]:O.ELECTROMORPHOSIS,[e.SNOM]:O.SNOW_WARNING,[e.STONJOURNER]:O.STURDY,[e.EISCUE]:O.ICE_SCALES,[e.INDEEDEE]:O.FRIEND_GUARD,[e.MORPEKO]:O.MOODY,[e.CUFANT]:O.EARTH_EATER,[e.DRACOZOLT]:O.NO_GUARD,[e.ARCTOZOLT]:O.TRANSISTOR,[e.DRACOVISH]:O.SWIFT_SWIM,[e.ARCTOVISH]:O.STRONG_JAW,[e.DURALUDON]:O.STEELWORKER,[e.DREEPY]:O.PARENTAL_BOND,[e.ZACIAN]:O.UNNERVE,[e.ZAMAZENTA]:O.UNNERVE,[e.ETERNATUS]:O.NEUTRALIZING_GAS,[e.KUBFU]:O.IRON_FIST,[e.ZARUDE]:O.TOUGH_CLAWS,[e.REGIELEKI]:O.ELECTRIC_SURGE,[e.REGIDRAGO]:O.MULTISCALE,[e.GLASTRIER]:O.FILTER,[e.SPECTRIER]:O.SHADOW_SHIELD,[e.CALYREX]:O.HARVEST,[e.ENAMORUS]:O.FAIRY_AURA,[e.SPRIGATITO]:O.MAGICIAN,[e.FUECOCO]:O.PUNK_ROCK,[e.QUAXLY]:O.OPPORTUNIST,[e.LECHONK]:O.SIMPLE,[e.TAROUNTULA]:O.HONEY_GATHER,[e.NYMBLE]:O.GUTS,[e.PAWMI]:O.TRANSISTOR,[e.TANDEMAUS]:O.SCRAPPY,[e.FIDOUGH]:O.WATER_ABSORB,[e.SMOLIV]:O.RIPEN,[e.SQUAWKABILLY]:O.MOXIE,[e.NACLI]:O.SOLID_ROCK,[e.CHARCADET]:O.PRISM_ARMOR,[e.TADBULB]:O.STAMINA,[e.WATTREL]:O.SHEER_FORCE,[e.MASCHIFF]:O.STRONG_JAW,[e.SHROODLE]:O.CORROSION,[e.BRAMBLIN]:O.SHADOW_SHIELD,[e.TOEDSCOOL]:O.PRANKSTER,[e.KLAWF]:O.WATER_ABSORB,[e.CAPSAKID]:O.PARENTAL_BOND,[e.RELLOR]:O.PRANKSTER,[e.FLITTLE]:O.DAZZLING,[e.TINKATINK]:O.STEELWORKER,[e.WIGLETT]:O.STURDY,[e.BOMBIRDIER]:O.UNBURDEN,[e.FINIZEN]:O.IRON_FIST,[e.VAROOM]:O.LEVITATE,[e.CYCLIZAR]:O.PROTEAN,[e.ORTHWORM]:O.REGENERATOR,[e.GLIMMET]:O.LEVITATE,[e.GREAVARD]:O.FUR_COAT,[e.FLAMIGO]:O.MOXIE,[e.CETODDLE]:O.ICE_SCALES,[e.VELUZA]:O.SUPER_LUCK,[e.DONDOZO]:O.PARENTAL_BOND,[e.TATSUGIRI]:O.ADAPTABILITY,[e.GREAT_TUSK]:O.INTIMIDATE,[e.SCREAM_TAIL]:O.UNAWARE,[e.BRUTE_BONNET]:O.CHLOROPHYLL,[e.FLUTTER_MANE]:O.DAZZLING,[e.SLITHER_WING]:O.SCRAPPY,[e.SANDY_SHOCKS]:O.EARTH_EATER,[e.IRON_TREADS]:O.STEELY_SPIRIT,[e.IRON_BUNDLE]:O.SNOW_WARNING,[e.IRON_HANDS]:O.IRON_FIST,[e.IRON_JUGULIS]:O.LIGHTNING_ROD,[e.IRON_MOTH]:O.LEVITATE,[e.IRON_THORNS]:O.SAND_STREAM,[e.FRIGIBAX]:O.SNOW_WARNING,[e.GIMMIGHOUL]:O.HONEY_GATHER,[e.WO_CHIEN]:O.VESSEL_OF_RUIN,[e.CHIEN_PAO]:O.INTIMIDATE,[e.TING_LU]:O.STAMINA,[e.CHI_YU]:O.BERSERK,[e.ROARING_MOON]:O.TOUGH_CLAWS,[e.IRON_VALIANT]:O.ADAPTABILITY,[e.KORAIDON]:O.OPPORTUNIST,[e.MIRAIDON]:O.OPPORTUNIST,[e.WALKING_WAKE]:O.BEAST_BOOST,[e.IRON_LEAVES]:O.SHARPNESS,[e.POLTCHAGEIST]:O.TRIAGE,[e.OKIDOGI]:O.FUR_COAT,[e.MUNKIDORI]:O.NEUROFORCE,[e.FEZANDIPITI]:O.LEVITATE,[e.OGERPON]:O.OPPORTUNIST,[e.GOUGING_FIRE]:O.BEAST_BOOST,[e.RAGING_BOLT]:O.BEAST_BOOST,[e.IRON_BOULDER]:O.SHARPNESS,[e.IRON_CROWN]:O.SHARPNESS,[e.TERAPAGOS]:O.SOUL_HEART,[e.PECHARUNT]:O.TOXIC_CHAIN,[e.ALOLA_RATTATA]:O.ADAPTABILITY,[e.ALOLA_SANDSHREW]:O.ICE_SCALES,[e.ALOLA_VULPIX]:O.SHEER_FORCE,[e.ALOLA_DIGLETT]:O.STURDY,[e.ALOLA_MEOWTH]:O.DARK_AURA,[e.ALOLA_GEODUDE]:O.DRY_SKIN,[e.ALOLA_GRIMER]:O.TOXIC_DEBRIS,[e.ETERNAL_FLOETTE]:O.MAGIC_GUARD,[e.GALAR_MEOWTH]:O.STEELWORKER,[e.GALAR_PONYTA]:O.MOXIE,[e.GALAR_SLOWPOKE]:O.UNAWARE,[e.GALAR_FARFETCHD]:O.INTREPID_SWORD,[e.GALAR_ARTICUNO]:O.SERENE_GRACE,[e.GALAR_ZAPDOS]:O.TOUGH_CLAWS,[e.GALAR_MOLTRES]:O.DARK_AURA,[e.GALAR_CORSOLA]:O.SHADOW_SHIELD,[e.GALAR_ZIGZAGOON]:O.POISON_HEAL,[e.GALAR_DARUMAKA]:O.FLASH_FIRE,[e.GALAR_YAMASK]:O.TABLETS_OF_RUIN,[e.GALAR_STUNFISK]:O.ARENA_TRAP,[e.HISUI_GROWLITHE]:O.RECKLESS,[e.HISUI_VOLTORB]:O.TRANSISTOR,[e.HISUI_QWILFISH]:O.MERCILESS,[e.HISUI_SNEASEL]:O.SCRAPPY,[e.HISUI_ZORUA]:O.ADAPTABILITY,[e.PALDEA_TAUROS]:O.ADAPTABILITY,[e.PALDEA_WOOPER]:O.THICK_FAT,[e.BLOODMOON_URSALUNA]:O.BERSERK};var Y=(E=>(E.NONE="NONE",E.RECHARGING="RECHARGING",E.FLINCHED="FLINCHED",E.INTERRUPTED="INTERRUPTED",E.CONFUSED="CONFUSED",E.INFATUATED="INFATUATED",E.SEEDED="SEEDED",E.NIGHTMARE="NIGHTMARE",E.FRENZY="FRENZY",E.CHARGING="CHARGING",E.ENCORE="ENCORE",E.HELPING_HAND="HELPING_HAND",E.INGRAIN="INGRAIN",E.OCTOLOCK="OCTOLOCK",E.AQUA_RING="AQUA_RING",E.DROWSY="DROWSY",E.TRAPPED="TRAPPED",E.BIND="BIND",E.WRAP="WRAP",E.FIRE_SPIN="FIRE_SPIN",E.WHIRLPOOL="WHIRLPOOL",E.CLAMP="CLAMP",E.SAND_TOMB="SAND_TOMB",E.MAGMA_STORM="MAGMA_STORM",E.SNAP_TRAP="SNAP_TRAP",E.THUNDER_CAGE="THUNDER_CAGE",E.INFESTATION="INFESTATION",E.PROTECTED="PROTECTED",E.SPIKY_SHIELD="SPIKY_SHIELD",E.KINGS_SHIELD="KINGS_SHIELD",E.OBSTRUCT="OBSTRUCT",E.SILK_TRAP="SILK_TRAP",E.BANEFUL_BUNKER="BANEFUL_BUNKER",E.BURNING_BULWARK="BURNING_BULWARK",E.ENDURING="ENDURING",E.STURDY="STURDY",E.PERISH_SONG="PERISH_SONG",E.TRUANT="TRUANT",E.SLOW_START="SLOW_START",E.PROTOSYNTHESIS="PROTOSYNTHESIS",E.QUARK_DRIVE="QUARK_DRIVE",E.FLYING="FLYING",E.UNDERGROUND="UNDERGROUND",E.UNDERWATER="UNDERWATER",E.HIDDEN="HIDDEN",E.FIRE_BOOST="FIRE_BOOST",E.CRIT_BOOST="CRIT_BOOST",E.ALWAYS_CRIT="ALWAYS_CRIT",E.IGNORE_ACCURACY="IGNORE_ACCURACY",E.BYPASS_SLEEP="BYPASS_SLEEP",E.IGNORE_FLYING="IGNORE_FLYING",E.SALT_CURED="SALT_CURED",E.CURSED="CURSED",E.CHARGED="CHARGED",E.ROOSTED="ROOSTED",E.FLOATING="FLOATING",E.MINIMIZED="MINIMIZED",E.DESTINY_BOND="DESTINY_BOND",E.CENTER_OF_ATTENTION="CENTER_OF_ATTENTION",E.ICE_FACE="ICE_FACE",E.DISGUISE="DISGUISE",E.STOCKPILING="STOCKPILING",E.RECEIVE_DOUBLE_DAMAGE="RECEIVE_DOUBLE_DAMAGE",E.ALWAYS_GET_HIT="ALWAYS_GET_HIT",E.DISABLED="DISABLED",E.SUBSTITUTE="SUBSTITUTE",E.IGNORE_GHOST="IGNORE_GHOST",E.IGNORE_DARK="IGNORE_DARK",E.GULP_MISSILE_ARROKUDA="GULP_MISSILE_ARROKUDA",E.GULP_MISSILE_PIKACHU="GULP_MISSILE_PIKACHU",E.BEAK_BLAST_CHARGING="BEAK_BLAST_CHARGING",E.SHELL_TRAP="SHELL_TRAP",E.DRAGON_CHEER="DRAGON_CHEER",E.NO_RETREAT="NO_RETREAT",E.GORILLA_TACTICS="GORILLA_TACTICS",E.THROAT_CHOPPED="THROAT_CHOPPED",E.TAR_SHOT="TAR_SHOT",E.BURNED_UP="BURNED_UP",E.DOUBLE_SHOCKED="DOUBLE_SHOCKED",E.AUTOTOMIZED="AUTOTOMIZED",E.MYSTERY_ENCOUNTER_POST_SUMMON="MYSTERY_ENCOUNTER_POST_SUMMON",E.POWER_TRICK="POWER_TRICK",E.HEAL_BLOCK="HEAL_BLOCK",E.TORMENT="TORMENT",E.TAUNT="TAUNT",E.IMPRISON="IMPRISON",E.SYRUP_BOMB="SYRUP_BOMB",E.ELECTRIFIED="ELECTRIFIED",E.TELEKINESIS="TELEKINESIS",E))(Y||{}),ct=(E=>(E[E.UNSET=0]="UNSET",E[E.MALE=1]="MALE",E[E.FEMALE=2]="FEMALE",E))(ct||{});const Ld=class Ld{constructor(A,s=null){this.cursor=0,this.active=!1,this.scene=A,this.mode=s}show(A){return this.active=!0,!0}getUi(){return this.scene.ui}getTextColor(A,s=!1){return zt(A,s,this.scene.uiTheme)}getCursor(){return this.cursor}setCursor(A){const s=this.cursor!==A;return s&&(this.cursor=A),s}setMouseCursorStyle(A){this.scene.input.manager.canvas.style.cursor=A}clear(){this.active=!1}};T(Ld,"UiHandler");let os=Ld;const rd=class rd extends os{constructor(A,s=null){super(A,s),this.tutorialActive=!1}processTutorialInput(A){if((A===y.ACTION||A===y.CANCEL)&&this.onActionInput){this.getUi().playSelect();const s=this.onActionInput;return this.onActionInput=null,s(),this.awaitingActionInput=!1,!0}return!1}initTutorialOverlay(A){this.tutorialOverlay||(this.tutorialOverlay=new Phaser.GameObjects.Rectangle(this.scene,-1,-1,this.scene.scaledCanvas.width,this.scene.scaledCanvas.height,460551),this.tutorialOverlay.setName("tutorial-overlay"),this.tutorialOverlay.setOrigin(0,0),this.tutorialOverlay.setAlpha(0)),A&&A.add(this.tutorialOverlay)}};T(rd,"AwaitableUiHandler");let Fn=rd;const Nd=class Nd extends Fn{constructor(A,s=null){super(A,s),this.pendingPrompt=!1}initPromptSprite(A){if(!this.prompt){const s=this.scene.add.sprite(0,0,"prompt");s.setVisible(!1),s.setOrigin(0,0),this.prompt=s}A&&A.add(this.prompt)}showText(A,s,R,I,i,a){this.showTextInternal(A,s,R,I,i,a)}showDialogue(A,s,R,I,i,a,L){this.showTextInternal(A,R,I,i,a,L)}showTextInternal(A,s,R,I,i,a){s==null&&(s=20);const L=new Map,S=new Map,o=new Map,l=new Map,D=/@(c|d|s|f)\{(.*?)\}/;let M;for(;M=D.exec(A);){switch(M[1]){case"c":L.set(M.index,M[2]);break;case"d":S.set(M.index,parseInt(M[2]));break;case"s":o.set(M.index,M[2]);break;case"f":l.set(M.index,parseInt(M[2]));break}A=A.slice(0,M.index)+A.slice(M.index+M[2].length+4)}if(A){const c=A.split(" ");let G=1,P="";for(let _=0;_<c.length;_++){const g=P?`${P} ${c[_]}`:c[_];if(c[_].includes(`
`))P=g,G++;else{const H=this.message.runWordWrap(g).split(/\n/g).length;H>G?(G=H,P=`${P}
${c[_]}`):P=g}}A=P}if(this.textTimer&&(this.textTimer.remove(),this.textCallbackTimer&&this.textCallbackTimer.callback()),i){const c=R;R=T(()=>{const G=T(()=>this.showPrompt(c,I),"showPrompt");a?this.scene.time.delayedCall(a,G):G()},"callback")}s?(this.clearText(),i&&(this.pendingPrompt=!0),this.textTimer=this.scene.time.addEvent({delay:s,callback:T(()=>{var F;const c=A.length-((F=this.textTimer)==null?void 0:F.repeatCount),G=L.get(c),P=o.get(c),_=S.get(c),g=l.get(c);this.message.setText(A.slice(0,c));const H=T(()=>{var p;G&&this.scene.charSprite.setVariant(G),P&&this.scene.playSound(P),R&&!((p=this.textTimer)!=null&&p.repeatCount)&&(I&&!i?this.textCallbackTimer=this.scene.time.delayedCall(I,()=>{this.textCallbackTimer&&(this.textCallbackTimer.destroy(),this.textCallbackTimer=null),R()}):R())},"advance");_?(this.textTimer.paused=!0,this.scene.tweens.addCounter({duration:zA(_),onComplete:T(()=>{this.textTimer.paused=!1,H()},"onComplete")})):g?(this.textTimer.paused=!0,this.scene.time.delayedCall(150,()=>{this.scene.ui.fadeOut(750).then(()=>{const p=zA(g);this.scene.time.delayedCall(p,()=>{this.scene.ui.fadeIn(500).then(()=>{this.textTimer.paused=!1,H()})})})})):H()},"callback"),repeat:A.length})):(this.message.setText(A),i&&(this.pendingPrompt=!0),R&&R())}showPrompt(A,s){const R=this.message.runWordWrap(this.message.text).split(/\n/g),I=R.length,i=R[R.length-1],a=this.scene.add.text(0,0,i,{font:"96px emerald"});a.setScale(this.message.scale);const L=a.displayWidth;a.destroy(),this.prompt&&(this.prompt.setPosition(this.message.x+L+2,this.message.y+(I-1)*18+2),this.prompt.play("prompt")),this.pendingPrompt=!1,this.awaitingActionInput=!0,this.onActionInput=()=>{this.prompt&&(this.prompt.anims.stop(),this.prompt.setVisible(!1)),A&&(s?this.textCallbackTimer=this.scene.time.delayedCall(s,()=>{this.textCallbackTimer&&(this.textCallbackTimer.destroy(),this.textCallbackTimer=null),A()}):A())}}isTextAnimationInProgress(){return this.textTimer?this.textTimer.repeatCount<this.textTimer.repeat:!1}clearText(){this.message.setText(""),this.pendingPrompt=!1}clear(){super.clear()}};T(Nd,"MessageUiHandler");let vs=Nd;const Td=class Td extends vs{constructor(A){super(A,$.MESSAGE),this.wordWrapWidth=1780}setup(){const A=this.getUi();this.textTimer=null,this.textCallbackTimer=null,this.bg=this.scene.add.sprite(0,0,"bg",this.scene.windowType),this.bg.setName("sprite-battle-msg-bg"),this.bg.setOrigin(0,1),A.add(this.bg),this.commandWindow=it(this.scene,202,0,118,48),this.commandWindow.setName("window-command"),this.commandWindow.setOrigin(0,1),this.commandWindow.setVisible(!1),A.add(this.commandWindow),this.movesWindowContainer=this.scene.add.container(0,0),this.movesWindowContainer.setName("moves-bg"),this.movesWindowContainer.setVisible(!1);const s=it(this.scene,0,0,243,48);s.setName("moves-window"),s.setOrigin(0,1);const R=it(this.scene,240,0,80,48,!1,!1,-1,132);R.setName("move-details-window"),R.setOrigin(0,1),this.movesWindowContainer.add([s,R]),A.add(this.movesWindowContainer);const I=this.scene.add.container(12,-39);A.add(I);const i=se(this.scene,0,0,"",V.MESSAGE,{maxLines:2,wordWrap:{width:this.wordWrapWidth}});I.add(i),this.message=i,this.nameBoxContainer=this.scene.add.container(0,-16),this.nameBoxContainer.setVisible(!1),this.nameBox=this.scene.add.nineslice(0,0,"namebox",this.scene.windowType,72,16,8,8,5,5),this.nameBox.setOrigin(0,0),this.nameText=se(this.scene,8,0,"Rival",V.MESSAGE,{maxLines:1}),this.nameBoxContainer.add(this.nameBox),this.nameBoxContainer.add(this.nameText),I.add(this.nameBoxContainer),this.initPromptSprite(I);const a=this.scene.add.container(0,0);a.setVisible(!1),A.add(a),this.levelUpStatsContainer=a;const L=se(this.scene,this.scene.game.canvas.width/6-73,-94,"",V.WINDOW,{maxLines:6});L.setLineSpacing(U.resolvedLanguage==="ja"?25:5);let S="";for(const M of PO)S+=`${U.t(aE(M))}
`;L.text=S,L.x-=L.displayWidth;const o=it(this.scene,this.scene.game.canvas.width/6,-100,80+L.displayWidth,100);o.setOrigin(1,0),a.add(o),a.add(L);const l=se(this.scene,this.scene.game.canvas.width/6-50,-94,`+
+
+
+
+
+`,V.WINDOW,{maxLines:6});l.setLineSpacing(U.resolvedLanguage==="ja"?25:5),a.add(l),this.levelUpStatsIncrContent=l;const D=PE(this.scene,this.scene.game.canvas.width/6-7,-94,"",V.WINDOW,{maxLines:6,lineSpacing:5});D.setLineSpacing(U.resolvedLanguage==="ja"?25:5),D.setOrigin(1,0),D.setAlign("right"),a.add(D),this.levelUpStatsValuesContent=D}show(A){return super.show(A),this.commandWindow.setVisible(!1),this.movesWindowContainer.setVisible(!1),this.message.setWordWrapWidth(this.wordWrapWidth),!0}processInput(A){const s=this.getUi();if(this.awaitingActionInput&&(A===y.CANCEL||A===y.ACTION)&&this.onActionInput){s.playSelect();const R=this.onActionInput;return this.onActionInput=null,R(),!0}return!1}clear(){super.clear()}showText(A,s,R,I,i,a){this.hideNameText(),super.showText(A,s,R,I,i,a)}showDialogue(A,s,R,I,i,a,L){s&&this.showNameText(s),super.showDialogue(A,s,R,I,i,a,L)}promptLevelUpStats(A,s,R){return new Promise(I=>{if(!this.scene.showLevelUpStats)return I();const i=this.scene.getParty()[A].stats;let a="";for(const L of PO)a+=`${R?i[L]:i[L]-s[L]}
`;this.levelUpStatsValuesContent.text=a,this.levelUpStatsIncrContent.setVisible(!R),this.levelUpStatsContainer.setVisible(!0),this.awaitingActionInput=!0,this.onActionInput=()=>{if(R)this.levelUpStatsContainer.setVisible(!1),I();else return this.promptLevelUpStats(A,[],!0).then(()=>I())}})}promptIvs(A,s,R){return new Promise(I=>{this.scene.executeWithSeedOffset(()=>{let i="";const a=this.getTopIvs(s,R);for(const L of PO)i+=`${a.includes(L)?this.getIvDescriptor(s[L],L,A):"???"}
`;this.levelUpStatsValuesContent.text=i,this.levelUpStatsIncrContent.setVisible(!1),this.levelUpStatsContainer.setVisible(!0),this.awaitingActionInput=!0,this.onActionInput=()=>{this.levelUpStatsContainer.setVisible(!1),I()}},A)})}getTopIvs(A,s){let R=[];if(s<6){const I=PO.slice();I.sort((i,a)=>A[a]-A[i]);for(let i=0;i<s;i++)R.push(I[i])}else R=PO.slice();return R}getIvDescriptor(A,s,R){const I=this.scene.getPokemonById(R).species.getRootSpeciesId(),i=this.scene.gameData.dexData[I].ivs,a=this.scene.uiTheme,L=T((S,o,l)=>{let D;return o?l===31?D=V.PERFECT_IV:D=V.SUMMARY_GREEN:D=V.WINDOW,`[color=${zt(D,!1,a)}][shadow=${zt(D,!0,a)}]${S}[/shadow][/color]`},"coloredText");return A>30?L(U.t("battleMessageUiHandler:ivBest"),A>i[s],A):A===30?L(U.t("battleMessageUiHandler:ivFantastic"),A>i[s],A):A>20?L(U.t("battleMessageUiHandler:ivVeryGood"),A>i[s],A):A>10?L(U.t("battleMessageUiHandler:ivPrettyGood"),A>i[s],A):A>0?L(U.t("battleMessageUiHandler:ivDecent"),A>i[s],A):L(U.t("battleMessageUiHandler:ivNoGood"),A>i[s],A)}showNameText(A){this.nameBoxContainer.setVisible(!0),this.nameText.setText(A),this.nameBox.width=this.nameText.displayWidth+16}hideNameText(){this.nameBoxContainer.setVisible(!1)}};T(Td,"BattleMessageUiHandler");let Y0=Td;var ys=(E=>(E[E.NONE=0]="NONE",E[E.PASSIVE=1]="PASSIVE",E[E.ACTIVE=2]="ACTIVE",E))(ys||{});const Sd=class Sd{setup(A){this.icons=new Map,this.toggled=!1;const s=T(R=>{const I=R.getValue();this.toggled=!!I;for(const i of this.icons.keys()){const a=this.icons.get(i),L=a?this.getModeYDelta(a):0;i.y+=L*(this.toggled?1:-1)}},"onAlternate");A.tweens.addCounter({duration:Ve(200),from:0,to:1,yoyo:!0,repeat:-1,onRepeat:s,onYoyo:s})}getModeYDelta(A){switch(A){case 0:return 0;case 1:return-1;case 2:return-2}}addOrUpdate(A,s){Array.isArray(A)||(A=[A]);for(const R of A)if(!(this.icons.has(R)&&this.icons.get(R)===s)){if(this.toggled){const I=this.icons.has(R)?this.icons.get(R):0,i=this.getModeYDelta(s);R.y+=i+I}this.icons.set(R,s)}}remove(A){Array.isArray(A)||(A=[A]);for(const s of A){if(this.toggled){const R=this.icons.get(s),I=R?this.getModeYDelta(R):0;s.y-=I}this.icons.delete(s)}}removeAll(){for(const A of this.icons.keys()){if(this.toggled){const s=this.icons.get(A),R=s?this.getModeYDelta(s):0;A.y-=R}this.icons.delete(A)}}};T(Sd,"PokemonIconAnimHandler");let IL=Sd;var ht=(E=>(E[E.SINGLE_GENERATION=0]="SINGLE_GENERATION",E[E.SINGLE_TYPE=1]="SINGLE_TYPE",E[E.LOWER_MAX_STARTER_COST=2]="LOWER_MAX_STARTER_COST",E[E.LOWER_STARTER_POINTS=3]="LOWER_STARTER_POINTS",E[E.FRESH_START=4]="FRESH_START",E[E.INVERSE_BATTLE=5]="INVERSE_BATTLE",E))(ht||{}),YR=(E=>(E[E.NONE=0]="NONE",E[E.ABOMASITE=1]="ABOMASITE",E[E.ABSOLITE=2]="ABSOLITE",E[E.AERODACTYLITE=3]="AERODACTYLITE",E[E.AGGRONITE=4]="AGGRONITE",E[E.ALAKAZITE=5]="ALAKAZITE",E[E.ALTARIANITE=6]="ALTARIANITE",E[E.AMPHAROSITE=7]="AMPHAROSITE",E[E.AUDINITE=8]="AUDINITE",E[E.BANETTITE=9]="BANETTITE",E[E.BEEDRILLITE=10]="BEEDRILLITE",E[E.BLASTOISINITE=11]="BLASTOISINITE",E[E.BLAZIKENITE=12]="BLAZIKENITE",E[E.CAMERUPTITE=13]="CAMERUPTITE",E[E.CHARIZARDITE_X=14]="CHARIZARDITE_X",E[E.CHARIZARDITE_Y=15]="CHARIZARDITE_Y",E[E.DIANCITE=16]="DIANCITE",E[E.GALLADITE=17]="GALLADITE",E[E.GARCHOMPITE=18]="GARCHOMPITE",E[E.GARDEVOIRITE=19]="GARDEVOIRITE",E[E.GENGARITE=20]="GENGARITE",E[E.GLALITITE=21]="GLALITITE",E[E.GYARADOSITE=22]="GYARADOSITE",E[E.HERACRONITE=23]="HERACRONITE",E[E.HOUNDOOMINITE=24]="HOUNDOOMINITE",E[E.KANGASKHANITE=25]="KANGASKHANITE",E[E.LATIASITE=26]="LATIASITE",E[E.LATIOSITE=27]="LATIOSITE",E[E.LOPUNNITE=28]="LOPUNNITE",E[E.LUCARIONITE=29]="LUCARIONITE",E[E.MANECTITE=30]="MANECTITE",E[E.MAWILITE=31]="MAWILITE",E[E.MEDICHAMITE=32]="MEDICHAMITE",E[E.METAGROSSITE=33]="METAGROSSITE",E[E.MEWTWONITE_X=34]="MEWTWONITE_X",E[E.MEWTWONITE_Y=35]="MEWTWONITE_Y",E[E.PIDGEOTITE=36]="PIDGEOTITE",E[E.PINSIRITE=37]="PINSIRITE",E[E.RAYQUAZITE=38]="RAYQUAZITE",E[E.SABLENITE=39]="SABLENITE",E[E.SALAMENCITE=40]="SALAMENCITE",E[E.SCEPTILITE=41]="SCEPTILITE",E[E.SCIZORITE=42]="SCIZORITE",E[E.SHARPEDONITE=43]="SHARPEDONITE",E[E.SLOWBRONITE=44]="SLOWBRONITE",E[E.STEELIXITE=45]="STEELIXITE",E[E.SWAMPERTITE=46]="SWAMPERTITE",E[E.TYRANITARITE=47]="TYRANITARITE",E[E.VENUSAURITE=48]="VENUSAURITE",E[E.BLUE_ORB=50]="BLUE_ORB",E[E.RED_ORB=51]="RED_ORB",E[E.ADAMANT_CRYSTAL=52]="ADAMANT_CRYSTAL",E[E.LUSTROUS_GLOBE=53]="LUSTROUS_GLOBE",E[E.GRISEOUS_CORE=54]="GRISEOUS_CORE",E[E.REVEAL_GLASS=55]="REVEAL_GLASS",E[E.MAX_MUSHROOMS=56]="MAX_MUSHROOMS",E[E.DARK_STONE=57]="DARK_STONE",E[E.LIGHT_STONE=58]="LIGHT_STONE",E[E.PRISON_BOTTLE=59]="PRISON_BOTTLE",E[E.RUSTED_SWORD=60]="RUSTED_SWORD",E[E.RUSTED_SHIELD=61]="RUSTED_SHIELD",E[E.ICY_REINS_OF_UNITY=62]="ICY_REINS_OF_UNITY",E[E.SHADOW_REINS_OF_UNITY=63]="SHADOW_REINS_OF_UNITY",E[E.ULTRANECROZIUM_Z=64]="ULTRANECROZIUM_Z",E[E.SHARP_METEORITE=100]="SHARP_METEORITE",E[E.HARD_METEORITE=101]="HARD_METEORITE",E[E.SMOOTH_METEORITE=102]="SMOOTH_METEORITE",E[E.GRACIDEA=103]="GRACIDEA",E[E.SHOCK_DRIVE=104]="SHOCK_DRIVE",E[E.BURN_DRIVE=105]="BURN_DRIVE",E[E.CHILL_DRIVE=106]="CHILL_DRIVE",E[E.DOUSE_DRIVE=107]="DOUSE_DRIVE",E[E.N_SOLARIZER=108]="N_SOLARIZER",E[E.N_LUNARIZER=109]="N_LUNARIZER",E[E.WELLSPRING_MASK=110]="WELLSPRING_MASK",E[E.HEARTHFLAME_MASK=111]="HEARTHFLAME_MASK",E[E.CORNERSTONE_MASK=112]="CORNERSTONE_MASK",E[E.FIST_PLATE=113]="FIST_PLATE",E[E.SKY_PLATE=114]="SKY_PLATE",E[E.TOXIC_PLATE=115]="TOXIC_PLATE",E[E.EARTH_PLATE=116]="EARTH_PLATE",E[E.STONE_PLATE=117]="STONE_PLATE",E[E.INSECT_PLATE=118]="INSECT_PLATE",E[E.SPOOKY_PLATE=119]="SPOOKY_PLATE",E[E.IRON_PLATE=120]="IRON_PLATE",E[E.FLAME_PLATE=121]="FLAME_PLATE",E[E.SPLASH_PLATE=122]="SPLASH_PLATE",E[E.MEADOW_PLATE=123]="MEADOW_PLATE",E[E.ZAP_PLATE=124]="ZAP_PLATE",E[E.MIND_PLATE=125]="MIND_PLATE",E[E.ICICLE_PLATE=126]="ICICLE_PLATE",E[E.DRACO_PLATE=127]="DRACO_PLATE",E[E.DREAD_PLATE=128]="DREAD_PLATE",E[E.PIXIE_PLATE=129]="PIXIE_PLATE",E[E.BLANK_PLATE=130]="BLANK_PLATE",E[E.LEGEND_PLATE=131]="LEGEND_PLATE",E[E.FIGHTING_MEMORY=132]="FIGHTING_MEMORY",E[E.FLYING_MEMORY=133]="FLYING_MEMORY",E[E.POISON_MEMORY=134]="POISON_MEMORY",E[E.GROUND_MEMORY=135]="GROUND_MEMORY",E[E.ROCK_MEMORY=136]="ROCK_MEMORY",E[E.BUG_MEMORY=137]="BUG_MEMORY",E[E.GHOST_MEMORY=138]="GHOST_MEMORY",E[E.STEEL_MEMORY=139]="STEEL_MEMORY",E[E.FIRE_MEMORY=140]="FIRE_MEMORY",E[E.WATER_MEMORY=141]="WATER_MEMORY",E[E.GRASS_MEMORY=142]="GRASS_MEMORY",E[E.ELECTRIC_MEMORY=143]="ELECTRIC_MEMORY",E[E.PSYCHIC_MEMORY=144]="PSYCHIC_MEMORY",E[E.ICE_MEMORY=145]="ICE_MEMORY",E[E.DRAGON_MEMORY=146]="DRAGON_MEMORY",E[E.DARK_MEMORY=147]="DARK_MEMORY",E[E.FAIRY_MEMORY=148]="FAIRY_MEMORY",E[E.NORMAL_MEMORY=149]="NORMAL_MEMORY",E))(YR||{});const od=class od{constructor(A,s,R,I,i=!1,...a){this.speciesId=A,this.preFormKey=s,this.formKey=R,this.trigger=I,this.quiet=i,this.conditions=a}canChange(A){if(A.species.speciesId!==this.speciesId||!A.species.forms.length)return!1;const s=A.species.forms.map(R=>R.formKey);if(s[A.formIndex]!==this.preFormKey||s[A.formIndex]===this.formKey)return!1;for(const R of this.conditions)if(!R.predicate(A))return!1;return!!this.trigger.canChange(A)}findTrigger(A){if(!this.trigger.hasTriggerType(A))return null;const s=this.trigger;return s instanceof lT?s.triggers.find(R=>R.hasTriggerType(A)):s}};T(od,"SpeciesFormChange");let Ae=od;const ld=class ld{constructor(A,s){this.predicate=A,this.enforceFunc=s}};T(ld,"SpeciesFormChangeCondition");let KR=ld;const Cd=class Cd{canChange(A){return!0}hasTriggerType(A){return this instanceof A}};T(Cd,"SpeciesFormChangeTrigger");let uR=Cd;const Ud=class Ud extends uR{canChange(A){return!0}};T(Ud,"SpeciesFormChangeManualTrigger");let _t=Ud;const Dd=class Dd{constructor(...A){this.triggers=A}canChange(A){for(const s of this.triggers)if(!s.canChange(A))return!1;return!0}hasTriggerType(A){return!!this.triggers.find(s=>s.hasTriggerType(A))}};T(Dd,"SpeciesFormChangeCompoundTrigger");let lT=Dd;const Md=class Md extends uR{constructor(A,s=!0){super(),this.item=A,this.active=s}canChange(A){return!!A.scene.findModifier(s=>s instanceof AR&&s.pokemonId===A.id&&s.formChangeItem===this.item&&s.active===this.active)}};T(Md,"SpeciesFormChangeItemTrigger");let Ce=Md;const ud=class ud extends uR{constructor(...A){super(),this.timesOfDay=A}canChange(A){return this.timesOfDay.indexOf(A.scene.arena.getTimeOfDay())>-1}};T(ud,"SpeciesFormChangeTimeOfDayTrigger");let p0=ud;const hd=class hd extends uR{constructor(A=!1){super(),this.active=A}canChange(A){return A.isActive(!0)===this.active}};T(hd,"SpeciesFormChangeActiveTrigger");let Os=hd;const cd=class cd extends uR{constructor(A,s=!1){super(),Array.isArray(A)||(A=[A]),this.statusEffects=A,this.invert=s}canChange(A){var s;return this.statusEffects.indexOf(((s=A.status)==null?void 0:s.effect)||J.NONE)>-1!==this.invert}};T(cd,"SpeciesFormChangeStatusEffectTrigger");let y0=cd;const Gd=class Gd extends uR{constructor(A,s=!0){super(),this.move=A,this.known=s}canChange(A){return!!A.moveset.filter(s=>(s==null?void 0:s.moveId)===this.move).length===this.known}};T(Gd,"SpeciesFormChangeMoveLearnedTrigger");let Bi=Gd;const Pd=class Pd extends uR{constructor(A,s=!0){super(),this.movePredicate=typeof A=="function"?A:R=>R===A,this.used=s}};T(Pd,"SpeciesFormChangeMoveTrigger");let Il=Pd;const _d=class _d extends Il{canChange(A){const s=A.scene.currentBattle.turnCommands[A.getBattlerIndex()];return!!(s!=null&&s.move)&&this.movePredicate(s.move.move)===this.used}};T(_d,"SpeciesFormChangePreMoveTrigger");let CT=_d;const Hd=class Hd extends Il{canChange(A){return A.summonData&&!!A.getLastXMoves(1).filter(s=>this.movePredicate(s.move)).length===this.used}};T(Hd,"SpeciesFormChangePostMoveTrigger");let UT=Hd;const dd=class dd extends UT{canChange(A){return A.scene.gameMode.hasChallenge(ht.SINGLE_TYPE)?!1:super.canChange(A)}};T(dd,"MeloettaFormChangePostMoveTrigger");let il=dd;const fd=class fd extends uR{constructor(A){super(),this.formKey=A}canChange(A){return this.formKey===A.species.forms[A.scene.getSpeciesFormIndex(A.species,A.gender,A.getNature(),!0)].formKey}};T(fd,"SpeciesDefaultFormMatchTrigger");let al=fd;const Bd=class Bd extends uR{constructor(A){super(),this.teraType=A}canChange(A){return!!A.scene.findModifier(s=>s instanceof zs&&s.pokemonId===A.id&&s.teraType===this.teraType)}};T(Bd,"SpeciesFormChangeTeraTrigger");let SI=Bd;const gd=class gd extends uR{canChange(A){return!!A.scene.findModifier(s=>s instanceof zs&&s.pokemonId===A.id)}};T(gd,"SpeciesFormChangeLapseTeraTrigger");let oI=gd;const Kd=class Kd extends uR{constructor(A,s){super(),this.ability=A,this.weathers=s}canChange(A){var i,a;const s=((i=A.scene.arena.weather)==null?void 0:i.weatherType)??Q.NONE,R=(a=A.scene.arena.weather)==null?void 0:a.isEffectSuppressed(A.scene);return!A.summonData.abilitySuppressed&&!R&&A.hasAbility(this.ability)&&this.weathers.includes(s)}};T(Kd,"SpeciesFormChangeWeatherTrigger");let oR=Kd;const Fd=class Fd extends uR{constructor(A,s){super(),this.ability=A,this.weathers=s}canChange(A){var s,R;if(A.hasAbility(this.ability,!1,!0)){const I=((s=A.scene.arena.weather)==null?void 0:s.weatherType)??Q.NONE,i=(R=A.scene.arena.weather)==null?void 0:R.isEffectSuppressed(A.scene),a=A.summonData.abilitySuppressed,L=A.summonData.ability,S=L!==this.ability&&L!==O.NONE;if(this.weathers.includes(I)||i||a||S)return!0}return!1}};T(Fd,"SpeciesFormChangeRevertWeatherFormTrigger");let Pn=Fd;function w0(E,A,s){const R=A.formKey.indexOf(Ee.MEGA)>-1,I=A.formKey.indexOf(Ee.GIGANTAMAX)>-1,i=A.formKey.indexOf(Ee.ETERNAMAX)>-1,a=!R&&A.formKey===E.species.forms[0].formKey;return R?U.t("battlePokemonForm:megaChange",{preName:s,pokemonName:E.name}):I?U.t("battlePokemonForm:gigantamaxChange",{preName:s,pokemonName:E.name}):i?U.t("battlePokemonForm:eternamaxChange",{preName:s,pokemonName:E.name}):a?U.t("battlePokemonForm:revertChange",{pokemonName:b(E)}):E.getAbility().id===O.DISGUISE?U.t("battlePokemonForm:disguiseChange"):U.t("battlePokemonForm:formChange",{preName:s})}T(w0,"getSpeciesFormChangeMessage");function oa(E){return new KR(A=>!!A.scene.gameData.dexData[E].caughtAttr)}T(oa,"getSpeciesDependentFormChangeCondition");const mO={[e.VENUSAUR]:[new Ae(e.VENUSAUR,"",Ee.MEGA,new Ce(48)),new Ae(e.VENUSAUR,"",Ee.GIGANTAMAX,new Ce(56))],[e.BLASTOISE]:[new Ae(e.BLASTOISE,"",Ee.MEGA,new Ce(11)),new Ae(e.BLASTOISE,"",Ee.GIGANTAMAX,new Ce(56))],[e.CHARIZARD]:[new Ae(e.CHARIZARD,"",Ee.MEGA_X,new Ce(14)),new Ae(e.CHARIZARD,"",Ee.MEGA_Y,new Ce(15)),new Ae(e.CHARIZARD,"",Ee.GIGANTAMAX,new Ce(56))],[e.BUTTERFREE]:[new Ae(e.BUTTERFREE,"",Ee.GIGANTAMAX,new Ce(56))],[e.BEEDRILL]:[new Ae(e.BEEDRILL,"",Ee.MEGA,new Ce(10))],[e.PIDGEOT]:[new Ae(e.PIDGEOT,"",Ee.MEGA,new Ce(36))],[e.PIKACHU]:[new Ae(e.PIKACHU,"",Ee.GIGANTAMAX,new Ce(56)),new Ae(e.PIKACHU,"partner",Ee.GIGANTAMAX,new Ce(56))],[e.MEOWTH]:[new Ae(e.MEOWTH,"",Ee.GIGANTAMAX,new Ce(56))],[e.ALAKAZAM]:[new Ae(e.ALAKAZAM,"",Ee.MEGA,new Ce(5))],[e.MACHAMP]:[new Ae(e.MACHAMP,"",Ee.GIGANTAMAX,new Ce(56))],[e.SLOWBRO]:[new Ae(e.SLOWBRO,"",Ee.MEGA,new Ce(44))],[e.GENGAR]:[new Ae(e.GENGAR,"",Ee.MEGA,new Ce(20)),new Ae(e.GENGAR,"",Ee.GIGANTAMAX,new Ce(56))],[e.KINGLER]:[new Ae(e.KINGLER,"",Ee.GIGANTAMAX,new Ce(56))],[e.KANGASKHAN]:[new Ae(e.KANGASKHAN,"",Ee.MEGA,new Ce(25))],[e.PINSIR]:[new Ae(e.PINSIR,"",Ee.MEGA,new Ce(37))],[e.GYARADOS]:[new Ae(e.GYARADOS,"",Ee.MEGA,new Ce(22))],[e.LAPRAS]:[new Ae(e.LAPRAS,"",Ee.GIGANTAMAX,new Ce(56))],[e.EEVEE]:[new Ae(e.EEVEE,"",Ee.GIGANTAMAX,new Ce(56)),new Ae(e.EEVEE,"partner",Ee.GIGANTAMAX,new Ce(56))],[e.SNORLAX]:[new Ae(e.SNORLAX,"",Ee.GIGANTAMAX,new Ce(56))],[e.AERODACTYL]:[new Ae(e.AERODACTYL,"",Ee.MEGA,new Ce(3))],[e.MEWTWO]:[new Ae(e.MEWTWO,"",Ee.MEGA_X,new Ce(34)),new Ae(e.MEWTWO,"",Ee.MEGA_Y,new Ce(35))],[e.AMPHAROS]:[new Ae(e.AMPHAROS,"",Ee.MEGA,new Ce(7))],[e.STEELIX]:[new Ae(e.STEELIX,"",Ee.MEGA,new Ce(45))],[e.SCIZOR]:[new Ae(e.SCIZOR,"",Ee.MEGA,new Ce(42))],[e.HERACROSS]:[new Ae(e.HERACROSS,"",Ee.MEGA,new Ce(23))],[e.HOUNDOOM]:[new Ae(e.HOUNDOOM,"",Ee.MEGA,new Ce(24))],[e.TYRANITAR]:[new Ae(e.TYRANITAR,"",Ee.MEGA,new Ce(47))],[e.SCEPTILE]:[new Ae(e.SCEPTILE,"",Ee.MEGA,new Ce(41))],[e.BLAZIKEN]:[new Ae(e.BLAZIKEN,"",Ee.MEGA,new Ce(12))],[e.SWAMPERT]:[new Ae(e.SWAMPERT,"",Ee.MEGA,new Ce(46))],[e.GARDEVOIR]:[new Ae(e.GARDEVOIR,"",Ee.MEGA,new Ce(19))],[e.SABLEYE]:[new Ae(e.SABLEYE,"",Ee.MEGA,new Ce(39))],[e.MAWILE]:[new Ae(e.MAWILE,"",Ee.MEGA,new Ce(31))],[e.AGGRON]:[new Ae(e.AGGRON,"",Ee.MEGA,new Ce(4))],[e.MEDICHAM]:[new Ae(e.MEDICHAM,"",Ee.MEGA,new Ce(32))],[e.MANECTRIC]:[new Ae(e.MANECTRIC,"",Ee.MEGA,new Ce(30))],[e.SHARPEDO]:[new Ae(e.SHARPEDO,"",Ee.MEGA,new Ce(43))],[e.CAMERUPT]:[new Ae(e.CAMERUPT,"",Ee.MEGA,new Ce(13))],[e.ALTARIA]:[new Ae(e.ALTARIA,"",Ee.MEGA,new Ce(6))],[e.CASTFORM]:[new Ae(e.CASTFORM,"","sunny",new oR(O.FORECAST,[Q.SUNNY,Q.HARSH_SUN]),!0),new Ae(e.CASTFORM,"rainy","sunny",new oR(O.FORECAST,[Q.SUNNY,Q.HARSH_SUN]),!0),new Ae(e.CASTFORM,"snowy","sunny",new oR(O.FORECAST,[Q.SUNNY,Q.HARSH_SUN]),!0),new Ae(e.CASTFORM,"","rainy",new oR(O.FORECAST,[Q.RAIN,Q.HEAVY_RAIN]),!0),new Ae(e.CASTFORM,"sunny","rainy",new oR(O.FORECAST,[Q.RAIN,Q.HEAVY_RAIN]),!0),new Ae(e.CASTFORM,"snowy","rainy",new oR(O.FORECAST,[Q.RAIN,Q.HEAVY_RAIN]),!0),new Ae(e.CASTFORM,"","snowy",new oR(O.FORECAST,[Q.HAIL,Q.SNOW]),!0),new Ae(e.CASTFORM,"sunny","snowy",new oR(O.FORECAST,[Q.HAIL,Q.SNOW]),!0),new Ae(e.CASTFORM,"rainy","snowy",new oR(O.FORECAST,[Q.HAIL,Q.SNOW]),!0),new Ae(e.CASTFORM,"sunny","",new Pn(O.FORECAST,[Q.NONE,Q.SANDSTORM,Q.STRONG_WINDS,Q.FOG]),!0),new Ae(e.CASTFORM,"rainy","",new Pn(O.FORECAST,[Q.NONE,Q.SANDSTORM,Q.STRONG_WINDS,Q.FOG]),!0),new Ae(e.CASTFORM,"snowy","",new Pn(O.FORECAST,[Q.NONE,Q.SANDSTORM,Q.STRONG_WINDS,Q.FOG]),!0),new Ae(e.CASTFORM,"sunny","",new Os,!0),new Ae(e.CASTFORM,"rainy","",new Os,!0),new Ae(e.CASTFORM,"snowy","",new Os,!0)],[e.BANETTE]:[new Ae(e.BANETTE,"",Ee.MEGA,new Ce(9))],[e.ABSOL]:[new Ae(e.ABSOL,"",Ee.MEGA,new Ce(2))],[e.GLALIE]:[new Ae(e.GLALIE,"",Ee.MEGA,new Ce(21))],[e.SALAMENCE]:[new Ae(e.SALAMENCE,"",Ee.MEGA,new Ce(40))],[e.METAGROSS]:[new Ae(e.METAGROSS,"",Ee.MEGA,new Ce(33))],[e.LATIAS]:[new Ae(e.LATIAS,"",Ee.MEGA,new Ce(26))],[e.LATIOS]:[new Ae(e.LATIOS,"",Ee.MEGA,new Ce(27))],[e.KYOGRE]:[new Ae(e.KYOGRE,"",Ee.PRIMAL,new Ce(50))],[e.GROUDON]:[new Ae(e.GROUDON,"",Ee.PRIMAL,new Ce(51))],[e.RAYQUAZA]:[new Ae(e.RAYQUAZA,"",Ee.MEGA,new Ce(38))],[e.DEOXYS]:[new Ae(e.DEOXYS,"normal","attack",new Ce(100)),new Ae(e.DEOXYS,"normal","defense",new Ce(101)),new Ae(e.DEOXYS,"normal","speed",new Ce(102))],[e.CHERRIM]:[new Ae(e.CHERRIM,"overcast","sunshine",new oR(O.FLOWER_GIFT,[Q.SUNNY,Q.HARSH_SUN]),!0),new Ae(e.CHERRIM,"sunshine","overcast",new Pn(O.FLOWER_GIFT,[Q.NONE,Q.SANDSTORM,Q.STRONG_WINDS,Q.FOG,Q.HAIL,Q.HEAVY_RAIN,Q.SNOW,Q.RAIN]),!0),new Ae(e.CHERRIM,"sunshine","overcast",new Os,!0)],[e.LOPUNNY]:[new Ae(e.LOPUNNY,"",Ee.MEGA,new Ce(28))],[e.GARCHOMP]:[new Ae(e.GARCHOMP,"",Ee.MEGA,new Ce(18))],[e.LUCARIO]:[new Ae(e.LUCARIO,"",Ee.MEGA,new Ce(29))],[e.ABOMASNOW]:[new Ae(e.ABOMASNOW,"",Ee.MEGA,new Ce(1))],[e.GALLADE]:[new Ae(e.GALLADE,"",Ee.MEGA,new Ce(17))],[e.AUDINO]:[new Ae(e.AUDINO,"",Ee.MEGA,new Ce(8))],[e.DIALGA]:[new Ae(e.DIALGA,"",Ee.ORIGIN,new Ce(52))],[e.PALKIA]:[new Ae(e.PALKIA,"",Ee.ORIGIN,new Ce(53))],[e.GIRATINA]:[new Ae(e.GIRATINA,"altered",Ee.ORIGIN,new Ce(54))],[e.SHAYMIN]:[new Ae(e.SHAYMIN,"land","sky",new Ce(103))],[e.ARCEUS]:[new Ae(e.ARCEUS,"normal","fighting",new Ce(113)),new Ae(e.ARCEUS,"normal","flying",new Ce(114)),new Ae(e.ARCEUS,"normal","poison",new Ce(115)),new Ae(e.ARCEUS,"normal","ground",new Ce(116)),new Ae(e.ARCEUS,"normal","rock",new Ce(117)),new Ae(e.ARCEUS,"normal","bug",new Ce(118)),new Ae(e.ARCEUS,"normal","ghost",new Ce(119)),new Ae(e.ARCEUS,"normal","steel",new Ce(120)),new Ae(e.ARCEUS,"normal","fire",new Ce(121)),new Ae(e.ARCEUS,"normal","water",new Ce(122)),new Ae(e.ARCEUS,"normal","grass",new Ce(123)),new Ae(e.ARCEUS,"normal","electric",new Ce(124)),new Ae(e.ARCEUS,"normal","psychic",new Ce(125)),new Ae(e.ARCEUS,"normal","ice",new Ce(126)),new Ae(e.ARCEUS,"normal","dragon",new Ce(127)),new Ae(e.ARCEUS,"normal","dark",new Ce(128)),new Ae(e.ARCEUS,"normal","fairy",new Ce(129))],[e.DARMANITAN]:[new Ae(e.DARMANITAN,"","zen",new _t,!0),new Ae(e.DARMANITAN,"zen","",new _t,!0)],[e.GARBODOR]:[new Ae(e.GARBODOR,"",Ee.GIGANTAMAX,new Ce(56))],[e.TORNADUS]:[new Ae(e.TORNADUS,Ee.INCARNATE,Ee.THERIAN,new Ce(55))],[e.THUNDURUS]:[new Ae(e.THUNDURUS,Ee.INCARNATE,Ee.THERIAN,new Ce(55))],[e.LANDORUS]:[new Ae(e.LANDORUS,Ee.INCARNATE,Ee.THERIAN,new Ce(55))],[e.KYUREM]:[new Ae(e.KYUREM,"","black",new Ce(57),!1,oa(e.ZEKROM)),new Ae(e.KYUREM,"","white",new Ce(58),!1,oa(e.RESHIRAM))],[e.KELDEO]:[new Ae(e.KELDEO,"ordinary","resolute",new Bi(t.SECRET_SWORD)),new Ae(e.KELDEO,"resolute","ordinary",new Bi(t.SECRET_SWORD,!1))],[e.MELOETTA]:[new Ae(e.MELOETTA,"aria","pirouette",new il(t.RELIC_SONG),!0),new Ae(e.MELOETTA,"pirouette","aria",new il(t.RELIC_SONG),!0)],[e.GENESECT]:[new Ae(e.GENESECT,"","shock",new Ce(104)),new Ae(e.GENESECT,"","burn",new Ce(105)),new Ae(e.GENESECT,"","chill",new Ce(106)),new Ae(e.GENESECT,"","douse",new Ce(107))],[e.GRENINJA]:[new Ae(e.GRENINJA,"battle-bond","ash",new _t,!0),new Ae(e.GRENINJA,"ash","battle-bond",new _t,!0)],[e.PALAFIN]:[new Ae(e.PALAFIN,"zero","hero",new _t,!0),new Ae(e.PALAFIN,"hero","zero",new _t,!0)],[e.AEGISLASH]:[new Ae(e.AEGISLASH,"blade","shield",new CT(t.KINGS_SHIELD),!0,new KR(E=>E.hasAbility(O.STANCE_CHANGE))),new Ae(e.AEGISLASH,"shield","blade",new CT(E=>He[E].category!==Ot.STATUS),!0,new KR(E=>E.hasAbility(O.STANCE_CHANGE))),new Ae(e.AEGISLASH,"blade","shield",new Os(!1),!0)],[e.XERNEAS]:[new Ae(e.XERNEAS,"neutral","active",new Os(!0),!0),new Ae(e.XERNEAS,"active","neutral",new Os(!1),!0)],[e.ZYGARDE]:[new Ae(e.ZYGARDE,"50-pc","complete",new _t,!0),new Ae(e.ZYGARDE,"complete","50-pc",new _t,!0),new Ae(e.ZYGARDE,"10-pc","10-complete",new _t,!0),new Ae(e.ZYGARDE,"10-complete","10-pc",new _t,!0)],[e.DIANCIE]:[new Ae(e.DIANCIE,"",Ee.MEGA,new Ce(16))],[e.HOOPA]:[new Ae(e.HOOPA,"","unbound",new Ce(59))],[e.WISHIWASHI]:[new Ae(e.WISHIWASHI,"","school",new _t,!0),new Ae(e.WISHIWASHI,"school","",new _t,!0)],[e.SILVALLY]:[new Ae(e.SILVALLY,"normal","fighting",new Ce(132)),new Ae(e.SILVALLY,"normal","flying",new Ce(133)),new Ae(e.SILVALLY,"normal","poison",new Ce(134)),new Ae(e.SILVALLY,"normal","ground",new Ce(135)),new Ae(e.SILVALLY,"normal","rock",new Ce(136)),new Ae(e.SILVALLY,"normal","bug",new Ce(137)),new Ae(e.SILVALLY,"normal","ghost",new Ce(138)),new Ae(e.SILVALLY,"normal","steel",new Ce(139)),new Ae(e.SILVALLY,"normal","fire",new Ce(140)),new Ae(e.SILVALLY,"normal","water",new Ce(141)),new Ae(e.SILVALLY,"normal","grass",new Ce(142)),new Ae(e.SILVALLY,"normal","electric",new Ce(143)),new Ae(e.SILVALLY,"normal","psychic",new Ce(144)),new Ae(e.SILVALLY,"normal","ice",new Ce(145)),new Ae(e.SILVALLY,"normal","dragon",new Ce(146)),new Ae(e.SILVALLY,"normal","dark",new Ce(147)),new Ae(e.SILVALLY,"normal","fairy",new Ce(148))],[e.MINIOR]:[new Ae(e.MINIOR,"red-meteor","red",new _t,!0),new Ae(e.MINIOR,"red","red-meteor",new _t,!0),new Ae(e.MINIOR,"orange-meteor","orange",new _t,!0),new Ae(e.MINIOR,"orange","orange-meteor",new _t,!0),new Ae(e.MINIOR,"yellow-meteor","yellow",new _t,!0),new Ae(e.MINIOR,"yellow","yellow-meteor",new _t,!0),new Ae(e.MINIOR,"green-meteor","green",new _t,!0),new Ae(e.MINIOR,"green","green-meteor",new _t,!0),new Ae(e.MINIOR,"blue-meteor","blue",new _t,!0),new Ae(e.MINIOR,"blue","blue-meteor",new _t,!0),new Ae(e.MINIOR,"indigo-meteor","indigo",new _t,!0),new Ae(e.MINIOR,"indigo","indigo-meteor",new _t,!0),new Ae(e.MINIOR,"violet-meteor","violet",new _t,!0),new Ae(e.MINIOR,"violet","violet-meteor",new _t,!0)],[e.MIMIKYU]:[new Ae(e.MIMIKYU,"disguised","busted",new _t,!0),new Ae(e.MIMIKYU,"busted","disguised",new _t,!0)],[e.NECROZMA]:[new Ae(e.NECROZMA,"","dawn-wings",new Ce(109),!1,oa(e.LUNALA)),new Ae(e.NECROZMA,"","dusk-mane",new Ce(108),!1,oa(e.SOLGALEO)),new Ae(e.NECROZMA,"dawn-wings","ultra",new Ce(64)),new Ae(e.NECROZMA,"dusk-mane","ultra",new Ce(64))],[e.MELMETAL]:[new Ae(e.MELMETAL,"",Ee.GIGANTAMAX,new Ce(56))],[e.RILLABOOM]:[new Ae(e.RILLABOOM,"",Ee.GIGANTAMAX,new Ce(56))],[e.CINDERACE]:[new Ae(e.CINDERACE,"",Ee.GIGANTAMAX,new Ce(56))],[e.INTELEON]:[new Ae(e.INTELEON,"",Ee.GIGANTAMAX,new Ce(56))],[e.CORVIKNIGHT]:[new Ae(e.CORVIKNIGHT,"",Ee.GIGANTAMAX,new Ce(56))],[e.ORBEETLE]:[new Ae(e.ORBEETLE,"",Ee.GIGANTAMAX,new Ce(56))],[e.DREDNAW]:[new Ae(e.DREDNAW,"",Ee.GIGANTAMAX,new Ce(56))],[e.COALOSSAL]:[new Ae(e.COALOSSAL,"",Ee.GIGANTAMAX,new Ce(56))],[e.FLAPPLE]:[new Ae(e.FLAPPLE,"",Ee.GIGANTAMAX,new Ce(56))],[e.APPLETUN]:[new Ae(e.APPLETUN,"",Ee.GIGANTAMAX,new Ce(56))],[e.SANDACONDA]:[new Ae(e.SANDACONDA,"",Ee.GIGANTAMAX,new Ce(56))],[e.CRAMORANT]:[new Ae(e.CRAMORANT,"","gulping",new _t,!0,new KR(E=>E.getHpRatio()>=.5)),new Ae(e.CRAMORANT,"","gorging",new _t,!0,new KR(E=>E.getHpRatio()<.5)),new Ae(e.CRAMORANT,"gulping","",new _t,!0),new Ae(e.CRAMORANT,"gorging","",new _t,!0),new Ae(e.CRAMORANT,"gulping","",new Os(!1),!0),new Ae(e.CRAMORANT,"gorging","",new Os(!1),!0)],[e.TOXTRICITY]:[new Ae(e.TOXTRICITY,"amped",Ee.GIGANTAMAX,new Ce(56)),new Ae(e.TOXTRICITY,"lowkey",Ee.GIGANTAMAX,new Ce(56)),new Ae(e.TOXTRICITY,Ee.GIGANTAMAX,"amped",new lT(new Ce(56,!1),new al("amped"))),new Ae(e.TOXTRICITY,Ee.GIGANTAMAX,"lowkey",new lT(new Ce(56,!1),new al("lowkey")))],[e.CENTISKORCH]:[new Ae(e.CENTISKORCH,"",Ee.GIGANTAMAX,new Ce(56))],[e.HATTERENE]:[new Ae(e.HATTERENE,"",Ee.GIGANTAMAX,new Ce(56))],[e.GRIMMSNARL]:[new Ae(e.GRIMMSNARL,"",Ee.GIGANTAMAX,new Ce(56))],[e.ALCREMIE]:[new Ae(e.ALCREMIE,"vanilla-cream",Ee.GIGANTAMAX,new Ce(56)),new Ae(e.ALCREMIE,"ruby-cream",Ee.GIGANTAMAX,new Ce(56)),new Ae(e.ALCREMIE,"matcha-cream",Ee.GIGANTAMAX,new Ce(56)),new Ae(e.ALCREMIE,"mint-cream",Ee.GIGANTAMAX,new Ce(56)),new Ae(e.ALCREMIE,"lemon-cream",Ee.GIGANTAMAX,new Ce(56)),new Ae(e.ALCREMIE,"salted-cream",Ee.GIGANTAMAX,new Ce(56)),new Ae(e.ALCREMIE,"ruby-swirl",Ee.GIGANTAMAX,new Ce(56)),new Ae(e.ALCREMIE,"caramel-swirl",Ee.GIGANTAMAX,new Ce(56)),new Ae(e.ALCREMIE,"rainbow-swirl",Ee.GIGANTAMAX,new Ce(56))],[e.EISCUE]:[new Ae(e.EISCUE,"","no-ice",new _t,!0),new Ae(e.EISCUE,"no-ice","",new _t,!0)],[e.MORPEKO]:[new Ae(e.MORPEKO,"full-belly","hangry",new _t,!0),new Ae(e.MORPEKO,"hangry","full-belly",new _t,!0)],[e.COPPERAJAH]:[new Ae(e.COPPERAJAH,"",Ee.GIGANTAMAX,new Ce(56))],[e.DURALUDON]:[new Ae(e.DURALUDON,"",Ee.GIGANTAMAX,new Ce(56))],[e.ZACIAN]:[new Ae(e.ZACIAN,"hero-of-many-battles","crowned",new Ce(60))],[e.ZAMAZENTA]:[new Ae(e.ZAMAZENTA,"hero-of-many-battles","crowned",new Ce(61))],[e.ETERNATUS]:[new Ae(e.ETERNATUS,"",Ee.ETERNAMAX,new _t),new Ae(e.ETERNATUS,"",Ee.ETERNAMAX,new Ce(56))],[e.URSHIFU]:[new Ae(e.URSHIFU,"single-strike",Ee.GIGANTAMAX_SINGLE,new Ce(56)),new Ae(e.URSHIFU,"rapid-strike",Ee.GIGANTAMAX_RAPID,new Ce(56))],[e.CALYREX]:[new Ae(e.CALYREX,"","ice",new Ce(62),!1,oa(e.GLASTRIER)),new Ae(e.CALYREX,"","shadow",new Ce(63),!1,oa(e.SPECTRIER))],[e.ENAMORUS]:[new Ae(e.ENAMORUS,Ee.INCARNATE,Ee.THERIAN,new Ce(55))],[e.OGERPON]:[new Ae(e.OGERPON,"teal-mask","wellspring-mask",new Ce(110)),new Ae(e.OGERPON,"teal-mask","hearthflame-mask",new Ce(111)),new Ae(e.OGERPON,"teal-mask","cornerstone-mask",new Ce(112)),new Ae(e.OGERPON,"teal-mask","teal-mask-tera",new SI(n.GRASS)),new Ae(e.OGERPON,"teal-mask-tera","teal-mask",new oI,!0,new KR(E=>E.getTeraType()!==n.GRASS)),new Ae(e.OGERPON,"wellspring-mask","wellspring-mask-tera",new SI(n.WATER)),new Ae(e.OGERPON,"wellspring-mask-tera","wellspring-mask",new oI,!0,new KR(E=>E.getTeraType()!==n.WATER)),new Ae(e.OGERPON,"hearthflame-mask","hearthflame-mask-tera",new SI(n.FIRE)),new Ae(e.OGERPON,"hearthflame-mask-tera","hearthflame-mask",new oI,!0,new KR(E=>E.getTeraType()!==n.FIRE)),new Ae(e.OGERPON,"cornerstone-mask","cornerstone-mask-tera",new SI(n.ROCK)),new Ae(e.OGERPON,"cornerstone-mask-tera","cornerstone-mask",new oI,!0,new KR(E=>E.getTeraType()!==n.ROCK))],[e.TERAPAGOS]:[new Ae(e.TERAPAGOS,"","terastal",new _t,!0),new Ae(e.TERAPAGOS,"terastal","stellar",new SI(n.STELLAR)),new Ae(e.TERAPAGOS,"stellar","terastal",new oI,!0,new KR(E=>E.getTeraType()!==n.STELLAR))],[e.GALAR_DARMANITAN]:[new Ae(e.GALAR_DARMANITAN,"","zen",new _t,!0),new Ae(e.GALAR_DARMANITAN,"zen","",new _t,!0)]};function H8(){Object.keys(mO).forEach(A=>{const s=mO[A],R=[];for(const I of s){const i=I.findTrigger(Ce);i&&!s.find(a=>I.formKey===a.preFormKey&&I.preFormKey===a.formKey)&&R.push(new Ae(I.speciesId,I.formKey,I.preFormKey,new Ce(i.item,!1)))}s.push(...R)})}T(H8,"initPokemonForms");const Zs=48,Jn=82,Er=48,$n=8,Go=6,EM=class EM extends Phaser.GameObjects.Container{constructor(A,s){s!=null&&s.onSide&&(s.top=!1),super(A,s==null?void 0:s.x,s==null?void 0:s.y),this.active=!1,this.descScroll=null;const R=(s==null?void 0:s.scale)||1;this.setScale(R),this.options=s||{};const I=((s==null?void 0:s.width)||EM.getWidth(R,A))/R;this.descBg=it(A,s!=null&&s.onSide&&!(s!=null&&s.right)?Jn:0,s!=null&&s.top?Zs:0,I-(s!=null&&s.onSide?Jn:0),Er),this.descBg.setOrigin(0,0),this.add(this.descBg),this.desc=se(A,(s!=null&&s.onSide&&!(s!=null&&s.right)?Jn:0)+$n,(s!=null&&s.top?Zs:0)+$n-2,"",V.BATTLE_INFO,{wordWrap:{width:(I-($n-2)*2-(s!=null&&s.onSide?Jn:0))*Go}}),this.desc.setLineSpacing(U.resolvedLanguage==="ja"?25:5);const i={x:(s==null?void 0:s.x)||0,y:(s==null?void 0:s.y)||0};i.x<0&&(i.x+=this.scene.game.canvas.width/Go),i.y<0&&(i.y+=this.scene.game.canvas.height/Go);const a=this.scene.make.graphics();a.fillStyle(16711680),a.fillRect(i.x+((s!=null&&s.onSide&&!(s!=null&&s.right)?Jn:0)+$n)*R,i.y+((s!=null&&s.top?Zs:0)+$n-2)*R,I-((s!=null&&s.onSide?Jn:0)-$n*2)*R,(Er-($n-2)*2)*R),a.setScale(6);const L=this.createGeometryMask(a);this.add(this.desc),this.desc.setMask(L),this.val=new Phaser.GameObjects.Container(A,s!=null&&s.right?I-Jn:0,s!=null&&s.top||s!=null&&s.onSide?0:Er),this.add(this.val);const S=it(A,0,0,Jn,Zs);S.setOrigin(0,0),this.val.add(S),this.typ=this.scene.add.sprite(25,Zs-35,UR("types"),"unknown"),this.typ.setScale(.8),this.val.add(this.typ),this.cat=this.scene.add.sprite(57,Zs-35,"categories","physical"),this.val.add(this.cat);const o=se(A,12,Zs-25,"PP",V.MOVE_INFO_CONTENT);o.setOrigin(0,.5),o.setText(U.t("fightUiHandler:pp")),this.val.add(o),this.pp=se(A,70,Zs-25,"--",V.MOVE_INFO_CONTENT),this.pp.setOrigin(1,.5),this.val.add(this.pp);const l=se(A,12,Zs-17,"POWER",V.MOVE_INFO_CONTENT);l.setOrigin(0,.5),l.setText(U.t("fightUiHandler:power")),this.val.add(l),this.pow=se(A,70,Zs-17,"---",V.MOVE_INFO_CONTENT),this.pow.setOrigin(1,.5),this.val.add(this.pow);const D=se(A,12,Zs-9,"ACC",V.MOVE_INFO_CONTENT);D.setOrigin(0,.5),D.setText(U.t("fightUiHandler:accuracy")),this.val.add(D),this.acc=se(A,70,Zs-9,"---",V.MOVE_INFO_CONTENT),this.acc.setOrigin(1,.5),this.val.add(this.acc),s!=null&&s.hideEffectBox&&this.val.setVisible(!1),s!=null&&s.hideBg&&this.descBg.setVisible(!1),this.setVisible(!1)}show(A){var R;if(!this.scene.enableMoveInfo)return!1;this.move=A,this.pow.setText(A.power>=0?A.power.toString():"---"),this.acc.setText(A.accuracy>=0?A.accuracy.toString():"---"),this.pp.setText(A.pp>=0?A.pp.toString():"---"),this.typ.setTexture(UR("types"),n[A.type].toLowerCase()),this.cat.setFrame(Ot[A.category].toLowerCase()),this.desc.setText((A==null?void 0:A.effect)||""),this.descScroll&&(this.descScroll.remove(),this.descScroll=null,this.desc.y=((R=this.options)!=null&&R.top?Zs:0)+$n-2);const s=Math.floor(this.desc.displayHeight*(96/72)/14.83);return s>3&&(this.descScroll=this.scene.tweens.add({targets:this.desc,delay:Ve(2e3),loop:-1,hold:Ve(2e3),duration:Ve((s-3)*2e3),y:`-=${14.83*(72/96)*(s-3)}`})),this.options.delayVisibility||this.setVisible(!0),this.active=!0,!0}clear(){this.setVisible(!1),this.active=!1}toggleInfo(A){A&&this.setVisible(!0),this.scene.tweens.add({targets:this.desc,duration:Ve(125),ease:"Sine.easeInOut",alpha:A?1:0}),A||this.setVisible(!1)}isActive(){return this.active}static getWidth(A,s){return s.game.canvas.width/Go/2}static getHeight(A,s){return(s?Math.max(Zs,Er):Zs+Er)*A}};T(EM,"MoveInfoOverlay");let nO=EM;const d8=[],gi={[t.MEGA_PUNCH]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PIKACHU,e.RAICHU,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWBRO,e.GENGAR,e.DROWZEE,e.HYPNO,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.LEDYBA,e.LEDIAN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.QUAGSIRE,e.SLOWKING,e.SNUBBULL,e.GRANBULL,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.DELIBIRD,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MARSHTOMP,e.SWAMPERT,e.LOMBRE,e.LUDICOLO,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MAWILE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.GRUMPIG,e.SPINDA,e.FLYGON,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.KECLEON,e.DUSCLOPS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.GROUDON,e.JIRACHI,e.BUNEARY,e.LOPUNNY,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.GALLADE,e.DUSKNOIR,e.REGIGIGAS,e.VICTINI,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.ZOROARK,e.REUNICLUS,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.HELIOLISK,e.HAWLUCHA,e.GOODRA,e.INCINEROAR,e.STUFFUL,e.BEWEAR,e.ORANGURU,e.PASSIMIAN,e.TURTONATOR,e.HAKAMO_O,e.KOMMO_O,e.TAPU_BULU,e.BUZZWOLE,e.GUZZLORD,e.MARSHADOW,e.ZERAORA,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.COALOSSAL,e.TOXTRICITY,e.CLOBBOPUS,e.GRAPPLOCT,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.MR_RIME,e.DRACOZOLT,e.ARCTOZOLT,e.KUBFU,e.URSHIFU,e.ZARUDE,[e.DEOXYS,"attack","defense","speed"],e.ALOLA_RAICHU,e.ALOLA_GOLEM,e.ALOLA_MAROWAK,[e.LYCANROC,"midnight"],e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN],[t.PAY_DAY]:[e.PIKACHU,e.RAICHU,e.NIDOQUEEN,e.NIDOKING,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.RHYDON,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.SNORLAX,e.MEWTWO,e.MEW,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.ESPEON,e.UMBREON,e.SLOWKING,e.SKITTY,e.DELCATTY,e.MUNCHLAX,e.RHYPERIOR,e.LEAFEON,e.GLACEON,e.PURRLOIN,e.LIEPARD,e.ESPURR,e.MEOWSTIC,e.SYLVEON,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.ZERAORA,e.PERRSERKER,e.INDEEDEE,e.CALYREX,e.ANNIHILAPE,e.ALOLA_RAICHU,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_MEOWTH,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING],[t.FIRE_PUNCH]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MANKEY,e.PRIMEAPE,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.CUBONE,e.MAROWAK,e.HITMONCHAN,e.LICKITUNG,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.ELECTABUZZ,e.MAGMAR,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.TYPHLOSION,e.SENTRET,e.FURRET,e.FLAAFFY,e.AMPHAROS,e.SUDOWOODO,e.AIPOM,e.SLOWKING,e.SNUBBULL,e.GRANBULL,e.TEDDIURSA,e.URSARING,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.TYRANITAR,e.COMBUSKEN,e.BLAZIKEN,e.LOMBRE,e.LUDICOLO,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.SABLEYE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.GULPIN,e.SWALOT,e.GRUMPIG,e.SPINDA,e.FLYGON,e.ZANGOOSE,e.KECLEON,e.DUSCLOPS,e.REGIROCK,e.GROUDON,e.JIRACHI,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.CRANIDOS,e.RAMPARDOS,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.MUNCHLAX,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.MAGMORTAR,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.UXIE,e.MESPRIT,e.AZELF,e.REGIGIGAS,e.VICTINI,e.PIGNITE,e.EMBOAR,e.WATCHOG,e.PANSEAR,e.SIMISEAR,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.REUNICLUS,e.EELEKTROSS,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.HEATMOR,e.MELOETTA,e.BRAIXEN,e.DELPHOX,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.HELIOLISK,e.HAWLUCHA,e.GOODRA,e.HOOPA,e.INCINEROAR,e.GUMSHOOS,[e.LYCANROC,"midnight"],e.KOMMO_O,e.MARSHADOW,e.BLACEPHALON,e.ZERAORA,e.CINDERACE,e.COALOSSAL,e.TOXTRICITY,e.GRIMMSNARL,e.OBSTAGOON,e.KUBFU,e.URSHIFU,e.URSALUNA,e.SNEASLER,e.PAWMOT,e.GARGANACL,e.ANNIHILAPE,e.SCREAM_TAIL,e.IRON_HANDS,e.IRON_THORNS,e.IRON_VALIANT,e.OKIDOGI,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,[e.LYCANROC,"midnight"],e.GALAR_SLOWKING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_TYPHLOSION,e.HISUI_GOODRA,e.BLOODMOON_URSALUNA],[t.ICE_PUNCH]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.SLOWBRO,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.HITMONCHAN,e.LICKITUNG,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.LEDYBA,e.LEDIAN,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.SNUBBULL,e.GRANBULL,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.DELIBIRD,e.SMOOCHUM,e.ELEKID,e.MILTANK,e.BLISSEY,e.TYRANITAR,e.MARSHTOMP,e.SWAMPERT,e.LOMBRE,e.LUDICOLO,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.SABLEYE,e.MAWILE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.VOLBEAT,e.ILLUMISE,e.GULPIN,e.SWALOT,e.GRUMPIG,e.SPINDA,e.ZANGOOSE,e.KECLEON,e.DUSCLOPS,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.JIRACHI,e.DEOXYS,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.UXIE,e.MESPRIT,e.AZELF,e.REGIGIGAS,e.WATCHOG,e.PANPOUR,e.SIMIPOUR,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.SCRAGGY,e.SCRAFTY,e.REUNICLUS,e.CUBCHOO,e.BEARTIC,e.GOLETT,e.GOLURK,e.MELOETTA,e.FROGADIER,e.GRENINJA,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.HOOPA,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.STUFFUL,e.BEWEAR,e.KOMMO_O,e.TAPU_FINI,e.BUZZWOLE,e.MARSHADOW,e.MELMETAL,e.CLOBBOPUS,e.GRAPPLOCT,e.GRIMMSNARL,e.OBSTAGOON,e.MR_RIME,e.EISCUE,e.KUBFU,e.URSHIFU,e.URSALUNA,e.PAWMOT,e.GARGANACL,e.PALAFIN,e.CETITAN,e.ANNIHILAPE,e.SCREAM_TAIL,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_THORNS,e.IRON_VALIANT,e.OKIDOGI,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.BLOODMOON_URSALUNA],[t.THUNDER_PUNCH]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.PIKACHU,e.RAICHU,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MANKEY,e.PRIMEAPE,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.CUBONE,e.MAROWAK,e.HITMONCHAN,e.LICKITUNG,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.ELECTABUZZ,e.MAGMAR,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.TYPHLOSION,e.SENTRET,e.FURRET,e.LEDYBA,e.LEDIAN,e.PICHU,e.FLAAFFY,e.AMPHAROS,e.SUDOWOODO,e.AIPOM,e.SLOWKING,e.SNUBBULL,e.GRANBULL,e.TEDDIURSA,e.URSARING,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.COMBUSKEN,e.BLAZIKEN,e.LOMBRE,e.LUDICOLO,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.SABLEYE,e.MAWILE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.GULPIN,e.SWALOT,e.GRUMPIG,e.SPINDA,e.FLYGON,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.KECLEON,e.DUSCLOPS,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.GROUDON,e.JIRACHI,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.CRANIDOS,e.RAMPARDOS,e.PACHIRISU,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.MAGMORTAR,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.UXIE,e.MESPRIT,e.AZELF,e.REGIGIGAS,e.VICTINI,e.PIGNITE,e.EMBOAR,e.WATCHOG,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.SCRAGGY,e.SCRAFTY,e.REUNICLUS,e.EELEKTROSS,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.HEATMOR,e.THUNDURUS,e.ZEKROM,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.BRAIXEN,e.DELPHOX,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.HELIOLISK,e.HAWLUCHA,e.DEDENNE,e.GOODRA,e.HOOPA,e.INCINEROAR,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.STUFFUL,e.BEWEAR,[e.LYCANROC,"midnight"],e.KOMMO_O,e.TAPU_KOKO,e.BUZZWOLE,e.XURKITREE,e.MARSHADOW,e.ZERAORA,e.MELMETAL,e.TOXTRICITY,e.GRIMMSNARL,e.OBSTAGOON,e.MORPEKO,e.DRACOZOLT,e.ARCTOZOLT,e.KUBFU,e.URSHIFU,e.URSALUNA,e.FLORAGATO,e.MEOWSCARADA,e.PAWMO,e.PAWMOT,e.GARGANACL,e.ANNIHILAPE,e.SCREAM_TAIL,e.IRON_HANDS,e.IRON_THORNS,e.GHOLDENGO,e.IRON_VALIANT,e.OKIDOGI,e.ALOLA_RAICHU,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,[e.LYCANROC,"midnight"],e.GALAR_SLOWKING,e.HISUI_TYPHLOSION,e.HISUI_GOODRA,e.BLOODMOON_URSALUNA],[t.SWORDS_DANCE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.BEEDRILL,e.RATICATE,e.SANDSHREW,e.SANDSLASH,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.DIGLETT,e.DUGTRIO,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.RAPIDASH,e.FARFETCHD,e.DODUO,e.DODRIO,e.KRABBY,e.KINGLER,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.TANGELA,e.GOLDEEN,e.SEAKING,e.SCYTHER,e.PINSIR,e.KABUTOPS,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.LEDYBA,e.LEDIAN,e.ARIADOS,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNKERN,e.SUNFLORA,e.YANMA,e.GLIGAR,e.QWILFISH,e.SCIZOR,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SKARMORY,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.SHROOMISH,e.BRELOOM,e.NINJASK,e.MAWILE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.SOLROCK,e.CORPHISH,e.CRAWDAUNT,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.BANETTE,e.TROPIUS,e.ABSOL,e.WALREIN,e.GROUDON,e.RAYQUAZA,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.EMPOLEON,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.CHERUBI,e.CHERRIM,e.GIBLE,e.GABITE,e.GARCHOMP,e.RIOLU,e.LUCARIO,e.SKORUPI,e.DRAPION,e.TOXICROAK,e.CARNIVINE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.YANMEGA,e.LEAFEON,e.GLISCOR,e.GALLADE,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.SNIVY,e.SERVINE,e.SERPERIOR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.DRILBUR,e.EXCADRILL,e.LEAVANNY,e.SCOLIPEDE,e.LILLIGANT,e.DWEBBLE,e.CRUSTLE,e.SCRAFTY,e.ZORUA,e.ZOROARK,e.SAWSBUCK,e.KARRABLAST,e.ESCAVALIER,e.FERROTHORN,e.AXEW,e.FRAXURE,e.HAXORUS,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.COBALION,e.TERRAKION,e.VIRIZION,e.LANDORUS,e.KELDEO,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.PANCHAM,e.PANGORO,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.BINACLE,e.BARBARACLE,e.CLAUNCHER,e.CLAWITZER,e.HAWLUCHA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.ORICORIO,e.ROCKRUFF,e.LYCANROC,e.FOMANTIS,e.LURANTIS,e.STUFFUL,e.BEWEAR,e.GOLISOPOD,e.TYPE_NULL,e.SILVALLY,e.KOMALA,e.MIMIKYU,e.BRUXISH,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_BULU,e.KARTANA,e.NECROZMA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.RABOOT,e.CINDERACE,e.INTELEON,e.GREEDENT,e.DUBWOOL,e.DREDNAW,e.HATTERENE,e.PERRSERKER,e.SIRFETCHD,e.FALINKS,e.DURALUDON,e.ZACIAN,e.KUBFU,e.URSHIFU,e.ZARUDE,e.GLASTRIER,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.OVERQWIL,e.QUAQUAVAL,e.LOKIX,e.CERULEDGE,e.SHROODLE,e.GRAFAIAI,e.KLAWF,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.FLAMIGO,e.KINGAMBIT,e.IRON_HANDS,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.CHIEN_PAO,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.IRON_LEAVES,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.IRON_BOULDER,e.IRON_CROWN,e.ALOLA_RATICATE,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_RAPIDASH,e.GALAR_FARFETCHD,[e.CALYREX,"ice"],e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZOROARK,e.HISUI_DECIDUEYE,e.BLOODMOON_URSALUNA],[t.CUT]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.BEEDRILL,e.RATTATA,e.RATICATE,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.FARFETCHD,e.KRABBY,e.KINGLER,e.LICKITUNG,e.RHYDON,e.TANGELA,e.KANGASKHAN,e.SCYTHER,e.PINSIR,e.KABUTOPS,e.DRAGONITE,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.BELLOSSOM,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.ESPEON,e.UMBREON,e.GLIGAR,e.STEELIX,e.SCIZOR,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SKARMORY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.TYRANITAR,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.ZIGZAGOON,e.LINOONE,e.NUZLEAF,e.SHIFTRY,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.SABLEYE,e.ARON,e.LAIRON,e.AGGRON,e.ROSELIA,e.CACNEA,e.CACTURNE,e.CORPHISH,e.CRAWDAUNT,e.ANORITH,e.ARMALDO,e.KECLEON,e.TROPIUS,e.ABSOL,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.GROUDON,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.BUDEW,e.ROSERADE,e.RAMPARDOS,e.VESPIQUEN,e.PACHIRISU,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.GLAMEOW,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.GIBLE,e.GABITE,e.GARCHOMP,e.SKORUPI,e.DRAPION,e.TOXICROAK,e.CARNIVINE,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.GLISCOR,e.GALLADE,e.DIALGA,e.PALKIA,e.GIRATINA,e.DARKRAI,e.ARCEUS,e.SNIVY,e.SERVINE,e.SERPERIOR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.DRILBUR,e.EXCADRILL,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.SCOLIPEDE,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DWEBBLE,e.CRUSTLE,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.JOLTIK,e.GALVANTULA,e.FERROTHORN,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.COBALION,e.TERRAKION,e.VIRIZION,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.KELDEO,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.VOLCANION,e.KARTANA,e.OBSTAGOON,e.PERRSERKER,e.URSALUNA,e.BASCULEGION,e.KINGAMBIT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_MEOWTH,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_TYPHLOSION,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_BRAVIARY,e.BLOODMOON_URSALUNA],[t.FLY]:[e.CHARIZARD,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.SPEAROW,e.FEAROW,e.ZUBAT,e.GOLBAT,e.FARFETCHD,e.DODUO,e.DODRIO,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.TOGETIC,e.XATU,e.MURKROW,e.DELIBIRD,e.SKARMORY,e.LUGIA,e.HO_OH,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.VIBRAVA,e.FLYGON,e.SWABLU,e.ALTARIA,e.TROPIUS,e.SALAMENCE,e.LATIAS,e.LATIOS,e.RAYQUAZA,e.STARLY,e.STARAVIA,e.STARAPTOR,e.DRIFLOON,e.DRIFBLIM,e.HONCHKROW,e.CHATOT,e.TOGEKISS,e.GIRATINA,e.ARCEUS,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.SIGILYPH,e.ARCHEOPS,e.DUCKLETT,e.SWANNA,e.GOLURK,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HYDREIGON,e.VOLCARONA,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.GENESECT,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.HAWLUCHA,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.VIKAVOLT,e.ORICORIO,e.DRAMPA,e.TAPU_KOKO,e.LUNALA,e.CELESTEELA,e.NAGANADEL,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.FLAPPLE,e.CRAMORANT,e.DRAGAPULT,e.ETERNATUS,e.ENAMORUS,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.BOMBIRDIER,e.FLAMIGO,e.IRON_JUGULIS,e.ROARING_MOON,e.FEZANDIPITI,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.HISUI_BRAVIARY],[t.MEGA_KICK]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PIKACHU,e.RAICHU,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GOLEM,e.SLOWBRO,e.GENGAR,e.DROWZEE,e.HYPNO,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.KABUTOPS,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.QUAGSIRE,e.SLOWKING,e.SNUBBULL,e.GRANBULL,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.DELIBIRD,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MARSHTOMP,e.SWAMPERT,e.LOMBRE,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MAWILE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.GRUMPIG,e.SPINDA,e.FLYGON,e.CACTURNE,e.ZANGOOSE,e.KECLEON,e.DUSCLOPS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.GROUDON,e.JIRACHI,e.BUNEARY,e.LOPUNNY,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.GALLADE,e.DUSKNOIR,e.REGIGIGAS,e.VICTINI,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.ZOROARK,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.GOLETT,e.GOLURK,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.HELIOLISK,e.HAWLUCHA,e.GOODRA,e.INCINEROAR,e.MUDBRAY,e.MUDSDALE,e.STUFFUL,e.BEWEAR,e.TSAREENA,e.ORANGURU,e.PASSIMIAN,e.TURTONATOR,e.HAKAMO_O,e.KOMMO_O,e.GUZZLORD,e.MARSHADOW,e.STAKATAKA,e.ZERAORA,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.DUBWOOL,e.COALOSSAL,e.TOXTRICITY,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.MR_RIME,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.KUBFU,e.URSHIFU,e.ZARUDE,e.QUAQUAVAL,e.FLAMIGO,[e.DEOXYS,"attack","defense","speed"],e.ALOLA_RAICHU,e.ALOLA_MAROWAK,[e.LYCANROC,"midnight"],e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_ZAPDOS,e.GALAR_SLOWKING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_LILLIGANT],[t.BODY_SLAM]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.RATTATA,e.RATICATE,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.VILEPLUME,e.PARAS,e.PARASECT,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.WEEPINBELL,e.VICTREEBEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.CLOYSTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.GOLDEEN,e.SEAKING,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.SNORLAX,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.NOCTOWL,e.SPINARAK,e.ARIADOS,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.SLOWKING,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.SHUCKLE,e.HERACROSS,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.DELIBIRD,e.MANTINE,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.INFERNAPE,e.EMPOLEON,e.LUXRAY,e.ROSERADE,e.SHIELDON,e.BASTIODON,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.DRIFLOON,e.DRIFBLIM,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SNOVER,e.ABOMASNOW,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.MAMOSWINE,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.ARCEUS,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.SAMUROTT,e.BLITZLE,e.ZEBSTRIKA,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.CONKELDURR,e.THROH,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARMANITAN,e.SCRAFTY,e.TIRTOUGA,e.CARRACOSTA,e.GARBODOR,e.ZOROARK,e.GOTHITELLE,e.REUNICLUS,e.DEERLING,e.SAWSBUCK,e.FOONGUS,e.AMOONGUSS,e.ALOMOMOLA,e.EELEKTRIK,e.EELEKTROSS,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.HEATMOR,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.DIGGERSBY,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.CLAWITZER,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.BERGMITE,e.AVALUGG,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.BRIONNE,e.PRIMARINA,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.ROCKRUFF,e.LYCANROC,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.ARAQUANID,e.SALAZZLE,e.BEWEAR,e.ORANGURU,e.PASSIMIAN,e.PALOSSAND,e.KOMALA,e.TURTONATOR,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.SOLGALEO,e.NIHILEGO,e.BUZZWOLE,e.CELESTEELA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.STAKATAKA,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SKWOVET,e.GREEDENT,e.CORVIKNIGHT,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CLOBBOPUS,e.GRAPPLOCT,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.FALINKS,e.PINCURCHIN,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.WYRDEER,e.URSALUNA,e.ENAMORUS,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.FIDOUGH,e.DACHSBUN,e.NACLI,e.NACLSTACK,e.GARGANACL,e.MASCHIFF,e.MABOSSTIFF,e.KLAWF,e.ESPATHRA,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.WO_CHIEN,e.TING_LU,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.DIPPLIN,e.OKIDOGI,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARMANITAN,[e.CALYREX,"ice","shadow"],e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_SAMUROTT,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.TAKE_DOWN]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.CHINCHOU,e.LANTURN,e.PICHU,e.IGGLYBUFF,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.DELIBIRD,e.MANTINE,e.HOUNDOUR,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.STANTLER,e.BLISSEY,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.WINGULL,e.PELIPPER,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SABLEYE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.VOLBEAT,e.ILLUMISE,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.MILOTIC,e.TROPIUS,e.CHIMECHO,e.SNORUNT,e.GLALIE,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.BELDUM,e.METANG,e.METAGROSS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.HONCHKROW,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.HAPPINY,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.CROAGUNK,e.TOXICROAK,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.RHYPERIOR,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.GALLADE,e.PROBOPASS,e.FROSLASS,e.DIALGA,e.PALKIA,e.HEATRAN,e.GIRATINA,e.ARCEUS,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.BLITZLE,e.ROGGENROLA,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.DEERLING,e.SAWSBUCK,e.KARRABLAST,e.ESCAVALIER,e.ALOMOMOLA,e.EELEKTRIK,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.MIENFOO,e.MIENSHAO,e.PAWNIARD,e.BISHARP,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.KELDEO,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.FURFROU,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.TREVENANT,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MUDBRAY,e.MUDSDALE,e.FOMANTIS,e.LURANTIS,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.ORANGURU,e.PASSIMIAN,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.MIMIKYU,e.BRUXISH,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.MAGEARNA,e.STAKATAKA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXTRICITY,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.FALINKS,e.PINCURCHIN,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.OKIDOGI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER],[t.DOUBLE_EDGE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.NOCTOWL,e.CROBAT,e.CHINCHOU,e.LANTURN,e.IGGLYBUFF,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.HERACROSS,e.TEDDIURSA,e.URSARING,e.SWINUB,e.PILOSWINE,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.HITMONTOP,e.ELEKID,e.MAGBY,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.VIGOROTH,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.VOLBEAT,e.ILLUMISE,e.SWALOT,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.FLYGON,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.FEEBAS,e.MILOTIC,e.TROPIUS,e.CHIMECHO,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.SHINX,e.LUXIO,e.LUXRAY,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.FLOATZEL,e.AMBIPOM,e.HONCHKROW,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BONSLY,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.HIPPOPOTAS,e.HIPPOWDON,e.SNOVER,e.ABOMASNOW,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.PROBOPASS,e.MESPRIT,e.AZELF,e.REGIGIGAS,e.SHAYMIN,e.ARCEUS,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.BLITZLE,e.ZEBSTRIKA,e.DRILBUR,e.EXCADRILL,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.CINCCINO,e.DUCKLETT,e.SWANNA,e.DEERLING,e.SAWSBUCK,e.AXEW,e.FRAXURE,e.HAXORUS,e.BEARTIC,e.MIENSHAO,e.GOLETT,e.GOLURK,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.RESHIRAM,e.ZEKROM,e.KELDEO,e.CHESNAUGHT,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.SYLVEON,e.CARBINK,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIVERN,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.YUNGOOS,e.GUMSHOOS,e.ROCKRUFF,e.LYCANROC,e.MUDBRAY,e.MUDSDALE,e.PASSIMIAN,e.MINIOR,e.KOMALA,e.HAKAMO_O,e.KOMMO_O,e.SOLGALEO,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SKWOVET,e.GREEDENT,e.CORVIKNIGHT,e.DREDNAW,e.ARROKUDA,e.BARRASKEWDA,e.PERRSERKER,e.EISCUE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DURALUDON,e.DRAKLOAK,e.DRAGAPULT,e.KUBFU,e.URSHIFU,e.ZARUDE,e.GLASTRIER,e.SPECTRIER,[e.CALYREX,"ice","shadow"],e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.OVERQWIL,e.LECHONK,e.OINKOLOGNE,e.LOKIX,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SQUAWKABILLY,e.NACLSTACK,e.GARGANACL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.ESPATHRA,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GREAVARD,e.HOUNDSTONE,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.SLITHER_WING,e.IRON_TREADS,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_THORNS,e.BAXCALIBUR,e.TING_LU,e.ROARING_MOON,e.KORAIDON,e.WALKING_WAKE,e.OKIDOGI,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_EXEGGUTOR,e.GALAR_MEOWTH,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_ZAPDOS,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_BRAVIARY,e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.PIN_MISSILE]:[e.BEEDRILL,e.SANDSLASH,e.CLOYSTER,e.JOLTEON,e.OMASTAR,e.MEW,e.SPINARAK,e.ARIADOS,e.PINECO,e.FORRETRESS,e.QWILFISH,e.HERACROSS,e.ZIGZAGOON,e.LINOONE,e.ROSELIA,e.CACNEA,e.CACTURNE,e.BUDEW,e.ROSERADE,e.VESPIQUEN,e.SKORUPI,e.DRAPION,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.MARACTUS,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.MAREANIE,e.TOXAPEX,e.GOLISOPOD,e.TOGEDEMARU,e.POIPOLE,e.NAGANADEL,e.OBSTAGOON,e.CURSOLA,e.PINCURCHIN,e.OVERQWIL,e.IRON_THORNS,e.ALOLA_SANDSLASH,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_QWILFISH],[t.ROAR]:[e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.BLASTOISE,e.RATICATE,e.NIDOQUEEN,e.NIDOKING,e.VULPIX,e.NINETALES,e.PERSIAN,e.GROWLITHE,e.ARCANINE,e.GOLEM,e.ONIX,e.RHYHORN,e.RHYDON,e.KANGASKHAN,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.CROCONAW,e.FERALIGATR,e.FLAAFFY,e.AMPHAROS,e.ESPEON,e.UMBREON,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.TEDDIURSA,e.URSARING,e.SWINUB,e.PILOSWINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.STANTLER,e.RAIKOU,e.ENTEI,e.SUICUNE,e.TYRANITAR,e.LUGIA,e.HO_OH,e.SCEPTILE,e.BLAZIKEN,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.LINOONE,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.ARON,e.LAIRON,e.AGGRON,e.ELECTRIKE,e.MANECTRIC,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.ALTARIA,e.ZANGOOSE,e.TROPIUS,e.SEALEO,e.WALREIN,e.BAGON,e.SHELGON,e.SALAMENCE,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.TURTWIG,e.GROTLE,e.TORTERRA,e.INFERNAPE,e.EMPOLEON,e.SHINX,e.LUXIO,e.LUXRAY,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BUIZEL,e.FLOATZEL,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.GIBLE,e.GABITE,e.GARCHOMP,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.DRAPION,e.RHYPERIOR,e.LEAFEON,e.GLACEON,e.MAMOSWINE,e.DIALGA,e.PALKIA,e.HEATRAN,e.GIRATINA,e.ARCEUS,e.TEPIG,e.PIGNITE,e.EMBOAR,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.BEARTIC,e.DRUDDIGON,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.COBALION,e.TERRAKION,e.VIRIZION,e.KELDEO,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.AVALUGG,e.XERNEAS,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.GUMSHOOS,e.ROCKRUFF,e.LYCANROC,e.MUDBRAY,e.MUDSDALE,e.STUFFUL,e.BEWEAR,e.TYPE_NULL,e.SILVALLY,e.TURTONATOR,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_BULU,e.SOLGALEO,e.LUNALA,e.YAMPER,e.BOLTUND,e.ZAMAZENTA,e.ZARUDE,e.GLASTRIER,e.WYRDEER,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.FIDOUGH,e.DACHSBUN,e.MASCHIFF,e.MABOSSTIFF,e.GREAVARD,e.HOUNDSTONE,e.FARIGIRAF,e.GREAT_TUSK,e.SCREAM_TAIL,e.IRON_JUGULIS,e.ROARING_MOON,e.KORAIDON,e.WALKING_WAKE,e.OKIDOGI,e.ARCHALUDON,e.GOUGING_FIRE,e.RAGING_BOLT,e.TERAPAGOS,e.ALOLA_RATICATE,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_PERSIAN,e.ALOLA_GOLEM,[e.URSHIFU,"single-strike"],e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.BLOODMOON_URSALUNA],[t.FLAMETHROWER]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.GROWLITHE,e.ARCANINE,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.GRIMER,e.MUK,e.CUBONE,e.MAROWAK,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MAGMAR,e.TAUROS,e.GYARADOS,e.FLAREON,e.AERODACTYL,e.SNORLAX,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.SENTRET,e.FURRET,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.SLOWKING,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.SLUGMA,e.MAGCARGO,e.REMORAID,e.OCTILLERY,e.HOUNDOUR,e.HOUNDOOM,e.MAGBY,e.BLISSEY,e.ENTEI,e.TYRANITAR,e.HO_OH,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAWILE,e.AGGRON,e.ELECTRIKE,e.MANECTRIC,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.FLYGON,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.SOLROCK,e.CASTFORM,e.KECLEON,e.ABSOL,e.BAGON,e.SHELGON,e.SALAMENCE,e.GROUDON,e.RAYQUAZA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.STUNKY,e.SKUNTANK,e.HAPPINY,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.ARCEUS,e.VICTINI,e.TEPIG,e.PIGNITE,e.EMBOAR,e.WATCHOG,e.PANSEAR,e.SIMISEAR,e.AUDINO,e.DARUMAKA,e.DARMANITAN,e.ZOROARK,e.EELEKTROSS,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.DRUDDIGON,e.HEATMOR,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.RESHIRAM,e.GENESECT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.GOODRA,e.PUMPKABOO,e.GOURGEIST,e.NOIVERN,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.SALANDIT,e.SALAZZLE,e.SILVALLY,e.TURTONATOR,e.DRAMPA,e.KOMMO_O,e.SOLGALEO,e.CELESTEELA,e.GUZZLORD,e.NAGANADEL,e.BLACEPHALON,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.CARKOL,e.COALOSSAL,e.CENTISKORCH,e.DRACOZOLT,e.DRAKLOAK,e.DRAGAPULT,e.ETERNATUS,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.SCOVILLAIN,e.DUDUNSPARCE,e.SCREAM_TAIL,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.CHI_YU,e.ROARING_MOON,e.KORAIDON,e.WALKING_WAKE,e.GOUGING_FIRE,e.TERAPAGOS,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_SLOWKING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_ZOROARK,e.HISUI_GOODRA,[e.PALDEA_TAUROS,"blaze"]],[t.HYDRO_PUMP]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SHELLDER,e.CLOYSTER,e.KINGLER,e.LICKITUNG,e.RHYDON,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MAGIKARP,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.SNORLAX,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.CHINCHOU,e.LANTURN,e.MARILL,e.AZUMARILL,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.QWILFISH,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.MANTINE,e.KINGDRA,e.SUICUNE,e.TYRANITAR,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.LOMBRE,e.LUDICOLO,e.WINGULL,e.PELIPPER,e.SURSKIT,e.MASQUERAIN,e.EXPLOUD,e.AGGRON,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.MILOTIC,e.CASTFORM,e.WALREIN,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.KYOGRE,e.RAYQUAZA,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.MUNCHLAX,e.FINNEON,e.LUMINEON,e.MANTYKE,e.LICKILICKY,e.RHYPERIOR,e.PALKIA,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PANPOUR,e.SIMIPOUR,e.DRILBUR,e.EXCADRILL,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.BASCULIN,e.TIRTOUGA,e.CARRACOSTA,e.SWANNA,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.HYDREIGON,e.KELDEO,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.GOODRA,e.AVALUGG,e.VOLCANION,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.TAPU_FINI,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.CHEWTLE,e.DREDNAW,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.GRAPPLOCT,e.CURSOLA,e.PINCURCHIN,e.EISCUE,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DRAKLOAK,e.DRAGAPULT,e.BASCULEGION,e.OVERQWIL,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.WIGLETT,e.WUGTRIO,e.FINIZEN,e.PALAFIN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.CLODSIRE,e.IRON_BUNDLE,e.IRON_JUGULIS,e.ROARING_MOON,e.WALKING_WAKE,e.HYDRAPPLE,[e.ROTOM,"wash"],e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.HISUI_QWILFISH,e.HISUI_SAMUROTT,e.HISUI_GOODRA,[e.PALDEA_TAUROS,"aqua"],e.PALDEA_WOOPER],[t.SURF]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PIKACHU,e.RAICHU,e.NIDOQUEEN,e.NIDOKING,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.KRABBY,e.KINGLER,e.LICKITUNG,e.RHYDON,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.TAUROS,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.SNORLAX,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.CHINCHOU,e.LANTURN,e.PICHU,e.MARILL,e.AZUMARILL,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.QWILFISH,e.SNEASEL,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.MANTINE,e.KINGDRA,e.MILTANK,e.SUICUNE,e.TYRANITAR,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.WINGULL,e.PELIPPER,e.SURSKIT,e.MASQUERAIN,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.AGGRON,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.ZANGOOSE,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.FEEBAS,e.MILOTIC,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.LATIAS,e.LATIOS,e.KYOGRE,e.RAYQUAZA,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIBAREL,e.RAMPARDOS,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.GARCHOMP,e.MUNCHLAX,e.FINNEON,e.LUMINEON,e.MANTYKE,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.PALKIA,e.PHIONE,e.MANAPHY,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.HERDIER,e.STOUTLAND,e.PANPOUR,e.SIMIPOUR,e.AUDINO,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.BASCULIN,e.TIRTOUGA,e.CARRACOSTA,e.DUCKLETT,e.SWANNA,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.STUNFISK,e.DRUDDIGON,e.BOUFFALANT,e.HYDREIGON,e.KELDEO,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.SWIRLIX,e.SLURPUFF,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.GOODRA,e.BERGMITE,e.AVALUGG,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.WIMPOD,e.GOLISOPOD,e.SILVALLY,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.TAPU_FINI,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.CHEWTLE,e.DREDNAW,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.GRAPPLOCT,e.OBSTAGOON,e.CURSOLA,e.PINCURCHIN,e.EISCUE,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DRAKLOAK,e.DRAGAPULT,e.BASCULEGION,e.OVERQWIL,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.WIGLETT,e.WUGTRIO,e.FINIZEN,e.PALAFIN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.CLODSIRE,e.WALKING_WAKE,e.TERAPAGOS,e.ALOLA_RAICHU,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_STUNFISK,e.HISUI_QWILFISH,e.HISUI_SAMUROTT,e.HISUI_GOODRA,[e.PALDEA_TAUROS,"combat","aqua"],e.PALDEA_WOOPER],[t.ICE_BEAM]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.RATTATA,e.RATICATE,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.JYNX,e.TAUROS,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.SNORLAX,e.ARTICUNO,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.CHINCHOU,e.LANTURN,e.MARILL,e.AZUMARILL,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.DUNSPARCE,e.QWILFISH,e.SNEASEL,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.KINGDRA,e.PORYGON2,e.SMOOCHUM,e.MILTANK,e.BLISSEY,e.SUICUNE,e.TYRANITAR,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.WINGULL,e.PELIPPER,e.SURSKIT,e.MASQUERAIN,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.AZURILL,e.SKITTY,e.DELCATTY,e.MAWILE,e.AGGRON,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.LUNATONE,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.DUSKULL,e.DUSCLOPS,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.REGICE,e.LATIAS,e.LATIOS,e.KYOGRE,e.RAYQUAZA,e.DEOXYS,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIDOOF,e.BIBAREL,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.BUNEARY,e.LOPUNNY,e.MUNCHLAX,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.GLACEON,e.MAMOSWINE,e.PORYGON_Z,e.DUSKNOIR,e.FROSLASS,e.MESPRIT,e.DIALGA,e.PALKIA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PANPOUR,e.SIMIPOUR,e.AUDINO,e.BASCULIN,e.SIGILYPH,e.TIRTOUGA,e.CARRACOSTA,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.GOLETT,e.GOLURK,e.KYUREM,e.GENESECT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BINACLE,e.BARBARACLE,e.CLAUNCHER,e.CLAWITZER,e.AMAURA,e.AURORUS,e.SLIGGOO,e.GOODRA,e.BERGMITE,e.AVALUGG,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.CRABOMINABLE,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.GOLISOPOD,e.SILVALLY,e.BRUXISH,e.DRAMPA,e.TAPU_FINI,e.LUNALA,e.PHEROMOSA,e.MAGEARNA,e.MELMETAL,e.INTELEON,e.DREDNAW,e.CRAMORANT,e.BARRASKEWDA,e.OBSTAGOON,e.CURSOLA,e.MR_RIME,e.FROSMOTH,e.EISCUE,e.ARCTOZOLT,e.ARCTOVISH,e.GLASTRIER,e.BASCULEGION,e.OVERQWIL,e.WIGLETT,e.WUGTRIO,e.FINIZEN,e.PALAFIN,e.CETODDLE,e.CETITAN,e.VELUZA,e.DUDUNSPARCE,e.SCREAM_TAIL,e.IRON_BUNDLE,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.TERAPAGOS,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MAROWAK,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,[e.CALYREX,"ice"],e.HISUI_QWILFISH,e.HISUI_SAMUROTT,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG],[t.BLIZZARD]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.RATTATA,e.RATICATE,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.JYNX,e.TAUROS,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.SNORLAX,e.ARTICUNO,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.CHINCHOU,e.LANTURN,e.MARILL,e.AZUMARILL,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.DUNSPARCE,e.QWILFISH,e.SNEASEL,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.KINGDRA,e.PORYGON2,e.SMOOCHUM,e.MILTANK,e.BLISSEY,e.SUICUNE,e.TYRANITAR,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.WINGULL,e.PELIPPER,e.SURSKIT,e.MASQUERAIN,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.AZURILL,e.SKITTY,e.DELCATTY,e.AGGRON,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.ZANGOOSE,e.LUNATONE,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.DUSKULL,e.DUSCLOPS,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.REGICE,e.KYOGRE,e.RAYQUAZA,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIDOOF,e.BIBAREL,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.LOPUNNY,e.MUNCHLAX,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.GLACEON,e.MAMOSWINE,e.PORYGON_Z,e.DUSKNOIR,e.FROSLASS,e.MESPRIT,e.DIALGA,e.PALKIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PANPOUR,e.SIMIPOUR,e.AUDINO,e.BASCULIN,e.TIRTOUGA,e.CARRACOSTA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.KYUREM,e.GENESECT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BINACLE,e.BARBARACLE,e.CLAUNCHER,e.CLAWITZER,e.AMAURA,e.AURORUS,e.SLIGGOO,e.GOODRA,e.BERGMITE,e.AVALUGG,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.CRABOMINABLE,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.GOLISOPOD,e.BRUXISH,e.DRAMPA,e.TAPU_FINI,e.LUNALA,e.PHEROMOSA,e.INTELEON,e.DREDNAW,e.CRAMORANT,e.BARRASKEWDA,e.OBSTAGOON,e.CURSOLA,e.MR_RIME,e.FROSMOTH,e.EISCUE,e.ARCTOZOLT,e.ARCTOVISH,e.GLASTRIER,e.BASCULEGION,e.OVERQWIL,e.WIGLETT,e.WUGTRIO,e.FINIZEN,e.PALAFIN,e.CETODDLE,e.CETITAN,e.VELUZA,e.DUDUNSPARCE,e.SCREAM_TAIL,e.IRON_BUNDLE,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.CHIEN_PAO,[e.ROTOM,"frost"],e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MAROWAK,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,[e.CALYREX,"ice"],e.HISUI_QWILFISH,e.HISUI_SAMUROTT,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG],[t.PSYBEAM]:[e.BUTTERFREE,e.CLEFAIRY,e.CLEFABLE,e.PARAS,e.VENONAT,e.VENOMOTH,e.PSYDUCK,e.GOLDUCK,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.DROWZEE,e.HYPNO,e.EXEGGCUTE,e.KOFFING,e.WEEZING,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.PORYGON,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.SPINARAK,e.CHINCHOU,e.CLEFFA,e.ESPEON,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.REMORAID,e.OCTILLERY,e.MANTINE,e.PORYGON2,e.STANTLER,e.DUSTOX,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.SPOINK,e.GRUMPIG,e.SPINDA,e.BALTOY,e.CLAYDOL,e.KECLEON,e.SHUPPET,e.BANETTE,e.CHIMECHO,e.WORMADAM,e.MOTHIM,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.BRONZONG,e.MIME_JR,e.SPIRITOMB,e.FINNEON,e.LUMINEON,e.PORYGON_Z,e.GALLADE,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.MUNNA,e.MUSHARNA,e.SIGILYPH,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.ELGYEM,e.BEHEEYEM,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.VIVILLON,e.ESPURR,e.MEOWSTIC,e.INKAY,e.MALAMAR,e.HOOPA,e.ORANGURU,e.TAPU_LELE,e.MAGEARNA,e.ORBEETLE,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.MR_RIME,e.INDEEDEE,e.CALYREX,e.WYRDEER,e.ARMAROUGE,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.FARIGIRAF,e.SCREAM_TAIL,e.FLUTTER_MANE,e.IRON_VALIANT,e.MUNKIDORI,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_SLOWKING,e.HISUI_BRAVIARY],[t.HYPER_BEAM]:[e.VENUSAUR,e.CHARIZARD,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEOT,e.RATICATE,e.FEAROW,e.ARBOK,e.RAICHU,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.CLEFABLE,e.NINETALES,e.WIGGLYTUFF,e.GOLBAT,e.VILEPLUME,e.PARASECT,e.VENOMOTH,e.DUGTRIO,e.PERSIAN,e.GOLDUCK,e.PRIMEAPE,e.ARCANINE,e.POLIWRATH,e.ALAKAZAM,e.MACHAMP,e.VICTREEBEL,e.TENTACRUEL,e.GOLEM,e.RAPIDASH,e.SLOWBRO,e.MAGNETON,e.DODRIO,e.DEWGONG,e.MUK,e.CLOYSTER,e.GENGAR,e.HYPNO,e.KINGLER,e.ELECTRODE,e.EXEGGUTOR,e.MAROWAK,e.LICKITUNG,e.WEEZING,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.SEADRA,e.SEAKING,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMASTAR,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.MEGANIUM,e.TYPHLOSION,e.FERALIGATR,e.FURRET,e.NOCTOWL,e.LEDIAN,e.ARIADOS,e.CROBAT,e.LANTURN,e.TOGETIC,e.XATU,e.AMPHAROS,e.BELLOSSOM,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.JUMPLUFF,e.SUNFLORA,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.FORRETRESS,e.DUNSPARCE,e.STEELIX,e.GRANBULL,e.SCIZOR,e.HERACROSS,e.URSARING,e.MAGCARGO,e.PILOSWINE,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.HOUNDOOM,e.KINGDRA,e.DONPHAN,e.PORYGON2,e.STANTLER,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.SCEPTILE,e.BLAZIKEN,e.SWAMPERT,e.MIGHTYENA,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.SWELLOW,e.PELIPPER,e.KIRLIA,e.GARDEVOIR,e.MASQUERAIN,e.BRELOOM,e.SLAKING,e.NINJASK,e.SHEDINJA,e.EXPLOUD,e.HARIYAMA,e.DELCATTY,e.SABLEYE,e.MAWILE,e.AGGRON,e.MEDICHAM,e.MANECTRIC,e.SWALOT,e.SHARPEDO,e.WAILORD,e.CAMERUPT,e.TORKOAL,e.GRUMPIG,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACTURNE,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.WHISCASH,e.CRAWDAUNT,e.CLAYDOL,e.CRADILY,e.ARMALDO,e.MILOTIC,e.BANETTE,e.DUSCLOPS,e.TROPIUS,e.ABSOL,e.GLALIE,e.WALREIN,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TORTERRA,e.INFERNAPE,e.EMPOLEON,e.STARAPTOR,e.BIBAREL,e.KRICKETUNE,e.LUXRAY,e.ROSERADE,e.RAMPARDOS,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.FLOATZEL,e.CHERRIM,e.GASTRODON,e.AMBIPOM,e.DRIFBLIM,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.PURUGLY,e.SKUNTANK,e.BRONZONG,e.SPIRITOMB,e.GARCHOMP,e.LUCARIO,e.HIPPOWDON,e.DRAPION,e.TOXICROAK,e.CARNIVINE,e.LUMINEON,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SERPERIOR,e.EMBOAR,e.SAMUROTT,e.WATCHOG,e.STOUTLAND,e.LIEPARD,e.SIMISAGE,e.SIMISEAR,e.SIMIPOUR,e.MUSHARNA,e.UNFEZANT,e.ZEBSTRIKA,e.GIGALITH,e.SWOOBAT,e.EXCADRILL,e.AUDINO,e.CONKELDURR,e.SEISMITOAD,e.LEAVANNY,e.SCOLIPEDE,e.WHIMSICOTT,e.LILLIGANT,e.BASCULIN,e.KROOKODILE,e.DARMANITAN,e.CRUSTLE,e.SCRAFTY,e.SIGILYPH,e.COFAGRIGUS,e.CARRACOSTA,e.ARCHEOPS,e.GARBODOR,e.ZOROARK,e.CINCCINO,e.GOTHITELLE,e.REUNICLUS,e.SWANNA,e.VANILLUXE,e.SAWSBUCK,e.ESCAVALIER,e.AMOONGUSS,e.JELLICENT,e.ALOMOMOLA,e.GALVANTULA,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTROSS,e.BEHEEYEM,e.CHANDELURE,e.HAXORUS,e.BEARTIC,e.CRYOGONAL,e.ACCELGOR,e.MIENSHAO,e.DRUDDIGON,e.GOLURK,e.BISHARP,e.BRAVIARY,e.MANDIBUZZ,e.HYDREIGON,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESNAUGHT,e.DELPHOX,e.GRENINJA,e.DIGGERSBY,e.TALONFLAME,e.VIVILLON,e.PYROAR,e.FLORGES,e.GOGOAT,e.PANGORO,e.MEOWSTIC,e.AEGISLASH,e.AROMATISSE,e.SLURPUFF,e.MALAMAR,e.BARBARACLE,e.DRAGALGE,e.CLAWITZER,e.HELIOLISK,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOODRA,e.KLEFKI,e.TREVENANT,e.GOURGEIST,e.AVALUGG,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.DECIDUEYE,e.INCINEROAR,e.PRIMARINA,e.GUMSHOOS,e.VIKAVOLT,e.CRABOMINABLE,e.RIBOMBEE,e.TOXAPEX,e.MUDSDALE,e.LURANTIS,e.SHIINOTIC,e.SALAZZLE,e.BEWEAR,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.GOLISOPOD,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.NAGANADEL,e.BLACEPHALON,e.ZERAORA,e.MELMETAL,e.RILLABOOM,e.CINDERACE,e.INTELEON,e.GREEDENT,e.CORVIKNIGHT,e.ORBEETLE,e.THIEVUL,e.ELDEGOSS,e.DUBWOOL,e.DREDNAW,e.BOLTUND,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SANDACONDA,e.CRAMORANT,e.BARRASKEWDA,e.TOXTRICITY,e.CENTISKORCH,e.GRAPPLOCT,e.POLTEAGEIST,e.HATTERENE,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.MR_RIME,e.RUNERIGUS,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.MEOWSCARADA,e.SKELEDIRGE,e.QUAQUAVAL,e.OINKOLOGNE,e.PAWMOT,e.MAUSHOLD,e.DACHSBUN,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLSTACK,e.GARGANACL,e.BELLIBOLT,e.KILOWATTREL,e.MABOSSTIFF,e.BRAMBLEGHAST,e.TOEDSCRUEL,e.KLAWF,e.SCOVILLAIN,e.RABSCA,e.ESPATHRA,e.WUGTRIO,e.BOMBIRDIER,e.PALAFIN,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMORA,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.BAXCALIBUR,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.ARCHALUDON,e.IRON_CROWN,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSLASH,e.ALOLA_NINETALES,e.ALOLA_DUGTRIO,e.ALOLA_PERSIAN,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_RAPIDASH,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_LINOONE,e.GALAR_DARMANITAN,e.HISUI_ARCANINE,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.BLOODMOON_URSALUNA],[t.LOW_KICK]:[e.SANDSHREW,e.SANDSLASH,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.PONYTA,e.RAPIDASH,e.DODUO,e.DODRIO,e.DROWZEE,e.HYPNO,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.KANGASKHAN,e.ELECTABUZZ,e.MAGMAR,e.KABUTOPS,e.DRAGONITE,e.MEWTWO,e.MEW,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.FLAAFFY,e.AMPHAROS,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.GIRAFARIG,e.SNUBBULL,e.GRANBULL,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.TYROGUE,e.HITMONTOP,e.ELEKID,e.MAGBY,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.NUZLEAF,e.SHIFTRY,e.BRELOOM,e.VIGOROTH,e.SLAKING,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.GRUMPIG,e.SPINDA,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.ARMALDO,e.KECLEON,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.BONSLY,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.ABOMASNOW,e.WEAVILE,e.ELECTIVIRE,e.MAGMORTAR,e.GALLADE,e.PIGNITE,e.EMBOAR,e.PATRAT,e.WATCHOG,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.BLITZLE,e.ZEBSTRIKA,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.LEAVANNY,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.CARRACOSTA,e.ZOROARK,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.HEATMOR,e.KELDEO,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.BRAIXEN,e.DELPHOX,e.FROGADIER,e.GRENINJA,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.BARBARACLE,e.HELIOLISK,e.HAWLUCHA,e.DECIDUEYE,e.INCINEROAR,e.MUDBRAY,e.MUDSDALE,e.BEWEAR,e.TSAREENA,e.PASSIMIAN,e.KOMALA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.PHEROMOSA,e.MARSHADOW,e.ZERAORA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.STONJOURNER,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.KUBFU,e.URSHIFU,e.ZARUDE,e.URSALUNA,e.SNEASLER,e.FLORAGATO,e.MEOWSCARADA,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.SPIDOPS,e.LOKIX,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.GRAFAIAI,e.ESPATHRA,e.FLAMIGO,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.KINGAMBIT,e.SLITHER_WING,e.IRON_HANDS,e.IRON_THORNS,e.GHOLDENGO,e.IRON_VALIANT,e.KORAIDON,e.WALKING_WAKE,e.OKIDOGI,e.OGERPON,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_ZAPDOS,e.HISUI_TYPHLOSION,e.HISUI_SNEASEL,e.HISUI_LILLIGANT,e.HISUI_ZOROARK,e.HISUI_DECIDUEYE,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.COUNTER]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.RATTATA,e.RATICATE,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PARAS,e.PARASECT,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWPOKE,e.SLOWBRO,e.GENGAR,e.DROWZEE,e.HYPNO,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.SNORLAX,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.LEDYBA,e.LEDIAN,e.TOGEPI,e.TOGETIC,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.SUDOWOODO,e.WOOPER,e.QUAGSIRE,e.WOBBUFFET,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.SNUBBULL,e.GRANBULL,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.DELIBIRD,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.MILTANK,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.TAILLOW,e.SWELLOW,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MAWILE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.GULPIN,e.SWALOT,e.GRUMPIG,e.SPINDA,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.CORPHISH,e.CRAWDAUNT,e.KECLEON,e.DUSKULL,e.DUSCLOPS,e.ABSOL,e.REGIROCK,e.REGICE,e.REGISTEEL,e.GROUDON,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.SHIELDON,e.BASTIODON,e.RIOLU,e.LUCARIO,e.SHELLOS,e.GASTRODON,e.CROAGUNK,e.TOXICROAK,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SAWK,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.ZORUA,e.ZOROARK,e.KARRABLAST,e.ESCAVALIER,e.ACCELGOR,e.AXEW,e.FRAXURE,e.HAXORUS,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.GOOMY,e.SLIGGOO,e.GOODRA,e.LYCANROC,e.MUDBRAY,e.MUDSDALE,e.PASSIMIAN,e.PYUKUMUKU,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.BUZZWOLE,e.MARSHADOW,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SKWOVET,e.GREEDENT,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.FALINKS,e.KUBFU,e.URSHIFU,e.QUAQUAVAL,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.FINIZEN,e.PALAFIN,e.TATSUGIRI,e.KORAIDON,e.OKIDOGI,e.OGERPON,e.IRON_BOULDER],[t.STRENGTH]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.RATICATE,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWHIRL,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.GENGAR,e.ONIX,e.KRABBY,e.KINGLER,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.JOLTEON,e.FLAREON,e.AERODACTYL,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.BAYLEEF,e.MEGANIUM,e.QUILAVA,e.TYPHLOSION,e.CROCONAW,e.FERALIGATR,e.FURRET,e.LEDIAN,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.QUAGSIRE,e.SLOWKING,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.TYROGUE,e.HITMONTOP,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.TYRANITAR,e.LUGIA,e.HO_OH,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.MIGHTYENA,e.LINOONE,e.LOMBRE,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.DELCATTY,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.GULPIN,e.SWALOT,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.CLAYDOL,e.CRADILY,e.ARMALDO,e.KECLEON,e.DUSCLOPS,e.TROPIUS,e.ABSOL,e.SPHEAL,e.SEALEO,e.WALREIN,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PRINPLUP,e.EMPOLEON,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BUIZEL,e.FLOATZEL,e.GASTRODON,e.AMBIPOM,e.LOPUNNY,e.SKUNTANK,e.BRONZONG,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.DARKRAI,e.ARCEUS,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.SAMUROTT,e.WATCHOG,e.HERDIER,e.STOUTLAND,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DRILBUR,e.EXCADRILL,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.SCOLIPEDE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.TIRTOUGA,e.CARRACOSTA,e.REUNICLUS,e.FERROTHORN,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.BINACLE,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.HAWLUCHA,e.GOODRA,e.PHANTUMP,e.TREVENANT,e.BERGMITE,e.AVALUGG,e.ZYGARDE,e.VOLCANION,e.MUDBRAY,e.MUDSDALE,e.STUFFUL,e.BEWEAR,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.OBSTAGOON,e.CUFANT,e.COPPERAJAH,e.URSALUNA,e.ANNIHILAPE,e.FARIGIRAF,e.DUDUNSPARCE,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_SAMUROTT,e.HISUI_BRAVIARY,e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.BLOODMOON_URSALUNA],[t.SOLAR_BEAM]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARIZARD,e.BUTTERFREE,e.BEEDRILL,e.CLEFAIRY,e.CLEFABLE,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.ARCANINE,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.PONYTA,e.RAPIDASH,e.EXEGGCUTE,e.EXEGGUTOR,e.LICKITUNG,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.MR_MIME,e.TAUROS,e.LAPRAS,e.PORYGON,e.SNORLAX,e.MOLTRES,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.TYPHLOSION,e.SENTRET,e.FURRET,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.MAGCARGO,e.HOUNDOUR,e.HOUNDOOM,e.PORYGON2,e.STANTLER,e.MILTANK,e.BLISSEY,e.ENTEI,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.BLAZIKEN,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.SKITTY,e.DELCATTY,e.MAWILE,e.AGGRON,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CAMERUPT,e.TORKOAL,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.CASTFORM,e.KECLEON,e.TROPIUS,e.LATIAS,e.LATIOS,e.GROUDON,e.RAYQUAZA,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.INFERNAPE,e.BUDEW,e.ROSERADE,e.WORMADAM,e.MOTHIM,e.CHERUBI,e.CHERRIM,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.HAPPINY,e.MUNCHLAX,e.CARNIVINE,e.SNOVER,e.ABOMASNOW,e.LICKILICKY,e.TANGROWTH,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.PORYGON_Z,e.UXIE,e.HEATRAN,e.CRESSELIA,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.GIGALITH,e.AUDINO,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SIGILYPH,e.GARBODOR,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.FOONGUS,e.AMOONGUSS,e.FERROSEED,e.FERROTHORN,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.CRYOGONAL,e.GOLURK,e.HEATMOR,e.LARVESTA,e.VOLCARONA,e.VIRIZION,e.RESHIRAM,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.HELIOLISK,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.NOIBAT,e.NOIVERN,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.VIKAVOLT,e.RIBOMBEE,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.MINIOR,e.TURTONATOR,e.DRAMPA,e.DHELMISE,e.TAPU_BULU,e.SOLGALEO,e.LUNALA,e.XURKITREE,e.CELESTEELA,e.NECROZMA,e.MAGEARNA,e.BLACEPHALON,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.DOTTLER,e.ORBEETLE,e.GOSSIFLEUR,e.ELDEGOSS,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.CENTISKORCH,e.MR_RIME,e.ALCREMIE,e.DURALUDON,e.DRAGAPULT,e.ZAMAZENTA,e.ETERNATUS,e.ZARUDE,e.CALYREX,e.WYRDEER,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.SKELEDIRGE,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.ARMAROUGE,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.CAPSAKID,e.SCOVILLAIN,e.GLIMMORA,e.DUDUNSPARCE,e.BRUTE_BONNET,e.IRON_MOTH,e.WO_CHIEN,e.KORAIDON,e.MIRAIDON,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.RAGING_BOLT,e.TERAPAGOS,e.ALOLA_NINETALES,e.ALOLA_EXEGGUTOR,e.ETERNAL_FLOETTE,e.GALAR_MR_MIME,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE],[t.FIRE_SPIN]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.VULPIX,e.NINETALES,e.GROWLITHE,e.ARCANINE,e.PONYTA,e.RAPIDASH,e.MAGMAR,e.FLAREON,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.SLUGMA,e.MAGCARGO,e.HOUNDOUR,e.HOUNDOOM,e.MAGBY,e.ENTEI,e.HO_OH,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.FLYGON,e.ALTARIA,e.SOLROCK,e.BAGON,e.SHELGON,e.SALAMENCE,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.SKUNTANK,e.MAGMORTAR,e.HEATRAN,e.VICTINI,e.PANSEAR,e.SIMISEAR,e.DARUMAKA,e.DARMANITAN,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.HEATMOR,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.TURTONATOR,e.SOLGALEO,e.BLACEPHALON,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.CARKOL,e.COALOSSAL,e.SIZZLIPEDE,e.CENTISKORCH,e.DRACOZOLT,e.ETERNATUS,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.IRON_MOTH,e.CHI_YU,e.ROARING_MOON,e.KORAIDON,e.GOUGING_FIRE,e.ALOLA_MAROWAK,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,[e.PALDEA_TAUROS,"blaze"]],[t.THUNDERBOLT]:[e.RATTATA,e.RATICATE,e.PIKACHU,e.RAICHU,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.MAGNEMITE,e.MAGNETON,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.VOLTORB,e.ELECTRODE,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.STARYU,e.STARMIE,e.MR_MIME,e.ELECTABUZZ,e.TAUROS,e.GYARADOS,e.LAPRAS,e.JOLTEON,e.PORYGON,e.SNORLAX,e.ZAPDOS,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.SENTRET,e.FURRET,e.CHINCHOU,e.LANTURN,e.PICHU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.AIPOM,e.MISDREAVUS,e.GIRAFARIG,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.PORYGON2,e.STANTLER,e.ELEKID,e.MILTANK,e.BLISSEY,e.RAIKOU,e.TYRANITAR,e.LUGIA,e.HO_OH,e.ZIGZAGOON,e.LINOONE,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.AGGRON,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ZANGOOSE,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.ABSOL,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.BIDOOF,e.BIBAREL,e.SHINX,e.LUXIO,e.LUXRAY,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.PACHIRISU,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.GLAMEOW,e.PURUGLY,e.MIME_JR,e.MUNCHLAX,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.MAGMORTAR,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.DARKRAI,e.ARCEUS,e.VICTINI,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.BLITZLE,e.ZEBSTRIKA,e.AUDINO,e.GARBODOR,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.EMOLGA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.STUNFISK,e.GOLURK,e.THUNDURUS,e.ZEKROM,e.MELOETTA,e.GENESECT,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.SKRELP,e.DRAGALGE,e.HELIOPTILE,e.HELIOLISK,e.AMAURA,e.AURORUS,e.DEDENNE,e.GOOMY,e.SLIGGOO,e.GOODRA,e.XERNEAS,e.HOOPA,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.ORANGURU,e.SILVALLY,e.TOGEDEMARU,e.MIMIKYU,e.DRAMPA,e.TAPU_KOKO,e.TAPU_LELE,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.XURKITREE,e.MAGEARNA,e.NAGANADEL,e.ZERAORA,e.MELTAN,e.MELMETAL,e.YAMPER,e.BOLTUND,e.TOXTRICITY,e.OBSTAGOON,e.PERRSERKER,e.MR_RIME,e.PINCURCHIN,e.MORPEKO,e.DRACOZOLT,e.ARCTOZOLT,e.DURALUDON,e.DRAKLOAK,e.DRAGAPULT,e.REGIELEKI,e.WYRDEER,e.PAWMI,e.PAWMO,e.PAWMOT,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.CYCLIZAR,e.ANNIHILAPE,e.FARIGIRAF,e.DUDUNSPARCE,e.SCREAM_TAIL,e.FLUTTER_MANE,e.SANDY_SHOCKS,e.IRON_HANDS,e.IRON_THORNS,e.GHOLDENGO,e.IRON_VALIANT,e.MIRAIDON,e.ARCHALUDON,e.RAGING_BOLT,e.TERAPAGOS,e.ALOLA_RAICHU,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_SLIGGOO,e.HISUI_GOODRA],[t.THUNDER_WAVE]:[e.RATTATA,e.RATICATE,e.PIKACHU,e.RAICHU,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.GENGAR,e.DROWZEE,e.HYPNO,e.VOLTORB,e.ELECTRODE,e.CHANSEY,e.STARYU,e.STARMIE,e.MR_MIME,e.ELECTABUZZ,e.GYARADOS,e.JOLTEON,e.PORYGON,e.ZAPDOS,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.AIPOM,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.FORRETRESS,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.REMORAID,e.OCTILLERY,e.PORYGON2,e.STANTLER,e.ELEKID,e.MILTANK,e.BLISSEY,e.RAIKOU,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.ZIGZAGOON,e.LINOONE,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.VIGOROTH,e.SLAKING,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.AGGRON,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.GULPIN,e.SWALOT,e.SPOINK,e.GRUMPIG,e.ZANGOOSE,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.CHIMECHO,e.ABSOL,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.BIDOOF,e.BIBAREL,e.SHINX,e.LUXIO,e.LUXRAY,e.PACHIRISU,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.CHINGLING,e.MIME_JR,e.HAPPINY,e.MAGNEZONE,e.ELECTIVIRE,e.TOGEKISS,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.DARKRAI,e.ARCEUS,e.VICTINI,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.MUNNA,e.MUSHARNA,e.BLITZLE,e.ZEBSTRIKA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.SIGILYPH,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.TYNAMO,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.STUNFISK,e.PAWNIARD,e.BISHARP,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.COBALION,e.THUNDURUS,e.ZEKROM,e.MELOETTA,e.GENESECT,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HELIOPTILE,e.HELIOLISK,e.AMAURA,e.AURORUS,e.DEDENNE,e.KLEFKI,e.XERNEAS,e.HOOPA,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.TYPE_NULL,e.SILVALLY,e.TOGEDEMARU,e.MIMIKYU,e.DRAMPA,e.TAPU_KOKO,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.XURKITREE,e.NECROZMA,e.MAGEARNA,e.ZERAORA,e.MELTAN,e.MELMETAL,e.WOOLOO,e.DUBWOOL,e.YAMPER,e.BOLTUND,e.TOXTRICITY,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.MR_RIME,e.PINCURCHIN,e.MORPEKO,e.DRACOZOLT,e.ARCTOZOLT,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.REGIELEKI,e.WYRDEER,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.FARIGIRAF,e.KINGAMBIT,e.SCREAM_TAIL,e.FLUTTER_MANE,e.SANDY_SHOCKS,e.IRON_THORNS,e.GHOLDENGO,e.IRON_VALIANT,e.MIRAIDON,e.ARCHALUDON,e.RAGING_BOLT,e.ALOLA_RAICHU,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_STUNFISK,e.HISUI_VOLTORB,e.HISUI_ELECTRODE],[t.THUNDER]:[e.RATTATA,e.RATICATE,e.PIKACHU,e.RAICHU,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.MAGNEMITE,e.MAGNETON,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.VOLTORB,e.ELECTRODE,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.STARYU,e.STARMIE,e.MR_MIME,e.ELECTABUZZ,e.TAUROS,e.GYARADOS,e.LAPRAS,e.JOLTEON,e.PORYGON,e.SNORLAX,e.ZAPDOS,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.SENTRET,e.FURRET,e.CHINCHOU,e.LANTURN,e.PICHU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.AIPOM,e.MISDREAVUS,e.GIRAFARIG,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.PORYGON2,e.STANTLER,e.ELEKID,e.MILTANK,e.BLISSEY,e.RAIKOU,e.TYRANITAR,e.LUGIA,e.HO_OH,e.ZIGZAGOON,e.LINOONE,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.AGGRON,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ZANGOOSE,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.ABSOL,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.BIDOOF,e.BIBAREL,e.SHINX,e.LUXIO,e.LUXRAY,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.PACHIRISU,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.LOPUNNY,e.MISMAGIUS,e.GLAMEOW,e.PURUGLY,e.MIME_JR,e.MUNCHLAX,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.PORYGON_Z,e.PROBOPASS,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.DARKRAI,e.ARCEUS,e.VICTINI,e.WATCHOG,e.STOUTLAND,e.BLITZLE,e.ZEBSTRIKA,e.AUDINO,e.CINCCINO,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.EMOLGA,e.GALVANTULA,e.FERROTHORN,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.STUNFISK,e.THUNDURUS,e.ZEKROM,e.MELOETTA,e.GENESECT,e.AROMATISSE,e.SLURPUFF,e.DRAGALGE,e.HELIOPTILE,e.HELIOLISK,e.AURORUS,e.DEDENNE,e.SLIGGOO,e.GOODRA,e.XERNEAS,e.CHARJABUG,e.VIKAVOLT,e.ORANGURU,e.TOGEDEMARU,e.MIMIKYU,e.DRAMPA,e.TAPU_KOKO,e.TAPU_LELE,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.XURKITREE,e.ZERAORA,e.MELMETAL,e.YAMPER,e.BOLTUND,e.TOXTRICITY,e.OBSTAGOON,e.PERRSERKER,e.MR_RIME,e.PINCURCHIN,e.MORPEKO,e.DRACOZOLT,e.ARCTOZOLT,e.DURALUDON,e.DRAKLOAK,e.DRAGAPULT,e.REGIELEKI,e.WYRDEER,e.PAWMI,e.PAWMO,e.PAWMOT,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.ANNIHILAPE,e.FARIGIRAF,e.DUDUNSPARCE,e.SCREAM_TAIL,e.FLUTTER_MANE,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_HANDS,e.IRON_THORNS,e.GHOLDENGO,e.MIRAIDON,e.ARCHALUDON,e.RAGING_BOLT,e.TERAPAGOS,e.ALOLA_RAICHU,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.MAROWAK,e.GALAR_MEOWTH,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_SLIGGOO,e.HISUI_GOODRA],[t.EARTHQUAKE]:[e.VENUSAUR,e.CHARIZARD,e.BLASTOISE,e.EKANS,e.ARBOK,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.MANKEY,e.PRIMEAPE,e.POLIWHIRL,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWPOKE,e.SLOWBRO,e.ONIX,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.PINSIR,e.TAUROS,e.GYARADOS,e.AERODACTYL,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.MEGANIUM,e.TYPHLOSION,e.FERALIGATR,e.SUDOWOODO,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.SHUCKLE,e.HERACROSS,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.MANTINE,e.PHANPY,e.DONPHAN,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.MILTANK,e.BLISSEY,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.SCEPTILE,e.BLAZIKEN,e.MARSHTOMP,e.SWAMPERT,e.VIGOROTH,e.SLAKING,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.ARON,e.LAIRON,e.AGGRON,e.SWALOT,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.ALTARIA,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.BALTOY,e.CLAYDOL,e.CRADILY,e.ARMALDO,e.DUSCLOPS,e.TROPIUS,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.RELICANTH,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.TORTERRA,e.INFERNAPE,e.EMPOLEON,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.GASTRODON,e.BRONZOR,e.BRONZONG,e.BONSLY,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.MANTYKE,e.ABOMASNOW,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.GLISCOR,e.MAMOSWINE,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.ARCEUS,e.EMBOAR,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DRILBUR,e.EXCADRILL,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.SCOLIPEDE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARMANITAN,e.DWEBBLE,e.CRUSTLE,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.HAXORUS,e.BEARTIC,e.STUNFISK,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.BOUFFALANT,e.HYDREIGON,e.TERRAKION,e.LANDORUS,e.CHESNAUGHT,e.BUNNELBY,e.DIGGERSBY,e.GOGOAT,e.PANGORO,e.BINACLE,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.AURORUS,e.GOODRA,e.TREVENANT,e.AVALUGG,e.ZYGARDE,e.VOLCANION,e.INCINEROAR,e.YUNGOOS,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.WISHIWASHI,e.MUDBRAY,e.MUDSDALE,e.STUFFUL,e.BEWEAR,e.ORANGURU,e.PASSIMIAN,e.SANDYGAST,e.PALOSSAND,e.MINIOR,e.KOMALA,e.TURTONATOR,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.SOLGALEO,e.BUZZWOLE,e.CELESTEELA,e.GUZZLORD,e.NECROZMA,e.STAKATAKA,e.MELMETAL,e.RILLABOOM,e.GREEDENT,e.DREDNAW,e.COALOSSAL,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CURSOLA,e.RUNERIGUS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.DRACOVISH,e.REGIDRAGO,e.WYRDEER,e.URSALUNA,e.SKELEDIRGE,e.NACLI,e.NACLSTACK,e.GARGANACL,e.ORTHWORM,e.CETODDLE,e.CETITAN,e.DONDOZO,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.GREAT_TUSK,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_HANDS,e.IRON_THORNS,e.BAXCALIBUR,e.TING_LU,e.ROARING_MOON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.TERAPAGOS,[e.WORMADAM,"sandy"],e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_TYPHLOSION,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.DIG]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.RATTATA,e.RATICATE,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PARAS,e.PARASECT,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWPOKE,e.SLOWBRO,e.GRIMER,e.MUK,e.ONIX,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.KANGASKHAN,e.PINSIR,e.TAUROS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.KABUTO,e.KABUTOPS,e.SNORLAX,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CLEFFA,e.IGGLYBUFF,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.SLOWKING,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.PHANPY,e.DONPHAN,e.STANTLER,e.HITMONTOP,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.BRELOOM,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.MAKUHITA,e.HARIYAMA,e.SKITTY,e.DELCATTY,e.SABLEYE,e.ARON,e.LAIRON,e.AGGRON,e.NUMEL,e.CAMERUPT,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.CRADILY,e.ANORITH,e.ARMALDO,e.KECLEON,e.REGIROCK,e.GROUDON,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIDOOF,e.BIBAREL,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.GASTRODON,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.GLAMEOW,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.BONSLY,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.HEATRAN,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.SCOLIPEDE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.DEERLING,e.SAWSBUCK,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.HEATMOR,e.DURANT,e.LANDORUS,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.MEOWSTIC,e.BINACLE,e.BARBARACLE,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.PHANTUMP,e.TREVENANT,e.ZYGARDE,e.VOLCANION,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ROCKRUFF,e.LYCANROC,e.SKWOVET,e.GREEDENT,e.NICKIT,e.THIEVUL,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.SILICOBRA,e.SANDACONDA,e.GRAPPLOCT,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.CUFANT,e.COPPERAJAH,e.ZACIAN,e.ZAMAZENTA,e.KUBFU,e.URSHIFU,e.ZARUDE,e.WYRDEER,e.URSALUNA,e.SNEASLER,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.LECHONK,e.OINKOLOGNE,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.NACLI,e.NACLSTACK,e.GARGANACL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.KLAWF,e.RELLOR,e.RABSCA,e.WIGLETT,e.WUGTRIO,e.ORTHWORM,e.GREAVARD,e.HOUNDSTONE,e.ANNIHILAPE,e.CLODSIRE,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.TING_LU,e.ROARING_MOON,e.KORAIDON,e.OKIDOGI,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.TOXIC]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.TOXTRICITY,e.ETERNATUS,e.SNEASLER,e.OVERQWIL,e.BELLIBOLT,e.SHROODLE,e.GRAFAIAI,e.TOEDSCOOL,e.TOEDSCRUEL,e.VAROOM,e.REVAVROOM,e.GLIMMET,e.GLIMMORA,e.CLODSIRE,e.DUDUNSPARCE,e.IRON_MOTH,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.TERAPAGOS,e.PECHARUNT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_SLOWKING,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.PALDEA_WOOPER],[t.PSYCHIC]:[e.BUTTERFREE,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.VENONAT,e.VENOMOTH,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.EXEGGCUTE,e.EXEGGUTOR,e.CHANSEY,e.STARYU,e.STARMIE,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.LAPRAS,e.PORYGON,e.SNORLAX,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.SPINARAK,e.ARIADOS,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.POLITOED,e.YANMA,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.PORYGON2,e.STANTLER,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.BLISSEY,e.LUGIA,e.HO_OH,e.CELEBI,e.BEAUTIFLY,e.DUSTOX,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.SPOINK,e.GRUMPIG,e.SPINDA,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.GOREBYSS,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.WORMADAM,e.MOTHIM,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.HONCHKROW,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.HAPPINY,e.SPIRITOMB,e.MUNCHLAX,e.LUCARIO,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.UXIE,e.MESPRIT,e.AZELF,e.GIRATINA,e.CRESSELIA,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.WHIMSICOTT,e.DARMANITAN,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.GARBODOR,e.ZOROARK,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.GOLETT,e.GOLURK,e.LARVESTA,e.VOLCARONA,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.MELOETTA,e.GENESECT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.VIVILLON,e.FLABEBE,e.FLOETTE,e.FLORGES,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.AURORUS,e.SYLVEON,e.CARBINK,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.DIANCIE,e.HOOPA,e.PRIMARINA,e.CUTIEFLY,e.RIBOMBEE,e.ORANGURU,e.SANDYGAST,e.PALOSSAND,e.MINIOR,e.MIMIKYU,e.BRUXISH,e.TAPU_LELE,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.NECROZMA,e.MAGEARNA,e.BLACEPHALON,e.DOTTLER,e.ORBEETLE,e.THIEVUL,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.CURSOLA,e.MR_RIME,e.RUNERIGUS,e.ALCREMIE,e.INDEEDEE,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.ENAMORUS,e.ARMAROUGE,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.VELUZA,e.FARIGIRAF,e.SCREAM_TAIL,e.IRON_MOTH,e.GHOLDENGO,e.CHI_YU,e.IRON_VALIANT,e.MUNKIDORI,e.IRON_BOULDER,e.IRON_CROWN,e.ALOLA_RAICHU,e.ALOLA_EXEGGUTOR,e.ETERNAL_FLOETTE,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.HISUI_ZOROARK,e.HISUI_BRAVIARY],[t.AGILITY]:[e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.SPEAROW,e.FEAROW,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.VULPIX,e.NINETALES,e.ZUBAT,e.GOLBAT,e.PARAS,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.GROWLITHE,e.ARCANINE,e.PONYTA,e.RAPIDASH,e.FARFETCHD,e.DODUO,e.DODRIO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.HITMONCHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARMIE,e.SCYTHER,e.JOLTEON,e.PORYGON,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.FERALIGATR,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.AIPOM,e.GIRAFARIG,e.DUNSPARCE,e.GLIGAR,e.QWILFISH,e.SCIZOR,e.SNEASEL,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.KINGDRA,e.PORYGON2,e.STANTLER,e.HITMONTOP,e.RAIKOU,e.ENTEI,e.SUICUNE,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.SURSKIT,e.MASQUERAIN,e.NINJASK,e.SHEDINJA,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.CARVANHA,e.SHARPEDO,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.GOREBYSS,e.LUVDISC,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.LUXRAY,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.CHATOT,e.RIOLU,e.LUCARIO,e.SKORUPI,e.DRAPION,e.FINNEON,e.LUMINEON,e.MANTYKE,e.WEAVILE,e.GLISCOR,e.PORYGON_Z,e.GALLADE,e.ARCEUS,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.SEWADDLE,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.BASCULIN,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.ESCAVALIER,e.JOLTIK,e.GALVANTULA,e.ELGYEM,e.BEHEEYEM,e.ACCELGOR,e.MIENFOO,e.MIENSHAO,e.RUFFLET,e.BRAVIARY,e.DURANT,e.TORNADUS,e.THUNDURUS,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.HELIOPTILE,e.HELIOLISK,e.HAWLUCHA,e.DEDENNE,e.NOIBAT,e.NOIVERN,e.VIKAVOLT,e.ORICORIO,e.RIBOMBEE,e.LYCANROC,e.SALANDIT,e.SALAZZLE,e.TOGEDEMARU,e.BRUXISH,e.TAPU_KOKO,e.SOLGALEO,e.LUNALA,e.PHEROMOSA,e.MAGEARNA,e.MARSHADOW,e.ZERAORA,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.INTELEON,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.WOOLOO,e.DUBWOOL,e.BOLTUND,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.HATTERENE,e.FALINKS,e.EISCUE,e.MORPEKO,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.REGIELEKI,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.QUAQUAVAL,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.WATTREL,e.KILOWATTREL,e.FLITTLE,e.ESPATHRA,e.WIGLETT,e.WUGTRIO,e.FINIZEN,e.PALAFIN,e.CYCLIZAR,e.FLAMIGO,e.VELUZA,e.FARIGIRAF,e.DUDUNSPARCE,e.IRON_BUNDLE,e.IRON_MOTH,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.FEZANDIPITI,e.IRON_BOULDER,[e.DEOXYS,"speed"],e.ALOLA_RAICHU,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY],[t.NIGHT_SHADE]:[e.CLEFAIRY,e.CLEFABLE,e.NINETALES,e.VENONAT,e.VENOMOTH,e.KADABRA,e.ALAKAZAM,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.SPINARAK,e.ARIADOS,e.NATU,e.XATU,e.MURKROW,e.MISDREAVUS,e.GARDEVOIR,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.SPOINK,e.GRUMPIG,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.DEOXYS,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.HONCHKROW,e.BRONZONG,e.CHATOT,e.SPIRITOMB,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.DARKRAI,e.YAMASK,e.COFAGRIGUS,e.ZORUA,e.ZOROARK,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.FRILLISH,e.JELLICENT,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.GOLETT,e.GOLURK,e.DELPHOX,e.PHANTUMP,e.TREVENANT,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.SANDYGAST,e.PALOSSAND,e.MIMIKYU,e.LUNALA,e.BLACEPHALON,e.SINISTEA,e.POLTEAGEIST,e.CURSOLA,e.RUNERIGUS,e.DRAKLOAK,e.DRAGAPULT,e.SPECTRIER,e.BASCULEGION,e.SKELEDIRGE,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.BRAMBLIN,e.BRAMBLEGHAST,e.ESPATHRA,e.GREAVARD,e.HOUNDSTONE,e.ANNIHILAPE,e.FARIGIRAF,e.FLUTTER_MANE,e.GIMMIGHOUL,e.GHOLDENGO,e.POLTCHAGEIST,e.SINISTCHA,e.MUNKIDORI,e.PECHARUNT,e.GALAR_CORSOLA,e.GALAR_YAMASK,[e.CALYREX,"shadow"],e.HISUI_TYPHLOSION,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[t.SCREECH]:[e.RATTATA,e.EKANS,e.ARBOK,e.JIGGLYPUFF,e.WIGGLYTUFF,e.GOLBAT,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.TENTACOOL,e.TENTACRUEL,e.MAGNEMITE,e.MAGNETON,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.ONIX,e.VOLTORB,e.ELECTRODE,e.CUBONE,e.MAROWAK,e.LICKITUNG,e.KOFFING,e.WEEZING,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.KABUTO,e.KABUTOPS,e.SNORLAX,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.IGGLYBUFF,e.MAREEP,e.POLITOED,e.AIPOM,e.YANMA,e.UMBREON,e.MURKROW,e.MISDREAVUS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNEASEL,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.ELEKID,e.MAGBY,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.SHIFTRY,e.NINJASK,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.ARON,e.LAIRON,e.AGGRON,e.CARVANHA,e.SHARPEDO,e.VIBRAVA,e.FLYGON,e.SEVIPER,e.ANORITH,e.ARMALDO,e.KECLEON,e.SHUPPET,e.BANETTE,e.HUNTAIL,e.KRICKETUNE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.VESPIQUEN,e.AMBIPOM,e.STUNKY,e.SKUNTANK,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.ELECTIVIRE,e.MAGMORTAR,e.YANMEGA,e.GLISCOR,e.OSHAWOTT,e.PATRAT,e.PURRLOIN,e.LIEPARD,e.BLITZLE,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.MARACTUS,e.GARBODOR,e.KARRABLAST,e.ESCAVALIER,e.JOLTIK,e.GALVANTULA,e.KLINK,e.KLANG,e.KLINKLANG,e.ELGYEM,e.BEHEEYEM,e.PAWNIARD,e.BISHARP,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.GENESECT,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.BINACLE,e.BARBARACLE,e.NOIBAT,e.NOIVERN,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.WIMPOD,e.GOLISOPOD,e.PYUKUMUKU,e.MIMIKYU,e.BRUXISH,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.KARTANA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.CORVIKNIGHT,e.NICKIT,e.THIEVUL,e.SILICOBRA,e.SANDACONDA,e.TOXTRICITY,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.MR_RIME,e.FALINKS,e.CUFANT,e.COPPERAJAH,e.DURALUDON,e.ETERNATUS,e.REGIELEKI,e.SNEASLER,e.NYMBLE,e.LOKIX,e.TOEDSCOOL,e.TOEDSCRUEL,e.VAROOM,e.REVAVROOM,e.ANNIHILAPE,e.DUDUNSPARCE,e.SANDY_SHOCKS,e.IRON_MOTH,e.IRON_THORNS,e.KORAIDON,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ZAPDOS,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_STUNFISK,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_SNEASEL],[t.DOUBLE_TEAM]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.NAGANADEL,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.PECHARUNT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.CONFUSE_RAY]:[e.VULPIX,e.NINETALES,e.ZUBAT,e.GOLBAT,e.VENONAT,e.VENOMOTH,e.PSYDUCK,e.GOLDUCK,e.TENTACOOL,e.TENTACRUEL,e.MAGNEMITE,e.MAGNETON,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.HYPNO,e.STARYU,e.STARMIE,e.MR_MIME,e.MAGMAR,e.LAPRAS,e.KABUTO,e.KABUTOPS,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.CHINCHOU,e.LANTURN,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.ESPEON,e.UMBREON,e.MURKROW,e.MISDREAVUS,e.GIRAFARIG,e.CORSOLA,e.MANTINE,e.STANTLER,e.MAGBY,e.SHIFTRY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SHEDINJA,e.SABLEYE,e.VOLBEAT,e.ILLUMISE,e.SPOINK,e.GRUMPIG,e.LILEEP,e.CRADILY,e.FEEBAS,e.MILOTIC,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.JIRACHI,e.SHINX,e.LUXIO,e.LUXRAY,e.VESPIQUEN,e.MISMAGIUS,e.HONCHKROW,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.SPIRITOMB,e.SKORUPI,e.DRAPION,e.FINNEON,e.LUMINEON,e.MANTYKE,e.MAGNEZONE,e.MAGMORTAR,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.DARKRAI,e.ARCEUS,e.WATCHOG,e.ZORUA,e.ZOROARK,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.FRILLISH,e.JELLICENT,e.EELEKTROSS,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.CRYOGONAL,e.GOLETT,e.GOLURK,e.DELPHOX,e.VIVILLON,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.MORELULL,e.SHIINOTIC,e.SANDYGAST,e.PALOSSAND,e.MINIOR,e.MIMIKYU,e.LUNALA,e.MAGEARNA,e.BLACEPHALON,e.ORBEETLE,e.SINISTEA,e.POLTEAGEIST,e.CURSOLA,e.MR_RIME,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ETERNATUS,e.SPECTRIER,e.WYRDEER,e.BASCULEGION,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FARIGIRAF,e.BRUTE_BONNET,e.FLUTTER_MANE,e.IRON_MOTH,e.GIMMIGHOUL,e.GHOLDENGO,e.CHI_YU,e.IRON_VALIANT,e.MIRAIDON,e.MUNKIDORI,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_MR_MIME,e.GALAR_CORSOLA,[e.CALYREX,"shadow"],e.HISUI_TYPHLOSION,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[t.LIGHT_SCREEN]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.PIKACHU,e.RAICHU,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PARAS,e.PARASECT,e.PSYDUCK,e.GOLDUCK,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.CLOYSTER,e.DROWZEE,e.HYPNO,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CHANSEY,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.JOLTEON,e.ARTICUNO,e.ZAPDOS,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.LEDYBA,e.LEDIAN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNKERN,e.SUNFLORA,e.ESPEON,e.UMBREON,e.SLOWKING,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.SCIZOR,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.STANTLER,e.SMOOCHUM,e.ELEKID,e.BLISSEY,e.RAIKOU,e.LUGIA,e.HO_OH,e.CELEBI,e.DUSTOX,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.AZURILL,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.SPOINK,e.GRUMPIG,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.FEEBAS,e.MILOTIC,e.CHIMECHO,e.SNORUNT,e.GLALIE,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.SHINX,e.LUXIO,e.LUXRAY,e.PACHIRISU,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.HAPPINY,e.SNOVER,e.ABOMASNOW,e.MAGNEZONE,e.ELECTIVIRE,e.TOGEKISS,e.MAMOSWINE,e.GALLADE,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.MANAPHY,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.WATCHOG,e.MUNNA,e.MUSHARNA,e.BLITZLE,e.ZEBSTRIKA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.WHIMSICOTT,e.LILLIGANT,e.SIGILYPH,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.CRYOGONAL,e.LARVESTA,e.VOLCARONA,e.VIRIZION,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.MELOETTA,e.GENESECT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.VIVILLON,e.FLABEBE,e.FLOETTE,e.FLORGES,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.HELIOPTILE,e.HELIOLISK,e.AMAURA,e.AURORUS,e.SYLVEON,e.DEDENNE,e.CARBINK,e.KLEFKI,e.PUMPKABOO,e.GOURGEIST,e.XERNEAS,e.DIANCIE,e.HOOPA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PRIMARINA,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CUTIEFLY,e.RIBOMBEE,e.TOXAPEX,e.MORELULL,e.SHIINOTIC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PYUKUMUKU,e.MINIOR,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.XURKITREE,e.NECROZMA,e.MAGEARNA,e.STAKATAKA,e.BLACEPHALON,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.GOSSIFLEUR,e.ELDEGOSS,e.APPLETUN,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.CURSOLA,e.MR_RIME,e.ALCREMIE,e.FROSMOTH,e.DURALUDON,e.DRAKLOAK,e.DRAGAPULT,e.ZAMAZENTA,e.ETERNATUS,e.REGIELEKI,e.REGIDRAGO,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.ARBOLIVA,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.TOEDSCOOL,e.TOEDSCRUEL,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.GLIMMET,e.GLIMMORA,e.FARIGIRAF,e.SCREAM_TAIL,e.SANDY_SHOCKS,e.IRON_MOTH,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHI_YU,e.IRON_VALIANT,e.MIRAIDON,e.MUNKIDORI,e.FEZANDIPITI,e.ARCHALUDON,e.ALOLA_RAICHU,e.ALOLA_EXEGGUTOR,e.ETERNAL_FLOETTE,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_SLOWKING,e.GALAR_CORSOLA,[e.INDEEDEE,"female"]],[t.HAZE]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.EKANS,e.ARBOK,e.ZUBAT,e.GOLBAT,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.KOFFING,e.WEEZING,e.GOLDEEN,e.SEAKING,e.LAPRAS,e.VAPOREON,e.OMANYTE,e.OMASTAR,e.ARTICUNO,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.NATU,e.XATU,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.MURKROW,e.QWILFISH,e.SWINUB,e.PILOSWINE,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SURSKIT,e.MASQUERAIN,e.SWABLU,e.ALTARIA,e.SEVIPER,e.FEEBAS,e.MILOTIC,e.DUSKULL,e.DUSCLOPS,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.DRIFLOON,e.DRIFBLIM,e.HONCHKROW,e.STUNKY,e.SKUNTANK,e.MANTYKE,e.GLACEON,e.MAMOSWINE,e.DUSKNOIR,e.FROSLASS,e.PHIONE,e.MANAPHY,e.DARKRAI,e.YAMASK,e.COFAGRIGUS,e.TRUBBISH,e.GARBODOR,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.CRYOGONAL,e.ZEKROM,e.GRENINJA,e.SKRELP,e.DRAGALGE,e.AMAURA,e.AURORUS,e.TREVENANT,e.ZYGARDE,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PRIMARINA,e.MAREANIE,e.TOXAPEX,e.TAPU_FINI,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.RUNERIGUS,e.SPECTRIER,e.OVERQWIL,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CLODSIRE,e.CHIEN_PAO,e.ALOLA_MUK,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_CORSOLA,e.GALAR_YAMASK,[e.CALYREX,"shadow"],e.HISUI_QWILFISH,e.HISUI_DECIDUEYE,e.PALDEA_WOOPER],[t.REFLECT]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.PIKACHU,e.RAICHU,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.GROWLITHE,e.ARCANINE,e.ABRA,e.KADABRA,e.ALAKAZAM,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SHELLDER,e.CLOYSTER,e.DROWZEE,e.HYPNO,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CHANSEY,e.TANGELA,e.STARYU,e.STARMIE,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.ESPEON,e.UMBREON,e.SLOWKING,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.SNUBBULL,e.GRANBULL,e.SNEASEL,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.STANTLER,e.SMOOCHUM,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LUGIA,e.HO_OH,e.CELEBI,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.SPOINK,e.GRUMPIG,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.CHIMECHO,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.WEAVILE,e.MAGNEZONE,e.TANGROWTH,e.TOGEKISS,e.MAMOSWINE,e.GALLADE,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.MANAPHY,e.ARCEUS,e.SNIVY,e.SERVINE,e.SERPERIOR,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.LEAVANNY,e.SIGILYPH,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.ELGYEM,e.BEHEEYEM,e.CRYOGONAL,e.MIENFOO,e.MIENSHAO,e.HYDREIGON,e.COBALION,e.TERRAKION,e.VIRIZION,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.KELDEO,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.DELPHOX,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.INKAY,e.MALAMAR,e.AMAURA,e.AURORUS,e.SYLVEON,e.CARBINK,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.XERNEAS,e.DIANCIE,e.HOOPA,e.PRIMARINA,e.CUTIEFLY,e.RIBOMBEE,e.ARAQUANID,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.ORANGURU,e.PYUKUMUKU,e.MINIOR,e.TOGEDEMARU,e.BRUXISH,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.XURKITREE,e.NECROZMA,e.MAGEARNA,e.STAKATAKA,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.APPLETUN,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.CURSOLA,e.MR_RIME,e.FROSMOTH,e.EISCUE,e.DURALUDON,e.DRAKLOAK,e.DRAGAPULT,e.ZAMAZENTA,e.ETERNATUS,e.REGIELEKI,e.REGIDRAGO,e.CALYREX,e.WYRDEER,e.ARBOLIVA,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.TOEDSCOOL,e.TOEDSCRUEL,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.GLIMMET,e.GLIMMORA,e.FARIGIRAF,e.SCREAM_TAIL,e.SANDY_SHOCKS,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHI_YU,e.IRON_VALIANT,e.MIRAIDON,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.ARCHALUDON,e.HYDRAPPLE,e.ALOLA_RAICHU,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_EXEGGUTOR,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_CORSOLA,[e.INDEEDEE,"female"],e.HISUI_VOLTORB,e.HISUI_ELECTRODE],[t.FOCUS_ENERGY]:[e.BEEDRILL,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.MANKEY,e.PRIMEAPE,e.MACHOP,e.MACHOKE,e.MACHAMP,e.FARFETCHD,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.SCYTHER,e.MAGMAR,e.PINSIR,e.TAUROS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.MEW,e.SENTRET,e.FURRET,e.ARIADOS,e.ESPEON,e.UMBREON,e.SCIZOR,e.TEDDIURSA,e.REMORAID,e.OCTILLERY,e.KINGDRA,e.PHANPY,e.TYROGUE,e.HITMONTOP,e.MAGBY,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.TAILLOW,e.SWELLOW,e.VIGOROTH,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.CARVANHA,e.SHARPEDO,e.NUMEL,e.CAMERUPT,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.ABSOL,e.BAGON,e.SHELGON,e.SALAMENCE,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.KRICKETUNE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.DRIFLOON,e.DRIFBLIM,e.STUNKY,e.SKUNTANK,e.LUCARIO,e.MAGMORTAR,e.LEAFEON,e.GLACEON,e.VICTINI,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.AXEW,e.FRAXURE,e.HAXORUS,e.MIENFOO,e.MIENSHAO,e.BOUFFALANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.PANGORO,e.SYLVEON,e.VOLCANION,e.PASSIMIAN,e.BUZZWOLE,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.INTELEON,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.BOLTUND,e.FLAPPLE,e.ARROKUDA,e.BARRASKEWDA,e.GRIMMSNARL,e.OBSTAGOON,e.SIRFETCHD,e.FALINKS,e.ZACIAN,e.ZAMAZENTA,e.KUBFU,e.URSHIFU,e.REGIDRAGO,e.KLEAVOR,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.FINIZEN,e.PALAFIN,e.FLAMIGO,e.VELUZA,e.ANNIHILAPE,e.IRON_HANDS,e.IRON_JUGULIS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.ROARING_MOON,e.OGERPON,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.PIKACHU,e.ALOLA_MAROWAK,[e.LYCANROC,"dusk"],e.GALAR_FARFETCHD,e.GALAR_ZAPDOS,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_SAMUROTT],[t.METRONOME]:[e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWBRO,e.GRIMER,e.MUK,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.HITMONLEE,e.HITMONCHAN,e.CHANSEY,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.CLEFFA,e.TOGEPI,e.TOGETIC,e.MARILL,e.AZUMARILL,e.POLITOED,e.AIPOM,e.SLOWKING,e.SNUBBULL,e.GRANBULL,e.TEDDIURSA,e.URSARING,e.SMOOCHUM,e.MILTANK,e.BLISSEY,e.CELEBI,e.LOMBRE,e.LUDICOLO,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.SWALOT,e.GRUMPIG,e.SPINDA,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSCLOPS,e.JIRACHI,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.FLOATZEL,e.AMBIPOM,e.HAPPINY,e.MUNCHLAX,e.LUCARIO,e.WEAVILE,e.TOGEKISS,e.DUSKNOIR,e.UXIE,e.MESPRIT,e.AZELF,e.GOTHORITA,e.GOTHITELLE,e.TORNADUS,e.MELOETTA,e.DELPHOX,e.FLOETTE,e.FLORGES,e.AROMATISSE,e.SLURPUFF,e.DIANCIE,e.INTELEON,e.TOXTRICITY,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.PERRSERKER,e.MR_RIME,e.ALCREMIE,e.INDEEDEE,e.CALYREX,e.URSALUNA,e.PAWMOT,e.ARBOLIVA,e.SHROODLE,e.GRAFAIAI,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.ANNIHILAPE,e.SCREAM_TAIL,e.IRON_HANDS,e.IRON_VALIANT,e.MUNKIDORI,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.HISUI_LILLIGANT],[t.SELF_DESTRUCT]:[e.JIGGLYPUFF,e.WIGGLYTUFF,e.GEODUDE,e.GRAVELER,e.GOLEM,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.KOFFING,e.WEEZING,e.SNORLAX,e.MEWTWO,e.MEW,e.SUDOWOODO,e.PINECO,e.FORRETRESS,e.STEELIX,e.QWILFISH,e.SLUGMA,e.MAGCARGO,e.CORSOLA,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.NOSEPASS,e.GULPIN,e.SWALOT,e.WAILMER,e.WAILORD,e.CAMERUPT,e.TORKOAL,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.GLALIE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.DRIFLOON,e.DRIFBLIM,e.BONSLY,e.MUNCHLAX,e.MAGNEZONE,e.LICKILICKY,e.AZELF,e.HEATRAN,e.GIGALITH,e.TRUBBISH,e.GARBODOR,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.FERROSEED,e.FERROTHORN,e.CRYOGONAL,e.GOLETT,e.GOLURK,e.LANDORUS,e.GENESECT,e.VOLCANION,e.SILVALLY,e.MINIOR,e.CELESTEELA,e.MAGEARNA,e.BLACEPHALON,e.MELMETAL,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.POLTEAGEIST,e.CURSOLA,e.PINCURCHIN,e.STONJOURNER,e.REGIELEKI,e.REGIDRAGO,e.VAROOM,e.GLIMMET,e.GLIMMORA,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.GALAR_WEEZING,e.GALAR_CORSOLA,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_QWILFISH],[t.FIRE_BLAST]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.GROWLITHE,e.ARCANINE,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.GRIMER,e.MUK,e.CUBONE,e.MAROWAK,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MAGMAR,e.TAUROS,e.GYARADOS,e.FLAREON,e.AERODACTYL,e.SNORLAX,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.SLOWKING,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.SLUGMA,e.MAGCARGO,e.REMORAID,e.OCTILLERY,e.HOUNDOUR,e.HOUNDOOM,e.MAGBY,e.BLISSEY,e.ENTEI,e.TYRANITAR,e.HO_OH,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAWILE,e.AGGRON,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.FLYGON,e.ALTARIA,e.ZANGOOSE,e.SOLROCK,e.CASTFORM,e.KECLEON,e.ABSOL,e.BAGON,e.SHELGON,e.SALAMENCE,e.GROUDON,e.RAYQUAZA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.STUNKY,e.SKUNTANK,e.HAPPINY,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.LICKILICKY,e.RHYPERIOR,e.MAGMORTAR,e.TOGEKISS,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.ARCEUS,e.VICTINI,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PANSEAR,e.SIMISEAR,e.AUDINO,e.DARUMAKA,e.DARMANITAN,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.HEATMOR,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.RESHIRAM,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.GOODRA,e.PUMPKABOO,e.GOURGEIST,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.SALANDIT,e.SALAZZLE,e.TURTONATOR,e.DRAMPA,e.SOLGALEO,e.CELESTEELA,e.GUZZLORD,e.NAGANADEL,e.BLACEPHALON,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.CARKOL,e.COALOSSAL,e.CENTISKORCH,e.DRACOZOLT,e.DRAKLOAK,e.DRAGAPULT,e.ETERNATUS,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.SCOVILLAIN,e.DUDUNSPARCE,e.SCREAM_TAIL,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.CHI_YU,e.ROARING_MOON,e.KORAIDON,e.GOUGING_FIRE,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_SLOWKING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_GOODRA,[e.PALDEA_TAUROS,"blaze"]],[t.WATERFALL]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.CHINCHOU,e.LANTURN,e.MARILL,e.AZUMARILL,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.QWILFISH,e.REMORAID,e.OCTILLERY,e.MANTINE,e.KINGDRA,e.SUICUNE,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.LOMBRE,e.LUDICOLO,e.WINGULL,e.PELIPPER,e.SURSKIT,e.MASQUERAIN,e.AZURILL,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.FEEBAS,e.MILOTIC,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.LATIAS,e.LATIOS,e.KYOGRE,e.RAYQUAZA,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIBAREL,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.FINNEON,e.LUMINEON,e.MANTYKE,e.PALKIA,e.PHIONE,e.MANAPHY,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PANPOUR,e.SIMIPOUR,e.BASCULIN,e.TIRTOUGA,e.CARRACOSTA,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.WISHIWASHI,e.DEWPIDER,e.ARAQUANID,e.WIMPOD,e.GOLISOPOD,e.BRUXISH,e.TAPU_FINI,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.CHEWTLE,e.DREDNAW,e.ARROKUDA,e.BARRASKEWDA,e.CLOBBOPUS,e.GRAPPLOCT,e.EISCUE,e.DRACOVISH,e.ARCTOVISH,e.BASCULEGION,e.OVERQWIL,e.FINIZEN,e.PALAFIN,e.VELUZA,e.DONDOZO,e.CLODSIRE,e.WALKING_WAKE,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,[e.URSHIFU,"rapid-strike"],e.HISUI_QWILFISH,e.HISUI_SAMUROTT,e.PALDEA_WOOPER],[t.SWIFT]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.VENONAT,e.VENOMOTH,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.WEEPINBELL,e.VICTREEBEL,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.MUK,e.SHELLDER,e.CLOYSTER,e.DROWZEE,e.HYPNO,e.VOLTORB,e.ELECTRODE,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.CHANSEY,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.SCYTHER,e.ELECTABUZZ,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.CROBAT,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.POLITOED,e.AIPOM,e.YANMA,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.GLIGAR,e.QWILFISH,e.SCIZOR,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.ELEKID,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.NINJASK,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.SKITTY,e.DELCATTY,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.CARVANHA,e.SHARPEDO,e.SPOINK,e.GRUMPIG,e.SPINDA,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CRAWDAUNT,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.CHIMECHO,e.ABSOL,e.HUNTAIL,e.GOREBYSS,e.LUVDISC,e.SALAMENCE,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,[e.DEOXYS,"","speed"],e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.MOTHIM,e.COMBEE,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.CHATOT,e.GIBLE,e.GABITE,e.GARCHOMP,e.RIOLU,e.LUCARIO,e.FINNEON,e.LUMINEON,e.MANTYKE,e.WEAVILE,e.MAGNEZONE,e.ELECTIVIRE,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PURRLOIN,e.LIEPARD,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.COTTONEE,e.WHIMSICOTT,e.BASCULIN,e.SIGILYPH,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.DUCKLETT,e.SWANNA,e.EMOLGA,e.JOLTIK,e.GALVANTULA,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.ACCELGOR,e.MIENFOO,e.MIENSHAO,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.COBALION,e.TERRAKION,e.VIRIZION,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.ESPURR,e.MEOWSTIC,e.HELIOPTILE,e.HELIOLISK,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.KLEFKI,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.LYCANROC,e.SALANDIT,e.SALAZZLE,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.ORANGURU,e.WIMPOD,e.GOLISOPOD,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.TOGEDEMARU,e.DRAMPA,e.TAPU_KOKO,e.SOLGALEO,e.LUNALA,e.PHEROMOSA,e.MAGEARNA,e.MARSHADOW,e.NAGANADEL,e.ZERAORA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.NICKIT,e.THIEVUL,e.YAMPER,e.BOLTUND,e.ARROKUDA,e.BARRASKEWDA,e.TOXTRICITY,e.HATENNA,e.HATTREM,e.HATTERENE,e.OBSTAGOON,e.PINCURCHIN,e.FROSMOTH,e.INDEEDEE,e.MORPEKO,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.TOEDSCOOL,e.TOEDSCRUEL,e.FLITTLE,e.ESPATHRA,e.WIGLETT,e.WUGTRIO,e.FINIZEN,e.PALAFIN,e.ANNIHILAPE,e.FARIGIRAF,e.FLUTTER_MANE,e.SANDY_SHOCKS,e.IRON_BUNDLE,e.IRON_MOTH,e.IRON_VALIANT,e.WALKING_WAKE,e.IRON_LEAVES,e.MUNKIDORI,e.FEZANDIPITI,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE,e.BLOODMOON_URSALUNA],[t.AMNESIA]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.SLOWPOKE,e.SLOWBRO,e.KRABBY,e.KINGLER,e.LICKITUNG,e.TANGELA,e.SNORLAX,e.MEWTWO,e.MEW,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.CHINCHOU,e.LANTURN,e.CLEFFA,e.MARILL,e.AZUMARILL,e.POLITOED,e.HOPPIP,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.WOBBUFFET,e.GIRAFARIG,e.DUNSPARCE,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.MANTINE,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.GULPIN,e.SWALOT,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.BARBOACH,e.WHISCASH,e.LILEEP,e.CRADILY,e.CASTFORM,e.WYNAUT,e.GOREBYSS,e.RELICANTH,e.REGICE,e.REGISTEEL,e.JIRACHI,e.TURTWIG,e.GROTLE,e.TORTERRA,e.BIDOOF,e.BIBAREL,e.SHELLOS,e.GASTRODON,e.DRIFLOON,e.DRIFBLIM,e.MUNCHLAX,e.HIPPOPOTAS,e.HIPPOWDON,e.MANTYKE,e.LICKILICKY,e.TANGROWTH,e.TOGEKISS,e.MAMOSWINE,e.UXIE,e.PANSEAR,e.SIMISEAR,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.SCRAGGY,e.SCRAFTY,e.TRUBBISH,e.GARBODOR,e.BOUFFALANT,e.HEATMOR,e.LARVESTA,e.VOLCARONA,e.SWIRLIX,e.SLURPUFF,e.DIANCIE,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.CRABRAWLER,e.CRABOMINABLE,e.MORELULL,e.SHIINOTIC,e.COMFEY,e.SANDYGAST,e.PALOSSAND,e.DRAMPA,e.GUZZLORD,e.SKWOVET,e.GREEDENT,e.APPLETUN,e.CRAMORANT,e.PERRSERKER,e.CURSOLA,e.RUNERIGUS,e.EISCUE,e.CETODDLE,e.CETITAN,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.SCREAM_TAIL,[e.DEOXYS,"defense"],e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_MEOWTH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.PALDEA_WOOPER],[t.DREAM_EATER]:[e.BUTTERFREE,e.CLEFAIRY,e.CLEFABLE,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.VENOMOTH,e.MEOWTH,e.PERSIAN,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.EXEGGCUTE,e.EXEGGUTOR,e.LICKITUNG,e.CHANSEY,e.STARMIE,e.MR_MIME,e.JYNX,e.LAPRAS,e.PORYGON,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.AIPOM,e.YANMA,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.DUNSPARCE,e.GLIGAR,e.SNEASEL,e.HOUNDOUR,e.HOUNDOOM,e.PORYGON2,e.STANTLER,e.SMOOCHUM,e.BLISSEY,e.LUGIA,e.HO_OH,e.CELEBI,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SHEDINJA,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.GULPIN,e.SWALOT,e.SPOINK,e.GRUMPIG,e.SPINDA,e.SWABLU,e.ALTARIA,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.ABSOL,e.LATIAS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.WORMADAM,e.MOTHIM,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.HAPPINY,e.SPIRITOMB,e.WEAVILE,e.LICKILICKY,e.TOGEKISS,e.YANMEGA,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.GIRATINA,e.CRESSELIA,e.DARKRAI,e.ARCEUS,e.WATCHOG,e.PURRLOIN,e.LIEPARD,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.FRILLISH,e.JELLICENT,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.VIVILLON,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.AMAURA,e.AURORUS,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.HOOPA,e.CUTIEFLY,e.RIBOMBEE,e.MORELULL,e.SHIINOTIC,e.ORANGURU,e.MIMIKYU,e.BRUXISH,e.LUNALA,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.MAROWAK,e.GALAR_ARTICUNO],[t.LEECH_LIFE]:[e.EKANS,e.ARBOK,e.SANDSHREW,e.SANDSLASH,e.ZUBAT,e.GOLBAT,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.KABUTO,e.KABUTOPS,e.MEW,e.SPINARAK,e.ARIADOS,e.CROBAT,e.YANMA,e.BEAUTIFLY,e.DUSTOX,e.SURSKIT,e.MASQUERAIN,e.NINCADA,e.NINJASK,e.SHEDINJA,e.DUSKULL,e.DUSCLOPS,e.KRICKETUNE,e.DRAPION,e.YANMEGA,e.DUSKNOIR,e.JOLTIK,e.GALVANTULA,e.SHELMET,e.ACCELGOR,e.LARVESTA,e.VOLCARONA,e.GENESECT,e.NOIBAT,e.NOIVERN,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.CUTIEFLY,e.RIBOMBEE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.SALANDIT,e.SALAZZLE,e.WIMPOD,e.GOLISOPOD,e.MIMIKYU,e.BUZZWOLE,e.NAGANADEL,e.DOTTLER,e.ORBEETLE,e.SIZZLIPEDE,e.CENTISKORCH,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.CURSOLA,e.FROSMOTH,e.DRACOVISH,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.RELLOR,e.RABSCA,e.SLITHER_WING,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH],[t.FLASH]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.BUTTERFREE,e.BEEDRILL,e.PIKACHU,e.RAICHU,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.ABRA,e.KADABRA,e.ALAKAZAM,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.DROWZEE,e.HYPNO,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.KOFFING,e.WEEZING,e.CHANSEY,e.TANGELA,e.STARYU,e.STARMIE,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.JOLTEON,e.PORYGON,e.ZAPDOS,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.SHUCKLE,e.SKARMORY,e.PORYGON2,e.STANTLER,e.SMOOCHUM,e.ELEKID,e.BLISSEY,e.RAIKOU,e.ENTEI,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.NINCADA,e.NINJASK,e.SHEDINJA,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.SPOINK,e.GRUMPIG,e.SPINDA,e.CACNEA,e.CACTURNE,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.CHERUBI,e.CHERRIM,e.GASTRODON,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.HAPPINY,e.SPIRITOMB,e.SKORUPI,e.DRAPION,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.SNOVER,e.ABOMASNOW,e.MAGNEZONE,e.TANGROWTH,e.ELECTIVIRE,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.CRESSELIA,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.WATCHOG,e.PANSAGE,e.SIMISAGE,e.MUNNA,e.MUSHARNA,e.BLITZLE,e.ZEBSTRIKA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.STUNFISK,e.GOLETT,e.GOLURK,e.VIRIZION,e.ZEKROM,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.VIVILLON,e.FLABEBE,e.FLOETTE,e.FLORGES,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.HELIOPTILE,e.HELIOLISK,e.AMAURA,e.AURORUS,e.SYLVEON,e.DEDENNE,e.CARBINK,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.XERNEAS,e.DIANCIE,e.HOOPA,e.MORELULL,e.SHIINOTIC,e.PERRSERKER,e.MR_RIME,e.RUNERIGUS,e.WYRDEER,e.CLODSIRE,e.FARIGIRAF,e.ALOLA_RAICHU,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_EXEGGUTOR,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_YAMASK,e.HISUI_LILLIGANT,e.HISUI_AVALUGG,e.PALDEA_WOOPER],[t.EXPLOSION]:[e.GEODUDE,e.GRAVELER,e.GOLEM,e.MAGNEMITE,e.MAGNETON,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.KOFFING,e.WEEZING,e.MEW,e.SUDOWOODO,e.PINECO,e.FORRETRESS,e.STEELIX,e.QWILFISH,e.MAGCARGO,e.CORSOLA,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.NOSEPASS,e.GULPIN,e.SWALOT,e.CAMERUPT,e.TORKOAL,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.GLALIE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.DRIFLOON,e.DRIFBLIM,e.STUNKY,e.SKUNTANK,e.BRONZONG,e.BONSLY,e.MAGNEZONE,e.LICKILICKY,e.PROBOPASS,e.AZELF,e.HEATRAN,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.TRUBBISH,e.GARBODOR,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.FERROSEED,e.FERROTHORN,e.CRYOGONAL,e.LANDORUS,e.GENESECT,e.CARBINK,e.PUMPKABOO,e.GOURGEIST,e.DIANCIE,e.VOLCANION,e.SILVALLY,e.MINIOR,e.TURTONATOR,e.CELESTEELA,e.MAGEARNA,e.BLACEPHALON,e.ROLYCOLY,e.REGIELEKI,e.REGIDRAGO,e.GARGANACL,e.GLIMMET,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.GALAR_WEEZING,e.HISUI_VOLTORB,e.HISUI_ELECTRODE],[t.REST]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.FINIZEN,e.PALAFIN,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.PECHARUNT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.ROCK_SLIDE]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.EKANS,e.ARBOK,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.MANKEY,e.PRIMEAPE,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.GRIMER,e.MUK,e.ONIX,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.PINSIR,e.TAUROS,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SUDOWOODO,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.GRANBULL,e.SHUCKLE,e.HERACROSS,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.MANTINE,e.SKARMORY,e.PHANPY,e.DONPHAN,e.TYROGUE,e.HITMONTOP,e.MILTANK,e.BLISSEY,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.NUZLEAF,e.SHIFTRY,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.ZANGOOSE,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.KECLEON,e.DUSCLOPS,e.ABSOL,e.SPHEAL,e.SEALEO,e.WALREIN,e.RELICANTH,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.DEOXYS,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.EMPOLEON,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.SHELLOS,e.GASTRODON,e.BRONZOR,e.BRONZONG,e.BONSLY,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.MANTYKE,e.ABOMASNOW,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.GLISCOR,e.MAMOSWINE,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.DARKRAI,e.ARCEUS,e.PIGNITE,e.EMBOAR,e.SIMISAGE,e.SIMISEAR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DRILBUR,e.EXCADRILL,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.SCOLIPEDE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.DURANT,e.HYDREIGON,e.TERRAKION,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.HAWLUCHA,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.VOLCANION,e.CRABRAWLER,e.CRABOMINABLE,e.ROCKRUFF,e.LYCANROC,e.MUDBRAY,e.MUDSDALE,e.STUFFUL,e.BEWEAR,e.ORANGURU,e.PASSIMIAN,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_BULU,e.SOLGALEO,e.NIHILEGO,e.BUZZWOLE,e.CELESTEELA,e.GUZZLORD,e.NECROZMA,e.MARSHADOW,e.STAKATAKA,e.MELMETAL,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.SILICOBRA,e.SANDACONDA,e.CURSOLA,e.RUNERIGUS,e.FALINKS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.URSHIFU,e.ZARUDE,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.NACLI,e.NACLSTACK,e.GARGANACL,e.KLAWF,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.BOMBIRDIER,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.DONDOZO,e.ANNIHILAPE,e.CLODSIRE,e.DUDUNSPARCE,e.GREAT_TUSK,e.IRON_TREADS,e.IRON_HANDS,e.IRON_THORNS,e.TING_LU,e.ROARING_MOON,e.ARCHALUDON,e.TERAPAGOS,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_CORSOLA,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.TRI_ATTACK]:[e.SPEAROW,e.FEAROW,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.DUGTRIO,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.MAGNETON,e.DODUO,e.DODRIO,e.SHELLDER,e.CLOYSTER,e.DROWZEE,e.HYPNO,e.CHANSEY,e.STARYU,e.STARMIE,e.PORYGON,e.MEWTWO,e.MEW,e.TOGEPI,e.TOGETIC,e.SLOWKING,e.PORYGON2,e.BLISSEY,e.LATIAS,e.LATIOS,e.MAGNEZONE,e.TOGEKISS,e.PORYGON_Z,e.PROBOPASS,e.UXIE,e.MESPRIT,e.AZELF,e.BEHEEYEM,e.HYDREIGON,e.GENESECT,e.TYPE_NULL,e.SILVALLY,e.MAGEARNA,e.ALCREMIE,e.INDEEDEE,e.DRAGAPULT,e.CALYREX,e.SANDY_SHOCKS,e.IRON_JUGULIS,e.ALOLA_DUGTRIO,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING],[t.SUPER_FANG]:[e.RATTATA,e.RATICATE,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.ZUBAT,e.GOLBAT,e.MEW,e.SENTRET,e.FURRET,e.CROBAT,e.SNUBBULL,e.GRANBULL,e.HOUNDOUR,e.HOUNDOOM,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.MAWILE,e.PLUSLE,e.MINUN,e.CARVANHA,e.SHARPEDO,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.HUNTAIL,e.BIDOOF,e.BIBAREL,e.PACHIRISU,e.GLAMEOW,e.PURUGLY,e.SKUNTANK,e.CROAGUNK,e.TOXICROAK,e.PATRAT,e.WATCHOG,e.WOOBAT,e.SWOOBAT,e.SCRAGGY,e.SCRAFTY,e.MINCCINO,e.CINCCINO,e.EELEKTRIK,e.EELEKTROSS,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.BUNNELBY,e.DIGGERSBY,e.DEDENNE,e.NOIBAT,e.NOIVERN,e.YUNGOOS,e.GUMSHOOS,e.KOMALA,e.TOGEDEMARU,e.BRUXISH,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SKWOVET,e.GREEDENT,e.DREDNAW,e.MORPEKO,e.DRACOVISH,e.ARCTOVISH,e.LECHONK,e.OINKOLOGNE,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.SHROODLE,e.GRAFAIAI,e.CAPSAKID,e.SCOVILLAIN,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH],[t.SUBSTITUTE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.PECHARUNT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.THIEF]:[e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.MEW,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.NATU,e.XATU,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.YANMA,e.QUAGSIRE,e.UMBREON,e.MURKROW,e.MISDREAVUS,e.GIRAFARIG,e.DUNSPARCE,e.GLIGAR,e.SNUBBULL,e.GRANBULL,e.SCIZOR,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.BLISSEY,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINJASK,e.SHEDINJA,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.VOLBEAT,e.ILLUMISE,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.SPOINK,e.GRUMPIG,e.SPINDA,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.CORPHISH,e.CRAWDAUNT,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.ABSOL,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.SHINX,e.LUXIO,e.LUXRAY,e.CRANIDOS,e.RAMPARDOS,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.BONSLY,e.MIME_JR,e.CHATOT,e.SPIRITOMB,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.YANMEGA,e.GLISCOR,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.ROTOM,e.DARKRAI,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.WOOBAT,e.SWOOBAT,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.WHIMSICOTT,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.JOLTIK,e.GALVANTULA,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.CUBCHOO,e.BEARTIC,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.TORNADUS,e.THUNDURUS,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.PANGORO,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HAWLUCHA,e.DEDENNE,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.HOOPA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.CUTIEFLY,e.RIBOMBEE,e.SALANDIT,e.SALAZZLE,e.COMFEY,e.PASSIMIAN,e.KOMALA,e.TOGEDEMARU,e.MIMIKYU,e.DHELMISE,e.TAPU_KOKO,e.TAPU_LELE,e.GUZZLORD,e.NECROZMA,e.MARSHADOW,e.NAGANADEL,e.BLACEPHALON,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.NICKIT,e.THIEVUL,e.CRAMORANT,e.TOXTRICITY,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.MR_RIME,e.RUNERIGUS,e.MORPEKO,e.DRAKLOAK,e.DRAGAPULT,e.ZARUDE,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.MEOWSCARADA,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.SQUAWKABILLY,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.BOMBIRDIER,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.ANNIHILAPE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.BRUTE_BONNET,e.IRON_BUNDLE,e.GIMMIGHOUL,e.GHOLDENGO,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_MOLTRES,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.PALDEA_TAUROS,e.BLOODMOON_URSALUNA],[t.SNORE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.CATERPIE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.WURMPLE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETOT,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BURMY,e.WORMADAM,e.MOTHIM,e.COMBEE,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.URSALUNA,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK],[t.CURSE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.HARIYAMA,e.NOSEPASS,e.GULPIN,e.SWALOT,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.WHISCASH,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.REGIROCK,e.REGICE,e.REGISTEEL,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.HONCHKROW,e.CHINGLING,e.BONSLY,e.SPIRITOMB,e.MUNCHLAX,e.HIPPOPOTAS,e.HIPPOWDON,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.GIRATINA,e.DARKRAI,e.TEPIG,e.PIGNITE,e.EMBOAR,e.DRILBUR,e.EXCADRILL,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.SAWSBUCK,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.BEARTIC,e.GOLETT,e.GOLURK,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.SYLVEON,e.GOOMY,e.SLIGGOO,e.GOODRA,e.PHANTUMP,e.TREVENANT,e.BERGMITE,e.AVALUGG,e.DECIDUEYE,e.GUMSHOOS,e.MUDBRAY,e.MUDSDALE,e.PASSIMIAN,e.SANDYGAST,e.PALOSSAND,e.KOMALA,e.MIMIKYU,e.SKWOVET,e.GREEDENT,e.CORVIKNIGHT,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.APPLETUN,e.SINISTEA,e.POLTEAGEIST,e.PERRSERKER,e.PINCURCHIN,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.GLASTRIER,e.SPECTRIER,[e.CALYREX,"ice","shadow"],e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.OVERQWIL,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.LECHONK,e.OINKOLOGNE,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CERULEDGE,e.MABOSSTIFF,e.BRAMBLIN,e.BRAMBLEGHAST,e.BOMBIRDIER,e.VAROOM,e.REVAVROOM,e.ORTHWORM,e.CETODDLE,e.CETITAN,e.DONDOZO,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.SLITHER_WING,e.IRON_THORNS,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.HYDRAPPLE,e.PECHARUNT,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_SLOWKING,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.PALDEA_WOOPER],[t.REVERSAL]:[e.RATTATA,e.RATICATE,e.PIKACHU,e.RAICHU,e.DIGLETT,e.DUGTRIO,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.HITMONLEE,e.HITMONCHAN,e.RHYHORN,e.RHYDON,e.KANGASKHAN,e.SCYTHER,e.PINSIR,e.TAUROS,e.MEWTWO,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.SENTRET,e.FURRET,e.PICHU,e.YANMA,e.PINECO,e.FORRETRESS,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.SWINUB,e.PILOSWINE,e.DELIBIRD,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.HITMONTOP,e.MILTANK,e.ENTEI,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.BRELOOM,e.VIGOROTH,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ZANGOOSE,e.SEVIPER,e.MONFERNO,e.INFERNAPE,e.VESPIQUEN,e.LOPUNNY,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.RHYPERIOR,e.YANMEGA,e.MAMOSWINE,e.GALLADE,e.VICTINI,e.PIGNITE,e.EMBOAR,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.BASCULIN,e.DARMANITAN,e.SCRAFTY,e.ESCAVALIER,e.AXEW,e.FRAXURE,e.HAXORUS,e.BEARTIC,e.ACCELGOR,e.MIENFOO,e.MIENSHAO,e.BISHARP,e.BOUFFALANT,e.BRAVIARY,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.KELDEO,e.MELOETTA,e.CHESNAUGHT,e.PANGORO,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.MALAMAR,e.HAWLUCHA,e.ZYGARDE,e.INCINEROAR,e.YUNGOOS,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,[e.LYCANROC,"midnight","dusk"],e.BEWEAR,e.PASSIMIAN,e.SILVALLY,e.KOMALA,e.TOGEDEMARU,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.BUZZWOLE,e.MARSHADOW,e.ZERAORA,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.WOOLOO,e.DUBWOOL,e.CRAMORANT,e.CLOBBOPUS,e.GRAPPLOCT,e.OBSTAGOON,e.FALINKS,e.PINCURCHIN,e.EISCUE,e.MORPEKO,e.ZACIAN,e.ZAMAZENTA,e.KUBFU,e.URSHIFU,e.REGIDRAGO,e.KLEAVOR,e.SNEASLER,e.OVERQWIL,e.QUAQUAVAL,e.SPIDOPS,e.LOKIX,e.SQUAWKABILLY,e.MASCHIFF,e.MABOSSTIFF,e.KLAWF,e.PALAFIN,e.FLAMIGO,e.ANNIHILAPE,e.KINGAMBIT,e.GREAT_TUSK,e.SLITHER_WING,e.IRON_HANDS,e.IRON_VALIANT,e.KORAIDON,e.IRON_LEAVES,e.OKIDOGI,e.OGERPON,e.GOUGING_FIRE,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,[e.LYCANROC,"midnight","dusk"],e.GALAR_ZAPDOS,e.GALAR_DARMANITAN,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS],[t.SPITE]:[e.EKANS,e.ARBOK,e.VULPIX,e.NINETALES,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.KANGASKHAN,e.TAUROS,e.GYARADOS,e.MEWTWO,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.HOOTHOOT,e.NOCTOWL,e.SPINARAK,e.ARIADOS,e.AIPOM,e.UMBREON,e.MURKROW,e.MISDREAVUS,e.DUNSPARCE,e.QWILFISH,e.SNEASEL,e.HOUNDOUR,e.HOUNDOOM,e.STANTLER,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.NINCADA,e.NINJASK,e.SHEDINJA,e.SABLEYE,e.ARON,e.LAIRON,e.AGGRON,e.CARVANHA,e.SHARPEDO,e.CACNEA,e.CACTURNE,e.CORPHISH,e.CRAWDAUNT,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.ABSOL,e.SNORUNT,e.GLALIE,e.CRANIDOS,e.RAMPARDOS,e.VESPIQUEN,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.HONCHKROW,e.SPIRITOMB,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.RHYPERIOR,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.GIRATINA,e.DARKRAI,e.PURRLOIN,e.LIEPARD,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.YAMASK,e.COFAGRIGUS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.FRILLISH,e.JELLICENT,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.STUNFISK,e.PAWNIARD,e.BISHARP,e.VULLABY,e.MANDIBUZZ,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.PANCHAM,e.PANGORO,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.INKAY,e.MALAMAR,e.SKRELP,e.DRAGALGE,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.ZYGARDE,e.DECIDUEYE,e.MAREANIE,e.TOXAPEX,e.ORANGURU,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.MIMIKYU,e.DHELMISE,e.LUNALA,e.NIHILEGO,e.BLACEPHALON,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.SINISTEA,e.POLTEAGEIST,e.PERRSERKER,e.CURSOLA,e.MORPEKO,e.WYRDEER,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.LOKIX,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.MABOSSTIFF,e.BRAMBLIN,e.BRAMBLEGHAST,e.ANNIHILAPE,e.DUDUNSPARCE,e.KINGAMBIT,e.FLUTTER_MANE,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.PECHARUNT,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.MAROWAK,e.GALAR_MEOWTH,e.GALAR_WEEZING,e.GALAR_MOLTRES,e.GALAR_CORSOLA,e.GALAR_STUNFISK,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_ZORUA,e.HISUI_ZOROARK],[t.PROTECT]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BURMY,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.SPEWPA,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.PECHARUNT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.SCARY_FACE]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.RATICATE,e.SPEAROW,e.EKANS,e.ARBOK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.VICTREEBEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.GRIMER,e.MUK,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.HYPNO,e.ELECTRODE,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.SCYTHER,e.MAGMAR,e.TAUROS,e.GYARADOS,e.FLAREON,e.AERODACTYL,e.DRAGONITE,e.MEWTWO,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.NOCTOWL,e.SPINARAK,e.ARIADOS,e.UMBREON,e.MURKROW,e.MISDREAVUS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SNEASEL,e.URSARING,e.SWINUB,e.PILOSWINE,e.HOUNDOUR,e.HOUNDOOM,e.DONPHAN,e.STANTLER,e.MAGBY,e.ENTEI,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.NUZLEAF,e.SHIFTRY,e.MASQUERAIN,e.VIGOROTH,e.SLAKING,e.HARIYAMA,e.AGGRON,e.MANECTRIC,e.CARVANHA,e.SHARPEDO,e.NUMEL,e.CAMERUPT,e.CACNEA,e.CACTURNE,e.SEVIPER,e.WHISCASH,e.CRAWDAUNT,e.SHUPPET,e.BANETTE,e.GLALIE,e.HUNTAIL,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.TORTERRA,e.INFERNAPE,e.EMPOLEON,e.SHINX,e.LUXIO,e.LUXRAY,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.VESPIQUEN,e.FLOATZEL,e.MISMAGIUS,e.HONCHKROW,e.STUNKY,e.SKUNTANK,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.LUCARIO,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.ABOMASNOW,e.WEAVILE,e.RHYPERIOR,e.MAGMORTAR,e.YANMEGA,e.GLISCOR,e.MAMOSWINE,e.FROSLASS,e.DIALGA,e.PALKIA,e.HEATRAN,e.GIRATINA,e.CRESSELIA,e.ARCEUS,e.SAMUROTT,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.COFAGRIGUS,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.KARRABLAST,e.ESCAVALIER,e.AMOONGUSS,e.EELEKTRIK,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.BEARTIC,e.CRYOGONAL,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.COBALION,e.TERRAKION,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.KYUREM,e.CHESNAUGHT,e.PANGORO,e.MALAMAR,e.SKRELP,e.DRAGALGE,e.CLAWITZER,e.TYRUNT,e.TYRANTRUM,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.AVALUGG,e.NOIVERN,e.HOOPA,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.YUNGOOS,e.GUMSHOOS,e.CRABOMINABLE,e.ROCKRUFF,e.LYCANROC,e.TOXAPEX,e.MUDSDALE,e.LURANTIS,e.SALANDIT,e.SALAZZLE,e.ORANGURU,e.PASSIMIAN,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.BRUXISH,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_BULU,e.SOLGALEO,e.LUNALA,e.NECROZMA,e.ZERAORA,e.THWACKEY,e.RILLABOOM,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.CHEWTLE,e.DREDNAW,e.FLAPPLE,e.SILICOBRA,e.SANDACONDA,e.BARRASKEWDA,e.TOXTRICITY,e.GRAPPLOCT,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.RUNERIGUS,e.MORPEKO,e.COPPERAJAH,e.DURALUDON,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.OVERQWIL,e.ENAMORUS,e.SKELEDIRGE,e.SPIDOPS,e.LOKIX,e.DACHSBUN,e.SQUAWKABILLY,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.SCOVILLAIN,e.BOMBIRDIER,e.VAROOM,e.REVAVROOM,e.GREAVARD,e.HOUNDSTONE,e.DONDOZO,e.ANNIHILAPE,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.IRON_TREADS,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_THORNS,e.ARCTIBAX,e.BAXCALIBUR,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.OKIDOGI,e.OGERPON,e.ARCHALUDON,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.ALOLA_RATICATE,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_ELECTRODE,e.HISUI_QWILFISH,e.HISUI_SAMUROTT,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.BLOODMOON_URSALUNA],[t.SLUDGE_BOMB]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.BEEDRILL,e.RATTATA,e.RATICATE,e.EKANS,e.ARBOK,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.EXEGGCUTE,e.EXEGGUTOR,e.KOFFING,e.WEEZING,e.TANGELA,e.MEW,e.SPINARAK,e.ARIADOS,e.CROBAT,e.BELLOSSOM,e.SUNKERN,e.SUNFLORA,e.WOOPER,e.QUAGSIRE,e.GLIGAR,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SHUCKLE,e.OCTILLERY,e.HOUNDOUR,e.HOUNDOOM,e.DUSTOX,e.SHROOMISH,e.BRELOOM,e.MAWILE,e.ROSELIA,e.GULPIN,e.SWALOT,e.TORKOAL,e.SEVIPER,e.CORPHISH,e.CRAWDAUNT,e.LILEEP,e.CRADILY,e.METANG,e.METAGROSS,e.BUDEW,e.ROSERADE,e.VESPIQUEN,e.GASTRODON,e.STUNKY,e.SKUNTANK,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.TANGROWTH,e.GLISCOR,e.DARKRAI,e.ARCEUS,e.DRILBUR,e.EXCADRILL,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.DRUDDIGON,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.BUNNELBY,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.GOOMY,e.SLIGGOO,e.GOODRA,e.PUMPKABOO,e.GOURGEIST,e.VOLCANION,e.MAREANIE,e.TOXAPEX,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.NIHILEGO,e.GUZZLORD,e.POIPOLE,e.NAGANADEL,e.TOXTRICITY,e.ETERNATUS,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SHROODLE,e.GRAFAIAI,e.TOEDSCOOL,e.TOEDSCRUEL,e.RELLOR,e.RABSCA,e.VAROOM,e.REVAVROOM,e.GLIMMET,e.GLIMMORA,e.CLODSIRE,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.PECHARUNT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_SLOWKING,e.GALAR_STUNFISK,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.PALDEA_WOOPER],[t.MUD_SLAP]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWPOKE,e.SLOWBRO,e.FARFETCHD,e.DODUO,e.DODRIO,e.GRIMER,e.MUK,e.ONIX,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.GOLDEEN,e.SEAKING,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.KABUTO,e.KABUTOPS,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.GIRAFARIG,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.SHUCKLE,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.LOMBRE,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.MILOTIC,e.KECLEON,e.BANETTE,e.DUSCLOPS,e.TROPIUS,e.ABSOL,e.SPHEAL,e.SEALEO,e.WALREIN,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.BAGON,e.SHELGON,e.SALAMENCE,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETOT,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.MOTHIM,e.COMBEE,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.LILLIPUP,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DRILBUR,e.EXCADRILL,e.TYMPOLE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.MINCCINO,e.CUBCHOO,e.BEARTIC,e.SHELMET,e.STUNFISK,e.GOLETT,e.GOLURK,e.BOUFFALANT,e.LANDORUS,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ROCKRUFF,[e.LYCANROC,"midday","midnight"],e.MUDBRAY,e.MUDSDALE,e.SALANDIT,e.SALAZZLE,e.SANDYGAST,e.PALOSSAND,e.CINDERACE,e.SKWOVET,e.GREEDENT,e.ROLYCOLY,e.CARKOL,e.SILICOBRA,e.SANDACONDA,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.LECHONK,e.OINKOLOGNE,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.TADBULB,e.BELLIBOLT,e.SHROODLE,e.GRAFAIAI,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.WIGLETT,e.WUGTRIO,e.CYCLIZAR,e.ORTHWORM,e.GREAVARD,e.HOUNDSTONE,e.CLODSIRE,e.DUDUNSPARCE,e.GREAT_TUSK,e.IRON_TREADS,e.WO_CHIEN,e.TING_LU,e.KORAIDON,e.MUNKIDORI,[e.WORMADAM,"sandy"],e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_STUNFISK,e.PALDEA_WOOPER],[t.SPIKES]:[e.SANDSHREW,e.SANDSLASH,e.SHELLDER,e.CLOYSTER,e.OMANYTE,e.OMASTAR,e.MEW,e.SUDOWOODO,e.WOOPER,e.QUAGSIRE,e.PINECO,e.FORRETRESS,e.GLIGAR,e.QWILFISH,e.HERACROSS,e.DELIBIRD,e.SKARMORY,e.ROSELIA,e.CACNEA,e.CACTURNE,e.WHISCASH,e.SNORUNT,e.GLALIE,e.GROUDON,e.BUDEW,e.ROSERADE,e.VESPIQUEN,e.GASTRODON,e.BONSLY,e.GARCHOMP,e.GLISCOR,e.FROSLASS,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.TRUBBISH,e.GARBODOR,e.FERROSEED,e.FERROTHORN,e.SHELMET,e.ACCELGOR,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.CARBINK,e.KLEFKI,e.DIANCIE,e.WIMPOD,e.GOLISOPOD,e.MAGEARNA,e.NAGANADEL,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.PINCURCHIN,e.OVERQWIL,e.MEOWSCARADA,e.TAROUNTULA,e.SPIDOPS,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.CLODSIRE,e.SANDY_SHOCKS,e.IRON_THORNS,e.TING_LU,e.OGERPON,[e.DEOXYS,"defense"],e.ALOLA_SANDSLASH,e.HISUI_QWILFISH,e.PALDEA_WOOPER],[t.ICY_WIND]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.RATTATA,e.RATICATE,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.JYNX,e.TAUROS,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.SNORLAX,e.ARTICUNO,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.CHINCHOU,e.LANTURN,e.CLEFFA,e.IGGLYBUFF,e.MARILL,e.AZUMARILL,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.QWILFISH,e.SNEASEL,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.KINGDRA,e.PORYGON2,e.SMOOCHUM,e.MILTANK,e.BLISSEY,e.SUICUNE,e.TYRANITAR,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SHIFTRY,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.AZURILL,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.AGGRON,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.SPOINK,e.GRUMPIG,e.SPINDA,e.ZANGOOSE,e.LUNATONE,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.METANG,e.METAGROSS,e.REGICE,e.LATIAS,e.LATIOS,e.KYOGRE,e.RAYQUAZA,e.JIRACHI,[e.DEOXYS,"","speed"],e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIDOOF,e.BIBAREL,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.HONCHKROW,e.CHINGLING,e.MIME_JR,e.HAPPINY,e.SPIRITOMB,e.MUNCHLAX,e.CROAGUNK,e.TOXICROAK,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.GLACEON,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.PALKIA,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PANPOUR,e.SIMIPOUR,e.AUDINO,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.BASCULIN,e.SIGILYPH,e.TIRTOUGA,e.CARRACOSTA,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.GOLETT,e.GOLURK,e.TORNADUS,e.KYUREM,e.KELDEO,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.AMAURA,e.AURORUS,e.BERGMITE,e.AVALUGG,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.CRABOMINABLE,e.ORICORIO,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.GOLISOPOD,e.TYPE_NULL,e.SILVALLY,e.BRUXISH,e.DRAMPA,e.TAPU_FINI,e.LUNALA,e.PHEROMOSA,e.INTELEON,e.CRAMORANT,e.OBSTAGOON,e.CURSOLA,e.MR_RIME,e.SNOM,e.FROSMOTH,e.EISCUE,e.ARCTOZOLT,e.ARCTOVISH,e.GLASTRIER,e.BASCULEGION,e.OVERQWIL,e.QUAQUAVAL,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.CETODDLE,e.CETITAN,e.VELUZA,e.TATSUGIRI,e.FLUTTER_MANE,e.IRON_BUNDLE,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.CHIEN_PAO,e.IRON_VALIANT,e.FEZANDIPITI,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_MAROWAK,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,[e.CALYREX,"ice"],e.HISUI_QWILFISH,e.HISUI_SAMUROTT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_AVALUGG],[t.OUTRAGE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BEEDRILL,e.NIDOQUEEN,e.NIDOKING,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.MAROWAK,e.RHYDON,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.SNORLAX,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.MEGANIUM,e.FERALIGATR,e.AMPHAROS,e.GRANBULL,e.KINGDRA,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.SCEPTILE,e.SWAMPERT,e.VIGOROTH,e.SLAKING,e.EXPLOUD,e.AGGRON,e.VIBRAVA,e.FLYGON,e.SWABLU,e.ALTARIA,e.BARBOACH,e.WHISCASH,e.TROPIUS,e.BAGON,e.SHELGON,e.SALAMENCE,e.LATIAS,e.LATIOS,e.RAYQUAZA,e.TORTERRA,e.RAMPARDOS,e.BASTIODON,e.GIBLE,e.GABITE,e.GARCHOMP,e.ABOMASNOW,e.RHYPERIOR,e.DIALGA,e.PALKIA,e.GIRATINA,e.ARCEUS,e.SERPERIOR,e.KROOKODILE,e.SCRAFTY,e.ARCHEOPS,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.DRUDDIGON,e.BOUFFALANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.PANGORO,e.SKRELP,e.DRAGALGE,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.GOOMY,e.SLIGGOO,e.GOODRA,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.ZYGARDE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.SILVALLY,e.TURTONATOR,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.SOLGALEO,e.BUZZWOLE,e.PHEROMOSA,e.GUZZLORD,e.NECROZMA,e.MARSHADOW,e.NAGANADEL,e.ZERAORA,e.FLAPPLE,e.APPLETUN,e.SANDACONDA,e.MORPEKO,e.COPPERAJAH,e.DRACOZOLT,e.DRACOVISH,e.DURALUDON,e.DRAKLOAK,e.DRAGAPULT,e.ETERNATUS,e.REGIDRAGO,e.GLASTRIER,e.BASCULEGION,e.ENAMORUS,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.MABOSSTIFF,e.PALAFIN,e.CYCLIZAR,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.DUDUNSPARCE,e.BRUTE_BONNET,e.IRON_JUGULIS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.DIPPLIN,e.OKIDOGI,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,[e.LYCANROC,"midnight","dusk"],[e.CALYREX,"ice"],e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.PALDEA_TAUROS],[t.SANDSTORM]:[e.CHARIZARD,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.JIGGLYPUFF,e.WIGGLYTUFF,e.DIGLETT,e.DUGTRIO,e.GEODUDE,e.GRAVELER,e.GOLEM,e.MAGNEMITE,e.MAGNETON,e.GRIMER,e.MUK,e.ONIX,e.CUBONE,e.MAROWAK,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.TAUROS,e.GYARADOS,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEWTWO,e.MEW,e.SUDOWOODO,e.WOOPER,e.QUAGSIRE,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SCIZOR,e.SHUCKLE,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.SKARMORY,e.PHANPY,e.DONPHAN,e.HITMONTOP,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.NINCADA,e.NINJASK,e.SHEDINJA,e.NOSEPASS,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.CASTFORM,e.ABSOL,e.RELICANTH,e.METANG,e.METAGROSS,e.REGIROCK,e.REGISTEEL,e.LATIAS,e.LATIOS,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.TORTERRA,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.SHELLOS,e.GASTRODON,e.BRONZOR,e.BRONZONG,e.BONSLY,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.HIPPOPOTAS,e.HIPPOWDON,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.GLISCOR,e.MAMOSWINE,e.PROBOPASS,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.ARCEUS,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DRILBUR,e.EXCADRILL,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DWEBBLE,e.CRUSTLE,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.ACCELGOR,e.STUNFISK,e.PAWNIARD,e.BISHARP,e.MANDIBUZZ,e.DURANT,e.COBALION,e.TERRAKION,e.TORNADUS,e.LANDORUS,e.BUNNELBY,e.DIGGERSBY,e.BINACLE,e.BARBARACLE,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.CARBINK,e.KLEFKI,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.YUNGOOS,e.GUMSHOOS,e.ORICORIO,e.ROCKRUFF,e.LYCANROC,e.MUDBRAY,e.MUDSDALE,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.NIHILEGO,e.STAKATAKA,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.SILICOBRA,e.SANDACONDA,e.CURSOLA,e.RUNERIGUS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.ZAMAZENTA,e.KLEAVOR,e.NACLI,e.NACLSTACK,e.GARGANACL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.VAROOM,e.REVAVROOM,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.CLODSIRE,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_THORNS,e.GHOLDENGO,e.TING_LU,e.OGERPON,e.IRON_BOULDER,[e.WORMADAM,"sandy"],e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_SLOWBRO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_CORSOLA,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.PALDEA_WOOPER],[t.GIGA_DRAIN]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.BUTTERFREE,e.BEEDRILL,e.EKANS,e.ARBOK,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.EXEGGCUTE,e.EXEGGUTOR,e.TANGELA,e.KABUTO,e.KABUTOPS,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.NATU,e.XATU,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNKERN,e.SUNFLORA,e.YANMA,e.PINECO,e.FORRETRESS,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.NINCADA,e.NINJASK,e.SHEDINJA,e.SABLEYE,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.LILEEP,e.CRADILY,e.TROPIUS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.KRICKETUNE,e.BUDEW,e.ROSERADE,e.WORMADAM,e.MOTHIM,e.CHERUBI,e.CHERRIM,e.CARNIVINE,e.SNOVER,e.ABOMASNOW,e.TANGROWTH,e.YANMEGA,e.LEAFEON,e.UXIE,e.SHAYMIN,e.ARCEUS,e.SNIVY,e.SERVINE,e.SERPERIOR,e.PANSAGE,e.SIMISAGE,e.WOOBAT,e.SWOOBAT,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.MARACTUS,e.TRUBBISH,e.GARBODOR,e.DEERLING,e.SAWSBUCK,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.EELEKTRIK,e.EELEKTROSS,e.SHELMET,e.ACCELGOR,e.HEATMOR,e.LARVESTA,e.VOLCARONA,e.VIRIZION,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.VIVILLON,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.SANDYGAST,e.PALOSSAND,e.MIMIKYU,e.DHELMISE,e.TAPU_BULU,e.CELESTEELA,e.KARTANA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.ORBEETLE,e.GOSSIFLEUR,e.ELDEGOSS,e.FLAPPLE,e.APPLETUN,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.CURSOLA,e.ALCREMIE,e.FROSMOTH,e.ZARUDE,e.CALYREX,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.TAROUNTULA,e.SPIDOPS,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.CAPSAKID,e.SCOVILLAIN,e.BRUTE_BONNET,e.SLITHER_WING,e.WO_CHIEN,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OGERPON,e.HYDRAPPLE,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ETERNAL_FLOETTE,e.GALAR_CORSOLA,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE],[t.ENDURE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.TYPE_NULL,e.SILVALLY,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.PECHARUNT,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.CHARM]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.PIKACHU,e.RAICHU,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ODDISH,e.GLOOM,e.VILEPLUME,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.GROWLITHE,e.ARCANINE,e.PONYTA,e.RAPIDASH,e.CHANSEY,e.MR_MIME,e.JYNX,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.SNORLAX,e.MEW,e.SENTRET,e.FURRET,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.ESPEON,e.UMBREON,e.MISDREAVUS,e.WOBBUFFET,e.SNUBBULL,e.GRANBULL,e.TEDDIURSA,e.URSARING,e.SWINUB,e.PILOSWINE,e.PHANPY,e.DONPHAN,e.SMOOCHUM,e.MILTANK,e.BLISSEY,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SHROOMISH,e.BRELOOM,e.AZURILL,e.SKITTY,e.DELCATTY,e.PLUSLE,e.MINUN,e.ILLUMISE,e.NUMEL,e.CAMERUPT,e.CHIMECHO,e.WYNAUT,e.LUVDISC,e.LATIAS,e.JIRACHI,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.PACHIRISU,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.GLAMEOW,e.PURUGLY,e.MIME_JR,e.HAPPINY,e.MUNCHLAX,e.FINNEON,e.LUMINEON,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.MAMOSWINE,e.GALLADE,e.FROSLASS,e.MESPRIT,e.PHIONE,e.MANAPHY,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.WOOBAT,e.SWOOBAT,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.CUBCHOO,e.BEARTIC,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLABEBE,e.FLOETTE,e.FLORGES,e.FURFROU,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.TYRUNT,e.TYRANTRUM,e.SYLVEON,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.DIANCIE,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.KOMALA,e.MIMIKYU,e.TAPU_LELE,e.POIPOLE,e.NAGANADEL,e.GOSSIFLEUR,e.ELDEGOSS,e.YAMPER,e.BOLTUND,e.TOXEL,e.TOXTRICITY,e.HATENNA,e.HATTREM,e.HATTERENE,e.PERRSERKER,e.MR_RIME,e.MILCERY,e.ALCREMIE,e.URSALUNA,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.MASCHIFF,e.MABOSSTIFF,e.FINIZEN,e.PALAFIN,e.GREAVARD,e.HOUNDSTONE,e.CETODDLE,e.CETITAN,e.FLUTTER_MANE,e.FEZANDIPITI,e.OGERPON,e.ALOLA_RAICHU,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_MR_MIME,[e.INDEEDEE,"female"],e.HISUI_LILLIGANT,e.HISUI_SLIGGOO,e.HISUI_GOODRA],[t.FALSE_SWIPE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BEEDRILL,e.SPEAROW,e.FEAROW,e.SANDSHREW,e.SANDSLASH,e.PARAS,e.PARASECT,e.MEOWTH,e.PERSIAN,e.FARFETCHD,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.SCYTHER,e.PINSIR,e.JOLTEON,e.MEW,e.GLIGAR,e.SCIZOR,e.HERACROSS,e.SNEASEL,e.GROVYLE,e.SCEPTILE,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.MAWILE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.CORPHISH,e.CRAWDAUNT,e.ANORITH,e.ARMALDO,e.ABSOL,e.EMPOLEON,e.KRICKETUNE,e.GIBLE,e.GABITE,e.GARCHOMP,e.SKORUPI,e.DRAPION,e.WEAVILE,e.GLISCOR,e.GALLADE,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.LEAVANNY,e.KARRABLAST,e.ESCAVALIER,e.AXEW,e.FRAXURE,e.HAXORUS,e.PAWNIARD,e.BISHARP,e.COBALION,e.TERRAKION,e.VIRIZION,e.KELDEO,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.PANCHAM,e.PANGORO,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.BINACLE,e.BARBARACLE,e.HAWLUCHA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.FOMANTIS,e.LURANTIS,e.GOLISOPOD,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_BULU,e.BUZZWOLE,e.PHEROMOSA,e.KARTANA,e.MAGEARNA,e.MARSHADOW,e.ZERAORA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.CHEWTLE,e.DREDNAW,e.PERRSERKER,e.FALINKS,e.ZACIAN,e.URSHIFU,e.KLEAVOR,e.SNEASLER,e.TAROUNTULA,e.SPIDOPS,e.CERULEDGE,e.KINGAMBIT,e.BAXCALIBUR,e.CHIEN_PAO,e.IRON_VALIANT,e.IRON_LEAVES,e.OGERPON,e.ALOLA_SANDSLASH,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_DECIDUEYE],[t.SWAGGER]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.BLACEPHALON,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.WOOLOO,e.TOXTRICITY,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.PERRSERKER,e.MORPEKO,e.CUFANT,e.ZARUDE,e.SQUAWKABILLY,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.VAROOM,e.REVAVROOM,e.ANNIHILAPE,e.CHI_YU,e.FEZANDIPITI,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_SLOWKING,e.PALDEA_TAUROS],[t.STEEL_WING]:[e.CHARIZARD,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.SPEAROW,e.FEAROW,e.ZUBAT,e.GOLBAT,e.FARFETCHD,e.DODUO,e.DODRIO,e.SCYTHER,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.TOGETIC,e.NATU,e.XATU,e.YANMA,e.MURKROW,e.GLIGAR,e.SCIZOR,e.DELIBIRD,e.SKARMORY,e.LUGIA,e.HO_OH,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.VIBRAVA,e.FLYGON,e.SWABLU,e.ALTARIA,e.TROPIUS,e.SALAMENCE,e.LATIAS,e.LATIOS,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.HONCHKROW,e.CHATOT,e.TOGEKISS,e.YANMEGA,e.GLISCOR,e.GIRATINA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.LEAVANNY,e.SIGILYPH,e.ARCHEN,e.ARCHEOPS,e.DUCKLETT,e.SWANNA,e.ELGYEM,e.BEHEEYEM,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HYDREIGON,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.HAWLUCHA,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.ORICORIO,e.SILVALLY,e.DRAMPA,e.TAPU_KOKO,e.CORVIKNIGHT,e.CRAMORANT,e.SIRFETCHD,e.DRAKLOAK,e.DRAGAPULT,e.GALAR_FARFETCHD,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES],[t.ATTRACT]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINJASK,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.LATIAS,e.LATIOS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.HEATRAN,e.CRESSELIA,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.APPLIN,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.KUBFU,e.URSHIFU,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.DIPPLIN,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.TERAPAGOS,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.SLEEP_TALK]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.COMBEE,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.PECHARUNT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.HEAL_BELL]:[e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.LICKITUNG,e.CHANSEY,e.JYNX,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.ARTICUNO,e.DRAGONITE,e.MEW,e.CHINCHOU,e.LANTURN,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.ESPEON,e.UMBREON,e.MISDREAVUS,e.SNUBBULL,e.GRANBULL,e.SMOOCHUM,e.MILTANK,e.BLISSEY,e.CELEBI,e.POOCHYENA,e.MIGHTYENA,e.GARDEVOIR,e.SKITTY,e.DELCATTY,e.SPOINK,e.GRUMPIG,e.SWABLU,e.ALTARIA,e.CHIMECHO,e.KRICKETUNE,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.CHINGLING,e.HAPPINY,e.LICKILICKY,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.UXIE,e.PHIONE,e.MANAPHY,e.MUNNA,e.MUSHARNA,e.AUDINO,e.PETILIL,e.LILLIGANT,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.MELOETTA,e.FLABEBE,e.FLOETTE,e.FLORGES,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.SYLVEON,e.DIANCIE,e.COMFEY,e.MAGEARNA,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.HISUI_LILLIGANT,e.ETERNAL_FLOETTE],[t.RETURN]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.PECHARUNT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.FRUSTRATION]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.PECHARUNT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.SAFEGUARD]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.BUTTERFREE,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.VILEPLUME,e.GROWLITHE,e.ARCANINE,e.ABRA,e.KADABRA,e.ALAKAZAM,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.DROWZEE,e.HYPNO,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.SCYTHER,e.LAPRAS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.LEDYBA,e.LEDIAN,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.SUNKERN,e.SUNFLORA,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.WOBBUFFET,e.SCIZOR,e.SHUCKLE,e.CORSOLA,e.BLISSEY,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.BEAUTIFLY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SHROOMISH,e.BRELOOM,e.SKITTY,e.DELCATTY,e.SPINDA,e.SWABLU,e.ALTARIA,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.MILOTIC,e.TROPIUS,e.CHIMECHO,e.WYNAUT,e.SNORUNT,e.GLALIE,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.WORMADAM,e.MOTHIM,e.CHERUBI,e.CHERRIM,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.HAPPINY,e.FINNEON,e.LUMINEON,e.SNOVER,e.ABOMASNOW,e.TOGEKISS,e.GALLADE,e.FROSLASS,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.MARACTUS,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DEERLING,e.SAWSBUCK,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.GOLETT,e.GOLURK,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.KELDEO,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.VIVILLON,e.FLABEBE,e.FLOETTE,e.FLORGES,e.ESPURR,e.MEOWSTIC,e.SWIRLIX,e.SLURPUFF,e.BINACLE,e.BARBARACLE,e.AMAURA,e.AURORUS,e.SYLVEON,e.CARBINK,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.MAREANIE,e.TOXAPEX,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PYUKUMUKU,e.MINIOR,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.STAKATAKA,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.DOTTLER,e.ORBEETLE,e.APPLETUN,e.HATENNA,e.HATTREM,e.HATTERENE,e.CURSOLA,e.MR_RIME,e.RUNERIGUS,e.ALCREMIE,e.FROSMOTH,e.STONJOURNER,e.ZAMAZENTA,e.CALYREX,e.ARBOLIVA,e.RABSCA,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ETERNAL_FLOETTE,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_YAMASK,[e.INDEEDEE,"female"]],[t.PAIN_SPLIT]:[e.ARBOK,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.KOFFING,e.WEEZING,e.TANGELA,e.STARYU,e.STARMIE,e.PORYGON,e.MEW,e.IGGLYBUFF,e.NATU,e.XATU,e.MISDREAVUS,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.QWILFISH,e.SLUGMA,e.MAGCARGO,e.HOUNDOUR,e.HOUNDOOM,e.PORYGON2,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.NOSEPASS,e.SABLEYE,e.MAWILE,e.MEDITITE,e.MEDICHAM,e.GULPIN,e.SWALOT,e.LUNATONE,e.SOLROCK,e.LILEEP,e.CRADILY,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.DEOXYS,e.RAMPARDOS,e.SHELLOS,e.GASTRODON,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.SPIRITOMB,e.TANGROWTH,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.GIRATINA,e.MUNNA,e.MUSHARNA,e.AUDINO,e.THROH,e.SAWK,e.YAMASK,e.COFAGRIGUS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.STUNFISK,e.KELDEO,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.ZYGARDE,e.MAREANIE,e.TOXAPEX,e.STUFFUL,e.BEWEAR,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.MIMIKYU,e.BRUXISH,e.DHELMISE,e.NIHILEGO,e.MAGEARNA,e.BLACEPHALON,e.CLOBBOPUS,e.GRAPPLOCT,e.POLTEAGEIST,e.HATTERENE,e.ALCREMIE,e.PINCURCHIN,e.SPECTRIER,e.BASCULEGION,e.OVERQWIL,e.SPIDOPS,e.MABOSSTIFF,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.WUGTRIO,e.GREAVARD,e.HOUNDSTONE,e.VELUZA,e.DUDUNSPARCE,e.FLUTTER_MANE,e.POLTCHAGEIST,e.SINISTCHA,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_WEEZING,e.GALAR_MOLTRES,e.GALAR_STUNFISK,e.HISUI_QWILFISH,e.HISUI_ZORUA,e.HISUI_ZOROARK],[t.MEGAHORN]:[e.NIDOKING,e.RAPIDASH,e.SEEL,e.DEWGONG,e.RHYHORN,e.RHYDON,e.GOLDEEN,e.SEAKING,e.TAUROS,e.LAPRAS,e.MEW,e.SPINARAK,e.ARIADOS,e.HERACROSS,e.STANTLER,e.ABSOL,e.RHYPERIOR,e.SAMUROTT,e.SCOLIPEDE,e.SAWSBUCK,e.KARRABLAST,e.ESCAVALIER,e.BOUFFALANT,e.COBALION,e.TERRAKION,e.VIRIZION,e.KELDEO,e.XERNEAS,e.TAPU_BULU,e.CELESTEELA,e.DREDNAW,e.FALINKS,e.GLASTRIER,e.WYRDEER,e.CLODSIRE,e.GREAT_TUSK,e.IRON_TREADS,e.IRON_LEAVES,e.IRON_BOULDER,e.GALAR_RAPIDASH,[e.CALYREX,"ice"],e.HISUI_SAMUROTT],[t.BATON_PASS]:[e.BUTTERFREE,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.VENONAT,e.VENOMOTH,e.POLIWRATH,e.RAPIDASH,e.FARFETCHD,e.HYPNO,e.MR_MIME,e.SCYTHER,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.ZAPDOS,e.MEW,e.SENTRET,e.FURRET,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.ESPEON,e.UMBREON,e.GIRAFARIG,e.DUNSPARCE,e.GLIGAR,e.SCIZOR,e.DELIBIRD,e.CELEBI,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.SURSKIT,e.MASQUERAIN,e.NINJASK,e.SKITTY,e.MAWILE,e.MEDITITE,e.MEDICHAM,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.SPINDA,e.ZANGOOSE,e.LUNATONE,e.SOLROCK,e.CHIMECHO,e.ABSOL,e.HUNTAIL,e.GOREBYSS,e.LATIAS,e.LATIOS,e.JIRACHI,e.KRICKETUNE,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.CHINGLING,e.MIME_JR,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.GLISCOR,e.UXIE,e.MESPRIT,e.AZELF,e.VICTINI,e.PATRAT,e.WATCHOG,e.PURRLOIN,e.LIEPARD,e.MUNNA,e.WOOBAT,e.SWOOBAT,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.SCOLIPEDE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.ALOMOMOLA,e.SHELMET,e.ACCELGOR,e.MIENFOO,e.MIENSHAO,e.DURANT,e.MELOETTA,e.FLABEBE,e.FLOETTE,e.FLORGES,e.INKAY,e.MALAMAR,e.SYLVEON,e.HAWLUCHA,e.DIANCIE,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.PASSIMIAN,e.PYUKUMUKU,e.MAGEARNA,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.DUBWOOL,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.PERRSERKER,e.MR_RIME,e.MORPEKO,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.CALYREX,e.KLEAVOR,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.FIDOUGH,e.DACHSBUN,e.SHROODLE,e.GRAFAIAI,e.FLITTLE,e.ESPATHRA,e.TATSUGIRI,e.FARIGIRAF,e.DUDUNSPARCE,e.SCREAM_TAIL,e.MUNKIDORI,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ETERNAL_FLOETTE,e.GALAR_RAPIDASH,e.GALAR_MR_MIME,[e.INDEEDEE,"female"],e.HISUI_DECIDUEYE],[t.ENCORE]:[e.PIKACHU,e.RAICHU,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.SEEL,e.DEWGONG,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.HITMONCHAN,e.MR_MIME,e.JYNX,e.SNORLAX,e.DRAGONITE,e.MEW,e.LEDYBA,e.LEDIAN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNKERN,e.SUNFLORA,e.WOOPER,e.QUAGSIRE,e.WOBBUFFET,e.SNUBBULL,e.GRANBULL,e.SHUCKLE,e.PHANPY,e.DONPHAN,e.SMOOCHUM,e.LOMBRE,e.LUDICOLO,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.AZURILL,e.SABLEYE,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.GULPIN,e.SWALOT,e.SPOINK,e.GRUMPIG,e.SPINDA,e.CACNEA,e.CACTURNE,e.SHUPPET,e.BANETTE,e.CHIMECHO,e.WYNAUT,e.SPHEAL,e.SEALEO,e.WALREIN,e.JIRACHI,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PACHIRISU,e.BUNEARY,e.LOPUNNY,e.MIME_JR,e.CHATOT,e.MUNCHLAX,e.CROAGUNK,e.TOXICROAK,e.LUMINEON,e.TOGEKISS,e.GALLADE,e.UXIE,e.MESPRIT,e.AZELF,e.VICTINI,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PURRLOIN,e.LIEPARD,e.AUDINO,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.CUBCHOO,e.BEARTIC,e.SHELMET,e.ACCELGOR,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.SPRITZEE,e.AROMATISSE,e.AMAURA,e.AURORUS,e.HAWLUCHA,e.DIANCIE,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.TOUCANNON,e.SALAZZLE,e.COMFEY,e.ORANGURU,e.TOGEDEMARU,e.MAGEARNA,e.BLACEPHALON,e.TOXEL,e.TOXTRICITY,e.MR_RIME,e.ALCREMIE,[e.INDEEDEE,"male"],e.ZARUDE,e.CALYREX,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.ARBOLIVA,e.SHROODLE,e.GRAFAIAI,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.FINIZEN,e.PALAFIN,e.ANNIHILAPE,e.SCREAM_TAIL,e.IRON_BUNDLE,e.IRON_VALIANT,e.OGERPON,e.ALOLA_RAICHU,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.GALAR_MR_MIME,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT],[t.IRON_TAIL]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.RATTATA,e.RATICATE,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.ABRA,e.KADABRA,e.ALAKAZAM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.FARFETCHD,e.SEEL,e.DEWGONG,e.ONIX,e.CUBONE,e.MAROWAK,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.ELECTABUZZ,e.MAGMAR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.AERODACTYL,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.PICHU,e.CLEFFA,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.AIPOM,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.SLOWKING,e.GIRAFARIG,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.GRANBULL,e.SNEASEL,e.HOUNDOUR,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BRELOOM,e.AZURILL,e.SKITTY,e.DELCATTY,e.ARON,e.LAIRON,e.AGGRON,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.FLYGON,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.KECLEON,e.ABSOL,e.SPHEAL,e.SEALEO,e.WALREIN,e.SALAMENCE,e.GROUDON,e.RAYQUAZA,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.BIDOOF,e.BIBAREL,e.SHINX,e.LUXIO,e.LUXRAY,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.GLAMEOW,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.GIBLE,e.GABITE,e.GARCHOMP,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.MAGMORTAR,e.LEAFEON,e.GLACEON,e.GLISCOR,e.PORYGON_Z,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.GIRATINA,e.ARCEUS,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.AUDINO,e.SCOLIPEDE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.MINCCINO,e.CINCCINO,e.EMOLGA,e.EELEKTRIK,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.DRUDDIGON,e.HYDREIGON,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.BUNNELBY,e.DIGGERSBY,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.DEDENNE,e.GOOMY,e.SLIGGOO,e.GOODRA,e.NOIBAT,e.NOIVERN,e.ZYGARDE,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.YUNGOOS,e.GUMSHOOS,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.SALANDIT,e.SALAZZLE,e.PASSIMIAN,e.TURTONATOR,e.TOGEDEMARU,e.BRUXISH,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.SOLGALEO,e.GUZZLORD,e.POIPOLE,e.NAGANADEL,e.ZERAORA,e.SKWOVET,e.GREEDENT,e.DREDNAW,e.OBSTAGOON,e.PERRSERKER,e.DRACOZOLT,e.ARCTOZOLT,e.ZACIAN,e.ZAMAZENTA,e.ZARUDE,e.WYRDEER,e.SNEASLER,e.CYCLIZAR,e.ORTHWORM,e.ANNIHILAPE,e.FARIGIRAF,e.DUDUNSPARCE,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_SLIGGOO,e.HISUI_GOODRA],[t.METAL_CLAW]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SANDSHREW,e.SANDSLASH,e.PARAS,e.MEOWTH,e.PERSIAN,e.KRABBY,e.KINGLER,e.MEW,e.TOTODILE,e.GLIGAR,e.SCIZOR,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SKARMORY,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.SABLEYE,e.ARON,e.LAIRON,e.AGGRON,e.ZANGOOSE,e.CORPHISH,e.CRAWDAUNT,e.ANORITH,e.ARMALDO,e.METANG,e.METAGROSS,e.REGISTEEL,e.GROUDON,e.PRINPLUP,e.EMPOLEON,e.GIBLE,e.GABITE,e.GARCHOMP,e.RIOLU,e.LUCARIO,e.WEAVILE,e.GLISCOR,e.DIALGA,e.HEATRAN,e.DRILBUR,e.EXCADRILL,e.GARBODOR,e.FERROSEED,e.FERROTHORN,e.CUBCHOO,e.BEARTIC,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.BRAVIARY,e.DURANT,e.COBALION,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.WIMPOD,e.KOMALA,e.HAKAMO_O,e.KOMMO_O,e.SOLGALEO,e.NECROZMA,e.CORVIKNIGHT,e.PERRSERKER,e.DURALUDON,e.ZACIAN,e.ZAMAZENTA,e.KUBFU,e.URSHIFU,e.URSALUNA,e.SNEASLER,e.PAWMI,e.PAWMO,e.PAWMOT,e.KLAWF,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.KINGAMBIT,e.IRON_THORNS,e.ROARING_MOON,e.OKIDOGI,e.ARCHALUDON,e.IRON_CROWN,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_MEOWTH,e.GALAR_STUNFISK,e.HISUI_SNEASEL,e.HISUI_BRAVIARY,e.BLOODMOON_URSALUNA],[t.SYNTHESIS]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.EXEGGCUTE,e.EXEGGUTOR,e.TANGELA,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNKERN,e.SUNFLORA,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.SHROOMISH,e.BRELOOM,e.ROSELIA,e.CACNEA,e.CACTURNE,e.LILEEP,e.CRADILY,e.TROPIUS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.BUDEW,e.ROSERADE,[e.WORMADAM,"plant"],e.CHERUBI,e.CHERRIM,e.CARNIVINE,e.SNOVER,e.ABOMASNOW,e.TANGROWTH,e.LEAFEON,e.SHAYMIN,e.SNIVY,e.SERVINE,e.SERPERIOR,e.PANSAGE,e.SIMISAGE,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.PETILIL,e.LILLIGANT,e.MARACTUS,e.DEERLING,e.SAWSBUCK,e.FOONGUS,e.AMOONGUSS,e.VIRIZION,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PUMPKABOO,e.GOURGEIST,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.DHELMISE,e.TAPU_BULU,e.KARTANA,e.GOSSIFLEUR,e.ELDEGOSS,e.ZARUDE,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.BRUTE_BONNET,e.OGERPON,e.ALOLA_EXEGGUTOR,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE],[t.HIDDEN_POWER]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BURMY,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.PECHARUNT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.RAIN_DANCE]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.POLITOED,e.HOPPIP,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.SPOINK,e.GRUMPIG,e.SPINDA,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.BASCULIN,e.MARACTUS,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.VOLCARONA,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.BERGMITE,e.AVALUGG,e.XERNEAS,e.YVELTAL,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.LURANTIS,e.SHIINOTIC,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.TYPE_NULL,e.SILVALLY,e.KOMALA,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_FINI,e.XURKITREE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.GREEDENT,e.CORVIKNIGHT,e.CHEWTLE,e.DREDNAW,e.APPLETUN,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXTRICITY,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.MR_RIME,e.RUNERIGUS,e.FALINKS,e.PINCURCHIN,e.EISCUE,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.ZAMAZENTA,e.ETERNATUS,e.REGIELEKI,e.WYRDEER,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.NACLI,e.NACLSTACK,e.GARGANACL,e.TADBULB,e.BELLIBOLT,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.SCREAM_TAIL,e.SLITHER_WING,e.IRON_BUNDLE,e.IRON_JUGULIS,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.WO_CHIEN,e.CHIEN_PAO,e.WALKING_WAKE,e.OGERPON,e.HYDRAPPLE,e.TERAPAGOS,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_YAMASK,e.GALAR_STUNFISK,[e.URSHIFU,"rapid-strike"],e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.SUNNY_DAY]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.MR_MIME,e.SCYTHER,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.SUDOWOODO,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGISTEEL,e.LATIAS,e.LATIOS,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.CHERUBI,e.CHERRIM,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.SCRAGGY,e.SCRAFTY,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.DEERLING,e.SAWSBUCK,e.FOONGUS,e.AMOONGUSS,e.FERROSEED,e.FERROTHORN,e.EELEKTROSS,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,[e.LYCANROC,"midday","midnight"],e.MUDBRAY,e.MUDSDALE,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.KOMALA,e.TURTONATOR,e.MIMIKYU,e.DRAMPA,e.DHELMISE,e.HAKAMO_O,e.KOMMO_O,e.TAPU_LELE,e.TAPU_BULU,e.SOLGALEO,e.LUNALA,e.XURKITREE,e.MAGEARNA,e.BLACEPHALON,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.GREEDENT,e.CORVISQUIRE,e.CORVIKNIGHT,e.GOSSIFLEUR,e.ELDEGOSS,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.FALINKS,e.STONJOURNER,e.DRACOZOLT,e.DRAKLOAK,e.DRAGAPULT,e.ZAMAZENTA,e.ETERNATUS,e.ZARUDE,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.ENAMORUS,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.BOMBIRDIER,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.ANNIHILAPE,e.FARIGIRAF,e.DUDUNSPARCE,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.WO_CHIEN,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.KORAIDON,e.WALKING_WAKE,e.DIPPLIN,e.OGERPON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.TERAPAGOS,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_SNEASEL,e.HISUI_LILLIGANT,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_DECIDUEYE,[e.PALDEA_TAUROS,"combat","blaze"],e.BLOODMOON_URSALUNA],[t.CRUNCH]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.BLASTOISE,e.RATTATA,e.RATICATE,e.EKANS,e.ARBOK,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.ZUBAT,e.GOLBAT,e.GROWLITHE,e.ARCANINE,e.RHYHORN,e.RHYDON,e.KANGASKHAN,e.GYARADOS,e.OMASTAR,e.AERODACTYL,e.SNORLAX,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.CROBAT,e.UMBREON,e.GIRAFARIG,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.TEDDIURSA,e.URSARING,e.HOUNDOUR,e.HOUNDOOM,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.POOCHYENA,e.MIGHTYENA,e.EXPLOUD,e.MAWILE,e.AGGRON,e.ELECTRIKE,e.MANECTRIC,e.CARVANHA,e.SHARPEDO,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.SEVIPER,e.CORPHISH,e.CRAWDAUNT,e.SNORUNT,e.GLALIE,e.WALREIN,e.HUNTAIL,e.BAGON,e.SHELGON,e.SALAMENCE,e.GROUDON,e.RAYQUAZA,e.TURTWIG,e.GROTLE,e.TORTERRA,e.BIDOOF,e.BIBAREL,e.SHINX,e.LUXIO,e.LUXRAY,e.CRANIDOS,e.BUIZEL,e.FLOATZEL,e.STUNKY,e.SKUNTANK,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CARNIVINE,e.RHYPERIOR,e.YANMEGA,e.GLISCOR,e.FROSLASS,e.HEATRAN,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISAGE,e.PANPOUR,e.SIMIPOUR,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.ZOROARK,e.EELEKTRIK,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.DRUDDIGON,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.CHESNAUGHT,e.LITLEO,e.PYROAR,e.PANCHAM,e.PANGORO,e.TYRUNT,e.TYRANTRUM,e.BERGMITE,e.AVALUGG,e.ZYGARDE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.ROCKRUFF,e.LYCANROC,e.DEWPIDER,e.ARAQUANID,e.SILVALLY,e.BRUXISH,e.SOLGALEO,e.GUZZLORD,e.SKWOVET,e.GREEDENT,e.THIEVUL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ARROKUDA,e.BARRASKEWDA,e.SIZZLIPEDE,e.CENTISKORCH,e.GRIMMSNARL,e.PERRSERKER,e.MORPEKO,e.DRACOVISH,e.ARCTOVISH,e.ZACIAN,e.ZAMAZENTA,e.ZARUDE,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.URSALUNA,e.BASCULEGION,e.OVERQWIL,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.MASCHIFF,e.MABOSSTIFF,e.CAPSAKID,e.SCOVILLAIN,e.CYCLIZAR,e.GREAVARD,e.HOUNDSTONE,e.VELUZA,e.DONDOZO,e.FARIGIRAF,e.SCREAM_TAIL,e.BRUTE_BONNET,e.IRON_JUGULIS,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.CHIEN_PAO,e.CHI_YU,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.OKIDOGI,e.GOUGING_FIRE,e.RAGING_BOLT,e.TERAPAGOS,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_MEOWTH,e.GALAR_STUNFISK,[e.URSHIFU,"single-strike"],[e.CALYREX,"ice","shadow"],e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_QWILFISH,e.HISUI_ZOROARK,e.HISUI_AVALUGG,e.BLOODMOON_URSALUNA],[t.PSYCH_UP]:[e.BUTTERFREE,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.EXEGGCUTE,e.EXEGGUTOR,e.LICKITUNG,e.CHANSEY,e.TANGELA,e.STARYU,e.STARMIE,e.MR_MIME,e.JYNX,e.PORYGON,e.SNORLAX,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.SUDOWOODO,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.DUNSPARCE,e.STEELIX,e.SNEASEL,e.PORYGON2,e.STANTLER,e.SMOOCHUM,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LUGIA,e.HO_OH,e.CELEBI,e.POOCHYENA,e.MIGHTYENA,e.NUZLEAF,e.SHIFTRY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.MEDITITE,e.MEDICHAM,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.SPOINK,e.GRUMPIG,e.SPINDA,e.SWABLU,e.ALTARIA,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.ABSOL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.BUDEW,e.ROSERADE,e.WORMADAM,e.MOTHIM,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.SPIRITOMB,e.FINNEON,e.LUMINEON,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.TANGROWTH,e.TOGEKISS,e.YANMEGA,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.WATCHOG,e.PURRLOIN,e.LIEPARD,e.MUNNA,e.MUSHARNA,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.ZORUA,e.ZOROARK,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.MIENFOO,e.MIENSHAO,e.VULLABY,e.MANDIBUZZ,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.COBALION,e.TERRAKION,e.VIRIZION,e.KELDEO,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.VIVILLON,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.HELIOPTILE,e.HELIOLISK,e.AMAURA,e.AURORUS,e.SYLVEON,e.CARBINK,e.KLEFKI,e.XERNEAS,e.DIANCIE,e.HOOPA,e.PRIMARINA,e.CUTIEFLY,e.RIBOMBEE,e.COMFEY,e.ORANGURU,e.GOLISOPOD,e.PYUKUMUKU,e.MINIOR,e.KOMALA,e.MIMIKYU,e.DRAMPA,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.MARSHADOW,e.INDEEDEE,e.RABSCA,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_EXEGGUTOR,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING],[t.SHADOW_BALL]:[e.BUTTERFREE,e.RATTATA,e.RATICATE,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.MEOWTH,e.PERSIAN,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.LICKITUNG,e.KOFFING,e.WEEZING,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.JYNX,e.TAUROS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.SNORLAX,e.MEWTWO,e.MEW,e.TYPHLOSION,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.AIPOM,e.YANMA,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SNEASEL,e.CORSOLA,e.HOUNDOUR,e.HOUNDOOM,e.PORYGON2,e.STANTLER,e.SMOOCHUM,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LUGIA,e.HO_OH,e.CELEBI,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.MEDITITE,e.MEDICHAM,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.SPOINK,e.GRUMPIG,e.SPINDA,e.CACTURNE,e.ZANGOOSE,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.GOREBYSS,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.BIDOOF,e.BIBAREL,e.BUDEW,e.ROSERADE,e.WORMADAM,e.MOTHIM,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.HAPPINY,e.SPIRITOMB,e.MUNCHLAX,e.LUCARIO,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.GIRATINA,e.CRESSELIA,e.MANAPHY,e.DARKRAI,e.ARCEUS,e.VICTINI,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.WHIMSICOTT,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.ZORUA,e.ZOROARK,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DEERLING,e.SAWSBUCK,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.GOLETT,e.GOLURK,e.VULLABY,e.MANDIBUZZ,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.MELOETTA,e.DELPHOX,e.MEOWSTIC,e.AEGISLASH,e.SKRELP,e.DRAGALGE,e.CLAWITZER,e.SYLVEON,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.HOOPA,e.DECIDUEYE,e.PRIMARINA,e.ORANGURU,e.PASSIMIAN,e.SANDYGAST,e.PALOSSAND,e.SILVALLY,e.MIMIKYU,e.DRAMPA,e.DHELMISE,e.TAPU_LELE,e.TAPU_FINI,e.LUNALA,e.MAGEARNA,e.MARSHADOW,e.BLACEPHALON,e.CINDERACE,e.INTELEON,e.DOTTLER,e.ORBEETLE,e.THIEVUL,e.SINISTEA,e.POLTEAGEIST,e.HATTERENE,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.MR_RIME,e.RUNERIGUS,e.INDEEDEE,e.DRAKLOAK,e.DRAGAPULT,e.ETERNATUS,e.SPECTRIER,e.WYRDEER,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.MEOWSCARADA,e.SKELEDIRGE,e.ARMAROUGE,e.CERULEDGE,e.BRAMBLIN,e.BRAMBLEGHAST,e.RABSCA,e.ESPATHRA,e.GREAVARD,e.HOUNDSTONE,e.ANNIHILAPE,e.FARIGIRAF,e.DUDUNSPARCE,e.FLUTTER_MANE,e.GIMMIGHOUL,e.GHOLDENGO,e.IRON_VALIANT,e.POLTCHAGEIST,e.SINISTCHA,e.MUNKIDORI,e.FEZANDIPITI,e.PECHARUNT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.MAROWAK,e.GALAR_MEOWTH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_YAMASK,[e.CALYREX,"shadow"],e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY],[t.FUTURE_SIGHT]:[e.PSYDUCK,e.GOLDUCK,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.DROWZEE,e.HYPNO,e.EXEGGUTOR,e.MR_MIME,e.JYNX,e.LAPRAS,e.MEWTWO,e.MEW,e.NOCTOWL,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MARILL,e.AZUMARILL,e.ESPEON,e.SLOWKING,e.GIRAFARIG,e.DELIBIRD,e.LUGIA,e.HO_OH,e.CELEBI,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SPOINK,e.LUNATONE,e.BARBOACH,e.WHISCASH,e.CLAYDOL,e.CASTFORM,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.ABSOL,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.JIRACHI,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.TOGEKISS,e.GALLADE,e.DUSKNOIR,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.ARCEUS,e.VICTINI,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.DARMANITAN,e.SIGILYPH,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.BEHEEYEM,e.DELPHOX,e.INKAY,e.MALAMAR,e.ORANGURU,e.TAPU_LELE,e.SOLGALEO,e.LUNALA,e.NECROZMA,e.DOTTLER,e.ORBEETLE,e.HATTERENE,e.MR_RIME,e.INDEEDEE,e.CALYREX,e.IRON_VALIANT,e.MUNKIDORI,e.IRON_CROWN,[e.MEOWSTIC,"female"],e.ALOLA_RAICHU,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_SLOWKING],[t.ROCK_SMASH]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BEEDRILL,e.RATTATA,e.RATICATE,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.PARAS,e.PARASECT,e.DIGLETT,e.DUGTRIO,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWHIRL,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWBRO,e.MUK,e.GENGAR,e.ONIX,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.SCYTHER,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.JOLTEON,e.FLAREON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEWTWO,e.MEW,e.BAYLEEF,e.MEGANIUM,e.QUILAVA,e.TYPHLOSION,e.CROCONAW,e.FERALIGATR,e.FURRET,e.LEDIAN,e.TOGEPI,e.TOGETIC,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.SLOWKING,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.TYROGUE,e.HITMONTOP,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.GULPIN,e.SWALOT,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.CLAYDOL,e.CRADILY,e.ANORITH,e.ARMALDO,e.KECLEON,e.DUSCLOPS,e.TROPIUS,e.ABSOL,e.SPHEAL,e.SEALEO,e.WALREIN,e.RELICANTH,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BUIZEL,e.FLOATZEL,e.GASTRODON,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.STUNKY,e.SKUNTANK,e.BRONZONG,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.DARKRAI,e.ARCEUS,e.VICTINI,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DRILBUR,e.EXCADRILL,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.ZOROARK,e.REUNICLUS,e.SAWSBUCK,e.ESCAVALIER,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.BINACLE,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.GOODRA,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.ZYGARDE,e.VOLCANION,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.CRABRAWLER,e.CRABOMINABLE,e.MUDBRAY,e.MUDSDALE,e.PASSIMIAN,e.GOLISOPOD,e.TAPU_BULU,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.CLOBBOPUS,e.GRAPPLOCT,e.OBSTAGOON,e.SIRFETCHD,e.FALINKS,e.CUFANT,e.COPPERAJAH,e.DURALUDON,e.KUBFU,e.URSHIFU,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.ENAMORUS,e.KLAWF,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.KORAIDON,e.ARCHALUDON,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MAROWAK,e.GALAR_FARFETCHD,e.GALAR_ZAPDOS,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.WHIRLPOOL]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.NIDOQUEEN,e.NIDOKING,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.KRABBY,e.KINGLER,e.LICKITUNG,e.RHYDON,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.TAUROS,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.SNORLAX,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.CHINCHOU,e.LANTURN,e.MARILL,e.AZUMARILL,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.QWILFISH,e.SNEASEL,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.MANTINE,e.KINGDRA,e.MILTANK,e.SUICUNE,e.TYRANITAR,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.WINGULL,e.PELIPPER,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.AGGRON,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.FEEBAS,e.MILOTIC,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.LATIAS,e.LATIOS,e.KYOGRE,e.RAYQUAZA,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIBAREL,e.RAMPARDOS,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.GARCHOMP,e.MUNCHLAX,e.FINNEON,e.LUMINEON,e.MANTYKE,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.PALKIA,e.PHIONE,e.MANAPHY,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.BASCULIN,e.TIRTOUGA,e.CARRACOSTA,e.DUCKLETT,e.SWANNA,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.WISHIWASHI,e.BRUXISH,e.DHELMISE,e.TAPU_FINI,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.CHEWTLE,e.DREDNAW,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.GRAPPLOCT,e.OBSTAGOON,e.CURSOLA,e.EISCUE,e.DRACOVISH,e.ARCTOVISH,e.BASCULEGION,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.WIGLETT,e.WUGTRIO,e.PALAFIN,e.TATSUGIRI,e.IRON_BUNDLE,e.WALKING_WAKE,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,[e.URSHIFU,"rapid-strike"],e.HISUI_SAMUROTT,[e.PALDEA_TAUROS,"aqua"]],[t.BEAT_UP]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.EKANS,e.ARBOK,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.MANKEY,e.PRIMEAPE,e.KANGASKHAN,e.MEW,e.AIPOM,e.GIRAFARIG,e.SNEASEL,e.HOUNDOUR,e.HOUNDOOM,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.VESPIQUEN,e.AMBIPOM,e.WEAVILE,e.COTTONEE,e.WHIMSICOTT,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.VANILLUXE,e.PAWNIARD,e.BISHARP,e.DURANT,e.ZWEILOUS,e.HYDREIGON,e.PANGORO,e.BINACLE,e.BARBARACLE,e.WISHIWASHI,e.SALANDIT,e.SALAZZLE,e.PASSIMIAN,e.MIMIKYU,e.NICKIT,e.THIEVUL,e.FALINKS,e.DRAKLOAK,e.DRAGAPULT,e.URSHIFU,e.TANDEMAUS,e.MAUSHOLD,e.BRAMBLIN,e.BRAMBLEGHAST,e.ANNIHILAPE,e.FARIGIRAF,e.KINGAMBIT,e.FEZANDIPITI,e.PIKACHU,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_PERSIAN],[t.UPROAR]:[e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.PIKACHU,e.RAICHU,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.FARFETCHD,e.DODUO,e.DODRIO,e.GASTLY,e.HAUNTER,e.GENGAR,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.TAUROS,e.GYARADOS,e.SNORLAX,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.CROBAT,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.MURKROW,e.MISDREAVUS,e.GIRAFARIG,e.DUNSPARCE,e.TEDDIURSA,e.URSARING,e.HOUNDOUR,e.HOUNDOOM,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.BLISSEY,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.CELEBI,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.WINGULL,e.PELIPPER,e.VIGOROTH,e.SLAKING,e.NINJASK,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.AZURILL,e.SKITTY,e.DELCATTY,e.ARON,e.LAIRON,e.AGGRON,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.ROSELIA,e.CARVANHA,e.SHARPEDO,e.SPOINK,e.GRUMPIG,e.SPINDA,e.VIBRAVA,e.FLYGON,e.SWABLU,e.ALTARIA,e.WHISCASH,e.CHIMECHO,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.KRICKETOT,e.KRICKETUNE,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.WORMADAM,e.VESPIQUEN,e.PACHIRISU,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.CHINGLING,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.MUNCHLAX,e.RHYPERIOR,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.PORYGON_Z,e.ROTOM,e.AZELF,e.HEATRAN,e.PHIONE,e.MANAPHY,e.VICTINI,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.KLINK,e.KLANG,e.KLINKLANG,e.ELGYEM,e.BEHEEYEM,e.STUNFISK,e.BOUFFALANT,e.VULLABY,e.MANDIBUZZ,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.TORNADUS,e.THUNDURUS,e.MELOETTA,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.FURFROU,e.BINACLE,e.BARBARACLE,e.HAWLUCHA,e.NOIBAT,e.NOIVERN,e.HOOPA,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.WISHIWASHI,e.PASSIMIAN,e.TURTONATOR,e.BRUXISH,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.POIPOLE,e.NAGANADEL,e.BLACEPHALON,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SKWOVET,e.GREEDENT,e.YAMPER,e.BOLTUND,e.CRAMORANT,e.TOXTRICITY,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.PERRSERKER,e.MR_RIME,e.FALINKS,e.MORPEKO,e.GLASTRIER,e.SPECTRIER,e.WYRDEER,e.BASCULEGION,e.ENAMORUS,e.LECHONK,e.OINKOLOGNE,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.FLITTLE,e.ESPATHRA,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.GREAVARD,e.HOUNDSTONE,e.ANNIHILAPE,e.FARIGIRAF,e.DUDUNSPARCE,e.SCREAM_TAIL,e.KORAIDON,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.HYDRAPPLE,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,[e.LYCANROC,"midnight"],e.GALAR_MEOWTH,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_STUNFISK,[e.CALYREX,"ice","shadow"],e.BLOODMOON_URSALUNA],[t.HEAT_WAVE]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.SPEAROW,e.FEAROW,e.VULPIX,e.NINETALES,e.ZUBAT,e.GOLBAT,e.GROWLITHE,e.ARCANINE,e.PONYTA,e.RAPIDASH,e.FARFETCHD,e.WEEZING,e.MAGMAR,e.FLAREON,e.AERODACTYL,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.TOGETIC,e.NATU,e.XATU,e.MURKROW,e.SLUGMA,e.MAGCARGO,e.HOUNDOUR,e.HOUNDOOM,e.MAGBY,e.ENTEI,e.HO_OH,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.VIBRAVA,e.FLYGON,e.SWABLU,e.ALTARIA,e.SOLROCK,e.SALAMENCE,e.GROUDON,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.STARLY,e.STARAVIA,e.STARAPTOR,e.HONCHKROW,e.CHATOT,e.MAGMORTAR,e.TOGEKISS,e.HEATRAN,e.ARCEUS,e.VICTINI,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PANSEAR,e.SIMISEAR,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.DARUMAKA,e.DARMANITAN,e.SIGILYPH,e.ARCHEN,e.ARCHEOPS,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.DRUDDIGON,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.TORNADUS,e.RESHIRAM,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.SALANDIT,e.SALAZZLE,e.SILVALLY,e.TURTONATOR,e.DRAMPA,e.LUNALA,e.GUZZLORD,e.NECROZMA,e.NAGANADEL,e.BLACEPHALON,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.CARKOL,e.COALOSSAL,e.SIZZLIPEDE,e.CENTISKORCH,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.SQUAWKABILLY,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.BOMBIRDIER,e.SLITHER_WING,e.IRON_JUGULIS,e.IRON_MOTH,e.CHI_YU,e.ROARING_MOON,e.KORAIDON,e.FEZANDIPITI,e.GOUGING_FIRE,e.ALOLA_MAROWAK,e.GALAR_WEEZING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_BRAVIARY],[t.HAIL]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.KRABBY,e.KINGLER,e.CHANSEY,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.JYNX,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.ARTICUNO,e.ZAPDOS,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.CHINCHOU,e.LANTURN,e.MARILL,e.AZUMARILL,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.QWILFISH,e.SNEASEL,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.DELIBIRD,e.MANTINE,e.KINGDRA,e.SMOOCHUM,e.BLISSEY,e.SUICUNE,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.WINGULL,e.PELIPPER,e.AZURILL,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.LUNATONE,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.REGICE,e.KYOGRE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.HAPPINY,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.GLACEON,e.MAMOSWINE,e.FROSLASS,e.PALKIA,e.PHIONE,e.MANAPHY,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PANPOUR,e.SIMIPOUR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.BASCULIN,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.KYUREM,e.KELDEO,e.SKRELP,e.DRAGALGE,e.AMAURA,e.AURORUS,e.CARBINK,e.GOODRA,e.BERGMITE,e.AVALUGG,e.XERNEAS,e.DIANCIE,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.CRABOMINABLE,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.WIMPOD,e.GOLISOPOD,e.PYUKUMUKU,e.TYPE_NULL,e.SILVALLY,e.CURSOLA,e.MR_RIME,e.FROSMOTH,e.EISCUE,e.ARCTOZOLT,e.ARCTOVISH,e.GLASTRIER,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_CORSOLA,[e.CALYREX,"ice"]],[t.TORMENT]:[e.EKANS,e.ARBOK,e.NIDOQUEEN,e.NIDOKING,e.ZUBAT,e.GOLBAT,e.MEOWTH,e.PERSIAN,e.ABRA,e.KADABRA,e.ALAKAZAM,e.DODRIO,e.GRIMER,e.MUK,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.VOLTORB,e.ELECTRODE,e.KOFFING,e.WEEZING,e.MR_MIME,e.JYNX,e.GYARADOS,e.AERODACTYL,e.MEWTWO,e.MEW,e.CROBAT,e.SUDOWOODO,e.UMBREON,e.MURKROW,e.MISDREAVUS,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.NUZLEAF,e.SHIFTRY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.LOUDRED,e.EXPLOUD,e.NOSEPASS,e.SABLEYE,e.MAWILE,e.CARVANHA,e.SHARPEDO,e.SPOINK,e.GRUMPIG,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.ABSOL,e.GLALIE,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.SHIELDON,e.BASTIODON,e.FLOATZEL,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.MIME_JR,e.CHATOT,e.SPIRITOMB,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.ELECTIVIRE,e.MAGMORTAR,e.GLISCOR,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.AZELF,e.HEATRAN,e.DARKRAI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.VULLABY,e.MANDIBUZZ,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.TORNADUS,e.THUNDURUS,e.BUNNELBY,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.HAWLUCHA,e.KLEFKI,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.HOOPA,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.YUNGOOS,e.GUMSHOOS,e.SALANDIT,e.SALAZZLE,e.BRUXISH,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.PHEROMOSA,e.BLACEPHALON,e.NICKIT,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.MORPEKO,e.GLASTRIER,e.ENAMORUS,e.SQUAWKABILLY,e.BOMBIRDIER,e.VAROOM,e.KINGAMBIT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,[e.CALYREX,"ice"],e.HISUI_ZORUA,e.HISUI_ZOROARK],[t.WILL_O_WISP]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.VULPIX,e.NINETALES,e.GROWLITHE,e.ARCANINE,e.PONYTA,e.RAPIDASH,e.GASTLY,e.HAUNTER,e.GENGAR,e.KOFFING,e.WEEZING,e.MAGMAR,e.FLAREON,e.MOLTRES,e.MEWTWO,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.MISDREAVUS,e.SLUGMA,e.MAGCARGO,e.HOUNDOUR,e.HOUNDOOM,e.MAGBY,e.ENTEI,e.HO_OH,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.SHIFTRY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SHEDINJA,e.SABLEYE,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.ALTARIA,e.SOLROCK,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.ABSOL,e.GROUDON,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.SPIRITOMB,e.MAGMORTAR,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.HEATRAN,e.GIRATINA,e.DARKRAI,e.ARCEUS,e.VICTINI,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PANSEAR,e.SIMISEAR,e.DARUMAKA,e.DARMANITAN,e.YAMASK,e.COFAGRIGUS,e.FRILLISH,e.JELLICENT,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.HEATMOR,e.LARVESTA,e.VOLCARONA,e.RESHIRAM,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.SALANDIT,e.SALAZZLE,e.TURTONATOR,e.MIMIKYU,e.LUNALA,e.MARSHADOW,e.BLACEPHALON,e.CINDERACE,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.CENTISKORCH,e.SINISTEA,e.POLTEAGEIST,e.CURSOLA,e.RUNERIGUS,e.DRAKLOAK,e.DRAGAPULT,e.SPECTRIER,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.SCOVILLAIN,e.HOUNDSTONE,e.SLITHER_WING,e.CHI_YU,e.ALOLA_MAROWAK,e.MAROWAK,e.GALAR_WEEZING,e.GALAR_CORSOLA,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,[e.CALYREX,"shadow"],e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_ZORUA,e.HISUI_ZOROARK,[e.PALDEA_TAUROS,"blaze"]],[t.FACADE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.FOCUS_PUNCH]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWBRO,e.MUK,e.GENGAR,e.DROWZEE,e.HYPNO,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.LEDYBA,e.LEDIAN,e.TOGETIC,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.QUAGSIRE,e.SLOWKING,e.SNUBBULL,e.GRANBULL,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.DELIBIRD,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.COMBUSKEN,e.BLAZIKEN,e.MARSHTOMP,e.SWAMPERT,e.LUDICOLO,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MAWILE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.VOLBEAT,e.ILLUMISE,e.GRUMPIG,e.SPINDA,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.KECLEON,e.DUSCLOPS,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.GROUDON,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.BIBAREL,e.RAMPARDOS,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.MIME_JR,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.GALLADE,e.DUSKNOIR,e.PALKIA,e.REGIGIGAS,e.DARKRAI,e.PIGNITE,e.EMBOAR,e.WATCHOG,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.REUNICLUS,e.EELEKTROSS,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.GOLETT,e.GOLURK,e.HEATMOR,e.ZEKROM,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.HAWLUCHA,e.GOODRA,e.HOOPA,e.INCINEROAR,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.STUFFUL,e.BEWEAR,e.PASSIMIAN,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_BULU,e.BUZZWOLE,e.MARSHADOW,e.ZERAORA,e.RILLABOOM,e.GRIMMSNARL,e.MR_RIME,e.KUBFU,e.URSHIFU,e.ZARUDE,e.URSALUNA,e.SNEASLER,e.PAWMO,e.PAWMOT,e.GARGANACL,e.PALAFIN,e.ANNIHILAPE,e.IRON_HANDS,e.GHOLDENGO,e.KORAIDON,e.OKIDOGI,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_MUK,e.ALOLA_MAROWAK,[e.LYCANROC,"midnight"],e.GALAR_MR_MIME,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_TYPHLOSION,e.HISUI_SNEASEL,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_DECIDUEYE,e.BLOODMOON_URSALUNA],[t.NATURE_POWER]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.ONIX,e.EXEGGCUTE,e.EXEGGUTOR,e.TANGELA,e.KABUTOPS,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.BELLOSSOM,e.SUDOWOODO,e.SUNKERN,e.SUNFLORA,e.STEELIX,e.SLUGMA,e.MAGCARGO,e.CORSOLA,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.ROSELIA,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.CACNEA,e.CACTURNE,e.CRAWDAUNT,e.TROPIUS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.BUDEW,e.ROSERADE,e.CHERUBI,e.CHERRIM,e.BONSLY,e.CARNIVINE,e.FINNEON,e.TANGROWTH,e.LEAFEON,e.HEATRAN,e.REGIGIGAS,e.SHAYMIN,e.SNIVY,e.SERVINE,e.SERPERIOR,e.PANSAGE,e.SIMISAGE,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.DEERLING,e.SAWSBUCK,e.FOONGUS,e.AMOONGUSS,e.FERROSEED,e.FERROTHORN,e.VIRIZION,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.BUNNELBY,e.DIGGERSBY,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.BINACLE,e.BARBARACLE,e.AMAURA,e.AURORUS,e.CARBINK,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.XERNEAS,e.DIANCIE,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.RIBOMBEE,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.DRAMPA,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.XURKITREE,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.CURSOLA,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_EXEGGUTOR,e.ETERNAL_FLOETTE,e.GALAR_CORSOLA,e.HISUI_TYPHLOSION,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE],[t.CHARGE]:[e.PIKACHU,e.RAICHU,e.MAGNEMITE,e.MAGNETON,e.VOLTORB,e.ELECTRODE,e.ELECTABUZZ,e.JOLTEON,e.ZAPDOS,e.MEW,e.CHINCHOU,e.LANTURN,e.PICHU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.ELEKID,e.RAIKOU,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.SHINX,e.LUXIO,e.LUXRAY,e.PACHIRISU,e.MAGNEZONE,e.ELECTIVIRE,e.ROTOM,e.BLITZLE,e.ZEBSTRIKA,e.EMOLGA,e.KLINK,e.KLANG,e.KLINKLANG,e.TYNAMO,e.EELEKTRIK,e.EELEKTROSS,e.STUNFISK,e.THUNDURUS,e.HELIOPTILE,e.HELIOLISK,e.DEDENNE,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.TOGEDEMARU,e.TAPU_KOKO,e.XURKITREE,e.ZERAORA,e.YAMPER,e.BOLTUND,e.TOXTRICITY,e.PINCURCHIN,e.MORPEKO,e.DRACOZOLT,e.ARCTOZOLT,e.REGIELEKI,e.PAWMI,e.PAWMO,e.PAWMOT,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.SANDY_SHOCKS,e.IRON_HANDS,e.IRON_THORNS,e.MIRAIDON,e.RAGING_BOLT,e.ALOLA_RAICHU,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.HISUI_VOLTORB,e.HISUI_ELECTRODE],[t.TAUNT]:[e.RATTATA,e.RATICATE,e.NIDOQUEEN,e.NIDOKING,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.DODRIO,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.VOLTORB,e.ELECTRODE,e.KOFFING,e.WEEZING,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.GYARADOS,e.AERODACTYL,e.MEWTWO,e.MEW,e.CROBAT,e.SUDOWOODO,e.AIPOM,e.UMBREON,e.MURKROW,e.MISDREAVUS,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.SHIFTRY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.VIGOROTH,e.SLAKING,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.SABLEYE,e.MAWILE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.VOLBEAT,e.CARVANHA,e.SHARPEDO,e.SPOINK,e.GRUMPIG,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.CORPHISH,e.CRAWDAUNT,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.ABSOL,e.GLALIE,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHIELDON,e.BASTIODON,e.VESPIQUEN,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.MIME_JR,e.CHATOT,e.SPIRITOMB,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.ELECTIVIRE,e.MAGMORTAR,e.GLISCOR,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.AZELF,e.HEATRAN,e.DARKRAI,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.COTTONEE,e.WHIMSICOTT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.EMOLGA,e.ESCAVALIER,e.FRILLISH,e.JELLICENT,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.KELDEO,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.PANCHAM,e.PANGORO,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.HAWLUCHA,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.HOOPA,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.YUNGOOS,e.GUMSHOOS,e.ORICORIO,e.ROCKRUFF,e.LYCANROC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.PYUKUMUKU,e.TURTONATOR,e.MIMIKYU,e.BRUXISH,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.BUZZWOLE,e.PHEROMOSA,e.BLACEPHALON,e.ZERAORA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.INTELEON,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.NICKIT,e.THIEVUL,e.TOXTRICITY,e.CLOBBOPUS,e.GRAPPLOCT,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.MR_RIME,e.RUNERIGUS,e.MORPEKO,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.URSHIFU,e.ZARUDE,e.GLASTRIER,e.SPECTRIER,e.URSALUNA,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.QUAQUAVAL,e.SPIDOPS,e.LOKIX,e.TANDEMAUS,e.MAUSHOLD,e.SQUAWKABILLY,e.ARMAROUGE,e.CERULEDGE,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.TOEDSCOOL,e.TOEDSCRUEL,e.BOMBIRDIER,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.FLAMIGO,e.TATSUGIRI,e.ANNIHILAPE,e.KINGAMBIT,e.GREAT_TUSK,e.BRUTE_BONNET,e.FLUTTER_MANE,e.IRON_BUNDLE,e.IRON_JUGULIS,e.IRON_THORNS,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.IRON_LEAVES,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.RAGING_BOLT,e.IRON_BOULDER,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_MEOWTH,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,[e.CALYREX,"ice","shadow"],e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_DECIDUEYE,e.BLOODMOON_URSALUNA],[t.HELPING_HAND]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PIKACHU,e.RAICHU,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.DIGLETT,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.DROWZEE,e.HYPNO,e.VOLTORB,e.ELECTRODE,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.TYPHLOSION,e.SENTRET,e.FURRET,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.HOUNDOUR,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.MEDITITE,e.MEDICHAM,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.GULPIN,e.SWALOT,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.MILOTIC,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.SNORUNT,e.GLALIE,e.BAGON,e.SHELGON,e.SALAMENCE,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.CROAGUNK,e.TOXICROAK,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.VICTINI,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.MARACTUS,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.ALOMOMOLA,e.MIENFOO,e.MIENSHAO,e.GOLETT,e.GOLURK,e.RUFFLET,e.BRAVIARY,e.DURANT,e.ZWEILOUS,e.HYDREIGON,e.COBALION,e.TERRAKION,e.VIRIZION,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.KELDEO,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.BINACLE,e.BARBARACLE,e.CLAUNCHER,e.CLAWITZER,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.DIANCIE,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.YUNGOOS,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.SALANDIT,e.SALAZZLE,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.PYUKUMUKU,e.TOGEDEMARU,e.DRAMPA,e.DHELMISE,e.KOMMO_O,e.SOLGALEO,e.LUNALA,e.MAGEARNA,e.POIPOLE,e.NAGANADEL,e.ZERAORA,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.DOTTLER,e.ORBEETLE,e.GOSSIFLEUR,e.ELDEGOSS,e.YAMPER,e.BOLTUND,e.APPLETUN,e.TOXTRICITY,e.HATENNA,e.HATTREM,e.HATTERENE,e.OBSTAGOON,e.PERRSERKER,e.SIRFETCHD,e.MR_RIME,e.MILCERY,e.ALCREMIE,e.FALINKS,e.FROSMOTH,e.INDEEDEE,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.KUBFU,e.URSHIFU,e.ZARUDE,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.FINIZEN,e.PALAFIN,e.ORTHWORM,e.GREAVARD,e.HOUNDSTONE,e.CETODDLE,e.CETITAN,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.SCREAM_TAIL,e.FLUTTER_MANE,e.IRON_BUNDLE,e.IRON_MOTH,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.IRON_LEAVES,e.MUNKIDORI,e.OGERPON,e.ALOLA_RAICHU,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.TRICK]:[e.CLEFAIRY,e.CLEFABLE,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.STARMIE,e.MR_MIME,e.JYNX,e.PORYGON,e.MEWTWO,e.MEW,e.SENTRET,e.FURRET,e.CLEFFA,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.ESPEON,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PORYGON2,e.STANTLER,e.SMOOCHUM,e.BLISSEY,e.LUGIA,e.CELEBI,e.ZIGZAGOON,e.LINOONE,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SHEDINJA,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.VOLBEAT,e.ILLUMISE,e.SPOINK,e.GRUMPIG,e.SPINDA,e.BALTOY,e.CLAYDOL,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.SPIRITOMB,e.TOGEKISS,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.CRESSELIA,e.DARKRAI,e.ARCEUS,e.VICTINI,e.PURRLOIN,e.LIEPARD,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.DARMANITAN,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.ZORUA,e.ZOROARK,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.FRILLISH,e.JELLICENT,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.GOLURK,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLOETTE,e.FLORGES,e.ESPURR,e.MEOWSTIC,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.HOOPA,e.CUTIEFLY,e.RIBOMBEE,e.COMFEY,e.ORANGURU,e.SANDYGAST,e.PALOSSAND,e.MIMIKYU,e.TAPU_FINI,e.LUNALA,e.MAGEARNA,e.BLACEPHALON,e.DOTTLER,e.ORBEETLE,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.MR_RIME,e.RUNERIGUS,e.INDEEDEE,e.CALYREX,e.WYRDEER,e.MEOWSCARADA,e.ARMAROUGE,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.GREAVARD,e.HOUNDSTONE,e.FARIGIRAF,e.SCREAM_TAIL,e.GHOLDENGO,e.IRON_VALIANT,e.MUNKIDORI,e.ETERNAL_FLOETTE,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_SLOWKING,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_YAMASK,e.HISUI_ZORUA,e.HISUI_ZOROARK],[t.SUPERPOWER]:[e.NIDOQUEEN,e.NIDOKING,e.ARCANINE,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.KRABBY,e.KINGLER,e.HITMONLEE,e.RHYHORN,e.RHYDON,e.PINSIR,e.FLAREON,e.KABUTOPS,e.SNORLAX,e.DRAGONITE,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.MARILL,e.AZUMARILL,e.SNUBBULL,e.GRANBULL,e.SCIZOR,e.TEDDIURSA,e.URSARING,e.SWINUB,e.PILOSWINE,e.PHANPY,e.DONPHAN,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.BRELOOM,e.MAKUHITA,e.HARIYAMA,e.ARON,e.LAIRON,e.AGGRON,e.TORKOAL,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACTURNE,e.CORPHISH,e.CRAWDAUNT,e.ARMALDO,e.ABSOL,e.REGIROCK,e.REGICE,e.REGISTEEL,e.TURTWIG,e.GROTLE,e.TORTERRA,e.BIDOOF,e.BIBAREL,e.LUXRAY,e.CRANIDOS,e.RAMPARDOS,e.HONCHKROW,e.MUNCHLAX,e.HIPPOPOTAS,e.HIPPOWDON,e.RHYPERIOR,e.MAMOSWINE,e.REGIGIGAS,e.TEPIG,e.PIGNITE,e.EMBOAR,e.SAMUROTT,e.STOUTLAND,e.SIMISAGE,e.SIMISEAR,e.SIMIPOUR,e.GIGALITH,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.SCOLIPEDE,e.BASCULIN,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.CARRACOSTA,e.REUNICLUS,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.KELDEO,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.DIGGERSBY,e.GOGOAT,e.PANCHAM,e.PANGORO,e.INKAY,e.MALAMAR,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.HAWLUCHA,e.GOODRA,e.AVALUGG,e.ZYGARDE,e.VOLCANION,e.INCINEROAR,e.CRABRAWLER,e.CRABOMINABLE,e.MUDBRAY,e.MUDSDALE,e.LURANTIS,e.STUFFUL,e.BEWEAR,e.PASSIMIAN,e.KOMALA,e.DRAMPA,e.KOMMO_O,e.TAPU_BULU,e.SOLGALEO,e.BUZZWOLE,e.CELESTEELA,e.MARSHADOW,e.STAKATAKA,e.ZERAORA,e.MELMETAL,e.RILLABOOM,e.GREEDENT,e.DREDNAW,e.APPLETUN,e.CRAMORANT,e.CLOBBOPUS,e.GRAPPLOCT,e.GRIMMSNARL,e.SIRFETCHD,e.FALINKS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.KUBFU,e.URSHIFU,e.ZARUDE,e.GLASTRIER,e.ENAMORUS,e.CETODDLE,e.SLITHER_WING,e.OKIDOGI,e.OGERPON,[e.DEOXYS,"attack"],e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_EXEGGUTOR,e.GALAR_FARFETCHD,e.GALAR_ZAPDOS,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,[e.CALYREX,"ice"],e.HISUI_BRAVIARY],[t.RECYCLE]:[e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.DROWZEE,e.HYPNO,e.VOLTORB,e.ELECTRODE,e.CHANSEY,e.STARYU,e.STARMIE,e.MR_MIME,e.JYNX,e.PORYGON,e.SNORLAX,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CLEFFA,e.IGGLYBUFF,e.SLOWKING,e.GIRAFARIG,e.DELIBIRD,e.PORYGON2,e.SMOOCHUM,e.BLISSEY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.MEDITITE,e.MEDICHAM,e.SPOINK,e.GRUMPIG,e.SPINDA,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.KECLEON,e.CHIMECHO,e.JIRACHI,e.DEOXYS,e.DRIFLOON,e.DRIFBLIM,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.HAPPINY,e.MUNCHLAX,e.MAGNEZONE,e.PORYGON_Z,e.GALLADE,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.ARCEUS,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.TRUBBISH,e.GARBODOR,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.KLINK,e.KLANG,e.KLINKLANG,e.ELGYEM,e.BEHEEYEM,e.HEATMOR,e.MELOETTA,e.GENESECT,e.BRAIXEN,e.DELPHOX,e.BUNNELBY,e.DIGGERSBY,e.ESPURR,e.MEOWSTIC,e.DEDENNE,e.KLEFKI,e.HOOPA,e.MORELULL,e.SHIINOTIC,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.NECROZMA,e.STAKATAKA,e.BLACEPHALON,e.APPLIN,e.FLAPPLE,e.APPLETUN,e.MR_RIME,e.FARIGIRAF,e.DIPPLIN,e.HYDRAPPLE,e.ALOLA_RAICHU,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_MR_MIME,e.HISUI_VOLTORB,e.HISUI_ELECTRODE],[t.REVENGE]:[e.RATTATA,e.RATICATE,e.MANKEY,e.PRIMEAPE,e.MACHOP,e.MACHOKE,e.MACHAMP,e.FARFETCHD,e.HITMONLEE,e.HITMONCHAN,e.PINSIR,e.TAUROS,e.MEW,e.AIPOM,e.PINECO,e.FORRETRESS,e.QWILFISH,e.HERACROSS,e.HITMONTOP,e.TYRANITAR,e.COMBUSKEN,e.BLAZIKEN,e.SHIFTRY,e.MAKUHITA,e.HARIYAMA,e.CACTURNE,e.ZANGOOSE,e.CRAWDAUNT,e.DUSKULL,e.DUSCLOPS,e.STARLY,e.STARAVIA,e.STARAPTOR,e.AMBIPOM,e.VESPIQUEN,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.GALLADE,e.DUSKNOIR,e.REGIGIGAS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.BASCULIN,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.COFAGRIGUS,e.ZORUA,e.ZOROARK,e.ESCAVALIER,e.FERROSEED,e.FERROTHORN,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.KELDEO,e.PANGORO,e.HAWLUCHA,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.YUNGOOS,e.GUMSHOOS,e.MUDSDALE,e.BEWEAR,e.PASSIMIAN,e.TURTONATOR,e.KOMMO_O,e.TAPU_BULU,e.BUZZWOLE,e.MARSHADOW,e.ZERAORA,e.CINDERACE,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.CHEWTLE,e.DREDNAW,e.CLOBBOPUS,e.GRAPPLOCT,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.CURSOLA,e.SIRFETCHD,e.RUNERIGUS,e.FALINKS,e.MORPEKO,e.COPPERAJAH,e.ZACIAN,e.ZAMAZENTA,e.KUBFU,e.URSHIFU,e.ZARUDE,e.BASCULEGION,e.ANNIHILAPE,e.KINGAMBIT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,[e.LYCANROC,"midnight"],e.GALAR_FARFETCHD,e.GALAR_ZAPDOS,e.HISUI_SAMUROTT,e.GALAR_STUNFISK],[t.BRICK_BREAK]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BEEDRILL,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PARAS,e.PARASECT,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWHIRL,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWBRO,e.MUK,e.GENGAR,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.KABUTOPS,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.LEDYBA,e.LEDIAN,e.TOGETIC,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.QUAGSIRE,e.SLOWKING,e.GLIGAR,e.SNUBBULL,e.GRANBULL,e.SCIZOR,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.DELIBIRD,e.TYROGUE,e.HITMONTOP,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.COMBUSKEN,e.BLAZIKEN,e.MARSHTOMP,e.SWAMPERT,e.LOMBRE,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MAWILE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.VOLBEAT,e.ILLUMISE,e.SWALOT,e.GRUMPIG,e.SPINDA,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.CORPHISH,e.CRAWDAUNT,e.ANORITH,e.ARMALDO,e.KECLEON,e.DUSCLOPS,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.KRICKETUNE,e.RAMPARDOS,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.BONSLY,e.MIME_JR,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.GLISCOR,e.GALLADE,e.DUSKNOIR,e.DIALGA,e.PALKIA,e.REGIGIGAS,e.DARKRAI,e.ARCEUS,e.VICTINI,e.PIGNITE,e.EMBOAR,e.DEWOTT,e.SAMUROTT,e.SIMISAGE,e.SIMISEAR,e.SIMIPOUR,e.DRILBUR,e.EXCADRILL,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.ZOROARK,e.GOTHITELLE,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.KELDEO,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.BINACLE,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.HAWLUCHA,e.NOIBAT,e.NOIVERN,e.ZYGARDE,e.HOOPA,e.VOLCANION,e.INCINEROAR,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.CRABRAWLER,e.CRABOMINABLE,e.LYCANROC,e.LURANTIS,e.STUFFUL,e.BEWEAR,e.ORANGURU,e.PASSIMIAN,e.GOLISOPOD,e.KOMALA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_BULU,e.BUZZWOLE,e.PHEROMOSA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.ZERAORA,e.MELMETAL,e.RILLABOOM,e.ARROKUDA,e.BARRASKEWDA,e.TOXTRICITY,e.CLOBBOPUS,e.GRAPPLOCT,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.SIRFETCHD,e.MR_RIME,e.FALINKS,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DURALUDON,e.ZACIAN,e.ZAMAZENTA,e.KUBFU,e.URSHIFU,e.ZARUDE,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.MEOWSCARADA,e.QUAQUAVAL,e.SPIDOPS,e.LOKIX,e.PAWMOT,e.GARGANACL,e.CERULEDGE,e.KLAWF,e.TINKATUFF,e.TINKATON,e.ANNIHILAPE,e.KINGAMBIT,e.GREAT_TUSK,e.SLITHER_WING,e.IRON_HANDS,e.IRON_THORNS,e.ARCTIBAX,e.BAXCALIBUR,e.CHIEN_PAO,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.IRON_LEAVES,e.OKIDOGI,e.OGERPON,e.ARCHALUDON,e.IRON_BOULDER,e.IRON_CROWN,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_MR_MIME,e.GALAR_ZAPDOS,e.GALAR_SLOWKING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_TYPHLOSION,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZOROARK,e.HISUI_DECIDUEYE,e.BLOODMOON_URSALUNA],[t.KNOCK_OFF]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.BEEDRILL,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PARAS,e.PARASECT,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.FARFETCHD,e.DODUO,e.DODRIO,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.LICKITUNG,e.TANGELA,e.GOLDEEN,e.SEAKING,e.SCYTHER,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.MEWTWO,e.MEW,e.BAYLEEF,e.MEGANIUM,e.SENTRET,e.FURRET,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.MARILL,e.AZUMARILL,e.AIPOM,e.GLIGAR,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.PHANPY,e.DONPHAN,e.ELEKID,e.TYRANITAR,e.BLAZIKEN,e.SWAMPERT,e.LOMBRE,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.VIGOROTH,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.SABLEYE,e.MAWILE,e.SWALOT,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.CORPHISH,e.CRAWDAUNT,e.ANORITH,e.ARMALDO,e.KECLEON,e.SHUPPET,e.BANETTE,e.CHIMECHO,e.ABSOL,e.METAGROSS,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.EMPOLEON,e.KRICKETUNE,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.WEAVILE,e.LICKILICKY,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.LEAFEON,e.GLISCOR,e.MAMOSWINE,e.GALLADE,e.UXIE,e.MESPRIT,e.AZELF,e.REGIGIGAS,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.WATCHOG,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.KROKOROK,e.KROOKODILE,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.REUNICLUS,e.SWANNA,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.ALOMOMOLA,e.FERROSEED,e.FERROTHORN,e.TYNAMO,e.EELEKTRIK,e.EELEKTROSS,e.CRYOGONAL,e.ACCELGOR,e.MIENFOO,e.MIENSHAO,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.MELOETTA,e.CHESNAUGHT,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.INKAY,e.MALAMAR,e.GOODRA,e.TREVENANT,e.YVELTAL,e.HOOPA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.INCINEROAR,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.MAREANIE,e.TOXAPEX,e.LURANTIS,e.SALANDIT,e.SALAZZLE,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.GOLISOPOD,e.KOMALA,e.DHELMISE,e.TAPU_FINI,e.SOLGALEO,e.NIHILEGO,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MARSHADOW,e.BLACEPHALON,e.ZERAORA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.GREEDENT,e.NICKIT,e.SIZZLIPEDE,e.PERRSERKER,e.SIRFETCHD,e.FALINKS,e.MORPEKO,e.COPPERAJAH,e.ZARUDE,e.MEOWSCARADA,e.QUAQUAVAL,e.TAROUNTULA,e.SPIDOPS,e.LOKIX,e.PAWMO,e.PAWMOT,e.SHROODLE,e.GRAFAIAI,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.BOMBIRDIER,e.CYCLIZAR,e.CETODDLE,e.CETITAN,e.GREAT_TUSK,e.IRON_TREADS,e.IRON_JUGULIS,e.WO_CHIEN,e.ROARING_MOON,e.IRON_VALIANT,e.WALKING_WAKE,e.OKIDOGI,e.OGERPON,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,[e.LYCANROC,"midnight"],e.GALAR_MEOWTH,e.GALAR_FARFETCHD,e.GALAR_ZAPDOS,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_SAMUROTT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_GOODRA,e.HISUI_DECIDUEYE],[t.ENDEAVOR]:[e.BEEDRILL,e.RATTATA,e.RATICATE,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.DODUO,e.DODRIO,e.DEWGONG,e.DROWZEE,e.HYPNO,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.TAUROS,e.GYARADOS,e.FLAREON,e.MEW,e.MEGANIUM,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.SUDOWOODO,e.POLITOED,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.GIRAFARIG,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.HERACROSS,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.DELIBIRD,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.HITMONTOP,e.BLISSEY,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.ARON,e.LAIRON,e.AGGRON,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.NUMEL,e.CAMERUPT,e.SPOINK,e.GRUMPIG,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.CORPHISH,e.CRAWDAUNT,e.LUVDISC,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.STARLY,e.STARAVIA,e.STARAPTOR,e.KRICKETOT,e.KRICKETUNE,e.CRANIDOS,e.RAMPARDOS,e.WORMADAM,e.COMBEE,e.VESPIQUEN,e.PACHIRISU,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.HONCHKROW,e.SKUNTANK,e.HAPPINY,e.RHYPERIOR,e.TANGROWTH,e.TOGEKISS,e.MAMOSWINE,e.AZELF,e.SHAYMIN,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PATRAT,e.WATCHOG,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.BLITZLE,e.ZEBSTRIKA,e.WOOBAT,e.SWOOBAT,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.BASCULIN,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.SCRAGGY,e.SCRAFTY,e.ARCHEN,e.ARCHEOPS,e.MINCCINO,e.CINCCINO,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.DEERLING,e.SAWSBUCK,e.FERROSEED,e.FERROTHORN,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.STUNFISK,e.BOUFFALANT,e.DURANT,e.KYUREM,e.KELDEO,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.BUNNELBY,e.DIGGERSBY,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.BINACLE,e.BARBARACLE,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.XERNEAS,e.DIANCIE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.SALANDIT,e.SALAZZLE,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.PASSIMIAN,e.ORANGURU,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.DRAMPA,e.KOMMO_O,e.SOLGALEO,e.BUZZWOLE,e.MARSHADOW,e.ZERAORA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SKWOVET,e.GREEDENT,e.FLAPPLE,e.SANDACONDA,e.CRAMORANT,e.TOXEL,e.TOXTRICITY,e.PERRSERKER,e.ALCREMIE,e.FALINKS,e.STONJOURNER,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.BASCULEGION,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.FIDOUGH,e.DACHSBUN,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.BOMBIRDIER,e.PALAFIN,e.REVAVROOM,e.CYCLIZAR,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.VELUZA,e.ANNIHILAPE,e.FARIGIRAF,e.DUDUNSPARCE,e.GREAT_TUSK,e.IRON_TREADS,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_ZAPDOS,e.HISUI_TYPHLOSION,e.PALDEA_TAUROS],[t.SKILL_SWAP]:[e.BUTTERFREE,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.VENONAT,e.VENOMOTH,e.PSYDUCK,e.GOLDUCK,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.EXEGGCUTE,e.EXEGGUTOR,e.CHANSEY,e.STARMIE,e.MR_MIME,e.JYNX,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.NATU,e.XATU,e.ESPEON,e.UMBREON,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.STANTLER,e.SMOOCHUM,e.BLISSEY,e.LUGIA,e.CELEBI,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.PLUSLE,e.SPOINK,e.GRUMPIG,e.SPINDA,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.JIRACHI,e.DEOXYS,e.WORMADAM,e.MOTHIM,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.SPIRITOMB,e.GALLADE,e.DUSKNOIR,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.MANAPHY,e.VICTINI,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.ALOMOMOLA,e.ELGYEM,e.BEHEEYEM,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLOETTE,e.FLORGES,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SYLVEON,e.CARBINK,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.DIANCIE,e.HOOPA,e.CUTIEFLY,e.RIBOMBEE,e.ORANGURU,e.SANDYGAST,e.PALOSSAND,e.TAPU_LELE,e.MAGEARNA,e.STAKATAKA,e.DOTTLER,e.ORBEETLE,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.MR_RIME,e.RUNERIGUS,e.INDEEDEE,e.CALYREX,e.WYRDEER,e.MEOWSCARADA,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.FARIGIRAF,e.IRON_VALIANT,e.ALOLA_RAICHU,e.ALOLA_EXEGGUTOR,e.ETERNAL_FLOETTE,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_SLOWKING,e.GALAR_YAMASK],[t.IMPRISON]:[e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.TOGETIC,e.NATU,e.XATU,e.ESPEON,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.STANTLER,e.LUGIA,e.HO_OH,e.CELEBI,e.SHIFTRY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.SPOINK,e.GRUMPIG,e.BALTOY,e.CLAYDOL,e.MILOTIC,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.JIRACHI,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.BRONZOR,e.BRONZONG,e.SPIRITOMB,e.TOGEKISS,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.UXIE,e.MESPRIT,e.AZELF,e.ARCEUS,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.ZORUA,e.ZOROARK,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.FRILLISH,e.JELLICENT,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.GOLETT,e.GOLURK,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,[e.MEOWSTIC,"male"],e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.DECIDUEYE,e.CUTIEFLY,e.RIBOMBEE,e.ORANGURU,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.NECROZMA,e.MAGEARNA,e.DOTTLER,e.ORBEETLE,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.MORGREM,e.GRIMMSNARL,e.RUNERIGUS,e.ALCREMIE,e.FROSMOTH,e.STONJOURNER,e.INDEEDEE,e.ZACIAN,e.ZAMAZENTA,e.CALYREX,e.WYRDEER,e.ENAMORUS,e.SKELEDIRGE,e.RABSCA,e.FARIGIRAF,e.SCREAM_TAIL,e.FLUTTER_MANE,e.IRON_VALIANT,e.IRON_LEAVES,e.POLTCHAGEIST,e.SINISTCHA,e.MUNKIDORI,e.PECHARUNT,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_ARTICUNO,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_YAMASK,e.HISUI_ZORUA,e.HISUI_ZOROARK],[t.DIVE]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.KRABBY,e.KINGLER,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.OMANYTE,e.OMASTAR,e.KABUTOPS,e.DRAGONITE,e.MEWTWO,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.CHINCHOU,e.LANTURN,e.MARILL,e.AZUMARILL,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.QWILFISH,e.REMORAID,e.OCTILLERY,e.MANTINE,e.KINGDRA,e.SUICUNE,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.LOMBRE,e.LUDICOLO,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.BARBOACH,e.WHISCASH,e.CRAWDAUNT,e.FEEBAS,e.MILOTIC,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.LATIAS,e.LATIOS,e.KYOGRE,e.RAYQUAZA,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIBAREL,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.FINNEON,e.LUMINEON,e.MANTYKE,e.PALKIA,e.PHIONE,e.MANAPHY,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PANPOUR,e.SIMIPOUR,e.SEISMITOAD,e.BASCULIN,e.TIRTOUGA,e.CARRACOSTA,e.DUCKLETT,e.SWANNA,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.BEARTIC,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.WISHIWASHI,e.ARAQUANID,e.GOLISOPOD,e.TAPU_FINI,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.CHEWTLE,e.DREDNAW,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.CLOBBOPUS,e.GRAPPLOCT,e.EISCUE,e.DRACOVISH,e.ARCTOVISH,e.DRAKLOAK,e.DRAGAPULT,e.FINIZEN,e.PALAFIN,e.DONDOZO,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,[e.URSHIFU,"rapid-strike"]],[t.FEATHER_DANCE]:[e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.SPEAROW,e.FEAROW,e.FARFETCHD,e.DODUO,e.DODRIO,e.ARTICUNO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.NATU,e.XATU,e.MURKROW,e.DELIBIRD,e.LUGIA,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.WINGULL,e.PELIPPER,e.SWABLU,e.ALTARIA,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.HONCHKROW,e.CHATOT,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.DUCKLETT,e.SWANNA,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.HAWLUCHA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.ORICORIO,e.CRAMORANT,e.FROSMOTH,e.EISCUE,e.QUAXWELL,e.QUAQUAVAL,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.ESPATHRA,e.BOMBIRDIER,e.FLAMIGO,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[t.BLAZE_KICK]:[e.CHARIZARD,e.HITMONLEE,e.MEW,e.COMBUSKEN,e.BLAZIKEN,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.RIOLU,e.LUCARIO,e.VICTINI,e.MIENSHAO,e.GENESECT,e.INCINEROAR,e.MARSHADOW,e.ZERAORA,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.GALAR_ZAPDOS],[t.HYPER_VOICE]:[e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.ARCANINE,e.CHANSEY,e.JYNX,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.SNORLAX,e.MEW,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.MARILL,e.AZUMARILL,e.POLITOED,e.ESPEON,e.UMBREON,e.MISDREAVUS,e.GIRAFARIG,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.TEDDIURSA,e.URSARING,e.HOUNDOUR,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.BLISSEY,e.LUGIA,e.HO_OH,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.LOMBRE,e.LUDICOLO,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.AZURILL,e.SKITTY,e.DELCATTY,e.MANECTRIC,e.WAILMER,e.WAILORD,e.GRUMPIG,e.SPINDA,e.SWABLU,e.ALTARIA,e.CHIMECHO,e.BAGON,e.SHELGON,e.SALAMENCE,e.RAYQUAZA,e.TORTERRA,e.KRICKETUNE,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.HAPPINY,e.CHATOT,e.MUNCHLAX,e.HIPPOWDON,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.GALLADE,e.ROTOM,e.DIALGA,e.PALKIA,e.GIRATINA,e.ARCEUS,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.AUDINO,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.MARACTUS,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.MELOETTA,e.DELPHOX,e.LITLEO,e.PYROAR,e.PANCHAM,e.PANGORO,e.FURFROU,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.ROCKRUFF,e.LYCANROC,e.SALAZZLE,e.ORANGURU,e.SILVALLY,e.TURTONATOR,e.DRAMPA,e.KOMMO_O,e.TAPU_KOKO,e.SOLGALEO,e.NECROZMA,e.RILLABOOM,e.SKWOVET,e.GREEDENT,e.GOSSIFLEUR,e.ELDEGOSS,e.BOLTUND,e.TOXTRICITY,e.OBSTAGOON,e.PERRSERKER,e.INDEEDEE,e.ARCTOZOLT,e.ZACIAN,e.ZAMAZENTA,e.ZARUDE,e.URSALUNA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.LECHONK,e.OINKOLOGNE,e.TANDEMAUS,e.MAUSHOLD,e.ARBOLIVA,e.SQUAWKABILLY,e.TADBULB,e.BELLIBOLT,e.MABOSSTIFF,e.ESPATHRA,e.BOMBIRDIER,e.PALAFIN,e.CYCLIZAR,e.CETODDLE,e.CETITAN,e.FARIGIRAF,e.DUDUNSPARCE,e.SCREAM_TAIL,e.FLUTTER_MANE,e.IRON_JUGULIS,e.ROARING_MOON,e.IRON_VALIANT,e.RAGING_BOLT,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_MEOWTH,e.GALAR_ARTICUNO,e.GALAR_MOLTRES,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_ARCANINE,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.BLOODMOON_URSALUNA],[t.BLAST_BURN]:[e.CHARIZARD,e.MEW,e.TYPHLOSION,e.BLAZIKEN,e.INFERNAPE,e.EMBOAR,e.DELPHOX,e.INCINEROAR,e.CINDERACE,e.SKELEDIRGE,e.HISUI_TYPHLOSION],[t.HYDRO_CANNON]:[e.BLASTOISE,e.MEW,e.FERALIGATR,e.SWAMPERT,e.EMPOLEON,e.SAMUROTT,e.GRENINJA,e.PRIMARINA,e.INTELEON,e.QUAQUAVAL,e.HISUI_SAMUROTT],[t.WEATHER_BALL]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.VULPIX,e.NINETALES,e.VILEPLUME,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.CLOYSTER,e.HORSEA,e.SEADRA,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.MEGANIUM,e.BELLOSSOM,e.POLITOED,e.SUNKERN,e.SUNFLORA,e.ESPEON,e.UMBREON,e.SLOWKING,e.DELIBIRD,e.KINGDRA,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LUGIA,e.HO_OH,e.CELEBI,e.SWAMPERT,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.PELIPPER,e.MASQUERAIN,e.ROSELIA,e.WAILMER,e.WAILORD,e.TORKOAL,e.ALTARIA,e.LUNATONE,e.SOLROCK,e.WHISCASH,e.MILOTIC,e.CASTFORM,e.SNORUNT,e.GLALIE,e.LATIAS,e.LATIOS,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BUDEW,e.ROSERADE,e.CHERUBI,e.CHERRIM,e.GASTRODON,e.DRIFLOON,e.DRIFBLIM,e.BRONZONG,e.HIPPOPOTAS,e.HIPPOWDON,e.SNOVER,e.ABOMASNOW,e.ELECTIVIRE,e.MAGMORTAR,e.LEAFEON,e.GLACEON,e.FROSLASS,e.PHIONE,e.MANAPHY,e.GIGALITH,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.LILLIGANT,e.MARACTUS,e.SWANNA,e.VANILLUXE,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.GRENINJA,e.VIVILLON,e.CLAUNCHER,e.CLAWITZER,e.HELIOLISK,e.AMAURA,e.AURORUS,e.SYLVEON,e.GOODRA,e.VOLCANION,e.PRIMARINA,e.FOMANTIS,e.LURANTIS,e.SHIINOTIC,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.ELDEGOSS,e.CRAMORANT,e.FROSMOTH,e.EISCUE,e.ENAMORUS,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.ARMAROUGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.RELLOR,e.RABSCA,e.WALKING_WAKE,e.GOUGING_FIRE,e.RAGING_BOLT,e.TERAPAGOS,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.HISUI_LILLIGANT,e.HISUI_GOODRA],[t.FAKE_TEARS]:[e.PIKACHU,e.CLEFAIRY,e.CLEFABLE,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.JYNX,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.MEW,e.TOTODILE,e.CLEFFA,e.IGGLYBUFF,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.ESPEON,e.UMBREON,e.MISDREAVUS,e.SNUBBULL,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SMOOCHUM,e.SHROOMISH,e.BRELOOM,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.AZURILL,e.SKITTY,e.MAWILE,e.PLUSLE,e.MINUN,e.ILLUMISE,e.SPINDA,e.CHIMECHO,e.SNORUNT,e.GLALIE,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.SHINX,e.LUXIO,e.LUXRAY,e.PACHIRISU,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.GLAMEOW,e.BONSLY,e.WEAVILE,e.LEAFEON,e.GLACEON,e.FROSLASS,e.PURRLOIN,e.LIEPARD,e.WOOBAT,e.SWOOBAT,e.COTTONEE,e.WHIMSICOTT,e.SCRAGGY,e.SCRAFTY,e.YAMASK,e.COFAGRIGUS,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.DEERLING,e.SAWSBUCK,e.VULLABY,e.MANDIBUZZ,e.MELOETTA,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.SYLVEON,e.DIANCIE,e.CUTIEFLY,e.RIBOMBEE,e.SALAZZLE,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.NICKIT,e.THIEVUL,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.MR_RIME,e.RUNERIGUS,e.ALCREMIE,e.MORPEKO,e.URSALUNA,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.TANDEMAUS,e.MAUSHOLD,e.SQUAWKABILLY,e.MASCHIFF,e.MABOSSTIFF,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.SCREAM_TAIL,e.FLUTTER_MANE,e.PECHARUNT,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_MEOWTH,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_YAMASK,e.HISUI_ZORUA,e.HISUI_ZOROARK],[t.AIR_CUTTER]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.SPEAROW,e.FEAROW,e.ZUBAT,e.GOLBAT,e.VENOMOTH,e.FARFETCHD,e.DODUO,e.DODRIO,e.SCYTHER,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.CROBAT,e.TOGETIC,e.NATU,e.XATU,e.YANMA,e.MURKROW,e.SCIZOR,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.LUGIA,e.HO_OH,e.BEAUTIFLY,e.DUSTOX,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.MASQUERAIN,e.NINJASK,e.VOLBEAT,e.ILLUMISE,e.VIBRAVA,e.FLYGON,e.SWABLU,e.ALTARIA,e.TROPIUS,e.SALAMENCE,e.LATIAS,e.LATIOS,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.MOTHIM,e.COMBEE,e.VESPIQUEN,e.DRIFLOON,e.DRIFBLIM,e.HONCHKROW,e.CHATOT,e.FINNEON,e.LUMINEON,e.MANTYKE,e.TOGEKISS,e.YANMEGA,e.GIRATINA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.SIGILYPH,e.DUCKLETT,e.SWANNA,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.VOLCARONA,e.TORNADUS,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.NOIBAT,e.NOIVERN,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.ORICORIO,e.KARTANA,e.NAGANADEL,e.INTELEON,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.CRAMORANT,e.KLEAVOR,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.BOMBIRDIER,e.FLAMIGO,e.IRON_BUNDLE,e.IRON_JUGULIS,e.FEZANDIPITI,e.SHAYMIN,e.GALAR_ARTICUNO,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[t.OVERHEAT]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.VULPIX,e.NINETALES,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.PONYTA,e.RAPIDASH,e.MAGMAR,e.FLAREON,e.MOLTRES,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.SNUBBULL,e.GRANBULL,e.SLUGMA,e.MAGCARGO,e.HOUNDOUR,e.HOUNDOOM,e.MAGBY,e.ENTEI,e.HO_OH,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.LOUDRED,e.EXPLOUD,e.MANECTRIC,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SOLROCK,e.GROUDON,e.RAYQUAZA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.MAGMORTAR,e.DIALGA,e.HEATRAN,e.ARCEUS,e.VICTINI,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PANSEAR,e.SIMISEAR,e.ZEBSTRIKA,e.DARUMAKA,e.DARMANITAN,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.HEATMOR,e.LARVESTA,e.VOLCARONA,e.RESHIRAM,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.TOUCANNON,e.SALANDIT,e.SALAZZLE,e.TURTONATOR,e.BLACEPHALON,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.CARKOL,e.COALOSSAL,e.CENTISKORCH,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.SCOVILLAIN,e.REVAVROOM,e.CYCLIZAR,e.ANNIHILAPE,e.IRON_MOTH,e.CHI_YU,e.KORAIDON,e.MIRAIDON,e.GOUGING_FIRE,[e.ROTOM,"heat"],e.GALAR_WEEZING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,[e.PALDEA_TAUROS,"blaze"]],[t.ROCK_TOMB]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.EKANS,e.ARBOK,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.MANKEY,e.PRIMEAPE,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.GRIMER,e.MUK,e.ONIX,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.PINSIR,e.TAUROS,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SUDOWOODO,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.GRANBULL,e.SHUCKLE,e.HERACROSS,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.MANTINE,e.SKARMORY,e.PHANPY,e.DONPHAN,e.MILTANK,e.BLISSEY,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.NUZLEAF,e.SHIFTRY,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.ZANGOOSE,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.KECLEON,e.DUSCLOPS,e.ABSOL,e.SPHEAL,e.SEALEO,e.WALREIN,e.HUNTAIL,e.RELICANTH,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.DEOXYS,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.BRONZOR,e.BRONZONG,e.BONSLY,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.ABOMASNOW,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.GLISCOR,e.MAMOSWINE,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.DARKRAI,e.ARCEUS,e.TEPIG,e.PIGNITE,e.EMBOAR,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DRILBUR,e.EXCADRILL,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.SCOLIPEDE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.HYDREIGON,e.TERRAKION,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.BINACLE,e.BARBARACLE,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.HAWLUCHA,e.CARBINK,e.BERGMITE,e.AVALUGG,e.DIANCIE,e.HOOPA,e.VOLCANION,e.YUNGOOS,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.ROCKRUFF,e.LYCANROC,e.MUDBRAY,e.MUDSDALE,e.STUFFUL,e.BEWEAR,e.PASSIMIAN,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.MINIOR,e.KOMALA,e.TURTONATOR,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_BULU,e.SOLGALEO,e.NIHILEGO,e.BUZZWOLE,e.GUZZLORD,e.NECROZMA,e.MARSHADOW,e.STAKATAKA,e.MELMETAL,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.SILICOBRA,e.SANDACONDA,e.CURSOLA,e.RUNERIGUS,e.FALINKS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.URSHIFU,e.ZARUDE,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.SPIDOPS,e.PAWMOT,e.GARGANACL,e.KLAWF,e.RELLOR,e.RABSCA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.BOMBIRDIER,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.ANNIHILAPE,e.CLODSIRE,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.IRON_TREADS,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_THORNS,e.TING_LU,e.OKIDOGI,e.OGERPON,e.ARCHALUDON,e.IRON_BOULDER,[e.WORMADAM,"sandy"],e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_CORSOLA,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.METAL_SOUND]:[e.MAGNEMITE,e.MAGNETON,e.VOLTORB,e.ELECTRODE,e.ELECTABUZZ,e.JOLTEON,e.KABUTO,e.KABUTOPS,e.ZAPDOS,e.MEW,e.FORRETRESS,e.SKARMORY,e.ELEKID,e.ARON,e.LAIRON,e.AGGRON,e.REGISTEEL,e.JIRACHI,e.EMPOLEON,e.SHIELDON,e.BASTIODON,[e.WORMADAM,"trash"],e.BRONZOR,e.BRONZONG,e.LUCARIO,e.MAGNEZONE,e.ELECTIVIRE,e.PROBOPASS,e.DIALGA,e.HEATRAN,e.DRILBUR,e.EXCADRILL,e.KLINK,e.KLANG,e.KLINKLANG,e.PAWNIARD,e.BISHARP,e.DURANT,e.COBALION,e.GENESECT,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.KLEFKI,e.TYPE_NULL,e.SILVALLY,e.DHELMISE,e.KOMMO_O,e.SOLGALEO,e.CELESTEELA,e.MAGEARNA,e.CORVIKNIGHT,e.TOXEL,e.TOXTRICITY,e.PERRSERKER,e.DURALUDON,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.VAROOM,e.REVAVROOM,e.ORTHWORM,e.KINGAMBIT,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_JUGULIS,e.IRON_MOTH,e.GHOLDENGO,e.MIRAIDON,e.IRON_LEAVES,e.ARCHALUDON,e.IRON_CROWN,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.GALAR_MEOWTH,e.GALAR_STUNFISK],[t.COSMIC_POWER]:[e.CLEFAIRY,e.CLEFABLE,e.STARYU,e.STARMIE,e.MEW,e.NATU,e.XATU,e.SKITTY,e.DELCATTY,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.CASTFORM,e.CHIMECHO,e.METANG,e.METAGROSS,e.RAYQUAZA,e.JIRACHI,[e.DEOXYS,"","attack"],e.BUNEARY,e.LOPUNNY,e.CHINGLING,e.ARCEUS,e.SIGILYPH,e.GOTHITELLE,e.ELGYEM,e.BEHEEYEM,e.MINIOR,e.COSMOEM,e.SOLGALEO,e.LUNALA,e.NECROZMA,e.ETERNATUS,e.RELLOR,e.RABSCA],[t.SIGNAL_BEAM]:[e.BLASTOISE,e.BUTTERFREE,e.PIKACHU,e.RAICHU,e.CLEFAIRY,e.CLEFABLE,e.VENONAT,e.VENOMOTH,e.PSYDUCK,e.GOLDUCK,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.SEEL,e.DEWGONG,e.CLOYSTER,e.DROWZEE,e.HYPNO,e.VOLTORB,e.ELECTRODE,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.LAPRAS,e.VAPOREON,e.JOLTEON,e.PORYGON,e.ARTICUNO,e.ZAPDOS,e.MEWTWO,e.MEW,e.SPINARAK,e.ARIADOS,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.YANMA,e.ESPEON,e.SLOWKING,e.GIRAFARIG,e.FORRETRESS,e.QWILFISH,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.KINGDRA,e.PORYGON2,e.STANTLER,e.SMOOCHUM,e.ELEKID,e.RAIKOU,e.SUICUNE,e.LUGIA,e.HO_OH,e.CELEBI,e.BEAUTIFLY,e.DUSTOX,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.SPOINK,e.GRUMPIG,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.CHIMECHO,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.GOREBYSS,e.METANG,e.METAGROSS,e.REGICE,e.KYOGRE,e.JIRACHI,e.DEOXYS,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.SHINX,e.LUXIO,e.LUXRAY,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.FINNEON,e.LUMINEON,e.MANTYKE,e.MAGNEZONE,e.ELECTIVIRE,e.TOGEKISS,e.YANMEGA,e.GLACEON,e.PORYGON_Z,e.GALLADE,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.ARCEUS,e.VICTINI,e.WATCHOG,e.MUNNA,e.MUSHARNA,e.BLITZLE,e.ZEBSTRIKA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.SIGILYPH,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.JOLTIK,e.GALVANTULA,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.GOLETT,e.GOLURK,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.ZEKROM,e.KYUREM,e.MELOETTA,e.GENESECT,e.DELPHOX,e.VIVILLON,e.ESPURR,e.MEOWSTIC,e.MALAMAR,e.HELIOPTILE,e.HELIOLISK,e.DEDENNE,e.HOOPA,e.VIKAVOLT,e.CUTIEFLY,e.RIBOMBEE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.TYPE_NULL,e.SILVALLY,e.BRUXISH,e.DRAMPA,e.LUNALA,e.PHEROMOSA,e.XURKITREE,e.NECROZMA,e.MAGEARNA,e.POIPOLE,e.NAGANADEL,e.WYRDEER,e.FARIGIRAF,e.ALOLA_RAICHU],[t.SAND_TOMB]:[e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.ONIX,e.MEW,e.SUDOWOODO,e.PINECO,e.FORRETRESS,e.GLIGAR,e.STEELIX,e.SCIZOR,e.SHUCKLE,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.SKARMORY,e.PHANPY,e.DONPHAN,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.MARSHTOMP,e.SWAMPERT,e.NOSEPASS,e.LAIRON,e.AGGRON,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.LUNATONE,e.SOLROCK,e.WHISCASH,e.BALTOY,e.CLAYDOL,e.REGIROCK,e.REGISTEEL,e.GROUDON,e.TURTWIG,e.GROTLE,e.TORTERRA,e.GASTRODON,e.BONSLY,e.GIBLE,e.GABITE,e.GARCHOMP,e.HIPPOPOTAS,e.HIPPOWDON,e.DRAPION,e.GLISCOR,e.MAMOSWINE,e.PROBOPASS,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DRILBUR,e.EXCADRILL,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DWEBBLE,e.CRUSTLE,e.LANDORUS,e.DIGGERSBY,e.CARBINK,e.DIANCIE,e.MUDBRAY,e.MUDSDALE,e.SANDYGAST,e.PALOSSAND,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.SILICOBRA,e.SANDACONDA,e.RUNERIGUS,e.STONJOURNER,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.SANDY_SHOCKS,e.IRON_THORNS,e.TING_LU,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO],[t.MUDDY_WATER]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWBRO,e.SEEL,e.DEWGONG,e.LICKITUNG,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.OMANYTE,e.OMASTAR,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.CHINCHOU,e.LANTURN,e.MARILL,e.AZUMARILL,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.KINGDRA,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.WINGULL,e.PELIPPER,e.AZURILL,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.FEEBAS,e.MILOTIC,e.CLAMPERL,e.RELICANTH,e.KYOGRE,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.HIPPOPOTAS,e.HIPPOWDON,e.LICKILICKY,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.BASCULIN,e.TIRTOUGA,e.CARRACOSTA,e.JELLICENT,e.STUNFISK,e.KELDEO,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.GOOMY,e.SLIGGOO,e.GOODRA,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.GOLISOPOD,e.DHELMISE,e.TAPU_FINI,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.DREDNAW,e.CLOBBOPUS,e.GRAPPLOCT,e.PINCURCHIN,e.BASCULEGION,e.TADBULB,e.BELLIBOLT,e.WIGLETT,e.WUGTRIO,e.TATSUGIRI,e.CLODSIRE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_STUNFISK,e.HISUI_SLIGGOO,e.HISUI_GOODRA],[t.BULLET_SEED]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.EXEGGCUTE,e.EXEGGUTOR,e.TANGELA,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNKERN,e.SUNFLORA,e.HERACROSS,e.REMORAID,e.OCTILLERY,e.MANTINE,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.SHROOMISH,e.BRELOOM,e.ROSELIA,e.GULPIN,e.SWALOT,e.CACNEA,e.CACTURNE,e.LILEEP,e.CRADILY,e.TROPIUS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.BUDEW,e.ROSERADE,e.CHERUBI,e.CHERRIM,e.CARNIVINE,e.SNOVER,e.ABOMASNOW,e.TANGROWTH,e.LEAFEON,e.SHAYMIN,e.ARCEUS,e.PATRAT,e.WATCHOG,e.PANSAGE,e.SIMISAGE,e.LEAVANNY,e.PETILIL,e.LILLIGANT,e.MARACTUS,e.MINCCINO,e.CINCCINO,e.DEERLING,e.SAWSBUCK,e.FOONGUS,e.AMOONGUSS,e.FERROSEED,e.FERROTHORN,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.SKIDDO,e.GOGOAT,e.PUMPKABOO,e.GOURGEIST,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.FOMANTIS,e.LURANTIS,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.TAPU_BULU,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SKWOVET,e.GREEDENT,e.GOSSIFLEUR,e.ELDEGOSS,e.FLAPPLE,e.APPLETUN,e.MORPEKO,e.ZARUDE,e.CALYREX,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.TANDEMAUS,e.MAUSHOLD,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.CAPSAKID,e.SCOVILLAIN,e.BRUTE_BONNET,e.WO_CHIEN,e.DIPPLIN,e.OGERPON,e.HYDRAPPLE,[e.WORMADAM,"plant"],e.ALOLA_EXEGGUTOR,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE],[t.AERIAL_ACE]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.SPEAROW,e.FEAROW,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.ZUBAT,e.GOLBAT,e.PARAS,e.PARASECT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.SLOWBRO,e.FARFETCHD,e.DODUO,e.DODRIO,e.CUBONE,e.MAROWAK,e.KANGASKHAN,e.MR_MIME,e.SCYTHER,e.PORYGON,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEWTWO,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.CROBAT,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.YANMA,e.MURKROW,e.MISDREAVUS,e.GLIGAR,e.SCIZOR,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.PORYGON2,e.HITMONTOP,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.BEAUTIFLY,e.DUSTOX,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.MASQUERAIN,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.SABLEYE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.VOLBEAT,e.ILLUMISE,e.FLYGON,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.CORPHISH,e.CRAWDAUNT,e.ANORITH,e.ARMALDO,e.KECLEON,e.TROPIUS,e.ABSOL,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGISTEEL,e.LATIAS,e.LATIOS,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.KRICKETUNE,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHATOT,e.GIBLE,e.GABITE,e.GARCHOMP,e.RIOLU,e.LUCARIO,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.MANTYKE,e.WEAVILE,e.TANGROWTH,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLISCOR,e.PORYGON_Z,e.GALLADE,e.DIALGA,e.PALKIA,e.REGIGIGAS,e.GIRATINA,e.DARKRAI,e.ARCEUS,e.SNIVY,e.SERVINE,e.SERPERIOR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.LEAVANNY,e.KROKOROK,e.KROOKODILE,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SIGILYPH,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.DUCKLETT,e.SWANNA,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FERROTHORN,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.KELDEO,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.GOGOAT,e.PANCHAM,e.PANGORO,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.HAWLUCHA,e.DEDENNE,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.LURANTIS,e.STUFFUL,e.BEWEAR,e.PASSIMIAN,e.GOLISOPOD,e.TYPE_NULL,e.SILVALLY,e.BRUXISH,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.LUNALA,e.KARTANA,e.NECROZMA,e.NAGANADEL,e.ZERAORA,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.FLAPPLE,e.CRAMORANT,e.DRACOZOLT,e.KUBFU,e.URSHIFU,e.ZARUDE,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.FLORAGATO,e.MEOWSCARADA,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.SPIDOPS,e.LOKIX,e.TANDEMAUS,e.MAUSHOLD,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.ESPATHRA,e.BOMBIRDIER,e.CYCLIZAR,e.FLAMIGO,e.KINGAMBIT,e.SLITHER_WING,e.ARCTIBAX,e.BAXCALIBUR,e.CHIEN_PAO,e.ROARING_MOON,e.IRON_VALIANT,e.IRON_LEAVES,e.FEZANDIPITI,e.IRON_BOULDER,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[t.ICICLE_SPEAR]:[e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.JYNX,e.LAPRAS,e.ARTICUNO,e.MEW,e.SNEASEL,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.DELIBIRD,e.SNORUNT,e.GLALIE,e.SEALEO,e.WALREIN,e.REGICE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.GLACEON,e.MAMOSWINE,e.FROSLASS,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.KYUREM,e.AURORUS,e.BERGMITE,e.AVALUGG,e.INTELEON,e.CURSOLA,e.MR_RIME,e.SNOM,e.FROSMOTH,e.EISCUE,e.ARCTOZOLT,e.ARCTOVISH,e.GLASTRIER,e.CETODDLE,e.CETITAN,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.GALAR_MR_MIME,e.GALAR_CORSOLA,[e.CALYREX,"ice"],e.HISUI_AVALUGG],[t.IRON_DEFENSE]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.METAPOD,e.BUTTERFREE,e.KAKUNA,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.SHELLDER,e.CLOYSTER,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.RHYDON,e.MR_MIME,e.PINSIR,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.MEW,e.SUDOWOODO,e.SLOWKING,e.PINECO,e.FORRETRESS,e.STEELIX,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SLUGMA,e.MAGCARGO,e.CORSOLA,e.SKARMORY,e.DONPHAN,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.SILCOON,e.CASCOON,e.NOSEPASS,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.TORKOAL,e.SOLROCK,e.CORPHISH,e.CRAWDAUNT,e.CLAYDOL,e.ANORITH,e.ARMALDO,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.BAGON,e.SHELGON,e.SALAMENCE,e.BELDUM,e.METANG,e.METAGROSS,e.REGIROCK,e.REGISTEEL,e.JIRACHI,e.TORTERRA,e.EMPOLEON,e.SHIELDON,e.BASTIODON,e.BRONZOR,e.BRONZONG,e.RIOLU,e.LUCARIO,e.DRAPION,e.MAGNEZONE,e.RHYPERIOR,e.PROBOPASS,e.DIALGA,e.HEATRAN,e.ARCEUS,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DRILBUR,e.EXCADRILL,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.DARMANITAN,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.KARRABLAST,e.ESCAVALIER,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.CRYOGONAL,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.VULLABY,e.MANDIBUZZ,e.DURANT,e.COBALION,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.SPEWPA,e.VIVILLON,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.BINACLE,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.CARBINK,e.KLEFKI,e.BERGMITE,e.AVALUGG,e.DIANCIE,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ROCKRUFF,e.LYCANROC,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.TURTONATOR,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.STAKATAKA,e.MELTAN,e.MELMETAL,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SANDACONDA,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.FALINKS,e.STONJOURNER,e.EISCUE,e.CUFANT,e.COPPERAJAH,e.ARCTOVISH,e.DURALUDON,e.ZACIAN,e.ZAMAZENTA,e.URSHIFU,e.GLASTRIER,e.ENAMORUS,e.NACLI,e.NACLSTACK,e.GARGANACL,e.ARMAROUGE,e.CERULEDGE,e.KLAWF,e.RELLOR,e.RABSCA,e.VAROOM,e.REVAVROOM,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.KINGAMBIT,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_HANDS,e.IRON_THORNS,e.IRON_LEAVES,e.POLTCHAGEIST,e.SINISTCHA,e.ARCHALUDON,e.IRON_CROWN,[e.DEOXYS,"defense"],[e.WORMADAM,"trash"],e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,[e.CALYREX,"ice"],e.HISUI_AVALUGG],[t.DRAGON_CLAW]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.AERODACTYL,e.DRAGONITE,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.TYRANITAR,e.SCEPTILE,e.AGGRON,e.FLYGON,e.ALTARIA,e.BAGON,e.SHELGON,e.SALAMENCE,e.LATIAS,e.LATIOS,e.GROUDON,e.RAYQUAZA,e.GIBLE,e.GABITE,e.GARCHOMP,e.DIALGA,e.PALKIA,e.GIRATINA,e.ARCEUS,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.ARCHEN,e.ARCHEOPS,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.DRUDDIGON,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.CHESNAUGHT,e.PANGORO,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.GOODRA,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.SALANDIT,e.SALAZZLE,e.BEWEAR,e.TYPE_NULL,e.SILVALLY,e.TURTONATOR,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.GUZZLORD,e.NAGANADEL,e.DRACOZOLT,e.DURALUDON,e.DRAGAPULT,e.REGIDRAGO,e.CERULEDGE,e.CYCLIZAR,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.ARCHALUDON,e.GOUGING_FIRE,e.HISUI_GOODRA],[t.FRENZY_PLANT]:[e.VENUSAUR,e.MEW,e.MEGANIUM,e.SCEPTILE,e.TORTERRA,e.SERPERIOR,e.CHESNAUGHT,e.DECIDUEYE,e.RILLABOOM,e.MEOWSCARADA,e.HISUI_DECIDUEYE],[t.BULK_UP]:[e.MANKEY,e.PRIMEAPE,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.HITMONLEE,e.HITMONCHAN,e.ELECTABUZZ,e.PINSIR,e.MEWTWO,e.MEW,e.SNUBBULL,e.GRANBULL,e.HERACROSS,e.TEDDIURSA,e.URSARING,e.TYROGUE,e.HITMONTOP,e.COMBUSKEN,e.BLAZIKEN,e.SWAMPERT,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.GROUDON,e.RAYQUAZA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.BUIZEL,e.FLOATZEL,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.ELECTIVIRE,e.GALLADE,e.DIALGA,e.PALKIA,e.ARCEUS,e.PIGNITE,e.EMBOAR,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.KROOKODILE,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.EELEKTROSS,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.RUFFLET,e.BRAVIARY,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.BUNNELBY,e.DIGGERSBY,e.TALONFLAME,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.BARBARACLE,e.HAWLUCHA,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.CRABRAWLER,e.CRABOMINABLE,e.LYCANROC,e.STUFFUL,e.BEWEAR,e.PASSIMIAN,e.GOLISOPOD,e.KOMALA,e.TURTONATOR,e.MIMIKYU,e.BRUXISH,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_BULU,e.BUZZWOLE,e.MARSHADOW,e.ZERAORA,e.RILLABOOM,e.RABOOT,e.CINDERACE,e.CORVIKNIGHT,e.BOLTUND,e.CLOBBOPUS,e.GRAPPLOCT,e.GRIMMSNARL,e.OBSTAGOON,e.FALINKS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.URSALUNA,e.SNEASLER,e.QUAQUAVAL,e.PAWMOT,e.CERULEDGE,e.PALAFIN,e.FLAMIGO,e.ANNIHILAPE,e.GREAT_TUSK,e.SCREAM_TAIL,e.SLITHER_WING,e.KORAIDON,e.OKIDOGI,e.ALOLA_RATICATE,e.GALAR_ZAPDOS,e.GALAR_DARMANITAN,e.HISUI_SNEASEL,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS],[t.BOUNCE]:[e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PONYTA,e.RAPIDASH,e.HITMONLEE,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.MAGIKARP,e.GYARADOS,e.MEW,e.SPINARAK,e.ARIADOS,e.CHINCHOU,e.LANTURN,e.IGGLYBUFF,e.MARILL,e.AZUMARILL,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.QWILFISH,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.KINGDRA,e.DONPHAN,e.STANTLER,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.SHIFTRY,e.AZURILL,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.SPOINK,e.GRUMPIG,e.BARBOACH,e.WHISCASH,e.ABSOL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.CROAGUNK,e.TOXICROAK,e.FINNEON,e.LUMINEON,e.MANTYKE,e.PHIONE,e.MANAPHY,e.VICTINI,e.BLITZLE,e.ZEBSTRIKA,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.BASCULIN,e.MARACTUS,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.DEERLING,e.SAWSBUCK,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.EELEKTRIK,e.EELEKTROSS,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.COBALION,e.VIRIZION,e.KELDEO,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.PYROAR,e.GOGOAT,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HAWLUCHA,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.TOGEDEMARU,e.BUZZWOLE,e.PHEROMOSA,e.MARSHADOW,e.ZERAORA,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.DUBWOOL,e.ARROKUDA,e.BARRASKEWDA,e.REGIELEKI,e.LOKIX,e.FINIZEN,e.CETODDLE,e.CETITAN,e.CHI_YU,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_ZAPDOS,e.GALAR_STUNFISK],[t.MUD_SHOT]:[e.EKANS,e.ARBOK,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWPOKE,e.SLOWBRO,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.KRABBY,e.KINGLER,e.RHYHORN,e.RHYDON,e.GOLDEEN,e.SEAKING,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.MEW,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.DUNSPARCE,e.GLIGAR,e.QWILFISH,e.SHUCKLE,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.REMORAID,e.OCTILLERY,e.HOUNDOUR,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.MARSHTOMP,e.SWAMPERT,e.ZIGZAGOON,e.LINOONE,e.LOMBRE,e.LUDICOLO,e.SURSKIT,e.MASQUERAIN,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.SABLEYE,e.GULPIN,e.SWALOT,e.NUMEL,e.CAMERUPT,e.GRUMPIG,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.RELICANTH,e.GROUDON,e.TURTWIG,e.GROTLE,e.TORTERRA,e.PACHIRISU,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.BONSLY,e.GIBLE,e.GABITE,e.GARCHOMP,e.HIPPOPOTAS,e.HIPPOWDON,e.CROAGUNK,e.TOXICROAK,e.RHYPERIOR,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.DRILBUR,e.EXCADRILL,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.TIRTOUGA,e.CARRACOSTA,e.CUBCHOO,e.BEARTIC,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.BOUFFALANT,e.LANDORUS,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.SKIDDO,e.GOGOAT,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.AMAURA,e.AURORUS,e.GOOMY,e.SLIGGOO,e.GOODRA,e.VOLCANION,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDSDALE,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.NICKIT,e.THIEVUL,e.CHEWTLE,e.DREDNAW,e.SILICOBRA,e.SANDACONDA,e.CLOBBOPUS,e.GRAPPLOCT,e.OBSTAGOON,e.CUFANT,e.COPPERAJAH,e.ZARUDE,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.BASCULEGION,e.OVERQWIL,e.LECHONK,e.OINKOLOGNE,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.NACLI,e.NACLSTACK,e.GARGANACL,e.TADBULB,e.BELLIBOLT,e.SHROODLE,e.GRAFAIAI,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.RELLOR,e.RABSCA,e.WIGLETT,e.WUGTRIO,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.CLODSIRE,e.DUDUNSPARCE,e.GREAT_TUSK,e.SANDY_SHOCKS,e.IRON_TREADS,e.WO_CHIEN,e.TING_LU,e.KORAIDON,e.WALKING_WAKE,e.PIKACHU,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_STUNFISK,e.HISUI_QWILFISH,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.POISON_TAIL]:[e.EKANS,e.ARBOK,e.NIDORAN_F,e.NIDORAN_M,e.MEW,e.DUNSPARCE,e.GLIGAR,e.QWILFISH,e.SEVIPER,e.STUNKY,e.SKUNTANK,e.SKORUPI,e.GLISCOR,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.DRUDDIGON,e.SKRELP,e.DRAGALGE,e.GOOMY,e.GOODRA,e.SALANDIT,e.SALAZZLE,e.SILICOBRA,e.SANDACONDA,e.TOXTRICITY,e.ETERNATUS,e.SNEASLER,e.OVERQWIL,e.GRAFAIAI,e.CLODSIRE,e.DUDUNSPARCE,e.OKIDOGI,e.FEZANDIPITI,e.PIKACHU,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.PALDEA_WOOPER],[t.COVET]:[e.RATTATA,e.RATICATE,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.FARFETCHD,e.HITMONLEE,e.HITMONCHAN,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.SNORLAX,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.SENTRET,e.FURRET,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.AIPOM,e.ESPEON,e.UMBREON,e.SNUBBULL,e.GRANBULL,e.SHUCKLE,e.TEDDIURSA,e.URSARING,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.BLISSEY,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.AZURILL,e.SKITTY,e.DELCATTY,e.PLUSLE,e.MINUN,e.ILLUMISE,e.ROSELIA,e.SPOINK,e.GRUMPIG,e.SPINDA,e.LATIAS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIDOOF,e.BIBAREL,e.BUDEW,e.ROSERADE,e.PACHIRISU,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.GLAMEOW,e.PURUGLY,e.BONSLY,e.MIME_JR,e.HAPPINY,e.MUNCHLAX,e.ELECTIVIRE,e.MAGMORTAR,e.LICKILICKY,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.PHIONE,e.MANAPHY,e.SHAYMIN,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANPOUR,e.SIMIPOUR,e.PANSEAR,e.SIMISEAR,e.AUDINO,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.EMOLGA,e.CUBCHOO,e.BEARTIC,e.KELDEO,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLABEBE,e.FLOETTE,e.FLORGES,e.PANCHAM,e.PANGORO,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.SYLVEON,e.DEDENNE,e.CARBINK,e.KLEFKI,e.DIANCIE,e.HOOPA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.SALANDIT,e.SALAZZLE,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.TOGEDEMARU,e.MIMIKYU,e.POIPOLE,e.GREEDENT,e.PERRSERKER,e.SIRFETCHD,e.MR_RIME,e.URSALUNA,e.LECHONK,e.OINKOLOGNE,e.FIDOUGH,e.DACHSBUN,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.ANNIHILAPE,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_MEOWTH,e.GALAR_FARFETCHD,e.GALAR_MR_MIME,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE,e.ETERNAL_FLOETTE],[t.MAGICAL_LEAF]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.EXEGGUTOR,e.MR_MIME,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CLEFFA,e.TOGETIC,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNKERN,e.SUNFLORA,e.ESPEON,e.MISDREAVUS,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SHROOMISH,e.BRELOOM,e.ROSELIA,e.CACNEA,e.CACTURNE,e.TROPIUS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.ROSERADE,e.CHERUBI,e.CHERRIM,e.MISMAGIUS,e.CARNIVINE,e.SNOVER,e.ABOMASNOW,e.TOGEKISS,e.LEAFEON,e.GALLADE,e.SHAYMIN,e.ARCEUS,e.SNIVY,e.PANSAGE,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.PETILIL,e.LILLIGANT,e.DEERLING,e.SAWSBUCK,e.FOONGUS,e.AMOONGUSS,e.VIRIZION,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.SYLVEON,e.PHANTUMP,e.TREVENANT,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.CUTIEFLY,e.RIBOMBEE,e.FOMANTIS,e.LURANTIS,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.GOSSIFLEUR,e.ELDEGOSS,e.FLAPPLE,e.APPLETUN,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.ALCREMIE,e.INDEEDEE,e.ZARUDE,e.CALYREX,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.TOEDSCOOL,e.TOEDSCRUEL,e.CAPSAKID,e.SCOVILLAIN,e.BRUTE_BONNET,e.FLUTTER_MANE,e.WO_CHIEN,e.IRON_VALIANT,e.IRON_LEAVES,e.POLTCHAGEIST,e.SINISTCHA,e.OGERPON,e.HYDRAPPLE,[e.MEOWSTIC,"female"],e.ALOLA_EXEGGUTOR,e.ETERNAL_FLOETTE,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE],[t.CALM_MIND]:[e.PIKACHU,e.RAICHU,e.CLEFAIRY,e.CLEFABLE,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PSYDUCK,e.GOLDUCK,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.DROWZEE,e.HYPNO,e.EXEGGUTOR,e.CHANSEY,e.MR_MIME,e.JYNX,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CLEFFA,e.NATU,e.XATU,e.SUDOWOODO,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.DUNSPARCE,e.SNEASEL,e.CORSOLA,e.STANTLER,e.SMOOCHUM,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LUGIA,e.HO_OH,e.CELEBI,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.SPOINK,e.GRUMPIG,e.SPINDA,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.ABSOL,e.RELICANTH,e.LATIAS,e.LATIOS,e.KYOGRE,e.JIRACHI,e.DEOXYS,e.INFERNAPE,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.HONCHKROW,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.SPIRITOMB,e.LUCARIO,e.WEAVILE,e.LEAFEON,e.GLACEON,e.GALLADE,e.DUSKNOIR,e.UXIE,e.MESPRIT,e.AZELF,e.GIRATINA,e.CRESSELIA,e.MANAPHY,e.DARKRAI,e.ARCEUS,e.SNIVY,e.SERVINE,e.SERPERIOR,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.ALOMOMOLA,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.MIENFOO,e.MIENSHAO,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.LANDORUS,e.KELDEO,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.VIVILLON,e.FLABEBE,e.FLOETTE,e.FLORGES,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.AMAURA,e.AURORUS,e.SYLVEON,e.CARBINK,e.KLEFKI,e.TREVENANT,e.XERNEAS,e.DIANCIE,e.HOOPA,e.PRIMARINA,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.COMFEY,e.ORANGURU,e.MINIOR,e.KOMALA,e.BRUXISH,e.DRAMPA,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.XURKITREE,e.KARTANA,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.BLACEPHALON,e.ZERAORA,e.DOTTLER,e.ORBEETLE,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.CURSOLA,e.MR_RIME,e.RUNERIGUS,e.ALCREMIE,e.FROSMOTH,e.INDEEDEE,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.SNEASLER,e.ENAMORUS,e.ARMAROUGE,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.FARIGIRAF,e.DUDUNSPARCE,e.SCREAM_TAIL,e.FLUTTER_MANE,e.IRON_VALIANT,e.MIRAIDON,e.IRON_LEAVES,e.POLTCHAGEIST,e.SINISTCHA,e.MUNKIDORI,e.FEZANDIPITI,e.RAGING_BOLT,e.IRON_CROWN,e.TERAPAGOS,e.ALOLA_RAICHU,e.ALOLA_NINETALES,e.ETERNAL_FLOETTE,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_YAMASK,e.HISUI_TYPHLOSION,e.HISUI_SNEASEL,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.BLOODMOON_URSALUNA],[t.LEAF_BLADE]:[e.VICTREEBEL,e.FARFETCHD,e.MEW,e.BELLOSSOM,e.CELEBI,e.GROVYLE,e.SCEPTILE,e.NUZLEAF,e.SHIFTRY,e.TROPIUS,e.LEAFEON,e.GALLADE,e.SNIVY,e.SERVINE,e.SERPERIOR,e.LEAVANNY,e.LILLIGANT,e.VIRIZION,e.SKIDDO,e.GOGOAT,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.FOMANTIS,e.LURANTIS,e.KARTANA,e.SIRFETCHD,e.IRON_VALIANT,e.IRON_LEAVES,e.GALAR_FARFETCHD,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE],[t.DRAGON_DANCE]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.ONIX,e.HORSEA,e.SEADRA,e.GYARADOS,e.LAPRAS,e.AERODACTYL,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.STEELIX,e.KINGDRA,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.SCEPTILE,e.FLYGON,e.ALTARIA,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.MILOTIC,e.TROPIUS,e.BAGON,e.SHELGON,e.SALAMENCE,e.LATIAS,e.LATIOS,e.RAYQUAZA,e.ARCEUS,e.SCRAGGY,e.SCRAFTY,e.AXEW,e.FRAXURE,e.HAXORUS,e.HYDREIGON,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.TYRUNT,e.TYRANTRUM,e.NOIVERN,e.ZYGARDE,e.SALAZZLE,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.NECROZMA,e.NAGANADEL,e.FLAPPLE,e.DRAKLOAK,e.DRAGAPULT,e.ETERNATUS,e.REGIDRAGO,e.TATSUGIRI,e.IRON_THORNS,e.BAXCALIBUR,e.ROARING_MOON,e.WALKING_WAKE,e.GOUGING_FIRE],[t.ROCK_BLAST]:[e.NIDOQUEEN,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SHELLDER,e.CLOYSTER,e.ONIX,e.RHYHORN,e.RHYDON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.MEW,e.SUDOWOODO,e.PINECO,e.FORRETRESS,e.STEELIX,e.SHUCKLE,e.HERACROSS,e.SLUGMA,e.MAGCARGO,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.MANTINE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.NOSEPASS,e.LAIRON,e.AGGRON,e.LUNATONE,e.SOLROCK,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.RELICANTH,e.REGIROCK,e.GROUDON,e.TORTERRA,e.SHIELDON,e.BASTIODON,e.GASTRODON,e.BRONZOR,e.BRONZONG,e.BONSLY,e.RHYPERIOR,e.MAMOSWINE,e.PROBOPASS,e.HEATRAN,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.EXCADRILL,e.CONKELDURR,e.DWEBBLE,e.CRUSTLE,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.CINCCINO,e.TERRAKION,e.BINACLE,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.CARBINK,e.TRUMBEAK,e.TOUCANNON,e.LYCANROC,e.MINIOR,e.NECROZMA,e.STAKATAKA,e.BLACEPHALON,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.SILICOBRA,e.SANDACONDA,e.CURSOLA,e.RUNERIGUS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.KLEAVOR,e.GARGANACL,e.KLAWF,e.BOMBIRDIER,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.IRON_THORNS,e.IRON_BOULDER,[e.WORMADAM,"sandy"],e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.GALAR_SLOWBRO,e.GALAR_CORSOLA,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_AVALUGG],[t.WATER_PULSE]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.KRABBY,e.KINGLER,e.LICKITUNG,e.CHANSEY,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.JYNX,e.TAUROS,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.SNORLAX,e.ARTICUNO,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.CHINCHOU,e.LANTURN,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.MARILL,e.AZUMARILL,e.POLITOED,e.AIPOM,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SNEASEL,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.KINGDRA,e.SMOOCHUM,e.MILTANK,e.BLISSEY,e.SUICUNE,e.TYRANITAR,e.LUGIA,e.CELEBI,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.WINGULL,e.PELIPPER,e.SURSKIT,e.MASQUERAIN,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.AZURILL,e.SKITTY,e.DELCATTY,e.SABLEYE,e.ARON,e.LAIRON,e.AGGRON,e.VOLBEAT,e.ILLUMISE,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.SPINDA,e.ZANGOOSE,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.LATIAS,e.LATIOS,e.KYOGRE,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIBAREL,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.GLAMEOW,e.PURUGLY,e.HAPPINY,e.SPIRITOMB,e.MUNCHLAX,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.TOGEKISS,e.GLACEON,e.FROSLASS,e.UXIE,e.MESPRIT,e.AZELF,e.PALKIA,e.PHIONE,e.MANAPHY,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PANPOUR,e.SIMIPOUR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.BASCULIN,e.TIRTOUGA,e.CARRACOSTA,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.STUNFISK,e.KELDEO,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.AMAURA,e.AURORUS,e.GOOMY,e.SLIGGOO,e.GOODRA,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.VOLCANION,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.GOLISOPOD,e.BRUXISH,e.DRAMPA,e.KOMMO_O,e.TAPU_FINI,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.CHEWTLE,e.DREDNAW,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.EISCUE,e.BASCULEGION,e.QUAXWELL,e.QUAQUAVAL,e.TANDEMAUS,e.MAUSHOLD,e.TADBULB,e.BELLIBOLT,e.WIGLETT,e.WUGTRIO,e.FINIZEN,e.PALAFIN,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.CLODSIRE,e.SCREAM_TAIL,e.IRON_BUNDLE,e.WALKING_WAKE,e.TERAPAGOS,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.HISUI_QWILFISH,e.HISUI_SAMUROTT,e.HISUI_SLIGGOO,e.HISUI_GOODRA,[e.PALDEA_TAUROS,"aqua"],e.PALDEA_WOOPER],[t.ROOST]:[e.CHARIZARD,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.SPEAROW,e.FEAROW,e.ZUBAT,e.GOLBAT,e.VENOMOTH,e.FARFETCHD,e.DODUO,e.DODRIO,e.SCYTHER,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.CROBAT,e.TOGETIC,e.NATU,e.XATU,e.YANMA,e.MURKROW,e.DUNSPARCE,e.GLIGAR,e.SCIZOR,e.MANTINE,e.SKARMORY,e.LUGIA,e.HO_OH,e.BEAUTIFLY,e.DUSTOX,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.MASQUERAIN,e.NINJASK,e.VOLBEAT,e.ILLUMISE,e.VIBRAVA,e.FLYGON,e.SWABLU,e.ALTARIA,e.TROPIUS,e.SALAMENCE,e.LATIAS,e.LATIOS,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.MOTHIM,e.VESPIQUEN,e.HONCHKROW,e.CHATOT,e.TOGEKISS,e.YANMEGA,e.GLISCOR,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.SIGILYPH,e.ARCHEN,e.ARCHEOPS,e.DUCKLETT,e.SWANNA,e.EMOLGA,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HYDREIGON,e.VOLCARONA,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.HAWLUCHA,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.VIKAVOLT,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.DRAMPA,e.TAPU_KOKO,e.LUNALA,e.BUZZWOLE,e.PHEROMOSA,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.CRAMORANT,e.KLEAVOR,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.FLITTLE,e.ESPATHRA,e.BOMBIRDIER,e.FLAMIGO,e.DUDUNSPARCE,e.ROARING_MOON,e.FEZANDIPITI,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[t.GRAVITY]:[e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MAGNEMITE,e.MAGNETON,e.EXEGGCUTE,e.EXEGGUTOR,e.CHANSEY,e.STARYU,e.STARMIE,e.PORYGON,e.MEWTWO,e.MEW,e.CLEFFA,e.IGGLYBUFF,e.ESPEON,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.PORYGON2,e.STANTLER,e.BLISSEY,e.GARDEVOIR,e.NOSEPASS,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.JIRACHI,e.DEOXYS,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.HAPPINY,e.MAGNEZONE,e.GLACEON,e.PORYGON_Z,e.PROBOPASS,e.DUSKNOIR,e.DIALGA,e.PALKIA,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.ARCEUS,e.MUNNA,e.MUSHARNA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.AUDINO,e.SIGILYPH,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.ELGYEM,e.BEHEEYEM,e.GOLETT,e.GOLURK,e.LANDORUS,e.MELOETTA,e.GENESECT,e.ESPURR,e.MEOWSTIC,e.CARBINK,e.XERNEAS,e.DIANCIE,e.HOOPA,e.ORANGURU,e.SANDYGAST,e.PALOSSAND,e.MINIOR,e.TOGEDEMARU,e.TAPU_LELE,e.TAPU_FINI,e.XURKITREE,e.CELESTEELA,e.NECROZMA,e.MAGEARNA,e.STAKATAKA,e.HATTERENE,e.STONJOURNER,e.INDEEDEE,e.ETERNATUS,e.CALYREX,e.WYRDEER,e.GARGANACL,e.RABSCA,e.FARIGIRAF,e.SANDY_SHOCKS,e.IRON_LEAVES,e.IRON_CROWN,e.TERAPAGOS,e.ALOLA_EXEGGUTOR,[e.INDEEDEE,"male"]],[t.GYRO_BALL]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.SANDSHREW,e.SANDSLASH,e.JIGGLYPUFF,e.WIGGLYTUFF,e.GEODUDE,e.GRAVELER,e.GOLEM,e.MAGNEMITE,e.MAGNETON,e.ONIX,e.VOLTORB,e.ELECTRODE,e.KOFFING,e.WEEZING,e.STARYU,e.STARMIE,e.OMANYTE,e.OMASTAR,e.MEW,e.TYPHLOSION,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.STEELIX,e.QWILFISH,e.SHUCKLE,e.MAGCARGO,e.DONPHAN,e.HITMONTOP,e.MILTANK,e.SABLEYE,e.TORKOAL,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.GLALIE,e.METANG,e.METAGROSS,e.RAYQUAZA,e.DRIFLOON,e.DRIFBLIM,e.BRONZOR,e.BRONZONG,e.MAGNEZONE,e.LICKILICKY,e.TEPIG,e.PIGNITE,e.EMBOAR,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.DARUMAKA,e.DARMANITAN,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.FERROSEED,e.FERROTHORN,e.GOLETT,e.GOLURK,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.CARBINK,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.DIANCIE,e.VOLCANION,e.PASSIMIAN,e.MINIOR,e.TOGEDEMARU,e.DHELMISE,e.SOLGALEO,e.BUZZWOLE,e.CELESTEELA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.STAKATAKA,e.MELTAN,e.MELMETAL,e.SKWOVET,e.GREEDENT,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.APPLETUN,e.PERRSERKER,e.DURALUDON,e.OVERQWIL,e.VAROOM,e.REVAVROOM,e.DUDUNSPARCE,e.SCREAM_TAIL,e.IRON_TREADS,e.DIPPLIN,e.ARCHALUDON,e.HYDRAPPLE,e.TERAPAGOS,[e.WORMADAM,"trash"],e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.GALAR_MEOWTH,e.GALAR_WEEZING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG],[t.BRINE]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PSYDUCK,e.GOLDUCK,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.KRABBY,e.KINGLER,e.HORSEA,e.SEADRA,e.STARYU,e.STARMIE,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.MEW,e.CHINCHOU,e.LANTURN,e.SLOWKING,e.QWILFISH,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.MANTINE,e.KINGDRA,e.SUICUNE,e.LUGIA,e.WINGULL,e.PELIPPER,e.HARIYAMA,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.KYOGRE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.FINNEON,e.LUMINEON,e.PALKIA,e.PHIONE,e.MANAPHY,e.ARCEUS,e.OSHAWOTT,e.PANPOUR,e.BASCULIN,e.TIRTOUGA,e.CARRACOSTA,e.DUCKLETT,e.SWANNA,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.CUBCHOO,e.BEARTIC,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.SANDYGAST,e.PALOSSAND,e.DHELMISE,e.TAPU_FINI,e.CLOBBOPUS,e.GRAPPLOCT,e.CURSOLA,e.PINCURCHIN,e.EISCUE,e.DRACOVISH,e.ARCTOVISH,e.DRAKLOAK,e.DRAGAPULT,e.OVERQWIL,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,[e.URSHIFU,"rapid-strike"],e.HISUI_QWILFISH],[t.PLUCK]:[e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.ZUBAT,e.GOLBAT,e.FARFETCHD,e.DODUO,e.DODRIO,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.NATU,e.XATU,e.MURKROW,e.DELIBIRD,e.SKARMORY,e.HO_OH,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.SWABLU,e.ALTARIA,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.HONCHKROW,e.CHATOT,e.TOGEKISS,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.SIGILYPH,e.ARCHEN,e.ARCHEOPS,e.DUCKLETT,e.SWANNA,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.INKAY,e.MALAMAR,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.ORICORIO,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.CRAMORANT,e.DRACOZOLT,e.ARCTOZOLT,e.WATTREL,e.KILOWATTREL,e.FLITTLE,e.ESPATHRA,e.BOMBIRDIER,e.VELUZA,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.GALAR_ZAPDOS,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[t.TAILWIND]:[e.CHARIZARD,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.SPEAROW,e.FEAROW,e.ZUBAT,e.GOLBAT,e.VENOMOTH,e.FARFETCHD,e.SCYTHER,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.CROBAT,e.TOGETIC,e.NATU,e.XATU,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.YANMA,e.MURKROW,e.GLIGAR,e.SCIZOR,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.SUICUNE,e.LUGIA,e.HO_OH,e.BEAUTIFLY,e.DUSTOX,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.MASQUERAIN,e.VOLBEAT,e.ILLUMISE,e.VIBRAVA,e.FLYGON,e.SWABLU,e.ALTARIA,e.CASTFORM,e.TROPIUS,e.SALAMENCE,e.LATIAS,e.LATIOS,e.RAYQUAZA,e.STARLY,e.STARAVIA,e.STARAPTOR,e.MOTHIM,e.COMBEE,e.VESPIQUEN,e.DRIFLOON,e.DRIFBLIM,e.HONCHKROW,e.CHATOT,e.FINNEON,e.LUMINEON,e.MANTYKE,e.TOGEKISS,e.YANMEGA,e.GLISCOR,e.ARCEUS,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.COTTONEE,e.WHIMSICOTT,e.SIGILYPH,e.ARCHEN,e.ARCHEOPS,e.DUCKLETT,e.SWANNA,e.EMOLGA,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HYDREIGON,e.VOLCARONA,e.TORNADUS,e.RESHIRAM,e.ZEKROM,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.HAWLUCHA,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.DARTRIX,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.COMFEY,e.SILVALLY,e.DRAMPA,e.LUNALA,e.KARTANA,e.NAGANADEL,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.CRAMORANT,e.FROSMOTH,e.KLEAVOR,e.ENAMORUS,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.BOMBIRDIER,e.FLAMIGO,e.DUDUNSPARCE,e.IRON_JUGULIS,e.ROARING_MOON,e.FEZANDIPITI,e.SHAYMIN,e.GIRATINA,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[t.U_TURN]:[e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.ZUBAT,e.GOLBAT,e.VENOMOTH,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.FARFETCHD,e.SCYTHER,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.MEW,e.SENTRET,e.FURRET,e.LEDYBA,e.LEDIAN,e.CROBAT,e.NATU,e.XATU,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.YANMA,e.MURKROW,e.GLIGAR,e.SCIZOR,e.CELEBI,e.BLAZIKEN,e.BEAUTIFLY,e.DUSTOX,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.MASQUERAIN,e.NINJASK,e.VOLBEAT,e.ILLUMISE,e.VIBRAVA,e.FLYGON,e.TROPIUS,e.RAYQUAZA,e.JIRACHI,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.STARLY,e.STARAVIA,e.STARAPTOR,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.AMBIPOM,e.LOPUNNY,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHATOT,e.FINNEON,e.LUMINEON,e.YANMEGA,e.GLISCOR,e.UXIE,e.MESPRIT,e.AZELF,e.PHIONE,e.MANAPHY,e.VICTINI,e.PURRLOIN,e.LIEPARD,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.WHIMSICOTT,e.DARUMAKA,e.DARMANITAN,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.EMOLGA,e.EELEKTRIK,e.EELEKTROSS,e.ACCELGOR,e.MIENFOO,e.MIENSHAO,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.MELOETTA,e.GENESECT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.FURFROU,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.HAWLUCHA,e.DEDENNE,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.WISHIWASHI,e.TSAREENA,e.COMFEY,e.PASSIMIAN,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TOGEDEMARU,e.TAPU_KOKO,e.PHEROMOSA,e.NAGANADEL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.ORBEETLE,e.THIEVUL,e.FLAPPLE,e.PERRSERKER,e.FROSMOTH,e.DRAKLOAK,e.DRAGAPULT,e.KUBFU,e.URSHIFU,e.ZARUDE,e.KLEAVOR,e.SNEASLER,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.QUAQUAVAL,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.TANDEMAUS,e.MAUSHOLD,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.SHROODLE,e.GRAFAIAI,e.FLITTLE,e.ESPATHRA,e.BOMBIRDIER,e.CYCLIZAR,e.FLAMIGO,e.ANNIHILAPE,e.SLITHER_WING,e.IRON_BUNDLE,e.IRON_JUGULIS,e.IRON_MOTH,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_MEOWTH,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[t.CLOSE_COMBAT]:[e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.FARFETCHD,e.HITMONLEE,e.HITMONCHAN,e.SCYTHER,e.PINSIR,e.TAUROS,e.MEW,e.SNUBBULL,e.GRANBULL,e.SCIZOR,e.HERACROSS,e.TEDDIURSA,e.URSARING,e.HITMONTOP,e.COMBUSKEN,e.BLAZIKEN,e.BRELOOM,e.MAKUHITA,e.HARIYAMA,e.MEDITITE,e.MEDICHAM,e.SHARPEDO,e.ZANGOOSE,e.CRAWDAUNT,e.ABSOL,e.MONFERNO,e.INFERNAPE,e.STARAPTOR,e.LOPUNNY,e.RIOLU,e.LUCARIO,e.TOXICROAK,e.GALLADE,e.PIGNITE,e.EMBOAR,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SAWK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.ESCAVALIER,e.EELEKTROSS,e.HAXORUS,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.GOLURK,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.COBALION,e.TERRAKION,e.VIRIZION,e.KELDEO,e.MELOETTA,e.CHESNAUGHT,e.PANGORO,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.TYRUNT,e.TYRANTRUM,e.HAWLUCHA,e.XERNEAS,e.INCINEROAR,e.CRABRAWLER,e.CRABOMINABLE,e.LYCANROC,e.MUDBRAY,e.MUDSDALE,e.BEWEAR,e.PASSIMIAN,e.GOLISOPOD,e.HAKAMO_O,e.KOMMO_O,e.TAPU_BULU,e.SOLGALEO,e.BUZZWOLE,e.PHEROMOSA,e.MARSHADOW,e.ZERAORA,e.ARROKUDA,e.BARRASKEWDA,e.CLOBBOPUS,e.GRAPPLOCT,e.OBSTAGOON,e.PERRSERKER,e.SIRFETCHD,e.FALINKS,e.ZACIAN,e.ZAMAZENTA,e.KUBFU,e.URSHIFU,e.ZARUDE,e.GLASTRIER,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.QUAQUAVAL,e.PAWMOT,e.CERULEDGE,e.PALAFIN,e.FLAMIGO,e.ANNIHILAPE,e.GREAT_TUSK,e.BRUTE_BONNET,e.SLITHER_WING,e.IRON_HANDS,e.IRON_VALIANT,e.KORAIDON,e.IRON_LEAVES,e.OKIDOGI,e.IRON_BOULDER,e.GALAR_FARFETCHD,e.GALAR_ZAPDOS,[e.CALYREX,"ice"],e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_SNEASEL,e.HISUI_LILLIGANT,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS],[t.PAYBACK]:[e.BEEDRILL,e.EKANS,e.ARBOK,e.VULPIX,e.NINETALES,e.ZUBAT,e.GOLBAT,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.TENTACOOL,e.TENTACRUEL,e.DODRIO,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.MR_MIME,e.JYNX,e.TAUROS,e.GYARADOS,e.AERODACTYL,e.MEW,e.CROBAT,e.POLITOED,e.AIPOM,e.UMBREON,e.MURKROW,e.MISDREAVUS,e.PINECO,e.FORRETRESS,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.OCTILLERY,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.SMOOCHUM,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.PELIPPER,e.HARIYAMA,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.AGGRON,e.CARVANHA,e.SHARPEDO,e.SPOINK,e.GRUMPIG,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.CORPHISH,e.CRAWDAUNT,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.ABSOL,e.GLALIE,e.CRANIDOS,e.RAMPARDOS,e.FLOATZEL,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.SPIRITOMB,e.RIOLU,e.LUCARIO,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.WEAVILE,e.RHYPERIOR,e.TANGROWTH,e.GLISCOR,e.DUSKNOIR,e.FROSLASS,e.AZELF,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.DARKRAI,e.ARCEUS,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.YAMASK,e.COFAGRIGUS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.FOONGUS,e.AMOONGUSS,e.FERROSEED,e.FERROTHORN,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.VULLABY,e.MANDIBUZZ,e.HYDREIGON,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.BUNNELBY,e.DIGGERSBY,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.ESPURR,e.MEOWSTIC,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.HAWLUCHA,e.YVELTAL,e.ZYGARDE,e.YUNGOOS,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.FOMANTIS,e.LURANTIS,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.STEENEE,e.TSAREENA,e.ORANGURU,e.PASSIMIAN,e.GOLISOPOD,e.TYPE_NULL,e.SILVALLY,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_BULU,e.BUZZWOLE,e.GUZZLORD,e.MARSHADOW,e.BLACEPHALON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.APPLETUN,e.TOXTRICITY,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.OBSTAGOON,e.PERRSERKER,e.MR_RIME,e.RUNERIGUS,e.FALINKS,e.PINCURCHIN,e.MORPEKO,e.COPPERAJAH,e.ARCTOZOLT,e.ZAMAZENTA,e.ETERNATUS,e.URSHIFU,e.ZARUDE,e.GLASTRIER,e.SPECTRIER,e.URSALUNA,e.MASCHIFF,e.MABOSSTIFF,e.BOMBIRDIER,e.FLAMIGO,e.BRUTE_BONNET,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,[e.LYCANROC,"midnight"],e.GALAR_MEOWTH,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,[e.CALYREX,"ice","shadow"]],[t.ASSURANCE]:[e.BEEDRILL,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.ZUBAT,e.GOLBAT,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.MACHAMP,e.DODUO,e.KOFFING,e.WEEZING,e.KANGASKHAN,e.SCYTHER,e.TAUROS,e.AERODACTYL,e.MEW,e.CROBAT,e.UMBREON,e.MURKROW,e.GIRAFARIG,e.QWILFISH,e.SCIZOR,e.HERACROSS,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.DONPHAN,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.POOCHYENA,e.MIGHTYENA,e.NUZLEAF,e.SHIFTRY,e.MAWILE,e.CARVANHA,e.SHARPEDO,e.CACNEA,e.CACTURNE,e.SEVIPER,e.ABSOL,e.CRANIDOS,e.RAMPARDOS,e.VESPIQUEN,e.BUNEARY,e.LOPUNNY,e.HONCHKROW,e.GLAMEOW,e.STUNKY,e.SKUNTANK,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.AZELF,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.PATRAT,e.PURRLOIN,e.LIEPARD,e.WOOBAT,e.SWOOBAT,e.SCOLIPEDE,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.MARACTUS,e.SCRAGGY,e.SCRAFTY,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.MIENSHAO,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.TORNADUS,e.THUNDURUS,e.GENESECT,e.BINACLE,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.HAWLUCHA,e.GOODRA,e.INCINEROAR,e.LYCANROC,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.TOGEDEMARU,e.DHELMISE,e.TAPU_KOKO,e.PHEROMOSA,e.MARSHADOW,e.NAGANADEL,e.ZERAORA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.NICKIT,e.THIEVUL,e.CHEWTLE,e.DREDNAW,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.SIRFETCHD,e.FALINKS,e.PINCURCHIN,e.STONJOURNER,e.MORPEKO,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ETERNATUS,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.GLASTRIER,e.SPECTRIER,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.VAROOM,e.REVAVROOM,e.ANNIHILAPE,e.FARIGIRAF,e.KINGAMBIT,e.IRON_JUGULIS,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.GALAR_MEOWTH,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,[e.CALYREX,"ice","shadow"],[e.PALDEA_TAUROS,"combat"]],[t.EMBARGO]:[e.PERSIAN,e.ABRA,e.KADABRA,e.ALAKAZAM,e.GASTLY,e.HAUNTER,e.GENGAR,e.MEWTWO,e.MEW,e.MURKROW,e.MISDREAVUS,e.SNEASEL,e.HOUNDOUR,e.HOUNDOOM,e.POOCHYENA,e.MIGHTYENA,e.NUZLEAF,e.SHIFTRY,e.SABLEYE,e.MAWILE,e.CACTURNE,e.ZANGOOSE,e.LUNATONE,e.SOLROCK,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.HONCHKROW,e.SPIRITOMB,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.PORYGON_Z,e.DUSKNOIR,e.FROSLASS,e.DARKRAI,e.VICTINI,e.PURRLOIN,e.LIEPARD,e.WOOBAT,e.SWOOBAT,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.YAMASK,e.COFAGRIGUS,e.ZORUA,e.ZOROARK,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.PAWNIARD,e.BISHARP,e.VULLABY,e.MANDIBUZZ,e.TORNADUS,e.THUNDURUS,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.PANGORO,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.YVELTAL,e.HOOPA,e.INCINEROAR,e.ORICORIO,e.ORANGURU,e.PALOSSAND,e.MIMIKYU,e.BRUXISH,e.DHELMISE,e.NECROZMA,e.MAGEARNA,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK],[t.FLING]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.GLOOM,e.VILEPLUME,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWBRO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.LEDYBA,e.LEDIAN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.QUAGSIRE,e.SLOWKING,e.GLIGAR,e.SNUBBULL,e.GRANBULL,e.SCIZOR,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.DELIBIRD,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.TYRANITAR,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.COMBUSKEN,e.BLAZIKEN,e.MARSHTOMP,e.SWAMPERT,e.ZIGZAGOON,e.LINOONE,e.LOMBRE,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MAWILE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.GULPIN,e.SWALOT,e.GRUMPIG,e.SPINDA,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.CORPHISH,e.CRAWDAUNT,e.KECLEON,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIBAREL,e.CRANIDOS,e.RAMPARDOS,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MIME_JR,e.HAPPINY,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.GLISCOR,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.UXIE,e.MESPRIT,e.AZELF,e.PALKIA,e.REGIGIGAS,e.PHIONE,e.MANAPHY,e.DARKRAI,e.VICTINI,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.WHIMSICOTT,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.REUNICLUS,e.EMOLGA,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.HEATMOR,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.HAWLUCHA,e.DEDENNE,e.HOOPA,e.VOLCANION,e.INCINEROAR,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.FOMANTIS,e.LURANTIS,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.GUZZLORD,e.NECROZMA,e.MARSHADOW,e.BLACEPHALON,e.ZERAORA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.CINDERACE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.TOXTRICITY,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.MR_RIME,e.MILCERY,e.ALCREMIE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.KUBFU,e.URSHIFU,e.ZARUDE,e.URSALUNA,e.SNEASLER,e.FLORAGATO,e.MEOWSCARADA,e.QUAQUAVAL,e.SPIDOPS,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.ARBOLIVA,e.GARGANACL,e.ARMAROUGE,e.CERULEDGE,e.SHROODLE,e.GRAFAIAI,e.KLAWF,e.RELLOR,e.RABSCA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.FINIZEN,e.PALAFIN,e.FLAMIGO,e.ANNIHILAPE,e.KINGAMBIT,e.SCREAM_TAIL,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_THORNS,e.GHOLDENGO,e.IRON_VALIANT,e.OKIDOGI,e.MUNKIDORI,e.OGERPON,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,[e.LYCANROC,"midnight"],e.GALAR_MEOWTH,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.BLOODMOON_URSALUNA],[t.GASTRO_ACID]:[e.EKANS,e.ARBOK,e.ODDISH,e.GLOOM,e.VILEPLUME,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.SNORLAX,e.MEW,e.BELLOSSOM,e.SHUCKLE,e.GULPIN,e.SWALOT,e.SEVIPER,e.LILEEP,e.CRADILY,e.MUNCHLAX,e.CARNIVINE,e.SNIVY,e.SERVINE,e.SERPERIOR,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.PALPITOAD,e.SEISMITOAD,e.FOONGUS,e.AMOONGUSS,e.JOLTIK,e.GALVANTULA,e.EELEKTRIK,e.EELEKTROSS,e.SHELMET,e.ACCELGOR,e.HEATMOR,e.DIGGERSBY,e.SWIRLIX,e.SLURPUFF,e.MAREANIE,e.TOXAPEX,e.PYUKUMUKU,e.GUZZLORD,e.POIPOLE,e.NAGANADEL,e.CHEWTLE,e.DREDNAW,e.TAROUNTULA,e.SPIDOPS,e.ALOLA_GRIMER,e.ALOLA_MUK],[t.POWER_SWAP]:[e.VULPIX,e.NINETALES,e.ABRA,e.KADABRA,e.ALAKAZAM,e.EXEGGCUTE,e.EXEGGUTOR,e.TANGELA,e.MR_MIME,e.MAGMAR,e.PORYGON,e.MEWTWO,e.MEW,e.NATU,e.XATU,e.ESPEON,e.GIRAFARIG,e.PORYGON2,e.MAGBY,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.GARDEVOIR,e.MEDITITE,e.SWABLU,e.ALTARIA,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.BRONZOR,e.BRONZONG,e.TANGROWTH,e.MAGMORTAR,e.PORYGON_Z,e.CRESSELIA,e.VICTINI,e.MUNNA,e.MUSHARNA,e.DARMANITAN,e.SIGILYPH,e.COFAGRIGUS,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.ELGYEM,e.BEHEEYEM,e.ACCELGOR,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.MAGEARNA,e.DOTTLER,e.ORBEETLE,e.HATTERENE,e.GRIMMSNARL,e.MR_RIME,e.RUNERIGUS,e.INDEEDEE,e.ZAMAZENTA,e.CALYREX,e.RABSCA,e.FARIGIRAF,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_EXEGGUTOR,e.GALAR_MR_MIME,e.GALAR_ARTICUNO],[t.GUARD_SWAP]:[e.ABRA,e.KADABRA,e.ALAKAZAM,e.DROWZEE,e.MR_MIME,e.PORYGON,e.MEWTWO,e.MEW,e.NATU,e.XATU,e.WOOPER,e.QUAGSIRE,e.UMBREON,e.GIRAFARIG,e.SLUGMA,e.MAGCARGO,e.SKARMORY,e.PORYGON2,e.GARDEVOIR,e.MAWILE,e.MEDITITE,e.BALTOY,e.CLAYDOL,e.CASTFORM,e.BRONZOR,e.BRONZONG,e.PORYGON_Z,e.CRESSELIA,e.VICTINI,e.MUNNA,e.MUSHARNA,e.DARMANITAN,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.ELGYEM,e.BEHEEYEM,e.SHELMET,e.ACCELGOR,e.INKAY,e.MALAMAR,e.CARBINK,e.DIANCIE,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.MAGEARNA,e.DOTTLER,e.ORBEETLE,e.WOOLOO,e.DUBWOOL,e.HATTERENE,e.MR_RIME,e.RUNERIGUS,e.ZAMAZENTA,e.CALYREX,e.RABSCA,e.FARIGIRAF,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,[e.INDEEDEE,"female"]],[t.WORRY_SEED]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.PSYDUCK,e.GOLDUCK,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.EXEGGCUTE,e.EXEGGUTOR,e.TANGELA,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNKERN,e.SUNFLORA,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.SHROOMISH,e.BRELOOM,e.ROSELIA,e.CACNEA,e.CACTURNE,e.LILEEP,e.CRADILY,e.TROPIUS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.BUDEW,e.ROSERADE,e.WORMADAM,e.CHERUBI,e.CHERRIM,e.CARNIVINE,e.SNOVER,e.ABOMASNOW,e.TANGROWTH,e.LEAFEON,e.SHAYMIN,e.SNIVY,e.SERVINE,e.SERPERIOR,e.PANSAGE,e.SIMISAGE,e.MUNNA,e.MUSHARNA,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.MARACTUS,e.DEERLING,e.SAWSBUCK,e.FOONGUS,e.AMOONGUSS,e.FERROSEED,e.FERROTHORN,e.VIRIZION,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.TAPU_BULU,e.NIHILEGO,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.GOSSIFLEUR,e.ELDEGOSS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.CAPSAKID,e.SCOVILLAIN,e.ALOLA_EXEGGUTOR,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE,e.ETERNAL_FLOETTE],[t.TOXIC_SPIKES]:[e.BEEDRILL,e.EKANS,e.ARBOK,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.VENONAT,e.VENOMOTH,e.TENTACOOL,e.TENTACRUEL,e.MUK,e.SHELLDER,e.CLOYSTER,e.HAUNTER,e.GENGAR,e.KOFFING,e.WEEZING,e.OMANYTE,e.OMASTAR,e.MEW,e.SPINARAK,e.ARIADOS,e.QUAGSIRE,e.PINECO,e.FORRETRESS,e.GLIGAR,e.QWILFISH,e.SHIFTRY,e.ROSELIA,e.GULPIN,e.SWALOT,e.CACNEA,e.CACTURNE,e.ROSERADE,e.VESPIQUEN,e.STUNKY,e.SKUNTANK,e.SKORUPI,e.DRAPION,e.GLISCOR,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.YAMASK,e.COFAGRIGUS,e.TRUBBISH,e.GARBODOR,e.SHELMET,e.ACCELGOR,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.SKRELP,e.DRAGALGE,e.MAREANIE,e.TOXAPEX,e.SALANDIT,e.SALAZZLE,e.NIHILEGO,e.POIPOLE,e.NAGANADEL,e.TOXTRICITY,e.RUNERIGUS,e.PINCURCHIN,e.ETERNATUS,e.SNEASLER,e.OVERQWIL,e.MEOWSCARADA,e.TAROUNTULA,e.SPIDOPS,e.TOEDSCOOL,e.TOEDSCRUEL,e.VAROOM,e.REVAVROOM,e.GLIMMET,e.GLIMMORA,e.CLODSIRE,e.IRON_MOTH,e.GALAR_WEEZING,e.GALAR_SLOWKING,e.GALAR_YAMASK,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.PALDEA_WOOPER],[t.FLARE_BLITZ]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.VULPIX,e.NINETALES,e.GROWLITHE,e.ARCANINE,e.PONYTA,e.RAPIDASH,e.MAGMAR,e.FLAREON,e.MOLTRES,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.MAGCARGO,e.HOUNDOUR,e.HOUNDOOM,e.MAGBY,e.ENTEI,e.HO_OH,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SOLROCK,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.MAGMORTAR,e.HEATRAN,e.ARCEUS,e.VICTINI,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PANSEAR,e.SIMISEAR,e.DARUMAKA,e.DARMANITAN,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.HEATMOR,e.LARVESTA,e.VOLCARONA,e.RESHIRAM,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.SALANDIT,e.SALAZZLE,e.SOLGALEO,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.CARKOL,e.COALOSSAL,e.CENTISKORCH,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.SLITHER_WING,e.IRON_MOTH,e.CHI_YU,e.KORAIDON,e.GOUGING_FIRE,e.TERAPAGOS,e.ALOLA_MAROWAK,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,[e.PALDEA_TAUROS,"blaze"]],[t.AURA_SPHERE]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.HITMONLEE,e.HITMONCHAN,e.MEWTWO,e.MEW,e.RAIKOU,e.CELEBI,e.BLAZIKEN,e.GARDEVOIR,e.MEDICHAM,e.ZANGOOSE,e.LATIAS,e.LATIOS,e.JIRACHI,e.INFERNAPE,e.LOPUNNY,e.LUCARIO,e.TOGEKISS,e.GALLADE,e.DIALGA,e.PALKIA,e.GIRATINA,e.ARCEUS,e.MIENFOO,e.MIENSHAO,e.KELDEO,e.CLAUNCHER,e.CLAWITZER,e.KOMMO_O,e.MAGEARNA,e.MARSHADOW,e.ZERAORA,e.URSHIFU,e.MEOWSCARADA,e.ARMAROUGE,e.PALAFIN,e.IRON_VALIANT,e.ARCHALUDON,e.TERAPAGOS,e.HISUI_DECIDUEYE],[t.ROCK_POLISH]:[e.GEODUDE,e.GRAVELER,e.GOLEM,e.ONIX,e.RHYHORN,e.RHYDON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.MEW,e.SUDOWOODO,e.FORRETRESS,e.GLIGAR,e.STEELIX,e.SHUCKLE,e.MAGCARGO,e.CORSOLA,e.DONPHAN,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.NOSEPASS,e.ARON,e.LAIRON,e.AGGRON,e.CAMERUPT,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.RELICANTH,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.GROUDON,e.TORTERRA,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BRONZOR,e.BRONZONG,e.BONSLY,e.RHYPERIOR,e.GLISCOR,e.PROBOPASS,e.REGIGIGAS,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DWEBBLE,e.CRUSTLE,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.GARBODOR,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.DURANT,e.COBALION,e.TERRAKION,e.LANDORUS,e.GENESECT,e.BINACLE,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.CARBINK,e.BERGMITE,e.AVALUGG,e.DIANCIE,e.ROCKRUFF,e.LYCANROC,e.SANDYGAST,e.PALOSSAND,e.MINIOR,e.KOMMO_O,e.NECROZMA,e.STAKATAKA,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.STONJOURNER,e.NACLI,e.NACLSTACK,e.GARGANACL,e.GLIMMET,e.GLIMMORA,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK],[t.POISON_JAB]:[e.BEEDRILL,e.EKANS,e.ARBOK,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.MANKEY,e.PRIMEAPE,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.RAPIDASH,e.FARFETCHD,e.GRIMER,e.MUK,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.HITMONLEE,e.RHYHORN,e.RHYDON,e.GOLDEEN,e.SEAKING,e.MEWTWO,e.MEW,e.SPINARAK,e.ARIADOS,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.QWILFISH,e.SNEASEL,e.DONPHAN,e.COMBUSKEN,e.BLAZIKEN,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.ROSELIA,e.GULPIN,e.SWALOT,e.SHARPEDO,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.ROSERADE,e.STUNKY,e.SKUNTANK,e.GARCHOMP,e.RIOLU,e.LUCARIO,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.RHYPERIOR,e.TANGROWTH,e.GLISCOR,e.GALLADE,e.DARKRAI,e.ARCEUS,e.PIGNITE,e.EMBOAR,e.DRILBUR,e.EXCADRILL,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.KARRABLAST,e.ESCAVALIER,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.AXEW,e.FRAXURE,e.HAXORUS,e.CRYOGONAL,e.MIENFOO,e.MIENSHAO,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.VOLCARONA,e.COBALION,e.TERRAKION,e.KELDEO,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.PANGORO,e.BINACLE,e.BARBARACLE,e.HAWLUCHA,e.PHANTUMP,e.TREVENANT,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.SALANDIT,e.SALAZZLE,e.GOLISOPOD,e.TOGEDEMARU,e.KOMMO_O,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.GUZZLORD,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.CHEWTLE,e.DREDNAW,e.ARROKUDA,e.BARRASKEWDA,e.TOXTRICITY,e.SIRFETCHD,e.FALINKS,e.PINCURCHIN,e.ZACIAN,e.ETERNATUS,e.URSHIFU,e.SNEASLER,e.OVERQWIL,e.TAROUNTULA,e.SPIDOPS,e.CERULEDGE,e.SHROODLE,e.GRAFAIAI,e.VAROOM,e.REVAVROOM,e.ANNIHILAPE,e.CLODSIRE,e.DUDUNSPARCE,e.KINGAMBIT,e.IRON_VALIANT,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.IRON_BOULDER,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_SLOWKING,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_LILLIGANT,e.PALDEA_WOOPER],[t.DARK_PULSE]:[e.BLASTOISE,e.EKANS,e.ARBOK,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.KOFFING,e.WEEZING,e.GYARADOS,e.MEWTWO,e.MEW,e.CROBAT,e.UMBREON,e.MURKROW,e.MISDREAVUS,e.GLIGAR,e.STEELIX,e.SNEASEL,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.NUZLEAF,e.SHIFTRY,e.SABLEYE,e.MAWILE,e.AGGRON,e.CARVANHA,e.SHARPEDO,e.CACNEA,e.CACTURNE,e.SEVIPER,e.CRAWDAUNT,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.ABSOL,e.GLALIE,e.DEOXYS,e.MISMAGIUS,e.HONCHKROW,e.STUNKY,e.SKUNTANK,e.SPIRITOMB,e.LUCARIO,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.GLISCOR,e.PORYGON_Z,e.DUSKNOIR,e.ROTOM,e.HEATRAN,e.GIRATINA,e.DARKRAI,e.ARCEUS,e.PURRLOIN,e.LIEPARD,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.FRILLISH,e.JELLICENT,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.VULLABY,e.MANDIBUZZ,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.TORNADUS,e.THUNDURUS,e.GENESECT,e.FROGADIER,e.GRENINJA,e.LITLEO,e.PYROAR,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.INKAY,e.MALAMAR,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.HOOPA,e.INCINEROAR,e.GOLISOPOD,e.MIMIKYU,e.GUZZLORD,e.NECROZMA,e.NAGANADEL,e.BLACEPHALON,e.INTELEON,e.THIEVUL,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.PERRSERKER,e.RUNERIGUS,e.MORPEKO,e.DURALUDON,e.ZARUDE,e.SPECTRIER,e.OVERQWIL,e.MEOWSCARADA,e.LOKIX,e.ARMAROUGE,e.MASCHIFF,e.MABOSSTIFF,e.BOMBIRDIER,e.KINGAMBIT,e.BRUTE_BONNET,e.FLUTTER_MANE,e.IRON_JUGULIS,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.FEZANDIPITI,e.ARCHALUDON,e.TERAPAGOS,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.MAROWAK,e.GALAR_MEOWTH,e.GALAR_WEEZING,e.GALAR_MOLTRES,e.GALAR_YAMASK,[e.URSHIFU,"single-strike"],[e.CALYREX,"shadow"],e.HISUI_QWILFISH,e.HISUI_SAMUROTT,e.HISUI_ZORUA,e.HISUI_ZOROARK],[t.AQUA_TAIL]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.EKANS,e.ARBOK,e.NIDOQUEEN,e.NIDOKING,e.PSYDUCK,e.GOLDUCK,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.KANGASKHAN,e.GOLDEEN,e.SEAKING,e.LAPRAS,e.VAPOREON,e.KABUTOPS,e.AERODACTYL,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.LANTURN,e.MARILL,e.AZUMARILL,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.QWILFISH,e.MANTINE,e.TYRANITAR,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.AGGRON,e.SEVIPER,e.BARBOACH,e.WHISCASH,e.ARMALDO,e.MILOTIC,e.KECLEON,e.SPHEAL,e.SEALEO,e.WALREIN,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.SALAMENCE,e.KYOGRE,e.RAYQUAZA,e.BIDOOF,e.BIBAREL,e.BUIZEL,e.FLOATZEL,e.GARCHOMP,e.SKORUPI,e.DRAPION,e.FINNEON,e.LUMINEON,e.LICKILICKY,e.RHYPERIOR,e.GLACEON,e.GLISCOR,e.PALKIA,e.GIRATINA,e.ARCEUS,e.SNIVY,e.SERVINE,e.SERPERIOR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.PANPOUR,e.SIMIPOUR,e.SCOLIPEDE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.MINCCINO,e.CINCCINO,e.EELEKTRIK,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.STUNFISK,e.DRUDDIGON,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.KELDEO,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.AMAURA,e.AURORUS,e.GOODRA,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.WISHIWASHI,e.BRUXISH,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.BASCULEGION,e.OVERQWIL,e.FINIZEN,e.PALAFIN,e.CYCLIZAR,e.DONDOZO,e.DUDUNSPARCE,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.HISUI_QWILFISH,e.HISUI_SAMUROTT],[t.SEED_BOMB]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.EKANS,e.ARBOK,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.EXEGGCUTE,e.EXEGGUTOR,e.TANGELA,e.SNORLAX,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.SENTRET,e.FURRET,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.PINECO,e.FORRETRESS,e.TEDDIURSA,e.URSARING,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.PHANPY,e.DONPHAN,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.PELIPPER,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.ROSELIA,e.GULPIN,e.SWALOT,e.GRUMPIG,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.LILEEP,e.CRADILY,e.TROPIUS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.BUDEW,e.ROSERADE,e.WORMADAM,e.PACHIRISU,e.CHERUBI,e.CHERRIM,e.AMBIPOM,e.MUNCHLAX,e.CARNIVINE,e.SNOVER,e.ABOMASNOW,e.TANGROWTH,e.LEAFEON,e.SHAYMIN,e.SNIVY,e.SERVINE,e.SERPERIOR,e.PATRAT,e.WATCHOG,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.MARACTUS,e.TRUBBISH,e.GARBODOR,e.MINCCINO,e.CINCCINO,e.DEERLING,e.SAWSBUCK,e.FOONGUS,e.AMOONGUSS,e.FERROSEED,e.FERROTHORN,e.VIRIZION,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.DEDENNE,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.PASSIMIAN,e.KOMALA,e.TAPU_BULU,e.CELESTEELA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SKWOVET,e.GREEDENT,e.ELDEGOSS,e.FLAPPLE,e.APPLETUN,e.OBSTAGOON,e.PERRSERKER,e.MORPEKO,e.ZARUDE,e.CALYREX,e.URSALUNA,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.LECHONK,e.OINKOLOGNE,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.CAPSAKID,e.SCOVILLAIN,e.FLITTLE,e.ESPATHRA,e.ANNIHILAPE,e.BRUTE_BONNET,e.WO_CHIEN,e.DIPPLIN,e.OGERPON,e.HYDRAPPLE,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_EXEGGUTOR,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE,e.BLOODMOON_URSALUNA],[t.AIR_SLASH]:[e.CHARIZARD,e.BUTTERFREE,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.ZUBAT,e.GOLBAT,e.VENOMOTH,e.FARFETCHD,e.SCYTHER,e.ARTICUNO,e.MOLTRES,e.DRAGONITE,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.CROBAT,e.NATU,e.XATU,e.YANMA,e.MURKROW,e.DUNSPARCE,e.SCIZOR,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.SUICUNE,e.LUGIA,e.HO_OH,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.MASQUERAIN,e.NINJASK,e.VOLBEAT,e.ILLUMISE,e.VIBRAVA,e.FLYGON,e.TROPIUS,e.ABSOL,e.SALAMENCE,e.LATIAS,e.LATIOS,e.RAYQUAZA,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.MOTHIM,e.VESPIQUEN,e.DRIFBLIM,e.HONCHKROW,e.LUMINEON,e.MANTYKE,e.TOGEKISS,e.YANMEGA,e.GALLADE,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.SIGILYPH,e.ARCHEOPS,e.DUCKLETT,e.SWANNA,e.EMOLGA,e.PAWNIARD,e.BISHARP,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.KELDEO,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.AEGISLASH,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.VIKAVOLT,e.ORICORIO,e.TYPE_NULL,e.SILVALLY,e.LUNALA,e.CELESTEELA,e.KARTANA,e.NAGANADEL,e.INTELEON,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.FLAPPLE,e.CRAMORANT,e.FROSMOTH,e.ZACIAN,e.KLEAVOR,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.BOMBIRDIER,e.FLAMIGO,e.DUDUNSPARCE,e.KINGAMBIT,e.IRON_JUGULIS,e.IRON_MOTH,e.ROARING_MOON,e.IRON_LEAVES,e.FEZANDIPITI,e.IRON_BOULDER,e.IRON_CROWN,e.SHAYMIN,[e.ROTOM,"fan"],e.GALAR_ARTICUNO,e.GALAR_MOLTRES,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[t.X_SCISSOR]:[e.BEEDRILL,e.SANDSHREW,e.SANDSLASH,e.PARAS,e.PARASECT,e.KRABBY,e.KINGLER,e.SCYTHER,e.PINSIR,e.KABUTOPS,e.MEW,e.SPINARAK,e.ARIADOS,e.CROBAT,e.GLIGAR,e.SCIZOR,e.SNEASEL,e.SKARMORY,e.GROVYLE,e.SCEPTILE,e.SHIFTRY,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.SABLEYE,e.ZANGOOSE,e.SEVIPER,e.CORPHISH,e.CRAWDAUNT,e.ANORITH,e.ARMALDO,e.ABSOL,e.KRICKETUNE,e.VESPIQUEN,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.LEAFEON,e.GLISCOR,e.GALLADE,e.DARKRAI,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.DRILBUR,e.EXCADRILL,e.LEAVANNY,e.SCOLIPEDE,e.DWEBBLE,e.CRUSTLE,e.KARRABLAST,e.ESCAVALIER,e.JOLTIK,e.GALVANTULA,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.PAWNIARD,e.BISHARP,e.DURANT,e.COBALION,e.TERRAKION,e.VIRIZION,e.KELDEO,e.GENESECT,e.PANGORO,e.BINACLE,e.BARBARACLE,e.HAWLUCHA,e.TREVENANT,e.NOIBAT,e.NOIVERN,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.GOLISOPOD,e.TYPE_NULL,e.SILVALLY,e.MIMIKYU,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.KARTANA,e.NECROZMA,e.NAGANADEL,e.CENTISKORCH,e.OBSTAGOON,e.PERRSERKER,e.KLEAVOR,e.SNEASLER,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.CERULEDGE,e.GRAFAIAI,e.KLAWF,e.RELLOR,e.RABSCA,e.KINGAMBIT,e.ROARING_MOON,e.IRON_VALIANT,e.IRON_LEAVES,e.IRON_BOULDER,e.IRON_CROWN,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.GALAR_MEOWTH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT],[t.BUG_BUZZ]:[e.BUTTERFREE,e.VENONAT,e.VENOMOTH,e.SCYTHER,e.MEW,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.YANMA,e.PINECO,e.FORRETRESS,e.SCIZOR,e.HERACROSS,e.BEAUTIFLY,e.DUSTOX,e.SURSKIT,e.MASQUERAIN,e.NINCADA,e.NINJASK,e.SHEDINJA,e.VOLBEAT,e.ILLUMISE,e.VIBRAVA,e.FLYGON,e.KRICKETUNE,e.WORMADAM,e.MOTHIM,e.COMBEE,e.VESPIQUEN,e.SKORUPI,e.DRAPION,e.YANMEGA,e.ARCEUS,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.KARRABLAST,e.ESCAVALIER,e.JOLTIK,e.GALVANTULA,e.SHELMET,e.ACCELGOR,e.LARVESTA,e.VOLCARONA,e.GENESECT,e.VIVILLON,e.VIKAVOLT,e.CUTIEFLY,e.RIBOMBEE,e.DEWPIDER,e.ARAQUANID,e.WIMPOD,e.GOLISOPOD,e.PHEROMOSA,e.DOTTLER,e.ORBEETLE,e.SIZZLIPEDE,e.CENTISKORCH,e.SNOM,e.FROSMOTH,e.KLEAVOR,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.RELLOR,e.RABSCA,e.SLITHER_WING,e.IRON_MOTH,e.TERAPAGOS],[t.DRAGON_PULSE]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.NIDOQUEEN,e.NIDOKING,e.ARCANINE,e.ONIX,e.RHYHORN,e.RHYDON,e.HORSEA,e.SEADRA,e.GYARADOS,e.LAPRAS,e.AERODACTYL,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.FERALIGATR,e.AMPHAROS,e.STEELIX,e.KINGDRA,e.TYRANITAR,e.LUGIA,e.SCEPTILE,e.AGGRON,e.VIBRAVA,e.FLYGON,e.SWABLU,e.ALTARIA,e.FEEBAS,e.MILOTIC,e.TROPIUS,e.BAGON,e.SHELGON,e.SALAMENCE,e.LATIAS,e.LATIOS,e.GROUDON,e.RAYQUAZA,e.CRANIDOS,e.RAMPARDOS,e.GIBLE,e.GABITE,e.GARCHOMP,e.LUCARIO,e.RHYPERIOR,e.DIALGA,e.PALKIA,e.HEATRAN,e.GIRATINA,e.ARCEUS,e.SERPERIOR,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.ARCHEN,e.ARCHEOPS,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.DRUDDIGON,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.GOOMY,e.SLIGGOO,e.GOODRA,e.NOIBAT,e.NOIVERN,e.ZYGARDE,e.SALANDIT,e.SALAZZLE,e.TURTONATOR,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.GUZZLORD,e.NECROZMA,e.POIPOLE,e.NAGANADEL,e.FLAPPLE,e.APPLETUN,e.RUNERIGUS,e.DRACOZOLT,e.DRACOVISH,e.DURALUDON,e.DRAKLOAK,e.DRAGAPULT,e.ETERNATUS,e.REGIDRAGO,e.ARMAROUGE,e.CYCLIZAR,e.TATSUGIRI,e.IRON_JUGULIS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.DIPPLIN,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.TERAPAGOS,e.ALOLA_EXEGGUTOR,e.HISUI_ARCANINE,e.HISUI_SLIGGOO,e.HISUI_GOODRA],[t.POWER_GEM]:[e.MEOWTH,e.PERSIAN,e.GOLDUCK,e.STARYU,e.STARMIE,e.MEWTWO,e.MEW,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.SUDOWOODO,e.ESPEON,e.SLOWKING,e.MISDREAVUS,e.SLUGMA,e.MAGCARGO,e.CORSOLA,e.TYRANITAR,e.NOSEPASS,e.SABLEYE,e.SPOINK,e.GRUMPIG,e.LUNATONE,e.VESPIQUEN,e.MISMAGIUS,e.BRONZOR,e.BRONZONG,e.BONSLY,e.GABITE,e.GARCHOMP,e.PROBOPASS,e.DIALGA,e.PALKIA,e.HEATRAN,e.CRESSELIA,e.ARCEUS,e.BOLDORE,e.GIGALITH,e.KLINK,e.KLANG,e.KLINKLANG,e.CARBINK,e.DIANCIE,e.MINIOR,e.NIHILEGO,e.NECROZMA,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.CURSOLA,e.STONJOURNER,e.MEOWSCARADA,e.NACLI,e.NACLSTACK,e.GARGANACL,e.KLAWF,e.RABSCA,e.BOMBIRDIER,e.GLIMMET,e.GLIMMORA,e.FLUTTER_MANE,e.SANDY_SHOCKS,e.IRON_THORNS,e.GIMMIGHOUL,e.GHOLDENGO,e.MIRAIDON,e.TERAPAGOS,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.HISUI_GROWLITHE,e.HISUI_ARCANINE],[t.DRAIN_PUNCH]:[e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.GLOOM,e.VILEPLUME,e.MANKEY,e.PRIMEAPE,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWBRO,e.GRIMER,e.MUK,e.GENGAR,e.DROWZEE,e.HYPNO,e.HITMONCHAN,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.JYNX,e.MEWTWO,e.MEW,e.LEDYBA,e.LEDIAN,e.TOGETIC,e.BELLOSSOM,e.SUDOWOODO,e.QUAGSIRE,e.SLOWKING,e.BLISSEY,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.LOMBRE,e.LUDICOLO,e.SHROOMISH,e.BRELOOM,e.VIGOROTH,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.GRUMPIG,e.SPINDA,e.CACNEA,e.CACTURNE,e.KECLEON,e.REGIROCK,e.JIRACHI,e.DEOXYS,e.MONFERNO,e.INFERNAPE,e.BUNEARY,e.LOPUNNY,e.MIME_JR,e.HAPPINY,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.TOGEKISS,e.GALLADE,e.UXIE,e.MESPRIT,e.AZELF,e.REGIGIGAS,e.DARKRAI,e.PIGNITE,e.EMBOAR,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.MARACTUS,e.SCRAGGY,e.SCRAFTY,e.TRUBBISH,e.GARBODOR,e.REUNICLUS,e.EELEKTROSS,e.ACCELGOR,e.MIENFOO,e.MIENSHAO,e.GOLETT,e.GOLURK,e.HEATMOR,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.PANCHAM,e.PANGORO,e.AROMATISSE,e.SLURPUFF,e.HAWLUCHA,e.TREVENANT,e.HOOPA,e.INCINEROAR,e.CRABRAWLER,e.CRABOMINABLE,e.SHIINOTIC,e.BEWEAR,e.PASSIMIAN,e.MIMIKYU,e.HAKAMO_O,e.KOMMO_O,e.BUZZWOLE,e.GUZZLORD,e.MARSHADOW,e.ZERAORA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.TOXTRICITY,e.GRAPPLOCT,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.MR_RIME,e.ALCREMIE,e.INDEEDEE,e.URSHIFU,e.ZARUDE,e.URSALUNA,e.PALAFIN,e.ANNIHILAPE,e.SCREAM_TAIL,e.IRON_HANDS,e.IRON_VALIANT,e.KORAIDON,e.OKIDOGI,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING],[t.VACUUM_WAVE]:[e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.HITMONLEE,e.HITMONCHAN,e.SCYTHER,e.MEW,e.SCIZOR,e.HERACROSS,e.TYROGUE,e.HITMONTOP,e.GROVYLE,e.SCEPTILE,e.COMBUSKEN,e.BLAZIKEN,e.SHIFTRY,e.GARDEVOIR,e.BRELOOM,e.MAKUHITA,e.HARIYAMA,e.MEDITITE,e.MEDICHAM,e.FLYGON,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.EMPOLEON,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.GALLADE,e.DEWOTT,e.SAMUROTT,e.MIENSHAO,e.COBALION,e.VIRIZION,e.KELDEO,e.PASSIMIAN,e.HAKAMO_O,e.KOMMO_O,e.KARTANA,e.INTELEON,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.CERULEDGE,e.ANNIHILAPE,e.IRON_VALIANT,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_BRAVIARY,e.BLOODMOON_URSALUNA],[t.FOCUS_BLAST]:[e.CHARMANDER,e.CHARIZARD,e.BLASTOISE,e.RAICHU,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.CLEFABLE,e.WIGGLYTUFF,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWRATH,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GRAVELER,e.GOLEM,e.SLOWBRO,e.MUK,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.TYPHLOSION,e.FERALIGATR,e.FURRET,e.LEDIAN,e.AMPHAROS,e.AZUMARILL,e.POLITOED,e.QUAGSIRE,e.SLOWKING,e.GRANBULL,e.HERACROSS,e.URSARING,e.HITMONTOP,e.MILTANK,e.BLISSEY,e.TYRANITAR,e.SCEPTILE,e.COMBUSKEN,e.BLAZIKEN,e.SWAMPERT,e.LUDICOLO,e.SHIFTRY,e.GARDEVOIR,e.BRELOOM,e.VIGOROTH,e.SLAKING,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.MAWILE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.GRUMPIG,e.CACTURNE,e.ZANGOOSE,e.REGIROCK,e.REGICE,e.REGISTEEL,e.GROUDON,e.RAYQUAZA,e.DEOXYS,e.MONFERNO,e.INFERNAPE,e.RAMPARDOS,e.FLOATZEL,e.LOPUNNY,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.GALLADE,e.DUSKNOIR,e.DIALGA,e.PALKIA,e.REGIGIGAS,e.DARKRAI,e.ARCEUS,e.VICTINI,e.PIGNITE,e.EMBOAR,e.WATCHOG,e.SIMISAGE,e.SIMISEAR,e.SIMIPOUR,e.EXCADRILL,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.KROOKODILE,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.CARRACOSTA,e.ARCHEOPS,e.GARBODOR,e.ZOROARK,e.CINCCINO,e.GOTHITELLE,e.REUNICLUS,e.ESCAVALIER,e.HAXORUS,e.BEARTIC,e.ACCELGOR,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.BISHARP,e.HEATMOR,e.HYDREIGON,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.CHESNAUGHT,e.DELPHOX,e.PANGORO,e.BARBARACLE,e.DRAGALGE,e.CLAWITZER,e.HELIOLISK,e.HAWLUCHA,e.GOODRA,e.TREVENANT,e.GOURGEIST,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.HOOPA,e.VOLCANION,e.INCINEROAR,e.CRABRAWLER,e.CRABOMINABLE,e.MUDSDALE,e.STUFFUL,e.BEWEAR,e.ORANGURU,e.PASSIMIAN,e.GOLISOPOD,e.TURTONATOR,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_LELE,e.TAPU_BULU,e.SOLGALEO,e.LUNALA,e.PHEROMOSA,e.MAGEARNA,e.MARSHADOW,e.ZERAORA,e.RILLABOOM,e.CINDERACE,e.CLOBBOPUS,e.GRAPPLOCT,e.GRIMMSNARL,e.MR_RIME,e.FALINKS,e.ZACIAN,e.ZAMAZENTA,e.URSHIFU,e.SNEASLER,e.ENAMORUS,e.PAWMOT,e.ARMAROUGE,e.PALAFIN,e.ANNIHILAPE,e.KINGAMBIT,e.SCREAM_TAIL,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_THORNS,e.GHOLDENGO,e.IRON_VALIANT,e.KORAIDON,e.IRON_LEAVES,e.OKIDOGI,e.MUNKIDORI,e.IRON_CROWN,e.ALOLA_RAICHU,e.ALOLA_SANDSLASH,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_DARMANITAN,e.HISUI_TYPHLOSION,e.HISUI_SNEASEL,e.HISUI_ZOROARK,e.HISUI_DECIDUEYE,e.BLOODMOON_URSALUNA],[t.ENERGY_BALL]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.BUTTERFREE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.GASTLY,e.HAUNTER,e.GENGAR,e.EXEGGCUTE,e.EXEGGUTOR,e.TANGELA,e.MR_MIME,e.JYNX,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNKERN,e.SUNFLORA,e.MISDREAVUS,e.GIRAFARIG,e.OCTILLERY,e.STANTLER,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.GARDEVOIR,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SABLEYE,e.MEDICHAM,e.ROSELIA,e.GRUMPIG,e.CACNEA,e.CACTURNE,e.LILEEP,e.CRADILY,e.CASTFORM,e.TROPIUS,e.CHIMECHO,e.LATIAS,e.LATIOS,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.BUDEW,e.ROSERADE,[e.WORMADAM,"plant"],e.MOTHIM,e.CHERUBI,e.CHERRIM,e.MISMAGIUS,e.CHINGLING,e.CARNIVINE,e.SNOVER,e.ABOMASNOW,e.TANGROWTH,e.LEAFEON,e.GALLADE,e.UXIE,e.MESPRIT,e.AZELF,e.GIRATINA,e.CRESSELIA,e.MANAPHY,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.PANSAGE,e.SIMISAGE,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.MARACTUS,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.SHELMET,e.ACCELGOR,e.DURANT,e.VIRIZION,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.VIVILLON,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.HOOPA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PRIMARINA,e.VIKAVOLT,e.CUTIEFLY,e.RIBOMBEE,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.SANDYGAST,e.PALOSSAND,e.DRAMPA,e.DHELMISE,e.TAPU_LELE,e.TAPU_BULU,e.XURKITREE,e.CELESTEELA,e.MAGEARNA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.DOTTLER,e.ORBEETLE,e.GOSSIFLEUR,e.ELDEGOSS,e.FLAPPLE,e.APPLETUN,e.MR_RIME,e.RUNERIGUS,e.ALCREMIE,e.INDEEDEE,e.ZARUDE,e.CALYREX,e.WYRDEER,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.OINKOLOGNE,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.ARMAROUGE,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.CAPSAKID,e.SCOVILLAIN,e.RABSCA,e.ESPATHRA,e.GLIMMORA,e.FARIGIRAF,e.BRUTE_BONNET,e.FLUTTER_MANE,e.IRON_MOTH,e.WO_CHIEN,e.IRON_VALIANT,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OGERPON,e.HYDRAPPLE,e.TERAPAGOS,e.ALOLA_EXEGGUTOR,e.ETERNAL_FLOETTE,e.GALAR_MR_MIME,e.GALAR_YAMASK,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE],[t.BRAVE_BIRD]:[e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.ZUBAT,e.GOLBAT,e.FARFETCHD,e.DODUO,e.DODRIO,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.MURKROW,e.DELIBIRD,e.SKARMORY,e.LUGIA,e.HO_OH,e.BLAZIKEN,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.SWABLU,e.ALTARIA,e.STARLY,e.STARAVIA,e.STARAPTOR,e.HONCHKROW,e.UNFEZANT,e.DUCKLETT,e.SWANNA,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.HAWLUCHA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.TAPU_KOKO,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.CRAMORANT,e.SIRFETCHD,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.ESPATHRA,e.BOMBIRDIER,e.FLAMIGO,e.FEZANDIPITI,e.GALAR_FARFETCHD,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[t.EARTH_POWER]:[e.VENUSAUR,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.GEODUDE,e.GRAVELER,e.GOLEM,e.ONIX,e.CUBONE,e.MAROWAK,e.RHYHORN,e.RHYDON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.MEWTWO,e.MEW,e.SUDOWOODO,e.POLITOED,e.SUNKERN,e.SUNFLORA,e.WOOPER,e.QUAGSIRE,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SHUCKLE,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.PHANPY,e.DONPHAN,e.STANTLER,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.NOSEPASS,e.ARON,e.LAIRON,e.AGGRON,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.GRUMPIG,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.RELICANTH,e.REGIROCK,e.GROUDON,e.RAYQUAZA,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.SHELLOS,e.GASTRODON,e.BONSLY,e.GIBLE,e.GABITE,e.GARCHOMP,e.HIPPOPOTAS,e.HIPPOWDON,e.ABOMASNOW,e.RHYPERIOR,e.GLISCOR,e.MAMOSWINE,e.PROBOPASS,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.SHAYMIN,e.ARCEUS,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DRILBUR,e.EXCADRILL,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.STUNFISK,e.GOLETT,e.GOLURK,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.TERRAKION,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.DIGGERSBY,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.CARBINK,e.ZYGARDE,e.DIANCIE,e.VOLCANION,e.ROCKRUFF,e.LYCANROC,e.MUDBRAY,e.MUDSDALE,e.SANDYGAST,e.PALOSSAND,e.MINIOR,e.NECROZMA,e.RILLABOOM,e.DREDNAW,e.COALOSSAL,e.SILICOBRA,e.SANDACONDA,e.CURSOLA,e.RUNERIGUS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.DRACOVISH,e.REGIDRAGO,e.WYRDEER,e.URSALUNA,e.ENAMORUS,e.SKELEDIRGE,e.OINKOLOGNE,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.NACLI,e.NACLSTACK,e.GARGANACL,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.RABSCA,e.WIGLETT,e.WUGTRIO,e.ORTHWORM,e.GLIMMORA,e.CLODSIRE,e.DUDUNSPARCE,e.GREAT_TUSK,e.BRUTE_BONNET,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_JUGULIS,e.IRON_THORNS,e.TING_LU,e.HYDRAPPLE,e.TERAPAGOS,[e.WORMADAM,"sandy"],e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_MAROWAK,e.GALAR_CORSOLA,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.GIGA_IMPACT]:[e.VENUSAUR,e.CHARIZARD,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEOT,e.RATICATE,e.FEAROW,e.ARBOK,e.RAICHU,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.CLEFABLE,e.NINETALES,e.WIGGLYTUFF,e.GOLBAT,e.VILEPLUME,e.PARASECT,e.VENOMOTH,e.DUGTRIO,e.PERSIAN,e.GOLDUCK,e.PRIMEAPE,e.ARCANINE,e.POLIWRATH,e.ALAKAZAM,e.MACHAMP,e.VICTREEBEL,e.TENTACRUEL,e.GOLEM,e.RAPIDASH,e.SLOWBRO,e.MAGNETON,e.DODRIO,e.DEWGONG,e.MUK,e.CLOYSTER,e.GENGAR,e.HYPNO,e.KINGLER,e.ELECTRODE,e.EXEGGUTOR,e.MAROWAK,e.LICKITUNG,e.WEEZING,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.SEADRA,e.SEAKING,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMASTAR,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.MEGANIUM,e.TYPHLOSION,e.FERALIGATR,e.FURRET,e.NOCTOWL,e.LEDIAN,e.ARIADOS,e.CROBAT,e.LANTURN,e.TOGETIC,e.XATU,e.AMPHAROS,e.BELLOSSOM,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.JUMPLUFF,e.SUNFLORA,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.FORRETRESS,e.DUNSPARCE,e.STEELIX,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.HERACROSS,e.SNEASEL,e.URSARING,e.MAGCARGO,e.PILOSWINE,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.HOUNDOOM,e.KINGDRA,e.DONPHAN,e.PORYGON2,e.STANTLER,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.SCEPTILE,e.BLAZIKEN,e.SWAMPERT,e.MIGHTYENA,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LUDICOLO,e.SHIFTRY,e.SWELLOW,e.PELIPPER,e.GARDEVOIR,e.MASQUERAIN,e.BRELOOM,e.SLAKING,e.NINJASK,e.SHEDINJA,e.EXPLOUD,e.HARIYAMA,e.DELCATTY,e.SABLEYE,e.MAWILE,e.AGGRON,e.MEDICHAM,e.MANECTRIC,e.SWALOT,e.SHARPEDO,e.WAILORD,e.CAMERUPT,e.TORKOAL,e.GRUMPIG,e.FLYGON,e.CACTURNE,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.WHISCASH,e.CRAWDAUNT,e.CLAYDOL,e.CRADILY,e.ARMALDO,e.MILOTIC,e.BANETTE,e.DUSCLOPS,e.TROPIUS,e.ABSOL,e.GLALIE,e.WALREIN,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TORTERRA,e.INFERNAPE,e.EMPOLEON,e.STARAPTOR,e.BIBAREL,e.KRICKETUNE,e.LUXRAY,e.ROSERADE,e.RAMPARDOS,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.FLOATZEL,e.CHERRIM,e.GASTRODON,e.AMBIPOM,e.DRIFBLIM,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.PURUGLY,e.SKUNTANK,e.BRONZONG,e.SPIRITOMB,e.GARCHOMP,e.MUNCHLAX,e.LUCARIO,e.HIPPOWDON,e.DRAPION,e.TOXICROAK,e.CARNIVINE,e.LUMINEON,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SERPERIOR,e.EMBOAR,e.SAMUROTT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.LIEPARD,e.SIMISAGE,e.SIMISEAR,e.SIMIPOUR,e.MUSHARNA,e.UNFEZANT,e.ZEBSTRIKA,e.GIGALITH,e.SWOOBAT,e.EXCADRILL,e.AUDINO,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.LEAVANNY,e.SCOLIPEDE,e.WHIMSICOTT,e.LILLIGANT,e.BASCULIN,e.KROOKODILE,e.DARMANITAN,e.CRUSTLE,e.SCRAFTY,e.SIGILYPH,e.COFAGRIGUS,e.CARRACOSTA,e.ARCHEOPS,e.GARBODOR,e.ZOROARK,e.CINCCINO,e.GOTHITELLE,e.REUNICLUS,e.SWANNA,e.VANILLUXE,e.SAWSBUCK,e.ESCAVALIER,e.AMOONGUSS,e.JELLICENT,e.ALOMOMOLA,e.GALVANTULA,e.FERROTHORN,e.KLINKLANG,e.EELEKTROSS,e.BEHEEYEM,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.BEARTIC,e.CRYOGONAL,e.ACCELGOR,e.MIENSHAO,e.DRUDDIGON,e.GOLURK,e.BISHARP,e.BOUFFALANT,e.BRAVIARY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.HYDREIGON,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESNAUGHT,e.DELPHOX,e.GRENINJA,e.DIGGERSBY,e.TALONFLAME,e.VIVILLON,e.PYROAR,e.FLORGES,e.GOGOAT,e.PANGORO,e.FURFROU,e.MEOWSTIC,e.AEGISLASH,e.AROMATISSE,e.SLURPUFF,e.MALAMAR,e.BARBARACLE,e.DRAGALGE,e.CLAWITZER,e.HELIOLISK,e.TYRANTRUM,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOODRA,e.KLEFKI,e.TREVENANT,e.GOURGEIST,e.AVALUGG,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.DECIDUEYE,e.INCINEROAR,e.PRIMARINA,e.GUMSHOOS,e.VIKAVOLT,e.CRABOMINABLE,e.RIBOMBEE,e.LYCANROC,e.TOXAPEX,e.MUDSDALE,e.LURANTIS,e.SHIINOTIC,e.SALAZZLE,e.BEWEAR,e.TSAREENA,e.ORANGURU,e.PASSIMIAN,e.GOLISOPOD,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.NAGANADEL,e.STAKATAKA,e.ZERAORA,e.MELMETAL,e.RILLABOOM,e.CINDERACE,e.INTELEON,e.GREEDENT,e.CORVIKNIGHT,e.ORBEETLE,e.THIEVUL,e.ELDEGOSS,e.DUBWOOL,e.DREDNAW,e.BOLTUND,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SANDACONDA,e.CRAMORANT,e.BARRASKEWDA,e.TOXTRICITY,e.CENTISKORCH,e.GRAPPLOCT,e.POLTEAGEIST,e.HATTERENE,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.MR_RIME,e.RUNERIGUS,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.MEOWSCARADA,e.SKELEDIRGE,e.QUAQUAVAL,e.OINKOLOGNE,e.SPIDOPS,e.LOKIX,e.PAWMOT,e.MAUSHOLD,e.DACHSBUN,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLSTACK,e.GARGANACL,e.BELLIBOLT,e.KILOWATTREL,e.MABOSSTIFF,e.GRAFAIAI,e.BRAMBLEGHAST,e.TOEDSCRUEL,e.KLAWF,e.SCOVILLAIN,e.RABSCA,e.ESPATHRA,e.WUGTRIO,e.BOMBIRDIER,e.PALAFIN,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMORA,e.HOUNDSTONE,e.FLAMIGO,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.BAXCALIBUR,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSLASH,e.ALOLA_NINETALES,e.ALOLA_DUGTRIO,e.ALOLA_PERSIAN,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_RAPIDASH,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_LINOONE,e.GALAR_DARMANITAN,e.HISUI_ARCANINE,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.BLOODMOON_URSALUNA],[t.NASTY_PLOT]:[e.PIKACHU,e.RAICHU,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.ALAKAZAM,e.SLOWBRO,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.MR_MIME,e.JYNX,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.PICHU,e.TOGEPI,e.TOGETIC,e.AIPOM,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.SNEASEL,e.HOUNDOUR,e.HOUNDOOM,e.SMOOCHUM,e.CELEBI,e.POOCHYENA,e.MIGHTYENA,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.SKITTY,e.DELCATTY,e.SABLEYE,e.PLUSLE,e.MINUN,e.GRUMPIG,e.CACNEA,e.CACTURNE,e.LUNATONE,e.CRAWDAUNT,e.CLAYDOL,e.KECLEON,e.SHUPPET,e.BANETTE,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.AMBIPOM,e.MISMAGIUS,e.HONCHKROW,e.STUNKY,e.SKUNTANK,e.MIME_JR,e.CHATOT,e.SPIRITOMB,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.TOGEKISS,e.PORYGON_Z,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DARKRAI,e.PATRAT,e.WATCHOG,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.WOOBAT,e.SWOOBAT,e.YAMASK,e.COFAGRIGUS,e.ZORUA,e.ZOROARK,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.ELGYEM,e.BEHEEYEM,e.VULLABY,e.MANDIBUZZ,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.DELPHOX,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.INKAY,e.MALAMAR,e.GOURGEIST,e.HOOPA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.SALANDIT,e.SALAZZLE,e.ORANGURU,e.POIPOLE,e.NAGANADEL,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.NICKIT,e.THIEVUL,e.SINISTEA,e.POLTEAGEIST,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.PERRSERKER,e.MR_RIME,e.RUNERIGUS,e.MORPEKO,e.ZARUDE,e.SPECTRIER,e.SNEASLER,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.SHROODLE,e.GRAFAIAI,e.BOMBIRDIER,e.TATSUGIRI,e.FARIGIRAF,e.GIMMIGHOUL,e.GHOLDENGO,e.CHI_YU,e.POLTCHAGEIST,e.SINISTCHA,e.MUNKIDORI,e.FEZANDIPITI,e.HYDRAPPLE,e.PECHARUNT,e.ALOLA_RAICHU,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_MEOWTH,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_YAMASK,[e.CALYREX,"shadow"],e.HISUI_SNEASEL,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_DECIDUEYE],[t.AVALANCHE]:[e.BLASTOISE,e.NIDOQUEEN,e.NIDOKING,e.SLOWPOKE,e.SLOWBRO,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.RHYDON,e.KANGASKHAN,e.STARMIE,e.JYNX,e.GYARADOS,e.LAPRAS,e.ARTICUNO,e.MEWTWO,e.MEW,e.FERALIGATR,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SWINUB,e.PILOSWINE,e.DELIBIRD,e.SMOOCHUM,e.BLISSEY,e.SUICUNE,e.TYRANITAR,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.EXPLOUD,e.AGGRON,e.SHARPEDO,e.WAILMER,e.WAILORD,e.CRAWDAUNT,e.MILOTIC,e.CASTFORM,e.SNORUNT,e.GLALIE,e.WALREIN,e.REGICE,e.KYOGRE,e.RAYQUAZA,e.DEOXYS,e.EMPOLEON,e.RAMPARDOS,e.BASTIODON,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.RHYPERIOR,e.GLACEON,e.MAMOSWINE,e.FROSLASS,e.PALKIA,e.REGIGIGAS,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.AMAURA,e.AURORUS,e.BERGMITE,e.AVALUGG,e.CRABOMINABLE,e.MR_RIME,e.FROSMOTH,e.EISCUE,e.ARCTOZOLT,e.ARCTOVISH,e.GLASTRIER,e.URSALUNA,e.GARGANACL,e.CETODDLE,e.CETITAN,e.DONDOZO,e.IRON_BUNDLE,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.CHIEN_PAO,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_NINETALES,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,[e.CALYREX,"ice"],e.HISUI_SAMUROTT,e.HISUI_AVALUGG,e.BLOODMOON_URSALUNA],[t.SHADOW_CLAW]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.HAUNTER,e.GENGAR,e.RHYDON,e.KANGASKHAN,e.MEW,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.AIPOM,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.TYRANITAR,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.LINOONE,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.SHEDINJA,e.SABLEYE,e.ARON,e.LAIRON,e.AGGRON,e.ZANGOOSE,e.ARMALDO,e.KECLEON,e.BANETTE,e.ABSOL,e.BAGON,e.SHELGON,e.SALAMENCE,e.METAGROSS,e.REGISTEEL,e.LATIAS,e.LATIOS,e.GROUDON,e.RAYQUAZA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PRINPLUP,e.EMPOLEON,e.AMBIPOM,e.GLAMEOW,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.GIBLE,e.GABITE,e.GARCHOMP,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.RHYPERIOR,e.GALLADE,e.DIALGA,e.PALKIA,e.GIRATINA,e.DARKRAI,e.ARCEUS,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.DRILBUR,e.EXCADRILL,e.LEAVANNY,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DWEBBLE,e.CRUSTLE,e.COFAGRIGUS,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.FERROTHORN,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.RUFFLET,e.BRAVIARY,e.HEATMOR,e.DURANT,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.PANCHAM,e.PANGORO,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.BINACLE,e.BARBARACLE,e.PHANTUMP,e.TREVENANT,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.SALANDIT,e.SALAZZLE,e.BEWEAR,e.GOLISOPOD,e.TYPE_NULL,e.SILVALLY,e.KOMALA,e.MIMIKYU,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.LUNALA,e.GUZZLORD,e.NECROZMA,e.MARSHADOW,e.NAGANADEL,e.BLACEPHALON,e.THIEVUL,e.HATTERENE,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.RUNERIGUS,e.URSALUNA,e.SNEASLER,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.SKELEDIRGE,e.TAROUNTULA,e.SPIDOPS,e.TANDEMAUS,e.MAUSHOLD,e.CERULEDGE,e.GRAFAIAI,e.KLAWF,e.ANNIHILAPE,e.KINGAMBIT,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,[e.LYCANROC,"midnight"],e.GALAR_MEOWTH,e.GALAR_LINOONE,e.HISUI_TYPHLOSION,e.HISUI_SNEASEL,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE,e.BLOODMOON_URSALUNA],[t.THUNDER_FANG]:[e.ARBOK,e.GROWLITHE,e.ARCANINE,e.RHYHORN,e.RHYDON,e.JOLTEON,e.AERODACTYL,e.MEW,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.HOUNDOUR,e.HOUNDOOM,e.DONPHAN,e.RAIKOU,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.EXPLOUD,e.MAWILE,e.ELECTRIKE,e.MANECTRIC,e.SEVIPER,e.BAGON,e.SHELGON,e.SALAMENCE,e.SHINX,e.LUXIO,e.LUXRAY,e.PACHIRISU,e.GIBLE,e.GABITE,e.GARCHOMP,e.HIPPOPOTAS,e.HIPPOWDON,e.DRAPION,e.RHYPERIOR,e.GLISCOR,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.EELEKTRIK,e.EELEKTROSS,e.DRUDDIGON,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.ZEKROM,e.LITLEO,e.PYROAR,e.TYRUNT,e.TYRANTRUM,e.VOLCANION,e.YUNGOOS,e.GUMSHOOS,e.ROCKRUFF,e.LYCANROC,e.SILVALLY,e.GREEDENT,e.THIEVUL,e.YAMPER,e.BOLTUND,e.SANDACONDA,e.TOXTRICITY,e.CENTISKORCH,e.MORPEKO,e.DRACOZOLT,e.ARCTOZOLT,e.ZACIAN,e.ZAMAZENTA,e.REGIDRAGO,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.PAWMI,e.PAWMO,e.PAWMOT,e.FIDOUGH,e.DACHSBUN,e.MASCHIFF,e.MABOSSTIFF,e.CYCLIZAR,e.GREAVARD,e.HOUNDSTONE,e.GREAT_TUSK,e.SCREAM_TAIL,e.IRON_TREADS,e.IRON_THORNS,e.BAXCALIBUR,e.ROARING_MOON,e.KORAIDON,e.OKIDOGI,e.GOUGING_FIRE,e.RAGING_BOLT,e.HISUI_GROWLITHE,e.HISUI_ARCANINE],[t.ICE_FANG]:[e.ARBOK,e.RHYHORN,e.RHYDON,e.GYARADOS,e.AERODACTYL,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.SWINUB,e.PILOSWINE,e.DONPHAN,e.SUICUNE,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.EXPLOUD,e.MAWILE,e.ELECTRIKE,e.MANECTRIC,e.CARVANHA,e.SHARPEDO,e.SEVIPER,e.SNORUNT,e.GLALIE,e.WALREIN,e.HUNTAIL,e.SHINX,e.LUXIO,e.LUXRAY,e.BUIZEL,e.FLOATZEL,e.HIPPOPOTAS,e.HIPPOWDON,e.DRAPION,e.RHYPERIOR,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.FROSLASS,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.BASCULIN,e.CUBCHOO,e.BEARTIC,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.TYRUNT,e.TYRANTRUM,e.BERGMITE,e.AVALUGG,e.YUNGOOS,e.GUMSHOOS,e.SILVALLY,e.BRUXISH,e.GREEDENT,e.THIEVUL,e.CHEWTLE,e.DREDNAW,e.ARROKUDA,e.BARRASKEWDA,e.MORPEKO,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.ZACIAN,e.ZAMAZENTA,e.REGIDRAGO,e.BASCULEGION,e.FIDOUGH,e.DACHSBUN,e.MASCHIFF,e.MABOSSTIFF,e.GREAVARD,e.HOUNDSTONE,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.GREAT_TUSK,e.SCREAM_TAIL,e.IRON_TREADS,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.CHIEN_PAO,e.KORAIDON,e.OKIDOGI,e.GALAR_SLOWBRO,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_STUNFISK,e.HISUI_AVALUGG],[t.FIRE_FANG]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.EKANS,e.ARBOK,e.GROWLITHE,e.ARCANINE,e.RHYHORN,e.RHYDON,e.FLAREON,e.AERODACTYL,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.HOUNDOUR,e.HOUNDOOM,e.DONPHAN,e.ENTEI,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.EXPLOUD,e.MAWILE,e.ELECTRIKE,e.MANECTRIC,e.SEVIPER,e.BAGON,e.SHELGON,e.SALAMENCE,e.GROUDON,e.SHINX,e.LUXIO,e.LUXRAY,e.GIBLE,e.GABITE,e.GARCHOMP,e.HIPPOPOTAS,e.HIPPOWDON,e.DRAPION,e.RHYPERIOR,e.GLISCOR,e.HEATRAN,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.DRUDDIGON,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.RESHIRAM,e.LITLEO,e.PYROAR,e.TYRUNT,e.TYRANTRUM,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.YUNGOOS,e.GUMSHOOS,e.ROCKRUFF,e.LYCANROC,e.SALANDIT,e.SALAZZLE,e.SILVALLY,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.GREEDENT,e.THIEVUL,e.YAMPER,e.BOLTUND,e.SANDACONDA,e.CENTISKORCH,e.MORPEKO,e.DRACOZOLT,e.ZACIAN,e.ZAMAZENTA,e.REGIDRAGO,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.FIDOUGH,e.DACHSBUN,e.MASCHIFF,e.MABOSSTIFF,e.SCOVILLAIN,e.CYCLIZAR,e.GREAVARD,e.HOUNDSTONE,e.GREAT_TUSK,e.SCREAM_TAIL,e.IRON_JUGULIS,e.IRON_THORNS,e.ROARING_MOON,e.KORAIDON,e.WALKING_WAKE,e.OKIDOGI,e.GOUGING_FIRE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION],[t.PSYCHO_CUT]:[e.KADABRA,e.ALAKAZAM,e.DROWZEE,e.HYPNO,e.EXEGGUTOR,e.STARMIE,e.SCYTHER,e.JYNX,e.KABUTOPS,e.MEWTWO,e.MEW,e.SCIZOR,e.SNEASEL,e.CELEBI,e.MEDITITE,e.MEDICHAM,e.SPINDA,e.ABSOL,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.WEAVILE,e.GALLADE,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.LIEPARD,e.WOOBAT,e.SWOOBAT,e.SIGILYPH,e.HAXORUS,e.PAWNIARD,e.BISHARP,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.INKAY,e.MALAMAR,e.DECIDUEYE,e.LURANTIS,e.TAPU_LELE,e.LUNALA,e.KARTANA,e.NECROZMA,e.ORBEETLE,e.HATTERENE,e.ZACIAN,e.SPECTRIER,e.KLEAVOR,e.CERULEDGE,e.VELUZA,e.IRON_VALIANT,e.IRON_BOULDER,e.IRON_CROWN,e.GALAR_RAPIDASH,e.GALAR_ARTICUNO,[e.CALYREX,"shadow"],e.HISUI_SAMUROTT,e.HISUI_DECIDUEYE],[t.ZEN_HEADBUTT]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.RATTATA,e.RATICATE,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.VENONAT,e.VENOMOTH,e.PSYDUCK,e.GOLDUCK,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.GRIMER,e.MUK,e.DROWZEE,e.HYPNO,e.EXEGGUTOR,e.LICKITUNG,e.CHANSEY,e.MR_MIME,e.JYNX,e.TAUROS,e.LAPRAS,e.PORYGON,e.SNORLAX,e.MEWTWO,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.CLEFFA,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.ESPEON,e.SLOWKING,e.GIRAFARIG,e.DUNSPARCE,e.PORYGON2,e.STANTLER,e.SMOOCHUM,e.MILTANK,e.BLISSEY,e.LUGIA,e.HO_OH,e.CELEBI,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.VOLBEAT,e.ILLUMISE,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.BALTOY,e.CLAYDOL,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.RELICANTH,e.BAGON,e.SHELGON,e.SALAMENCE,e.BELDUM,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.GROUDON,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.CRANIDOS,e.RAMPARDOS,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.HAPPINY,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.LICKILICKY,e.TOGEKISS,e.PORYGON_Z,e.GALLADE,e.UXIE,e.MESPRIT,e.AZELF,e.REGIGIGAS,e.CRESSELIA,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PATRAT,e.WATCHOG,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.THROH,e.SAWK,e.BASCULIN,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DEERLING,e.SAWSBUCK,e.ALOMOMOLA,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.GOLURK,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.BRAIXEN,e.DELPHOX,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.HAWLUCHA,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.HOOPA,e.YUNGOOS,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.ROCKRUFF,e.LYCANROC,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.ORANGURU,e.SILVALLY,e.MINIOR,e.KOMALA,e.TOGEDEMARU,e.TAPU_BULU,e.SOLGALEO,e.NIHILEGO,e.CELESTEELA,e.MAGEARNA,e.MARSHADOW,e.STAKATAKA,e.BLACEPHALON,e.CINDERACE,e.DOTTLER,e.ORBEETLE,e.DUBWOOL,e.APPLETUN,e.SANDACONDA,e.MR_RIME,e.RUNERIGUS,e.FALINKS,e.EISCUE,e.INDEEDEE,e.CUFANT,e.COPPERAJAH,e.DRACOVISH,e.ARCTOVISH,e.KUBFU,e.URSHIFU,e.GLASTRIER,e.CALYREX,e.WYRDEER,e.ENAMORUS,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.LECHONK,e.OINKOLOGNE,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CAPSAKID,e.SCOVILLAIN,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.VELUZA,e.DONDOZO,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.SLITHER_WING,e.IRON_TREADS,e.IRON_JUGULIS,e.BAXCALIBUR,e.WO_CHIEN,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.OGERPON,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.HISUI_TYPHLOSION,e.HISUI_BRAVIARY,e.PALDEA_TAUROS],[t.FLASH_CANNON]:[e.BLASTOISE,e.MAGNEMITE,e.MAGNETON,e.ONIX,e.HORSEA,e.SEADRA,e.STARYU,e.STARMIE,e.MEW,e.FORRETRESS,e.STEELIX,e.SCIZOR,e.OCTILLERY,e.SKARMORY,e.KINGDRA,e.NOSEPASS,e.MAWILE,e.AGGRON,e.NUMEL,e.CAMERUPT,e.SPOINK,e.GRUMPIG,e.ARMALDO,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.JIRACHI,e.DEOXYS,e.EMPOLEON,e.SHIELDON,e.BASTIODON,e.BRONZOR,e.BRONZONG,e.LUCARIO,e.MAGNEZONE,e.RHYPERIOR,e.PROBOPASS,e.DIALGA,e.HEATRAN,e.ARCEUS,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.SIGILYPH,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.BEHEEYEM,e.CRYOGONAL,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.DURANT,e.HYDREIGON,e.COBALION,e.THUNDURUS,e.ZEKROM,e.KYUREM,e.GENESECT,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.CLAUNCHER,e.CLAWITZER,e.AMAURA,e.AURORUS,e.CARBINK,e.KLEFKI,e.BERGMITE,e.AVALUGG,e.XERNEAS,e.DIANCIE,e.VOLCANION,e.TOUCANNON,e.VIKAVOLT,e.SANDYGAST,e.PALOSSAND,e.SILVALLY,e.TURTONATOR,e.DHELMISE,e.KOMMO_O,e.SOLGALEO,e.CELESTEELA,e.NECROZMA,e.MAGEARNA,e.STAKATAKA,e.MELTAN,e.MELMETAL,e.CORVIKNIGHT,e.PERRSERKER,e.CUFANT,e.COPPERAJAH,e.DURALUDON,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.NACLI,e.NACLSTACK,e.GARGANACL,e.ARMAROUGE,e.TOEDSCOOL,e.TOEDSCRUEL,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.VAROOM,e.REVAVROOM,e.ORTHWORM,e.GLIMMORA,e.KINGAMBIT,e.GREAT_TUSK,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_JUGULIS,e.IRON_MOTH,e.GHOLDENGO,e.MIRAIDON,e.ARCHALUDON,e.IRON_CROWN,[e.WORMADAM,"trash"],e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.GALAR_MEOWTH,e.GALAR_STUNFISK,e.HISUI_SLIGGOO,e.HISUI_GOODRA],[t.ROCK_CLIMB]:[e.VENUSAUR,e.BLASTOISE,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.ARCANINE,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.ONIX,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.OMASTAR,e.KABUTOPS,e.SNORLAX,e.MEWTWO,e.MEW,e.MEGANIUM,e.TYPHLOSION,e.FERALIGATR,e.AMPHAROS,e.GLIGAR,e.STEELIX,e.GRANBULL,e.URSARING,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.TYRANITAR,e.SCEPTILE,e.BLAZIKEN,e.SWAMPERT,e.ZIGZAGOON,e.LINOONE,e.LUDICOLO,e.VIGOROTH,e.SLAKING,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AGGRON,e.ZANGOOSE,e.REGIROCK,e.REGICE,e.REGISTEEL,e.GROUDON,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.EMPOLEON,e.BIDOOF,e.BIBAREL,e.CRANIDOS,e.RAMPARDOS,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.LUCARIO,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.ABOMASNOW,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.MAGMORTAR,e.GLISCOR,e.MAMOSWINE,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.DARKRAI,e.ARCEUS,e.DRILBUR,e.EXCADRILL,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.DRUDDIGON,e.BOUFFALANT,e.DURANT,e.ROCKRUFF,e.LYCANROC,e.OBSTAGOON,e.URSALUNA,e.ANNIHILAPE,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_MAROWAK,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.PALDEA_TAUROS,e.BLOODMOON_URSALUNA],[t.DEFOG]:[e.CHARIZARD,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.SPEAROW,e.FEAROW,e.ZUBAT,e.GOLBAT,e.VENOMOTH,e.FARFETCHD,e.SCYTHER,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.LEDIAN,e.CROBAT,e.TOGETIC,e.XATU,e.YANMA,e.MURKROW,e.GLIGAR,e.SCIZOR,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.LUGIA,e.HO_OH,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.BEAUTIFLY,e.DUSTOX,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.MASQUERAIN,e.NINJASK,e.VOLBEAT,e.ILLUMISE,e.VIBRAVA,e.FLYGON,e.SWABLU,e.ALTARIA,e.CASTFORM,e.TROPIUS,e.CHIMECHO,e.SALAMENCE,e.LATIAS,e.LATIOS,e.RAYQUAZA,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.MOTHIM,e.VESPIQUEN,e.DRIFLOON,e.DRIFBLIM,e.HONCHKROW,e.STUNKY,e.SKUNTANK,e.CHATOT,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.TOGEKISS,e.YANMEGA,e.GLISCOR,e.ROTOM,e.GIRATINA,e.ARCEUS,e.SNIVY,e.SERVINE,e.SERPERIOR,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.COTTONEE,e.WHIMSICOTT,e.SIGILYPH,e.ARCHEN,e.ARCHEOPS,e.DUCKLETT,e.SWANNA,e.EMOLGA,e.CRYOGONAL,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HYDREIGON,e.VOLCARONA,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.FLORGES,e.HAWLUCHA,e.KLEFKI,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.FOMANTIS,e.LURANTIS,e.COMFEY,e.SILVALLY,e.DRAMPA,e.TAPU_KOKO,e.TAPU_FINI,e.LUNALA,e.KARTANA,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.CRAMORANT,e.SIRFETCHD,e.FROSMOTH,e.KLEAVOR,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.HISUI_LILLIGANT,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[t.TRICK_ROOM]:[e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.EXEGGCUTE,e.EXEGGUTOR,e.STARMIE,e.MR_MIME,e.JYNX,e.PORYGON,e.MEWTWO,e.MEW,e.NATU,e.XATU,e.ESPEON,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PORYGON2,e.STANTLER,e.SMOOCHUM,e.CELEBI,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.MEDITITE,e.MEDICHAM,e.SPOINK,e.GRUMPIG,e.SPINDA,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.JIRACHI,e.DEOXYS,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.SPIRITOMB,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.CRESSELIA,e.ARCEUS,e.VICTINI,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.WHIMSICOTT,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.FRILLISH,e.JELLICENT,e.KLINKLANG,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.INKAY,e.MALAMAR,e.CARBINK,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.DIANCIE,e.HOOPA,e.COMFEY,e.ORANGURU,e.MIMIKYU,e.BRUXISH,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.NECROZMA,e.MAGEARNA,e.STAKATAKA,e.DOTTLER,e.ORBEETLE,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.MR_RIME,e.RUNERIGUS,e.INDEEDEE,e.CALYREX,e.WYRDEER,e.MEOWSCARADA,e.ARMAROUGE,e.TOEDSCOOL,e.TOEDSCRUEL,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.FARIGIRAF,e.SCREAM_TAIL,e.FLUTTER_MANE,e.IRON_VALIANT,e.POLTCHAGEIST,e.SINISTCHA,e.ALOLA_EXEGGUTOR,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_SLOWKING,e.GALAR_YAMASK],[t.DRACO_METEOR]:[e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.KINGDRA,e.VIBRAVA,e.FLYGON,e.ALTARIA,e.BAGON,e.SHELGON,e.SALAMENCE,e.LATIAS,e.LATIOS,e.RAYQUAZA,e.GIBLE,e.GABITE,e.GARCHOMP,e.DIALGA,e.PALKIA,e.GIRATINA,e.ARCEUS,e.AXEW,e.FRAXURE,e.HAXORUS,e.DRUDDIGON,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.DRAGALGE,e.TYRUNT,e.TYRANTRUM,e.GOOMY,e.SLIGGOO,e.GOODRA,e.NOIBAT,e.NOIVERN,e.ZYGARDE,e.SILVALLY,e.TURTONATOR,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.GUZZLORD,e.NAGANADEL,e.APPLIN,e.FLAPPLE,e.APPLETUN,e.DRACOZOLT,e.DRACOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ETERNATUS,e.REGIDRAGO,e.CYCLIZAR,e.TATSUGIRI,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.DIPPLIN,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.ALOLA_EXEGGUTOR,e.HISUI_SLIGGOO,e.HISUI_GOODRA],[t.LEAF_STORM]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.ODDISH,e.GLOOM,e.VILEPLUME,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.EXEGGCUTE,e.EXEGGUTOR,e.TANGELA,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNKERN,e.SUNFLORA,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.BRELOOM,e.ROSELIA,e.CACNEA,e.CACTURNE,e.TROPIUS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.BUDEW,e.ROSERADE,[e.WORMADAM,"plant"],e.SNOVER,e.ABOMASNOW,e.TANGROWTH,e.LEAFEON,e.SNIVY,e.SERVINE,e.SERPERIOR,e.PANSAGE,e.SIMISAGE,e.LEAVANNY,e.PETILIL,e.LILLIGANT,e.MARACTUS,e.DEERLING,e.SAWSBUCK,e.FOONGUS,e.AMOONGUSS,e.VIRIZION,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.SKIDDO,e.GOGOAT,e.TREVENANT,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.FOMANTIS,e.LURANTIS,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.GOSSIFLEUR,e.ELDEGOSS,e.FLAPPLE,e.APPLETUN,e.ZARUDE,e.CALYREX,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.CAPSAKID,e.SCOVILLAIN,e.BRUTE_BONNET,e.WO_CHIEN,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OGERPON,e.HYDRAPPLE,e.SHAYMIN,[e.ROTOM,"mow"],e.ALOLA_EXEGGUTOR,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE],[t.POWER_WHIP]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.EXEGGUTOR,e.LICKITUNG,e.TANGELA,e.GYARADOS,e.MEW,e.ROSELIA,e.CRADILY,e.ROSERADE,e.CARNIVINE,e.LICKILICKY,e.TANGROWTH,e.PALPITOAD,e.SEISMITOAD,e.FERROTHORN,e.GOODRA,e.GOURGEIST,e.TSAREENA,e.DHELMISE,e.XURKITREE,e.SIZZLIPEDE,e.CENTISKORCH,e.HATTERENE,e.GRIMMSNARL,e.CUFANT,e.COPPERAJAH,e.ZARUDE,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.CYCLIZAR,e.WO_CHIEN,e.OGERPON,e.ALOLA_EXEGGUTOR],[t.CROSS_POISON]:[e.PARAS,e.PARASECT,e.MACHAMP,e.TENTACOOL,e.TENTACRUEL,e.SCYTHER,e.KABUTOPS,e.MEW,e.SPINARAK,e.ARIADOS,e.CROBAT,e.GLIGAR,e.SCIZOR,e.SCEPTILE,e.ANORITH,e.ARMALDO,e.VESPIQUEN,e.SKORUPI,e.DRAPION,e.TOXICROAK,e.GLISCOR,e.SCOLIPEDE,e.GARBODOR,e.JOLTIK,e.GALVANTULA,e.TOXAPEX,e.LURANTIS,e.SALAZZLE,e.NIHILEGO,e.NAGANADEL,e.OBSTAGOON,e.ETERNATUS,e.KLEAVOR,e.SHROODLE,e.GRAFAIAI,e.FEZANDIPITI],[t.GUNK_SHOT]:[e.EKANS,e.ARBOK,e.SANDSLASH,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.KOFFING,e.WEEZING,e.SNORLAX,e.MEW,e.AIPOM,e.GLIGAR,e.QWILFISH,e.TEDDIURSA,e.URSARING,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.PHANPY,e.DONPHAN,e.ZIGZAGOON,e.LINOONE,e.PELIPPER,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.GULPIN,e.SWALOT,e.ZANGOOSE,e.SEVIPER,e.SHUPPET,e.BANETTE,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PACHIRISU,e.AMBIPOM,e.STUNKY,e.SKUNTANK,e.MUNCHLAX,e.CROAGUNK,e.TOXICROAK,e.GLISCOR,e.ARCEUS,e.PATRAT,e.WATCHOG,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.KROOKODILE,e.TRUBBISH,e.GARBODOR,e.MINCCINO,e.CINCCINO,e.DRUDDIGON,e.GENESECT,e.FROGADIER,e.GRENINJA,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.SKRELP,e.DRAGALGE,e.HOOPA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.CRABRAWLER,e.CRABOMINABLE,e.MAREANIE,e.TOXAPEX,e.SALANDIT,e.SALAZZLE,e.PASSIMIAN,e.KOMALA,e.NIHILEGO,e.POIPOLE,e.NAGANADEL,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.TOXTRICITY,e.OBSTAGOON,e.PERRSERKER,e.ETERNATUS,e.URSALUNA,e.SNEASLER,e.OVERQWIL,e.SHROODLE,e.GRAFAIAI,e.RELLOR,e.RABSCA,e.VAROOM,e.REVAVROOM,e.GLIMMET,e.GLIMMORA,e.ANNIHILAPE,e.CLODSIRE,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.PECHARUNT,[e.WORMADAM,"trash"],e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_MEOWTH,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_SLOWKING,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.IRON_HEAD]:[e.ARCANINE,e.GRAVELER,e.GOLEM,e.MAGNEMITE,e.MAGNETON,e.ONIX,e.CUBONE,e.MAROWAK,e.TAUROS,e.GYARADOS,e.LAPRAS,e.AERODACTYL,e.SNORLAX,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.FORRETRESS,e.STEELIX,e.SCIZOR,e.MANTINE,e.SKARMORY,e.KINGDRA,e.PHANPY,e.DONPHAN,e.MILTANK,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.HARIYAMA,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.WAILORD,e.NUMEL,e.CAMERUPT,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.MILOTIC,e.GLALIE,e.WALREIN,e.BAGON,e.SHELGON,e.SALAMENCE,e.BELDUM,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BRONZOR,e.BRONZONG,e.GIBLE,e.GABITE,e.GARCHOMP,e.HIPPOWDON,e.MAGNEZONE,e.RHYPERIOR,e.MAMOSWINE,e.PROBOPASS,e.DIALGA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.ARCEUS,e.EMBOAR,e.STOUTLAND,e.GIGALITH,e.EXCADRILL,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.CARRACOSTA,e.ESCAVALIER,e.FERROSEED,e.FERROTHORN,e.AXEW,e.FRAXURE,e.HAXORUS,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.BRAVIARY,e.DURANT,e.COBALION,e.TERRAKION,e.KYUREM,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.BUNNELBY,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.HAWLUCHA,e.CARBINK,e.AVALUGG,e.INCINEROAR,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.ROCKRUFF,e.LYCANROC,e.MUDBRAY,e.MUDSDALE,e.STUFFUL,e.BEWEAR,e.PASSIMIAN,e.GOLISOPOD,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.SOLGALEO,e.NIHILEGO,e.BUZZWOLE,e.CELESTEELA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.STAKATAKA,e.MELMETAL,e.CINDERACE,e.CORVIKNIGHT,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.APPLETUN,e.SANDACONDA,e.PERRSERKER,e.FALINKS,e.EISCUE,e.CUFANT,e.COPPERAJAH,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.ZACIAN,e.ZAMAZENTA,e.KUBFU,e.URSHIFU,e.ENAMORUS,e.LECHONK,e.OINKOLOGNE,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CERULEDGE,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.CLODSIRE,e.FARIGIRAF,e.KINGAMBIT,e.GREAT_TUSK,e.IRON_TREADS,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_THORNS,e.ARCTIBAX,e.BAXCALIBUR,e.GHOLDENGO,e.ROARING_MOON,e.KORAIDON,e.OKIDOGI,e.ARCHALUDON,e.GOUGING_FIRE,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,[e.WORMADAM,"trash"],e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GOLEM,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_DARMANITAN,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.PALDEA_TAUROS],[t.STONE_EDGE]:[e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.MANKEY,e.PRIMEAPE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.ONIX,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.RHYHORN,e.RHYDON,e.PINSIR,e.TAUROS,e.GYARADOS,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.DRAGONITE,e.MEWTWO,e.MEW,e.SUDOWOODO,e.WOOPER,e.QUAGSIRE,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.GRANBULL,e.SHUCKLE,e.HERACROSS,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.PHANPY,e.DONPHAN,e.HITMONTOP,e.ENTEI,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.BLAZIKEN,e.SWAMPERT,e.BRELOOM,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.MAWILE,e.LAIRON,e.AGGRON,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CLAYDOL,e.CRADILY,e.ARMALDO,e.ABSOL,e.RELICANTH,e.SALAMENCE,e.METAGROSS,e.REGIROCK,e.GROUDON,e.RAYQUAZA,e.TORTERRA,e.INFERNAPE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.SHELLOS,e.GASTRODON,e.BONSLY,e.GIBLE,e.GABITE,e.GARCHOMP,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.TOXICROAK,e.RHYPERIOR,e.GLISCOR,e.MAMOSWINE,e.GALLADE,e.PROBOPASS,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.ARCEUS,e.PIGNITE,e.EMBOAR,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARMANITAN,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.BEARTIC,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.DURANT,e.HYDREIGON,e.COBALION,e.TERRAKION,e.VIRIZION,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.BUNNELBY,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.BINACLE,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.HAWLUCHA,e.CARBINK,e.BERGMITE,e.AVALUGG,e.ZYGARDE,e.DIANCIE,e.VOLCANION,e.CRABRAWLER,e.CRABOMINABLE,e.ROCKRUFF,e.LYCANROC,e.MUDBRAY,e.MUDSDALE,e.SANDYGAST,e.PALOSSAND,e.MINIOR,e.TURTONATOR,e.TAPU_BULU,e.SOLGALEO,e.BUZZWOLE,e.CELESTEELA,e.GUZZLORD,e.NECROZMA,e.MARSHADOW,e.STAKATAKA,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.SILICOBRA,e.SANDACONDA,e.CURSOLA,e.RUNERIGUS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.ZAMAZENTA,e.URSHIFU,e.KLEAVOR,e.URSALUNA,e.NACLI,e.NACLSTACK,e.GARGANACL,e.KLAWF,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.BOMBIRDIER,e.GLIMMET,e.GLIMMORA,e.ANNIHILAPE,e.CLODSIRE,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.IRON_TREADS,e.IRON_THORNS,e.TING_LU,e.ROARING_MOON,e.ARCHALUDON,e.GOUGING_FIRE,e.IRON_BOULDER,e.TERAPAGOS,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_CORSOLA,e.GALAR_DARMANITAN,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.STEALTH_ROCK]:[e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.DIGLETT,e.DUGTRIO,e.PRIMEAPE,e.GEODUDE,e.GRAVELER,e.GOLEM,e.ONIX,e.CUBONE,e.MAROWAK,e.RHYHORN,e.RHYDON,e.CHANSEY,e.PINSIR,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.MEW,e.SUDOWOODO,e.WOOPER,e.QUAGSIRE,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SHUCKLE,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.SKARMORY,e.PHANPY,e.DONPHAN,e.MILTANK,e.BLISSEY,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.CELEBI,e.MARSHTOMP,e.SWAMPERT,e.NOSEPASS,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.KECLEON,e.RELICANTH,e.METANG,e.METAGROSS,e.REGIROCK,e.REGISTEEL,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIDOOF,e.BIBAREL,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.SHELLOS,e.GASTRODON,e.BRONZOR,e.BRONZONG,e.BONSLY,e.GIBLE,e.GABITE,e.GARCHOMP,e.HIPPOPOTAS,e.HIPPOWDON,e.RHYPERIOR,e.GLISCOR,e.MAMOSWINE,e.PROBOPASS,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.HEATRAN,e.ARCEUS,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DRILBUR,e.EXCADRILL,e.PALPITOAD,e.SEISMITOAD,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DWEBBLE,e.CRUSTLE,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.FERROSEED,e.FERROTHORN,e.STUNFISK,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.HYDREIGON,e.COBALION,e.TERRAKION,e.ZEKROM,e.LANDORUS,e.BINACLE,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.CARBINK,e.DIANCIE,e.ROCKRUFF,e.LYCANROC,e.MUDBRAY,e.MUDSDALE,e.SANDYGAST,e.PALOSSAND,e.MINIOR,e.KOMMO_O,e.NIHILEGO,e.NECROZMA,e.STAKATAKA,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.SILICOBRA,e.SANDACONDA,e.PERRSERKER,e.CURSOLA,e.RUNERIGUS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DURALUDON,e.KLEAVOR,e.NACLI,e.NACLSTACK,e.GARGANACL,e.KLAWF,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.BOMBIRDIER,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.ANNIHILAPE,e.CLODSIRE,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_THORNS,e.TING_LU,e.ARCHALUDON,e.TERAPAGOS,[e.WORMADAM,"sandy","trash"],e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_CORSOLA,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_AVALUGG,e.PALDEA_WOOPER],[t.GRASS_KNOT]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.RATTATA,e.RATICATE,e.PIKACHU,e.RAICHU,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.GOLDUCK,e.ABRA,e.KADABRA,e.ALAKAZAM,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.SLOWPOKE,e.SLOWBRO,e.DROWZEE,e.HYPNO,e.EXEGGCUTE,e.EXEGGUTOR,e.CHANSEY,e.TANGELA,e.STARMIE,e.MR_MIME,e.JYNX,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.SENTRET,e.FURRET,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.ESPEON,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.SMOOCHUM,e.BLISSEY,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SHROOMISH,e.BRELOOM,e.SKITTY,e.DELCATTY,e.MAWILE,e.MEDITITE,e.MEDICHAM,e.PLUSLE,e.MINUN,e.ROSELIA,e.SPOINK,e.GRUMPIG,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.KECLEON,e.TROPIUS,e.CHIMECHO,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIDOOF,e.BIBAREL,e.BUDEW,e.ROSERADE,[e.WORMADAM,"plant"],e.PACHIRISU,e.CHERUBI,e.CHERRIM,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CARNIVINE,e.SNOVER,e.ABOMASNOW,e.TANGROWTH,e.TOGEKISS,e.LEAFEON,e.GALLADE,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.SCRAGGY,e.SCRAFTY,e.COFAGRIGUS,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.REUNICLUS,e.DEERLING,e.SAWSBUCK,e.FOONGUS,e.AMOONGUSS,e.FERROTHORN,e.EELEKTROSS,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.BINACLE,e.BARBARACLE,e.HELIOPTILE,e.HELIOLISK,e.HAWLUCHA,e.DEDENNE,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.XERNEAS,e.ZYGARDE,e.HOOPA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.CUTIEFLY,e.RIBOMBEE,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.PASSIMIAN,e.TOGEDEMARU,e.DRAMPA,e.DHELMISE,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.NIHILEGO,e.XURKITREE,e.CELESTEELA,e.MAGEARNA,e.MARSHADOW,e.ZERAORA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.FLAPPLE,e.APPLETUN,e.OBSTAGOON,e.MR_RIME,e.RUNERIGUS,e.ZARUDE,e.CALYREX,e.SNEASLER,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.TAROUNTULA,e.SPIDOPS,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.CAPSAKID,e.SCOVILLAIN,e.PALAFIN,e.FARIGIRAF,e.KINGAMBIT,e.SCREAM_TAIL,e.BRUTE_BONNET,e.WO_CHIEN,e.IRON_VALIANT,e.IRON_LEAVES,e.DIPPLIN,e.MUNKIDORI,e.OGERPON,e.HYDRAPPLE,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_EXEGGUTOR,e.ETERNAL_FLOETTE,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZOROARK,e.HISUI_DECIDUEYE],[t.BUG_BITE]:[e.CATERPIE,e.METAPOD,e.BUTTERFREE,e.WEEDLE,e.KAKUNA,e.BEEDRILL,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.WEEPINBELL,e.VICTREEBEL,e.SCYTHER,e.PINSIR,e.MEW,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.YANMA,e.PINECO,e.FORRETRESS,e.GLIGAR,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.WURMPLE,e.SILCOON,e.BEAUTIFLY,e.CASCOON,e.DUSTOX,e.SURSKIT,e.MASQUERAIN,e.NINCADA,e.NINJASK,e.SHEDINJA,e.VOLBEAT,e.ILLUMISE,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.ANORITH,e.ARMALDO,e.KRICKETOT,e.KRICKETUNE,e.BURMY,e.WORMADAM,e.MOTHIM,e.COMBEE,e.VESPIQUEN,e.SKORUPI,e.DRAPION,e.CARNIVINE,e.YANMEGA,e.GLISCOR,e.HEATRAN,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.DWEBBLE,e.CRUSTLE,e.KARRABLAST,e.ESCAVALIER,e.JOLTIK,e.GALVANTULA,e.SHELMET,e.ACCELGOR,e.HEATMOR,e.DURANT,e.LARVESTA,e.VOLCARONA,e.GENESECT,e.SCATTERBUG,e.SPEWPA,e.VIVILLON,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CUTIEFLY,e.RIBOMBEE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.GOLISOPOD,e.BUZZWOLE,e.PHEROMOSA,e.SIZZLIPEDE,e.CENTISKORCH,e.SNOM,e.FROSMOTH,e.KLEAVOR,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.RELLOR,e.RABSCA,e.SLITHER_WING,e.DIPPLIN,e.HYDRAPPLE],[t.CHARGE_BEAM]:[e.RATTATA,e.RATICATE,e.PIKACHU,e.RAICHU,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MAGNEMITE,e.MAGNETON,e.VOLTORB,e.ELECTRODE,e.CHANSEY,e.MR_MIME,e.ELECTABUZZ,e.JOLTEON,e.PORYGON,e.ZAPDOS,e.MEWTWO,e.MEW,e.SENTRET,e.FURRET,e.CHINCHOU,e.LANTURN,e.PICHU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.MISDREAVUS,e.GIRAFARIG,e.DUNSPARCE,e.REMORAID,e.OCTILLERY,e.PORYGON2,e.STANTLER,e.ELEKID,e.BLISSEY,e.RAIKOU,e.LUGIA,e.HO_OH,e.CELEBI,e.ZIGZAGOON,e.LINOONE,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SKITTY,e.DELCATTY,e.MAWILE,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.SPOINK,e.GRUMPIG,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.ABSOL,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.BIDOOF,e.BIBAREL,e.SHINX,e.LUXIO,e.LUXRAY,e.PACHIRISU,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.MAGNEZONE,e.ELECTIVIRE,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.GIRATINA,e.CRESSELIA,e.DARKRAI,e.ARCEUS,e.VICTINI,e.MUNNA,e.MUSHARNA,e.BLITZLE,e.ZEBSTRIKA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.SIGILYPH,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.EMOLGA,e.JOLTIK,e.GALVANTULA,e.KLINK,e.KLANG,e.KLINKLANG,e.TYNAMO,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.DRUDDIGON,e.GOLURK,e.HYDREIGON,e.THUNDURUS,e.ZEKROM,e.MELOETTA,e.GENESECT,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.HELIOPTILE,e.HELIOLISK,e.AMAURA,e.AURORUS,e.DEDENNE,e.PUMPKABOO,e.GOURGEIST,e.HOOPA,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.SHIINOTIC,e.ORANGURU,e.MINIOR,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.TAPU_LELE,e.LUNALA,e.NIHILEGO,e.XURKITREE,e.NECROZMA,e.MAGEARNA,e.TOXTRICITY,e.PINCURCHIN,e.MORPEKO,e.REGIELEKI,e.WYRDEER,e.PAWMI,e.PAWMO,e.PAWMOT,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.FARIGIRAF,e.FLUTTER_MANE,e.SANDY_SHOCKS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.GHOLDENGO,e.IRON_VALIANT,e.MIRAIDON,e.RAGING_BOLT,e.ALOLA_RAICHU,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.HISUI_VOLTORB,e.HISUI_ELECTRODE],[t.HONE_CLAWS]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.PARAS,e.PARASECT,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.KRABBY,e.KINGLER,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.DRAGONITE,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.SPINARAK,e.ARIADOS,e.AIPOM,e.GLIGAR,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.TYRANITAR,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.ZIGZAGOON,e.LINOONE,e.LOMBRE,e.LUDICOLO,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.SABLEYE,e.ARON,e.LAIRON,e.AGGRON,e.FLYGON,e.ALTARIA,e.ZANGOOSE,e.CORPHISH,e.CRAWDAUNT,e.ANORITH,e.ARMALDO,e.KECLEON,e.ABSOL,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGISTEEL,e.LATIAS,e.LATIOS,e.GROUDON,e.RAYQUAZA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PRINPLUP,e.EMPOLEON,e.KRICKETUNE,e.VESPIQUEN,e.AMBIPOM,e.GLAMEOW,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.GIBLE,e.GABITE,e.GARCHOMP,e.LUCARIO,e.SKORUPI,e.DRAPION,e.WEAVILE,e.GLISCOR,e.DIALGA,e.PALKIA,e.GIRATINA,e.ARCEUS,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.DRILBUR,e.EXCADRILL,e.LEAVANNY,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DWEBBLE,e.CRUSTLE,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.FERROSEED,e.FERROTHORN,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.RUFFLET,e.BRAVIARY,e.HEATMOR,e.DURANT,e.COBALION,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.MELOETTA,e.GENESECT,e.QUILLADIN,e.CHESNAUGHT,e.TALONFLAME,e.PANGORO,e.BINACLE,e.BARBARACLE,e.CLAUNCHER,e.CLAWITZER,e.TYRUNT,e.TYRANTRUM,e.HAWLUCHA,e.TREVENANT,e.NOIVERN,e.YVELTAL,e.MIMIKYU,e.ZERAORA,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.NICKIT,e.THIEVUL,e.OBSTAGOON,e.PERRSERKER,e.DURALUDON,e.URSALUNA,e.SNEASLER,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.MASCHIFF,e.MABOSSTIFF,e.BOMBIRDIER,e.KINGAMBIT,e.WALKING_WAKE,e.ARCHALUDON,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.GALAR_MEOWTH,e.GALAR_LINOONE,e.HISUI_SNEASEL,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY],[t.WONDER_ROOM]:[e.CLEFAIRY,e.CLEFABLE,e.PSYDUCK,e.GOLDUCK,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.GASTLY,e.HAUNTER,e.GENGAR,e.STARMIE,e.MR_MIME,e.JYNX,e.PORYGON,e.MEWTWO,e.MEW,e.CLEFFA,e.UMBREON,e.SLOWKING,e.MISDREAVUS,e.PORYGON2,e.SMOOCHUM,e.LUGIA,e.CELEBI,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SABLEYE,e.ALTARIA,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.KECLEON,e.DUSKULL,e.DUSCLOPS,e.LATIOS,e.DEOXYS,e.MISMAGIUS,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.SPIRITOMB,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.UXIE,e.MESPRIT,e.AZELF,e.DARKRAI,e.MUNNA,e.MUSHARNA,e.YAMASK,e.COFAGRIGUS,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.ELGYEM,e.BEHEEYEM,e.MELOETTA,e.BRAIXEN,e.DELPHOX,e.ESPURR,e.MEOWSTIC,e.CARBINK,e.XERNEAS,e.DIANCIE,e.HOOPA,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.CUTIEFLY,e.RIBOMBEE,e.DEWPIDER,e.ARAQUANID,e.MORELULL,e.SHIINOTIC,e.ORANGURU,e.BRUXISH,e.TAPU_LELE,e.TAPU_FINI,e.LUNALA,e.NIHILEGO,e.STAKATAKA,e.DOTTLER,e.ORBEETLE,e.SINISTEA,e.POLTEAGEIST,e.HATTERENE,e.GRIMMSNARL,e.MR_RIME,e.RUNERIGUS,e.ALCREMIE,e.STONJOURNER,e.INDEEDEE,e.CALYREX,e.ALOLA_NINETALES,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_YAMASK],[t.PSYSHOCK]:[e.CLEFAIRY,e.CLEFABLE,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PSYDUCK,e.GOLDUCK,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.DROWZEE,e.HYPNO,e.EXEGGCUTE,e.EXEGGUTOR,e.STARMIE,e.MR_MIME,e.JYNX,e.PORYGON,e.MEWTWO,e.MEW,e.CLEFFA,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.ESPEON,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PORYGON2,e.STANTLER,e.SMOOCHUM,e.LUGIA,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.MEDITITE,e.MEDICHAM,e.SPOINK,e.GRUMPIG,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.CHIMECHO,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.MISMAGIUS,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.SPIRITOMB,e.TOGEKISS,e.PORYGON_Z,e.GALLADE,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.DARKRAI,e.ARCEUS,e.VICTINI,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.SIGILYPH,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.ELGYEM,e.BEHEEYEM,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.ESPURR,e.MEOWSTIC,e.AROMATISSE,e.INKAY,e.MALAMAR,e.SYLVEON,e.KLEFKI,e.XERNEAS,e.DIANCIE,e.HOOPA,e.ORANGURU,e.BRUXISH,e.TAPU_LELE,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.NECROZMA,e.MAGEARNA,e.BLACEPHALON,e.DOTTLER,e.ORBEETLE,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.MR_RIME,e.ALCREMIE,e.INDEEDEE,e.CALYREX,e.WYRDEER,e.ARMAROUGE,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.FARIGIRAF,e.GREAT_TUSK,e.SCREAM_TAIL,e.FLUTTER_MANE,e.GHOLDENGO,e.IRON_VALIANT,e.MUNKIDORI,e.IRON_BOULDER,e.IRON_CROWN,e.ALOLA_RAICHU,e.ALOLA_NINETALES,e.ALOLA_EXEGGUTOR,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_SLOWKING,e.HISUI_BRAVIARY],[t.VENOSHOCK]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.BUTTERFREE,e.BEEDRILL,e.EKANS,e.ARBOK,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.KOFFING,e.WEEZING,e.MEW,e.SPINARAK,e.ARIADOS,e.CROBAT,e.BELLOSSOM,e.PINECO,e.FORRETRESS,e.GLIGAR,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.BEAUTIFLY,e.DUSTOX,e.SHROOMISH,e.BRELOOM,e.ROSELIA,e.GULPIN,e.SWALOT,e.CACNEA,e.CACTURNE,e.SEVIPER,e.BUDEW,e.ROSERADE,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.STUNKY,e.SKUNTANK,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.GLISCOR,e.SEISMITOAD,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.TRUBBISH,e.GARBODOR,e.FOONGUS,e.AMOONGUSS,e.SHELMET,e.ACCELGOR,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.MAREANIE,e.TOXAPEX,e.SALANDIT,e.SALAZZLE,e.GOLISOPOD,e.TURTONATOR,e.BRUXISH,e.NIHILEGO,e.POIPOLE,e.NAGANADEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.PINCURCHIN,e.ETERNATUS,e.SNEASLER,e.OVERQWIL,e.SHROODLE,e.GRAFAIAI,e.TOEDSCOOL,e.TOEDSCRUEL,e.VAROOM,e.REVAVROOM,e.GLIMMET,e.GLIMMORA,e.CLODSIRE,e.BRUTE_BONNET,e.IRON_MOTH,e.MUNKIDORI,e.FEZANDIPITI,e.PECHARUNT,e.ALOLA_RATICATE,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_SLOWKING,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.PALDEA_WOOPER],[t.MAGIC_ROOM]:[e.WIGGLYTUFF,e.ABRA,e.KADABRA,e.ALAKAZAM,e.DROWZEE,e.HYPNO,e.MR_MIME,e.JYNX,e.MEWTWO,e.MEW,e.NATU,e.XATU,e.ESPEON,e.MISDREAVUS,e.STANTLER,e.SMOOCHUM,e.CELEBI,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.LUNATONE,e.SHUPPET,e.BANETTE,e.LATIAS,e.JIRACHI,e.MISMAGIUS,e.MIME_JR,e.GALLADE,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.SIGILYPH,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.ESPURR,e.MEOWSTIC,e.KLEFKI,e.HOOPA,e.CUTIEFLY,e.RIBOMBEE,e.DEWPIDER,e.ARAQUANID,e.MORELULL,e.SHIINOTIC,e.ORANGURU,e.MIMIKYU,e.BRUXISH,e.TAPU_LELE,e.TAPU_FINI,e.LUNALA,e.STAKATAKA,e.DOTTLER,e.ORBEETLE,e.HATTERENE,e.MR_RIME,e.ALCREMIE,e.INDEEDEE,e.CALYREX,e.ALOLA_RAICHU,e.GALAR_RAPIDASH,e.GALAR_MR_MIME],[t.SMACK_DOWN]:[e.BLASTOISE,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.MANKEY,e.PRIMEAPE,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.ONIX,e.CUBONE,e.MAROWAK,e.RHYHORN,e.RHYDON,e.PINSIR,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.MEW,e.SUDOWOODO,e.AIPOM,e.STEELIX,e.SHUCKLE,e.HERACROSS,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.REMORAID,e.OCTILLERY,e.PHANPY,e.DONPHAN,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.SLAKING,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.AGGRON,e.CAMERUPT,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.RELICANTH,e.REGIROCK,e.GROUDON,e.TURTWIG,e.GROTLE,e.TORTERRA,e.MONFERNO,e.INFERNAPE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.AMBIPOM,e.BONSLY,e.RHYPERIOR,e.MAMOSWINE,e.PROBOPASS,e.REGIGIGAS,e.EMBOAR,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.KROOKODILE,e.DARMANITAN,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.GARBODOR,e.DRUDDIGON,e.TERRAKION,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.BINACLE,e.BARBARACLE,e.CLAUNCHER,e.CLAWITZER,e.CARBINK,e.DIANCIE,e.VOLCANION,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.PASSIMIAN,e.TURTONATOR,e.BUZZWOLE,e.CELESTEELA,e.GUZZLORD,e.MARSHADOW,e.STAKATAKA,e.BLACEPHALON,e.CINDERACE,e.INTELEON,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.STONJOURNER,e.COPPERAJAH,e.KLEAVOR,e.NACLI,e.NACLSTACK,e.GARGANACL,e.KLAWF,e.TINKATON,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.ANNIHILAPE,e.GREAT_TUSK,e.IRON_THORNS,e.ARCHALUDON,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_MAROWAK,e.GALAR_SLOWBRO,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_DECIDUEYE,e.BLOODMOON_URSALUNA],[t.SLUDGE_WAVE]:[e.EKANS,e.ARBOK,e.NIDOQUEEN,e.NIDOKING,e.VILEPLUME,e.VENOMOTH,e.DUGTRIO,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.KOFFING,e.WEEZING,e.MEW,e.SPINARAK,e.ARIADOS,e.WOOPER,e.QUAGSIRE,e.QWILFISH,e.SHUCKLE,e.OCTILLERY,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.GULPIN,e.SWALOT,e.SEVIPER,e.CRAWDAUNT,e.CRADILY,e.GASTRODON,e.STUNKY,e.SKUNTANK,e.CROAGUNK,e.TOXICROAK,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.TRUBBISH,e.GARBODOR,e.FRILLISH,e.JELLICENT,e.STUNFISK,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.GRENINJA,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.GOOMY,e.SLIGGOO,e.GOODRA,e.ZYGARDE,e.VOLCANION,e.MAREANIE,e.TOXAPEX,e.SALANDIT,e.SALAZZLE,e.GOLISOPOD,e.DHELMISE,e.NIHILEGO,e.GUZZLORD,e.POIPOLE,e.NAGANADEL,e.TOXTRICITY,e.ETERNATUS,e.SNEASLER,e.OVERQWIL,e.SHROODLE,e.GRAFAIAI,e.VAROOM,e.REVAVROOM,e.GLIMMET,e.GLIMMORA,e.CLODSIRE,e.IRON_MOTH,e.OKIDOGI,e.MUNKIDORI,e.PECHARUNT,e.ALOLA_RATICATE,e.ALOLA_DUGTRIO,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_SLOWKING,e.GALAR_STUNFISK,e.HISUI_SNEASEL,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.PALDEA_WOOPER],[t.HEAVY_SLAM]:[e.MACHOP,e.MACHOKE,e.MACHAMP,e.GRAVELER,e.GOLEM,e.MAGNEMITE,e.MAGNETON,e.ONIX,e.RHYHORN,e.RHYDON,e.SNORLAX,e.MEW,e.FORRETRESS,e.STEELIX,e.PHANPY,e.DONPHAN,e.MILTANK,e.TYRANITAR,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.ARON,e.LAIRON,e.AGGRON,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.WALREIN,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.KYOGRE,e.GROUDON,e.TURTWIG,e.GROTLE,e.TORTERRA,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BRONZOR,e.BRONZONG,e.HIPPOWDON,e.MAGNEZONE,e.RHYPERIOR,e.MAMOSWINE,e.PROBOPASS,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.ARCEUS,e.TEPIG,e.PIGNITE,e.EMBOAR,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.CRUSTLE,e.FERROTHORN,e.EELEKTROSS,e.CUBCHOO,e.BEARTIC,e.GOLETT,e.GOLURK,e.COBALION,e.CARBINK,e.AVALUGG,e.VOLCANION,e.MUDBRAY,e.MUDSDALE,e.TURTONATOR,e.DHELMISE,e.SOLGALEO,e.CELESTEELA,e.GUZZLORD,e.MAGEARNA,e.STAKATAKA,e.MELMETAL,e.CORVIKNIGHT,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.PERRSERKER,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DURALUDON,e.ZAMAZENTA,e.GLASTRIER,e.URSALUNA,e.NACLI,e.NACLSTACK,e.GARGANACL,e.TINKATON,e.REVAVROOM,e.ORTHWORM,e.CETODDLE,e.CETITAN,e.DONDOZO,e.CLODSIRE,e.DUDUNSPARCE,e.GREAT_TUSK,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_HANDS,e.IRON_THORNS,e.GHOLDENGO,e.TING_LU,e.KORAIDON,e.MIRAIDON,e.ARCHALUDON,e.HYDRAPPLE,e.RAGING_BOLT,e.IRON_CROWN,e.TERAPAGOS,e.ALOLA_GOLEM,[e.CALYREX,"ice"],e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.BLOODMOON_URSALUNA],[t.ELECTRO_BALL]:[e.PIKACHU,e.RAICHU,e.MAGNEMITE,e.MAGNETON,e.VOLTORB,e.ELECTRODE,e.ELECTABUZZ,e.JOLTEON,e.ZAPDOS,e.MEWTWO,e.MEW,e.CHINCHOU,e.LANTURN,e.PICHU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.ELEKID,e.RAIKOU,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.SHINX,e.LUXIO,e.LUXRAY,e.PACHIRISU,e.MAGNEZONE,e.ELECTIVIRE,e.ROTOM,e.BLITZLE,e.ZEBSTRIKA,e.EMOLGA,e.JOLTIK,e.GALVANTULA,e.EELEKTRIK,e.EELEKTROSS,e.THUNDURUS,e.ZEKROM,e.HELIOPTILE,e.HELIOLISK,e.DEDENNE,e.CHARJABUG,e.VIKAVOLT,e.TOGEDEMARU,e.TAPU_KOKO,e.XURKITREE,e.MAGEARNA,e.ZERAORA,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.WOOLOO,e.DUBWOOL,e.YAMPER,e.BOLTUND,e.TOXTRICITY,e.PINCURCHIN,e.MORPEKO,e.DRACOZOLT,e.ARCTOZOLT,e.REGIELEKI,e.PAWMI,e.PAWMO,e.PAWMOT,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.RABSCA,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_THORNS,e.GHOLDENGO,e.MIRAIDON,e.RAGING_BOLT,e.ALOLA_RAICHU,e.HISUI_VOLTORB,e.HISUI_ELECTRODE],[t.FLAME_CHARGE]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.VULPIX,e.NINETALES,e.GROWLITHE,e.ARCANINE,e.PONYTA,e.RAPIDASH,e.MAGMAR,e.FLAREON,e.MOLTRES,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.SLUGMA,e.MAGCARGO,e.HOUNDOUR,e.HOUNDOOM,e.MAGBY,e.ENTEI,e.HO_OH,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.MAGMORTAR,e.HEATRAN,e.VICTINI,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PANSEAR,e.SIMISEAR,e.BLITZLE,e.ZEBSTRIKA,e.DARUMAKA,e.DARMANITAN,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.LARVESTA,e.VOLCARONA,e.RESHIRAM,e.GENESECT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.PUMPKABOO,e.GOURGEIST,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.SALANDIT,e.SALAZZLE,e.TYPE_NULL,e.SILVALLY,e.TURTONATOR,e.SOLGALEO,e.CELESTEELA,e.BLACEPHALON,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.YAMPER,e.CARKOL,e.COALOSSAL,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.SLITHER_WING,e.IRON_MOTH,e.CHI_YU,e.KORAIDON,e.GOUGING_FIRE,e.ALOLA_MAROWAK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,[e.PALDEA_TAUROS,"blaze"]],[t.LOW_SWEEP]:[e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWHIRL,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.DROWZEE,e.HYPNO,e.HITMONLEE,e.HITMONCHAN,e.ELECTABUZZ,e.MAGMAR,e.MEWTWO,e.MEW,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.SNEASEL,e.TYROGUE,e.HITMONTOP,e.GROVYLE,e.SCEPTILE,e.COMBUSKEN,e.BLAZIKEN,e.NUZLEAF,e.SHIFTRY,e.BRELOOM,e.VIGOROTH,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.GRUMPIG,e.ZANGOOSE,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.ELECTIVIRE,e.MAGMORTAR,e.GALLADE,e.PIGNITE,e.EMBOAR,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.ZOROARK,e.GOTHITELLE,e.HAXORUS,e.MIENFOO,e.MIENSHAO,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.GRENINJA,e.PANCHAM,e.PANGORO,e.HELIOPTILE,e.HELIOLISK,e.HAWLUCHA,e.DECIDUEYE,e.INCINEROAR,e.GUMSHOOS,e.MUDBRAY,e.MUDSDALE,e.LURANTIS,e.STUFFUL,e.BEWEAR,e.STEENEE,e.TSAREENA,e.PASSIMIAN,e.KOMALA,e.BUZZWOLE,e.PHEROMOSA,e.MARSHADOW,e.ZERAORA,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.GRIMMSNARL,e.STONJOURNER,e.KUBFU,e.URSHIFU,e.ZARUDE,e.SNEASLER,e.FLORAGATO,e.MEOWSCARADA,e.QUAXWELL,e.QUAQUAVAL,e.LOKIX,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.GRAFAIAI,e.FLAMIGO,e.ANNIHILAPE,e.KINGAMBIT,e.SLITHER_WING,e.IRON_HANDS,e.GHOLDENGO,e.KORAIDON,e.OKIDOGI,e.OGERPON,[e.LYCANROC,"midnight"],e.GALAR_ZAPDOS,e.GALAR_SLOWKING,e.HISUI_SNEASEL,e.HISUI_LILLIGANT,e.HISUI_ZOROARK,e.HISUI_DECIDUEYE],[t.ACID_SPRAY]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.EKANS,e.ARBOK,e.ODDISH,e.GLOOM,e.VILEPLUME,e.VENONAT,e.VENOMOTH,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.KOFFING,e.WEEZING,e.MAGMAR,e.MEW,e.SPINARAK,e.ARIADOS,e.BELLOSSOM,e.WOOPER,e.QUAGSIRE,e.QWILFISH,e.REMORAID,e.OCTILLERY,e.MAGBY,e.GULPIN,e.SWALOT,e.SEVIPER,e.STUNKY,e.SKUNTANK,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.MAGMORTAR,e.ARCEUS,e.SCRAGGY,e.SCRAFTY,e.TRUBBISH,e.GARBODOR,e.KARRABLAST,e.ESCAVALIER,e.FERROSEED,e.FERROTHORN,e.EELEKTRIK,e.EELEKTROSS,e.ACCELGOR,e.SKRELP,e.DRAGALGE,e.SLIGGOO,e.GOODRA,e.MAREANIE,e.TOXAPEX,e.SALANDIT,e.SALAZZLE,e.NIHILEGO,e.FLAPPLE,e.TOXTRICITY,e.SNEASLER,e.OVERQWIL,e.ARMAROUGE,e.TADBULB,e.BELLIBOLT,e.SHROODLE,e.GRAFAIAI,e.TOEDSCOOL,e.TOEDSCRUEL,e.VAROOM,e.REVAVROOM,e.GLIMMET,e.GLIMMORA,e.CLODSIRE,e.IRON_MOTH,e.MUNKIDORI,e.FEZANDIPITI,e.PECHARUNT,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_SLOWKING,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.PALDEA_WOOPER],[t.FOUL_PLAY]:[e.VULPIX,e.NINETALES,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.VOLTORB,e.ELECTRODE,e.MR_MIME,e.PORYGON,e.MEWTWO,e.MEW,e.SPINARAK,e.ARIADOS,e.XATU,e.SUDOWOODO,e.AIPOM,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.SNEASEL,e.DELIBIRD,e.HOUNDOUR,e.HOUNDOOM,e.PORYGON2,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.MASQUERAIN,e.SABLEYE,e.MAWILE,e.CACNEA,e.CACTURNE,e.KECLEON,e.SHUPPET,e.BANETTE,e.ABSOL,e.GLALIE,e.AMBIPOM,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.BONSLY,e.SPIRITOMB,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.PORYGON_Z,e.ROTOM,e.UXIE,e.DARKRAI,e.ARCEUS,e.PURRLOIN,e.LIEPARD,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.ZORUA,e.ZOROARK,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.FOONGUS,e.AMOONGUSS,e.STUNFISK,e.PAWNIARD,e.BISHARP,e.VULLABY,e.MANDIBUZZ,e.TORNADUS,e.THUNDURUS,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.INKAY,e.MALAMAR,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.YVELTAL,e.HOOPA,e.SALANDIT,e.SALAZZLE,e.ORANGURU,e.NIHILEGO,e.PHEROMOSA,e.MARSHADOW,e.BLACEPHALON,e.NICKIT,e.THIEVUL,e.SINISTEA,e.POLTEAGEIST,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.PERRSERKER,e.MR_RIME,e.MORPEKO,e.DURALUDON,e.SPECTRIER,e.MEOWSCARADA,e.SQUAWKABILLY,e.SHROODLE,e.GRAFAIAI,e.TOEDSCOOL,e.TOEDSCRUEL,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FARIGIRAF,e.KINGAMBIT,e.WO_CHIEN,e.POLTCHAGEIST,e.SINISTCHA,e.ARCHALUDON,e.PECHARUNT,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_MUK,[e.LYCANROC,"midnight"],e.GALAR_MEOWTH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_STUNFISK,[e.URSHIFU,"single-strike"],[e.CALYREX,"shadow"],e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_ZORUA,e.HISUI_ZOROARK],[t.ROUND]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK],[t.ECHOED_VOICE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SPEAROW,e.FEAROW,e.PIKACHU,e.RAICHU,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.CUBONE,e.MAROWAK,e.CHANSEY,e.JYNX,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.POLITOED,e.ESPEON,e.UMBREON,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PHANPY,e.DONPHAN,e.SMOOCHUM,e.MILTANK,e.BLISSEY,e.LUGIA,e.HO_OH,e.CELEBI,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.SKITTY,e.DELCATTY,e.PLUSLE,e.MINUN,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.SWABLU,e.ALTARIA,e.CHIMECHO,e.ABSOL,e.SPHEAL,e.SEALEO,e.WALREIN,e.RAYQUAZA,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.MISMAGIUS,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.HAPPINY,e.CHATOT,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.GALLADE,e.DIALGA,e.PALKIA,e.GIRATINA,e.ARCEUS,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PURRLOIN,e.LIEPARD,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.AUDINO,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.MINCCINO,e.CINCCINO,e.DEERLING,e.SAWSBUCK,e.ELGYEM,e.BEHEEYEM,e.CUBCHOO,e.BEARTIC,e.HYDREIGON,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.AMAURA,e.AURORUS,e.SYLVEON,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.ROCKRUFF,e.LYCANROC,e.COMFEY,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.NIHILEGO,e.PHEROMOSA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.ZERAORA,e.ARCTOZOLT,e.LECHONK,e.OINKOLOGNE,e.TANDEMAUS,e.MAUSHOLD,e.CETODDLE,e.CETITAN,e.ALOLA_RAICHU,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GOLEM,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE],[t.STORED_POWER]:[e.CLEFAIRY,e.CLEFABLE,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.DROWZEE,e.HYPNO,e.EXEGGCUTE,e.EXEGGUTOR,e.CHANSEY,e.MR_MIME,e.JYNX,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CLEFFA,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.ESPEON,e.UMBREON,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.DUNSPARCE,e.STANTLER,e.SMOOCHUM,e.BLISSEY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.MEDITITE,e.MEDICHAM,e.SPOINK,e.GRUMPIG,e.LUNATONE,e.SOLROCK,e.CLAYDOL,e.CHIMECHO,e.LATIAS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.HAPPINY,e.SPIRITOMB,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.GALLADE,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.MANAPHY,e.ARCEUS,e.VICTINI,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.SIGILYPH,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.ELGYEM,e.BEHEEYEM,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLABEBE,e.FLOETTE,e.FLORGES,e.MEOWSTIC,e.INKAY,e.MALAMAR,e.SYLVEON,e.KLEFKI,e.DIANCIE,e.PRIMARINA,e.RIBOMBEE,e.COMFEY,e.ORANGURU,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.NECROZMA,e.MAGEARNA,e.BLACEPHALON,e.DOTTLER,e.ORBEETLE,e.TOXTRICITY,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.MR_RIME,e.MILCERY,e.ALCREMIE,e.INDEEDEE,e.CALYREX,e.WYRDEER,e.ARMAROUGE,e.CERULEDGE,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.VELUZA,e.FARIGIRAF,e.DUDUNSPARCE,e.SCREAM_TAIL,e.FLUTTER_MANE,e.IRON_VALIANT,e.MUNKIDORI,e.IRON_CROWN,e.TERAPAGOS,e.ALOLA_RAICHU,e.ALOLA_VULPIX,e.ETERNAL_FLOETTE,e.ALOLA_NINETALES,e.ALOLA_EXEGGUTOR,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_SLOWKING,e.HISUI_BRAVIARY],[t.ALLY_SWITCH]:[e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.DIGLETT,e.DUGTRIO,e.ABRA,e.KADABRA,e.ALAKAZAM,e.PONYTA,e.RAPIDASH,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.MAROWAK,e.CHANSEY,e.STARMIE,e.MR_MIME,e.JYNX,e.PORYGON,e.MEWTWO,e.MEW,e.NATU,e.XATU,e.ESPEON,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.FORRETRESS,e.PORYGON2,e.TYROGUE,e.BLISSEY,e.CELEBI,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SHEDINJA,e.SABLEYE,e.SPOINK,e.GRUMPIG,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.WORMADAM,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.SPIRITOMB,e.MAGNEZONE,e.TOGEKISS,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.MUNNA,e.MUSHARNA,e.ZEBSTRIKA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.YAMASK,e.COFAGRIGUS,e.ARCHEN,e.ARCHEOPS,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.KLANG,e.KLINKLANG,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.MIENFOO,e.MIENSHAO,e.GOLETT,e.GOLURK,e.MELOETTA,e.GENESECT,e.BRAIXEN,e.DELPHOX,e.FLABEBE,e.FLOETTE,e.FLORGES,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.INKAY,e.MALAMAR,e.HELIOPTILE,e.HELIOLISK,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.DIANCIE,e.HOOPA,e.CUTIEFLY,e.RIBOMBEE,e.COMFEY,e.ORANGURU,e.BRUXISH,e.DHELMISE,e.TAPU_LELE,e.NIHILEGO,e.NECROZMA,e.NAGANADEL,e.STAKATAKA,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.DOTTLER,e.ORBEETLE,e.SINISTEA,e.POLTEAGEIST,e.MR_RIME,e.RUNERIGUS,e.INDEEDEE,e.DRAKLOAK,e.DRAGAPULT,e.CALYREX,e.SPRIGATITO,e.ARMAROUGE,e.CERULEDGE,e.FLITTLE,e.GREAVARD,e.IRON_LEAVES,e.ALOLA_RAICHU,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_YAMASK],[t.SCALD]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.KRABBY,e.KINGLER,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.GYARADOS,e.VAPOREON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.CHINCHOU,e.LANTURN,e.MARILL,e.AZUMARILL,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.QWILFISH,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.MANTINE,e.KINGDRA,e.RAIKOU,e.SUICUNE,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.WINGULL,e.PELIPPER,e.SURSKIT,e.MASQUERAIN,e.AZURILL,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.KYOGRE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIBAREL,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.FINNEON,e.LUMINEON,e.MANTYKE,e.PHIONE,e.MANAPHY,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PANPOUR,e.SIMIPOUR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.BASCULIN,e.TIRTOUGA,e.CARRACOSTA,e.DUCKLETT,e.SWANNA,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.STUNFISK,e.KELDEO,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.GOODRA,e.VOLCANION,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.CRABRAWLER,e.CRABOMINABLE,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.WIMPOD,e.GOLISOPOD,e.BRUXISH,e.TAPU_FINI,e.INTELEON,e.DREDNAW,e.CARKOL,e.COALOSSAL,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.SIZZLIPEDE,e.CENTISKORCH,e.CURSOLA,e.PINCURCHIN,e.DRACOVISH,e.DRAKLOAK,e.DRAGAPULT,e.WALKING_WAKE,e.POLTCHAGEIST,e.SINISTCHA,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_STUNFISK,[e.URSHIFU,"rapid-strike"]],[t.HEX]:[e.NIDOQUEEN,e.NIDOKING,e.VULPIX,e.NINETALES,e.TENTACOOL,e.TENTACRUEL,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.HYPNO,e.MEWTWO,e.MEW,e.SPINARAK,e.ARIADOS,e.CROBAT,e.MURKROW,e.MISDREAVUS,e.DUNSPARCE,e.QWILFISH,e.SHIFTRY,e.SHEDINJA,e.SABLEYE,e.BALTOY,e.CLAYDOL,e.CASTFORM,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.ABSOL,e.SNORUNT,e.GLALIE,e.VESPIQUEN,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.HONCHKROW,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.SPIRITOMB,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.GIRATINA,e.ARCEUS,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.YAMASK,e.COFAGRIGUS,e.ZORUA,e.ZOROARK,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.EELEKTROSS,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.DELPHOX,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.DECIDUEYE,e.TOXAPEX,e.SANDYGAST,e.PALOSSAND,e.MIMIKYU,e.DHELMISE,e.LUNALA,e.NIHILEGO,e.MARSHADOW,e.NAGANADEL,e.TOXTRICITY,e.SINISTEA,e.POLTEAGEIST,e.CURSOLA,e.RUNERIGUS,e.PINCURCHIN,e.DRAKLOAK,e.DRAGAPULT,e.SPECTRIER,e.BASCULEGION,e.SKELEDIRGE,e.CERULEDGE,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.ESPATHRA,e.GREAVARD,e.HOUNDSTONE,e.DUDUNSPARCE,e.BRUTE_BONNET,e.FLUTTER_MANE,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.IRON_VALIANT,e.POLTCHAGEIST,e.SINISTCHA,e.MUNKIDORI,e.FEZANDIPITI,e.PECHARUNT,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.MAROWAK,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_YAMASK,[e.CALYREX,"shadow"],e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_ZORUA,e.HISUI_ZOROARK],[t.SKY_DROP]:[e.CHARIZARD,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEW,e.SKARMORY,e.LUGIA,e.HO_OH,e.PELIPPER,e.RAYQUAZA,e.RUFFLET,e.BRAVIARY,e.TORNADUS,e.THUNDURUS,e.HAWLUCHA,e.YVELTAL,e.VIKAVOLT,e.TAPU_KOKO,e.LUNALA,e.NAGANADEL],[t.INCINERATE]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.GROWLITHE,e.ARCANINE,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.GRIMER,e.MUK,e.CUBONE,e.MAROWAK,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MAGMAR,e.TAUROS,e.GYARADOS,e.FLAREON,e.AERODACTYL,e.SNORLAX,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.SLOWKING,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.SLUGMA,e.MAGCARGO,e.REMORAID,e.OCTILLERY,e.HOUNDOUR,e.HOUNDOOM,e.MAGBY,e.BLISSEY,e.ENTEI,e.HO_OH,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.POOCHYENA,e.MIGHTYENA,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.SABLEYE,e.MAWILE,e.AGGRON,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.FLYGON,e.ALTARIA,e.ZANGOOSE,e.SOLROCK,e.CASTFORM,e.KECLEON,e.ABSOL,e.BAGON,e.SHELGON,e.SALAMENCE,e.GROUDON,e.RAYQUAZA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.HONCHKROW,e.STUNKY,e.SKUNTANK,e.HAPPINY,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.LICKILICKY,e.RHYPERIOR,e.MAGMORTAR,e.TOGEKISS,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.DARKRAI,e.ARCEUS,e.VICTINI,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PANSEAR,e.SIMISEAR,e.AUDINO,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.ZORUA,e.ZOROARK,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.DRUDDIGON,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.GOODRA,e.PUMPKABOO,e.GOURGEIST,e.VOLCANION,e.SALANDIT,e.SALAZZLE,e.TURTONATOR,e.BLACEPHALON,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.DUDUNSPARCE,e.CHI_YU,e.ROARING_MOON,e.GOUGING_FIRE,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_SLOWKING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_GOODRA,e.PALDEA_TAUROS],[t.QUASH]:[e.NIDOQUEEN,e.NIDOKING,e.KINGLER,e.MEW,e.MURKROW,e.SLOWKING,e.KINGDRA,e.RAIKOU,e.ENTEI,e.SUICUNE,e.SLAKING,e.SABLEYE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.VESPIQUEN,e.HONCHKROW,e.SPIRITOMB,e.ARCEUS,e.PANCHAM,e.PANGORO,e.HOOPA,e.INCINEROAR,e.ORICORIO,e.ORANGURU,e.PALOSSAND,e.PYUKUMUKU,e.KOMALA,e.BLACEPHALON,e.HATENNA,e.MORPEKO,e.TINKATINK,e.IRON_LEAVES,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK],[t.ACROBATICS]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.BUTTERFREE,e.BEEDRILL,e.ZUBAT,e.GOLBAT,e.VENOMOTH,e.MANKEY,e.PRIMEAPE,e.FARFETCHD,e.SCYTHER,e.ZAPDOS,e.MOLTRES,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.CROBAT,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.MURKROW,e.GLIGAR,e.SCIZOR,e.DELIBIRD,e.MANTINE,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.BLAZIKEN,e.BEAUTIFLY,e.DUSTOX,e.WINGULL,e.PELIPPER,e.SURSKIT,e.MASQUERAIN,e.NINJASK,e.VOLBEAT,e.ILLUMISE,e.SWABLU,e.ALTARIA,e.LUNATONE,e.SOLROCK,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.STARLY,e.STARAVIA,e.STARAPTOR,e.MOTHIM,e.VESPIQUEN,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.LOPUNNY,e.HONCHKROW,e.FINNEON,e.LUMINEON,e.MANTYKE,e.GLISCOR,e.UXIE,e.MESPRIT,e.AZELF,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.WOOBAT,e.SWOOBAT,e.ARCHEN,e.ARCHEOPS,e.SWANNA,e.EMOLGA,e.ALOMOMOLA,e.EELEKTRIK,e.EELEKTROSS,e.CRYOGONAL,e.MIENFOO,e.MIENSHAO,e.RUFFLET,e.BRAVIARY,e.MANDIBUZZ,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.TORNADUS,e.THUNDURUS,e.MELOETTA,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.HAWLUCHA,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.SALAZZLE,e.TSAREENA,e.COMFEY,e.PASSIMIAN,e.MINIOR,e.KOMALA,e.TAPU_KOKO,e.LUNALA,e.CELESTEELA,e.MARSHADOW,e.NAGANADEL,e.ZERAORA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.INTELEON,e.THIEVUL,e.FLAPPLE,e.CRAMORANT,e.FROSMOTH,e.DRAKLOAK,e.DRAGAPULT,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.KLEAVOR,e.SNEASLER,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.WATTREL,e.KILOWATTREL,e.SHROODLE,e.GRAFAIAI,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.CYCLIZAR,e.FLAMIGO,e.ANNIHILAPE,e.SLITHER_WING,e.IRON_BUNDLE,e.IRON_JUGULIS,e.IRON_MOTH,e.CHIEN_PAO,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.FEZANDIPITI,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.HISUI_LILLIGANT,e.HISUI_BRAVIARY],[t.RETALIATE]:[e.RATTATA,e.RATICATE,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.MACHOP,e.MACHOKE,e.MACHAMP,e.FARFETCHD,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.CHANSEY,e.KANGASKHAN,e.TAUROS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.SNORLAX,e.MEW,e.SENTRET,e.FURRET,e.TOGETIC,e.AIPOM,e.ESPEON,e.UMBREON,e.MURKROW,e.GIRAFARIG,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.HOUNDOUR,e.HOUNDOOM,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.MILTANK,e.BLISSEY,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.CARVANHA,e.SHARPEDO,e.SPINDA,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.CRAWDAUNT,e.CASTFORM,e.KECLEON,e.ABSOL,e.LATIAS,e.LATIOS,e.MONFERNO,e.INFERNAPE,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.SPIRITOMB,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.LICKILICKY,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.GALLADE,e.REGIGIGAS,e.DARKRAI,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.LEAVANNY,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.DEERLING,e.SAWSBUCK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.DURANT,e.COBALION,e.TERRAKION,e.VIRIZION,e.KELDEO,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROAKIE,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.INKAY,e.MALAMAR,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.ZYGARDE,e.PASSIMIAN,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DUBWOOL,e.CLOBBOPUS,e.GRAPPLOCT,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.SIRFETCHD,e.FALINKS,e.ZACIAN,e.ZAMAZENTA,e.KUBFU,e.URSHIFU,e.MASCHIFF,e.KINGAMBIT,e.IRON_LEAVES,e.OGERPON,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_FARFETCHD,e.GALAR_ZAPDOS,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_SAMUROTT],[t.WATER_PLEDGE]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PANPOUR,e.SIMIPOUR,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.SILVALLY,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.HISUI_SAMUROTT],[t.FIRE_PLEDGE]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PANSEAR,e.SIMISEAR,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.SILVALLY,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.HISUI_TYPHLOSION],[t.GRASS_PLEDGE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TURTWIG,e.GROTLE,e.TORTERRA,e.SNIVY,e.SERVINE,e.SERPERIOR,e.PANSAGE,e.SIMISAGE,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.SILVALLY,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.HISUI_DECIDUEYE],[t.VOLT_SWITCH]:[e.PIKACHU,e.RAICHU,e.MAGNEMITE,e.MAGNETON,e.VOLTORB,e.ELECTRODE,e.ELECTABUZZ,e.JOLTEON,e.ZAPDOS,e.MEW,e.CHINCHOU,e.LANTURN,e.PICHU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.FORRETRESS,e.ELEKID,e.RAIKOU,e.NOSEPASS,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.SHINX,e.LUXIO,e.LUXRAY,e.PACHIRISU,e.MAGNEZONE,e.ELECTIVIRE,e.PROBOPASS,e.ROTOM,e.BLITZLE,e.ZEBSTRIKA,e.EMOLGA,e.JOLTIK,e.GALVANTULA,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.COBALION,e.THUNDURUS,e.ZEKROM,e.HELIOPTILE,e.HELIOLISK,e.DEDENNE,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.TOGEDEMARU,e.TAPU_KOKO,e.XURKITREE,e.MAGEARNA,e.ZERAORA,e.YAMPER,e.BOLTUND,e.TOXTRICITY,e.MORPEKO,e.REGIELEKI,e.PAWMI,e.PAWMO,e.PAWMOT,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_HANDS,e.IRON_THORNS,e.MIRAIDON,e.RAGING_BOLT,e.IRON_CROWN,e.ALOLA_RAICHU,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.HISUI_VOLTORB,e.HISUI_ELECTRODE],[t.STRUGGLE_BUG]:[e.BUTTERFREE,e.BEEDRILL,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.SCYTHER,e.PINSIR,e.MEW,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.YANMA,e.PINECO,e.FORRETRESS,e.GLIGAR,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.BEAUTIFLY,e.DUSTOX,e.SURSKIT,e.MASQUERAIN,e.NINCADA,e.NINJASK,e.SHEDINJA,e.VOLBEAT,e.ILLUMISE,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.ANORITH,e.ARMALDO,e.STARAPTOR,e.KRICKETOT,e.KRICKETUNE,e.WORMADAM,e.MOTHIM,e.COMBEE,e.VESPIQUEN,e.SKORUPI,e.DRAPION,e.YANMEGA,e.GLISCOR,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.DWEBBLE,e.CRUSTLE,e.KARRABLAST,e.ESCAVALIER,e.JOLTIK,e.GALVANTULA,e.SHELMET,e.ACCELGOR,e.DURANT,e.LARVESTA,e.VOLCARONA,e.GENESECT,e.SCATTERBUG,e.SPEWPA,e.VIVILLON,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CUTIEFLY,e.RIBOMBEE,e.WIMPOD,e.GOLISOPOD,e.BLIPBUG,e.DOTTLER,e.ORBEETLE,e.SIZZLIPEDE,e.SNOM,e.FROSMOTH,e.KLEAVOR,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.RELLOR,e.RABSCA,e.IRON_MOTH],[t.BULLDOZE]:[e.VENUSAUR,e.CHARIZARD,e.BLASTOISE,e.EKANS,e.ARBOK,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.MANKEY,e.PRIMEAPE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWPOKE,e.SLOWBRO,e.ONIX,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.AERODACTYL,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.MEGANIUM,e.TYPHLOSION,e.FERALIGATR,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.SHUCKLE,e.HERACROSS,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.MANTINE,e.PHANPY,e.DONPHAN,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.SCEPTILE,e.BLAZIKEN,e.MARSHTOMP,e.SWAMPERT,e.BRELOOM,e.VIGOROTH,e.SLAKING,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.ARON,e.LAIRON,e.AGGRON,e.SWALOT,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.GRUMPIG,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.ALTARIA,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.BALTOY,e.CLAYDOL,e.CRADILY,e.ARMALDO,e.MILOTIC,e.DUSCLOPS,e.TROPIUS,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.RELICANTH,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.TURTWIG,e.GROTLE,e.TORTERRA,e.INFERNAPE,e.EMPOLEON,e.BIBAREL,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.SHELLOS,e.GASTRODON,e.PURUGLY,e.BRONZOR,e.BRONZONG,e.BONSLY,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.MANTYKE,e.ABOMASNOW,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.GLISCOR,e.MAMOSWINE,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.ARCEUS,e.PIGNITE,e.EMBOAR,e.SAMUROTT,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DRILBUR,e.EXCADRILL,e.CONKELDURR,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SCOLIPEDE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARMANITAN,e.DWEBBLE,e.CRUSTLE,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.DEERLING,e.SAWSBUCK,e.FERROTHORN,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.STUNFISK,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.BOUFFALANT,e.HYDREIGON,e.TERRAKION,e.LANDORUS,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.BUNNELBY,e.DIGGERSBY,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.BINACLE,e.BARBARACLE,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.GOODRA,e.PHANTUMP,e.TREVENANT,e.BERGMITE,e.AVALUGG,e.ZYGARDE,e.DIANCIE,e.VOLCANION,e.INCINEROAR,e.YUNGOOS,e.GUMSHOOS,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MUDBRAY,e.MUDSDALE,e.STUFFUL,e.BEWEAR,e.ORANGURU,e.PASSIMIAN,e.SANDYGAST,e.PALOSSAND,e.MINIOR,e.KOMALA,e.TURTONATOR,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.SOLGALEO,e.BUZZWOLE,e.CELESTEELA,e.GUZZLORD,e.NECROZMA,e.STAKATAKA,e.RILLABOOM,e.GREEDENT,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CURSOLA,e.RUNERIGUS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.GLASTRIER,e.SPECTRIER,e.WYRDEER,e.URSALUNA,e.LECHONK,e.OINKOLOGNE,e.NACLI,e.NACLSTACK,e.GARGANACL,e.KLAWF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.VAROOM,e.REVAVROOM,e.ORTHWORM,e.GREAVARD,e.HOUNDSTONE,e.CETODDLE,e.CETITAN,e.DONDOZO,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.GREAT_TUSK,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_HANDS,e.IRON_THORNS,e.BAXCALIBUR,e.TING_LU,e.KORAIDON,e.GOUGING_FIRE,e.IRON_BOULDER,e.IRON_CROWN,[e.WORMADAM,"sandy"],e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_DARMANITAN,e.GALAR_STUNFISK,[e.CALYREX,"ice","shadow"],e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_SAMUROTT,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.FROST_BREATH]:[e.DEWGONG,e.CLOYSTER,e.JYNX,e.LAPRAS,e.ARTICUNO,e.MEW,e.DELIBIRD,e.SMOOCHUM,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.REGICE,e.SNOVER,e.ABOMASNOW,e.GLACEON,e.FROSLASS,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.AMAURA,e.AURORUS,e.BERGMITE,e.AVALUGG,e.CRABRAWLER,e.CRABOMINABLE,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.GOLISOPOD,e.BRUXISH,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES],[t.DRAGON_TAIL]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.BLASTOISE,e.ARBOK,e.NIDOQUEEN,e.NIDOKING,e.ONIX,e.LICKITUNG,e.RHYDON,e.GYARADOS,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.MEGANIUM,e.FERALIGATR,e.AMPHAROS,e.SLOWKING,e.STEELIX,e.TYRANITAR,e.LUGIA,e.AGGRON,e.VIBRAVA,e.FLYGON,e.SEVIPER,e.MILOTIC,e.TROPIUS,e.BAGON,e.SHELGON,e.SALAMENCE,e.GROUDON,e.RAYQUAZA,e.RAMPARDOS,e.GIBLE,e.GABITE,e.GARCHOMP,e.LICKILICKY,e.RHYPERIOR,e.DIALGA,e.PALKIA,e.GIRATINA,e.ARCEUS,e.SERPERIOR,e.SAMUROTT,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.ARCHEOPS,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.DRUDDIGON,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.SKRELP,e.DRAGALGE,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.GOODRA,e.NOIVERN,e.ZYGARDE,e.SALAZZLE,e.TURTONATOR,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.GUZZLORD,e.NAGANADEL,e.CHEWTLE,e.APPLETUN,e.DRACOZOLT,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ETERNATUS,e.CYCLIZAR,e.DUDUNSPARCE,e.IRON_JUGULIS,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.DIPPLIN,e.ARCHALUDON,e.HYDRAPPLE,e.RAGING_BOLT,e.ALOLA_EXEGGUTOR,e.HISUI_GOODRA],[t.WORK_UP]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.SANDSHREW,e.SANDSLASH,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.FARFETCHD,e.DODUO,e.DODRIO,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.CHANSEY,e.KANGASKHAN,e.TAUROS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.SNORLAX,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.MARILL,e.AZUMARILL,e.AIPOM,e.ESPEON,e.UMBREON,e.GIRAFARIG,e.SNUBBULL,e.GRANBULL,e.HERACROSS,e.TEDDIURSA,e.URSARING,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.MILTANK,e.BLISSEY,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.ZIGZAGOON,e.LINOONE,e.TAILLOW,e.SWELLOW,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.SKITTY,e.DELCATTY,e.MEDITITE,e.MEDICHAM,e.SPINDA,e.ZANGOOSE,e.CASTFORM,e.KECLEON,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.GLAMEOW,e.PURUGLY,e.HAPPINY,e.CHATOT,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.LICKILICKY,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.GALLADE,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.MINCCINO,e.CINCCINO,e.DEERLING,e.SAWSBUCK,e.MIENFOO,e.MIENSHAO,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.COBALION,e.TERRAKION,e.VIRIZION,e.KELDEO,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.SYLVEON,e.HAWLUCHA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.STUFFUL,e.BEWEAR,e.ORANGURU,e.PASSIMIAN,e.TYPE_NULL,e.SILVALLY,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_BULU,e.SOLGALEO,e.LUNALA,e.BUZZWOLE,e.MARSHADOW,e.ZERAORA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.CLOBBOPUS,e.GRAPPLOCT,e.OBSTAGOON,e.PERRSERKER,e.SIRFETCHD,e.CUFANT,e.COPPERAJAH,e.ZACIAN,e.ZAMAZENTA,e.KUBFU,e.URSHIFU,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.FIDOUGH,e.DACHSBUN,e.IRON_JUGULIS,e.IRON_LEAVES,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,[e.LYCANROC,"dusk"],e.GALAR_MEOWTH,e.GALAR_FARFETCHD,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.PALDEA_TAUROS],[t.ELECTROWEB]:[e.CATERPIE,e.METAPOD,e.BUTTERFREE,e.WEEDLE,e.KAKUNA,e.BEEDRILL,e.PIKACHU,e.RAICHU,e.MAGNEMITE,e.MAGNETON,e.ELECTABUZZ,e.PORYGON,e.MEW,e.SPINARAK,e.ARIADOS,e.PICHU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.PORYGON2,e.ELEKID,e.WURMPLE,e.SILCOON,e.BEAUTIFLY,e.CASCOON,e.DUSTOX,e.PLUSLE,e.MINUN,e.BURMY,e.WORMADAM,e.MOTHIM,e.PACHIRISU,e.MAGNEZONE,e.ELECTIVIRE,e.PORYGON_Z,e.ROTOM,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.EMOLGA,e.JOLTIK,e.GALVANTULA,e.STUNFISK,e.THUNDURUS,e.GENESECT,e.SPEWPA,e.VIVILLON,e.HELIOPTILE,e.HELIOLISK,e.DEDENNE,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.PASSIMIAN,e.TOGEDEMARU,e.TAPU_KOKO,e.PHEROMOSA,e.XURKITREE,e.MAGEARNA,e.ZERAORA,e.MORPEKO,e.REGIELEKI,e.SPIDOPS,e.PAWMI,e.PAWMO,e.PAWMOT,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.SANDY_SHOCKS,e.IRON_THORNS,e.RAGING_BOLT,e.ALOLA_RAICHU,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM],[t.WILD_CHARGE]:[e.RATTATA,e.RATICATE,e.PIKACHU,e.RAICHU,e.JIGGLYPUFF,e.WIGGLYTUFF,e.GROWLITHE,e.ARCANINE,e.PONYTA,e.RAPIDASH,e.MAGNEMITE,e.MAGNETON,e.VOLTORB,e.ELECTRODE,e.CHANSEY,e.ELECTABUZZ,e.TAUROS,e.JOLTEON,e.SNORLAX,e.ZAPDOS,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.CHINCHOU,e.LANTURN,e.PICHU,e.IGGLYBUFF,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.STANTLER,e.ELEKID,e.BLISSEY,e.RAIKOU,e.SLAKING,e.SKITTY,e.DELCATTY,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.SPINDA,e.RAYQUAZA,e.SHINX,e.LUXIO,e.LUXRAY,e.PACHIRISU,e.MAGNEZONE,e.ELECTIVIRE,e.ARCEUS,e.VICTINI,e.TEPIG,e.PIGNITE,e.EMBOAR,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.BLITZLE,e.ZEBSTRIKA,e.AUDINO,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.JOLTIK,e.GALVANTULA,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.BOUFFALANT,e.LARVESTA,e.VOLCARONA,e.THUNDURUS,e.ZEKROM,e.BUNNELBY,e.DIGGERSBY,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.FURFROU,e.HELIOPTILE,e.HELIOLISK,e.DEDENNE,e.NOIBAT,e.NOIVERN,e.VOLCANION,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.TOGEDEMARU,e.TAPU_KOKO,e.SOLGALEO,e.XURKITREE,e.ZERAORA,e.GREEDENT,e.WOOLOO,e.DUBWOOL,e.YAMPER,e.BOLTUND,e.TOXTRICITY,e.PINCURCHIN,e.MORPEKO,e.DRACOZOLT,e.ARCTOZOLT,e.ZACIAN,e.ZAMAZENTA,e.REGIELEKI,e.WYRDEER,e.PAWMI,e.PAWMO,e.PAWMOT,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MABOSSTIFF,e.CYCLIZAR,e.DUDUNSPARCE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_HANDS,e.IRON_THORNS,e.KORAIDON,e.MIRAIDON,e.IRON_LEAVES,e.RAGING_BOLT,e.IRON_BOULDER,e.TERAPAGOS,e.ALOLA_RAICHU,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.PALDEA_TAUROS],[t.DRILL_RUN]:[e.BEEDRILL,e.SPEAROW,e.FEAROW,e.SANDSLASH,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.RAPIDASH,e.DODRIO,e.SEEL,e.DEWGONG,e.CLOYSTER,e.ONIX,e.RHYHORN,e.RHYDON,e.GOLDEEN,e.SEAKING,e.LAPRAS,e.MEW,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.STEELIX,e.SKARMORY,e.DELIBIRD,e.HITMONTOP,e.BALTOY,e.CLAYDOL,e.RHYPERIOR,e.SAMUROTT,e.DRILBUR,e.EXCADRILL,e.KARRABLAST,e.ESCAVALIER,[e.LYCANROC,"midday","dusk"],e.GOLISOPOD,e.PHEROMOSA,e.SILICOBRA,e.SANDACONDA,e.ARROKUDA,e.BARRASKEWDA,e.BOMBIRDIER,e.VELUZA,e.DUDUNSPARCE,e.ALOLA_SANDSLASH,e.GALAR_RAPIDASH,e.HISUI_SAMUROTT,e.PALDEA_TAUROS],[t.SACRED_SWORD]:[e.GALLADE,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.COBALION,e.TERRAKION,e.VIRIZION,e.KELDEO,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.KARTANA,e.ZACIAN,e.CHIEN_PAO,e.IRON_LEAVES,e.IRON_BOULDER,e.IRON_CROWN,e.HISUI_SAMUROTT],[t.RAZOR_SHELL]:[e.SLOWBRO,e.SHELLDER,e.CLOYSTER,e.KRABBY,e.KINGLER,e.KABUTOPS,e.MEW,e.SLOWKING,e.CORPHISH,e.CRAWDAUNT,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.CARRACOSTA,e.ESCAVALIER,e.BINACLE,e.BARBARACLE,e.GOLISOPOD,e.DREDNAW,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.HISUI_SAMUROTT],[t.HEAT_CRASH]:[e.CHARIZARD,e.ARCANINE,e.RHYDON,e.SNORLAX,e.MEW,e.SLUGMA,e.MAGCARGO,e.BLAZIKEN,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.GROUDON,e.RHYPERIOR,e.MAGMORTAR,e.HEATRAN,e.REGIGIGAS,e.TEPIG,e.PIGNITE,e.EMBOAR,e.GOLURK,e.RESHIRAM,e.VOLCANION,e.INCINEROAR,e.TURTONATOR,e.SOLGALEO,e.GUZZLORD,e.STAKATAKA,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.SIZZLIPEDE,e.CENTISKORCH,e.STONJOURNER,e.COPPERAJAH,e.SKELEDIRGE,e.SLITHER_WING,e.KORAIDON,e.GOUGING_FIRE,e.TERAPAGOS,e.HISUI_ARCANINE],[t.TAIL_SLAP]:[e.VULPIX,e.NINETALES,e.MEW,e.AIPOM,e.ZIGZAGOON,e.LINOONE,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.STUNKY,e.SKUNTANK,e.MINCCINO,e.CINCCINO,e.MEOWSTIC,[e.LYCANROC,"midday","dusk"],e.SKWOVET,e.GREEDENT,e.NICKIT,e.THIEVUL,e.ZACIAN,e.ZAMAZENTA,e.FEZANDIPITI,e.ALOLA_VULPIX,e.ALOLA_NINETALES],[t.HURRICANE]:[e.CHARIZARD,e.BUTTERFREE,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.GYARADOS,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.MURKROW,e.MANTINE,e.KINGDRA,e.LUGIA,e.SHIFTRY,e.TAILLOW,e.WINGULL,e.PELIPPER,e.MASQUERAIN,e.SWABLU,e.ALTARIA,e.CASTFORM,e.TROPIUS,e.SALAMENCE,e.RAYQUAZA,e.STARLY,e.STARAVIA,e.STARAPTOR,e.VESPIQUEN,e.HONCHKROW,e.ARCEUS,e.UNFEZANT,e.WHIMSICOTT,e.DUCKLETT,e.SWANNA,e.RUFFLET,e.BRAVIARY,e.MANDIBUZZ,e.VOLCARONA,e.TORNADUS,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.DECIDUEYE,e.ORICORIO,e.DRAMPA,e.CORVISQUIRE,e.CORVIKNIGHT,e.SANDACONDA,e.CRAMORANT,e.FROSMOTH,e.QUAQUAVAL,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.BOMBIRDIER,e.FLAMIGO,e.DUDUNSPARCE,e.SLITHER_WING,e.IRON_JUGULIS,e.IRON_MOTH,e.ROARING_MOON,e.WALKING_WAKE,e.FEZANDIPITI,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.HISUI_LILLIGANT,e.HISUI_BRAVIARY],[t.SNARL]:[e.EKANS,e.ARBOK,e.VULPIX,e.NINETALES,e.MEOWTH,e.PERSIAN,e.GROWLITHE,e.ARCANINE,e.MEW,e.UMBREON,e.MURKROW,e.SNUBBULL,e.GRANBULL,e.SNEASEL,e.HOUNDOUR,e.HOUNDOOM,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.NUZLEAF,e.SHIFTRY,e.SABLEYE,e.ELECTRIKE,e.MANECTRIC,e.CARVANHA,e.SHARPEDO,e.SPOINK,e.GRUMPIG,e.SEVIPER,e.CRAWDAUNT,e.CHIMECHO,e.ABSOL,e.SHINX,e.LUXIO,e.LUXRAY,e.FLOATZEL,e.HONCHKROW,e.STUNKY,e.SKUNTANK,e.SPIRITOMB,e.DRAPION,e.WEAVILE,e.DARKRAI,e.ARCEUS,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.ZORUA,e.ZOROARK,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.VULLABY,e.MANDIBUZZ,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.THUNDURUS,e.LITLEO,e.PYROAR,e.PANGORO,e.FURFROU,e.YVELTAL,e.INCINEROAR,e.ROCKRUFF,e.LYCANROC,e.GOLISOPOD,e.SILVALLY,e.DRAMPA,e.TAPU_BULU,e.SOLGALEO,e.GUZZLORD,e.NAGANADEL,e.ZERAORA,e.RILLABOOM,e.CINDERACE,e.NICKIT,e.THIEVUL,e.YAMPER,e.BOLTUND,e.TOXTRICITY,e.OBSTAGOON,e.MORPEKO,e.COPPERAJAH,e.DURALUDON,e.ZACIAN,e.ZAMAZENTA,e.ZARUDE,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.FIDOUGH,e.DACHSBUN,e.MASCHIFF,e.MABOSSTIFF,e.BOMBIRDIER,e.GREAVARD,e.HOUNDSTONE,e.KINGAMBIT,e.IRON_JUGULIS,e.IRON_THORNS,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.OKIDOGI,e.ARCHALUDON,e.GOUGING_FIRE,e.RAGING_BOLT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_ARCANINE,e.HISUI_SAMUROTT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.BLOODMOON_URSALUNA,[e.URSHIFU,"single-strike"]],[t.PHANTOM_FORCE]:[e.HAUNTER,e.GENGAR,e.MEW,e.MISDREAVUS,e.SHEDINJA,e.SABLEYE,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.SPIRITOMB,e.DUSKNOIR,e.GIRATINA,e.ARCEUS,e.COFAGRIGUS,e.GOLETT,e.GOLURK,e.PHANTUMP,e.TREVENANT,e.GOURGEIST,e.YVELTAL,e.HOOPA,e.DECIDUEYE,e.MIMIKYU,e.DHELMISE,e.LUNALA,e.MARSHADOW,e.SINISTEA,e.POLTEAGEIST,e.RUNERIGUS,e.DRAKLOAK,e.DRAGAPULT,e.SPECTRIER,e.BASCULEGION,e.CERULEDGE,e.BRAMBLIN,e.BRAMBLEGHAST,e.GREAVARD,e.HOUNDSTONE,e.ANNIHILAPE,e.FLUTTER_MANE,e.POLTCHAGEIST,e.SINISTCHA,e.PECHARUNT,[e.CALYREX,"shadow"],e.HISUI_ZORUA,e.HISUI_ZOROARK],[t.PETAL_BLIZZARD]:[e.VENUSAUR,e.GLOOM,e.VILEPLUME,e.MEW,e.MEGANIUM,e.BELLOSSOM,e.SUNFLORA,e.SHIFTRY,e.ROSELIA,e.TROPIUS,e.ROSERADE,e.CHERUBI,e.CHERRIM,e.SHAYMIN,e.SNIVY,e.SERVINE,e.SERPERIOR,e.LILLIGANT,e.MARACTUS,e.SAWSBUCK,e.FLABEBE,e.FLOETTE,e.FLORGES,e.FOMANTIS,e.LURANTIS,e.STEENEE,e.TSAREENA,e.COMFEY,e.ZARUDE,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.ARBOLIVA,e.ETERNAL_FLOETTE,e.HISUI_LILLIGANT],[t.DISARMING_VOICE]:[e.PIKACHU,e.RAICHU,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.CHANSEY,e.MEW,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.MARILL,e.AZUMARILL,e.BLISSEY,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.WHISMUR,e.SKITTY,e.DELCATTY,e.ILLUMISE,e.SWABLU,e.ALTARIA,e.MILOTIC,e.CHIMECHO,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.HAPPINY,e.GALLADE,e.PANSAGE,e.PANSEAR,e.PANPOUR,e.AUDINO,e.DUCKLETT,e.SWANNA,e.MELOETTA,e.FLABEBE,e.FLOETTE,e.FLORGES,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SYLVEON,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.TOGEDEMARU,e.TAPU_FINI,e.MAGEARNA,e.HATENNA,e.HATTREM,e.HATTERENE,e.INDEEDEE,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.FLITTLE,e.ESPATHRA,e.FINIZEN,e.PALAFIN,e.FLUTTER_MANE,e.FEZANDIPITI,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ETERNAL_FLOETTE],[t.DRAINING_KISS]:[e.BUTTERFREE,e.PIKACHU,e.RAICHU,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.DROWZEE,e.HYPNO,e.JYNX,e.MEW,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.MARILL,e.AZUMARILL,e.ESPEON,e.MISDREAVUS,e.SMOOCHUM,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.AZURILL,e.MAWILE,e.ILLUMISE,e.MILOTIC,e.CHIMECHO,e.GOREBYSS,e.LUVDISC,e.LATIAS,e.CHERUBI,e.CHERRIM,e.MISMAGIUS,e.TOGEKISS,e.GALLADE,e.FROSLASS,e.UXIE,e.MESPRIT,e.AZELF,e.AUDINO,e.VIVILLON,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.SYLVEON,e.DEDENNE,e.KLEFKI,e.XERNEAS,e.DIANCIE,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.CUTIEFLY,e.RIBOMBEE,e.MORELULL,e.SHIINOTIC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.MIMIKYU,e.TAPU_LELE,e.TAPU_FINI,e.MAGEARNA,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.MILCERY,e.ALCREMIE,e.INDEEDEE,e.SPECTRIER,e.CALYREX,e.ENAMORUS,e.DACHSBUN,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.FINIZEN,e.PALAFIN,e.FLUTTER_MANE,e.ALOLA_RAICHU,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ETERNAL_FLOETTE],[t.GRASSY_TERRAIN]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.EXEGGCUTE,e.EXEGGUTOR,e.TANGELA,e.MEW,e.CHIKORITA,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNKERN,e.SUNFLORA,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.SHROOMISH,e.BRELOOM,e.CACNEA,e.CACTURNE,e.CRADILY,e.TROPIUS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.ROSERADE,e.CHERUBI,e.CHERRIM,e.TANGROWTH,e.ARCEUS,e.SNIVY,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.LILLIGANT,e.MARACTUS,e.DEERLING,e.SAWSBUCK,e.FOONGUS,e.AMOONGUSS,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PHANTUMP,e.TREVENANT,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.FOMANTIS,e.LURANTIS,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.TAPU_BULU,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.GOSSIFLEUR,e.ELDEGOSS,e.FLAPPLE,e.APPLETUN,e.ZARUDE,e.CALYREX,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.CAPSAKID,e.SCOVILLAIN,e.BRUTE_BONNET,e.WO_CHIEN,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OGERPON,e.HYDRAPPLE,e.ALOLA_EXEGGUTOR,e.ETERNAL_FLOETTE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE],[t.MISTY_TERRAIN]:[e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MR_MIME,e.MEW,e.CLEFFA,e.IGGLYBUFF,e.MARILL,e.AZUMARILL,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.MAWILE,e.MIME_JR,e.GALLADE,e.ARCEUS,e.AUDINO,e.COTTONEE,e.WHIMSICOTT,e.ALOMOMOLA,e.FLABEBE,e.FLOETTE,e.FLORGES,[e.MEOWSTIC,"male"],e.SPRITZEE,e.AROMATISSE,e.SYLVEON,e.DEDENNE,e.CARBINK,e.KLEFKI,e.XERNEAS,e.VOLCANION,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.MIMIKYU,e.TAPU_FINI,e.MAGEARNA,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.MR_RIME,e.MILCERY,e.ALCREMIE,e.ZACIAN,e.ENAMORUS,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.FIDOUGH,e.DACHSBUN,e.SCREAM_TAIL,e.FLUTTER_MANE,e.IRON_VALIANT,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ETERNAL_FLOETTE,e.GALAR_RAPIDASH,e.GALAR_WEEZING,e.GALAR_MR_MIME],[t.PLAY_ROUGH]:[e.PIKACHU,e.RAICHU,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.GROWLITHE,e.ARCANINE,e.PONYTA,e.RAPIDASH,e.DEWGONG,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.SENTRET,e.FURRET,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SNUBBULL,e.GRANBULL,e.TEDDIURSA,e.URSARING,e.PHANPY,e.DONPHAN,e.MILTANK,e.POOCHYENA,e.MIGHTYENA,e.LINOONE,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.SKITTY,e.DELCATTY,e.MAWILE,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.SWABLU,e.ALTARIA,e.ABSOL,e.JIRACHI,e.SHINX,e.LUXIO,e.LUXRAY,e.PACHIRISU,e.CHERRIM,e.BUNEARY,e.LOPUNNY,e.GLAMEOW,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.TOGEKISS,e.UXIE,e.MESPRIT,e.AZELF,e.SHAYMIN,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.WHIMSICOTT,e.MINCCINO,e.CINCCINO,e.DEERLING,e.SAWSBUCK,e.ALOMOMOLA,e.CUBCHOO,e.BEARTIC,e.MELOETTA,e.SKIDDO,e.GOGOAT,e.ESPURR,e.MEOWSTIC,e.SWIRLIX,e.SLURPUFF,e.SKRELP,e.DRAGALGE,e.TYRUNT,e.TYRANTRUM,e.SYLVEON,e.DEDENNE,e.KLEFKI,e.XERNEAS,e.DIANCIE,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.KOMALA,e.MIMIKYU,e.DRAMPA,e.TAPU_LELE,e.TAPU_FINI,e.MAGEARNA,e.ZERAORA,e.NICKIT,e.THIEVUL,e.YAMPER,e.BOLTUND,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.PERRSERKER,e.ALCREMIE,e.FROSMOTH,e.INDEEDEE,e.CUFANT,e.COPPERAJAH,e.ZACIAN,e.ZAMAZENTA,e.URSALUNA,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.LECHONK,e.OINKOLOGNE,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.MASCHIFF,e.MABOSSTIFF,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.GREAVARD,e.HOUNDSTONE,e.CETODDLE,e.CETITAN,e.GREAT_TUSK,e.SCREAM_TAIL,e.IRON_BUNDLE,e.IRON_HANDS,e.FEZANDIPITI,e.OGERPON,e.ALOLA_RAICHU,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_WEEZING,e.HISUI_TYPHLOSION],[t.CONFIDE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.BLACEPHALON,e.ZERAORA,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE],[t.MYSTICAL_FIRE]:[e.CHARIZARD,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.PONYTA,e.RAPIDASH,e.MR_MIME,e.FLAREON,e.MOLTRES,e.MEW,e.TOGEPI,e.TOGETIC,e.HO_OH,e.RALTS,e.GARDEVOIR,e.LATIAS,e.LATIOS,e.MISMAGIUS,e.MAGMORTAR,e.TOGEKISS,e.VICTINI,e.DARMANITAN,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.VOLCARONA,e.RESHIRAM,e.DELPHOX,e.SYLVEON,e.PUMPKABOO,e.GOURGEIST,e.DIANCIE,e.SOLGALEO,e.BLACEPHALON,e.CENTISKORCH,e.HATENNA,e.HATTREM,e.HATTERENE,e.ALCREMIE,e.INDEEDEE,e.ETERNATUS,e.ENAMORUS,e.ARMAROUGE,e.FLUTTER_MANE,e.GALAR_PONYTA,e.GALAR_RAPIDASH],[t.EERIE_IMPULSE]:[e.PIKACHU,e.RAICHU,e.MAGNEMITE,e.MAGNETON,e.VOLTORB,e.ELECTRODE,e.JOLTEON,e.PORYGON,e.ZAPDOS,e.MEW,e.LANTURN,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.WOOPER,e.QUAGSIRE,e.PORYGON2,e.RAIKOU,e.ELECTRIKE,e.MANECTRIC,e.BALTOY,e.CLAYDOL,e.SHINX,e.LUXIO,e.LUXRAY,e.PACHIRISU,e.MAGNEZONE,e.PORYGON_Z,e.ROTOM,e.EMOLGA,e.EELEKTRIK,e.EELEKTROSS,e.STUNFISK,e.THUNDURUS,e.HELIOLISK,e.DEDENNE,e.CHARJABUG,e.VIKAVOLT,e.TOGEDEMARU,e.TAPU_KOKO,e.XURKITREE,e.MAGEARNA,e.BOLTUND,e.TOXTRICITY,e.MORPEKO,e.REGIELEKI,e.PAWMI,e.PAWMO,e.PAWMOT,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.SANDY_SHOCKS,e.IRON_THORNS,e.MIRAIDON,e.RAGING_BOLT,e.ALOLA_RAICHU],[t.VENOM_DRENCH]:[e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.ZUBAT,e.GOLBAT,e.TENTACRUEL,e.KOFFING,e.WEEZING,e.MEW,e.CROBAT,e.QWILFISH,e.ROSERADE,e.STUNKY,e.SKUNTANK,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.WOOBAT,e.SWOOBAT,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.TRUBBISH,e.GARBODOR,e.ACCELGOR,e.SKRELP,e.DRAGALGE,e.PHANTUMP,e.TREVENANT,e.MAREANIE,e.TOXAPEX,e.SALANDIT,e.SALAZZLE,e.PYUKUMUKU,e.NIHILEGO,e.POIPOLE,e.NAGANADEL,e.PINCURCHIN,e.ETERNATUS,e.GALAR_WEEZING,e.GALAR_SLOWKING,[e.TOXTRICITY,"low-key"]],[t.ELECTRIC_TERRAIN]:[e.PIKACHU,e.RAICHU,e.MAGNEMITE,e.MAGNETON,e.VOLTORB,e.ELECTRODE,e.CHANSEY,e.JOLTEON,e.ZAPDOS,e.MEW,e.PICHU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BLISSEY,e.RAIKOU,e.MANECTRIC,e.SHINX,e.LUXIO,e.LUXRAY,e.PACHIRISU,e.MAGNEZONE,e.ELECTIVIRE,e.ROTOM,e.ARCEUS,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.STUNFISK,e.THUNDURUS,e.HELIOPTILE,e.HELIOLISK,e.DEDENNE,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.TOGEDEMARU,e.TAPU_KOKO,e.XURKITREE,e.ZERAORA,e.MELMETAL,e.BOLTUND,e.TOXTRICITY,e.PINCURCHIN,e.MORPEKO,e.REGIELEKI,e.PAWMI,e.PAWMO,e.PAWMOT,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.IRON_VALIANT,e.MIRAIDON,e.IRON_LEAVES,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.ALOLA_RAICHU,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.HISUI_VOLTORB,e.HISUI_ELECTRODE],[t.DAZZLING_GLEAM]:[e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ODDISH,e.GLOOM,e.VILEPLUME,e.ABRA,e.KADABRA,e.ALAKAZAM,e.TENTACOOL,e.TENTACRUEL,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.CHANSEY,e.STARYU,e.STARMIE,e.MR_MIME,e.MEW,e.CHINCHOU,e.LANTURN,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNFLORA,e.ESPEON,e.MISDREAVUS,e.GIRAFARIG,e.SNUBBULL,e.GRANBULL,e.BLISSEY,e.CELEBI,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.NOSEPASS,e.SABLEYE,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.SPOINK,e.GRUMPIG,e.SWABLU,e.ALTARIA,e.BALTOY,e.CLAYDOL,e.SHUPPET,e.BANETTE,e.CHIMECHO,e.JIRACHI,e.BUDEW,e.ROSERADE,e.CHERUBI,e.CHERRIM,e.MISMAGIUS,e.CHINGLING,e.MIME_JR,e.FINNEON,e.LUMINEON,e.TOGEKISS,e.GALLADE,e.PROBOPASS,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.MUNNA,e.MUSHARNA,e.AUDINO,e.COTTONEE,e.WHIMSICOTT,e.SIGILYPH,e.MINCCINO,e.CINCCINO,e.FRILLISH,e.JELLICENT,e.MELOETTA,e.DELPHOX,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.SYLVEON,e.DEDENNE,e.CARBINK,e.KLEFKI,e.XERNEAS,e.DIANCIE,e.PRIMARINA,e.CUTIEFLY,e.RIBOMBEE,e.MORELULL,e.SHIINOTIC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.MINIOR,e.MIMIKYU,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.LUNALA,e.NIHILEGO,e.XURKITREE,e.MAGEARNA,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.MR_RIME,e.MILCERY,e.ALCREMIE,e.FROSMOTH,e.INDEEDEE,e.ZACIAN,e.ZAMAZENTA,e.ENAMORUS,e.FIDOUGH,e.DACHSBUN,e.ARBOLIVA,e.TOEDSCOOL,e.TOEDSCRUEL,e.RABSCA,e.ESPATHRA,e.GLIMMET,e.GLIMMORA,e.FARIGIRAF,e.SCREAM_TAIL,e.FLUTTER_MANE,e.IRON_MOTH,e.GHOLDENGO,e.IRON_VALIANT,e.MIRAIDON,e.FEZANDIPITI,e.TERAPAGOS,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ETERNAL_FLOETTE,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.HISUI_BRAVIARY],[t.INFESTATION]:[e.BUTTERFREE,e.BEEDRILL,e.EKANS,e.ARBOK,e.ODDISH,e.GLOOM,e.VILEPLUME,e.VENONAT,e.VENOMOTH,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.EXEGGCUTE,e.EXEGGUTOR,e.KOFFING,e.WEEZING,e.TANGELA,e.MR_MIME,e.MEW,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.WOOPER,e.QUAGSIRE,e.SHUCKLE,e.SLUGMA,e.MAGCARGO,e.BEAUTIFLY,e.DUSTOX,e.SURSKIT,e.MASQUERAIN,e.VOLBEAT,e.ILLUMISE,e.GULPIN,e.SWALOT,e.SEVIPER,e.LILEEP,e.CRADILY,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.HUNTAIL,e.GOREBYSS,e.KRICKETUNE,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.SHELLOS,e.GASTRODON,e.MIME_JR,e.SPIRITOMB,e.SKORUPI,e.DRAPION,e.CARNIVINE,e.TANGROWTH,e.DUSKNOIR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.YAMASK,e.COFAGRIGUS,e.TRUBBISH,e.GARBODOR,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.KARRABLAST,e.ESCAVALIER,e.JOLTIK,e.GALVANTULA,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.DURANT,e.GENESECT,e.VIVILLON,e.PANGORO,e.BINACLE,e.BARBARACLE,e.GOOMY,e.SLIGGOO,e.GOODRA,e.CUTIEFLY,e.RIBOMBEE,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.SANDYGAST,e.PALOSSAND,e.MIMIKYU,e.STAKATAKA,e.BLIPBUG,e.FROSMOTH,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.BRAMBLIN,e.BRAMBLEGHAST,e.DIPPLIN,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR],[t.POWER_UP_PUNCH]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWHIRL,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.GRIMER,e.MUK,e.GENGAR,e.DROWZEE,e.HYPNO,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.LEDYBA,e.LEDIAN,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.SNUBBULL,e.GRANBULL,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.DELIBIRD,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.COMBUSKEN,e.BLAZIKEN,e.MARSHTOMP,e.SWAMPERT,e.LOMBRE,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MAWILE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.VOLBEAT,e.ILLUMISE,e.GULPIN,e.SWALOT,e.GRUMPIG,e.SPINDA,e.FLYGON,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.KECLEON,e.DUSCLOPS,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.GROUDON,e.JIRACHI,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.KRICKETUNE,e.CRANIDOS,e.RAMPARDOS,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.MAGMORTAR,e.GALLADE,e.DUSKNOIR,e.UXIE,e.MESPRIT,e.AZELF,e.REGIGIGAS,e.DARKRAI,e.VICTINI,e.PIGNITE,e.EMBOAR,e.WATCHOG,e.SIMISAGE,e.SIMISEAR,e.SIMIPOUR,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.GOTHITELLE,e.REUNICLUS,e.EELEKTROSS,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.HEATMOR,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.MEOWSTIC,e.BINACLE,e.BARBARACLE,e.HAWLUCHA,e.PHANTUMP,e.TREVENANT,e.HOOPA,e.CRABRAWLER,e.CRABOMINABLE,e.BUZZWOLE,e.ZERAORA,e.TOXEL,e.TOXTRICITY,e.CLOBBOPUS,e.GRAPPLOCT,e.GRIMMSNARL,e.URSALUNA,e.ANNIHILAPE,e.KINGAMBIT,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN],[t.DARKEST_LARIAT]:[e.POLIWRATH,e.MACHAMP,e.SNORLAX,e.MEW,e.SWAMPERT,e.ELECTIVIRE,e.DUSKNOIR,e.REGIGIGAS,e.KROOKODILE,e.GOLURK,e.PANGORO,e.INCINEROAR,e.BEWEAR,e.TAPU_BULU,e.BUZZWOLE,e.MELMETAL,e.RILLABOOM,e.GRIMMSNARL,e.URSHIFU,e.ZARUDE],[t.HIGH_HORSEPOWER]:[e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.DUGTRIO,e.POLIWRATH,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.ONIX,e.KINGLER,e.RHYHORN,e.RHYDON,e.PINSIR,e.TAUROS,e.SNORLAX,e.MEW,e.SUDOWOODO,e.QUAGSIRE,e.GIRAFARIG,e.GLIGAR,e.STEELIX,e.HERACROSS,e.URSARING,e.SLUGMA,e.SWINUB,e.PILOSWINE,e.PHANPY,e.DONPHAN,e.MILTANK,e.PUPITAR,e.TYRANITAR,e.SWAMPERT,e.SLAKING,e.NOSEPASS,e.AGGRON,e.NUMEL,e.CAMERUPT,e.BARBOACH,e.WHISCASH,e.GROUDON,e.TORTERRA,e.HIPPOPOTAS,e.HIPPOWDON,e.RHYPERIOR,e.GLISCOR,e.MAMOSWINE,e.PROBOPASS,e.REGIGIGAS,e.PIGNITE,e.EMBOAR,e.ZEBSTRIKA,e.DRILBUR,e.EXCADRILL,e.GURDURR,e.CONKELDURR,e.KROOKODILE,e.SAWSBUCK,e.GOLURK,e.BOUFFALANT,e.TERRAKION,e.CHESNAUGHT,e.DIGGERSBY,e.GOGOAT,e.TYRANTRUM,e.AVALUGG,e.ZYGARDE,e.MUDBRAY,e.MUDSDALE,e.BEWEAR,e.TAPU_BULU,e.BUZZWOLE,e.GUZZLORD,e.STAKATAKA,e.MELMETAL,e.RILLABOOM,e.GREEDENT,e.DREDNAW,e.CARKOL,e.COALOSSAL,e.APPLETUN,e.SANDACONDA,e.FALINKS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.GLASTRIER,e.WYRDEER,e.URSALUNA,e.OINKOLOGNE,e.KLAWF,e.REVAVROOM,e.ORTHWORM,e.CETODDLE,e.CETITAN,e.CLODSIRE,e.FARIGIRAF,e.GREAT_TUSK,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_THORNS,e.BAXCALIBUR,e.OKIDOGI,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.GALAR_PONYTA,e.GALAR_RAPIDASH,[e.CALYREX,"ice"],e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.BLOODMOON_URSALUNA],[t.SOLAR_BLADE]:[e.PONYTA,e.RAPIDASH,e.FARFETCHD,e.MEW,e.CELEBI,e.GROVYLE,e.SCEPTILE,e.NUZLEAF,e.SHIFTRY,e.TROPIUS,e.CHERRIM,e.TANGROWTH,e.LEAFEON,e.GALLADE,e.LILLIGANT,e.CRUSTLE,e.VIRIZION,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.DECIDUEYE,e.LURANTIS,e.TSAREENA,e.DHELMISE,e.KARTANA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SIRFETCHD,e.ZACIAN,e.ZARUDE,e.CALYREX,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.CERULEDGE,e.WO_CHIEN,e.IRON_LEAVES,e.OGERPON,e.IRON_BOULDER,e.IRON_CROWN,e.GALAR_FARFETCHD,e.HISUI_LILLIGANT],[t.THROAT_CHOP]:[e.BEEDRILL,e.RATICATE,e.FEAROW,e.ARBOK,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.PARASECT,e.MEOWTH,e.PERSIAN,e.PRIMEAPE,e.POLIWRATH,e.MACHAMP,e.RAPIDASH,e.FARFETCHD,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.GOLDEEN,e.SEAKING,e.PINSIR,e.TAUROS,e.MEW,e.TYPHLOSION,e.ARIADOS,e.UMBREON,e.GLIGAR,e.QWILFISH,e.HERACROSS,e.SNEASEL,e.URSARING,e.CORSOLA,e.HOUNDOOM,e.STANTLER,e.RAIKOU,e.SCEPTILE,e.MIGHTYENA,e.LINOONE,e.SHIFTRY,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.HARIYAMA,e.VIBRAVA,e.FLYGON,e.ZANGOOSE,e.SEVIPER,e.BANETTE,e.ABSOL,e.DEOXYS,e.EMPOLEON,e.KRICKETUNE,e.LUXRAY,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.DRAPION,e.TOXICROAK,e.CARNIVINE,e.WEAVILE,e.GLISCOR,e.GALLADE,e.DARKRAI,e.LIEPARD,e.SIMISAGE,e.SIMISEAR,e.SIMIPOUR,e.GIGALITH,e.AUDINO,e.SAWK,e.LEAVANNY,e.SCOLIPEDE,e.KROOKODILE,e.MARACTUS,e.SCRAFTY,e.ZOROARK,e.GALVANTULA,e.EELEKTRIK,e.EELEKTROSS,e.BEARTIC,e.BISHARP,e.BOUFFALANT,e.HEATMOR,e.HYDREIGON,e.PANGORO,e.MALAMAR,e.HAWLUCHA,e.HOOPA,e.INCINEROAR,e.GOLISOPOD,e.PHEROMOSA,e.MARSHADOW,e.NAGANADEL,e.ZERAORA,e.DREDNAW,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXTRICITY,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.FALINKS,e.PINCURCHIN,e.ZARUDE,e.GLASTRIER,e.TAROUNTULA,e.SPIDOPS,e.LOKIX,e.WIGLETT,e.WUGTRIO,e.FLAMIGO,e.CHIEN_PAO,e.TING_LU,e.ROARING_MOON,e.OGERPON,e.IRON_BOULDER,e.ALOLA_RATICATE,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_MAROWAK,[e.LYCANROC,"midnight"],e.GALAR_MEOWTH,e.GALAR_RAPIDASH,e.GALAR_FARFETCHD,e.GALAR_ZAPDOS,e.GALAR_CORSOLA,e.GALAR_LINOONE,[e.URSHIFU,"single-strike"],[e.CALYREX,"ice"]],[t.POLLEN_PUFF]:[e.BUTTERFREE,e.GLOOM,e.VILEPLUME,e.MEW,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.CELEBI,e.VESPIQUEN,e.CHERUBI,e.CHERRIM,e.LEAVANNY,e.PETILIL,e.LILLIGANT,e.FOONGUS,e.AMOONGUSS,e.VIVILLON,e.FLABEBE,e.FLOETTE,e.FLORGES,e.CUTIEFLY,e.RIBOMBEE,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.COMFEY,e.GOSSIFLEUR,e.ELDEGOSS,e.CALYREX,e.MEOWSCARADA,e.ARBOLIVA,e.BRUTE_BONNET,e.WO_CHIEN,e.DIPPLIN,e.HYDRAPPLE,e.ETERNAL_FLOETTE,e.HISUI_LILLIGANT],[t.PSYCHIC_TERRAIN]:[e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.DROWZEE,e.HYPNO,e.MR_MIME,e.JYNX,e.MEWTWO,e.MEW,e.ESPEON,e.SLOWKING,e.GIRAFARIG,e.CELEBI,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.MEDITITE,e.MEDICHAM,e.SPOINK,e.GRUMPIG,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.GALLADE,e.CRESSELIA,e.ARCEUS,e.MUSHARNA,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.BEHEEYEM,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.MEOWSTIC,e.HOOPA,e.ORANGURU,e.BRUXISH,e.TAPU_LELE,e.DOTTLER,e.ORBEETLE,e.HATENNA,e.HATTREM,e.HATTERENE,e.MR_RIME,e.INDEEDEE,e.CALYREX,e.ARMAROUGE,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.VELUZA,e.FARIGIRAF,e.SCREAM_TAIL,e.IRON_VALIANT,e.IRON_LEAVES,e.MUNKIDORI,e.ALOLA_RAICHU,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.HISUI_BRAVIARY],[t.LUNGE]:[e.VENONAT,e.VENOMOTH,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.DODUO,e.DODRIO,e.MUK,e.SCYTHER,e.MEW,e.SPINARAK,e.ARIADOS,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.YANMA,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.SCIZOR,e.HERACROSS,e.STANTLER,e.SURSKIT,e.MASQUERAIN,e.VOLBEAT,e.SPOINK,e.GRUMPIG,e.CACTURNE,e.KRICKETOT,e.KRICKETUNE,e.MOTHIM,e.COMBEE,e.VESPIQUEN,e.YANMEGA,e.GLISCOR,e.HEATRAN,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.JOLTIK,e.EELEKTRIK,e.EELEKTROSS,e.LARVESTA,e.VOLCARONA,e.HAWLUCHA,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.RIBOMBEE,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.BUZZWOLE,e.PHEROMOSA,e.SIZZLIPEDE,e.CENTISKORCH,e.FALINKS,e.SNOM,e.FROSMOTH,e.WYRDEER,e.KLEAVOR,e.TAROUNTULA,e.SPIDOPS,e.LOKIX,e.TOEDSCOOL,e.TOEDSCRUEL,e.RELLOR,e.RABSCA,e.FLAMIGO,e.TATSUGIRI,e.DUDUNSPARCE,e.SLITHER_WING,e.IRON_MOTH],[t.SPEED_SWAP]:[e.RAICHU,e.ABRA,e.KADABRA,e.ALAKAZAM,e.PORYGON,e.MEWTWO,e.MEW,e.PORYGON2,e.BRONZOR,e.BRONZONG,e.PORYGON_Z,e.VICTINI,e.WOOBAT,e.SWOOBAT,e.SIGILYPH,e.EMOLGA,e.JOLTIK,e.GALVANTULA,e.CUTIEFLY,e.RIBOMBEE,e.TAPU_LELE,e.PHEROMOSA,e.MAGEARNA,e.CALYREX,e.RABSCA,e.ALOLA_RAICHU],[t.SMART_STRIKE]:[e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.RAPIDASH,e.SEEL,e.DEWGONG,e.CLOYSTER,e.RHYHORN,e.RHYDON,e.GOLDEEN,e.SEAKING,e.TAUROS,e.LAPRAS,e.MEW,e.ARIADOS,e.TOGETIC,e.FORRETRESS,e.DUNSPARCE,e.HERACROSS,e.DONPHAN,e.AGGRON,e.RHYPERIOR,e.TOGEKISS,e.SAMUROTT,e.EXCADRILL,e.SCOLIPEDE,e.SAWSBUCK,e.ESCAVALIER,e.BOUFFALANT,e.COBALION,e.TERRAKION,e.VIRIZION,e.THUNDURUS,e.KELDEO,e.XERNEAS,e.TAPU_BULU,e.TAPU_FINI,e.CELESTEELA,e.KARTANA,e.NECROZMA,e.NAGANADEL,e.DREDNAW,e.FALINKS,e.GLASTRIER,e.OVERQWIL,e.DUDUNSPARCE,e.GREAT_TUSK,e.IRON_TREADS,e.IRON_LEAVES,e.GOUGING_FIRE,e.IRON_CROWN,e.GALAR_RAPIDASH,[e.CALYREX,"ice"],e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_SAMUROTT,e.PALDEA_TAUROS],[t.BRUTAL_SWING]:[e.CHARIZARD,e.BEEDRILL,e.EKANS,e.ARBOK,e.RAICHU,e.TENTACOOL,e.TENTACRUEL,e.FARFETCHD,e.ONIX,e.KINGLER,e.CUBONE,e.MAROWAK,e.LICKITUNG,e.RHYDON,e.SCYTHER,e.PINSIR,e.GYARADOS,e.AERODACTYL,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.SENTRET,e.FURRET,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.STEELIX,e.SCIZOR,e.HERACROSS,e.DELIBIRD,e.DONPHAN,e.HITMONTOP,e.TYRANITAR,e.SCEPTILE,e.SHIFTRY,e.AZURILL,e.MAWILE,e.AGGRON,e.FLYGON,e.SEVIPER,e.ARMALDO,e.MILOTIC,e.TROPIUS,e.ABSOL,e.SALAMENCE,e.METAGROSS,e.GROUDON,e.RAYQUAZA,e.DEOXYS,e.DRIFLOON,e.DRIFBLIM,e.LOPUNNY,e.GARCHOMP,e.DRAPION,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.GLISCOR,e.GIRATINA,e.SERPERIOR,e.EXCADRILL,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.KROKOROK,e.KROOKODILE,e.ESCAVALIER,e.FERROTHORN,e.HAXORUS,e.MIENSHAO,e.HEATMOR,e.HYDREIGON,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.GRENINJA,e.DIGGERSBY,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.MALAMAR,e.BARBARACLE,e.HELIOLISK,e.TYRANTRUM,e.GOODRA,e.TREVENANT,e.GOURGEIST,e.INCINEROAR,e.CRABRAWLER,e.CRABOMINABLE,e.STUFFUL,e.BEWEAR,e.ORANGURU,e.PASSIMIAN,e.TURTONATOR,e.DHELMISE,e.HAKAMO_O,e.KOMMO_O,e.TAPU_BULU,e.NIHILEGO,e.XURKITREE,e.CELESTEELA,e.GUZZLORD,e.NECROZMA,e.STAKATAKA,e.ZERAORA,e.MELMETAL,e.RILLABOOM,e.SKWOVET,e.GREEDENT,e.SILICOBRA,e.SANDACONDA,e.SIZZLIPEDE,e.CENTISKORCH,e.GRAPPLOCT,e.HATTREM,e.HATTERENE,e.SIRFETCHD,e.RUNERIGUS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.DRACOVISH,e.ZACIAN,e.ETERNATUS,e.ZARUDE,e.KLEAVOR,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.OKIDOGI,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_YAMASK],[t.AURORA_VEIL]:[e.JYNX,e.ARTICUNO,e.MEW,e.DELIBIRD,e.SMOOCHUM,e.REGICE,e.ABOMASNOW,e.GLACEON,e.FROSLASS,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.CRYOGONAL,e.AMAURA,e.AURORUS,e.BERGMITE,e.AVALUGG,e.EISCUE,e.ARCTOVISH,e.IRON_BUNDLE,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.HISUI_AVALUGG],[t.PSYCHIC_FANGS]:[e.EKANS,e.ARBOK,e.GROWLITHE,e.ARCANINE,e.AERODACTYL,e.MEW,e.CROCONAW,e.FERALIGATR,e.ESPEON,e.GIRAFARIG,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.HOUNDOUR,e.HOUNDOOM,e.POOCHYENA,e.MIGHTYENA,e.MAWILE,e.ELECTRIKE,e.MANECTRIC,e.CARVANHA,e.SHARPEDO,e.SEVIPER,e.SALAMENCE,e.METAGROSS,e.SHINX,e.LUXIO,e.LUXRAY,e.GLISCOR,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.SWOOBAT,e.BASCULIN,e.LITLEO,e.PYROAR,e.TYRUNT,e.TYRANTRUM,e.YUNGOOS,e.GUMSHOOS,e.ROCKRUFF,e.LYCANROC,e.SILVALLY,e.BRUXISH,e.SOLGALEO,e.NECROZMA,e.GREEDENT,e.BOLTUND,e.ARROKUDA,e.BARRASKEWDA,e.MORPEKO,e.DRACOVISH,e.ARCTOVISH,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.BASCULEGION,e.FIDOUGH,e.DACHSBUN,e.MASCHIFF,e.MABOSSTIFF,e.GREAVARD,e.HOUNDSTONE,e.VELUZA,e.FARIGIRAF,e.SCREAM_TAIL,e.CHIEN_PAO,e.OKIDOGI,e.GOUGING_FIRE,e.HISUI_GROWLITHE,e.HISUI_ARCANINE],[t.STOMPING_TANTRUM]:[e.VENUSAUR,e.RATICATE,e.ARBOK,e.SANDSHREW,e.SANDSLASH,e.NIDORINA,e.NIDOQUEEN,e.NIDORINO,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.MANKEY,e.PRIMEAPE,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.DODRIO,e.ONIX,e.KINGLER,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TAUROS,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.MEGANIUM,e.TYPHLOSION,e.ARIADOS,e.AMPHAROS,e.SUDOWOODO,e.WOOPER,e.QUAGSIRE,e.GIRAFARIG,e.DUNSPARCE,e.STEELIX,e.GRANBULL,e.URSARING,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.PHANPY,e.DONPHAN,e.MILTANK,e.BLISSEY,e.ENTEI,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.SWAMPERT,e.LINOONE,e.VIGOROTH,e.SLAKING,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.DELCATTY,e.LAIRON,e.AGGRON,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.GRUMPIG,e.SPINDA,e.CACTURNE,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.ARMALDO,e.TROPIUS,e.WALREIN,e.RELICANTH,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.GROUDON,e.DEOXYS,e.TORTERRA,e.BIBAREL,e.RAMPARDOS,e.BASTIODON,e.GASTRODON,e.PURUGLY,e.BRONZOR,e.BRONZONG,e.BONSLY,e.GARCHOMP,e.MUNCHLAX,e.HIPPOPOTAS,e.HIPPOWDON,e.DRAPION,e.ABOMASNOW,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.MAMOSWINE,e.PROBOPASS,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.ARCEUS,e.TEPIG,e.PIGNITE,e.EMBOAR,e.WATCHOG,e.STOUTLAND,e.BOLDORE,e.GIGALITH,e.EXCADRILL,e.AUDINO,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SCOLIPEDE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.CRUSTLE,e.GARBODOR,e.SAWSBUCK,e.AMOONGUSS,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.STUNFISK,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.BOUFFALANT,e.HEATMOR,e.DURANT,e.ZWEILOUS,e.HYDREIGON,e.TERRAKION,e.LANDORUS,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.DIGGERSBY,e.SKIDDO,e.GOGOAT,e.PANGORO,e.TYRUNT,e.TYRANTRUM,e.CARBINK,e.GOODRA,e.AVALUGG,e.ZYGARDE,e.VOLCANION,e.INCINEROAR,e.YUNGOOS,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.ROCKRUFF,e.LYCANROC,e.MUDBRAY,e.MUDSDALE,e.STUFFUL,e.BEWEAR,e.KOMALA,e.TURTONATOR,e.DRAMPA,e.KOMMO_O,e.BUZZWOLE,e.CELESTEELA,e.GUZZLORD,e.STAKATAKA,e.RILLABOOM,e.GREEDENT,e.CHEWTLE,e.DREDNAW,e.APPLETUN,e.GRAPPLOCT,e.GRIMMSNARL,e.OBSTAGOON,e.CURSOLA,e.MR_RIME,e.STONJOURNER,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.DURALUDON,e.ZARUDE,e.GLASTRIER,e.SPECTRIER,e.URSALUNA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.OINKOLOGNE,e.FIDOUGH,e.DACHSBUN,e.NACLI,e.NACLSTACK,e.GARGANACL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.WIGLETT,e.WUGTRIO,e.ORTHWORM,e.GREAVARD,e.HOUNDSTONE,e.CETODDLE,e.CETITAN,e.DONDOZO,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_HANDS,e.IRON_THORNS,e.BAXCALIBUR,e.TING_LU,e.ROARING_MOON,e.KORAIDON,e.OKIDOGI,e.OGERPON,e.GOUGING_FIRE,e.RAGING_BOLT,e.ALOLA_RATICATE,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_MR_MIME,e.GALAR_ZAPDOS,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_LINOONE,e.GALAR_STUNFISK,[e.CALYREX,"ice","shadow"],e.HISUI_TYPHLOSION,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.LIQUIDATION]:[e.BLASTOISE,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.SLOWPOKE,e.SLOWBRO,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.KRABBY,e.KINGLER,e.HORSEA,e.SEADRA,e.LAPRAS,e.VAPOREON,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.MEW,e.FERALIGATR,e.MARILL,e.AZUMARILL,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.QWILFISH,e.CORSOLA,e.OCTILLERY,e.MANTINE,e.KINGDRA,e.SUICUNE,e.SWAMPERT,e.WINGULL,e.PELIPPER,e.SURSKIT,e.MASQUERAIN,e.CARVANHA,e.SHARPEDO,e.WAILORD,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.ARMALDO,e.WALREIN,e.RELICANTH,e.LUVDISC,e.KYOGRE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIBAREL,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.GARCHOMP,e.PALKIA,e.PHIONE,e.MANAPHY,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.SEISMITOAD,e.BASCULIN,e.TIRTOUGA,e.CARRACOSTA,e.DUCKLETT,e.SWANNA,e.ALOMOMOLA,e.EELEKTROSS,e.CUBCHOO,e.BEARTIC,e.KELDEO,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.VOLCANION,e.PRIMARINA,e.CRABRAWLER,e.CRABOMINABLE,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.GOLISOPOD,e.BRUXISH,e.DHELMISE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.CHEWTLE,e.DREDNAW,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.CLOBBOPUS,e.GRAPPLOCT,e.CURSOLA,e.PINCURCHIN,e.EISCUE,e.DRACOVISH,e.ARCTOVISH,e.BASCULEGION,e.OVERQWIL,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.WIGLETT,e.WUGTRIO,e.FINIZEN,e.PALAFIN,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.CLODSIRE,e.IRON_VALIANT,e.WALKING_WAKE,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,[e.URSHIFU,"rapid-strike"],e.HISUI_QWILFISH,e.HISUI_SAMUROTT,[e.PALDEA_TAUROS,"aqua"],e.PALDEA_WOOPER],[t.BODY_PRESS]:[e.BLASTOISE,e.NIDOQUEEN,e.NIDOKING,e.JIGGLYPUFF,e.WIGGLYTUFF,e.GRAVELER,e.GOLEM,e.SLOWBRO,e.ONIX,e.HYPNO,e.LICKITUNG,e.RHYDON,e.LAPRAS,e.SNORLAX,e.DRAGONITE,e.MEW,e.SUDOWOODO,e.QUAGSIRE,e.FORRETRESS,e.STEELIX,e.MANTINE,e.SKARMORY,e.DONPHAN,e.MILTANK,e.TYRANITAR,e.SWAMPERT,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.ARON,e.LAIRON,e.AGGRON,e.SWALOT,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.GRUMPIG,e.CLAYDOL,e.TROPIUS,e.WALREIN,e.RELICANTH,e.METAGROSS,e.REGIROCK,e.REGISTEEL,e.GROUDON,e.TORTERRA,e.BRONZONG,e.HIPPOPOTAS,e.HIPPOWDON,e.ABOMASNOW,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.MAMOSWINE,e.PROBOPASS,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.ARCEUS,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DARMANITAN,e.CRUSTLE,e.COFAGRIGUS,e.GARBODOR,e.FERROTHORN,e.EELEKTROSS,e.CUBCHOO,e.BEARTIC,e.GOLURK,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.CHESNAUGHT,e.HAWLUCHA,e.CARBINK,e.GOODRA,e.AVALUGG,e.DIANCIE,e.VOLCANION,e.CRABOMINABLE,e.MUDSDALE,e.BEWEAR,e.TURTONATOR,e.DHELMISE,e.KOMMO_O,e.GUZZLORD,e.STAKATAKA,e.MELMETAL,e.RILLABOOM,e.GREEDENT,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.DUBWOOL,e.DREDNAW,e.CARKOL,e.COALOSSAL,e.APPLETUN,e.SANDACONDA,e.GRIMMSNARL,e.OBSTAGOON,e.RUNERIGUS,e.FALINKS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DURALUDON,e.ZAMAZENTA,e.URSHIFU,e.GLASTRIER,[e.CALYREX,"","ice"],e.URSALUNA,e.OINKOLOGNE,e.PAWMOT,e.DACHSBUN,e.NACLSTACK,e.GARGANACL,e.ORTHWORM,e.HOUNDSTONE,e.CETODDLE,e.CETITAN,e.DONDOZO,e.CLODSIRE,e.DUDUNSPARCE,e.GREAT_TUSK,e.BRUTE_BONNET,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_HANDS,e.IRON_THORNS,e.BAXCALIBUR,e.WO_CHIEN,e.TING_LU,e.ROARING_MOON,e.KORAIDON,e.OKIDOGI,e.ARCHALUDON,e.HYDRAPPLE,e.RAGING_BOLT,e.TERAPAGOS,e.ALOLA_GOLEM,e.GALAR_SLOWBRO,e.GALAR_LINOONE,e.GALAR_DARMANITAN,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.BREAKING_SWIPE]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.ARBOK,e.ONIX,e.RHYDON,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.AMPHAROS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.KINGDRA,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.FLYGON,e.ALTARIA,e.SEVIPER,e.MILOTIC,e.SALAMENCE,e.LATIAS,e.LATIOS,e.RAYQUAZA,e.RAMPARDOS,e.GABITE,e.GARCHOMP,e.RHYPERIOR,e.GLISCOR,e.DIALGA,e.PALKIA,e.GIRATINA,e.SERPERIOR,e.KROKOROK,e.KROOKODILE,e.AXEW,e.FRAXURE,e.HAXORUS,e.HYDREIGON,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.HELIOLISK,e.TYRANTRUM,e.GOODRA,e.NOIVERN,e.ZYGARDE,e.SALAZZLE,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.NECROZMA,e.NAGANADEL,e.INTELEON,e.DRACOZOLT,e.DURALUDON,e.DRAKLOAK,e.DRAGAPULT,e.REGIDRAGO,e.CYCLIZAR,e.DUDUNSPARCE,e.IRON_THORNS,e.BAXCALIBUR,e.ROARING_MOON,e.KORAIDON,e.WALKING_WAKE,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.ALOLA_EXEGGUTOR,e.HISUI_GOODRA],[t.STEEL_BEAM]:[e.MAGNEMITE,e.MAGNETON,e.MEW,e.FORRETRESS,e.STEELIX,e.SCIZOR,e.SKARMORY,e.NOSEPASS,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.BELDUM,e.METANG,e.METAGROSS,e.REGISTEEL,e.JIRACHI,e.EMPOLEON,e.BRONZOR,e.BRONZONG,e.LUCARIO,e.MAGNEZONE,e.PROBOPASS,e.DIALGA,e.HEATRAN,e.ARCEUS,e.EXCADRILL,e.ESCAVALIER,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.PAWNIARD,e.BISHARP,e.DURANT,e.COBALION,e.GENESECT,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.KLEFKI,e.SILVALLY,e.TOGEDEMARU,e.SOLGALEO,e.CELESTEELA,e.KARTANA,e.MAGEARNA,e.STAKATAKA,e.MELTAN,e.MELMETAL,e.CORVIKNIGHT,e.PERRSERKER,e.CUFANT,e.COPPERAJAH,e.DURALUDON,e.ZACIAN,e.ZAMAZENTA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.VAROOM,e.REVAVROOM,e.ORTHWORM,e.KINGAMBIT,e.IRON_TREADS,e.GHOLDENGO,e.ARCHALUDON,e.IRON_CROWN,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.GALAR_MEOWTH,e.GALAR_STUNFISK,e.HISUI_SLIGGOO,e.HISUI_GOODRA],[t.EXPANDING_FORCE]:[e.WIGGLYTUFF,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.DROWZEE,e.HYPNO,e.EXEGGUTOR,e.STARMIE,e.MR_MIME,e.JYNX,e.MEWTWO,e.MEW,e.NATU,e.XATU,e.ESPEON,e.SLOWKING,e.GIRAFARIG,e.CELEBI,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.MEDITITE,e.MEDICHAM,e.SPOINK,e.GRUMPIG,e.BALTOY,e.CLAYDOL,e.CHIMECHO,e.METANG,e.METAGROSS,e.JIRACHI,e.DEOXYS,e.BRONZOR,e.BRONZONG,e.GALLADE,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.VICTINI,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.DARMANITAN,e.SIGILYPH,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.ELGYEM,e.BEHEEYEM,e.DELPHOX,e.ESPURR,e.MEOWSTIC,e.INKAY,e.MALAMAR,e.HOOPA,e.ORANGURU,e.BRUXISH,e.SOLGALEO,e.LUNALA,e.NECROZMA,e.BLACEPHALON,e.DOTTLER,e.ORBEETLE,e.HATENNA,e.HATTREM,e.HATTERENE,e.MR_RIME,e.INDEEDEE,e.CALYREX,e.WYRDEER,e.ARMAROUGE,e.RABSCA,e.ESPATHRA,e.VELUZA,e.FARIGIRAF,e.SCREAM_TAIL,e.IRON_VALIANT,e.IRON_CROWN,e.ALOLA_RAICHU,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_SLOWKING,e.HISUI_BRAVIARY],[t.STEEL_ROLLER]:[e.SANDSHREW,e.SANDSLASH,e.JIGGLYPUFF,e.WIGGLYTUFF,e.CLOYSTER,e.LICKITUNG,e.SNORLAX,e.MEW,e.MARILL,e.AZUMARILL,e.STEELIX,e.QWILFISH,e.SHUCKLE,e.MILTANK,e.ARON,e.LAIRON,e.AGGRON,e.WAILMER,e.WAILORD,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.METANG,e.METAGROSS,e.REGISTEEL,e.BRONZOR,e.BRONZONG,e.MAGNEZONE,e.LICKILICKY,e.HEATRAN,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.TOGEDEMARU,e.DHELMISE,e.SOLGALEO,e.CELESTEELA,e.GUZZLORD,e.MAGEARNA,e.STAKATAKA,e.MELMETAL,e.CUFANT,e.COPPERAJAH,e.DURALUDON,e.IRON_TREADS,e.ARCHALUDON,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH],[t.SCALE_SHOT]:[e.CHARIZARD,e.EKANS,e.ARBOK,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.GYARADOS,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.DUNSPARCE,e.GLIGAR,e.QWILFISH,e.KINGDRA,e.LUGIA,e.SCEPTILE,e.CARVANHA,e.SHARPEDO,e.FLYGON,e.FEEBAS,e.MILOTIC,e.RELICANTH,e.LUVDISC,e.LATIAS,e.LATIOS,e.RAYQUAZA,e.GIBLE,e.GABITE,e.GARCHOMP,e.DIALGA,e.PALKIA,e.BASCULIN,e.KROKOROK,e.KROOKODILE,e.ALOMOMOLA,e.AXEW,e.FRAXURE,e.HAXORUS,e.DRUDDIGON,e.HYDREIGON,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.SKRELP,e.DRAGALGE,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.ZYGARDE,e.WISHIWASHI,e.SALANDIT,e.SALAZZLE,e.TURTONATOR,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.NAGANADEL,e.INTELEON,e.CHEWTLE,e.DREDNAW,e.SILICOBRA,e.SANDACONDA,e.ARROKUDA,e.BARRASKEWDA,e.REGIDRAGO,e.BASCULEGION,e.OVERQWIL,e.CYCLIZAR,e.VELUZA,e.DUDUNSPARCE,e.BAXCALIBUR,e.ROARING_MOON,e.KORAIDON,e.GOUGING_FIRE,e.HISUI_QWILFISH],[t.METEOR_BEAM]:[e.CLEFAIRY,e.CLEFABLE,e.ONIX,e.RHYDON,e.STARMIE,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.MEW,e.AMPHAROS,e.SUDOWOODO,e.STEELIX,e.SHUCKLE,e.CORSOLA,e.NOSEPASS,e.AGGRON,e.LUNATONE,e.SOLROCK,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.RELICANTH,e.METANG,e.METAGROSS,e.REGIROCK,e.REGISTEEL,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.BASTIODON,e.BRONZONG,e.RHYPERIOR,e.PROBOPASS,e.ARCEUS,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.CRUSTLE,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.ELGYEM,e.BEHEEYEM,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.CARBINK,e.DIANCIE,e.MINIOR,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.CELESTEELA,e.NECROZMA,e.STAKATAKA,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.CURSOLA,e.STONJOURNER,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.ETERNATUS,e.NACLI,e.NACLSTACK,e.GARGANACL,e.ARMAROUGE,e.KLAWF,e.GLIMMET,e.GLIMMORA,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.KORAIDON,e.ARCHALUDON,e.IRON_BOULDER,e.TERAPAGOS,e.ALOLA_GOLEM,e.GALAR_CORSOLA,e.HISUI_AVALUGG],[t.MISTY_EXPLOSION]:[e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEW,e.MARILL,e.AZUMARILL,e.GARDEVOIR,e.MUSHARNA,e.FLORGES,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.SYLVEON,e.CARBINK,e.XERNEAS,e.DIANCIE,e.PRIMARINA,e.MAGEARNA,e.HATTERENE,e.ALCREMIE,e.ENAMORUS,e.SCREAM_TAIL,e.GALAR_WEEZING],[t.GRASSY_GLIDE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.ODDISH,e.GLOOM,e.VILEPLUME,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.EXEGGCUTE,e.EXEGGUTOR,e.TANGELA,e.MEW,e.BELLOSSOM,e.SUNFLORA,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.ROSELIA,e.CACNEA,e.CACTURNE,e.TURTWIG,e.GROTLE,e.TORTERRA,e.BUDEW,e.ROSERADE,e.CHERUBI,e.CHERRIM,e.SNOVER,e.ABOMASNOW,e.TANGROWTH,e.LEAFEON,e.SHAYMIN,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.MARACTUS,e.DEERLING,e.SAWSBUCK,e.VIRIZION,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.SKIDDO,e.GOGOAT,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.FOMANTIS,e.LURANTIS,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.DHELMISE,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.APPLIN,e.FLAPPLE,e.APPLETUN,e.SIRFETCHD,e.ZARUDE,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.CAPSAKID,e.SCOVILLAIN,e.DIPPLIN,e.OGERPON,e.HYDRAPPLE,e.ALOLA_EXEGGUTOR,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE],[t.RISING_VOLTAGE]:[e.PIKACHU,e.RAICHU,e.MAGNEMITE,e.MAGNETON,e.ELECTABUZZ,e.JOLTEON,e.ZAPDOS,e.MEW,e.CHINCHOU,e.LANTURN,e.RAIKOU,e.ELECTRIKE,e.MANECTRIC,e.SHINX,e.LUXIO,e.LUXRAY,e.MAGNEZONE,e.ELECTIVIRE,e.ROTOM,e.EMOLGA,e.JOLTIK,e.GALVANTULA,e.KLINK,e.KLANG,e.KLINKLANG,e.THUNDURUS,e.ZEKROM,e.HELIOPTILE,e.HELIOLISK,e.DEDENNE,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.TOGEDEMARU,e.XURKITREE,e.ZERAORA,e.YAMPER,e.BOLTUND,e.TOXTRICITY,e.PINCURCHIN,e.MORPEKO,e.DRACOZOLT,e.ARCTOZOLT,e.REGIELEKI,e.RAGING_BOLT,e.ALOLA_RAICHU],[t.TERRAIN_PULSE]:[e.VENUSAUR,e.BLASTOISE,e.EXEGGUTOR,e.LICKITUNG,e.KANGASKHAN,e.SNORLAX,e.MEW,e.DUNSPARCE,e.EXPLOUD,e.LUCARIO,e.LICKILICKY,e.REGIGIGAS,e.CLAUNCHER,e.CLAWITZER,e.CARBINK,e.XERNEAS,e.DIANCIE,e.ORANGURU,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.INDEEDEE,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.DUDUNSPARCE,e.ALOLA_EXEGGUTOR,e.GALAR_STUNFISK],[t.SKITTER_SMACK]:[e.EKANS,e.ARBOK,e.VENONAT,e.VENOMOTH,e.PERSIAN,e.TENTACRUEL,e.GASTLY,e.HAUNTER,e.GENGAR,e.SCYTHER,e.MEW,e.SPINARAK,e.ARIADOS,e.YANMA,e.DUNSPARCE,e.GLIGAR,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.OCTILLERY,e.SURSKIT,e.MASQUERAIN,e.NINCADA,e.NINJASK,e.SHEDINJA,e.SABLEYE,e.VOLBEAT,e.ILLUMISE,e.CACNEA,e.CACTURNE,e.SEVIPER,e.MILOTIC,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.KRICKETOT,e.KRICKETUNE,e.COMBEE,e.VESPIQUEN,e.SHELLOS,e.GASTRODON,e.SKORUPI,e.DRAPION,e.YANMEGA,e.GLISCOR,e.DUSKNOIR,e.GIRATINA,e.LIEPARD,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DWEBBLE,e.CRUSTLE,e.ZORUA,e.ZOROARK,e.JOLTIK,e.GALVANTULA,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.SHELMET,e.ACCELGOR,e.DURANT,e.LARVESTA,e.VOLCARONA,e.VIVILLON,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.ZYGARDE,e.HOOPA,e.DECIDUEYE,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.SALANDIT,e.SALAZZLE,e.WIMPOD,e.GOLISOPOD,e.PHEROMOSA,e.MARSHADOW,e.INTELEON,e.CHEWTLE,e.DREDNAW,e.SILICOBRA,e.SANDACONDA,e.SIZZLIPEDE,e.CENTISKORCH,e.GRAPPLOCT,e.SNOM,e.FROSMOTH,e.KLEAVOR,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.SHROODLE,e.GRAFAIAI,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.RELLOR,e.RABSCA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.DUDUNSPARCE,e.SLITHER_WING,e.ALOLA_PERSIAN,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_SLIGGOO,e.HISUI_GOODRA],[t.BURNING_JEALOUSY]:[e.VULPIX,e.NINETALES,e.MAGMAR,e.FLAREON,e.MOLTRES,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.MISDREAVUS,e.MAGCARGO,e.HOUNDOUR,e.HOUNDOOM,e.TORKOAL,e.BANETTE,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.MISMAGIUS,e.SKUNTANK,e.SPIRITOMB,e.MAGMORTAR,e.HEATRAN,e.LIEPARD,e.DARMANITAN,e.ZORUA,e.ZOROARK,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.HEATMOR,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.PYROAR,e.TREVENANT,e.INCINEROAR,e.SALANDIT,e.SALAZZLE,e.TURTONATOR,e.MIMIKYU,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.THIEVUL,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.CURSOLA,e.SCOVILLAIN,e.CHI_YU,e.ALOLA_PERSIAN,e.ALOLA_MAROWAK,e.GALAR_DARMANITAN,e.HISUI_TYPHLOSION,e.HISUI_ZORUA,e.HISUI_ZOROARK],[t.LASH_OUT]:[e.EKANS,e.ARBOK,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.MUK,e.TAUROS,e.GYARADOS,e.MEWTWO,e.MEW,e.UMBREON,e.MURKROW,e.SNEASEL,e.HOUNDOUR,e.HOUNDOOM,e.PUPITAR,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.NUZLEAF,e.SHIFTRY,e.VIGOROTH,e.SLAKING,e.HARIYAMA,e.SABLEYE,e.NUMEL,e.CAMERUPT,e.CACTURNE,e.SEVIPER,e.CRAWDAUNT,e.SHUPPET,e.BANETTE,e.MONFERNO,e.INFERNAPE,e.EMPOLEON,e.MISMAGIUS,e.HONCHKROW,e.STUNKY,e.SKUNTANK,e.SPIRITOMB,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.DARKRAI,e.PURRLOIN,e.LIEPARD,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.LAMPENT,e.CHANDELURE,e.STUNFISK,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.VULLABY,e.MANDIBUZZ,e.ZWEILOUS,e.HYDREIGON,e.TORNADUS,e.THUNDURUS,e.PANCHAM,e.PANGORO,e.INKAY,e.MALAMAR,e.TYRUNT,e.TYRANTRUM,e.PHANTUMP,e.TREVENANT,e.YVELTAL,e.HOOPA,e.INCINEROAR,e.MUDSDALE,e.TURTONATOR,e.DRAMPA,e.GUZZLORD,e.NICKIT,e.THIEVUL,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.MORPEKO,e.ZARUDE,e.GLASTRIER,e.SPECTRIER,e.SNEASLER,e.OVERQWIL,e.MEOWSCARADA,e.OINKOLOGNE,e.LOKIX,e.SQUAWKABILLY,e.MASCHIFF,e.MABOSSTIFF,e.SCOVILLAIN,e.BOMBIRDIER,e.REVAVROOM,e.ANNIHILAPE,e.KINGAMBIT,e.BRUTE_BONNET,e.IRON_JUGULIS,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.PECHARUNT,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_MUK,[e.LYCANROC,"midnight"],e.GALAR_MEOWTH,e.GALAR_MOLTRES,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARMANITAN,e.GALAR_STUNFISK,[e.URSHIFU,"single-strike"],[e.CALYREX,"ice","shadow"],e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_GOODRA,e.PALDEA_TAUROS],[t.POLTERGEIST]:[e.GASTLY,e.HAUNTER,e.GENGAR,e.MEW,e.MISDREAVUS,e.SHEDINJA,e.SABLEYE,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.MISMAGIUS,e.SPIRITOMB,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.GIRATINA,e.YAMASK,e.COFAGRIGUS,e.FRILLISH,e.JELLICENT,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.GOLETT,e.GOLURK,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.DECIDUEYE,e.SANDYGAST,e.PALOSSAND,e.DHELMISE,e.LUNALA,e.MARSHADOW,e.SINISTEA,e.POLTEAGEIST,e.CURSOLA,e.RUNERIGUS,e.SPECTRIER,e.SKELEDIRGE,e.CERULEDGE,e.BRAMBLIN,e.BRAMBLEGHAST,e.RABSCA,e.GREAVARD,e.HOUNDSTONE,e.FLUTTER_MANE,e.GHOLDENGO,e.POLTCHAGEIST,e.SINISTCHA,e.MUNKIDORI,e.PECHARUNT,e.ALOLA_MAROWAK,e.GALAR_YAMASK,e.HISUI_TYPHLOSION,e.HISUI_ZOROARK],[t.CORROSIVE_GAS]:[e.VILEPLUME,e.TENTACRUEL,e.GASTLY,e.HAUNTER,e.GENGAR,e.KOFFING,e.WEEZING,e.MEW,e.STUNKY,e.SKUNTANK,e.TOXICROAK,e.TRUBBISH,e.GARBODOR,e.SALAZZLE,e.NIHILEGO,e.GUZZLORD,e.GALAR_WEEZING],[t.COACHING]:[e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.HITMONLEE,e.HITMONCHAN,e.MEW,e.HERACROSS,e.HITMONTOP,e.COMBUSKEN,e.BLAZIKEN,e.MAKUHITA,e.HARIYAMA,e.INFERNAPE,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.GALLADE,e.PIGNITE,e.EMBOAR,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.SCRAGGY,e.SCRAFTY,e.MIENFOO,e.MIENSHAO,e.COBALION,e.TERRAKION,e.VIRIZION,e.KELDEO,e.MELOETTA,e.CHESNAUGHT,e.PANCHAM,e.PANGORO,e.HAWLUCHA,e.CRABRAWLER,e.CRABOMINABLE,e.STUFFUL,e.BEWEAR,e.PASSIMIAN,e.HAKAMO_O,e.KOMMO_O,e.BUZZWOLE,e.PHEROMOSA,e.MARSHADOW,e.ZERAORA,e.CINDERACE,e.CLOBBOPUS,e.GRAPPLOCT,e.SIRFETCHD,e.FALINKS,e.ZAMAZENTA,e.KUBFU,e.URSHIFU,e.SNEASLER,e.QUAQUAVAL,e.PAWMO,e.PAWMOT,e.ANNIHILAPE,e.IRON_VALIANT,e.IRON_LEAVES,e.GALAR_ZAPDOS,e.HISUI_SNEASEL,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE],[t.FLIP_TURN]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PSYDUCK,e.GOLDUCK,e.TENTACOOL,e.TENTACRUEL,e.SEEL,e.DEWGONG,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.VAPOREON,e.KABUTOPS,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.CHINCHOU,e.LANTURN,e.QWILFISH,e.KINGDRA,e.SWAMPERT,e.CARVANHA,e.SHARPEDO,e.MILOTIC,e.LUVDISC,e.LATIOS,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BUIZEL,e.FLOATZEL,e.FINNEON,e.LUMINEON,e.PHIONE,e.MANAPHY,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.BASCULIN,e.SWANNA,e.ALOMOMOLA,e.KELDEO,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.WISHIWASHI,e.BRUXISH,e.INTELEON,e.ARROKUDA,e.BARRASKEWDA,e.EISCUE,e.BASCULEGION,e.QUAXWELL,e.QUAQUAVAL,e.PALAFIN,e.VELUZA,e.IRON_BUNDLE,e.WALKING_WAKE,e.HISUI_SAMUROTT],[t.TRIPLE_AXEL]:[e.SEEL,e.DEWGONG,e.JYNX,e.ARTICUNO,e.MEW,e.BELLOSSOM,e.SNEASEL,e.DELIBIRD,e.HITMONTOP,e.KIRLIA,e.GARDEVOIR,e.MILOTIC,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.WEAVILE,e.GLACEON,e.GALLADE,e.FROSLASS,e.LEAVANNY,e.MINCCINO,e.CINCCINO,e.CRYOGONAL,e.MIENSHAO,e.MELOETTA,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.STEENEE,e.TSAREENA,e.PHEROMOSA,e.MR_RIME,e.FROSMOTH,e.MEOWSCARADA,e.QUAXWELL,e.QUAQUAVAL,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_NINETALES,e.GALAR_MR_MIME,e.HISUI_LILLIGANT],[t.DUAL_WINGBEAT]:[e.CHARIZARD,e.BUTTERFREE,e.CLEFAIRY,e.CLEFABLE,e.ZUBAT,e.GOLBAT,e.FARFETCHD,e.SCYTHER,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.TOGETIC,e.NATU,e.XATU,e.MURKROW,e.DUNSPARCE,e.GLIGAR,e.SCIZOR,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.LUGIA,e.HO_OH,e.CELEBI,e.WINGULL,e.PELIPPER,e.MASQUERAIN,e.NINJASK,e.VIBRAVA,e.FLYGON,e.SWABLU,e.ALTARIA,e.TROPIUS,e.SALAMENCE,e.LATIAS,e.LATIOS,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.COMBEE,e.VESPIQUEN,e.HONCHKROW,e.TOGEKISS,e.YANMEGA,e.GLISCOR,e.PALKIA,e.GIRATINA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.SIGILYPH,e.ARCHEN,e.ARCHEOPS,e.EMOLGA,e.DRUDDIGON,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HYDREIGON,e.VOLCARONA,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.HAWLUCHA,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.VIKAVOLT,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.LUNALA,e.BUZZWOLE,e.NAGANADEL,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.FLAPPLE,e.CRAMORANT,e.SIRFETCHD,e.FROSMOTH,e.KLEAVOR,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.BOMBIRDIER,e.FLAMIGO,e.DUDUNSPARCE,e.SLITHER_WING,e.IRON_JUGULIS,e.KORAIDON,e.FEZANDIPITI,e.GALAR_FARFETCHD,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[t.SCORCHING_SANDS]:[e.CHARIZARD,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.NINETALES,e.DIGLETT,e.DUGTRIO,e.ARCANINE,e.RAPIDASH,e.ONIX,e.CUBONE,e.MAROWAK,e.RHYHORN,e.RHYDON,e.MAGMAR,e.FLAREON,e.MOLTRES,e.MEW,e.TYPHLOSION,e.STEELIX,e.MAGCARGO,e.ENTEI,e.HO_OH,e.BLAZIKEN,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.BALTOY,e.CLAYDOL,e.GROUDON,e.INFERNAPE,e.TORTERRA,e.SHIELDON,e.BASTIODON,e.GIBLE,e.GABITE,e.GARCHOMP,e.HIPPOPOTAS,e.HIPPOWDON,e.RHYPERIOR,e.MAGMORTAR,e.HEATRAN,e.ARCEUS,e.VICTINI,e.DRILBUR,e.EXCADRILL,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.GOLETT,e.GOLURK,e.HEATMOR,e.RESHIRAM,e.LANDORUS,e.DELPHOX,e.DIGGERSBY,e.ZYGARDE,e.DIANCIE,e.VOLCANION,e.INCINEROAR,e.SANDYGAST,e.PALOSSAND,e.MINIOR,e.TURTONATOR,e.CINDERACE,e.CARKOL,e.COALOSSAL,e.SILICOBRA,e.SANDACONDA,e.SIZZLIPEDE,e.CENTISKORCH,e.SKELEDIRGE,e.ARMAROUGE,e.SANDY_SHOCKS,e.GOUGING_FIRE,e.TERAPAGOS,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MAROWAK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE],[t.TERA_BLAST]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.BELDUM,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETOT,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BURMY,e.WORMADAM,e.MOTHIM,e.COMBEE,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.TYNAMO,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.SCATTERBUG,e.SPEWPA,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.CHEWTLE,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.APPLIN,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.PERRSERKER,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.PECHARUNT,e.GALAR_MEOWTH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.ICE_SPINNER]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.ARTICUNO,e.DRAGONITE,e.MEW,e.MARILL,e.AZUMARILL,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.DELIBIRD,e.DONPHAN,e.HITMONTOP,e.LUDICOLO,e.SNORUNT,e.GLALIE,e.REGICE,e.REGISTEEL,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BUIZEL,e.FLOATZEL,e.BRONZOR,e.BRONZONG,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.FROSLASS,e.CINCCINO,e.CRYOGONAL,e.MIENSHAO,e.BERGMITE,e.AVALUGG,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.CRABOMINABLE,e.MAREANIE,e.TOXAPEX,e.KOMALA,e.MAGEARNA,e.DREDNAW,e.FROSMOTH,e.EISCUE,e.QUAQUAVAL,e.CYCLIZAR,e.CETODDLE,e.CETITAN,e.DUDUNSPARCE,e.GREAT_TUSK,e.IRON_TREADS,e.IRON_BUNDLE,e.CHIEN_PAO,e.TERAPAGOS,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,[e.URSHIFU,"rapid-strike"],e.HISUI_LILLIGANT,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG],[t.SNOWSCAPE]:[e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.CHANSEY,e.LAPRAS,e.ARTICUNO,e.DRAGONITE,e.MEW,e.MARILL,e.AZUMARILL,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.MISDREAVUS,e.SNEASEL,e.SWINUB,e.PILOSWINE,e.DELIBIRD,e.BLISSEY,e.SUICUNE,e.WINGULL,e.PELIPPER,e.SPOINK,e.GRUMPIG,e.ALTARIA,e.SNORUNT,e.GLALIE,e.LUVDISC,e.REGICE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.SHELLOS,e.GASTRODON,e.MISMAGIUS,e.HAPPINY,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.GLACEON,e.MAMOSWINE,e.FROSLASS,e.PALKIA,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.BASCULIN,e.ALOMOMOLA,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.TORNADUS,e.KYUREM,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.SKRELP,e.DRAGALGE,e.BERGMITE,e.AVALUGG,e.DIANCIE,e.PRIMARINA,e.CRABOMINABLE,e.MAGEARNA,e.INTELEON,e.FROSMOTH,e.EISCUE,e.GLASTRIER,e.BASCULEGION,e.CETODDLE,e.CETITAN,e.VELUZA,e.SCREAM_TAIL,e.IRON_BUNDLE,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.CHIEN_PAO,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_ARTICUNO,[e.CALYREX,"ice"],e.HISUI_SAMUROTT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_AVALUGG],[t.POUNCE]:[e.VENONAT,e.VENOMOTH,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.SCYTHER,e.MEW,e.SPINARAK,e.ARIADOS,e.YANMA,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.SCIZOR,e.HERACROSS,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKING,e.VOLBEAT,e.ILLUMISE,e.SEVIPER,e.SHUPPET,e.BANETTE,e.KRICKETUNE,e.VESPIQUEN,e.YANMEGA,e.HEATRAN,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.LARVESTA,e.VOLCARONA,e.SCATTERBUG,e.SPEWPA,e.VIVILLON,e.CLAUNCHER,e.CLAWITZER,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CUTIEFLY,e.RIBOMBEE,e.MAREANIE,e.TOXAPEX,e.MIMIKYU,e.APPLIN,e.FLAPPLE,e.APPLETUN,e.CRAMORANT,e.SNOM,e.FROSMOTH,e.DRAKLOAK,e.DRAGAPULT,e.KLEAVOR,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.SQUAWKABILLY,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.FLAMIGO,e.DUDUNSPARCE,e.IRON_MOTH,e.DIPPLIN,e.HYDRAPPLE],[t.TRAILBLAZE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ODDISH,e.GLOOM,e.VILEPLUME,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.DODRIO,e.DROWZEE,e.HYPNO,e.HITMONCHAN,e.CHANSEY,e.SCYTHER,e.TAUROS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.SNORLAX,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.SPINARAK,e.ARIADOS,e.PICHU,e.IGGLYBUFF,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.GIRAFARIG,e.SNUBBULL,e.GRANBULL,e.SCIZOR,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SWINUB,e.PILOSWINE,e.DELIBIRD,e.HOUNDOUR,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.STANTLER,e.ELEKID,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.POOCHYENA,e.MIGHTYENA,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.VIGOROTH,e.SLAKING,e.MEDITITE,e.MEDICHAM,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.NUMEL,e.CAMERUPT,e.SPOINK,e.GRUMPIG,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.SEVIPER,e.BANETTE,e.TROPIUS,e.SNORUNT,e.GLALIE,e.METANG,e.METAGROSS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.PACHIRISU,e.AMBIPOM,e.STUNKY,e.SKUNTANK,e.BONSLY,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.ELECTIVIRE,e.LEAFEON,e.GLACEON,e.MAMOSWINE,e.FROSLASS,e.SHAYMIN,e.ARCEUS,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.BLITZLE,e.ZEBSTRIKA,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.PETILIL,e.LILLIGANT,e.SCRAGGY,e.SCRAFTY,e.DUCKLETT,e.MINCCINO,e.CINCCINO,e.SWANNA,e.DEERLING,e.SAWSBUCK,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.LARVESTA,e.VOLCARONA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.MEOWSTIC,e.MALAMAR,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.PHANTUMP,e.TREVENANT,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.YUNGOOS,e.GUMSHOOS,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.SALANDIT,e.SALAZZLE,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.KOMALA,e.MIMIKYU,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SKWOVET,e.GREEDENT,e.FLAPPLE,e.APPLETUN,e.TOXTRICITY,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.PERRSERKER,e.FALINKS,e.ZACIAN,e.ZAMAZENTA,e.URSHIFU,e.ZARUDE,e.GLASTRIER,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.CYCLIZAR,e.CLODSIRE,e.FARIGIRAF,e.BRUTE_BONNET,e.SLITHER_WING,e.WO_CHIEN,e.IRON_LEAVES,e.MUNKIDORI,e.OGERPON,e.ALOLA_RAICHU,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_ZAPDOS,[e.CALYREX,"ice"],e.HISUI_SNEASEL,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.CHILLING_WATER]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.CHANSEY,e.HORSEA,e.SEADRA,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.SNORLAX,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.CHINCHOU,e.LANTURN,e.CLEFFA,e.MARILL,e.AZUMARILL,e.POLITOED,e.AIPOM,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.DUNSPARCE,e.QWILFISH,e.DELIBIRD,e.KINGDRA,e.BLISSEY,e.SUICUNE,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.WINGULL,e.PELIPPER,e.SURSKIT,e.MASQUERAIN,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.VOLBEAT,e.SPOINK,e.GRUMPIG,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.FEEBAS,e.MILOTIC,e.SNORUNT,e.GLALIE,e.LATIAS,e.LATIOS,e.KYOGRE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.HONCHKROW,e.MUNCHLAX,e.CROAGUNK,e.TOXICROAK,e.FINNEON,e.LUMINEON,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.GLACEON,e.FROSLASS,e.PALKIA,e.PHIONE,e.MANAPHY,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.BASCULIN,e.MINCCINO,e.CINCCINO,e.DUCKLETT,e.SWANNA,e.ALOMOMOLA,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.TORNADUS,e.KELDEO,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.GOOMY,e.SLIGGOO,e.GOODRA,e.BERGMITE,e.AVALUGG,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.YUNGOOS,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.ORANGURU,e.PASSIMIAN,e.SANDYGAST,e.PALOSSAND,e.BRUXISH,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.CHEWTLE,e.DREDNAW,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.PERRSERKER,e.PINCURCHIN,e.EISCUE,e.BASCULEGION,e.OVERQWIL,e.MEOWSCARADA,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.MAUSHOLD,e.TADBULB,e.BELLIBOLT,e.WIGLETT,e.WUGTRIO,e.FINIZEN,e.PALAFIN,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.CLODSIRE,e.DUDUNSPARCE,e.IRON_BUNDLE,e.WALKING_WAKE,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ETERNAL_FLOETTE,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,[e.URSHIFU,"rapid-strike"],e.HISUI_QWILFISH,e.HISUI_SAMUROTT,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,[e.PALDEA_TAUROS,"aqua"],e.PALDEA_WOOPER],[t.HARD_PRESS]:[e.GRAVELER,e.GOLEM,e.SNORLAX,e.MEW,e.FORRETRESS,e.SCIZOR,e.TYRANITAR,e.SWAMPERT,e.SLAKING,e.CRAWDAUNT,e.METANG,e.METAGROSS,e.REGIROCK,e.REGISTEEL,e.TORTERRA,e.SHIELDON,e.BASTIODON,e.BRONZONG,e.HIPPOWDON,e.ABOMASNOW,e.MAGNEZONE,e.MAMOSWINE,e.PROBOPASS,e.DUSKNOIR,e.HEATRAN,e.REGIGIGAS,e.EMBOAR,e.CONKELDURR,e.BEARTIC,e.GOLURK,e.CRABOMINABLE,e.STONJOURNER,e.COPPERAJAH,e.URSALUNA,e.GARGANACL,e.TINKATON,e.PALAFIN,e.REVAVROOM,e.CETITAN,e.IRON_TREADS,e.IRON_HANDS,e.OKIDOGI,e.ARCHALUDON,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.HISUI_AVALUGG,e.BLOODMOON_URSALUNA],[t.DRAGON_CHEER]:[e.CHARIZARD,e.GYARADOS,e.LAPRAS,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.AMPHAROS,e.SCEPTILE,e.FLYGON,e.SWABLU,e.ALTARIA,e.MILOTIC,e.BAGON,e.SHELGON,e.SALAMENCE,e.LATIAS,e.LATIOS,e.RAYQUAZA,e.CRANIDOS,e.RAMPARDOS,e.GIBLE,e.GABITE,e.GARCHOMP,e.AXEW,e.FRAXURE,e.HAXORUS,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.GOODRA,e.NOIVERN,e.SALAZZLE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.DURALUDON,e.DRAKLOAK,e.DRAGAPULT,e.REGIDRAGO,e.CYCLIZAR,e.TATSUGIRI,e.IRON_JUGULIS,e.BAXCALIBUR,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.DIPPLIN,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.ALOLA_EXEGGUTOR,e.HISUI_GOODRA],[t.ALLURING_VOICE]:[e.PIKACHU,e.RAICHU,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.DEWGONG,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.MEW,e.CLEFFA,e.IGGLYBUFF,e.MARILL,e.AZUMARILL,e.ESPEON,e.UMBREON,e.BLISSEY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.AZURILL,e.PLUSLE,e.MINUN,e.FLYGON,e.ALTARIA,e.MILOTIC,e.LATIAS,e.PACHIRISU,e.FINNEON,e.LUMINEON,e.LEAFEON,e.GLACEON,e.GALLADE,e.PHIONE,e.MANAPHY,e.LILLIGANT,e.MINCCINO,e.CINCCINO,e.SWANNA,e.ALOMOMOLA,e.MELOETTA,e.FLABEBE,e.FLOETTE,e.FLORGES,e.MEOWSTIC,e.SYLVEON,e.PRIMARINA,e.ORICORIO,e.RIBOMBEE,e.COMFEY,e.ALCREMIE,e.ENAMORUS,e.SKELEDIRGE,e.FIDOUGH,e.DACHSBUN,e.ARBOLIVA,e.FEZANDIPITI,e.ALOLA_RAICHU,e.ETERNAL_FLOETTE,[e.INDEEDEE,"female"]],[t.TEMPER_FLARE]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.GROWLITHE,e.ARCANINE,e.MAGMAR,e.GYARADOS,e.FLAREON,e.MOLTRES,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.SNUBBULL,e.GRANBULL,e.SLUGMA,e.MAGCARGO,e.HOUNDOUR,e.HOUNDOOM,e.MAGBY,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SHELGON,e.SALAMENCE,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.DRIFLOON,e.DRIFBLIM,e.STUNKY,e.SKUNTANK,e.RHYPERIOR,e.MAGMORTAR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.FLETCHINDER,e.TALONFLAME,e.PYROAR,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.TOUCANNON,e.SALANDIT,e.SALAZZLE,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.KLAWF,e.SCOVILLAIN,e.REVAVROOM,e.CYCLIZAR,e.GREAT_TUSK,e.SLITHER_WING,e.CHI_YU,e.KORAIDON,e.GOUGING_FIRE,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,[e.PALDEA_TAUROS,"blaze"]],[t.SUPERCELL_SLAM]:[e.ELECTRODE,e.RHYHORN,e.RHYDON,e.ELECTABUZZ,e.SNORLAX,e.ZAPDOS,e.MEW,e.AMPHAROS,e.ELEKID,e.RAIKOU,e.MANECTRIC,e.LUXRAY,e.RAMPARDOS,e.MAGNEZONE,e.RHYPERIOR,e.ELECTIVIRE,e.PROBOPASS,e.ARCEUS,e.BLITZLE,e.ZEBSTRIKA,e.EELEKTROSS,e.THUNDURUS,e.ZEKROM,e.VIKAVOLT,e.PINCURCHIN,e.COPPERAJAH,e.REGIELEKI,e.URSALUNA,e.PAWMOT,e.BELLIBOLT,e.KILOWATTREL,e.CYCLIZAR,e.GREAT_TUSK,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_HANDS,e.IRON_THORNS,e.MIRAIDON,e.RAGING_BOLT,e.IRON_CROWN,e.TERAPAGOS,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.HISUI_ELECTRODE],[t.PSYCHIC_NOISE]:[e.JIGGLYPUFF,e.WIGGLYTUFF,e.VENONAT,e.VENOMOTH,e.PSYDUCK,e.GOLDUCK,e.SLOWBRO,e.GENGAR,e.DROWZEE,e.HYPNO,e.EXEGGCUTE,e.EXEGGUTOR,e.LAPRAS,e.MEWTWO,e.MEW,e.NOCTOWL,e.YANMA,e.ESPEON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.LUGIA,e.GARDEVOIR,e.GRUMPIG,e.FLYGON,e.CHIMECHO,e.METANG,e.METAGROSS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.VESPIQUEN,e.MISMAGIUS,e.HONCHKROW,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.YANMEGA,e.UXIE,e.MESPRIT,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.REUNICLUS,e.DELPHOX,e.FLORGES,e.ESPURR,e.MEOWSTIC,e.MALAMAR,e.TREVENANT,e.NOIVERN,e.HOOPA,e.PRIMARINA,e.RIBOMBEE,e.ORANGURU,e.BRUXISH,e.TOXTRICITY,e.HATTERENE,e.INDEEDEE,e.WYRDEER,e.RABSCA,e.FARIGIRAF,e.SCREAM_TAIL,e.MUNKIDORI,e.IRON_CROWN,e.ALOLA_RAICHU,e.ALOLA_EXEGGUTOR,e.GALAR_ARTICUNO,e.GALAR_SLOWKING,e.HISUI_BRAVIARY],[t.UPPER_HAND]:[e.PIKACHU,e.RAICHU,e.POLIWRATH,e.HITMONLEE,e.HITMONCHAN,e.MEW,e.AIPOM,e.HERACROSS,e.SNEASEL,e.TYROGUE,e.HITMONTOP,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.BLAZIKEN,e.SHIFTRY,e.HARIYAMA,e.MEDITITE,e.MEDICHAM,e.ZANGOOSE,e.MONFERNO,e.INFERNAPE,e.AMBIPOM,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.GALLADE,e.SAMUROTT,e.CONKELDURR,e.SCRAGGY,e.SCRAFTY,e.MIENFOO,e.MIENSHAO,e.COBALION,e.TERRAKION,e.VIRIZION,e.KELDEO,e.GRENINJA,e.TALONFLAME,e.HAWLUCHA,e.CRABRAWLER,e.CRABOMINABLE,[e.LYCANROC,"midnight"],e.PASSIMIAN,e.HAKAMO_O,e.KOMMO_O,e.FALINKS,e.SNEASLER,e.QUAQUAVAL,e.SPIDOPS,e.PAWMO,e.PAWMOT,e.FLAMIGO,e.OKIDOGI,e.ALOLA_RAICHU,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE]},Xo={[t.MEGA_PUNCH]:W.GREAT,[t.PAY_DAY]:W.ULTRA,[t.FIRE_PUNCH]:W.GREAT,[t.ICE_PUNCH]:W.GREAT,[t.THUNDER_PUNCH]:W.GREAT,[t.SWORDS_DANCE]:W.COMMON,[t.CUT]:W.COMMON,[t.FLY]:W.COMMON,[t.MEGA_KICK]:W.GREAT,[t.BODY_SLAM]:W.GREAT,[t.TAKE_DOWN]:W.GREAT,[t.DOUBLE_EDGE]:W.ULTRA,[t.PIN_MISSILE]:W.COMMON,[t.ROAR]:W.COMMON,[t.FLAMETHROWER]:W.ULTRA,[t.HYDRO_PUMP]:W.ULTRA,[t.SURF]:W.ULTRA,[t.ICE_BEAM]:W.ULTRA,[t.BLIZZARD]:W.ULTRA,[t.PSYBEAM]:W.GREAT,[t.HYPER_BEAM]:W.ULTRA,[t.LOW_KICK]:W.COMMON,[t.COUNTER]:W.COMMON,[t.STRENGTH]:W.GREAT,[t.SOLAR_BEAM]:W.ULTRA,[t.FIRE_SPIN]:W.COMMON,[t.THUNDERBOLT]:W.ULTRA,[t.THUNDER_WAVE]:W.COMMON,[t.THUNDER]:W.ULTRA,[t.EARTHQUAKE]:W.ULTRA,[t.DIG]:W.GREAT,[t.TOXIC]:W.GREAT,[t.PSYCHIC]:W.ULTRA,[t.AGILITY]:W.COMMON,[t.NIGHT_SHADE]:W.COMMON,[t.SCREECH]:W.COMMON,[t.DOUBLE_TEAM]:W.COMMON,[t.CONFUSE_RAY]:W.COMMON,[t.LIGHT_SCREEN]:W.COMMON,[t.HAZE]:W.COMMON,[t.REFLECT]:W.COMMON,[t.FOCUS_ENERGY]:W.COMMON,[t.METRONOME]:W.COMMON,[t.SELF_DESTRUCT]:W.GREAT,[t.FIRE_BLAST]:W.ULTRA,[t.WATERFALL]:W.GREAT,[t.SWIFT]:W.COMMON,[t.AMNESIA]:W.COMMON,[t.DREAM_EATER]:W.GREAT,[t.LEECH_LIFE]:W.ULTRA,[t.FLASH]:W.COMMON,[t.EXPLOSION]:W.GREAT,[t.REST]:W.COMMON,[t.ROCK_SLIDE]:W.GREAT,[t.TRI_ATTACK]:W.ULTRA,[t.SUPER_FANG]:W.COMMON,[t.SUBSTITUTE]:W.COMMON,[t.THIEF]:W.GREAT,[t.SNORE]:W.COMMON,[t.CURSE]:W.COMMON,[t.REVERSAL]:W.COMMON,[t.SPITE]:W.COMMON,[t.PROTECT]:W.COMMON,[t.SCARY_FACE]:W.COMMON,[t.SLUDGE_BOMB]:W.GREAT,[t.MUD_SLAP]:W.COMMON,[t.SPIKES]:W.COMMON,[t.ICY_WIND]:W.GREAT,[t.OUTRAGE]:W.ULTRA,[t.SANDSTORM]:W.COMMON,[t.GIGA_DRAIN]:W.ULTRA,[t.ENDURE]:W.COMMON,[t.CHARM]:W.COMMON,[t.FALSE_SWIPE]:W.COMMON,[t.SWAGGER]:W.COMMON,[t.STEEL_WING]:W.GREAT,[t.ATTRACT]:W.COMMON,[t.SLEEP_TALK]:W.COMMON,[t.HEAL_BELL]:W.COMMON,[t.RETURN]:W.ULTRA,[t.FRUSTRATION]:W.COMMON,[t.SAFEGUARD]:W.COMMON,[t.PAIN_SPLIT]:W.COMMON,[t.MEGAHORN]:W.ULTRA,[t.BATON_PASS]:W.COMMON,[t.ENCORE]:W.COMMON,[t.IRON_TAIL]:W.GREAT,[t.METAL_CLAW]:W.COMMON,[t.SYNTHESIS]:W.GREAT,[t.HIDDEN_POWER]:W.GREAT,[t.RAIN_DANCE]:W.COMMON,[t.SUNNY_DAY]:W.COMMON,[t.CRUNCH]:W.GREAT,[t.PSYCH_UP]:W.COMMON,[t.SHADOW_BALL]:W.ULTRA,[t.FUTURE_SIGHT]:W.GREAT,[t.ROCK_SMASH]:W.COMMON,[t.WHIRLPOOL]:W.COMMON,[t.BEAT_UP]:W.COMMON,[t.UPROAR]:W.GREAT,[t.HEAT_WAVE]:W.ULTRA,[t.HAIL]:W.COMMON,[t.TORMENT]:W.COMMON,[t.WILL_O_WISP]:W.COMMON,[t.FACADE]:W.GREAT,[t.FOCUS_PUNCH]:W.COMMON,[t.NATURE_POWER]:W.COMMON,[t.CHARGE]:W.COMMON,[t.TAUNT]:W.COMMON,[t.HELPING_HAND]:W.COMMON,[t.TRICK]:W.COMMON,[t.SUPERPOWER]:W.ULTRA,[t.RECYCLE]:W.COMMON,[t.REVENGE]:W.GREAT,[t.BRICK_BREAK]:W.GREAT,[t.KNOCK_OFF]:W.GREAT,[t.ENDEAVOR]:W.COMMON,[t.SKILL_SWAP]:W.COMMON,[t.IMPRISON]:W.COMMON,[t.DIVE]:W.GREAT,[t.FEATHER_DANCE]:W.COMMON,[t.BLAZE_KICK]:W.GREAT,[t.HYPER_VOICE]:W.ULTRA,[t.BLAST_BURN]:W.ULTRA,[t.HYDRO_CANNON]:W.ULTRA,[t.WEATHER_BALL]:W.COMMON,[t.FAKE_TEARS]:W.COMMON,[t.AIR_CUTTER]:W.GREAT,[t.OVERHEAT]:W.ULTRA,[t.ROCK_TOMB]:W.GREAT,[t.METAL_SOUND]:W.COMMON,[t.COSMIC_POWER]:W.COMMON,[t.SIGNAL_BEAM]:W.GREAT,[t.SAND_TOMB]:W.COMMON,[t.MUDDY_WATER]:W.GREAT,[t.BULLET_SEED]:W.GREAT,[t.AERIAL_ACE]:W.GREAT,[t.ICICLE_SPEAR]:W.GREAT,[t.IRON_DEFENSE]:W.GREAT,[t.DRAGON_CLAW]:W.ULTRA,[t.FRENZY_PLANT]:W.ULTRA,[t.BULK_UP]:W.COMMON,[t.BOUNCE]:W.GREAT,[t.MUD_SHOT]:W.GREAT,[t.POISON_TAIL]:W.GREAT,[t.COVET]:W.GREAT,[t.MAGICAL_LEAF]:W.GREAT,[t.CALM_MIND]:W.GREAT,[t.LEAF_BLADE]:W.ULTRA,[t.DRAGON_DANCE]:W.GREAT,[t.ROCK_BLAST]:W.GREAT,[t.WATER_PULSE]:W.GREAT,[t.ROOST]:W.GREAT,[t.GRAVITY]:W.COMMON,[t.GYRO_BALL]:W.COMMON,[t.BRINE]:W.GREAT,[t.PLUCK]:W.GREAT,[t.TAILWIND]:W.GREAT,[t.U_TURN]:W.GREAT,[t.CLOSE_COMBAT]:W.ULTRA,[t.PAYBACK]:W.COMMON,[t.ASSURANCE]:W.COMMON,[t.EMBARGO]:W.COMMON,[t.FLING]:W.COMMON,[t.GASTRO_ACID]:W.GREAT,[t.POWER_SWAP]:W.COMMON,[t.GUARD_SWAP]:W.COMMON,[t.WORRY_SEED]:W.GREAT,[t.TOXIC_SPIKES]:W.GREAT,[t.FLARE_BLITZ]:W.ULTRA,[t.AURA_SPHERE]:W.GREAT,[t.ROCK_POLISH]:W.COMMON,[t.POISON_JAB]:W.GREAT,[t.DARK_PULSE]:W.GREAT,[t.AQUA_TAIL]:W.GREAT,[t.SEED_BOMB]:W.GREAT,[t.AIR_SLASH]:W.GREAT,[t.X_SCISSOR]:W.GREAT,[t.BUG_BUZZ]:W.GREAT,[t.DRAGON_PULSE]:W.GREAT,[t.POWER_GEM]:W.GREAT,[t.DRAIN_PUNCH]:W.GREAT,[t.VACUUM_WAVE]:W.COMMON,[t.FOCUS_BLAST]:W.GREAT,[t.ENERGY_BALL]:W.GREAT,[t.BRAVE_BIRD]:W.ULTRA,[t.EARTH_POWER]:W.ULTRA,[t.GIGA_IMPACT]:W.GREAT,[t.NASTY_PLOT]:W.COMMON,[t.AVALANCHE]:W.GREAT,[t.SHADOW_CLAW]:W.GREAT,[t.THUNDER_FANG]:W.GREAT,[t.ICE_FANG]:W.GREAT,[t.FIRE_FANG]:W.GREAT,[t.PSYCHO_CUT]:W.GREAT,[t.ZEN_HEADBUTT]:W.GREAT,[t.FLASH_CANNON]:W.GREAT,[t.ROCK_CLIMB]:W.GREAT,[t.DEFOG]:W.COMMON,[t.TRICK_ROOM]:W.COMMON,[t.DRACO_METEOR]:W.ULTRA,[t.LEAF_STORM]:W.ULTRA,[t.POWER_WHIP]:W.ULTRA,[t.CROSS_POISON]:W.GREAT,[t.GUNK_SHOT]:W.ULTRA,[t.IRON_HEAD]:W.GREAT,[t.STONE_EDGE]:W.ULTRA,[t.STEALTH_ROCK]:W.COMMON,[t.GRASS_KNOT]:W.ULTRA,[t.BUG_BITE]:W.GREAT,[t.CHARGE_BEAM]:W.GREAT,[t.HONE_CLAWS]:W.COMMON,[t.WONDER_ROOM]:W.COMMON,[t.PSYSHOCK]:W.GREAT,[t.VENOSHOCK]:W.GREAT,[t.MAGIC_ROOM]:W.COMMON,[t.SMACK_DOWN]:W.COMMON,[t.SLUDGE_WAVE]:W.GREAT,[t.HEAVY_SLAM]:W.GREAT,[t.ELECTRO_BALL]:W.GREAT,[t.FLAME_CHARGE]:W.GREAT,[t.LOW_SWEEP]:W.GREAT,[t.ACID_SPRAY]:W.COMMON,[t.FOUL_PLAY]:W.ULTRA,[t.ROUND]:W.COMMON,[t.ECHOED_VOICE]:W.COMMON,[t.STORED_POWER]:W.COMMON,[t.ALLY_SWITCH]:W.COMMON,[t.SCALD]:W.GREAT,[t.HEX]:W.GREAT,[t.SKY_DROP]:W.GREAT,[t.INCINERATE]:W.GREAT,[t.QUASH]:W.COMMON,[t.ACROBATICS]:W.GREAT,[t.RETALIATE]:W.GREAT,[t.WATER_PLEDGE]:W.GREAT,[t.FIRE_PLEDGE]:W.GREAT,[t.GRASS_PLEDGE]:W.GREAT,[t.VOLT_SWITCH]:W.GREAT,[t.STRUGGLE_BUG]:W.COMMON,[t.BULLDOZE]:W.GREAT,[t.FROST_BREATH]:W.GREAT,[t.DRAGON_TAIL]:W.GREAT,[t.WORK_UP]:W.COMMON,[t.ELECTROWEB]:W.GREAT,[t.WILD_CHARGE]:W.GREAT,[t.DRILL_RUN]:W.GREAT,[t.SACRED_SWORD]:W.ULTRA,[t.RAZOR_SHELL]:W.GREAT,[t.HEAT_CRASH]:W.GREAT,[t.TAIL_SLAP]:W.GREAT,[t.HURRICANE]:W.ULTRA,[t.SNARL]:W.COMMON,[t.PHANTOM_FORCE]:W.ULTRA,[t.PETAL_BLIZZARD]:W.GREAT,[t.DISARMING_VOICE]:W.GREAT,[t.DRAINING_KISS]:W.GREAT,[t.GRASSY_TERRAIN]:W.COMMON,[t.MISTY_TERRAIN]:W.COMMON,[t.PLAY_ROUGH]:W.GREAT,[t.CONFIDE]:W.COMMON,[t.MYSTICAL_FIRE]:W.GREAT,[t.EERIE_IMPULSE]:W.COMMON,[t.VENOM_DRENCH]:W.COMMON,[t.ELECTRIC_TERRAIN]:W.COMMON,[t.DAZZLING_GLEAM]:W.ULTRA,[t.INFESTATION]:W.COMMON,[t.POWER_UP_PUNCH]:W.GREAT,[t.DARKEST_LARIAT]:W.GREAT,[t.HIGH_HORSEPOWER]:W.ULTRA,[t.SOLAR_BLADE]:W.GREAT,[t.THROAT_CHOP]:W.GREAT,[t.POLLEN_PUFF]:W.GREAT,[t.PSYCHIC_TERRAIN]:W.COMMON,[t.LUNGE]:W.GREAT,[t.SPEED_SWAP]:W.COMMON,[t.SMART_STRIKE]:W.GREAT,[t.BRUTAL_SWING]:W.GREAT,[t.AURORA_VEIL]:W.COMMON,[t.PSYCHIC_FANGS]:W.GREAT,[t.STOMPING_TANTRUM]:W.GREAT,[t.LIQUIDATION]:W.ULTRA,[t.BODY_PRESS]:W.ULTRA,[t.BREAKING_SWIPE]:W.GREAT,[t.STEEL_BEAM]:W.ULTRA,[t.EXPANDING_FORCE]:W.GREAT,[t.STEEL_ROLLER]:W.COMMON,[t.SCALE_SHOT]:W.ULTRA,[t.METEOR_BEAM]:W.GREAT,[t.MISTY_EXPLOSION]:W.COMMON,[t.GRASSY_GLIDE]:W.COMMON,[t.RISING_VOLTAGE]:W.COMMON,[t.TERRAIN_PULSE]:W.COMMON,[t.SKITTER_SMACK]:W.GREAT,[t.BURNING_JEALOUSY]:W.GREAT,[t.LASH_OUT]:W.GREAT,[t.POLTERGEIST]:W.ULTRA,[t.CORROSIVE_GAS]:W.COMMON,[t.COACHING]:W.COMMON,[t.FLIP_TURN]:W.COMMON,[t.TRIPLE_AXEL]:W.COMMON,[t.DUAL_WINGBEAT]:W.COMMON,[t.SCORCHING_SANDS]:W.GREAT,[t.TERA_BLAST]:W.GREAT,[t.ICE_SPINNER]:W.GREAT,[t.SNOWSCAPE]:W.COMMON,[t.POUNCE]:W.COMMON,[t.TRAILBLAZE]:W.COMMON,[t.CHILLING_WATER]:W.COMMON,[t.HARD_PRESS]:W.GREAT,[t.DRAGON_CHEER]:W.COMMON,[t.ALLURING_VOICE]:W.GREAT,[t.TEMPER_FLARE]:W.GREAT,[t.SUPERCELL_SLAM]:W.GREAT,[t.PSYCHIC_NOISE]:W.GREAT,[t.UPPER_HAND]:W.COMMON};var be=(E=>(E[E.HARDY=0]="HARDY",E[E.LONELY=1]="LONELY",E[E.BRAVE=2]="BRAVE",E[E.ADAMANT=3]="ADAMANT",E[E.NAUGHTY=4]="NAUGHTY",E[E.BOLD=5]="BOLD",E[E.DOCILE=6]="DOCILE",E[E.RELAXED=7]="RELAXED",E[E.IMPISH=8]="IMPISH",E[E.LAX=9]="LAX",E[E.TIMID=10]="TIMID",E[E.HASTY=11]="HASTY",E[E.SERIOUS=12]="SERIOUS",E[E.JOLLY=13]="JOLLY",E[E.NAIVE=14]="NAIVE",E[E.MODEST=15]="MODEST",E[E.MILD=16]="MILD",E[E.QUIET=17]="QUIET",E[E.BASHFUL=18]="BASHFUL",E[E.RASH=19]="RASH",E[E.CALM=20]="CALM",E[E.GENTLE=21]="GENTLE",E[E.SASSY=22]="SASSY",E[E.CAREFUL=23]="CAREFUL",E[E.QUIRKY=24]="QUIRKY",E))(be||{});function WO(E,A=!1,s=!1,R=!1,I=bR.DEFAULT){let i=Bn(be[E]);if(U.exists("nature:"+i)&&(i=U.t("nature:"+i)),A){let a=null,L=null;for(const l of Kn){const D=So(E,l);D>1?a=l:D<1&&(L=l)}const S=s?V.SUMMARY_ALT:V.WINDOW,o=R?(l,D)=>l:(l,D)=>jR(l,D,I);a&&L?i=`${o(`${i}${s?" ":`
`}(`,S)}${o(`+${U.t(_a(a))}`,V.SUMMARY_PINK)}${o("/",S)}${o(`-${U.t(_a(L))}`,V.SUMMARY_BLUE)}${o(")",S)}`:i=o(`${i}${s?" ":`
`}(-)`,S)}return i}T(WO,"getNatureName");function So(E,A){switch(A){case B.ATK:switch(E){case be.LONELY:case be.BRAVE:case be.ADAMANT:case be.NAUGHTY:return 1.1;case be.BOLD:case be.TIMID:case be.MODEST:case be.CALM:return .9}break;case B.DEF:switch(E){case be.BOLD:case be.RELAXED:case be.IMPISH:case be.LAX:return 1.1;case be.LONELY:case be.HASTY:case be.MILD:case be.GENTLE:return .9}break;case B.SPATK:switch(E){case be.MODEST:case be.MILD:case be.QUIET:case be.RASH:return 1.1;case be.ADAMANT:case be.IMPISH:case be.JOLLY:case be.CAREFUL:return .9}break;case B.SPDEF:switch(E){case be.CALM:case be.GENTLE:case be.SASSY:case be.CAREFUL:return 1.1;case be.NAUGHTY:case be.LAX:case be.NAIVE:case be.RASH:return .9}break;case B.SPD:switch(E){case be.TIMID:case be.HASTY:case be.JOLLY:case be.NAIVE:return 1.1;case be.BRAVE:case be.RELAXED:case be.QUIET:case be.SASSY:return .9}break}return 1}T(So,"getNatureStatMultiplier");const f8={},md=class md{constructor(){this.SEED_OVERRIDE="",this.WEATHER_OVERRIDE=Q.NONE,this.BATTLE_TYPE_OVERRIDE=null,this.STARTING_WAVE_OVERRIDE=0,this.STARTING_BIOME_OVERRIDE=r.TOWN,this.ARENA_TINT_OVERRIDE=null,this.XP_MULTIPLIER_OVERRIDE=null,this.NEVER_CRIT_OVERRIDE=!1,this.STARTING_MONEY_OVERRIDE=0,this.WAIVE_SHOP_FEES_OVERRIDE=!1,this.WAIVE_ROLL_FEE_OVERRIDE=!1,this.FREE_CANDY_UPGRADE_OVERRIDE=!1,this.POKEBALL_OVERRIDE={active:!1,pokeballs:{[ge.POKEBALL]:5,[ge.GREAT_BALL]:0,[ge.ULTRA_BALL]:0,[ge.ROGUE_BALL]:0,[ge.MASTER_BALL]:0}},this.ITEM_UNLOCK_OVERRIDE=[],this.BYPASS_TUTORIAL_SKIP_OVERRIDE=!1,this.STATUS_ACTIVATION_OVERRIDE=null,this.STARTER_FORM_OVERRIDES={},this.STARTING_LEVEL_OVERRIDE=0,this.STARTER_SPECIES_OVERRIDE=0,this.STARTER_FUSION_OVERRIDE=!1,this.STARTER_FUSION_SPECIES_OVERRIDE=0,this.ABILITY_OVERRIDE=O.NONE,this.PASSIVE_ABILITY_OVERRIDE=O.NONE,this.STATUS_OVERRIDE=J.NONE,this.GENDER_OVERRIDE=null,this.MOVESET_OVERRIDE=[],this.SHINY_OVERRIDE=null,this.VARIANT_OVERRIDE=null,this.OPP_SPECIES_OVERRIDE=0,this.OPP_FUSION_OVERRIDE=!1,this.OPP_FUSION_SPECIES_OVERRIDE=0,this.OPP_LEVEL_OVERRIDE=0,this.OPP_ABILITY_OVERRIDE=O.NONE,this.OPP_PASSIVE_ABILITY_OVERRIDE=O.NONE,this.OPP_STATUS_OVERRIDE=J.NONE,this.OPP_GENDER_OVERRIDE=null,this.OPP_MOVESET_OVERRIDE=[],this.OPP_SHINY_OVERRIDE=null,this.OPP_VARIANT_OVERRIDE=null,this.OPP_IVS_OVERRIDE=[],this.OPP_FORM_OVERRIDES={},this.OPP_HEALTH_SEGMENTS_OVERRIDE=0,this.EGG_IMMEDIATE_HATCH_OVERRIDE=!1,this.EGG_TIER_OVERRIDE=null,this.EGG_SHINY_OVERRIDE=!1,this.EGG_VARIANT_OVERRIDE=null,this.EGG_FREE_GACHA_PULLS_OVERRIDE=!1,this.EGG_GACHA_PULL_COUNT_OVERRIDE=0,this.UNLIMITED_EGG_COUNT_OVERRIDE=!1,this.MYSTERY_ENCOUNTER_RATE_OVERRIDE=null,this.MYSTERY_ENCOUNTER_TIER_OVERRIDE=null,this.MYSTERY_ENCOUNTER_OVERRIDE=null,this.STARTING_MODIFIER_OVERRIDE=[],this.OPP_MODIFIER_OVERRIDE=[],this.STARTING_HELD_ITEMS_OVERRIDE=[],this.OPP_HELD_ITEMS_OVERRIDE=[],this.ITEM_REWARD_OVERRIDE=[]}};T(md,"DefaultOverrides");let V0=md;const B8=new V0,Ge={...B8,...f8};var C=(E=>(E[E.UNKNOWN=0]="UNKNOWN",E[E.ACE_TRAINER=1]="ACE_TRAINER",E[E.ARTIST=2]="ARTIST",E[E.BACKERS=3]="BACKERS",E[E.BACKPACKER=4]="BACKPACKER",E[E.BAKER=5]="BAKER",E[E.BEAUTY=6]="BEAUTY",E[E.BIKER=7]="BIKER",E[E.BLACK_BELT=8]="BLACK_BELT",E[E.BREEDER=9]="BREEDER",E[E.CLERK=10]="CLERK",E[E.CYCLIST=11]="CYCLIST",E[E.DANCER=12]="DANCER",E[E.DEPOT_AGENT=13]="DEPOT_AGENT",E[E.DOCTOR=14]="DOCTOR",E[E.FIREBREATHER=15]="FIREBREATHER",E[E.FISHERMAN=16]="FISHERMAN",E[E.GUITARIST=17]="GUITARIST",E[E.HARLEQUIN=18]="HARLEQUIN",E[E.HIKER=19]="HIKER",E[E.HOOLIGANS=20]="HOOLIGANS",E[E.HOOPSTER=21]="HOOPSTER",E[E.INFIELDER=22]="INFIELDER",E[E.JANITOR=23]="JANITOR",E[E.LINEBACKER=24]="LINEBACKER",E[E.MAID=25]="MAID",E[E.MUSICIAN=26]="MUSICIAN",E[E.HEX_MANIAC=27]="HEX_MANIAC",E[E.NURSERY_AIDE=28]="NURSERY_AIDE",E[E.OFFICER=29]="OFFICER",E[E.PARASOL_LADY=30]="PARASOL_LADY",E[E.PILOT=31]="PILOT",E[E.POKEFAN=32]="POKEFAN",E[E.PRESCHOOLER=33]="PRESCHOOLER",E[E.PSYCHIC=34]="PSYCHIC",E[E.RANGER=35]="RANGER",E[E.RICH=36]="RICH",E[E.RICH_KID=37]="RICH_KID",E[E.ROUGHNECK=38]="ROUGHNECK",E[E.SAILOR=39]="SAILOR",E[E.SCIENTIST=40]="SCIENTIST",E[E.SMASHER=41]="SMASHER",E[E.SNOW_WORKER=42]="SNOW_WORKER",E[E.STRIKER=43]="STRIKER",E[E.SCHOOL_KID=44]="SCHOOL_KID",E[E.SWIMMER=45]="SWIMMER",E[E.TWINS=46]="TWINS",E[E.VETERAN=47]="VETERAN",E[E.WAITER=48]="WAITER",E[E.WORKER=49]="WORKER",E[E.YOUNGSTER=50]="YOUNGSTER",E[E.ROCKET_GRUNT=51]="ROCKET_GRUNT",E[E.ARCHER=52]="ARCHER",E[E.ARIANA=53]="ARIANA",E[E.PROTON=54]="PROTON",E[E.PETREL=55]="PETREL",E[E.MAGMA_GRUNT=56]="MAGMA_GRUNT",E[E.TABITHA=57]="TABITHA",E[E.COURTNEY=58]="COURTNEY",E[E.AQUA_GRUNT=59]="AQUA_GRUNT",E[E.MATT=60]="MATT",E[E.SHELLY=61]="SHELLY",E[E.GALACTIC_GRUNT=62]="GALACTIC_GRUNT",E[E.JUPITER=63]="JUPITER",E[E.MARS=64]="MARS",E[E.SATURN=65]="SATURN",E[E.PLASMA_GRUNT=66]="PLASMA_GRUNT",E[E.ZINZOLIN=67]="ZINZOLIN",E[E.ROOD=68]="ROOD",E[E.FLARE_GRUNT=69]="FLARE_GRUNT",E[E.BRYONY=70]="BRYONY",E[E.XEROSIC=71]="XEROSIC",E[E.AETHER_GRUNT=72]="AETHER_GRUNT",E[E.FABA=73]="FABA",E[E.SKULL_GRUNT=74]="SKULL_GRUNT",E[E.PLUMERIA=75]="PLUMERIA",E[E.MACRO_GRUNT=76]="MACRO_GRUNT",E[E.OLEANA=77]="OLEANA",E[E.STAR_GRUNT=78]="STAR_GRUNT",E[E.GIACOMO=79]="GIACOMO",E[E.MELA=80]="MELA",E[E.ATTICUS=81]="ATTICUS",E[E.ORTEGA=82]="ORTEGA",E[E.ERI=83]="ERI",E[E.ROCKET_BOSS_GIOVANNI_1=84]="ROCKET_BOSS_GIOVANNI_1",E[E.ROCKET_BOSS_GIOVANNI_2=85]="ROCKET_BOSS_GIOVANNI_2",E[E.MAXIE=86]="MAXIE",E[E.MAXIE_2=87]="MAXIE_2",E[E.ARCHIE=88]="ARCHIE",E[E.ARCHIE_2=89]="ARCHIE_2",E[E.CYRUS=90]="CYRUS",E[E.CYRUS_2=91]="CYRUS_2",E[E.GHETSIS=92]="GHETSIS",E[E.GHETSIS_2=93]="GHETSIS_2",E[E.LYSANDRE=94]="LYSANDRE",E[E.LYSANDRE_2=95]="LYSANDRE_2",E[E.LUSAMINE=96]="LUSAMINE",E[E.LUSAMINE_2=97]="LUSAMINE_2",E[E.GUZMA=98]="GUZMA",E[E.GUZMA_2=99]="GUZMA_2",E[E.ROSE=100]="ROSE",E[E.ROSE_2=101]="ROSE_2",E[E.PENNY=102]="PENNY",E[E.PENNY_2=103]="PENNY_2",E[E.BUCK=104]="BUCK",E[E.CHERYL=105]="CHERYL",E[E.MARLEY=106]="MARLEY",E[E.MIRA=107]="MIRA",E[E.RILEY=108]="RILEY",E[E.VICTOR=109]="VICTOR",E[E.VICTORIA=110]="VICTORIA",E[E.VIVI=111]="VIVI",E[E.VICKY=112]="VICKY",E[E.VITO=113]="VITO",E[E.BUG_TYPE_SUPERFAN=114]="BUG_TYPE_SUPERFAN",E[E.EXPERT_POKEMON_BREEDER=115]="EXPERT_POKEMON_BREEDER",E[E.FUTURE_SELF_M=116]="FUTURE_SELF_M",E[E.FUTURE_SELF_F=117]="FUTURE_SELF_F",E[E.BROCK=200]="BROCK",E[E.MISTY=201]="MISTY",E[E.LT_SURGE=202]="LT_SURGE",E[E.ERIKA=203]="ERIKA",E[E.JANINE=204]="JANINE",E[E.SABRINA=205]="SABRINA",E[E.BLAINE=206]="BLAINE",E[E.GIOVANNI=207]="GIOVANNI",E[E.FALKNER=208]="FALKNER",E[E.BUGSY=209]="BUGSY",E[E.WHITNEY=210]="WHITNEY",E[E.MORTY=211]="MORTY",E[E.CHUCK=212]="CHUCK",E[E.JASMINE=213]="JASMINE",E[E.PRYCE=214]="PRYCE",E[E.CLAIR=215]="CLAIR",E[E.ROXANNE=216]="ROXANNE",E[E.BRAWLY=217]="BRAWLY",E[E.WATTSON=218]="WATTSON",E[E.FLANNERY=219]="FLANNERY",E[E.NORMAN=220]="NORMAN",E[E.WINONA=221]="WINONA",E[E.TATE=222]="TATE",E[E.LIZA=223]="LIZA",E[E.JUAN=224]="JUAN",E[E.ROARK=225]="ROARK",E[E.GARDENIA=226]="GARDENIA",E[E.MAYLENE=227]="MAYLENE",E[E.CRASHER_WAKE=228]="CRASHER_WAKE",E[E.FANTINA=229]="FANTINA",E[E.BYRON=230]="BYRON",E[E.CANDICE=231]="CANDICE",E[E.VOLKNER=232]="VOLKNER",E[E.CILAN=233]="CILAN",E[E.CHILI=234]="CHILI",E[E.CRESS=235]="CRESS",E[E.CHEREN=236]="CHEREN",E[E.LENORA=237]="LENORA",E[E.ROXIE=238]="ROXIE",E[E.BURGH=239]="BURGH",E[E.ELESA=240]="ELESA",E[E.CLAY=241]="CLAY",E[E.SKYLA=242]="SKYLA",E[E.BRYCEN=243]="BRYCEN",E[E.DRAYDEN=244]="DRAYDEN",E[E.MARLON=245]="MARLON",E[E.VIOLA=246]="VIOLA",E[E.GRANT=247]="GRANT",E[E.KORRINA=248]="KORRINA",E[E.RAMOS=249]="RAMOS",E[E.CLEMONT=250]="CLEMONT",E[E.VALERIE=251]="VALERIE",E[E.OLYMPIA=252]="OLYMPIA",E[E.WULFRIC=253]="WULFRIC",E[E.MILO=254]="MILO",E[E.NESSA=255]="NESSA",E[E.KABU=256]="KABU",E[E.BEA=257]="BEA",E[E.ALLISTER=258]="ALLISTER",E[E.OPAL=259]="OPAL",E[E.BEDE=260]="BEDE",E[E.GORDIE=261]="GORDIE",E[E.MELONY=262]="MELONY",E[E.PIERS=263]="PIERS",E[E.MARNIE=264]="MARNIE",E[E.RAIHAN=265]="RAIHAN",E[E.KATY=266]="KATY",E[E.BRASSIUS=267]="BRASSIUS",E[E.IONO=268]="IONO",E[E.KOFU=269]="KOFU",E[E.LARRY=270]="LARRY",E[E.RYME=271]="RYME",E[E.TULIP=272]="TULIP",E[E.GRUSHA=273]="GRUSHA",E[E.LORELEI=300]="LORELEI",E[E.BRUNO=301]="BRUNO",E[E.AGATHA=302]="AGATHA",E[E.LANCE=303]="LANCE",E[E.WILL=304]="WILL",E[E.KOGA=305]="KOGA",E[E.KAREN=306]="KAREN",E[E.SIDNEY=307]="SIDNEY",E[E.PHOEBE=308]="PHOEBE",E[E.GLACIA=309]="GLACIA",E[E.DRAKE=310]="DRAKE",E[E.AARON=311]="AARON",E[E.BERTHA=312]="BERTHA",E[E.FLINT=313]="FLINT",E[E.LUCIAN=314]="LUCIAN",E[E.SHAUNTAL=315]="SHAUNTAL",E[E.MARSHAL=316]="MARSHAL",E[E.GRIMSLEY=317]="GRIMSLEY",E[E.CAITLIN=318]="CAITLIN",E[E.MALVA=319]="MALVA",E[E.SIEBOLD=320]="SIEBOLD",E[E.WIKSTROM=321]="WIKSTROM",E[E.DRASNA=322]="DRASNA",E[E.HALA=323]="HALA",E[E.MOLAYNE=324]="MOLAYNE",E[E.OLIVIA=325]="OLIVIA",E[E.ACEROLA=326]="ACEROLA",E[E.KAHILI=327]="KAHILI",E[E.MARNIE_ELITE=328]="MARNIE_ELITE",E[E.NESSA_ELITE=329]="NESSA_ELITE",E[E.BEA_ELITE=330]="BEA_ELITE",E[E.ALLISTER_ELITE=331]="ALLISTER_ELITE",E[E.RAIHAN_ELITE=332]="RAIHAN_ELITE",E[E.RIKA=333]="RIKA",E[E.POPPY=334]="POPPY",E[E.LARRY_ELITE=335]="LARRY_ELITE",E[E.HASSEL=336]="HASSEL",E[E.CRISPIN=337]="CRISPIN",E[E.AMARYS=338]="AMARYS",E[E.LACEY=339]="LACEY",E[E.DRAYTON=340]="DRAYTON",E[E.BLUE=350]="BLUE",E[E.RED=351]="RED",E[E.LANCE_CHAMPION=352]="LANCE_CHAMPION",E[E.STEVEN=353]="STEVEN",E[E.WALLACE=354]="WALLACE",E[E.CYNTHIA=355]="CYNTHIA",E[E.ALDER=356]="ALDER",E[E.IRIS=357]="IRIS",E[E.DIANTHA=358]="DIANTHA",E[E.HAU=359]="HAU",E[E.LEON=360]="LEON",E[E.GEETA=361]="GEETA",E[E.NEMONA=362]="NEMONA",E[E.KIERAN=363]="KIERAN",E[E.RIVAL=375]="RIVAL",E[E.RIVAL_2=376]="RIVAL_2",E[E.RIVAL_3=377]="RIVAL_3",E[E.RIVAL_4=378]="RIVAL_4",E[E.RIVAL_5=379]="RIVAL_5",E[E.RIVAL_6=380]="RIVAL_6",E))(C||{});const wV={[C.YOUNGSTER]:[{encounter:["dialogue:youngster.encounter.1","dialogue:youngster.encounter.2","dialogue:youngster.encounter.3","dialogue:youngster.encounter.4","dialogue:youngster.encounter.5","dialogue:youngster.encounter.6","dialogue:youngster.encounter.7","dialogue:youngster.encounter.8","dialogue:youngster.encounter.9","dialogue:youngster.encounter.10","dialogue:youngster.encounter.11","dialogue:youngster.encounter.12","dialogue:youngster.encounter.13"],victory:["dialogue:youngster.victory.1","dialogue:youngster.victory.2","dialogue:youngster.victory.3","dialogue:youngster.victory.4","dialogue:youngster.victory.5","dialogue:youngster.victory.6","dialogue:youngster.victory.7","dialogue:youngster.victory.8","dialogue:youngster.victory.9","dialogue:youngster.victory.10","dialogue:youngster.victory.11","dialogue:youngster.victory.12","dialogue:youngster.victory.13"]},{encounter:["dialogue:lass.encounter.1","dialogue:lass.encounter.2","dialogue:lass.encounter.3","dialogue:lass.encounter.4","dialogue:lass.encounter.5","dialogue:lass.encounter.6","dialogue:lass.encounter.7","dialogue:lass.encounter.8","dialogue:lass.encounter.9"],victory:["dialogue:lass.victory.1","dialogue:lass.victory.2","dialogue:lass.victory.3","dialogue:lass.victory.4","dialogue:lass.victory.5","dialogue:lass.victory.6","dialogue:lass.victory.7","dialogue:lass.victory.8","dialogue:lass.victory.9"]}],[C.BREEDER]:[{encounter:["dialogue:breeder.encounter.1","dialogue:breeder.encounter.2","dialogue:breeder.encounter.3"],victory:["dialogue:breeder.victory.1","dialogue:breeder.victory.2","dialogue:breeder.victory.3"],defeat:["dialogue:breeder.defeat.1","dialogue:breeder.defeat.2","dialogue:breeder.defeat.3"]},{encounter:["dialogue:breeder_female.encounter.1","dialogue:breeder_female.encounter.2","dialogue:breeder_female.encounter.3"],victory:["dialogue:breeder_female.victory.1","dialogue:breeder_female.victory.2","dialogue:breeder_female.victory.3"],defeat:["dialogue:breeder_female.defeat.1","dialogue:breeder_female.defeat.2","dialogue:breeder_female.defeat.3"]}],[C.FISHERMAN]:[{encounter:["dialogue:fisherman.encounter.1","dialogue:fisherman.encounter.2","dialogue:fisherman.encounter.3"],victory:["dialogue:fisherman.victory.1","dialogue:fisherman.victory.2","dialogue:fisherman.victory.3"]},{encounter:["dialogue:fisherman_female.encounter.1","dialogue:fisherman_female.encounter.2","dialogue:fisherman_female.encounter.3"],victory:["dialogue:fisherman_female.victory.1","dialogue:fisherman_female.victory.2","dialogue:fisherman_female.victory.3"]}],[C.SWIMMER]:[{encounter:["dialogue:swimmer.encounter.1","dialogue:swimmer.encounter.2","dialogue:swimmer.encounter.3"],victory:["dialogue:swimmer.victory.1","dialogue:swimmer.victory.2","dialogue:swimmer.victory.3"]}],[C.BACKPACKER]:[{encounter:["dialogue:backpacker.encounter.1","dialogue:backpacker.encounter.2","dialogue:backpacker.encounter.3","dialogue:backpacker.encounter.4"],victory:["dialogue:backpacker.victory.1","dialogue:backpacker.victory.2","dialogue:backpacker.victory.3","dialogue:backpacker.victory.4"]}],[C.ACE_TRAINER]:[{encounter:["dialogue:ace_trainer.encounter.1","dialogue:ace_trainer.encounter.2","dialogue:ace_trainer.encounter.3","dialogue:ace_trainer.encounter.4"],victory:["dialogue:ace_trainer.victory.1","dialogue:ace_trainer.victory.2","dialogue:ace_trainer.victory.3","dialogue:ace_trainer.victory.4"],defeat:["dialogue:ace_trainer.defeat.1","dialogue:ace_trainer.defeat.2","dialogue:ace_trainer.defeat.3","dialogue:ace_trainer.defeat.4"]}],[C.PARASOL_LADY]:[{encounter:["dialogue:parasol_lady.encounter.1"],victory:["dialogue:parasol_lady.victory.1"]}],[C.TWINS]:[{encounter:["dialogue:twins.encounter.1","dialogue:twins.encounter.2","dialogue:twins.encounter.3"],victory:["dialogue:twins.victory.1","dialogue:twins.victory.2","dialogue:twins.victory.3"],defeat:["dialogue:twins.defeat.1","dialogue:twins.defeat.2","dialogue:twins.defeat.3"]}],[C.CYCLIST]:[{encounter:["dialogue:cyclist.encounter.1","dialogue:cyclist.encounter.2","dialogue:cyclist.encounter.3"],victory:["dialogue:cyclist.victory.1","dialogue:cyclist.victory.2","dialogue:cyclist.victory.3"]}],[C.BLACK_BELT]:[{encounter:["dialogue:black_belt.encounter.1","dialogue:black_belt.encounter.2"],victory:["dialogue:black_belt.victory.1","dialogue:black_belt.victory.2"]},{encounter:["dialogue:battle_girl.encounter.1"],victory:["dialogue:battle_girl.victory.1"]}],[C.HIKER]:[{encounter:["dialogue:hiker.encounter.1","dialogue:hiker.encounter.2"],victory:["dialogue:hiker.victory.1","dialogue:hiker.victory.2"]}],[C.RANGER]:[{encounter:["dialogue:ranger.encounter.1","dialogue:ranger.encounter.2"],victory:["dialogue:ranger.victory.1","dialogue:ranger.victory.2"],defeat:["dialogue:ranger.defeat.1","dialogue:ranger.defeat.2"]}],[C.SCIENTIST]:[{encounter:["dialogue:scientist.encounter.1"],victory:["dialogue:scientist.victory.1"]}],[C.SCHOOL_KID]:[{encounter:["dialogue:school_kid.encounter.1","dialogue:school_kid.encounter.2"],victory:["dialogue:school_kid.victory.1","dialogue:school_kid.victory.2"]}],[C.ARTIST]:[{encounter:["dialogue:artist.encounter.1"],victory:["dialogue:artist.victory.1"]}],[C.GUITARIST]:[{encounter:["dialogue:guitarist.encounter.1"],victory:["dialogue:guitarist.victory.1"]}],[C.WORKER]:[{encounter:["dialogue:worker.encounter.1"],victory:["dialogue:worker.victory.1"]},{encounter:["dialogue:worker_female.encounter.1"],victory:["dialogue:worker_female.victory.1"],defeat:["dialogue:worker_female.defeat.1"]},{encounter:["dialogue:worker_double.encounter.1"],victory:["dialogue:worker_double.victory.1"]}],[C.SNOW_WORKER]:[{encounter:["dialogue:snow_worker.encounter.1"],victory:["dialogue:snow_worker.victory.1"]},{encounter:["dialogue:snow_worker_double.encounter.1"],victory:["dialogue:snow_worker_double.victory.1"]}],[C.HEX_MANIAC]:[{encounter:["dialogue:hex_maniac.encounter.1","dialogue:hex_maniac.encounter.2"],victory:["dialogue:hex_maniac.victory.1","dialogue:hex_maniac.victory.2"],defeat:["dialogue:hex_maniac.defeat.1","dialogue:hex_maniac.defeat.2"]}],[C.PSYCHIC]:[{encounter:["dialogue:psychic.encounter.1"],victory:["dialogue:psychic.victory.1"]}],[C.OFFICER]:[{encounter:["dialogue:officer.encounter.1","dialogue:officer.encounter.2"],victory:["dialogue:officer.victory.1","dialogue:officer.victory.2"]}],[C.BEAUTY]:[{encounter:["dialogue:beauty.encounter.1"],victory:["dialogue:beauty.victory.1"]}],[C.BAKER]:[{encounter:["dialogue:baker.encounter.1"],victory:["dialogue:baker.victory.1"]}],[C.BIKER]:[{encounter:["dialogue:biker.encounter.1"],victory:["dialogue:biker.victory.1"]}],[C.FIREBREATHER]:[{encounter:["dialogue:firebreather.encounter.1","dialogue:firebreather.encounter.2","dialogue:firebreather.encounter.3"],victory:["dialogue:firebreather.victory.1","dialogue:firebreather.victory.2","dialogue:firebreather.victory.3"]}],[C.SAILOR]:[{encounter:["dialogue:sailor.encounter.1","dialogue:sailor.encounter.2","dialogue:sailor.encounter.3"],victory:["dialogue:sailor.victory.1","dialogue:sailor.victory.2","dialogue:sailor.victory.3"]}],[C.ROCKET_GRUNT]:[{encounter:["dialogue:rocket_grunt.encounter.1","dialogue:rocket_grunt.encounter.2","dialogue:rocket_grunt.encounter.3","dialogue:rocket_grunt.encounter.4","dialogue:rocket_grunt.encounter.5"],victory:["dialogue:rocket_grunt.victory.1","dialogue:rocket_grunt.victory.2","dialogue:rocket_grunt.victory.3","dialogue:rocket_grunt.victory.4","dialogue:rocket_grunt.victory.5"]}],[C.ARCHER]:[{encounter:["dialogue:archer.encounter.1","dialogue:archer.encounter.2","dialogue:archer.encounter.3"],victory:["dialogue:archer.victory.1","dialogue:archer.victory.2","dialogue:archer.victory.3"]}],[C.ARIANA]:[{encounter:["dialogue:ariana.encounter.1","dialogue:ariana.encounter.2","dialogue:ariana.encounter.3"],victory:["dialogue:ariana.victory.1","dialogue:ariana.victory.2","dialogue:ariana.victory.3"]}],[C.PROTON]:[{encounter:["dialogue:proton.encounter.1","dialogue:proton.encounter.2","dialogue:proton.encounter.3"],victory:["dialogue:proton.victory.1","dialogue:proton.victory.2","dialogue:proton.victory.3"]}],[C.PETREL]:[{encounter:["dialogue:petrel.encounter.1","dialogue:petrel.encounter.2","dialogue:petrel.encounter.3"],victory:["dialogue:petrel.victory.1","dialogue:petrel.victory.2","dialogue:petrel.victory.3"]}],[C.MAGMA_GRUNT]:[{encounter:["dialogue:magma_grunt.encounter.1","dialogue:magma_grunt.encounter.2","dialogue:magma_grunt.encounter.3","dialogue:magma_grunt.encounter.4","dialogue:magma_grunt.encounter.5"],victory:["dialogue:magma_grunt.victory.1","dialogue:magma_grunt.victory.2","dialogue:magma_grunt.victory.3","dialogue:magma_grunt.victory.4","dialogue:magma_grunt.victory.5"]}],[C.TABITHA]:[{encounter:["dialogue:tabitha.encounter.1","dialogue:tabitha.encounter.2","dialogue:tabitha.encounter.3"],victory:["dialogue:tabitha.victory.1","dialogue:tabitha.victory.2","dialogue:tabitha.victory.3"]}],[C.COURTNEY]:[{encounter:["dialogue:courtney.encounter.1","dialogue:courtney.encounter.2","dialogue:courtney.encounter.3"],victory:["dialogue:courtney.victory.1","dialogue:courtney.victory.2","dialogue:courtney.victory.3"]}],[C.AQUA_GRUNT]:[{encounter:["dialogue:aqua_grunt.encounter.1","dialogue:aqua_grunt.encounter.2","dialogue:aqua_grunt.encounter.3","dialogue:aqua_grunt.encounter.4","dialogue:aqua_grunt.encounter.5"],victory:["dialogue:aqua_grunt.victory.1","dialogue:aqua_grunt.victory.2","dialogue:aqua_grunt.victory.3","dialogue:aqua_grunt.victory.4","dialogue:aqua_grunt.victory.5"]}],[C.MATT]:[{encounter:["dialogue:matt.encounter.1","dialogue:matt.encounter.2","dialogue:matt.encounter.3"],victory:["dialogue:matt.victory.1","dialogue:matt.victory.2","dialogue:matt.victory.3"]}],[C.SHELLY]:[{encounter:["dialogue:shelly.encounter.1","dialogue:shelly.encounter.2","dialogue:shelly.encounter.3"],victory:["dialogue:shelly.victory.1","dialogue:shelly.victory.2","dialogue:shelly.victory.3"]}],[C.GALACTIC_GRUNT]:[{encounter:["dialogue:galactic_grunt.encounter.1","dialogue:galactic_grunt.encounter.2","dialogue:galactic_grunt.encounter.3","dialogue:galactic_grunt.encounter.4","dialogue:galactic_grunt.encounter.5"],victory:["dialogue:galactic_grunt.victory.1","dialogue:galactic_grunt.victory.2","dialogue:galactic_grunt.victory.3","dialogue:galactic_grunt.victory.4","dialogue:galactic_grunt.victory.5"]}],[C.JUPITER]:[{encounter:["dialogue:jupiter.encounter.1","dialogue:jupiter.encounter.2","dialogue:jupiter.encounter.3"],victory:["dialogue:jupiter.victory.1","dialogue:jupiter.victory.2","dialogue:jupiter.victory.3"]}],[C.MARS]:[{encounter:["dialogue:mars.encounter.1","dialogue:mars.encounter.2","dialogue:mars.encounter.3"],victory:["dialogue:mars.victory.1","dialogue:mars.victory.2","dialogue:mars.victory.3"]}],[C.SATURN]:[{encounter:["dialogue:saturn.encounter.1","dialogue:saturn.encounter.2","dialogue:saturn.encounter.3"],victory:["dialogue:saturn.victory.1","dialogue:saturn.victory.2","dialogue:saturn.victory.3"]}],[C.PLASMA_GRUNT]:[{encounter:["dialogue:plasma_grunt.encounter.1","dialogue:plasma_grunt.encounter.2","dialogue:plasma_grunt.encounter.3","dialogue:plasma_grunt.encounter.4","dialogue:plasma_grunt.encounter.5"],victory:["dialogue:plasma_grunt.victory.1","dialogue:plasma_grunt.victory.2","dialogue:plasma_grunt.victory.3","dialogue:plasma_grunt.victory.4","dialogue:plasma_grunt.victory.5"]}],[C.ZINZOLIN]:[{encounter:["dialogue:zinzolin.encounter.1","dialogue:zinzolin.encounter.2","dialogue:zinzolin.encounter.3"],victory:["dialogue:zinzolin.victory.1","dialogue:zinzolin.victory.2","dialogue:zinzolin.victory.3"]}],[C.ROOD]:[{encounter:["dialogue:rood.encounter.1","dialogue:rood.encounter.2","dialogue:rood.encounter.3"],victory:["dialogue:rood.victory.1","dialogue:rood.victory.2","dialogue:rood.victory.3"]}],[C.FLARE_GRUNT]:[{encounter:["dialogue:flare_grunt.encounter.1","dialogue:flare_grunt.encounter.2","dialogue:flare_grunt.encounter.3","dialogue:flare_grunt.encounter.4","dialogue:flare_grunt.encounter.5"],victory:["dialogue:flare_grunt.victory.1","dialogue:flare_grunt.victory.2","dialogue:flare_grunt.victory.3","dialogue:flare_grunt.victory.4","dialogue:flare_grunt.victory.5"]}],[C.BRYONY]:[{encounter:["dialogue:bryony.encounter.1","dialogue:bryony.encounter.2","dialogue:bryony.encounter.3"],victory:["dialogue:bryony.victory.1","dialogue:bryony.victory.2","dialogue:bryony.victory.3"]}],[C.XEROSIC]:[{encounter:["dialogue:xerosic.encounter.1","dialogue:xerosic.encounter.2","dialogue:xerosic.encounter.3"],victory:["dialogue:xerosic.victory.1","dialogue:xerosic.victory.2","dialogue:xerosic.victory.3"]}],[C.AETHER_GRUNT]:[{encounter:["dialogue:aether_grunt.encounter.1","dialogue:aether_grunt.encounter.2","dialogue:aether_grunt.encounter.3","dialogue:aether_grunt.encounter.4","dialogue:aether_grunt.encounter.5"],victory:["dialogue:aether_grunt.victory.1","dialogue:aether_grunt.victory.2","dialogue:aether_grunt.victory.3","dialogue:aether_grunt.victory.4","dialogue:aether_grunt.victory.5"]}],[C.FABA]:[{encounter:["dialogue:faba.encounter.1","dialogue:faba.encounter.2","dialogue:faba.encounter.3"],victory:["dialogue:faba.victory.1","dialogue:faba.victory.2","dialogue:faba.victory.3"]}],[C.SKULL_GRUNT]:[{encounter:["dialogue:skull_grunt.encounter.1","dialogue:skull_grunt.encounter.2","dialogue:skull_grunt.encounter.3","dialogue:skull_grunt.encounter.4","dialogue:skull_grunt.encounter.5"],victory:["dialogue:skull_grunt.victory.1","dialogue:skull_grunt.victory.2","dialogue:skull_grunt.victory.3","dialogue:skull_grunt.victory.4","dialogue:skull_grunt.victory.5"]}],[C.PLUMERIA]:[{encounter:["dialogue:plumeria.encounter.1","dialogue:plumeria.encounter.2","dialogue:plumeria.encounter.3"],victory:["dialogue:plumeria.victory.1","dialogue:plumeria.victory.2","dialogue:plumeria.victory.3"]}],[C.MACRO_GRUNT]:[{encounter:["dialogue:macro_grunt.encounter.1","dialogue:macro_grunt.encounter.2","dialogue:macro_grunt.encounter.3","dialogue:macro_grunt.encounter.4","dialogue:macro_grunt.encounter.5"],victory:["dialogue:macro_grunt.victory.1","dialogue:macro_grunt.victory.2","dialogue:macro_grunt.victory.3","dialogue:macro_grunt.victory.4","dialogue:macro_grunt.victory.5"]}],[C.OLEANA]:[{encounter:["dialogue:oleana.encounter.1","dialogue:oleana.encounter.2","dialogue:oleana.encounter.3"],victory:["dialogue:oleana.victory.1","dialogue:oleana.victory.2","dialogue:oleana.victory.3"]}],[C.STAR_GRUNT]:[{encounter:["dialogue:star_grunt.encounter.1","dialogue:star_grunt.encounter.2","dialogue:star_grunt.encounter.3","dialogue:star_grunt.encounter.4","dialogue:star_grunt.encounter.5"],victory:["dialogue:star_grunt.victory.1","dialogue:star_grunt.victory.2","dialogue:star_grunt.victory.3","dialogue:star_grunt.victory.4","dialogue:star_grunt.victory.5"]}],[C.GIACOMO]:[{encounter:["dialogue:giacomo.encounter.1","dialogue:giacomo.encounter.2"],victory:["dialogue:giacomo.victory.1","dialogue:giacomo.victory.2"]}],[C.MELA]:[{encounter:["dialogue:mela.encounter.1","dialogue:mela.encounter.2"],victory:["dialogue:mela.victory.1","dialogue:mela.victory.2"]}],[C.ATTICUS]:[{encounter:["dialogue:atticus.encounter.1","dialogue:atticus.encounter.2"],victory:["dialogue:atticus.victory.1","dialogue:atticus.victory.2"]}],[C.ORTEGA]:[{encounter:["dialogue:ortega.encounter.1","dialogue:ortega.encounter.2"],victory:["dialogue:ortega.victory.1","dialogue:ortega.victory.2"]}],[C.ERI]:[{encounter:["dialogue:eri.encounter.1","dialogue:eri.encounter.2"],victory:["dialogue:eri.victory.1","dialogue:eri.victory.2"]}],[C.ROCKET_BOSS_GIOVANNI_1]:[{encounter:["dialogue:rocket_boss_giovanni_1.encounter.1"],victory:["dialogue:rocket_boss_giovanni_1.victory.1"],defeat:["dialogue:rocket_boss_giovanni_1.defeat.1"]}],[C.ROCKET_BOSS_GIOVANNI_2]:[{encounter:["dialogue:rocket_boss_giovanni_2.encounter.1"],victory:["dialogue:rocket_boss_giovanni_2.victory.1"],defeat:["dialogue:rocket_boss_giovanni_2.defeat.1"]}],[C.MAXIE]:[{encounter:["dialogue:magma_boss_maxie_1.encounter.1"],victory:["dialogue:magma_boss_maxie_1.victory.1"],defeat:["dialogue:magma_boss_maxie_1.defeat.1"]}],[C.MAXIE_2]:[{encounter:["dialogue:magma_boss_maxie_2.encounter.1"],victory:["dialogue:magma_boss_maxie_2.victory.1"],defeat:["dialogue:magma_boss_maxie_2.defeat.1"]}],[C.ARCHIE]:[{encounter:["dialogue:aqua_boss_archie_1.encounter.1"],victory:["dialogue:aqua_boss_archie_1.victory.1"],defeat:["dialogue:aqua_boss_archie_1.defeat.1"]}],[C.ARCHIE_2]:[{encounter:["dialogue:aqua_boss_archie_2.encounter.1"],victory:["dialogue:aqua_boss_archie_2.victory.1"],defeat:["dialogue:aqua_boss_archie_2.defeat.1"]}],[C.CYRUS]:[{encounter:["dialogue:galactic_boss_cyrus_1.encounter.1"],victory:["dialogue:galactic_boss_cyrus_1.victory.1"],defeat:["dialogue:galactic_boss_cyrus_1.defeat.1"]}],[C.CYRUS_2]:[{encounter:["dialogue:galactic_boss_cyrus_2.encounter.1"],victory:["dialogue:galactic_boss_cyrus_2.victory.1"],defeat:["dialogue:galactic_boss_cyrus_2.defeat.1"]}],[C.GHETSIS]:[{encounter:["dialogue:plasma_boss_ghetsis_1.encounter.1"],victory:["dialogue:plasma_boss_ghetsis_1.victory.1"],defeat:["dialogue:plasma_boss_ghetsis_1.defeat.1"]}],[C.GHETSIS_2]:[{encounter:["dialogue:plasma_boss_ghetsis_2.encounter.1"],victory:["dialogue:plasma_boss_ghetsis_2.victory.1"],defeat:["dialogue:plasma_boss_ghetsis_2.defeat.1"]}],[C.LYSANDRE]:[{encounter:["dialogue:flare_boss_lysandre_1.encounter.1"],victory:["dialogue:flare_boss_lysandre_1.victory.1"],defeat:["dialogue:flare_boss_lysandre_1.defeat.1"]}],[C.LYSANDRE_2]:[{encounter:["dialogue:flare_boss_lysandre_2.encounter.1"],victory:["dialogue:flare_boss_lysandre_2.victory.1"],defeat:["dialogue:flare_boss_lysandre_2.defeat.1"]}],[C.LUSAMINE]:[{encounter:["dialogue:aether_boss_lusamine_1.encounter.1"],victory:["dialogue:aether_boss_lusamine_1.victory.1"],defeat:["dialogue:aether_boss_lusamine_1.defeat.1"]}],[C.LUSAMINE_2]:[{encounter:["dialogue:aether_boss_lusamine_2.encounter.1"],victory:["dialogue:aether_boss_lusamine_2.victory.1"],defeat:["dialogue:aether_boss_lusamine_2.defeat.1"]}],[C.GUZMA]:[{encounter:["dialogue:skull_boss_guzma_1.encounter.1"],victory:["dialogue:skull_boss_guzma_1.victory.1"],defeat:["dialogue:skull_boss_guzma_1.defeat.1"]}],[C.GUZMA_2]:[{encounter:["dialogue:skull_boss_guzma_2.encounter.1"],victory:["dialogue:skull_boss_guzma_2.victory.1"],defeat:["dialogue:skull_boss_guzma_2.defeat.1"]}],[C.ROSE]:[{encounter:["dialogue:macro_boss_rose_1.encounter.1"],victory:["dialogue:macro_boss_rose_1.victory.1"],defeat:["dialogue:macro_boss_rose_1.defeat.1"]}],[C.ROSE_2]:[{encounter:["dialogue:macro_boss_rose_2.encounter.1"],victory:["dialogue:macro_boss_rose_2.victory.1"],defeat:["dialogue:macro_boss_rose_2.defeat.1"]}],[C.PENNY]:[{encounter:["dialogue:star_boss_penny_1.encounter.1"],victory:["dialogue:star_boss_penny_1.victory.1"],defeat:["dialogue:star_boss_penny_1.defeat.1"]}],[C.PENNY_2]:[{encounter:["dialogue:star_boss_penny_2.encounter.1"],victory:["dialogue:star_boss_penny_2.victory.1"],defeat:["dialogue:star_boss_penny_2.defeat.1"]}],[C.BUCK]:[{encounter:["dialogue:stat_trainer_buck.encounter.1","dialogue:stat_trainer_buck.encounter.2"],victory:["dialogue:stat_trainer_buck.victory.1","dialogue:stat_trainer_buck.victory.2"],defeat:["dialogue:stat_trainer_buck.defeat.1","dialogue:stat_trainer_buck.defeat.2"]}],[C.CHERYL]:[{encounter:["dialogue:stat_trainer_cheryl.encounter.1","dialogue:stat_trainer_cheryl.encounter.2"],victory:["dialogue:stat_trainer_cheryl.victory.1","dialogue:stat_trainer_cheryl.victory.2"],defeat:["dialogue:stat_trainer_cheryl.defeat.1","dialogue:stat_trainer_cheryl.defeat.2"]}],[C.MARLEY]:[{encounter:["dialogue:stat_trainer_marley.encounter.1","dialogue:stat_trainer_marley.encounter.2"],victory:["dialogue:stat_trainer_marley.victory.1","dialogue:stat_trainer_marley.victory.2"],defeat:["dialogue:stat_trainer_marley.defeat.1","dialogue:stat_trainer_marley.defeat.2"]}],[C.MIRA]:[{encounter:["dialogue:stat_trainer_mira.encounter.1","dialogue:stat_trainer_mira.encounter.2"],victory:["dialogue:stat_trainer_mira.victory.1","dialogue:stat_trainer_mira.victory.2"],defeat:["dialogue:stat_trainer_mira.defeat.1","dialogue:stat_trainer_mira.defeat.2"]}],[C.RILEY]:[{encounter:["dialogue:stat_trainer_riley.encounter.1","dialogue:stat_trainer_riley.encounter.2"],victory:["dialogue:stat_trainer_riley.victory.1","dialogue:stat_trainer_riley.victory.2"],defeat:["dialogue:stat_trainer_riley.defeat.1","dialogue:stat_trainer_riley.defeat.2"]}],[C.VICTOR]:[{encounter:["dialogue:winstrates_victor.encounter.1"],victory:["dialogue:winstrates_victor.victory.1"]}],[C.VICTORIA]:[{encounter:["dialogue:winstrates_victoria.encounter.1"],victory:["dialogue:winstrates_victoria.victory.1"]}],[C.VIVI]:[{encounter:["dialogue:winstrates_vivi.encounter.1"],victory:["dialogue:winstrates_vivi.victory.1"]}],[C.VICKY]:[{encounter:["dialogue:winstrates_vicky.encounter.1"],victory:["dialogue:winstrates_vicky.victory.1"]}],[C.VITO]:[{encounter:["dialogue:winstrates_vito.encounter.1"],victory:["dialogue:winstrates_vito.victory.1"]}],[C.BROCK]:{encounter:["dialogue:brock.encounter.1","dialogue:brock.encounter.2","dialogue:brock.encounter.3"],victory:["dialogue:brock.victory.1","dialogue:brock.victory.2","dialogue:brock.victory.3"],defeat:["dialogue:brock.defeat.1","dialogue:brock.defeat.2","dialogue:brock.defeat.3"]},[C.MISTY]:{encounter:["dialogue:misty.encounter.1","dialogue:misty.encounter.2","dialogue:misty.encounter.3"],victory:["dialogue:misty.victory.1","dialogue:misty.victory.2","dialogue:misty.victory.3"],defeat:["dialogue:misty.defeat.1","dialogue:misty.defeat.2","dialogue:misty.defeat.3"]},[C.LT_SURGE]:{encounter:["dialogue:lt_surge.encounter.1","dialogue:lt_surge.encounter.2","dialogue:lt_surge.encounter.3"],victory:["dialogue:lt_surge.victory.1","dialogue:lt_surge.victory.2","dialogue:lt_surge.victory.3"],defeat:["dialogue:lt_surge.defeat.1","dialogue:lt_surge.defeat.2","dialogue:lt_surge.defeat.3"]},[C.ERIKA]:{encounter:["dialogue:erika.encounter.1","dialogue:erika.encounter.2","dialogue:erika.encounter.3","dialogue:erika.encounter.4"],victory:["dialogue:erika.victory.1","dialogue:erika.victory.2","dialogue:erika.victory.3","dialogue:erika.victory.4"],defeat:["dialogue:erika.defeat.1","dialogue:erika.defeat.2","dialogue:erika.defeat.3","dialogue:erika.defeat.4"]},[C.JANINE]:{encounter:["dialogue:janine.encounter.1","dialogue:janine.encounter.2","dialogue:janine.encounter.3"],victory:["dialogue:janine.victory.1","dialogue:janine.victory.2","dialogue:janine.victory.3"],defeat:["dialogue:janine.defeat.1","dialogue:janine.defeat.2","dialogue:janine.defeat.3"]},[C.SABRINA]:{encounter:["dialogue:sabrina.encounter.1","dialogue:sabrina.encounter.2","dialogue:sabrina.encounter.3"],victory:["dialogue:sabrina.victory.1","dialogue:sabrina.victory.2","dialogue:sabrina.victory.3"],defeat:["dialogue:sabrina.defeat.1","dialogue:sabrina.defeat.2","dialogue:sabrina.defeat.3"]},[C.BLAINE]:{encounter:["dialogue:blaine.encounter.1","dialogue:blaine.encounter.2","dialogue:blaine.encounter.3"],victory:["dialogue:blaine.victory.1","dialogue:blaine.victory.2","dialogue:blaine.victory.3"],defeat:["dialogue:blaine.defeat.1","dialogue:blaine.defeat.2","dialogue:blaine.defeat.3"]},[C.GIOVANNI]:{encounter:["dialogue:giovanni.encounter.1","dialogue:giovanni.encounter.2","dialogue:giovanni.encounter.3"],victory:["dialogue:giovanni.victory.1","dialogue:giovanni.victory.2","dialogue:giovanni.victory.3"],defeat:["dialogue:giovanni.defeat.1","dialogue:giovanni.defeat.2","dialogue:giovanni.defeat.3"]},[C.ROXANNE]:{encounter:["dialogue:roxanne.encounter.1","dialogue:roxanne.encounter.2","dialogue:roxanne.encounter.3"],victory:["dialogue:roxanne.victory.1","dialogue:roxanne.victory.2","dialogue:roxanne.victory.3"],defeat:["dialogue:roxanne.defeat.1","dialogue:roxanne.defeat.2","dialogue:roxanne.defeat.3"]},[C.BRAWLY]:{encounter:["dialogue:brawly.encounter.1","dialogue:brawly.encounter.2","dialogue:brawly.encounter.3"],victory:["dialogue:brawly.victory.1","dialogue:brawly.victory.2","dialogue:brawly.victory.3"],defeat:["dialogue:brawly.defeat.1","dialogue:brawly.defeat.2","dialogue:brawly.defeat.3"]},[C.WATTSON]:{encounter:["dialogue:wattson.encounter.1","dialogue:wattson.encounter.2","dialogue:wattson.encounter.3"],victory:["dialogue:wattson.victory.1","dialogue:wattson.victory.2","dialogue:wattson.victory.3"],defeat:["dialogue:wattson.defeat.1","dialogue:wattson.defeat.2","dialogue:wattson.defeat.3"]},[C.FLANNERY]:{encounter:["dialogue:flannery.encounter.1","dialogue:flannery.encounter.2","dialogue:flannery.encounter.3"],victory:["dialogue:flannery.victory.1","dialogue:flannery.victory.2","dialogue:flannery.victory.3"],defeat:["dialogue:flannery.defeat.1","dialogue:flannery.defeat.2","dialogue:flannery.defeat.3"]},[C.NORMAN]:{encounter:["dialogue:norman.encounter.1","dialogue:norman.encounter.2","dialogue:norman.encounter.3"],victory:["dialogue:norman.victory.1","dialogue:norman.victory.2","dialogue:norman.victory.3"],defeat:["dialogue:norman.defeat.1","dialogue:norman.defeat.2","dialogue:norman.defeat.3"]},[C.WINONA]:{encounter:["dialogue:winona.encounter.1","dialogue:winona.encounter.2","dialogue:winona.encounter.3"],victory:["dialogue:winona.victory.1","dialogue:winona.victory.2","dialogue:winona.victory.3"],defeat:["dialogue:winona.defeat.1","dialogue:winona.defeat.2","dialogue:winona.defeat.3"]},[C.TATE]:{encounter:["dialogue:tate.encounter.1","dialogue:tate.encounter.2","dialogue:tate.encounter.3"],victory:["dialogue:tate.victory.1","dialogue:tate.victory.2","dialogue:tate.victory.3"],defeat:["dialogue:tate.defeat.1","dialogue:tate.defeat.2","dialogue:tate.defeat.3"]},[C.LIZA]:{encounter:["dialogue:liza.encounter.1","dialogue:liza.encounter.2","dialogue:liza.encounter.3"],victory:["dialogue:liza.victory.1","dialogue:liza.victory.2","dialogue:liza.victory.3"],defeat:["dialogue:liza.defeat.1","dialogue:liza.defeat.2","dialogue:liza.defeat.3"]},[C.JUAN]:{encounter:["dialogue:juan.encounter.1","dialogue:juan.encounter.2","dialogue:juan.encounter.3","dialogue:juan.encounter.4"],victory:["dialogue:juan.victory.1","dialogue:juan.victory.2","dialogue:juan.victory.3","dialogue:juan.victory.4"],defeat:["dialogue:juan.defeat.1","dialogue:juan.defeat.2","dialogue:juan.defeat.3","dialogue:juan.defeat.4"]},[C.CRASHER_WAKE]:{encounter:["dialogue:crasher_wake.encounter.1","dialogue:crasher_wake.encounter.2","dialogue:crasher_wake.encounter.3"],victory:["dialogue:crasher_wake.victory.1","dialogue:crasher_wake.victory.2","dialogue:crasher_wake.victory.3"],defeat:["dialogue:crasher_wake.defeat.1","dialogue:crasher_wake.defeat.2","dialogue:crasher_wake.defeat.3"]},[C.FALKNER]:{encounter:["dialogue:falkner.encounter.1","dialogue:falkner.encounter.2","dialogue:falkner.encounter.3"],victory:["dialogue:falkner.victory.1","dialogue:falkner.victory.2","dialogue:falkner.victory.3"],defeat:["dialogue:falkner.defeat.1","dialogue:falkner.defeat.2","dialogue:falkner.defeat.3"]},[C.NESSA]:{encounter:["dialogue:nessa.encounter.1","dialogue:nessa.encounter.2","dialogue:nessa.encounter.3"],victory:["dialogue:nessa.victory.1","dialogue:nessa.victory.2","dialogue:nessa.victory.3"],defeat:["dialogue:nessa.defeat.1","dialogue:nessa.defeat.2","dialogue:nessa.defeat.3"]},[C.MELONY]:{encounter:["dialogue:melony.encounter.1","dialogue:melony.encounter.2","dialogue:melony.encounter.3"],victory:["dialogue:melony.victory.1","dialogue:melony.victory.2","dialogue:melony.victory.3"],defeat:["dialogue:melony.defeat.1","dialogue:melony.defeat.2","dialogue:melony.defeat.3"]},[C.MARLON]:{encounter:["dialogue:marlon.encounter.1","dialogue:marlon.encounter.2","dialogue:marlon.encounter.3"],victory:["dialogue:marlon.victory.1","dialogue:marlon.victory.2","dialogue:marlon.victory.3"],defeat:["dialogue:marlon.defeat.1","dialogue:marlon.defeat.2","dialogue:marlon.defeat.3"]},[C.SHAUNTAL]:{encounter:["dialogue:shauntal.encounter.1","dialogue:shauntal.encounter.2","dialogue:shauntal.encounter.3"],victory:["dialogue:shauntal.victory.1","dialogue:shauntal.victory.2","dialogue:shauntal.victory.3"],defeat:["dialogue:shauntal.defeat.1","dialogue:shauntal.defeat.2","dialogue:shauntal.defeat.3"]},[C.MARSHAL]:{encounter:["dialogue:marshal.encounter.1","dialogue:marshal.encounter.2","dialogue:marshal.encounter.3"],victory:["dialogue:marshal.victory.1","dialogue:marshal.victory.2","dialogue:marshal.victory.3"],defeat:["dialogue:marshal.defeat.1","dialogue:marshal.defeat.2","dialogue:marshal.defeat.3"]},[C.CHEREN]:{encounter:["dialogue:cheren.encounter.1","dialogue:cheren.encounter.2","dialogue:cheren.encounter.3"],victory:["dialogue:cheren.victory.1","dialogue:cheren.victory.2","dialogue:cheren.victory.3"],defeat:["dialogue:cheren.defeat.1","dialogue:cheren.defeat.2","dialogue:cheren.defeat.3"]},[C.CHILI]:{encounter:["dialogue:chili.encounter.1","dialogue:chili.encounter.2","dialogue:chili.encounter.3"],victory:["dialogue:chili.victory.1","dialogue:chili.victory.2","dialogue:chili.victory.3"],defeat:["dialogue:chili.defeat.1","dialogue:chili.defeat.2","dialogue:chili.defeat.3"]},[C.CILAN]:{encounter:["dialogue:cilan.encounter.1","dialogue:cilan.encounter.2","dialogue:cilan.encounter.3"],victory:["dialogue:cilan.victory.1","dialogue:cilan.victory.2","dialogue:cilan.victory.3"],defeat:["dialogue:cilan.defeat.1","dialogue:cilan.defeat.2","dialogue:cilan.defeat.3"]},[C.ROARK]:{encounter:["dialogue:roark.encounter.1","dialogue:roark.encounter.2","dialogue:roark.encounter.3","dialogue:roark.encounter.4"],victory:["dialogue:roark.victory.1","dialogue:roark.victory.2","dialogue:roark.victory.3","dialogue:roark.victory.4"],defeat:["dialogue:roark.defeat.1","dialogue:roark.defeat.2","dialogue:roark.defeat.3"]},[C.MORTY]:{encounter:["dialogue:morty.encounter.1","dialogue:morty.encounter.2","dialogue:morty.encounter.3","dialogue:morty.encounter.4","dialogue:morty.encounter.5","dialogue:morty.encounter.6"],victory:["dialogue:morty.victory.1","dialogue:morty.victory.2","dialogue:morty.victory.3","dialogue:morty.victory.4","dialogue:morty.victory.5","dialogue:morty.victory.6"],defeat:["dialogue:morty.defeat.1","dialogue:morty.defeat.2","dialogue:morty.defeat.3","dialogue:morty.defeat.4","dialogue:morty.defeat.5","dialogue:morty.defeat.6"]},[C.CRISPIN]:{encounter:["dialogue:crispin.encounter.1","dialogue:crispin.encounter.2"],victory:["dialogue:crispin.victory.1","dialogue:crispin.victory.2"],defeat:["dialogue:crispin.defeat.1","dialogue:crispin.defeat.2"]},[C.AMARYS]:{encounter:["dialogue:amarys.encounter.1"],victory:["dialogue:amarys.victory.1"],defeat:["dialogue:amarys.defeat.1"]},[C.LACEY]:{encounter:["dialogue:lacey.encounter.1"],victory:["dialogue:lacey.victory.1"],defeat:["dialogue:lacey.defeat.1"]},[C.DRAYTON]:{encounter:["dialogue:drayton.encounter.1"],victory:["dialogue:drayton.victory.1"],defeat:["dialogue:drayton.defeat.1"]},[C.RAMOS]:{encounter:["dialogue:ramos.encounter.1"],victory:["dialogue:ramos.victory.1"],defeat:["dialogue:ramos.defeat.1"]},[C.VIOLA]:{encounter:["dialogue:viola.encounter.1","dialogue:viola.encounter.2"],victory:["dialogue:viola.victory.1","dialogue:viola.victory.2"],defeat:["dialogue:viola.defeat.1","dialogue:viola.defeat.2"]},[C.CANDICE]:{encounter:["dialogue:candice.encounter.1","dialogue:candice.encounter.2"],victory:["dialogue:candice.victory.1","dialogue:candice.victory.2"],defeat:["dialogue:candice.defeat.1","dialogue:candice.defeat.2"]},[C.GARDENIA]:{encounter:["dialogue:gardenia.encounter.1"],victory:["dialogue:gardenia.victory.1"],defeat:["dialogue:gardenia.defeat.1"]},[C.AARON]:{encounter:["dialogue:aaron.encounter.1"],victory:["dialogue:aaron.victory.1"],defeat:["dialogue:aaron.defeat.1"]},[C.CRESS]:{encounter:["dialogue:cress.encounter.1"],victory:["dialogue:cress.victory.1"],defeat:["dialogue:cress.defeat.1"]},[C.ALLISTER]:{encounter:["dialogue:allister.encounter.1"],victory:["dialogue:allister.victory.1"],defeat:["dialogue:allister.defeat.1"]},[C.CLAY]:{encounter:["dialogue:clay.encounter.1"],victory:["dialogue:clay.victory.1"],defeat:["dialogue:clay.defeat.1"]},[C.KOFU]:{encounter:["dialogue:kofu.encounter.1"],victory:["dialogue:kofu.victory.1"],defeat:["dialogue:kofu.defeat.1"]},[C.TULIP]:{encounter:["dialogue:tulip.encounter.1"],victory:["dialogue:tulip.victory.1"],defeat:["dialogue:tulip.defeat.1"]},[C.SIDNEY]:{encounter:["dialogue:sidney.encounter.1"],victory:["dialogue:sidney.victory.1"],defeat:["dialogue:sidney.defeat.1"]},[C.PHOEBE]:{encounter:["dialogue:phoebe.encounter.1"],victory:["dialogue:phoebe.victory.1"],defeat:["dialogue:phoebe.defeat.1"]},[C.GLACIA]:{encounter:["dialogue:glacia.encounter.1"],victory:["dialogue:glacia.victory.1"],defeat:["dialogue:glacia.defeat.1"]},[C.DRAKE]:{encounter:["dialogue:drake.encounter.1"],victory:["dialogue:drake.victory.1"],defeat:["dialogue:drake.defeat.1"]},[C.WALLACE]:{encounter:["dialogue:wallace.encounter.1"],victory:["dialogue:wallace.victory.1"],defeat:["dialogue:wallace.defeat.1"]},[C.LORELEI]:{encounter:["dialogue:lorelei.encounter.1"],victory:["dialogue:lorelei.victory.1"],defeat:["dialogue:lorelei.defeat.1"]},[C.WILL]:{encounter:["dialogue:will.encounter.1"],victory:["dialogue:will.victory.1"],defeat:["dialogue:will.defeat.1"]},[C.MALVA]:{encounter:["dialogue:malva.encounter.1"],victory:["dialogue:malva.victory.1"],defeat:["dialogue:malva.defeat.1"]},[C.HALA]:{encounter:["dialogue:hala.encounter.1"],victory:["dialogue:hala.victory.1"],defeat:["dialogue:hala.defeat.1"]},[C.MOLAYNE]:{encounter:["dialogue:molayne.encounter.1"],victory:["dialogue:molayne.victory.1"],defeat:["dialogue:molayne.defeat.1"]},[C.RIKA]:{encounter:["dialogue:rika.encounter.1"],victory:["dialogue:rika.victory.1"],defeat:["dialogue:rika.defeat.1"]},[C.BRUNO]:{encounter:["dialogue:bruno.encounter.1"],victory:["dialogue:bruno.victory.1"],defeat:["dialogue:bruno.defeat.1"]},[C.BUGSY]:{encounter:["dialogue:bugsy.encounter.1"],victory:["dialogue:bugsy.victory.1"],defeat:["dialogue:bugsy.defeat.1"]},[C.KOGA]:{encounter:["dialogue:koga.encounter.1"],victory:["dialogue:koga.victory.1"],defeat:["dialogue:koga.defeat.1"]},[C.BERTHA]:{encounter:["dialogue:bertha.encounter.1"],victory:["dialogue:bertha.victory.1"],defeat:["dialogue:bertha.defeat.1"]},[C.LENORA]:{encounter:["dialogue:lenora.encounter.1"],victory:["dialogue:lenora.victory.1"],defeat:["dialogue:lenora.defeat.1"]},[C.SIEBOLD]:{encounter:["dialogue:siebold.encounter.1"],victory:["dialogue:siebold.victory.1"],defeat:["dialogue:siebold.defeat.1"]},[C.ROXIE]:{encounter:["dialogue:roxie.encounter.1"],victory:["dialogue:roxie.victory.1"],defeat:["dialogue:roxie.defeat.1"]},[C.OLIVIA]:{encounter:["dialogue:olivia.encounter.1"],victory:["dialogue:olivia.victory.1"],defeat:["dialogue:olivia.defeat.1"]},[C.POPPY]:{encounter:["dialogue:poppy.encounter.1"],victory:["dialogue:poppy.victory.1"],defeat:["dialogue:poppy.defeat.1"]},[C.AGATHA]:{encounter:["dialogue:agatha.encounter.1"],victory:["dialogue:agatha.victory.1"],defeat:["dialogue:agatha.defeat.1"]},[C.FLINT]:{encounter:["dialogue:flint.encounter.1"],victory:["dialogue:flint.victory.1"],defeat:["dialogue:flint.defeat.1"]},[C.GRIMSLEY]:{encounter:["dialogue:grimsley.encounter.1"],victory:["dialogue:grimsley.victory.1"],defeat:["dialogue:grimsley.defeat.1"]},[C.CAITLIN]:{encounter:["dialogue:caitlin.encounter.1"],victory:["dialogue:caitlin.victory.1"],defeat:["dialogue:caitlin.defeat.1"]},[C.DIANTHA]:{encounter:["dialogue:diantha.encounter.1"],victory:["dialogue:diantha.victory.1"],defeat:["dialogue:diantha.defeat.1"]},[C.WIKSTROM]:{encounter:["dialogue:wikstrom.encounter.1"],victory:["dialogue:wikstrom.victory.1"],defeat:["dialogue:wikstrom.defeat.1"]},[C.ACEROLA]:{encounter:["dialogue:acerola.encounter.1"],victory:["dialogue:acerola.victory.1"],defeat:["dialogue:acerola.defeat.1"]},[C.LARRY_ELITE]:{encounter:["dialogue:larry_elite.encounter.1"],victory:["dialogue:larry_elite.victory.1"],defeat:["dialogue:larry_elite.defeat.1"]},[C.LANCE]:{encounter:["dialogue:lance.encounter.1","dialogue:lance.encounter.2"],victory:["dialogue:lance.victory.1","dialogue:lance.victory.2"],defeat:["dialogue:lance.defeat.1","dialogue:lance.defeat.2"]},[C.KAREN]:{encounter:["dialogue:karen.encounter.1","dialogue:karen.encounter.2","dialogue:karen.encounter.3"],victory:["dialogue:karen.victory.1","dialogue:karen.victory.2","dialogue:karen.victory.3"],defeat:["dialogue:karen.defeat.1","dialogue:karen.defeat.2","dialogue:karen.defeat.3"]},[C.MILO]:{encounter:["dialogue:milo.encounter.1"],victory:["dialogue:milo.victory.1"],defeat:["dialogue:milo.defeat.1"]},[C.LUCIAN]:{encounter:["dialogue:lucian.encounter.1"],victory:["dialogue:lucian.victory.1"],defeat:["dialogue:lucian.defeat.1"]},[C.DRASNA]:{encounter:["dialogue:drasna.encounter.1"],victory:["dialogue:drasna.victory.1"],defeat:["dialogue:drasna.defeat.1"]},[C.KAHILI]:{encounter:["dialogue:kahili.encounter.1"],victory:["dialogue:kahili.victory.1"],defeat:["dialogue:kahili.defeat.1"]},[C.HASSEL]:{encounter:["dialogue:hassel.encounter.1"],victory:["dialogue:hassel.victory.1"],defeat:["dialogue:hassel.defeat.1"]},[C.BLUE]:{encounter:["dialogue:blue.encounter.1"],victory:["dialogue:blue.victory.1"],defeat:["dialogue:blue.defeat.1"]},[C.PIERS]:{encounter:["dialogue:piers.encounter.1"],victory:["dialogue:piers.victory.1"],defeat:["dialogue:piers.defeat.1"]},[C.RED]:{encounter:["dialogue:red.encounter.1"],victory:["dialogue:red.victory.1"],defeat:["dialogue:red.defeat.1"]},[C.JASMINE]:{encounter:["dialogue:jasmine.encounter.1"],victory:["dialogue:jasmine.victory.1"],defeat:["dialogue:jasmine.defeat.1"]},[C.LANCE_CHAMPION]:{encounter:["dialogue:lance_champion.encounter.1"],victory:["dialogue:lance_champion.victory.1"],defeat:["dialogue:lance_champion.defeat.1"]},[C.STEVEN]:{encounter:["dialogue:steven.encounter.1"],victory:["dialogue:steven.victory.1"],defeat:["dialogue:steven.defeat.1"]},[C.CYNTHIA]:{encounter:["dialogue:cynthia.encounter.1"],victory:["dialogue:cynthia.victory.1"],defeat:["dialogue:cynthia.defeat.1"]},[C.IRIS]:{encounter:["dialogue:iris.encounter.1"],victory:["dialogue:iris.victory.1"],defeat:["dialogue:iris.defeat.1"]},[C.HAU]:{encounter:["dialogue:hau.encounter.1"],victory:["dialogue:hau.victory.1"],defeat:["dialogue:hau.defeat.1"]},[C.GEETA]:{encounter:["dialogue:geeta.encounter.1"],victory:["dialogue:geeta.victory.1"],defeat:["dialogue:geeta.defeat.1"]},[C.NEMONA]:{encounter:["dialogue:nemona.encounter.1"],victory:["dialogue:nemona.victory.1"],defeat:["dialogue:nemona.defeat.1"]},[C.LEON]:{encounter:["dialogue:leon.encounter.1"],victory:["dialogue:leon.victory.1"],defeat:["dialogue:leon.defeat.1"]},[C.WHITNEY]:{encounter:["dialogue:whitney.encounter.1"],victory:["dialogue:whitney.victory.1"],defeat:["dialogue:whitney.defeat.1"]},[C.CHUCK]:{encounter:["dialogue:chuck.encounter.1"],victory:["dialogue:chuck.victory.1"],defeat:["dialogue:chuck.defeat.1"]},[C.KATY]:{encounter:["dialogue:katy.encounter.1"],victory:["dialogue:katy.victory.1"],defeat:["dialogue:katy.defeat.1"]},[C.PRYCE]:{encounter:["dialogue:pryce.encounter.1"],victory:["dialogue:pryce.victory.1"],defeat:["dialogue:pryce.defeat.1"]},[C.CLAIR]:{encounter:["dialogue:clair.encounter.1"],victory:["dialogue:clair.victory.1"],defeat:["dialogue:clair.defeat.1"]},[C.MAYLENE]:{encounter:["dialogue:maylene.encounter.1"],victory:["dialogue:maylene.victory.1"],defeat:["dialogue:maylene.defeat.1"]},[C.FANTINA]:{encounter:["dialogue:fantina.encounter.1"],victory:["dialogue:fantina.victory.1"],defeat:["dialogue:fantina.defeat.1"]},[C.BYRON]:{encounter:["dialogue:byron.encounter.1"],victory:["dialogue:byron.victory.1"],defeat:["dialogue:byron.defeat.1"]},[C.OLYMPIA]:{encounter:["dialogue:olympia.encounter.1"],victory:["dialogue:olympia.victory.1"],defeat:["dialogue:olympia.defeat.1"]},[C.VOLKNER]:{encounter:["dialogue:volkner.encounter.1"],victory:["dialogue:volkner.victory.1"],defeat:["dialogue:volkner.defeat.1"]},[C.BURGH]:{encounter:["dialogue:burgh.encounter.1","dialogue:burgh.encounter.2"],victory:["dialogue:burgh.victory.1","dialogue:burgh.victory.2"],defeat:["dialogue:burgh.defeat.1","dialogue:burgh.defeat.2"]},[C.ELESA]:{encounter:["dialogue:elesa.encounter.1"],victory:["dialogue:elesa.victory.1"],defeat:["dialogue:elesa.defeat.1"]},[C.SKYLA]:{encounter:["dialogue:skyla.encounter.1"],victory:["dialogue:skyla.victory.1"],defeat:["dialogue:skyla.defeat.1"]},[C.BRYCEN]:{encounter:["dialogue:brycen.encounter.1"],victory:["dialogue:brycen.victory.1"],defeat:["dialogue:brycen.defeat.1"]},[C.DRAYDEN]:{encounter:["dialogue:drayden.encounter.1"],victory:["dialogue:drayden.victory.1"],defeat:["dialogue:drayden.defeat.1"]},[C.GRANT]:{encounter:["dialogue:grant.encounter.1"],victory:["dialogue:grant.victory.1"],defeat:["dialogue:grant.defeat.1"]},[C.KORRINA]:{encounter:["dialogue:korrina.encounter.1"],victory:["dialogue:korrina.victory.1"],defeat:["dialogue:korrina.defeat.1"]},[C.CLEMONT]:{encounter:["dialogue:clemont.encounter.1"],victory:["dialogue:clemont.victory.1"],defeat:["dialogue:clemont.defeat.1"]},[C.VALERIE]:{encounter:["dialogue:valerie.encounter.1"],victory:["dialogue:valerie.victory.1"],defeat:["dialogue:valerie.defeat.1"]},[C.WULFRIC]:{encounter:["dialogue:wulfric.encounter.1"],victory:["dialogue:wulfric.victory.1"],defeat:["dialogue:wulfric.defeat.1"]},[C.KABU]:{encounter:["dialogue:kabu.encounter.1"],victory:["dialogue:kabu.victory.1"],defeat:["dialogue:kabu.defeat.1"]},[C.BEA]:{encounter:["dialogue:bea.encounter.1"],victory:["dialogue:bea.victory.1"],defeat:["dialogue:bea.defeat.1"]},[C.OPAL]:{encounter:["dialogue:opal.encounter.1"],victory:["dialogue:opal.victory.1"],defeat:["dialogue:opal.defeat.1"]},[C.BEDE]:{encounter:["dialogue:bede.encounter.1"],victory:["dialogue:bede.victory.1"],defeat:["dialogue:bede.defeat.1"]},[C.GORDIE]:{encounter:["dialogue:gordie.encounter.1"],victory:["dialogue:gordie.victory.1"],defeat:["dialogue:gordie.defeat.1"]},[C.MARNIE]:{encounter:["dialogue:marnie.encounter.1"],victory:["dialogue:marnie.victory.1"],defeat:["dialogue:marnie.defeat.1"]},[C.RAIHAN]:{encounter:["dialogue:raihan.encounter.1"],victory:["dialogue:raihan.victory.1"],defeat:["dialogue:raihan.defeat.1"]},[C.BRASSIUS]:{encounter:["dialogue:brassius.encounter.1"],victory:["dialogue:brassius.victory.1"],defeat:["dialogue:brassius.defeat.1"]},[C.IONO]:{encounter:["dialogue:iono.encounter.1"],victory:["dialogue:iono.victory.1"],defeat:["dialogue:iono.defeat.1"]},[C.LARRY]:{encounter:["dialogue:larry.encounter.1"],victory:["dialogue:larry.victory.1"],defeat:["dialogue:larry.defeat.1"]},[C.RYME]:{encounter:["dialogue:ryme.encounter.1"],victory:["dialogue:ryme.victory.1"],defeat:["dialogue:ryme.defeat.1"]},[C.GRUSHA]:{encounter:["dialogue:grusha.encounter.1"],victory:["dialogue:grusha.victory.1"],defeat:["dialogue:grusha.defeat.1"]},[C.MARNIE_ELITE]:{encounter:["dialogue:marnie_elite.encounter.1","dialogue:marnie_elite.encounter.2"],victory:["dialogue:marnie_elite.victory.1","dialogue:marnie_elite.victory.2"],defeat:["dialogue:marnie_elite.defeat.1","dialogue:marnie_elite.defeat.2"]},[C.NESSA_ELITE]:{encounter:["dialogue:nessa_elite.encounter.1","dialogue:nessa_elite.encounter.2"],victory:["dialogue:nessa_elite.victory.1","dialogue:nessa_elite.victory.2"],defeat:["dialogue:nessa_elite.defeat.1","dialogue:nessa_elite.defeat.2"]},[C.BEA_ELITE]:{encounter:["dialogue:bea_elite.encounter.1","dialogue:bea_elite.encounter.2"],victory:["dialogue:bea_elite.victory.1","dialogue:bea_elite.victory.2"],defeat:["dialogue:bea_elite.defeat.1","dialogue:bea_elite.defeat.2"]},[C.ALLISTER_ELITE]:{encounter:["dialogue:allister_elite.encounter.1","dialogue:allister_elite.encounter.2"],victory:["dialogue:allister_elite.victory.1","dialogue:allister_elite.victory.2"],defeat:["dialogue:allister_elite.defeat.1","dialogue:allister_elite.defeat.2"]},[C.RAIHAN_ELITE]:{encounter:["dialogue:raihan_elite.encounter.1","dialogue:raihan_elite.encounter.2"],victory:["dialogue:raihan_elite.victory.1","dialogue:raihan_elite.victory.2"],defeat:["dialogue:raihan_elite.defeat.1","dialogue:raihan_elite.defeat.2"]},[C.ALDER]:{encounter:["dialogue:alder.encounter.1"],victory:["dialogue:alder.victory.1"],defeat:["dialogue:alder.defeat.1"]},[C.KIERAN]:{encounter:["dialogue:kieran.encounter.1"],victory:["dialogue:kieran.victory.1"],defeat:["dialogue:kieran.defeat.1"]},[C.RIVAL]:[{encounter:["dialogue:rival.encounter.1"],victory:["dialogue:rival.victory.1"]},{encounter:["dialogue:rival_female.encounter.1"],victory:["dialogue:rival_female.victory.1"]}],[C.RIVAL_2]:[{encounter:["dialogue:rival_2.encounter.1"],victory:["dialogue:rival_2.victory.1"]},{encounter:["dialogue:rival_2_female.encounter.1"],victory:["dialogue:rival_2_female.victory.1"],defeat:["dialogue:rival_2_female.defeat.1"]}],[C.RIVAL_3]:[{encounter:["dialogue:rival_3.encounter.1"],victory:["dialogue:rival_3.victory.1"]},{encounter:["dialogue:rival_3_female.encounter.1"],victory:["dialogue:rival_3_female.victory.1"],defeat:["dialogue:rival_3_female.defeat.1"]}],[C.RIVAL_4]:[{encounter:["dialogue:rival_4.encounter.1"],victory:["dialogue:rival_4.victory.1"]},{encounter:["dialogue:rival_4_female.encounter.1"],victory:["dialogue:rival_4_female.victory.1"],defeat:["dialogue:rival_4_female.defeat.1"]}],[C.RIVAL_5]:[{encounter:["dialogue:rival_5.encounter.1"],victory:["dialogue:rival_5.victory.1"]},{encounter:["dialogue:rival_5_female.encounter.1"],victory:["dialogue:rival_5_female.victory.1"],defeat:["dialogue:rival_5_female.defeat.1"]}],[C.RIVAL_6]:[{encounter:["dialogue:rival_6.encounter.1"],victory:["dialogue:rival_6.victory.1"]},{encounter:["dialogue:rival_6_female.encounter.1"],victory:["dialogue:rival_6_female.victory.1"]}]},Po={blue_red_double:{encounter:["doubleBattleDialogue:blue_red_double.encounter.1"],victory:["doubleBattleDialogue:blue_red_double.victory.1"]},red_blue_double:{encounter:["doubleBattleDialogue:red_blue_double.encounter.1"],victory:["doubleBattleDialogue:red_blue_double.victory.1"]},tate_liza_double:{encounter:["doubleBattleDialogue:tate_liza_double.encounter.1"],victory:["doubleBattleDialogue:tate_liza_double.victory.1"]},liza_tate_double:{encounter:["doubleBattleDialogue:liza_tate_double.encounter.1"],victory:["doubleBattleDialogue:liza_tate_double.victory.1"]},wallace_steven_double:{encounter:["doubleBattleDialogue:wallace_steven_double.encounter.1"],victory:["doubleBattleDialogue:wallace_steven_double.victory.1"]},steven_wallace_double:{encounter:["doubleBattleDialogue:steven_wallace_double.encounter.1"],victory:["doubleBattleDialogue:steven_wallace_double.victory.1"]},alder_iris_double:{encounter:["doubleBattleDialogue:alder_iris_double.encounter.1"],victory:["doubleBattleDialogue:alder_iris_double.victory.1"]},iris_alder_double:{encounter:["doubleBattleDialogue:iris_alder_double.encounter.1"],victory:["doubleBattleDialogue:iris_alder_double.victory.1"]},marnie_piers_double:{encounter:["doubleBattleDialogue:marnie_piers_double.encounter.1"],victory:["doubleBattleDialogue:marnie_piers_double.victory.1"]},piers_marnie_double:{encounter:["doubleBattleDialogue:piers_marnie_double.encounter.1"],victory:["doubleBattleDialogue:piers_marnie_double.victory.1"]}},s6={[eE.FINAL_BOSS]:{encounter:"battleSpecDialogue:encounter",firstStageWin:"battleSpecDialogue:firstStageWin",secondStageWin:"battleSpecDialogue:secondStageWin"}};function WM(E){const A=/@c\{(.*?)\}/.exec(E);return A?A[1]:"neutral"}T(WM,"getCharVariantFromDialogue");function g8(){const E=Object.keys(wV).map(A=>parseInt(A));for(const A of E){const s=wV[A],R=["encounter","victory","defeat"];for(const I of R)Array.isArray(s)?(s[0][I]&&(BA[A][`${I}Messages`]=s[0][I]),s.length>1&&(BA[A][`female${I.slice(0,1).toUpperCase()}${I.slice(1)}Messages`]=s[1][I])):BA[A][`${I}Messages`]=s[I]}}T(g8,"initTrainerTypeDialogue");const VV=460,K8=508;var ln=(E=>(E[E.COMMON=0]="COMMON",E[E.UNCOMMON=1]="UNCOMMON",E[E.RARE=2]="RARE",E[E.SUPER_RARE=3]="SUPER_RARE",E[E.ULTRA_RARE=4]="ULTRA_RARE",E))(ln||{}),qe=(E=>(E[E.NONE=0]="NONE",E[E.TRAINER=1]="TRAINER",E[E.TRAINER_PARTNER=2]="TRAINER_PARTNER",E))(qe||{});const Wd=class Wd{constructor(A,s,R,I){this.size=A,this.strength=s,this.sameSpecies=!!R,this.balanced=!!I}getStrength(A){return this.strength}isSameSpecies(A){return this.sameSpecies}isBalanced(A){return this.balanced}};T(Wd,"TrainerPartyTemplate");let We=Wd;const Yd=class Yd extends We{constructor(...A){super(A.reduce((s,R)=>(s+=R.size,s),0),Pe.AVERAGE),this.templates=A}getStrength(A){let s=0;for(const R of this.templates){if(s+R.size>A)return R.getStrength(A-s);s+=R.size}return super.getStrength(A)}isSameSpecies(A){let s=0;for(const R of this.templates){if(s+R.size>A)return R.isSameSpecies(A-s);s+=R.size}return super.isSameSpecies(A)}isBalanced(A){let s=0;for(const R of this.templates){if(s+R.size>A)return R.isBalanced(A-s);s+=R.size}return super.isBalanced(A)}};T(Yd,"TrainerPartyCompoundTemplate");let PA=Yd;const ve={ONE_WEAK_ONE_STRONG:new PA(new We(1,Pe.WEAK),new We(1,Pe.STRONG)),ONE_AVG:new We(1,Pe.AVERAGE),ONE_AVG_ONE_STRONG:new PA(new We(1,Pe.AVERAGE),new We(1,Pe.STRONG)),ONE_STRONG:new We(1,Pe.STRONG),ONE_STRONGER:new We(1,Pe.STRONGER),TWO_WEAKER:new We(2,Pe.WEAKER),TWO_WEAK:new We(2,Pe.WEAK),TWO_WEAK_ONE_AVG:new PA(new We(2,Pe.WEAK),new We(1,Pe.AVERAGE)),TWO_WEAK_SAME_ONE_AVG:new PA(new We(2,Pe.WEAK,!0),new We(1,Pe.AVERAGE)),TWO_WEAK_SAME_TWO_WEAK_SAME:new PA(new We(2,Pe.WEAK,!0),new We(2,Pe.WEAK,!0)),TWO_WEAK_ONE_STRONG:new PA(new We(2,Pe.WEAK),new We(1,Pe.STRONG)),TWO_AVG:new We(2,Pe.AVERAGE),TWO_AVG_ONE_STRONG:new PA(new We(2,Pe.AVERAGE),new We(1,Pe.STRONG)),TWO_AVG_SAME_ONE_AVG:new PA(new We(2,Pe.AVERAGE,!0),new We(1,Pe.AVERAGE)),TWO_AVG_SAME_ONE_STRONG:new PA(new We(2,Pe.AVERAGE,!0),new We(1,Pe.STRONG)),TWO_AVG_SAME_TWO_AVG_SAME:new PA(new We(2,Pe.AVERAGE,!0),new We(2,Pe.AVERAGE,!0)),TWO_STRONG:new We(2,Pe.STRONG),THREE_WEAK:new We(3,Pe.WEAK),THREE_WEAK_SAME:new We(3,Pe.WEAK,!0),THREE_AVG:new We(3,Pe.AVERAGE),THREE_AVG_SAME:new We(3,Pe.AVERAGE,!0),THREE_WEAK_BALANCED:new We(3,Pe.WEAK,!1,!0),FOUR_WEAKER:new We(4,Pe.WEAKER),FOUR_WEAKER_SAME:new We(4,Pe.WEAKER,!0),FOUR_WEAK:new We(4,Pe.WEAK),FOUR_WEAK_SAME:new We(4,Pe.WEAK,!0),FOUR_WEAK_BALANCED:new We(4,Pe.WEAK,!1,!0),FIVE_WEAKER:new We(5,Pe.WEAKER),FIVE_WEAK:new We(5,Pe.WEAK),FIVE_WEAK_BALANCED:new We(5,Pe.WEAK,!1,!0),SIX_WEAKER:new We(6,Pe.WEAKER),SIX_WEAKER_SAME:new We(6,Pe.WEAKER,!0),SIX_WEAK_SAME:new We(6,Pe.WEAK,!0),SIX_WEAK_BALANCED:new We(6,Pe.WEAK,!1,!0),GYM_LEADER_1:new PA(new We(1,Pe.AVERAGE),new We(1,Pe.STRONG)),GYM_LEADER_2:new PA(new We(1,Pe.AVERAGE),new We(1,Pe.STRONG),new We(1,Pe.STRONGER)),GYM_LEADER_3:new PA(new We(2,Pe.AVERAGE),new We(1,Pe.STRONG),new We(1,Pe.STRONGER)),GYM_LEADER_4:new PA(new We(3,Pe.AVERAGE),new We(1,Pe.STRONG),new We(1,Pe.STRONGER)),GYM_LEADER_5:new PA(new We(3,Pe.AVERAGE),new We(2,Pe.STRONG),new We(1,Pe.STRONGER)),ELITE_FOUR:new PA(new We(2,Pe.AVERAGE),new We(3,Pe.STRONG),new We(1,Pe.STRONGER)),CHAMPION:new PA(new We(1,Pe.STRONGER),new We(5,Pe.STRONG,!1,!0)),RIVAL:new PA(new We(1,Pe.STRONG),new We(1,Pe.AVERAGE)),RIVAL_2:new PA(new We(1,Pe.STRONG),new We(1,Pe.AVERAGE),new We(1,Pe.WEAK,!1,!0)),RIVAL_3:new PA(new We(1,Pe.STRONG),new We(1,Pe.AVERAGE),new We(1,Pe.AVERAGE,!1,!0),new We(1,Pe.WEAK,!1,!0)),RIVAL_4:new PA(new We(1,Pe.STRONG),new We(1,Pe.AVERAGE),new We(2,Pe.AVERAGE,!1,!0),new We(1,Pe.WEAK,!1,!0)),RIVAL_5:new PA(new We(1,Pe.STRONG),new We(1,Pe.AVERAGE),new We(3,Pe.AVERAGE,!1,!0),new We(1,Pe.STRONG)),RIVAL_6:new PA(new We(1,Pe.STRONG),new We(1,Pe.AVERAGE),new We(3,Pe.AVERAGE,!1,!0),new We(1,Pe.STRONGER))},sM=class sM{constructor(A,s){this.hasGenders=!1,this.hasDouble=!1,this.hasCharSprite=!1,this.doubleOnly=!1,this.moneyMultiplier=1,this.isBoss=!1,this.hasStaticParty=!1,this.useSameSeedForAllMembers=!1,this.modifierRewardFuncs=[],this.eventRewardFuncs=[],this.partyMemberFuncs={},this.specialtyTypes=[],this.hasVoucher=!1,this.encounterMessages=[],this.victoryMessages=[],this.defeatMessages=[],this.trainerType=A,this.name=Bn(C[this.getDerivedType()]),this.battleBgm="battle_trainer",this.mixedBattleBgm="battle_trainer",this.victoryBgm="victory_trainer",this.partyTemplates=[ve.TWO_AVG],this.speciesFilter=R=>(s||!R.legendary&&!R.subLegendary&&!R.mythical)&&!R.isTrainerForbidden()}getKey(){return C[this.getDerivedType()].toString().toLowerCase()}getSpriteKey(A,s=!1){let R=this.getKey();return this.hasGenders&&(R+=`_${A?"f":"m"}`),this.trainerTypeDouble&&A&&s&&(R=C[this.getDerivedType(this.trainerTypeDouble)].toString().toLowerCase()),R}setName(A){return A==="Finn"&&(aR()||LR(),A==="Finn"&&(A=U.t("trainerNames:rival"))),this.name=A,this}setHasVoucher(A){this.hasVoucher=A}setTitle(A){return aR()||LR(),A=A.toLowerCase().replace(/\s/g,"_"),this.title=U.t(`titles:${A}`),this}getDerivedType(A=null){let s=A||this.trainerType;switch(s){case C.RIVAL_2:case C.RIVAL_3:case C.RIVAL_4:case C.RIVAL_5:case C.RIVAL_6:s=C.RIVAL;break;case C.LANCE_CHAMPION:s=C.LANCE;break;case C.LARRY_ELITE:s=C.LARRY;break;case C.ROCKET_BOSS_GIOVANNI_1:case C.ROCKET_BOSS_GIOVANNI_2:s=C.GIOVANNI;break;case C.MAXIE_2:s=C.MAXIE;break;case C.ARCHIE_2:s=C.ARCHIE;break;case C.CYRUS_2:s=C.CYRUS;break;case C.GHETSIS_2:s=C.GHETSIS;break;case C.LYSANDRE_2:s=C.LYSANDRE;break;case C.LUSAMINE_2:s=C.LUSAMINE;break;case C.GUZMA_2:s=C.GUZMA;break;case C.ROSE_2:s=C.ROSE;break;case C.PENNY_2:s=C.PENNY;break;case C.MARNIE_ELITE:s=C.MARNIE;break;case C.NESSA_ELITE:s=C.NESSA;break;case C.BEA_ELITE:s=C.BEA;break;case C.ALLISTER_ELITE:s=C.ALLISTER;break;case C.RAIHAN_ELITE:s=C.RAIHAN;break}return s}setHasGenders(A,s){return A==="Ivy"?(aR()||LR(),this.nameFemale=U.t("trainerNames:rival_female")):this.nameFemale=A,this.hasGenders=!0,s&&(this.femaleEncounterBgm=typeof s=="number"?C[s].toString().replace(/_/g," ").toLowerCase():s),this}setHasDouble(A,s){return this.hasDouble=!0,this.nameDouble=A,s&&(this.doubleEncounterBgm=typeof s=="number"?C[s].toString().replace(/\_/g," ").toLowerCase():s),this}setDoubleTrainerType(A){return this.trainerTypeDouble=A,this.setDoubleMessages(this.nameDouble),this}setDoubleMessages(A){Po[A]&&(this.doubleEncounterMessages=Po[A].encounter,this.doubleVictoryMessages=Po[A].victory,this.doubleDefeatMessages=Po[A].defeat)}setDoubleTitle(A){return aR()||LR(),A=A.toLowerCase().replace(/\s/g,"_"),this.titleDouble=U.t(`titles:${A}`),this}setHasCharSprite(){return this.hasCharSprite=!0,this}setDoubleOnly(){return this.doubleOnly=!0,this}setMoneyMultiplier(A){return this.moneyMultiplier=A,this}setBoss(){return this.isBoss=!0,this}setStaticParty(){return this.hasStaticParty=!0,this}setUseSameSeedForAllMembers(){return this.useSameSeedForAllMembers=!0,this}setMixedBattleBgm(A){return this.mixedBattleBgm=A,this}setBattleBgm(A){return this.battleBgm=A,this}setEncounterBgm(A){return this.encounterBgm=typeof A=="number"?C[A].toString().toLowerCase():A,this}setVictoryBgm(A){return this.victoryBgm=A,this}setPartyTemplates(...A){return this.partyTemplates=A,this}setPartyTemplateFunc(A){return this.partyTemplateFunc=A,this}setPartyMemberFunc(A,s){return this.partyMemberFuncs[A]=s,this}setSpeciesPools(A){return this.speciesPools=Array.isArray(A)?{0:A}:A,this}setSpeciesFilter(A,s){const R=this.speciesFilter;return this.speciesFilter=s?A:I=>A(I)&&R(I),this}setSpecialtyTypes(...A){return this.specialtyTypes=A,this}setGenModifiersFunc(A){return this.genModifiersFunc=A,this}setEventModifierRewardFuncs(...A){return this.eventRewardFuncs=A.map(s=>()=>{const R=s(),I=R();return I.withIdFromFunc(R),I}),this}setModifierRewardFuncs(...A){return this.modifierRewardFuncs=A.map(s=>()=>{const R=s(),I=R();return I.withIdFromFunc(R),I}),this}speciesPoolPerEvilTeamAdmin(A){switch(A=A.toLowerCase(),A){case"rocket":return{0:[e.RATTATA,e.KOFFING,e.EKANS,e.ZUBAT,e.MAGIKARP,e.HOUNDOUR,e.ONIX,e.CUBONE,e.GROWLITHE,e.MURKROW,e.GASTLY,e.EXEGGCUTE,e.VOLTORB,e.DROWZEE,e.VILEPLUME],1:[e.PORYGON,e.MANKEY,e.MAGNEMITE,e.ALOLA_SANDSHREW,e.ALOLA_MEOWTH,e.ALOLA_GRIMER,e.ALOLA_GEODUDE,e.PALDEA_TAUROS,e.OMANYTE,e.KABUTO,e.MAGBY,e.ELEKID],2:[e.DRATINI,e.LARVITAR]};case"magma":return{0:[e.GROWLITHE,e.SLUGMA,e.SOLROCK,e.HIPPOPOTAS,e.BALTOY,e.ROLYCOLY,e.GLIGAR,e.TORKOAL,e.HOUNDOUR,e.MAGBY],1:[e.TRAPINCH,e.SILICOBRA,e.RHYHORN,e.ANORITH,e.LILEEP,e.HISUI_GROWLITHE,e.TURTONATOR,e.ARON,e.TOEDSCOOL],2:[e.CAPSAKID,e.CHARCADET]};case"aqua":return{0:[e.CORPHISH,e.SPHEAL,e.CLAMPERL,e.CHINCHOU,e.WOOPER,e.WINGULL,e.TENTACOOL,e.AZURILL,e.LOTAD,e.WAILMER,e.REMORAID,e.BARBOACH],1:[e.MANTYKE,e.HISUI_QWILFISH,e.ARROKUDA,e.DHELMISE,e.CLOBBOPUS,e.FEEBAS,e.PALDEA_WOOPER,e.HORSEA,e.SKRELP],2:[e.DONDOZO,e.BASCULEGION]};case"galactic":return{0:[e.BRONZOR,e.SWINUB,e.YANMA,e.LICKITUNG,e.TANGELA,e.MAGBY,e.ELEKID,e.SKORUPI,e.ZUBAT,e.MURKROW,e.MAGIKARP,e.VOLTORB],1:[e.HISUI_GROWLITHE,e.HISUI_QWILFISH,e.SNEASEL,e.DUSKULL,e.ROTOM,e.HISUI_VOLTORB,e.GLIGAR,e.ABRA],2:[e.URSALUNA,e.HISUI_LILLIGANT,e.SPIRITOMB,e.HISUI_SNEASEL]};case"plasma":return{0:[e.YAMASK,e.ROGGENROLA,e.JOLTIK,e.TYMPOLE,e.FRILLISH,e.FERROSEED,e.SANDILE,e.TIMBURR,e.DARUMAKA,e.FOONGUS,e.CUBCHOO,e.VANILLITE],1:[e.PAWNIARD,e.VULLABY,e.ZORUA,e.DRILBUR,e.KLINK,e.TYNAMO,e.GALAR_DARUMAKA,e.GOLETT,e.MIENFOO,e.DURANT,e.SIGILYPH],2:[e.HISUI_ZORUA,e.AXEW,e.DEINO,e.HISUI_BRAVIARY]};case"flare":return{0:[e.FLETCHLING,e.LITLEO,e.INKAY,e.FOONGUS,e.HELIOPTILE,e.ELECTRIKE,e.SKORUPI,e.PURRLOIN,e.CLAWITZER,e.PANCHAM,e.ESPURR,e.BUNNELBY],1:[e.LITWICK,e.SNEASEL,e.PUMPKABOO,e.PHANTUMP,e.HONEDGE,e.BINACLE,e.HOUNDOUR,e.SKRELP,e.SLIGGOO],2:[e.NOIBAT,e.HISUI_AVALUGG,e.HISUI_SLIGGOO]};case"aether":return{0:[e.BRUXISH,e.SLOWPOKE,e.BALTOY,e.EXEGGCUTE,e.ABRA,e.ALOLA_RAICHU,e.ELGYEM,e.NATU,e.BLIPBUG,e.GIRAFARIG,e.ORANGURU],1:[e.GALAR_SLOWPOKE,e.MEDITITE,e.BELDUM,e.HATENNA,e.INKAY,e.RALTS,e.GALAR_MR_MIME],2:[e.ARMAROUGE,e.HISUI_BRAVIARY,e.PORYGON]};case"skull":return{0:[e.MAREANIE,e.ALOLA_GRIMER,e.GASTLY,e.ZUBAT,e.FOMANTIS,e.VENIPEDE,e.BUDEW,e.KOFFING,e.STUNKY,e.CROAGUNK,e.NIDORAN_F],1:[e.GALAR_SLOWPOKE,e.SKORUPI,e.PALDEA_WOOPER,e.VULLABY,e.HISUI_QWILFISH,e.GLIMMET],2:[e.SKRELP,e.HISUI_SNEASEL]};case"macro":return{0:[e.HATENNA,e.FEEBAS,e.BOUNSWEET,e.SALANDIT,e.GALAR_PONYTA,e.GOTHITA,e.FROSLASS,e.VULPIX,e.FRILLISH,e.ODDISH,e.SINISTEA],1:[e.VULLABY,e.MAREANIE,e.ALOLA_VULPIX,e.TOGEPI,e.GALAR_CORSOLA,e.APPLIN],2:[e.TINKATINK,e.HISUI_LILLIGANT]};case"star_1":return{0:[e.MURKROW,e.SEEDOT,e.CACNEA,e.STUNKY,e.SANDILE,e.NYMBLE,e.MASCHIFF,e.GALAR_ZIGZAGOON],1:[e.UMBREON,e.SNEASEL,e.CORPHISH,e.ZORUA,e.INKAY,e.BOMBIRDIER],2:[e.DEINO,e.SPRIGATITO]};case"star_2":return{0:[e.GROWLITHE,e.HOUNDOUR,e.NUMEL,e.LITWICK,e.FLETCHLING,e.LITLEO,e.ROLYCOLY,e.CAPSAKID],1:[e.PONYTA,e.FLAREON,e.MAGBY,e.TORKOAL,e.SALANDIT,e.TURTONATOR],2:[e.LARVESTA,e.FUECOCO]};case"star_3":return{0:[e.ZUBAT,e.GRIMER,e.STUNKY,e.FOONGUS,e.MAREANIE,e.TOXEL,e.SHROODLE,e.PALDEA_WOOPER],1:[e.GASTLY,e.SEVIPER,e.SKRELP,e.ALOLA_GRIMER,e.GALAR_SLOWPOKE,e.HISUI_QWILFISH],2:[e.GLIMMET,e.BULBASAUR]};case"star_4":return{0:[e.CLEFFA,e.IGGLYBUFF,e.AZURILL,e.COTTONEE,e.FLABEBE,e.HATENNA,e.IMPIDIMP,e.TINKATINK],1:[e.TOGEPI,e.GARDEVOIR,e.SYLVEON,e.KLEFKI,e.MIMIKYU,e.ALOLA_VULPIX],2:[e.GALAR_PONYTA,e.POPPLIO]};case"star_5":return{0:[e.SHROOMISH,e.MAKUHITA,e.MEDITITE,e.CROAGUNK,e.SCRAGGY,e.MIENFOO,e.PAWMI,e.PALDEA_TAUROS],1:[e.RIOLU,e.TIMBURR,e.HAWLUCHA,e.PASSIMIAN,e.FALINKS,e.FLAMIGO],2:[e.JANGMO_O,e.QUAXLY]}}return console.warn(`Evil team admin for ${A} not found. Returning empty species pools.`),[]}initForEvilTeamAdmin(A,s,R){aR()||LR(),this.setPartyTemplates(ve.RIVAL_5),this.speciesPools=this.speciesPoolPerEvilTeamAdmin(s),R.forEach((i,a)=>{Array.isArray(i)||(i=[i]),this.setPartyMemberFunc(-(a+1),ne(i))});const I=this.name.toLowerCase().replace(/\s/g,"_");return this.name=U.t(`trainerNames:${I}`),this.setHasVoucher(!1),this.setTitle(A),this.setMoneyMultiplier(1.5),this.setBoss(),this.setStaticParty(),this.setBattleBgm("battle_plasma_boss"),this.setVictoryBgm("victory_team_plasma"),this}initForStatTrainer(A,s,...R){aR()||LR(),this.setPartyTemplates(ve.ELITE_FOUR),A.forEach((i,a)=>{Array.isArray(i)||(i=[i]),this.setPartyMemberFunc(-(a+1),ne(i))}),R.length&&(this.setSpeciesFilter(i=>R.find(a=>i.isOfType(a))!==void 0),this.setSpecialtyTypes(...R));const I=this.name.toLowerCase().replace(/\s/g,"_");return this.name=U.t(`trainerNames:${I}`),this.setMoneyMultiplier(2),this.setBoss(),this.setStaticParty(),this.setBattleBgm("battle_trainer"),this.setVictoryBgm("victory_trainer"),this}initForEvilTeamLeader(A,s,R=!1,...I){aR()||LR(),R?this.setPartyTemplates(ve.ELITE_FOUR):this.setPartyTemplates(ve.RIVAL_5),s.forEach((a,L)=>{Array.isArray(a)||(a=[a]),this.setPartyMemberFunc(-(L+1),ne(a))}),I.length&&(this.setSpeciesFilter(a=>I.find(L=>a.isOfType(L))!==void 0),this.setSpecialtyTypes(...I));const i=this.name.toLowerCase().replace(/\s/g,"_");return this.name=U.t(`trainerNames:${i}`),this.setTitle(A),this.setMoneyMultiplier(2.5),this.setBoss(),this.setStaticParty(),this.setHasVoucher(!0),this.setBattleBgm("battle_plasma_boss"),this.setVictoryBgm("victory_team_plasma"),this}initForGymLeader(A,s,...R){aR()||LR(),this.setPartyTemplateFunc(F8),A.forEach((i,a)=>{Array.isArray(i)||(i=[i]),this.setPartyMemberFunc(-(a+1),ne(i))}),R.length&&(this.setSpeciesFilter(i=>R.find(a=>i.isOfType(a))!==void 0),this.setSpecialtyTypes(...R));const I=this.name.toLowerCase().replace(/\s/g,"_");return this.name=U.t(`trainerNames:${I}`),this.setTitle("gym_leader"),s||this.setTitle("gym_leader_female"),this.setMoneyMultiplier(2.5),this.setBoss(),this.setStaticParty(),this.setHasVoucher(!0),this.setBattleBgm("battle_unova_gym"),this.setVictoryBgm("victory_gym"),this.setGenModifiersFunc(i=>{const a=i[0].scene.currentBattle.waveIndex;return bM(i,a>=100?1:0,R.length?R:void 0)}),this}initForEliteFour(A,s,...R){aR()||LR(),this.setPartyTemplates(ve.ELITE_FOUR),A.forEach((i,a)=>{Array.isArray(i)||(i=[i]),this.setPartyMemberFunc(-(a+1),ne(i))}),R.length?(this.setSpeciesFilter(i=>R.some(a=>i.isOfType(a))&&i.baseTotal>=VV),this.setSpecialtyTypes(...R)):this.setSpeciesFilter(i=>i.baseTotal>=VV);const I=this.name.toLowerCase().replace(/\s/g,"_");return this.name=U.t(`trainerNames:${I}`),this.setTitle("elite_four"),s||this.setTitle("elite_four_female"),this.setMoneyMultiplier(3.25),this.setBoss(),this.setStaticParty(),this.setHasVoucher(!0),this.setBattleBgm("battle_unova_elite"),this.setVictoryBgm("victory_gym"),this.setGenModifiersFunc(i=>bM(i,2,R.length?R:void 0)),this}initForChampion(A,s){aR()||LR(),this.setPartyTemplates(ve.CHAMPION),A.forEach((I,i)=>{Array.isArray(I)||(I=[I]),this.setPartyMemberFunc(-(i+1),ne(I))}),this.setSpeciesFilter(I=>I.baseTotal>=K8);const R=this.name.toLowerCase().replace(/\s/g,"_");return this.name=U.t(`trainerNames:${R}`),this.setTitle("champion"),s||this.setTitle("champion_female"),this.setMoneyMultiplier(10),this.setBoss(),this.setStaticParty(),this.setHasVoucher(!0),this.setBattleBgm("battle_champion_alder"),this.setVictoryBgm("victory_champion"),this.setGenModifiersFunc(I=>bM(I,3)),this}setLocalizedName(A){return aR()||LR(),this.name=U.t(`trainerNames:${A.toLowerCase().replace(/\s/g,"_")}`),this}getTitle(A=0,s){const R=this.name;if(!A&&s===bt.DOUBLE&&this.nameDouble)return this.nameDouble;if(this.hasGenders){if(this.nameFemale){if(s===bt.FEMALE||s===bt.DOUBLE&&A===2)return this.nameFemale}else if(s&&(aR()||LR(),U.exists(`trainerClasses:${this.name.toLowerCase()}`)))return R+"_female"}return R}loadAssets(A,s){return new Promise(R=>{const I=s===bt.DOUBLE,i=this.getSpriteKey(s===bt.FEMALE,!1),a=this.getSpriteKey(!0,!0);A.loadAtlas(i,"trainer"),I&&A.loadAtlas(a,"trainer"),A.load.once(Phaser.Loader.Events.COMPLETE,()=>{const L=console.warn;console.warn=()=>{};const S=A.anims.generateFrameNames(i,{zeroPad:4,suffix:".png",start:1,end:128}),o=I?A.anims.generateFrameNames(a,{zeroPad:4,suffix:".png",start:1,end:128}):"";console.warn=L,A.anims.exists(i)||A.anims.create({key:i,frames:S,frameRate:24,repeat:-1}),I&&!A.anims.exists(a)&&A.anims.create({key:a,frames:o,frameRate:24,repeat:-1}),R()}),A.load.isLoading()||A.load.start()})}clone(){var s,R,I,i,a,L,S,o,l;let A=new sM(this.trainerType);return A=this.trainerTypeDouble?A.setDoubleTrainerType(this.trainerTypeDouble):A,A=this.name?A.setName(this.name):A,A=this.hasGenders?A.setHasGenders(this.nameFemale,this.femaleEncounterBgm):A,A=this.hasDouble?A.setHasDouble(this.nameDouble,this.doubleEncounterBgm):A,A=this.title?A.setTitle(this.title):A,A=this.titleDouble?A.setDoubleTitle(this.titleDouble):A,A=this.hasCharSprite?A.setHasCharSprite():A,A=this.doubleOnly?A.setDoubleOnly():A,A=this.moneyMultiplier?A.setMoneyMultiplier(this.moneyMultiplier):A,A=this.isBoss?A.setBoss():A,A=this.hasStaticParty?A.setStaticParty():A,A=this.useSameSeedForAllMembers?A.setUseSameSeedForAllMembers():A,A=this.battleBgm?A.setBattleBgm(this.battleBgm):A,A=this.encounterBgm?A.setEncounterBgm(this.encounterBgm):A,A=this.victoryBgm?A.setVictoryBgm(this.victoryBgm):A,A=this.genModifiersFunc?A.setGenModifiersFunc(this.genModifiersFunc):A,this.modifierRewardFuncs&&(A.modifierRewardFuncs=this.modifierRewardFuncs.slice(0)),this.partyTemplates&&(A.partyTemplates=this.partyTemplates.slice(0)),A=this.partyTemplateFunc?A.setPartyTemplateFunc(this.partyTemplateFunc):A,this.partyMemberFuncs&&Object.keys(this.partyMemberFuncs).forEach(D=>{A=A.setPartyMemberFunc(parseInt(D,10),this.partyMemberFuncs[D])}),A=this.speciesPools?A.setSpeciesPools(this.speciesPools):A,A=this.speciesFilter?A.setSpeciesFilter(this.speciesFilter):A,this.specialtyTypes&&(A.specialtyTypes=this.specialtyTypes.slice(0)),A.encounterMessages=(s=this.encounterMessages)==null?void 0:s.slice(0),A.victoryMessages=(R=this.victoryMessages)==null?void 0:R.slice(0),A.defeatMessages=(I=this.defeatMessages)==null?void 0:I.slice(0),A.femaleEncounterMessages=(i=this.femaleEncounterMessages)==null?void 0:i.slice(0),A.femaleVictoryMessages=(a=this.femaleVictoryMessages)==null?void 0:a.slice(0),A.femaleDefeatMessages=(L=this.femaleDefeatMessages)==null?void 0:L.slice(0),A.doubleEncounterMessages=(S=this.doubleEncounterMessages)==null?void 0:S.slice(0),A.doubleVictoryMessages=(o=this.doubleVictoryMessages)==null?void 0:o.slice(0),A.doubleDefeatMessages=(l=this.doubleDefeatMessages)==null?void 0:l.slice(0),A}};T(sM,"TrainerConfig");let ee=sM,te=0;function TA(E){var s;const A=(s=E.currentBattle)==null?void 0:s.waveIndex;return A<40?ve.TWO_AVG:A<63?ve.THREE_AVG:A<65?ve.TWO_AVG_ONE_STRONG:A<112?ve.GYM_LEADER_4:ve.GYM_LEADER_5}T(TA,"getEvilGruntPartyTemplate");function Qo(E,...A){var s;return A[Math.min(Math.max(Math.ceil((E.gameMode.getWaveForDifficulty(((s=E.currentBattle)==null?void 0:s.waveIndex)||Gr,!0)-20)/30),0),A.length-1)]}T(Qo,"getWavePartyTemplate");function F8(E){return Qo(E,ve.GYM_LEADER_1,ve.GYM_LEADER_2,ve.GYM_LEADER_3,ve.GYM_LEADER_4,ve.GYM_LEADER_5)}T(F8,"getGymLeaderPartyTemplate");function ne(E,A=1,s=!1,R){return(I,i,a)=>{let L=RE(E);return s||(L=Ke(L).getTrainerSpeciesForLevel(i,!0,a,I.currentBattle.waveIndex)),I.addEnemyPokemon(Ke(L),i,A,void 0,void 0,R)}}T(ne,"getRandomPartyMemberFunc");function sr(E,A=1,s,R){const I=E;return E=T(i=>!i.legendary&&!i.subLegendary&&!i.mythical&&!i.isTrainerForbidden()&&I(i),"speciesFilter"),(i,a,L)=>i.addEnemyPokemon(Ke(i.randomSpecies(i.currentBattle.waveIndex,a,!1,E).getTrainerSpeciesForLevel(a,!0,L,i.currentBattle.waveIndex)),a,A,void 0,void 0,R)}T(sr,"getSpeciesFilterRandomPartyMemberFunc");function bM(E,A,s){const R=[],I=new Array(E.length).fill(null).map((i,a)=>a);for(let i=0;i<Math.min(A,E.length);i++){const a=RE(I);I.splice(I.indexOf(a),1),R.push(x.TERA_SHARD().generateType([],[RE(s||E[a].getTypes())]).withIdFromFunc(x.TERA_SHARD).newModifier(E[a]))}return R}T(bM,"getRandomTeraModifiers");const ce={BROCK:[e.GEODUDE,e.ONIX],MISTY:[e.STARYU,e.PSYDUCK],LT_SURGE:[e.VOLTORB,e.PIKACHU,e.ELECTABUZZ],ERIKA:[e.ODDISH,e.BELLSPROUT,e.TANGELA,e.HOPPIP],JANINE:[e.VENONAT,e.SPINARAK,e.ZUBAT],SABRINA:[e.ABRA,e.MR_MIME,e.ESPEON],BLAINE:[e.GROWLITHE,e.PONYTA,e.MAGMAR],GIOVANNI:[e.SANDILE,e.MURKROW,e.NIDORAN_M,e.NIDORAN_F],FALKNER:[e.PIDGEY,e.HOOTHOOT,e.DODUO],BUGSY:[e.SCYTHER,e.HERACROSS,e.SHUCKLE,e.PINSIR],WHITNEY:[e.GIRAFARIG,e.MILTANK],MORTY:[e.GASTLY,e.MISDREAVUS,e.SABLEYE],CHUCK:[e.POLIWRATH,e.MANKEY],JASMINE:[e.MAGNEMITE,e.STEELIX],PRYCE:[e.SEEL,e.SWINUB],CLAIR:[e.DRATINI,e.HORSEA,e.GYARADOS],ROXANNE:[e.GEODUDE,e.NOSEPASS],BRAWLY:[e.MACHOP,e.MAKUHITA],WATTSON:[e.MAGNEMITE,e.VOLTORB,e.ELECTRIKE],FLANNERY:[e.SLUGMA,e.TORKOAL,e.NUMEL],NORMAN:[e.SLAKOTH,e.SPINDA,e.CHANSEY,e.KANGASKHAN],WINONA:[e.SWABLU,e.WINGULL,e.TROPIUS,e.SKARMORY],TATE:[e.SOLROCK,e.NATU,e.CHIMECHO,e.GALLADE],LIZA:[e.LUNATONE,e.SPOINK,e.BALTOY,e.GARDEVOIR],JUAN:[e.HORSEA,e.BARBOACH,e.SPHEAL,e.RELICANTH],ROARK:[e.CRANIDOS,e.LARVITAR,e.GEODUDE],GARDENIA:[e.ROSELIA,e.TANGELA,e.TURTWIG],MAYLENE:[e.LUCARIO,e.MEDITITE,e.CHIMCHAR],CRASHER_WAKE:[e.BUIZEL,e.MAGIKARP,e.PIPLUP],FANTINA:[e.MISDREAVUS,e.DRIFLOON,e.SPIRITOMB],BYRON:[e.SHIELDON,e.BRONZOR,e.AGGRON],CANDICE:[e.SNEASEL,e.SNOVER,e.SNORUNT],VOLKNER:[e.SHINX,e.CHINCHOU,e.ROTOM],CILAN:[e.PANSAGE,e.COTTONEE,e.PETILIL],CHILI:[e.PANSEAR,e.DARUMAKA,e.HEATMOR],CRESS:[e.PANPOUR,e.BASCULIN,e.TYMPOLE],CHEREN:[e.LILLIPUP,e.MINCCINO,e.PATRAT],LENORA:[e.KANGASKHAN,e.DEERLING,e.AUDINO],ROXIE:[e.VENIPEDE,e.TRUBBISH,e.SKORUPI],BURGH:[e.SEWADDLE,e.SHELMET,e.KARRABLAST],ELESA:[e.EMOLGA,e.BLITZLE,e.JOLTIK],CLAY:[e.DRILBUR,e.SANDILE,e.GOLETT],SKYLA:[e.DUCKLETT,e.WOOBAT,e.RUFFLET],BRYCEN:[e.CRYOGONAL,e.VANILLITE,e.CUBCHOO],DRAYDEN:[e.DRUDDIGON,e.AXEW,e.DEINO],MARLON:[e.WAILMER,e.FRILLISH,e.TIRTOUGA],VIOLA:[e.SURSKIT,e.SCATTERBUG],GRANT:[e.AMAURA,e.TYRUNT],KORRINA:[e.HAWLUCHA,e.LUCARIO,e.MIENFOO],RAMOS:[e.SKIDDO,e.HOPPIP,e.BELLSPROUT],CLEMONT:[e.HELIOPTILE,e.MAGNEMITE,e.EMOLGA],VALERIE:[e.SYLVEON,e.MAWILE,e.MR_MIME],OLYMPIA:[e.ESPURR,e.SIGILYPH,e.SLOWKING],WULFRIC:[e.BERGMITE,e.SNOVER,e.CRYOGONAL],MILO:[e.GOSSIFLEUR,e.APPLIN,e.BOUNSWEET],NESSA:[e.CHEWTLE,e.ARROKUDA,e.WIMPOD],KABU:[e.SIZZLIPEDE,e.VULPIX,e.TORKOAL],BEA:[e.GALAR_FARFETCHD,e.MACHOP,e.CLOBBOPUS],ALLISTER:[e.GALAR_YAMASK,e.GALAR_CORSOLA,e.GASTLY],OPAL:[e.MILCERY,e.TOGETIC,e.GALAR_WEEZING],BEDE:[e.HATENNA,e.GALAR_PONYTA,e.GARDEVOIR],GORDIE:[e.ROLYCOLY,e.STONJOURNER,e.BINACLE],MELONY:[e.SNOM,e.GALAR_DARUMAKA,e.GALAR_MR_MIME],PIERS:[e.GALAR_ZIGZAGOON,e.SCRAGGY,e.INKAY],MARNIE:[e.IMPIDIMP,e.PURRLOIN,e.MORPEKO],RAIHAN:[e.DURALUDON,e.TURTONATOR,e.GOOMY],KATY:[e.NYMBLE,e.TAROUNTULA,e.HERACROSS],BRASSIUS:[e.SMOLIV,e.SHROOMISH,e.ODDISH],IONO:[e.TADBULB,e.WATTREL,e.VOLTORB],KOFU:[e.VELUZA,e.WIGLETT,e.WINGULL],LARRY:[e.STARLY,e.DUNSPARCE,e.KOMALA],RYME:[e.GREAVARD,e.SHUPPET,e.MIMIKYU],TULIP:[e.GIRAFARIG,e.FLITTLE,e.RALTS],GRUSHA:[e.CETODDLE,e.ALOLA_VULPIX,e.CUBCHOO],LORELEI:[e.JYNX,[e.SLOWBRO,e.GALAR_SLOWBRO],e.LAPRAS,[e.ALOLA_SANDSLASH,e.CLOYSTER]],BRUNO:[e.MACHAMP,e.HITMONCHAN,e.HITMONLEE,[e.ALOLA_GOLEM,e.GOLEM]],AGATHA:[e.GENGAR,[e.ARBOK,e.WEEZING],e.CROBAT,e.ALOLA_MAROWAK],LANCE:[e.DRAGONITE,e.GYARADOS,e.AERODACTYL,e.ALOLA_EXEGGUTOR],WILL:[e.XATU,e.JYNX,[e.SLOWBRO,e.SLOWKING],e.EXEGGUTOR],KOGA:[[e.WEEZING,e.MUK],[e.VENOMOTH,e.ARIADOS],e.CROBAT,e.TENTACRUEL],KAREN:[e.UMBREON,e.HONCHKROW,e.HOUNDOOM,e.WEAVILE],SIDNEY:[[e.SHIFTRY,e.CACTURNE],[e.SHARPEDO,e.CRAWDAUNT],e.ABSOL,e.MIGHTYENA],PHOEBE:[e.SABLEYE,e.DUSKNOIR,e.BANETTE,[e.MISMAGIUS,e.DRIFBLIM]],GLACIA:[e.GLALIE,e.WALREIN,e.FROSLASS,e.ABOMASNOW],DRAKE:[e.ALTARIA,e.SALAMENCE,e.FLYGON,e.KINGDRA],AARON:[[e.SCIZOR,e.KLEAVOR],e.HERACROSS,[e.VESPIQUEN,e.YANMEGA],e.DRAPION],BERTHA:[e.WHISCASH,e.HIPPOWDON,e.GLISCOR,e.RHYPERIOR],FLINT:[[e.FLAREON,e.RAPIDASH],e.MAGMORTAR,[e.STEELIX,e.LOPUNNY],e.INFERNAPE],LUCIAN:[e.MR_MIME,e.GALLADE,e.BRONZONG,[e.ALAKAZAM,e.ESPEON]],SHAUNTAL:[e.COFAGRIGUS,e.CHANDELURE,e.GOLURK,e.JELLICENT],MARSHAL:[e.CONKELDURR,e.MIENSHAO,e.THROH,e.SAWK],GRIMSLEY:[e.LIEPARD,e.KINGAMBIT,e.SCRAFTY,e.KROOKODILE],CAITLIN:[e.MUSHARNA,e.GOTHITELLE,e.SIGILYPH,e.REUNICLUS],MALVA:[e.PYROAR,e.TORKOAL,e.CHANDELURE,e.TALONFLAME],SIEBOLD:[e.CLAWITZER,e.GYARADOS,e.BARBARACLE,e.STARMIE],WIKSTROM:[e.KLEFKI,e.PROBOPASS,e.SCIZOR,e.AEGISLASH],DRASNA:[e.DRAGALGE,e.DRUDDIGON,e.ALTARIA,e.NOIVERN],HALA:[e.HARIYAMA,e.BEWEAR,e.CRABOMINABLE,[e.POLIWRATH,e.ANNIHILAPE]],MOLAYNE:[e.KLEFKI,e.MAGNEZONE,e.METAGROSS,e.ALOLA_DUGTRIO],OLIVIA:[e.RELICANTH,e.CARBINK,e.ALOLA_GOLEM,e.LYCANROC],ACEROLA:[[e.BANETTE,e.DRIFBLIM],e.MIMIKYU,e.DHELMISE,e.PALOSSAND],KAHILI:[[e.BRAVIARY,e.MANDIBUZZ],e.HAWLUCHA,e.ORICORIO,e.TOUCANNON],MARNIE_ELITE:[e.MORPEKO,e.LIEPARD,[e.TOXICROAK,e.SCRAFTY],e.GRIMMSNARL],NESSA_ELITE:[e.GOLISOPOD,[e.PELIPPER,e.QUAGSIRE],e.TOXAPEX,e.DREDNAW],BEA_ELITE:[e.HAWLUCHA,[e.GRAPPLOCT,e.SIRFETCHD],e.FALINKS,e.MACHAMP],ALLISTER_ELITE:[e.DUSKNOIR,[e.POLTEAGEIST,e.RUNERIGUS],e.CURSOLA,e.GENGAR],RAIHAN_ELITE:[e.GOODRA,[e.TORKOAL,e.TURTONATOR],e.FLYGON,e.ARCHALUDON],RIKA:[e.WHISCASH,[e.DONPHAN,e.DUGTRIO],e.CAMERUPT,e.CLODSIRE],POPPY:[e.COPPERAJAH,e.BRONZONG,e.CORVIKNIGHT,e.TINKATON],LARRY_ELITE:[e.STARAPTOR,e.FLAMIGO,e.ALTARIA,e.TROPIUS],HASSEL:[e.NOIVERN,[e.FLAPPLE,e.APPLETUN],e.DRAGALGE,e.BAXCALIBUR],CRISPIN:[e.TALONFLAME,e.CAMERUPT,e.MAGMORTAR,e.BLAZIKEN],AMARYS:[e.SKARMORY,e.EMPOLEON,e.SCIZOR,e.METAGROSS],LACEY:[e.EXCADRILL,e.PRIMARINA,[e.ALCREMIE,e.GRANBULL],e.WHIMSICOTT],DRAYTON:[e.DRAGONITE,e.ARCHALUDON,e.HAXORUS,e.SCEPTILE],BLUE:[[e.GYARADOS,e.EXEGGUTOR,e.ARCANINE],e.HO_OH,[e.RHYPERIOR,e.MAGNEZONE]],RED:[e.LUGIA,e.SNORLAX,[e.ESPEON,e.UMBREON,e.SYLVEON]],LANCE_CHAMPION:[e.DRAGONITE,e.KINGDRA,e.ALOLA_EXEGGUTOR],STEVEN:[e.AGGRON,[e.ARMALDO,e.CRADILY],e.DIALGA],WALLACE:[e.MILOTIC,e.PALKIA,e.LUDICOLO],CYNTHIA:[e.GIRATINA,e.LUCARIO,e.TOGEKISS],ALDER:[e.VOLCARONA,e.ZEKROM,[e.ACCELGOR,e.ESCAVALIER],e.KELDEO],IRIS:[e.HAXORUS,e.RESHIRAM,e.ARCHEOPS],DIANTHA:[e.HAWLUCHA,e.XERNEAS,e.GOODRA],HAU:[[e.SOLGALEO,e.LUNALA],e.NOIVERN,[e.DECIDUEYE,e.INCINEROAR,e.PRIMARINA],[e.TAPU_BULU,e.TAPU_FINI,e.TAPU_KOKO,e.TAPU_LELE]],LEON:[e.DRAGAPULT,e.ZACIAN,e.AEGISLASH],GEETA:[e.MIRAIDON,[e.ESPATHRA,e.VELUZA],[e.AVALUGG,e.HISUI_AVALUGG],e.KINGAMBIT],NEMONA:[e.KORAIDON,e.PAWMOT,[e.DUDUNSPARCE,e.ORTHWORM],[e.MEOWSCARADA,e.SKELEDIRGE,e.QUAQUAVAL]],KIERAN:[[e.GRIMMSNARL,e.INCINEROAR,e.PORYGON_Z],e.OGERPON,e.TERAPAGOS,e.HYDRAPPLE]},BA={[C.UNKNOWN]:new ee(0).setHasGenders(),[C.ACE_TRAINER]:new ee(++te).setHasGenders("Ace Trainer Female").setHasDouble("Ace Duo").setMoneyMultiplier(2.25).setEncounterBgm(C.ACE_TRAINER).setPartyTemplateFunc(E=>Qo(E,ve.THREE_WEAK_BALANCED,ve.FOUR_WEAK_BALANCED,ve.FIVE_WEAK_BALANCED,ve.SIX_WEAK_BALANCED)),[C.ARTIST]:new ee(++te).setEncounterBgm(C.RICH).setPartyTemplates(ve.ONE_STRONG,ve.TWO_AVG,ve.THREE_AVG).setSpeciesPools([e.SMEARGLE]),[C.BACKERS]:new ee(++te).setHasGenders("Backers").setDoubleOnly().setEncounterBgm(C.CYCLIST),[C.BACKPACKER]:new ee(++te).setHasGenders("Backpacker Female").setHasDouble("Backpackers").setSpeciesFilter(E=>E.isOfType(n.FLYING)||E.isOfType(n.ROCK)).setEncounterBgm(C.BACKPACKER).setPartyTemplates(ve.ONE_STRONG,ve.ONE_WEAK_ONE_STRONG,ve.ONE_AVG_ONE_STRONG).setSpeciesPools({0:[e.RHYHORN,e.AIPOM,e.MAKUHITA,e.MAWILE,e.NUMEL,e.LILLIPUP,e.SANDILE,e.WOOLOO],1:[e.GIRAFARIG,e.ZANGOOSE,e.SEVIPER,e.CUBCHOO,e.PANCHAM,e.SKIDDO,e.MUDBRAY],2:[e.TAUROS,e.STANTLER,e.DARUMAKA,e.BOUFFALANT,e.DEERLING,e.IMPIDIMP],3:[e.GALAR_DARUMAKA,e.TEDDIURSA]}),[C.BAKER]:new ee(++te).setEncounterBgm(C.CLERK).setMoneyMultiplier(1.35).setSpeciesFilter(E=>E.isOfType(n.GRASS)||E.isOfType(n.FIRE)),[C.BEAUTY]:new ee(++te).setMoneyMultiplier(1.55).setEncounterBgm(C.PARASOL_LADY),[C.BIKER]:new ee(++te).setMoneyMultiplier(1.4).setEncounterBgm(C.ROUGHNECK).setSpeciesFilter(E=>E.isOfType(n.POISON)),[C.BLACK_BELT]:new ee(++te).setHasGenders("Battle Girl",C.PSYCHIC).setHasDouble("Crush Kin").setEncounterBgm(C.ROUGHNECK).setSpecialtyTypes(n.FIGHTING).setPartyTemplates(ve.TWO_WEAK_ONE_AVG,ve.TWO_WEAK_ONE_AVG,ve.TWO_AVG,ve.TWO_AVG,ve.TWO_WEAK_ONE_STRONG,ve.THREE_AVG,ve.TWO_AVG_ONE_STRONG).setSpeciesPools({0:[e.NIDORAN_F,e.NIDORAN_M,e.MACHOP,e.MAKUHITA,e.MEDITITE,e.CROAGUNK,e.TIMBURR],1:[e.MANKEY,e.POLIWRATH,e.TYROGUE,e.BRELOOM,e.SCRAGGY,e.MIENFOO,e.PANCHAM,e.STUFFUL,e.CRABRAWLER],2:[e.HERACROSS,e.RIOLU,e.THROH,e.SAWK,e.PASSIMIAN,e.CLOBBOPUS],3:[e.HITMONTOP,e.INFERNAPE,e.GALLADE,e.HAWLUCHA,e.HAKAMO_O],4:[e.KUBFU]}),[C.BREEDER]:new ee(++te).setMoneyMultiplier(1.325).setEncounterBgm(C.POKEFAN).setHasGenders("Breeder Female").setHasDouble("Breeders").setPartyTemplateFunc(E=>Qo(E,ve.FOUR_WEAKER,ve.FIVE_WEAKER,ve.SIX_WEAKER)).setSpeciesFilter(E=>E.baseTotal<450),[C.CLERK]:new ee(++te).setHasGenders("Clerk Female").setHasDouble("Colleagues").setEncounterBgm(C.CLERK).setPartyTemplates(ve.TWO_WEAK,ve.THREE_WEAK,ve.ONE_AVG,ve.TWO_AVG,ve.TWO_WEAK_ONE_AVG).setSpeciesPools({0:[e.MEOWTH,e.PSYDUCK,e.BUDEW,e.PIDOVE,e.CINCCINO,e.LITLEO],1:[e.JIGGLYPUFF,e.MAGNEMITE,e.MARILL,e.COTTONEE,e.SKIDDO],2:[e.BUIZEL,e.SNEASEL,e.KLEFKI,e.INDEEDEE]}),[C.CYCLIST]:new ee(++te).setMoneyMultiplier(1.3).setHasGenders("Cyclist Female").setHasDouble("Cyclists").setEncounterBgm(C.CYCLIST).setPartyTemplates(ve.TWO_WEAK,ve.ONE_AVG).setSpeciesPools({0:[e.PICHU,e.STARLY,e.TAILLOW,e.BOLTUND],1:[e.DODUO,e.ELECTRIKE,e.BLITZLE,e.WATTREL],2:[e.YANMA,e.NINJASK,e.WHIRLIPEDE,e.EMOLGA],3:[e.ACCELGOR,e.DREEPY]}),[C.DANCER]:new ee(++te).setMoneyMultiplier(1.55).setEncounterBgm(C.CYCLIST).setPartyTemplates(ve.TWO_WEAK,ve.ONE_AVG,ve.TWO_AVG,ve.TWO_WEAK_SAME_TWO_WEAK_SAME).setSpeciesPools({0:[e.RALTS,e.SPOINK,e.LOTAD,e.BUDEW],1:[e.SPINDA,e.SWABLU,e.MARACTUS],2:[e.BELLOSSOM,e.HITMONTOP,e.MIME_JR,e.ORICORIO],3:[e.POPPLIO]}),[C.DEPOT_AGENT]:new ee(++te).setMoneyMultiplier(1.45).setEncounterBgm(C.CLERK),[C.DOCTOR]:new ee(++te).setHasGenders("Nurse","lass").setHasDouble("Medical Team").setMoneyMultiplier(3).setEncounterBgm(C.CLERK).setSpeciesFilter(E=>!!E.getLevelMoves().find(A=>A[1]===t.HEAL_PULSE)),[C.FIREBREATHER]:new ee(++te).setMoneyMultiplier(1.4).setEncounterBgm(C.ROUGHNECK).setSpeciesFilter(E=>!!E.getLevelMoves().find(A=>A[1]===t.SMOG)||E.isOfType(n.FIRE)),[C.FISHERMAN]:new ee(++te).setMoneyMultiplier(1.25).setEncounterBgm(C.BACKPACKER).setSpecialtyTypes(n.WATER).setPartyTemplates(ve.TWO_WEAK_SAME_ONE_AVG,ve.ONE_AVG,ve.THREE_WEAK_SAME,ve.ONE_STRONG,ve.SIX_WEAKER).setSpeciesPools({0:[e.TENTACOOL,e.MAGIKARP,e.GOLDEEN,e.STARYU,e.REMORAID,e.SKRELP,e.CLAUNCHER,e.ARROKUDA],1:[e.POLIWAG,e.SHELLDER,e.KRABBY,e.HORSEA,e.CARVANHA,e.BARBOACH,e.CORPHISH,e.FINNEON,e.TYMPOLE,e.BASCULIN,e.FRILLISH,e.INKAY],2:[e.CHINCHOU,e.CORSOLA,e.WAILMER,e.BARBOACH,e.CLAMPERL,e.LUVDISC,e.MANTYKE,e.ALOMOMOLA,e.TATSUGIRI,e.VELUZA],3:[e.LAPRAS,e.FEEBAS,e.RELICANTH,e.DONDOZO]}),[C.GUITARIST]:new ee(++te).setMoneyMultiplier(1.2).setEncounterBgm(C.ROUGHNECK).setSpecialtyTypes(n.ELECTRIC).setSpeciesFilter(E=>E.isOfType(n.ELECTRIC)),[C.HARLEQUIN]:new ee(++te).setEncounterBgm(C.PSYCHIC).setSpeciesFilter(E=>gi[t.TRICK_ROOM].indexOf(E.speciesId)>-1),[C.HIKER]:new ee(++te).setEncounterBgm(C.BACKPACKER).setPartyTemplates(ve.TWO_AVG_SAME_ONE_AVG,ve.TWO_AVG_SAME_ONE_STRONG,ve.TWO_AVG,ve.FOUR_WEAK,ve.ONE_STRONG).setSpeciesPools({0:[e.SANDSHREW,e.DIGLETT,e.GEODUDE,e.MACHOP,e.ARON,e.ROGGENROLA,e.DRILBUR,e.NACLI],1:[e.ZUBAT,e.RHYHORN,e.ONIX,e.CUBONE,e.WOOBAT,e.SWINUB,e.NOSEPASS,e.HIPPOPOTAS,e.DWEBBLE,e.KLAWF,e.TOEDSCOOL],2:[e.TORKOAL,e.TRAPINCH,e.BARBOACH,e.GOLETT,e.ALOLA_DIGLETT,e.ALOLA_GEODUDE,e.GALAR_STUNFISK,e.PALDEA_WOOPER],3:[e.MAGBY,e.LARVITAR]}),[C.HOOLIGANS]:new ee(++te).setDoubleOnly().setEncounterBgm(C.ROUGHNECK).setSpeciesFilter(E=>E.isOfType(n.POISON)||E.isOfType(n.DARK)),[C.HOOPSTER]:new ee(++te).setMoneyMultiplier(1.2).setEncounterBgm(C.CYCLIST),[C.INFIELDER]:new ee(++te).setMoneyMultiplier(1.2).setEncounterBgm(C.CYCLIST),[C.JANITOR]:new ee(++te).setMoneyMultiplier(1.1).setEncounterBgm(C.CLERK),[C.LINEBACKER]:new ee(++te).setMoneyMultiplier(1.2).setEncounterBgm(C.CYCLIST),[C.MAID]:new ee(++te).setMoneyMultiplier(1.6).setEncounterBgm(C.RICH),[C.MUSICIAN]:new ee(++te).setEncounterBgm(C.ROUGHNECK).setSpeciesFilter(E=>!!E.getLevelMoves().find(A=>A[1]===t.SING)),[C.HEX_MANIAC]:new ee(++te).setMoneyMultiplier(1.5).setEncounterBgm(C.PSYCHIC).setPartyTemplates(ve.TWO_AVG,ve.ONE_AVG_ONE_STRONG,ve.TWO_AVG_SAME_ONE_AVG,ve.THREE_AVG,ve.TWO_STRONG).setSpeciesFilter(E=>E.isOfType(n.GHOST)),[C.NURSERY_AIDE]:new ee(++te).setMoneyMultiplier(1.3).setEncounterBgm("lass"),[C.OFFICER]:new ee(++te).setMoneyMultiplier(1.55).setEncounterBgm(C.CLERK).setPartyTemplates(ve.ONE_AVG,ve.ONE_STRONG,ve.TWO_AVG,ve.TWO_WEAK_SAME_ONE_AVG).setSpeciesPools({0:[e.VULPIX,e.GROWLITHE,e.SNUBBULL,e.POOCHYENA,e.ELECTRIKE,e.LILLIPUP,e.YAMPER,e.FIDOUGH],1:[e.HOUNDOUR,e.ROCKRUFF,e.MASCHIFF],2:[e.JOLTEON,e.RIOLU],3:[],4:[e.ENTEI,e.SUICUNE,e.RAIKOU]}),[C.PARASOL_LADY]:new ee(++te).setMoneyMultiplier(1.55).setEncounterBgm(C.PARASOL_LADY).setSpeciesFilter(E=>E.isOfType(n.WATER)),[C.PILOT]:new ee(++te).setEncounterBgm(C.CLERK).setSpeciesFilter(E=>gi[t.FLY].indexOf(E.speciesId)>-1),[C.POKEFAN]:new ee(++te).setMoneyMultiplier(1.4).setName("PokéFan").setHasGenders("PokéFan Female").setHasDouble("PokéFan Family").setEncounterBgm(C.POKEFAN).setPartyTemplates(ve.SIX_WEAKER,ve.FOUR_WEAK,ve.TWO_AVG,ve.ONE_STRONG,ve.FOUR_WEAK_SAME,ve.FIVE_WEAK,ve.SIX_WEAKER_SAME),[C.PRESCHOOLER]:new ee(++te).setMoneyMultiplier(.2).setEncounterBgm(C.YOUNGSTER).setHasGenders("Preschooler Female","lass").setHasDouble("Preschoolers").setPartyTemplates(ve.THREE_WEAK,ve.FOUR_WEAKER,ve.TWO_WEAK_SAME_ONE_AVG,ve.FIVE_WEAKER).setSpeciesPools({0:[e.CATERPIE,e.PICHU,e.SANDSHREW,e.LEDYBA,e.BUDEW,e.BURMY,e.WOOLOO,e.PAWMI,e.SMOLIV],1:[e.EEVEE,e.CLEFFA,e.IGGLYBUFF,e.SWINUB,e.WOOPER,e.DRIFLOON,e.DEDENNE,e.STUFFUL],2:[e.RALTS,e.RIOLU,e.JOLTIK,e.TANDEMAUS],3:[e.DARUMAKA,e.TINKATINK]}),[C.PSYCHIC]:new ee(++te).setHasGenders("Psychic Female").setHasDouble("Psychics").setMoneyMultiplier(1.4).setEncounterBgm(C.PSYCHIC).setPartyTemplates(ve.TWO_WEAK,ve.TWO_AVG,ve.TWO_WEAK_SAME_ONE_AVG,ve.TWO_WEAK_SAME_TWO_WEAK_SAME,ve.ONE_STRONGER).setSpeciesPools({0:[e.ABRA,e.DROWZEE,e.RALTS,e.SPOINK,e.GOTHITA,e.SOLOSIS,e.BLIPBUG,e.ESPURR,e.HATENNA],1:[e.MIME_JR,e.EXEGGCUTE,e.MEDITITE,e.NATU,e.EXEGGCUTE,e.WOOBAT,e.INKAY,e.ORANGURU],2:[e.ELGYEM,e.SIGILYPH,e.BALTOY,e.GIRAFARIG,e.MEOWSTIC],3:[e.BELDUM,e.ESPEON,e.STANTLER]}),[C.RANGER]:new ee(++te).setMoneyMultiplier(1.4).setName("Pokémon Ranger").setEncounterBgm(C.BACKPACKER).setHasGenders("Pokémon Ranger Female").setHasDouble("Pokémon Rangers").setSpeciesPools({0:[e.PICHU,e.GROWLITHE,e.PONYTA,e.ZIGZAGOON,e.SEEDOT,e.BIDOOF,e.RIOLU,e.SEWADDLE,e.SKIDDO,e.SALANDIT,e.YAMPER],1:[e.AZURILL,e.TAUROS,e.MAREEP,e.FARFETCHD,e.TEDDIURSA,e.SHROOMISH,e.ELECTRIKE,e.BUDEW,e.BUIZEL,e.MUDBRAY,e.STUFFUL],2:[e.EEVEE,e.SCYTHER,e.KANGASKHAN,e.RALTS,e.MUNCHLAX,e.ZORUA,e.PALDEA_TAUROS,e.TINKATINK,e.CYCLIZAR,e.FLAMIGO],3:[e.LARVESTA]}),[C.RICH]:new ee(++te).setMoneyMultiplier(5).setName("Gentleman").setHasGenders("Madame").setHasDouble("Rich Couple"),[C.RICH_KID]:new ee(++te).setMoneyMultiplier(3.75).setName("Rich Boy").setHasGenders("Lady").setHasDouble("Rich Kids").setEncounterBgm(C.RICH),[C.ROUGHNECK]:new ee(++te).setMoneyMultiplier(1.4).setEncounterBgm(C.ROUGHNECK).setSpeciesFilter(E=>E.isOfType(n.DARK)),[C.SAILOR]:new ee(++te).setMoneyMultiplier(1.4).setEncounterBgm(C.BACKPACKER).setSpeciesFilter(E=>E.isOfType(n.WATER)||E.isOfType(n.FIGHTING)),[C.SCIENTIST]:new ee(++te).setHasGenders("Scientist Female").setHasDouble("Scientists").setMoneyMultiplier(1.7).setEncounterBgm(C.SCIENTIST).setSpeciesPools({0:[e.MAGNEMITE,e.GRIMER,e.DROWZEE,e.VOLTORB,e.KOFFING],1:[e.BALTOY,e.BRONZOR,e.FERROSEED,e.KLINK,e.CHARJABUG,e.BLIPBUG,e.HELIOPTILE],2:[e.ABRA,e.DITTO,e.PORYGON,e.ELEKID,e.SOLOSIS,e.GALAR_WEEZING],3:[e.OMANYTE,e.KABUTO,e.AERODACTYL,e.LILEEP,e.ANORITH,e.CRANIDOS,e.SHIELDON,e.TIRTOUGA,e.ARCHEN,e.ARCTOVISH,e.ARCTOZOLT,e.DRACOVISH,e.DRACOZOLT],4:[e.ROTOM,e.MELTAN]}),[C.SMASHER]:new ee(++te).setMoneyMultiplier(1.2).setEncounterBgm(C.CYCLIST),[C.SNOW_WORKER]:new ee(++te).setName("Worker").setHasDouble("Workers").setMoneyMultiplier(1.7).setEncounterBgm(C.CLERK).setSpeciesFilter(E=>E.isOfType(n.ICE)||E.isOfType(n.STEEL)),[C.STRIKER]:new ee(++te).setMoneyMultiplier(1.2).setEncounterBgm(C.CYCLIST),[C.SCHOOL_KID]:new ee(++te).setMoneyMultiplier(.75).setEncounterBgm(C.YOUNGSTER).setHasGenders("School Kid Female","lass").setHasDouble("School Kids").setSpeciesPools({0:[e.ODDISH,e.EXEGGCUTE,e.TEDDIURSA,e.WURMPLE,e.RALTS,e.SHROOMISH,e.FLETCHLING],1:[e.VOLTORB,e.WHISMUR,e.MEDITITE,e.MIME_JR,e.NYMBLE],2:[e.TANGELA,e.EEVEE,e.YANMA],3:[e.TADBULB]}),[C.SWIMMER]:new ee(++te).setMoneyMultiplier(1.3).setEncounterBgm(C.PARASOL_LADY).setHasGenders("Swimmer Female").setHasDouble("Swimmers").setSpecialtyTypes(n.WATER).setSpeciesFilter(E=>E.isOfType(n.WATER)),[C.TWINS]:new ee(++te).setDoubleOnly().setMoneyMultiplier(.65).setUseSameSeedForAllMembers().setPartyTemplateFunc(E=>Qo(E,ve.TWO_WEAK,ve.TWO_AVG,ve.TWO_STRONG)).setPartyMemberFunc(0,ne([e.PLUSLE,e.VOLBEAT,e.PACHIRISU,e.SILCOON,e.METAPOD,e.IGGLYBUFF,e.PETILIL,e.EEVEE])).setPartyMemberFunc(1,ne([e.MINUN,e.ILLUMISE,e.EMOLGA,e.CASCOON,e.KAKUNA,e.CLEFFA,e.COTTONEE,e.EEVEE],2)).setEncounterBgm(C.TWINS),[C.VETERAN]:new ee(++te).setHasGenders("Veteran Female").setHasDouble("Veteran Duo").setMoneyMultiplier(2.5).setEncounterBgm(C.ACE_TRAINER).setSpeciesFilter(E=>E.isOfType(n.DRAGON)),[C.WAITER]:new ee(++te).setHasGenders("Waitress").setHasDouble("Restaurant Staff").setMoneyMultiplier(1.5).setEncounterBgm(C.CLERK).setSpeciesPools({0:[e.CLEFFA,e.CHATOT,e.PANSAGE,e.PANSEAR,e.PANPOUR,e.MINCCINO],1:[e.TROPIUS,e.PETILIL,e.BOUNSWEET,e.INDEEDEE],2:[e.APPLIN,e.SINISTEA,e.POLTCHAGEIST]}),[C.WORKER]:new ee(++te).setHasGenders("Worker Female").setHasDouble("Workers").setEncounterBgm(C.CLERK).setMoneyMultiplier(1.7).setSpeciesFilter(E=>E.isOfType(n.ROCK)||E.isOfType(n.STEEL)),[C.YOUNGSTER]:new ee(++te).setMoneyMultiplier(.5).setEncounterBgm(C.YOUNGSTER).setHasGenders("Lass","lass").setHasDouble("Beginners").setPartyTemplates(ve.TWO_WEAKER).setSpeciesPools([e.CATERPIE,e.WEEDLE,e.RATTATA,e.SENTRET,e.POOCHYENA,e.ZIGZAGOON,e.WURMPLE,e.BIDOOF,e.PATRAT,e.LILLIPUP]),[C.ROCKET_GRUNT]:new ee(++te).setHasGenders("Rocket Grunt Female").setHasDouble("Rocket Grunts").setMoneyMultiplier(1).setEncounterBgm(C.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_rocket_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>TA(E)).setSpeciesPools({0:[e.WEEDLE,e.RATTATA,e.EKANS,e.SANDSHREW,e.ZUBAT,e.GEODUDE,e.KOFFING,e.GRIMER,e.ODDISH,e.SLOWPOKE],1:[e.GYARADOS,e.LICKITUNG,e.TAUROS,e.MANKEY,e.SCYTHER,e.ELEKID,e.MAGBY,e.CUBONE,e.GROWLITHE,e.MURKROW,e.GASTLY,e.EXEGGCUTE,e.VOLTORB,e.MAGNEMITE],2:[e.PORYGON,e.ALOLA_RATTATA,e.ALOLA_SANDSHREW,e.ALOLA_MEOWTH,e.ALOLA_GRIMER,e.ALOLA_GEODUDE,e.PALDEA_TAUROS,e.OMANYTE,e.KABUTO],3:[e.DRATINI,e.LARVITAR]}),[C.ARCHER]:new ee(++te).setMoneyMultiplier(1.5).initForEvilTeamAdmin("rocket_admin","rocket",[e.HOUNDOOM]).setEncounterBgm(C.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_rocket_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>TA(E)),[C.ARIANA]:new ee(++te).setMoneyMultiplier(1.5).initForEvilTeamAdmin("rocket_admin_female","rocket",[e.ARBOK]).setEncounterBgm(C.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_rocket_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>TA(E)),[C.PROTON]:new ee(++te).setMoneyMultiplier(1.5).initForEvilTeamAdmin("rocket_admin","rocket",[e.CROBAT]).setEncounterBgm(C.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_rocket_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>TA(E)),[C.PETREL]:new ee(++te).setMoneyMultiplier(1.5).initForEvilTeamAdmin("rocket_admin","rocket",[e.WEEZING]).setEncounterBgm(C.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_rocket_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>TA(E)),[C.MAGMA_GRUNT]:new ee(++te).setHasGenders("Magma Grunt Female").setHasDouble("Magma Grunts").setMoneyMultiplier(1).setEncounterBgm(C.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_aqua_magma_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>TA(E)).setSpeciesPools({0:[e.SLUGMA,e.POOCHYENA,e.NUMEL,e.ZIGZAGOON,e.DIGLETT,e.MAGBY,e.TORKOAL,e.GROWLITHE,e.BALTOY],1:[e.SOLROCK,e.HIPPOPOTAS,e.SANDACONDA,e.PHANPY,e.ROLYCOLY,e.GLIGAR,e.RHYHORN,e.HEATMOR],2:[e.TRAPINCH,e.LILEEP,e.ANORITH,e.HISUI_GROWLITHE,e.TURTONATOR,e.ARON,e.TOEDSCOOL],3:[e.CAPSAKID,e.CHARCADET]}),[C.TABITHA]:new ee(++te).setMoneyMultiplier(1.5).initForEvilTeamAdmin("magma_admin","magma",[e.CAMERUPT]).setEncounterBgm(C.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_aqua_magma_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>TA(E)),[C.COURTNEY]:new ee(++te).setMoneyMultiplier(1.5).initForEvilTeamAdmin("magma_admin_female","magma",[e.CAMERUPT]).setEncounterBgm(C.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_aqua_magma_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>TA(E)),[C.AQUA_GRUNT]:new ee(++te).setHasGenders("Aqua Grunt Female").setHasDouble("Aqua Grunts").setMoneyMultiplier(1).setEncounterBgm(C.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_aqua_magma_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>TA(E)).setSpeciesPools({0:[e.CARVANHA,e.WAILMER,e.ZIGZAGOON,e.LOTAD,e.CORPHISH,e.SPHEAL,e.REMORAID,e.QWILFISH,e.BARBOACH],1:[e.CLAMPERL,e.CHINCHOU,e.WOOPER,e.WINGULL,e.TENTACOOL,e.AZURILL,e.CLOBBOPUS,e.HORSEA],2:[e.MANTYKE,e.DHELMISE,e.HISUI_QWILFISH,e.ARROKUDA,e.PALDEA_WOOPER,e.SKRELP],3:[e.DONDOZO,e.BASCULEGION]}),[C.MATT]:new ee(++te).setMoneyMultiplier(1.5).initForEvilTeamAdmin("aqua_admin","aqua",[e.SHARPEDO]).setEncounterBgm(C.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_aqua_magma_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>TA(E)),[C.SHELLY]:new ee(++te).setMoneyMultiplier(1.5).initForEvilTeamAdmin("aqua_admin_female","aqua",[e.SHARPEDO]).setEncounterBgm(C.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_aqua_magma_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>TA(E)),[C.GALACTIC_GRUNT]:new ee(++te).setHasGenders("Galactic Grunt Female").setHasDouble("Galactic Grunts").setMoneyMultiplier(1).setEncounterBgm(C.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_galactic_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>TA(E)).setSpeciesPools({0:[e.GLAMEOW,e.STUNKY,e.CROAGUNK,e.SHINX,e.WURMPLE,e.BRONZOR,e.DRIFLOON,e.BURMY,e.CARNIVINE],1:[e.LICKITUNG,e.RHYHORN,e.TANGELA,e.ZUBAT,e.YANMA,e.SKORUPI,e.GLIGAR,e.SWINUB],2:[e.HISUI_GROWLITHE,e.HISUI_QWILFISH,e.SNEASEL,e.ELEKID,e.MAGBY,e.DUSKULL],3:[e.ROTOM,e.SPIRITOMB,e.HISUI_SNEASEL]}),[C.JUPITER]:new ee(++te).setMoneyMultiplier(1.5).initForEvilTeamAdmin("galactic_commander_female","galactic",[e.SKUNTANK]).setEncounterBgm(C.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_galactic_admin").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>TA(E)),[C.MARS]:new ee(++te).setMoneyMultiplier(1.5).initForEvilTeamAdmin("galactic_commander_female","galactic",[e.PURUGLY]).setEncounterBgm(C.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_galactic_admin").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>TA(E)),[C.SATURN]:new ee(++te).setMoneyMultiplier(1.5).initForEvilTeamAdmin("galactic_commander","galactic",[e.TOXICROAK]).setEncounterBgm(C.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_galactic_admin").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>TA(E)),[C.PLASMA_GRUNT]:new ee(++te).setHasGenders("Plasma Grunt Female").setHasDouble("Plasma Grunts").setMoneyMultiplier(1).setEncounterBgm(C.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_plasma_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>TA(E)).setSpeciesPools({0:[e.PATRAT,e.LILLIPUP,e.PURRLOIN,e.SCRAFTY,e.WOOBAT,e.VANILLITE,e.SANDILE,e.TRUBBISH,e.TYMPOLE],1:[e.FRILLISH,e.VENIPEDE,e.GOLETT,e.TIMBURR,e.DARUMAKA,e.FOONGUS,e.JOLTIK,e.CUBCHOO,e.KLINK],2:[e.PAWNIARD,e.RUFFLET,e.VULLABY,e.ZORUA,e.DRILBUR,e.MIENFOO,e.DURANT,e.BOUFFALANT],3:[e.DRUDDIGON,e.HISUI_ZORUA,e.AXEW,e.DEINO]}),[C.ZINZOLIN]:new ee(++te).setMoneyMultiplier(1.5).initForEvilTeamAdmin("plasma_sage","plasma",[e.CRYOGONAL]).setEncounterBgm(C.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_plasma_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>TA(E)),[C.ROOD]:new ee(++te).setMoneyMultiplier(1.5).initForEvilTeamAdmin("plasma_sage","plasma",[e.SWOOBAT]).setEncounterBgm(C.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_plasma_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>TA(E)),[C.FLARE_GRUNT]:new ee(++te).setHasGenders("Flare Grunt Female").setHasDouble("Flare Grunts").setMoneyMultiplier(1).setEncounterBgm(C.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_flare_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>TA(E)).setSpeciesPools({0:[e.FLETCHLING,e.LITLEO,e.PONYTA,e.INKAY,e.HOUNDOUR,e.SKORUPI,e.SCRAFTY,e.CROAGUNK,e.SCATTERBUG,e.ESPURR],1:[e.HELIOPTILE,e.ELECTRIKE,e.SKRELP,e.PANCHAM,e.PURRLOIN,e.POOCHYENA,e.BINACLE,e.CLAUNCHER,e.PUMPKABOO,e.PHANTUMP,e.FOONGUS],2:[e.LITWICK,e.SNEASEL,e.PAWNIARD,e.SLIGGOO],3:[e.NOIBAT,e.HISUI_SLIGGOO,e.HISUI_AVALUGG]}),[C.BRYONY]:new ee(++te).setMoneyMultiplier(1.5).initForEvilTeamAdmin("flare_admin_female","flare",[e.LIEPARD]).setEncounterBgm(C.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_flare_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>TA(E)),[C.XEROSIC]:new ee(++te).setMoneyMultiplier(1.5).initForEvilTeamAdmin("flare_admin","flare",[e.MALAMAR]).setEncounterBgm(C.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_flare_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>TA(E)),[C.AETHER_GRUNT]:new ee(++te).setHasGenders("Aether Grunt Female").setHasDouble("Aether Grunts").setMoneyMultiplier(1).setEncounterBgm(C.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_aether_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>TA(E)).setSpeciesPools({0:[e.PIKIPEK,e.ROCKRUFF,e.ALOLA_DIGLETT,e.ALOLA_EXEGGUTOR,e.YUNGOOS,e.CORSOLA,e.ALOLA_GEODUDE,e.ALOLA_RAICHU,e.BOUNSWEET,e.LILLIPUP,e.KOMALA,e.MORELULL,e.COMFEY,e.TOGEDEMARU],1:[e.POLIWAG,e.STUFFUL,e.ORANGURU,e.PASSIMIAN,e.BRUXISH,e.MINIOR,e.WISHIWASHI,e.ALOLA_SANDSHREW,e.ALOLA_VULPIX,e.CRABRAWLER,e.CUTIEFLY,e.ORICORIO,e.MUDBRAY,e.PYUKUMUKU,e.ALOLA_MAROWAK],2:[e.GALAR_CORSOLA,e.TURTONATOR,e.MIMIKYU,e.MAGNEMITE,e.DRAMPA],3:[e.JANGMO_O,e.PORYGON]}),[C.FABA]:new ee(++te).setMoneyMultiplier(1.5).initForEvilTeamAdmin("aether_admin","aether",[e.HYPNO]).setEncounterBgm(C.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_aether_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>TA(E)),[C.SKULL_GRUNT]:new ee(++te).setHasGenders("Skull Grunt Female").setHasDouble("Skull Grunts").setMoneyMultiplier(1).setEncounterBgm(C.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_skull_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>TA(E)).setSpeciesPools({0:[e.SALANDIT,e.ALOLA_RATTATA,e.EKANS,e.ALOLA_MEOWTH,e.SCRAGGY,e.KOFFING,e.ALOLA_GRIMER,e.MAREANIE,e.SPINARAK,e.TRUBBISH,e.DROWZEE],1:[e.FOMANTIS,e.SABLEYE,e.SANDILE,e.HOUNDOUR,e.ALOLA_MAROWAK,e.GASTLY,e.PANCHAM,e.ZUBAT,e.VENIPEDE,e.VULLABY],2:[e.SANDYGAST,e.PAWNIARD,e.MIMIKYU,e.DHELMISE,e.WISHIWASHI,e.NYMBLE],3:[e.GRUBBIN,e.DEWPIDER]}),[C.PLUMERIA]:new ee(++te).setMoneyMultiplier(1.5).initForEvilTeamAdmin("skull_admin","skull",[e.SALAZZLE]).setEncounterBgm(C.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_skull_admin").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>TA(E)),[C.MACRO_GRUNT]:new ee(++te).setHasGenders("Macro Grunt Female").setHasDouble("Macro Grunts").setMoneyMultiplier(1).setEncounterBgm(C.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_macro_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>TA(E)).setSpeciesPools({0:[e.CUFANT,e.GALAR_MEOWTH,e.KLINK,e.ROOKIDEE,e.CRAMORANT,e.GALAR_ZIGZAGOON,e.SKWOVET,e.STEELIX,e.MAWILE,e.FERROSEED],1:[e.DRILBUR,e.MAGNEMITE,e.HATENNA,e.ARROKUDA,e.APPLIN,e.GALAR_PONYTA,e.GALAR_YAMASK,e.SINISTEA,e.RIOLU],2:[e.FALINKS,e.BELDUM,e.GALAR_FARFETCHD,e.GALAR_MR_MIME,e.HONEDGE,e.SCIZOR,e.GALAR_DARUMAKA],3:[e.DURALUDON,e.DREEPY]}),[C.OLEANA]:new ee(++te).setMoneyMultiplier(1.5).initForEvilTeamAdmin("macro_admin","macro",[e.GARBODOR]).setEncounterBgm(C.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_oleana").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>TA(E)),[C.STAR_GRUNT]:new ee(++te).setHasGenders("Star Grunt Female").setHasDouble("Star Grunts").setMoneyMultiplier(1).setEncounterBgm(C.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_star_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>TA(E)).setSpeciesPools({0:[e.DUNSPARCE,e.HOUNDOUR,e.AZURILL,e.GULPIN,e.FOONGUS,e.FLETCHLING,e.LITLEO,e.FLABEBE,e.CRABRAWLER,e.NYMBLE,e.PAWMI,e.FIDOUGH,e.SQUAWKABILLY,e.MASCHIFF,e.SHROODLE,e.KLAWF,e.WIGLETT,e.PALDEA_WOOPER],1:[e.KOFFING,e.EEVEE,e.GIRAFARIG,e.RALTS,e.TORKOAL,e.SEVIPER,e.SCRAGGY,e.ZORUA,e.MIMIKYU,e.IMPIDIMP,e.FALINKS,e.CAPSAKID,e.TINKATINK,e.BOMBIRDIER,e.CYCLIZAR,e.FLAMIGO,e.PALDEA_TAUROS],2:[e.MANKEY,e.PAWNIARD,e.CHARCADET,e.FLITTLE,e.VAROOM,e.ORTHWORM],3:[e.DONDOZO,e.GIMMIGHOUL]}),[C.GIACOMO]:new ee(++te).setMoneyMultiplier(1.5).initForEvilTeamAdmin("star_admin","star_1",[e.KINGAMBIT]).setEncounterBgm(C.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_star_admin").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>TA(E)).setPartyMemberFunc(3,ne([e.REVAVROOM],1,!0,E=>{E.formIndex=1,E.moveset=[new ke(t.WICKED_TORQUE),new ke(t.SPIN_OUT),new ke(t.SHIFT_GEAR),new ke(t.HIGH_HORSEPOWER)]})),[C.MELA]:new ee(++te).setMoneyMultiplier(1.5).initForEvilTeamAdmin("star_admin","star_2",[e.ARMAROUGE]).setEncounterBgm(C.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_star_admin").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>TA(E)).setPartyMemberFunc(3,ne([e.REVAVROOM],1,!0,E=>{E.formIndex=2,E.moveset=[new ke(t.BLAZING_TORQUE),new ke(t.SPIN_OUT),new ke(t.SHIFT_GEAR),new ke(t.HIGH_HORSEPOWER)]})),[C.ATTICUS]:new ee(++te).setMoneyMultiplier(1.5).initForEvilTeamAdmin("star_admin","star_3",[e.REVAVROOM]).setEncounterBgm(C.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_star_admin").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>TA(E)).setPartyMemberFunc(3,ne([e.REVAVROOM],1,!0,E=>{E.formIndex=3,E.moveset=[new ke(t.NOXIOUS_TORQUE),new ke(t.SPIN_OUT),new ke(t.SHIFT_GEAR),new ke(t.HIGH_HORSEPOWER)]})),[C.ORTEGA]:new ee(++te).setMoneyMultiplier(1.5).initForEvilTeamAdmin("star_admin","star_4",[e.DACHSBUN]).setEncounterBgm(C.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_star_admin").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>TA(E)).setPartyMemberFunc(3,ne([e.REVAVROOM],1,!0,E=>{E.formIndex=4,E.moveset=[new ke(t.MAGICAL_TORQUE),new ke(t.SPIN_OUT),new ke(t.SHIFT_GEAR),new ke(t.HIGH_HORSEPOWER)]})),[C.ERI]:new ee(++te).setMoneyMultiplier(1.5).initForEvilTeamAdmin("star_admin","star_5",[e.ANNIHILAPE]).setEncounterBgm(C.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_star_admin").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>TA(E)).setPartyMemberFunc(3,ne([e.REVAVROOM],1,!0,E=>{E.formIndex=5,E.moveset=[new ke(t.COMBAT_TORQUE),new ke(t.SPIN_OUT),new ke(t.SHIFT_GEAR),new ke(t.HIGH_HORSEPOWER)]})),[C.BROCK]:new ee(te=C.BROCK).initForGymLeader(ce.BROCK,!0,n.ROCK).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[C.MISTY]:new ee(++te).initForGymLeader(ce.MISTY,!1,n.WATER).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[C.LT_SURGE]:new ee(++te).initForGymLeader(ce.LT_SURGE,!0,n.ELECTRIC).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[C.ERIKA]:new ee(++te).initForGymLeader(ce.ERIKA,!1,n.GRASS).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[C.JANINE]:new ee(++te).initForGymLeader(ce.JANINE,!1,n.POISON).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[C.SABRINA]:new ee(++te).initForGymLeader(ce.SABRINA,!1,n.PSYCHIC).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[C.BLAINE]:new ee(++te).initForGymLeader(ce.BLAINE,!0,n.FIRE).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[C.GIOVANNI]:new ee(++te).initForGymLeader(ce.GIOVANNI,!0,n.DARK).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[C.FALKNER]:new ee(++te).initForGymLeader(ce.FALKNER,!0,n.FLYING).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym"),[C.BUGSY]:new ee(++te).initForGymLeader(ce.BUGSY,!0,n.BUG).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym"),[C.WHITNEY]:new ee(++te).initForGymLeader(ce.WHITNEY,!1,n.NORMAL).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym"),[C.MORTY]:new ee(++te).initForGymLeader(ce.MORTY,!0,n.GHOST).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym"),[C.CHUCK]:new ee(++te).initForGymLeader(ce.CHUCK,!0,n.FIGHTING).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym"),[C.JASMINE]:new ee(++te).initForGymLeader(ce.JASMINE,!1,n.STEEL).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym"),[C.PRYCE]:new ee(++te).initForGymLeader(ce.PRYCE,!0,n.ICE).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym"),[C.CLAIR]:new ee(++te).initForGymLeader(ce.CLAIR,!1,n.DRAGON).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym"),[C.ROXANNE]:new ee(++te).initForGymLeader(ce.ROXANNE,!1,n.ROCK).setBattleBgm("battle_hoenn_gym").setMixedBattleBgm("battle_hoenn_gym"),[C.BRAWLY]:new ee(++te).initForGymLeader(ce.BRAWLY,!0,n.FIGHTING).setBattleBgm("battle_hoenn_gym").setMixedBattleBgm("battle_hoenn_gym"),[C.WATTSON]:new ee(++te).initForGymLeader(ce.WATTSON,!0,n.ELECTRIC).setBattleBgm("battle_hoenn_gym").setMixedBattleBgm("battle_hoenn_gym"),[C.FLANNERY]:new ee(++te).initForGymLeader(ce.FLANNERY,!1,n.FIRE).setBattleBgm("battle_hoenn_gym").setMixedBattleBgm("battle_hoenn_gym"),[C.NORMAN]:new ee(++te).initForGymLeader(ce.NORMAN,!0,n.NORMAL).setBattleBgm("battle_hoenn_gym").setMixedBattleBgm("battle_hoenn_gym"),[C.WINONA]:new ee(++te).initForGymLeader(ce.WINONA,!1,n.FLYING).setBattleBgm("battle_hoenn_gym").setMixedBattleBgm("battle_hoenn_gym"),[C.TATE]:new ee(++te).initForGymLeader(ce.TATE,!0,n.PSYCHIC).setBattleBgm("battle_hoenn_gym").setMixedBattleBgm("battle_hoenn_gym").setHasDouble("tate_liza_double").setDoubleTrainerType(C.LIZA).setDoubleTitle("gym_leader_double"),[C.LIZA]:new ee(++te).initForGymLeader(ce.LIZA,!1,n.PSYCHIC).setBattleBgm("battle_hoenn_gym").setMixedBattleBgm("battle_hoenn_gym").setHasDouble("liza_tate_double").setDoubleTrainerType(C.TATE).setDoubleTitle("gym_leader_double"),[C.JUAN]:new ee(++te).initForGymLeader(ce.JUAN,!0,n.WATER).setBattleBgm("battle_hoenn_gym").setMixedBattleBgm("battle_hoenn_gym"),[C.ROARK]:new ee(++te).initForGymLeader(ce.ROARK,!0,n.ROCK).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[C.GARDENIA]:new ee(++te).initForGymLeader(ce.GARDENIA,!1,n.GRASS).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[C.MAYLENE]:new ee(++te).initForGymLeader(ce.MAYLENE,!1,n.FIGHTING).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[C.CRASHER_WAKE]:new ee(++te).initForGymLeader(ce.CRASHER_WAKE,!0,n.WATER).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[C.FANTINA]:new ee(++te).initForGymLeader(ce.FANTINA,!1,n.GHOST).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[C.BYRON]:new ee(++te).initForGymLeader(ce.BYRON,!0,n.STEEL).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[C.CANDICE]:new ee(++te).initForGymLeader(ce.CANDICE,!1,n.ICE).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[C.VOLKNER]:new ee(++te).initForGymLeader(ce.VOLKNER,!0,n.ELECTRIC).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[C.CILAN]:new ee(++te).initForGymLeader(ce.CILAN,!0,n.GRASS).setMixedBattleBgm("battle_unova_gym"),[C.CHILI]:new ee(++te).initForGymLeader(ce.CHILI,!0,n.FIRE).setMixedBattleBgm("battle_unova_gym"),[C.CRESS]:new ee(++te).initForGymLeader(ce.CRESS,!0,n.WATER).setMixedBattleBgm("battle_unova_gym"),[C.CHEREN]:new ee(++te).initForGymLeader(ce.CHEREN,!0,n.NORMAL).setMixedBattleBgm("battle_unova_gym"),[C.LENORA]:new ee(++te).initForGymLeader(ce.LENORA,!1,n.NORMAL).setMixedBattleBgm("battle_unova_gym"),[C.ROXIE]:new ee(++te).initForGymLeader(ce.ROXIE,!1,n.POISON).setMixedBattleBgm("battle_unova_gym"),[C.BURGH]:new ee(++te).initForGymLeader(ce.BURGH,!0,n.BUG).setMixedBattleBgm("battle_unova_gym"),[C.ELESA]:new ee(++te).initForGymLeader(ce.ELESA,!1,n.ELECTRIC).setMixedBattleBgm("battle_unova_gym"),[C.CLAY]:new ee(++te).initForGymLeader(ce.CLAY,!0,n.GROUND).setMixedBattleBgm("battle_unova_gym"),[C.SKYLA]:new ee(++te).initForGymLeader(ce.SKYLA,!1,n.FLYING).setMixedBattleBgm("battle_unova_gym"),[C.BRYCEN]:new ee(++te).initForGymLeader(ce.BRYCEN,!0,n.ICE).setMixedBattleBgm("battle_unova_gym"),[C.DRAYDEN]:new ee(++te).initForGymLeader(ce.DRAYDEN,!0,n.DRAGON).setMixedBattleBgm("battle_unova_gym"),[C.MARLON]:new ee(++te).initForGymLeader(ce.MARLON,!0,n.WATER).setMixedBattleBgm("battle_unova_gym"),[C.VIOLA]:new ee(++te).initForGymLeader(ce.VIOLA,!1,n.BUG).setMixedBattleBgm("battle_kalos_gym"),[C.GRANT]:new ee(++te).initForGymLeader(ce.GRANT,!0,n.ROCK).setMixedBattleBgm("battle_kalos_gym"),[C.KORRINA]:new ee(++te).initForGymLeader(ce.KORRINA,!1,n.FIGHTING).setMixedBattleBgm("battle_kalos_gym"),[C.RAMOS]:new ee(++te).initForGymLeader(ce.RAMOS,!0,n.GRASS).setMixedBattleBgm("battle_kalos_gym"),[C.CLEMONT]:new ee(++te).initForGymLeader(ce.CLEMONT,!0,n.ELECTRIC).setMixedBattleBgm("battle_kalos_gym"),[C.VALERIE]:new ee(++te).initForGymLeader(ce.VALERIE,!1,n.FAIRY).setMixedBattleBgm("battle_kalos_gym"),[C.OLYMPIA]:new ee(++te).initForGymLeader(ce.OLYMPIA,!1,n.PSYCHIC).setMixedBattleBgm("battle_kalos_gym"),[C.WULFRIC]:new ee(++te).initForGymLeader(ce.WULFRIC,!0,n.ICE).setMixedBattleBgm("battle_kalos_gym"),[C.MILO]:new ee(++te).initForGymLeader(ce.MILO,!0,n.GRASS).setMixedBattleBgm("battle_galar_gym"),[C.NESSA]:new ee(++te).setName("Nessa").initForGymLeader(ce.NESSA,!1,n.WATER).setMixedBattleBgm("battle_galar_gym"),[C.KABU]:new ee(++te).initForGymLeader(ce.KABU,!0,n.FIRE).setMixedBattleBgm("battle_galar_gym"),[C.BEA]:new ee(++te).setName("Bea").initForGymLeader(ce.BEA,!1,n.FIGHTING).setMixedBattleBgm("battle_galar_gym"),[C.ALLISTER]:new ee(++te).setName("Allister").initForGymLeader(ce.ALLISTER,!0,n.GHOST).setMixedBattleBgm("battle_galar_gym"),[C.OPAL]:new ee(++te).initForGymLeader(ce.OPAL,!1,n.FAIRY).setMixedBattleBgm("battle_galar_gym"),[C.BEDE]:new ee(++te).initForGymLeader(ce.BEDE,!0,n.FAIRY).setMixedBattleBgm("battle_galar_gym"),[C.GORDIE]:new ee(++te).initForGymLeader(ce.GORDIE,!0,n.ROCK).setMixedBattleBgm("battle_galar_gym"),[C.MELONY]:new ee(++te).initForGymLeader(ce.MELONY,!1,n.ICE).setMixedBattleBgm("battle_galar_gym"),[C.PIERS]:new ee(++te).initForGymLeader(ce.PIERS,!0,n.DARK).setHasDouble("piers_marnie_double").setDoubleTrainerType(C.MARNIE).setDoubleTitle("gym_leader_double").setMixedBattleBgm("battle_galar_gym"),[C.MARNIE]:new ee(++te).setName("Marnie").initForGymLeader(ce.MARNIE,!1,n.DARK).setHasDouble("marnie_piers_double").setDoubleTrainerType(C.PIERS).setDoubleTitle("gym_leader_double").setMixedBattleBgm("battle_galar_gym"),[C.RAIHAN]:new ee(++te).setName("Raihan").initForGymLeader(ce.RAIHAN,!0,n.DRAGON).setMixedBattleBgm("battle_galar_gym"),[C.KATY]:new ee(++te).initForGymLeader(ce.KATY,!1,n.BUG).setMixedBattleBgm("battle_paldea_gym"),[C.BRASSIUS]:new ee(++te).initForGymLeader(ce.BRASSIUS,!0,n.GRASS).setMixedBattleBgm("battle_paldea_gym"),[C.IONO]:new ee(++te).initForGymLeader(ce.IONO,!1,n.ELECTRIC).setMixedBattleBgm("battle_paldea_gym"),[C.KOFU]:new ee(++te).initForGymLeader(ce.KOFU,!0,n.WATER).setMixedBattleBgm("battle_paldea_gym"),[C.LARRY]:new ee(++te).setName("Larry").initForGymLeader(ce.LARRY,!0,n.NORMAL).setMixedBattleBgm("battle_paldea_gym"),[C.RYME]:new ee(++te).initForGymLeader(ce.RYME,!1,n.GHOST).setMixedBattleBgm("battle_paldea_gym"),[C.TULIP]:new ee(++te).initForGymLeader(ce.TULIP,!1,n.PSYCHIC).setMixedBattleBgm("battle_paldea_gym"),[C.GRUSHA]:new ee(++te).initForGymLeader(ce.GRUSHA,!0,n.ICE).setMixedBattleBgm("battle_paldea_gym"),[C.LORELEI]:new ee(te=C.LORELEI).initForEliteFour(ce.LORELEI,!1,n.ICE).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[C.BRUNO]:new ee(++te).initForEliteFour(ce.BRUNO,!0,n.FIGHTING).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[C.AGATHA]:new ee(++te).initForEliteFour(ce.AGATHA,!1,n.GHOST).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[C.LANCE]:new ee(++te).setName("Lance").initForEliteFour(ce.LANCE,!0,n.DRAGON).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[C.WILL]:new ee(++te).initForEliteFour(ce.WILL,!0,n.PSYCHIC).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym"),[C.KOGA]:new ee(++te).initForEliteFour(ce.KOGA,!0,n.POISON).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym"),[C.KAREN]:new ee(++te).initForEliteFour(ce.KAREN,!1,n.DARK).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym"),[C.SIDNEY]:new ee(++te).initForEliteFour(ce.SIDNEY,!0,n.DARK).setMixedBattleBgm("battle_hoenn_elite"),[C.PHOEBE]:new ee(++te).initForEliteFour(ce.PHOEBE,!1,n.GHOST).setMixedBattleBgm("battle_hoenn_elite"),[C.GLACIA]:new ee(++te).initForEliteFour(ce.GLACIA,!1,n.ICE).setMixedBattleBgm("battle_hoenn_elite"),[C.DRAKE]:new ee(++te).initForEliteFour(ce.DRAKE,!0,n.DRAGON).setMixedBattleBgm("battle_hoenn_elite"),[C.AARON]:new ee(++te).initForEliteFour(ce.AARON,!0,n.BUG).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[C.BERTHA]:new ee(++te).initForEliteFour(ce.BERTHA,!1,n.GROUND).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[C.FLINT]:new ee(++te).initForEliteFour(ce.FLINT,!0,n.FIRE).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[C.LUCIAN]:new ee(++te).initForEliteFour(ce.LUCIAN,!0,n.PSYCHIC).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[C.SHAUNTAL]:new ee(++te).initForEliteFour(ce.SHAUNTAL,!1,n.GHOST).setMixedBattleBgm("battle_unova_elite"),[C.MARSHAL]:new ee(++te).initForEliteFour(ce.MARSHAL,!0,n.FIGHTING).setMixedBattleBgm("battle_unova_elite"),[C.GRIMSLEY]:new ee(++te).initForEliteFour(ce.GRIMSLEY,!0,n.DARK).setMixedBattleBgm("battle_unova_elite"),[C.CAITLIN]:new ee(++te).initForEliteFour(ce.CAITLIN,!1,n.PSYCHIC).setMixedBattleBgm("battle_unova_elite"),[C.MALVA]:new ee(++te).initForEliteFour(ce.MALVA,!1,n.FIRE).setMixedBattleBgm("battle_kalos_elite"),[C.SIEBOLD]:new ee(++te).initForEliteFour(ce.SIEBOLD,!0,n.WATER).setMixedBattleBgm("battle_kalos_elite"),[C.WIKSTROM]:new ee(++te).initForEliteFour(ce.WIKSTROM,!0,n.STEEL).setMixedBattleBgm("battle_kalos_elite"),[C.DRASNA]:new ee(++te).initForEliteFour(ce.DRASNA,!1,n.DRAGON).setMixedBattleBgm("battle_kalos_elite"),[C.HALA]:new ee(++te).initForEliteFour(ce.HALA,!0,n.FIGHTING).setMixedBattleBgm("battle_alola_elite"),[C.MOLAYNE]:new ee(++te).initForEliteFour(ce.MOLAYNE,!0,n.STEEL).setMixedBattleBgm("battle_alola_elite"),[C.OLIVIA]:new ee(++te).initForEliteFour(ce.OLIVIA,!1,n.ROCK).setMixedBattleBgm("battle_alola_elite"),[C.ACEROLA]:new ee(++te).initForEliteFour(ce.ACEROLA,!1,n.GHOST).setMixedBattleBgm("battle_alola_elite"),[C.KAHILI]:new ee(++te).initForEliteFour(ce.KAHILI,!1,n.FLYING).setMixedBattleBgm("battle_alola_elite"),[C.MARNIE_ELITE]:new ee(++te).setName("Marnie").initForEliteFour(ce.MARNIE_ELITE,!1,n.DARK).setMixedBattleBgm("battle_galar_elite"),[C.NESSA_ELITE]:new ee(++te).setName("Nessa").initForEliteFour(ce.NESSA_ELITE,!1,n.WATER).setMixedBattleBgm("battle_galar_elite"),[C.BEA_ELITE]:new ee(++te).setName("Bea").initForEliteFour(ce.BEA_ELITE,!1,n.FIGHTING).setMixedBattleBgm("battle_galar_elite"),[C.ALLISTER_ELITE]:new ee(++te).setName("Allister").initForEliteFour(ce.ALLISTER_ELITE,!0,n.GHOST).setMixedBattleBgm("battle_galar_elite"),[C.RAIHAN_ELITE]:new ee(++te).setName("Raihan").initForEliteFour(ce.RAIHAN_ELITE,!0,n.DRAGON).setMixedBattleBgm("battle_galar_elite"),[C.RIKA]:new ee(++te).initForEliteFour(ce.RIKA,!1,n.GROUND).setMixedBattleBgm("battle_paldea_elite"),[C.POPPY]:new ee(++te).initForEliteFour(ce.POPPY,!1,n.STEEL).setMixedBattleBgm("battle_paldea_elite"),[C.LARRY_ELITE]:new ee(++te).setName("Larry").initForEliteFour(ce.LARRY_ELITE,!0,n.NORMAL,n.FLYING).setMixedBattleBgm("battle_paldea_elite"),[C.HASSEL]:new ee(++te).initForEliteFour(ce.HASSEL,!0,n.DRAGON).setMixedBattleBgm("battle_paldea_elite"),[C.CRISPIN]:new ee(++te).initForEliteFour(ce.CRISPIN,!0,n.FIRE).setMixedBattleBgm("battle_bb_elite"),[C.AMARYS]:new ee(++te).initForEliteFour(ce.AMARYS,!1,n.STEEL).setMixedBattleBgm("battle_bb_elite"),[C.LACEY]:new ee(++te).initForEliteFour(ce.LACEY,!1,n.FAIRY).setMixedBattleBgm("battle_bb_elite"),[C.DRAYTON]:new ee(++te).initForEliteFour(ce.DRAYTON,!0,n.DRAGON).setMixedBattleBgm("battle_bb_elite"),[C.BLUE]:new ee(te=C.BLUE).initForChampion(ce.BLUE,!0).setBattleBgm("battle_kanto_champion").setMixedBattleBgm("battle_kanto_champion").setHasDouble("blue_red_double").setDoubleTrainerType(C.RED).setDoubleTitle("champion_double").setPartyMemberFunc(0,ne([e.ALAKAZAM],1,!0,E=>{E.generateAndPopulateMoveset()})).setPartyMemberFunc(1,ne([e.PIDGEOT],1,!0,E=>{E.formIndex=1,E.generateAndPopulateMoveset(),E.generateName()})),[C.RED]:new ee(++te).initForChampion(ce.RED,!0).setBattleBgm("battle_johto_champion").setMixedBattleBgm("battle_johto_champion").setHasDouble("red_blue_double").setDoubleTrainerType(C.BLUE).setDoubleTitle("champion_double").setPartyMemberFunc(0,ne([e.PIKACHU],1,!0,E=>{E.formIndex=8,E.generateAndPopulateMoveset(),E.generateName()})).setPartyMemberFunc(1,ne([e.VENUSAUR,e.CHARIZARD,e.BLASTOISE],1,!0,E=>{E.formIndex=1,E.generateAndPopulateMoveset(),E.generateName()})),[C.LANCE_CHAMPION]:new ee(++te).setName("Lance").initForChampion(ce.LANCE_CHAMPION,!0).setBattleBgm("battle_johto_champion").setMixedBattleBgm("battle_johto_champion").setPartyMemberFunc(0,ne([e.AERODACTYL],1,!0,E=>{E.generateAndPopulateMoveset()})).setPartyMemberFunc(1,ne([e.LATIAS,e.LATIOS],1,!0,E=>{E.formIndex=1,E.generateAndPopulateMoveset(),E.generateName()})),[C.STEVEN]:new ee(++te).initForChampion(ce.STEVEN,!0).setBattleBgm("battle_hoenn_champion_g5").setMixedBattleBgm("battle_hoenn_champion_g6").setHasDouble("steven_wallace_double").setDoubleTrainerType(C.WALLACE).setDoubleTitle("champion_double").setPartyMemberFunc(0,ne([e.SKARMORY],1,!0,E=>{E.generateAndPopulateMoveset()})).setPartyMemberFunc(1,ne([e.METAGROSS],1,!0,E=>{E.formIndex=1,E.generateAndPopulateMoveset(),E.generateName()})),[C.WALLACE]:new ee(++te).initForChampion(ce.WALLACE,!0).setBattleBgm("battle_hoenn_champion_g5").setMixedBattleBgm("battle_hoenn_champion_g6").setHasDouble("wallace_steven_double").setDoubleTrainerType(C.STEVEN).setDoubleTitle("champion_double").setPartyMemberFunc(0,ne([e.PELIPPER],1,!0,E=>{E.abilityIndex=1,E.generateAndPopulateMoveset()})).setPartyMemberFunc(1,ne([e.SWAMPERT],1,!0,E=>{E.formIndex=1,E.generateAndPopulateMoveset(),E.generateName()})),[C.CYNTHIA]:new ee(++te).initForChampion(ce.CYNTHIA,!1).setBattleBgm("battle_sinnoh_champion").setMixedBattleBgm("battle_sinnoh_champion").setPartyMemberFunc(0,ne([e.SPIRITOMB],1,!0,E=>{E.generateAndPopulateMoveset()})).setPartyMemberFunc(1,ne([e.GARCHOMP],1,!0,E=>{E.formIndex=1,E.generateAndPopulateMoveset(),E.generateName()})),[C.ALDER]:new ee(++te).initForChampion(ce.ALDER,!0).setHasDouble("alder_iris_double").setDoubleTrainerType(C.IRIS).setDoubleTitle("champion_double").setBattleBgm("battle_champion_alder").setMixedBattleBgm("battle_champion_alder").setPartyMemberFunc(0,ne([e.BOUFFALANT,e.BRAVIARY],1,!0,E=>{E.generateAndPopulateMoveset()})),[C.IRIS]:new ee(++te).initForChampion(ce.IRIS,!1).setBattleBgm("battle_champion_iris").setMixedBattleBgm("battle_champion_iris").setHasDouble("iris_alder_double").setDoubleTrainerType(C.ALDER).setDoubleTitle("champion_double").setPartyMemberFunc(0,ne([e.DRUDDIGON],1,!0,E=>{E.generateAndPopulateMoveset()})).setPartyMemberFunc(1,ne([e.LAPRAS],1,!0,E=>{E.formIndex=1,E.generateAndPopulateMoveset(),E.generateName()})),[C.DIANTHA]:new ee(++te).initForChampion(ce.DIANTHA,!1).setMixedBattleBgm("battle_kalos_champion").setPartyMemberFunc(0,ne([e.GOURGEIST],1,!0,E=>{E.generateAndPopulateMoveset()})).setPartyMemberFunc(1,ne([e.GARDEVOIR],1,!0,E=>{E.formIndex=1,E.generateAndPopulateMoveset(),E.generateName()})),[C.HAU]:new ee(++te).initForChampion(ce.HAU,!0).setMixedBattleBgm("battle_alola_champion").setPartyMemberFunc(0,ne([e.ALOLA_RAICHU],1,!0,E=>{E.generateAndPopulateMoveset()})),[C.LEON]:new ee(++te).initForChampion(ce.LEON,!0).setMixedBattleBgm("battle_galar_champion").setPartyMemberFunc(0,ne([e.RILLABOOM,e.CINDERACE,e.INTELEON],1,!0,E=>{E.generateAndPopulateMoveset()})).setPartyMemberFunc(1,ne([e.CHARIZARD],1,!0,E=>{E.formIndex=3,E.generateAndPopulateMoveset(),E.generateName()})),[C.GEETA]:new ee(++te).initForChampion(ce.GEETA,!1).setMixedBattleBgm("battle_champion_geeta").setPartyMemberFunc(0,ne([e.GLIMMORA],1,!0,E=>{E.generateAndPopulateMoveset()})),[C.NEMONA]:new ee(++te).initForChampion(ce.NEMONA,!1).setMixedBattleBgm("battle_champion_nemona").setPartyMemberFunc(0,ne([e.LYCANROC],1,!0,E=>{E.formIndex=0,E.generateAndPopulateMoveset()})),[C.KIERAN]:new ee(++te).initForChampion(ce.KIERAN,!0).setMixedBattleBgm("battle_champion_kieran").setPartyMemberFunc(0,ne([e.POLIWRATH,e.POLITOED],1,!0,E=>{E.generateAndPopulateMoveset()})),[C.RIVAL]:new ee(te=C.RIVAL).setName("Finn").setHasGenders("Ivy").setHasCharSprite().setTitle("Rival").setStaticParty().setEncounterBgm(C.RIVAL).setBattleBgm("battle_rival").setMixedBattleBgm("battle_rival").setPartyTemplates(ve.RIVAL).setModifierRewardFuncs(()=>x.SUPER_EXP_CHARM,()=>x.EXP_SHARE).setEventModifierRewardFuncs(()=>x.SHINY_CHARM,()=>x.ABILITY_CHARM).setPartyMemberFunc(0,ne([e.BULBASAUR,e.CHARMANDER,e.SQUIRTLE,e.CHIKORITA,e.CYNDAQUIL,e.TOTODILE,e.TREECKO,e.TORCHIC,e.MUDKIP,e.TURTWIG,e.CHIMCHAR,e.PIPLUP,e.SNIVY,e.TEPIG,e.OSHAWOTT,e.CHESPIN,e.FENNEKIN,e.FROAKIE,e.ROWLET,e.LITTEN,e.POPPLIO,e.GROOKEY,e.SCORBUNNY,e.SOBBLE,e.SPRIGATITO,e.FUECOCO,e.QUAXLY],1,!0)).setPartyMemberFunc(1,ne([e.PIDGEY,e.HOOTHOOT,e.TAILLOW,e.STARLY,e.PIDOVE,e.FLETCHLING,e.PIKIPEK,e.ROOKIDEE,e.WATTREL],1,!0)),[C.RIVAL_2]:new ee(++te).setName("Finn").setHasGenders("Ivy").setHasCharSprite().setTitle("Rival").setStaticParty().setMoneyMultiplier(1.25).setEncounterBgm(C.RIVAL).setBattleBgm("battle_rival").setMixedBattleBgm("battle_rival").setPartyTemplates(ve.RIVAL_2).setModifierRewardFuncs(()=>x.EXP_SHARE).setEventModifierRewardFuncs(()=>x.SHINY_CHARM).setPartyMemberFunc(0,ne([e.IVYSAUR,e.CHARMELEON,e.WARTORTLE,e.BAYLEEF,e.QUILAVA,e.CROCONAW,e.GROVYLE,e.COMBUSKEN,e.MARSHTOMP,e.GROTLE,e.MONFERNO,e.PRINPLUP,e.SERVINE,e.PIGNITE,e.DEWOTT,e.QUILLADIN,e.BRAIXEN,e.FROGADIER,e.DARTRIX,e.TORRACAT,e.BRIONNE,e.THWACKEY,e.RABOOT,e.DRIZZILE,e.FLORAGATO,e.CROCALOR,e.QUAXWELL],1,!0)).setPartyMemberFunc(1,ne([e.PIDGEOTTO,e.HOOTHOOT,e.TAILLOW,e.STARAVIA,e.TRANQUILL,e.FLETCHINDER,e.TRUMBEAK,e.CORVISQUIRE,e.WATTREL],1,!0)).setPartyMemberFunc(2,sr(E=>!Ht.hasOwnProperty(E.speciesId)&&!KA.hasOwnProperty(E.speciesId)&&E.baseTotal>=450)),[C.RIVAL_3]:new ee(++te).setName("Finn").setHasGenders("Ivy").setHasCharSprite().setTitle("Rival").setStaticParty().setMoneyMultiplier(1.5).setEncounterBgm(C.RIVAL).setBattleBgm("battle_rival").setMixedBattleBgm("battle_rival").setPartyTemplates(ve.RIVAL_3).setPartyMemberFunc(0,ne([e.VENUSAUR,e.CHARIZARD,e.BLASTOISE,e.MEGANIUM,e.TYPHLOSION,e.FERALIGATR,e.SCEPTILE,e.BLAZIKEN,e.SWAMPERT,e.TORTERRA,e.INFERNAPE,e.EMPOLEON,e.SERPERIOR,e.EMBOAR,e.SAMUROTT,e.CHESNAUGHT,e.DELPHOX,e.GRENINJA,e.DECIDUEYE,e.INCINEROAR,e.PRIMARINA,e.RILLABOOM,e.CINDERACE,e.INTELEON,e.MEOWSCARADA,e.SKELEDIRGE,e.QUAQUAVAL],1,!0)).setPartyMemberFunc(1,ne([e.PIDGEOT,e.NOCTOWL,e.SWELLOW,e.STARAPTOR,e.UNFEZANT,e.TALONFLAME,e.TOUCANNON,e.CORVIKNIGHT,e.KILOWATTREL],1,!0)).setPartyMemberFunc(2,sr(E=>!Ht.hasOwnProperty(E.speciesId)&&!KA.hasOwnProperty(E.speciesId)&&E.baseTotal>=450)).setSpeciesFilter(E=>E.baseTotal>=540),[C.RIVAL_4]:new ee(++te).setName("Finn").setHasGenders("Ivy").setHasCharSprite().setTitle("Rival").setBoss().setStaticParty().setMoneyMultiplier(1.75).setEncounterBgm(C.RIVAL).setBattleBgm("battle_rival_2").setMixedBattleBgm("battle_rival_2").setPartyTemplates(ve.RIVAL_4).setPartyMemberFunc(0,ne([e.VENUSAUR,e.CHARIZARD,e.BLASTOISE,e.MEGANIUM,e.TYPHLOSION,e.FERALIGATR,e.SCEPTILE,e.BLAZIKEN,e.SWAMPERT,e.TORTERRA,e.INFERNAPE,e.EMPOLEON,e.SERPERIOR,e.EMBOAR,e.SAMUROTT,e.CHESNAUGHT,e.DELPHOX,e.GRENINJA,e.DECIDUEYE,e.INCINEROAR,e.PRIMARINA,e.RILLABOOM,e.CINDERACE,e.INTELEON,e.MEOWSCARADA,e.SKELEDIRGE,e.QUAQUAVAL],1,!0)).setPartyMemberFunc(1,ne([e.PIDGEOT,e.NOCTOWL,e.SWELLOW,e.STARAPTOR,e.UNFEZANT,e.TALONFLAME,e.TOUCANNON,e.CORVIKNIGHT,e.KILOWATTREL],1,!0)).setPartyMemberFunc(2,sr(E=>!Ht.hasOwnProperty(E.speciesId)&&!KA.hasOwnProperty(E.speciesId)&&E.baseTotal>=450)).setSpeciesFilter(E=>E.baseTotal>=540).setGenModifiersFunc(E=>{const A=E[0];return[x.TERA_SHARD().generateType([],[A.species.type1]).withIdFromFunc(x.TERA_SHARD).newModifier(A)]}),[C.RIVAL_5]:new ee(++te).setName("Finn").setHasGenders("Ivy").setHasCharSprite().setTitle("Rival").setBoss().setStaticParty().setMoneyMultiplier(2.25).setEncounterBgm(C.RIVAL).setBattleBgm("battle_rival_3").setMixedBattleBgm("battle_rival_3").setPartyTemplates(ve.RIVAL_5).setPartyMemberFunc(0,ne([e.VENUSAUR,e.CHARIZARD,e.BLASTOISE,e.MEGANIUM,e.TYPHLOSION,e.FERALIGATR,e.SCEPTILE,e.BLAZIKEN,e.SWAMPERT,e.TORTERRA,e.INFERNAPE,e.EMPOLEON,e.SERPERIOR,e.EMBOAR,e.SAMUROTT,e.CHESNAUGHT,e.DELPHOX,e.GRENINJA,e.DECIDUEYE,e.INCINEROAR,e.PRIMARINA,e.RILLABOOM,e.CINDERACE,e.INTELEON,e.MEOWSCARADA,e.SKELEDIRGE,e.QUAQUAVAL],1,!0,E=>E.setBoss(!0,2))).setPartyMemberFunc(1,ne([e.PIDGEOT,e.NOCTOWL,e.SWELLOW,e.STARAPTOR,e.UNFEZANT,e.TALONFLAME,e.TOUCANNON,e.CORVIKNIGHT,e.KILOWATTREL],1,!0)).setPartyMemberFunc(2,sr(E=>!Ht.hasOwnProperty(E.speciesId)&&!KA.hasOwnProperty(E.speciesId)&&E.baseTotal>=450)).setSpeciesFilter(E=>E.baseTotal>=540).setPartyMemberFunc(5,ne([e.RAYQUAZA],1,!0,E=>{E.setBoss(!0,3),E.pokeball=ge.MASTER_BALL,E.shiny=!0,E.variant=1})).setGenModifiersFunc(E=>{const A=E[0];return[x.TERA_SHARD().generateType([],[A.species.type1]).withIdFromFunc(x.TERA_SHARD).newModifier(A)]}),[C.RIVAL_6]:new ee(++te).setName("Finn").setHasGenders("Ivy").setHasCharSprite().setTitle("Rival").setBoss().setStaticParty().setMoneyMultiplier(3).setEncounterBgm("final").setBattleBgm("battle_rival_3").setMixedBattleBgm("battle_rival_3").setPartyTemplates(ve.RIVAL_6).setPartyMemberFunc(0,ne([e.VENUSAUR,e.CHARIZARD,e.BLASTOISE,e.MEGANIUM,e.TYPHLOSION,e.FERALIGATR,e.SCEPTILE,e.BLAZIKEN,e.SWAMPERT,e.TORTERRA,e.INFERNAPE,e.EMPOLEON,e.SERPERIOR,e.EMBOAR,e.SAMUROTT,e.CHESNAUGHT,e.DELPHOX,e.GRENINJA,e.DECIDUEYE,e.INCINEROAR,e.PRIMARINA,e.RILLABOOM,e.CINDERACE,e.INTELEON,e.MEOWSCARADA,e.SKELEDIRGE,e.QUAQUAVAL],1,!0,E=>{E.setBoss(!0,3),E.generateAndPopulateMoveset()})).setPartyMemberFunc(1,ne([e.PIDGEOT,e.NOCTOWL,e.SWELLOW,e.STARAPTOR,e.UNFEZANT,e.TALONFLAME,e.TOUCANNON,e.CORVIKNIGHT,e.KILOWATTREL],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset()})).setPartyMemberFunc(2,sr(E=>!Ht.hasOwnProperty(E.speciesId)&&!KA.hasOwnProperty(E.speciesId)&&E.baseTotal>=450)).setSpeciesFilter(E=>E.baseTotal>=540).setPartyMemberFunc(5,ne([e.RAYQUAZA],1,!0,E=>{E.setBoss(),E.generateAndPopulateMoveset(),E.pokeball=ge.MASTER_BALL,E.shiny=!0,E.variant=1,E.formIndex=1,E.generateName()})).setGenModifiersFunc(E=>{const A=E[0];return[x.TERA_SHARD().generateType([],[A.species.type1]).withIdFromFunc(x.TERA_SHARD).newModifier(A)]}),[C.ROCKET_BOSS_GIOVANNI_1]:new ee(te=C.ROCKET_BOSS_GIOVANNI_1).setName("Giovanni").initForEvilTeamLeader("Rocket Boss",[]).setMixedBattleBgm("battle_rocket_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,ne([e.PERSIAN,e.ALOLA_PERSIAN],1,!0,E=>{E.generateAndPopulateMoveset(),E.gender=ye.MALE})).setPartyMemberFunc(1,ne([e.DUGTRIO,e.ALOLA_DUGTRIO])).setPartyMemberFunc(2,ne([e.HONCHKROW])).setPartyMemberFunc(3,ne([e.NIDOKING,e.NIDOQUEEN])).setPartyMemberFunc(4,ne([e.RHYPERIOR])).setPartyMemberFunc(5,ne([e.KANGASKHAN],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=ge.ULTRA_BALL,E.formIndex=1,E.generateName()})),[C.ROCKET_BOSS_GIOVANNI_2]:new ee(++te).setName("Giovanni").initForEvilTeamLeader("Rocket Boss",[],!0).setMixedBattleBgm("battle_rocket_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,ne([e.TYRANITAR,e.IRON_THORNS],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=ge.ULTRA_BALL})).setPartyMemberFunc(1,ne([e.HIPPOWDON])).setPartyMemberFunc(2,ne([e.EXCADRILL,e.GARCHOMP])).setPartyMemberFunc(3,ne([e.KANGASKHAN],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=ge.ULTRA_BALL,E.formIndex=1,E.generateName()})).setPartyMemberFunc(4,ne([e.GASTRODON,e.SEISMITOAD],1,!0,E=>{E.species.speciesId===e.GASTRODON?E.abilityIndex=0:E.species.speciesId===e.SEISMITOAD&&(E.abilityIndex=2)})).setPartyMemberFunc(5,ne([e.MEWTWO],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=ge.MASTER_BALL})),[C.MAXIE]:new ee(++te).setName("Maxie").initForEvilTeamLeader("Magma Boss",[]).setMixedBattleBgm("battle_aqua_magma_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,ne([e.MIGHTYENA])).setPartyMemberFunc(1,ne([e.CROBAT,e.GLISCOR])).setPartyMemberFunc(2,ne([e.WEEZING,e.GALAR_WEEZING])).setPartyMemberFunc(3,ne([e.MAGMORTAR,e.TORKOAL])).setPartyMemberFunc(4,ne([e.FLYGON])).setPartyMemberFunc(5,ne([e.CAMERUPT],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=ge.ULTRA_BALL,E.formIndex=1,E.generateName(),E.gender=ye.MALE})),[C.MAXIE_2]:new ee(++te).setName("Maxie").initForEvilTeamLeader("Magma Boss",[],!0).setMixedBattleBgm("battle_aqua_magma_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,ne([e.SOLROCK,e.TYPHLOSION],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=ge.ULTRA_BALL})).setPartyMemberFunc(1,ne([e.TORKOAL,e.NINETALES],1,!0,E=>{E.generateAndPopulateMoveset(),E.abilityIndex=2})).setPartyMemberFunc(2,ne([e.SHIFTRY,e.SCOVILLAIN],1,!0,E=>{E.generateAndPopulateMoveset(),E.abilityIndex=0})).setPartyMemberFunc(3,ne([e.GREAT_TUSK])).setPartyMemberFunc(4,ne([e.CAMERUPT],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=ge.ULTRA_BALL,E.formIndex=1,E.generateName(),E.gender=ye.MALE})).setPartyMemberFunc(5,ne([e.GROUDON],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=ge.MASTER_BALL})),[C.ARCHIE]:new ee(++te).setName("Archie").initForEvilTeamLeader("Aqua Boss",[]).setMixedBattleBgm("battle_aqua_magma_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,ne([e.LINOONE])).setPartyMemberFunc(1,ne([e.CROBAT,e.PELIPPER])).setPartyMemberFunc(2,ne([e.MUK,e.ALOLA_MUK])).setPartyMemberFunc(3,ne([e.TENTACRUEL])).setPartyMemberFunc(4,ne([e.RELICANTH,e.WAILORD])).setPartyMemberFunc(5,ne([e.SHARPEDO],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=ge.ULTRA_BALL,E.formIndex=1,E.generateName(),E.gender=ye.MALE})),[C.ARCHIE_2]:new ee(++te).setName("Archie").initForEvilTeamLeader("Aqua Boss",[],!0).setMixedBattleBgm("battle_aqua_magma_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,ne([e.EMPOLEON,e.LUDICOLO],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=ge.ULTRA_BALL})).setPartyMemberFunc(1,ne([e.POLITOED,e.PELIPPER],1,!0,E=>{E.generateAndPopulateMoveset(),E.abilityIndex=2})).setPartyMemberFunc(2,ne([e.BEARTIC,e.ARMALDO],1,!0,E=>{E.generateAndPopulateMoveset(),E.abilityIndex=2})).setPartyMemberFunc(3,ne([e.OVERQWIL],1,!0,E=>{E.generateAndPopulateMoveset(),E.abilityIndex=1})).setPartyMemberFunc(4,ne([e.SHARPEDO],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=ge.ULTRA_BALL,E.formIndex=1,E.generateName(),E.gender=ye.MALE})).setPartyMemberFunc(5,ne([e.KYOGRE],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=ge.MASTER_BALL})),[C.CYRUS]:new ee(++te).setName("Cyrus").initForEvilTeamLeader("Galactic Boss",[]).setMixedBattleBgm("battle_galactic_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,ne([e.GYARADOS])).setPartyMemberFunc(1,ne([e.HONCHKROW,e.HISUI_BRAVIARY])).setPartyMemberFunc(2,ne([e.CROBAT,e.GLISCOR])).setPartyMemberFunc(3,ne([e.AZELF,e.UXIE,e.MESPRIT])).setPartyMemberFunc(4,ne([e.HOUNDOOM],1,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=ge.ULTRA_BALL,E.formIndex=1,E.generateName()})).setPartyMemberFunc(5,ne([e.WEAVILE],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=ge.ULTRA_BALL,E.gender=ye.MALE})),[C.CYRUS_2]:new ee(++te).setName("Cyrus").initForEvilTeamLeader("Galactic Boss",[],!0).setMixedBattleBgm("battle_galactic_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,ne([e.AZELF,e.UXIE,e.MESPRIT],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset()})).setPartyMemberFunc(1,ne([e.ELECTRODE,e.HISUI_ELECTRODE])).setPartyMemberFunc(2,ne([e.SALAMENCE,e.ROARING_MOON])).setPartyMemberFunc(3,ne([e.HOUNDOOM],1,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=ge.ULTRA_BALL,E.formIndex=1,E.generateName()})).setPartyMemberFunc(4,ne([e.WEAVILE,e.SNEASLER],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=ge.ULTRA_BALL,E.gender=ye.MALE})).setPartyMemberFunc(5,ne([e.DARKRAI],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=ge.MASTER_BALL})),[C.GHETSIS]:new ee(++te).setName("Ghetsis").initForEvilTeamLeader("Plasma Boss",[]).setMixedBattleBgm("battle_plasma_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,ne([e.COFAGRIGUS,e.RUNERIGUS])).setPartyMemberFunc(1,ne([e.BOUFFALANT])).setPartyMemberFunc(2,ne([e.SEISMITOAD,e.CARRACOSTA])).setPartyMemberFunc(3,ne([e.EELEKTROSS,e.GALVANTULA])).setPartyMemberFunc(4,ne([e.VOLCARONA])).setPartyMemberFunc(5,ne([e.HYDREIGON],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=ge.ULTRA_BALL,E.gender=ye.MALE})),[C.GHETSIS_2]:new ee(++te).setName("Ghetsis").initForEvilTeamLeader("Plasma Boss",[],!0).setMixedBattleBgm("battle_plasma_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,ne([e.GENESECT],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=ge.ULTRA_BALL,E.formIndex=le(4,1)})).setPartyMemberFunc(1,ne([e.BASCULEGION,e.JELLICENT],1,!0,E=>{E.generateAndPopulateMoveset(),E.gender=ye.MALE,E.formIndex=0})).setPartyMemberFunc(2,ne([e.KINGAMBIT])).setPartyMemberFunc(3,ne([e.VOLCARONA,e.SLITHER_WING])).setPartyMemberFunc(4,ne([e.HYDREIGON,e.IRON_JUGULIS],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=ge.ULTRA_BALL,E.species.speciesId===e.HYDREIGON?E.gender=ye.MALE:E.species.speciesId===e.IRON_JUGULIS&&(E.gender=ye.GENDERLESS)})).setPartyMemberFunc(5,ne([e.KYUREM],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=ge.MASTER_BALL})),[C.LYSANDRE]:new ee(++te).setName("Lysandre").initForEvilTeamLeader("Flare Boss",[]).setMixedBattleBgm("battle_flare_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,ne([e.MIENSHAO])).setPartyMemberFunc(1,ne([e.HONCHKROW,e.TALONFLAME])).setPartyMemberFunc(2,ne([e.PYROAR],1,!0,E=>{E.generateAndPopulateMoveset(),E.gender=ye.MALE})).setPartyMemberFunc(3,ne([e.CLAWITZER,e.DRAGALGE])).setPartyMemberFunc(4,ne([e.HELIOLISK,e.MALAMAR])).setPartyMemberFunc(5,ne([e.GYARADOS],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=ge.ULTRA_BALL,E.formIndex=1,E.generateName(),E.gender=ye.MALE})),[C.LYSANDRE_2]:new ee(++te).setName("Lysandre").initForEvilTeamLeader("Flare Boss",[],!0).setMixedBattleBgm("battle_flare_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,ne([e.SCREAM_TAIL,e.FLUTTER_MANE],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=ge.ULTRA_BALL})).setPartyMemberFunc(1,ne([e.PYROAR],1,!0,E=>{E.generateAndPopulateMoveset(),E.gender=ye.MALE})).setPartyMemberFunc(2,ne([e.IRON_MOTH])).setPartyMemberFunc(3,ne([e.GOODRA,e.HISUI_GOODRA])).setPartyMemberFunc(4,ne([e.GYARADOS],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=ge.ULTRA_BALL,E.formIndex=1,E.generateName(),E.gender=ye.MALE})).setPartyMemberFunc(5,ne([e.YVELTAL],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=ge.MASTER_BALL})),[C.LUSAMINE]:new ee(++te).setName("Lusamine").initForEvilTeamLeader("Aether Boss",[]).setMixedBattleBgm("battle_aether_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,ne([e.CLEFABLE],1,!0,E=>{E.generateAndPopulateMoveset(),E.gender=ye.FEMALE})).setPartyMemberFunc(1,ne([e.LILLIGANT,e.HISUI_LILLIGANT])).setPartyMemberFunc(2,ne([e.MILOTIC,e.PRIMARINA])).setPartyMemberFunc(3,ne([e.GALAR_SLOWBRO,e.GALAR_SLOWKING])).setPartyMemberFunc(4,ne([e.BEWEAR])).setPartyMemberFunc(5,ne([e.NIHILEGO],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=ge.ROGUE_BALL})),[C.LUSAMINE_2]:new ee(++te).setName("Lusamine").initForEvilTeamLeader("Aether Boss",[],!0).setMixedBattleBgm("battle_aether_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,ne([e.NIHILEGO],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=ge.ROGUE_BALL})).setPartyMemberFunc(1,ne([e.MILOTIC,e.PRIMARINA])).setPartyMemberFunc(2,ne([e.CLEFABLE],1,!0,E=>{E.generateAndPopulateMoveset(),E.gender=ye.FEMALE})).setPartyMemberFunc(3,ne([e.STAKATAKA,e.CELESTEELA,e.GUZZLORD],1,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=ge.ROGUE_BALL})).setPartyMemberFunc(4,ne([e.PHEROMOSA],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=ge.ROGUE_BALL})).setPartyMemberFunc(5,ne([e.NECROZMA],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=ge.MASTER_BALL})),[C.GUZMA]:new ee(++te).setName("Guzma").initForEvilTeamLeader("Skull Boss",[]).setMixedBattleBgm("battle_skull_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,ne([e.LOKIX,e.YANMEGA],1,!0,E=>{E.species.speciesId===e.LOKIX?E.abilityIndex=2:E.species.speciesId===e.YANMEGA&&(E.abilityIndex=1)})).setPartyMemberFunc(1,ne([e.HERACROSS])).setPartyMemberFunc(2,ne([e.SCIZOR,e.KLEAVOR],1,!0,E=>{E.species.speciesId===e.SCIZOR?E.abilityIndex=1:E.species.speciesId===e.KLEAVOR&&(E.abilityIndex=2)})).setPartyMemberFunc(3,ne([e.GALVANTULA,e.VIKAVOLT])).setPartyMemberFunc(4,ne([e.PINSIR],1,!0,E=>{E.generateAndPopulateMoveset(),E.formIndex=1,E.pokeball=ge.ULTRA_BALL,E.generateName()})).setPartyMemberFunc(5,ne([e.GOLISOPOD],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.gender=ye.MALE,E.pokeball=ge.ULTRA_BALL})),[C.GUZMA_2]:new ee(++te).setName("Guzma").initForEvilTeamLeader("Skull Boss",[],!0).setMixedBattleBgm("battle_skull_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,ne([e.GOLISOPOD],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.abilityIndex=2,E.gender=ye.MALE,E.pokeball=ge.ULTRA_BALL})).setPartyMemberFunc(1,ne([e.SCIZOR,e.KLEAVOR],1,!0,E=>{E.species.speciesId===e.SCIZOR?E.abilityIndex=1:E.species.speciesId===e.KLEAVOR&&(E.abilityIndex=2)})).setPartyMemberFunc(2,ne([e.HISUI_SAMUROTT,e.CRAWDAUNT],1,!0,E=>{E.abilityIndex=2})).setPartyMemberFunc(3,ne([e.BUZZWOLE],1,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=ge.ROGUE_BALL})).setPartyMemberFunc(4,ne([e.XURKITREE],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=ge.ROGUE_BALL})).setPartyMemberFunc(5,ne([e.PINSIR],1,!0,E=>{E.setBoss(!0,2),E.formIndex=1,E.generateAndPopulateMoveset(),E.generateName(),E.pokeball=ge.ULTRA_BALL})),[C.ROSE]:new ee(++te).setName("Rose").initForEvilTeamLeader("Macro Boss",[]).setMixedBattleBgm("battle_macro_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,ne([e.ARCHALUDON])).setPartyMemberFunc(1,ne([e.FERROTHORN,e.ESCAVALIER])).setPartyMemberFunc(2,ne([e.SIRFETCHD,e.MR_RIME])).setPartyMemberFunc(3,ne([e.CORVIKNIGHT])).setPartyMemberFunc(4,ne([e.PERRSERKER,e.KLINKLANG])).setPartyMemberFunc(5,ne([e.COPPERAJAH],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.formIndex=1,E.generateName(),E.pokeball=ge.ULTRA_BALL,E.gender=ye.FEMALE})),[C.ROSE_2]:new ee(++te).setName("Rose").initForEvilTeamLeader("Macro Boss",[],!0).setMixedBattleBgm("battle_macro_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,ne([e.ARCHALUDON],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset()})).setPartyMemberFunc(1,ne([e.AEGISLASH,e.GHOLDENGO])).setPartyMemberFunc(2,ne([e.DRACOVISH,e.DRACOZOLT],1,!0,E=>{E.generateAndPopulateMoveset(),E.abilityIndex=1})).setPartyMemberFunc(3,ne([e.MELMETAL])).setPartyMemberFunc(4,ne([e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=ge.ULTRA_BALL})).setPartyMemberFunc(5,ne([e.COPPERAJAH],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.formIndex=1,E.generateName(),E.pokeball=ge.ULTRA_BALL,E.gender=ye.FEMALE})),[C.PENNY]:new ee(++te).setName("Cassiopeia").initForEvilTeamLeader("Star Boss",[]).setMixedBattleBgm("battle_star_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,ne([e.VAPOREON,e.JOLTEON,e.FLAREON])).setPartyMemberFunc(1,ne([e.ESPEON,e.UMBREON],1,!0,E=>{E.abilityIndex=2,E.generateAndPopulateMoveset()})).setPartyMemberFunc(2,ne([e.LEAFEON,e.GLACEON])).setPartyMemberFunc(3,ne([e.ROTOM],1,!0,E=>{E.generateAndPopulateMoveset(),E.formIndex=le(5,1)})).setPartyMemberFunc(4,ne([e.SYLVEON],1,!0,E=>{E.abilityIndex=2,E.generateAndPopulateMoveset(),E.gender=ye.FEMALE})).setPartyMemberFunc(5,ne([e.EEVEE],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.formIndex=2,E.pokeball=ge.ULTRA_BALL,E.generateName()})).setGenModifiersFunc(E=>{const A=E[4];return[x.TERA_SHARD().generateType([],[A.species.type1]).withIdFromFunc(x.TERA_SHARD).newModifier(A)]}),[C.PENNY_2]:new ee(++te).setName("Cassiopeia").initForEvilTeamLeader("Star Boss",[],!0).setMixedBattleBgm("battle_star_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,ne([e.SYLVEON],1,!0,E=>{E.setBoss(!0,2),E.abilityIndex=2,E.generateAndPopulateMoveset(),E.gender=ye.FEMALE})).setPartyMemberFunc(1,ne([e.ENTEI,e.RAIKOU,e.SUICUNE],1,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=ge.ULTRA_BALL})).setPartyMemberFunc(2,ne([e.WALKING_WAKE,e.GOUGING_FIRE,e.RAGING_BOLT])).setPartyMemberFunc(3,ne([e.REVAVROOM],1,!0,E=>{E.formIndex=le(5,1),E.generateAndPopulateMoveset(),E.pokeball=ge.ROGUE_BALL})).setPartyMemberFunc(4,ne([e.EEVEE],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.formIndex=2,E.generateName(),E.pokeball=ge.ULTRA_BALL})).setPartyMemberFunc(5,ne([e.ZAMAZENTA],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=ge.MASTER_BALL})).setGenModifiersFunc(E=>{const A=E[0];return[x.TERA_SHARD().generateType([],[A.species.type1]).withIdFromFunc(x.TERA_SHARD).newModifier(A)]}),[C.BUCK]:new ee(++te).setName("Buck").initForStatTrainer([],!0).setPartyMemberFunc(0,ne([e.CLAYDOL],1,!0,E=>{E.setBoss(!0,3),E.generateAndPopulateMoveset(),E.pokeball=ge.ULTRA_BALL})).setPartyMemberFunc(1,ne([e.VENUSAUR,e.COALOSSAL],1,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=ge.GREAT_BALL,E.species.speciesId===e.VENUSAUR?(E.formIndex=2,E.abilityIndex=2):E.formIndex=1,E.generateName()})).setPartyMemberFunc(2,ne([e.AGGRON],1,!0,E=>{E.generateAndPopulateMoveset(),E.formIndex=1,E.generateName()})).setPartyMemberFunc(3,ne([e.TORKOAL],1,!0,E=>{E.generateAndPopulateMoveset(),E.abilityIndex=1})).setPartyMemberFunc(4,ne([e.GREAT_TUSK],1,!0)).setPartyMemberFunc(5,ne([e.HEATRAN],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=ge.MASTER_BALL})),[C.CHERYL]:new ee(++te).setName("Cheryl").initForStatTrainer([],!1).setPartyMemberFunc(0,ne([e.BLISSEY],1,!0,E=>{E.setBoss(!0,3),E.generateAndPopulateMoveset(),E.pokeball=ge.ULTRA_BALL})).setPartyMemberFunc(1,ne([e.SNORLAX,e.LAPRAS],1,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=ge.GREAT_BALL,E.formIndex=1,E.generateName()})).setPartyMemberFunc(2,ne([e.AUDINO],1,!0,E=>{E.generateAndPopulateMoveset(),E.formIndex=1,E.generateName()})).setPartyMemberFunc(3,ne([e.GOODRA],1,!0)).setPartyMemberFunc(4,ne([e.IRON_HANDS],1,!0)).setPartyMemberFunc(5,ne([e.CRESSELIA,e.ENAMORUS],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.species.speciesId===e.ENAMORUS&&(E.formIndex=1,E.generateName()),E.pokeball=ge.MASTER_BALL})),[C.MARLEY]:new ee(++te).setName("Marley").initForStatTrainer([],!1).setPartyMemberFunc(0,ne([e.ARCANINE],1,!0,E=>{E.setBoss(!0,3),E.generateAndPopulateMoveset(),E.pokeball=ge.ULTRA_BALL})).setPartyMemberFunc(1,ne([e.CINDERACE,e.INTELEON],1,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=ge.GREAT_BALL,E.formIndex=1,E.generateName()})).setPartyMemberFunc(2,ne([e.AERODACTYL],1,!0,E=>{E.generateAndPopulateMoveset(),E.formIndex=1,E.generateName()})).setPartyMemberFunc(3,ne([e.DRAGAPULT],1,!0)).setPartyMemberFunc(4,ne([e.IRON_BUNDLE],1,!0)).setPartyMemberFunc(5,ne([e.REGIELEKI],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=ge.MASTER_BALL})),[C.MIRA]:new ee(++te).setName("Mira").initForStatTrainer([],!1).setPartyMemberFunc(0,ne([e.ALAKAZAM],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.formIndex=1,E.pokeball=ge.ULTRA_BALL,E.generateName()})).setPartyMemberFunc(1,ne([e.GENGAR,e.HATTERENE],1,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=ge.GREAT_BALL,E.formIndex=E.species.speciesId===e.GENGAR?2:1,E.generateName()})).setPartyMemberFunc(2,ne([e.FLUTTER_MANE],1,!0)).setPartyMemberFunc(3,ne([e.HYDREIGON],1,!0)).setPartyMemberFunc(4,ne([e.MAGNEZONE],1,!0)).setPartyMemberFunc(5,ne([e.LATIOS,e.LATIAS],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=ge.MASTER_BALL})),[C.RILEY]:new ee(++te).setName("Riley").initForStatTrainer([],!0).setPartyMemberFunc(0,ne([e.LUCARIO],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.formIndex=1,E.pokeball=ge.ULTRA_BALL,E.generateName()})).setPartyMemberFunc(1,ne([e.RILLABOOM,e.CENTISKORCH],1,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=ge.GREAT_BALL,E.formIndex=1,E.generateName()})).setPartyMemberFunc(2,ne([e.TYRANITAR],1,!0)).setPartyMemberFunc(3,ne([e.ROARING_MOON],1,!0)).setPartyMemberFunc(4,ne([e.URSALUNA],1,!0)).setPartyMemberFunc(5,ne([e.REGIGIGAS,e.LANDORUS],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.species.speciesId===e.LANDORUS&&(E.formIndex=1,E.generateName()),E.pokeball=ge.MASTER_BALL})),[C.VICTOR]:new ee(++te).setTitle("The Winstrates").setLocalizedName("Victor").setMoneyMultiplier(1).setPartyTemplates(ve.ONE_AVG_ONE_STRONG),[C.VICTORIA]:new ee(++te).setTitle("The Winstrates").setLocalizedName("Victoria").setMoneyMultiplier(1).setPartyTemplates(ve.ONE_AVG_ONE_STRONG),[C.VIVI]:new ee(++te).setTitle("The Winstrates").setLocalizedName("Vivi").setMoneyMultiplier(1).setPartyTemplates(ve.TWO_AVG_ONE_STRONG),[C.VICKY]:new ee(++te).setTitle("The Winstrates").setLocalizedName("Vicky").setMoneyMultiplier(1).setPartyTemplates(ve.ONE_AVG),[C.VITO]:new ee(++te).setTitle("The Winstrates").setLocalizedName("Vito").setMoneyMultiplier(2).setPartyTemplates(new PA(new We(3,Pe.AVERAGE),new We(2,Pe.STRONG))),[C.BUG_TYPE_SUPERFAN]:new ee(++te).setMoneyMultiplier(2.25).setEncounterBgm(C.ACE_TRAINER).setPartyTemplates(new We(2,Pe.AVERAGE)),[C.EXPERT_POKEMON_BREEDER]:new ee(++te).setMoneyMultiplier(3).setEncounterBgm(C.ACE_TRAINER).setLocalizedName("Expert Pokemon Breeder").setPartyTemplates(new We(3,Pe.AVERAGE)),[C.FUTURE_SELF_M]:new ee(++te).setMoneyMultiplier(0).setEncounterBgm("mystery_encounter_weird_dream").setBattleBgm("mystery_encounter_weird_dream").setMixedBattleBgm("mystery_encounter_weird_dream").setVictoryBgm("mystery_encounter_weird_dream").setLocalizedName("Future Self M").setPartyTemplates(new We(6,Pe.STRONG)),[C.FUTURE_SELF_F]:new ee(++te).setMoneyMultiplier(0).setEncounterBgm("mystery_encounter_weird_dream").setBattleBgm("mystery_encounter_weird_dream").setMixedBattleBgm("mystery_encounter_weird_dream").setVictoryBgm("mystery_encounter_weird_dream").setLocalizedName("Future Self F").setPartyTemplates(new We(6,Pe.STRONG))},pd=class pd{constructor(A,...s){this.urls=s.length?s:[Bn(C[A]).replace(/ /g,"_")]}hasGenderVariant(...A){return this.femaleUrls=A.length?A:null,this}};T(pd,"TrainerNameConfig");let ft=pd;C.ACE_TRAINER+"",new ft(C.ACE_TRAINER),C.ARTIST+"",new ft(C.ARTIST),C.BACKERS+"",new ft(C.BACKERS),C.BACKPACKER+"",new ft(C.BACKPACKER),C.BAKER+"",new ft(C.BAKER),C.BEAUTY+"",new ft(C.BEAUTY),C.BIKER+"",new ft(C.BIKER),C.BLACK_BELT+"",new ft(C.BLACK_BELT).hasGenderVariant("Battle_Girl"),C.BREEDER+"",new ft(C.BREEDER,"Pokémon_Breeder"),C.CLERK+"",new ft(C.CLERK),C.CYCLIST+"",new ft(C.CYCLIST),C.DANCER+"",new ft(C.DANCER),C.DEPOT_AGENT+"",new ft(C.DEPOT_AGENT),C.DOCTOR+"",new ft(C.DOCTOR).hasGenderVariant("Nurse"),C.FIREBREATHER+"",new ft(C.FIREBREATHER),C.FISHERMAN+"",new ft(C.FISHERMAN),C.GUITARIST+"",new ft(C.GUITARIST),C.HARLEQUIN+"",new ft(C.HARLEQUIN),C.HIKER+"",new ft(C.HIKER),C.HOOLIGANS+"",new ft(C.HOOLIGANS),C.HOOPSTER+"",new ft(C.HOOPSTER),C.INFIELDER+"",new ft(C.INFIELDER),C.JANITOR+"",new ft(C.JANITOR),C.LINEBACKER+"",new ft(C.LINEBACKER),C.MAID+"",new ft(C.MAID),C.MUSICIAN+"",new ft(C.MUSICIAN),C.HEX_MANIAC+"",new ft(C.HEX_MANIAC),C.NURSERY_AIDE+"",new ft(C.NURSERY_AIDE),C.OFFICER+"",new ft(C.OFFICER),C.PARASOL_LADY+"",new ft(C.PARASOL_LADY),C.PILOT+"",new ft(C.PILOT),C.POKEFAN+"",new ft(C.POKEFAN,"Poké_Fan"),C.PRESCHOOLER+"",new ft(C.PRESCHOOLER),C.PSYCHIC+"",new ft(C.PSYCHIC),C.RANGER+"",new ft(C.RANGER),C.RICH+"",new ft(C.RICH,"Gentleman").hasGenderVariant("Madame"),C.RICH_KID+"",new ft(C.RICH_KID,"Rich_Boy").hasGenderVariant("Lady"),C.ROUGHNECK+"",new ft(C.ROUGHNECK),C.SAILOR+"",new ft(C.SAILOR),C.SCIENTIST+"",new ft(C.SCIENTIST),C.SMASHER+"",new ft(C.SMASHER),C.SNOW_WORKER+"",new ft(C.SNOW_WORKER,"Worker"),C.STRIKER+"",new ft(C.STRIKER),C.SCHOOL_KID+"",new ft(C.SCHOOL_KID,"School_Kid"),C.SWIMMER+"",new ft(C.SWIMMER),C.TWINS+"",new ft(C.TWINS),C.VETERAN+"",new ft(C.VETERAN),C.WAITER+"",new ft(C.WAITER).hasGenderVariant("Waitress"),C.WORKER+"",new ft(C.WORKER),C.YOUNGSTER+"",new ft(C.YOUNGSTER).hasGenderVariant("Lass");const or={[C.ACE_TRAINER]:[["Aaron","Allen","Blake","Brian","Gaven","Jake","Kevin","Mike","Nick","Paul","Ryan","Sean","Darin","Albert","Berke","Clyde","Edgar","George","Leroy","Owen","Parker","Randall","Ruben","Samuel","Vincent","Warren","Wilton","Zane","Alfred","Braxton","Felix","Gerald","Jonathan","Leonel","Marcel","Mitchell","Quincy","Roderick","Colby","Rolando","Yuji","Abel","Anton","Arthur","Cesar","Dalton","Dennis","Ernest","Garrett","Graham","Henry","Isaiah","Jonah","Jose","Keenan","Micah","Omar","Quinn","Rodolfo","Saul","Sergio","Skylar","Stefan","Zachery","Alton","Arabella","Bonita","Cal","Cody","French","Kobe","Paulo","Shaye","Austin","Beckett","Charlie","Corky","David","Dwayne","Elmer","Jesse","Jared","Johan","Jordan","Kipp","Lou","Terry","Tom","Webster","Billy","Doyle","Enzio","Geoff","Grant","Kelsey","Miguel","Pierce","Ray","Santino","Shel","Adelbert","Bence","Emil","Evan","Mathis","Maxim","Neil","Rico","Robbie","Theo","Viktor","Benedict","Cornelius","Hisato","Leopold","Neville","Vito","Chase","Cole","Hiroshi","Jackson","Jim","Kekoa","Makana","Yuki","Elwood","Seth","Alvin","Arjun","Arnold","Cameron","Carl","Carlton","Christopher","Dave","Dax","Dominic","Edmund","Finn","Fred","Garret","Grayson","Jace","Jaxson","Jay","Jirard","Johnson","Kayden","Kite","Louis","Mac","Marty","Percy","Raymond","Ronnie","Satch","Tim","Zach","Conner","Vince","Bedro","Boda","Botan","Daras","Dury","Herton","Rewn","Stum","Tock","Trilo","Berki","Cruik","Dazon","Desid","Dillot","Farfin","Forgon","Hebel","Morfon","Moril","Shadd","Vanhub","Bardo","Carben","Degin","Gorps","Klept","Lask","Malex","Mopar","Niled","Noxon","Teslor","Tetil"],["Beth","Carol","Cybil","Emma","Fran","Gwen","Irene","Jenn","Joyce","Kate","Kelly","Lois","Lola","Megan","Quinn","Reena","Cara","Alexa","Brooke","Caroline","Elaine","Hope","Jennifer","Jody","Julie","Lori","Mary","Michelle","Shannon","Wendy","Alexia","Alicia","Athena","Carolina","Cristin","Darcy","Dianne","Halle","Jazmyn","Katelynn","Keira","Marley","Allyson","Kathleen","Naomi","Alyssa","Ariana","Brandi","Breanna","Brenda","Brenna","Catherine","Clarice","Dana","Deanna","Destiny","Jamie","Jasmin","Kassandra","Laura","Maria","Mariah","Maya","Meagan","Mikayla","Monique","Natasha","Olivia","Sandra","Savannah","Sydney","Moira","Piper","Salma","Allison","Beverly","Cathy","Cheyenne","Clara","Dara","Eileen","Glinda","Junko","Lena","Lucille","Mariana","Olwen","Shanta","Stella","Angi","Belle","Chandra","Cora","Eve","Jacqueline","Jeanne","Juliet","Kathrine","Layla","Lucca","Melina","Miki","Nina","Sable","Shelly","Summer","Trish","Vicki","Alanza","Cordelia","Hilde","Imelda","Michele","Mireille","Claudia","Constance","Harriet","Honor","Melba","Portia","Alexis","Angela","Karla","Lindsey","Tori","Sheri","Jada","Kailee","Amanda","Annie","Kindra","Kyla","Sofia","Yvette","Becky","Flora","Gloria","Buna","Ferda","Lehan","Liqui","Lomen","Neira","Atilo","Detta","Gilly","Gosney","Levens","Moden","Rask","Rateis","Rosno","Tynan","Veron","Zoel","Cida","Dibsin","Dodin","Ebson","Equin","Flostin","Gabsen","Halsion","Hileon","Quelor","Rapeel","Roze","Tensin"]],[C.ARTIST]:[["Ismael","William","Horton","Pierre","Zach","Gough","Salvador","Vincent","Duncan"],["Georgia"]],[C.BACKERS]:[["Alf & Fred","Hawk & Dar","Joe & Ross","Les & Web","Masa & Yas","Stu & Art"],["Ai & Ciel","Ami & Eira","Cam & Abby","Fey & Sue","Kat & Phae","Kay & Ali","Ava & Aya","Cleo & Rio","May & Mal"]],[C.BACKPACKER]:[["Alexander","Carlos","Herman","Jerome","Keane","Kelsey","Kiyo","Michael","Nate","Peter","Sam","Stephen","Talon","Terrance","Toru","Waylon","Boone","Clifford","Ivan","Kendall","Lowell","Randall","Reece","Roland","Shane","Walt","Farid","Heike","Joren","Lane","Roderick","Darnell","Deon","Emory","Graeme","Grayson","Aitor","Alex","Arturo","Asier","Jaime","Jonathan","Julio","Kevin","Kosuke","Lander","Markel","Mateo","Nil","Pau","Samuel"],["Anna","Corin","Elaine","Emi","Jill","Kumiko","Liz","Lois","Lora","Molly","Patty","Ruth","Vicki","Annie","Blossom","Clara","Eileen","Mae","Myra","Rachel","Tami","Ashley","Mikiko","Kiana","Perdy","Maria","Yuho","Peren","Barbara","Diane"]],[C.BAKER]:["Chris","Jenn","Lilly"],[C.BEAUTY]:["Cassie","Julia","Olivia","Samantha","Valerie","Victoria","Bridget","Connie","Jessica","Johanna","Melissa","Sheila","Shirley","Tiffany","Namiko","Thalia","Grace","Lola","Lori","Maura","Tamia","Cyndy","Devon","Gabriella","Harley","Lindsay","Nicola","Callie","Charlotte","Kassandra","December","Fleming","Nikola","Aimee","Anais","Brigitte","Cassandra","Andrea","Brittney","Carolyn","Krystal","Alexis","Alice","Aina","Anya","Arianna","Aubrey","Beverly","Camille","Beauty","Evette","Hansol","Haruka","Jill","Jo","Lana","Lois","Lucy","Mai","Nickie","Nicole","Prita","Rose","Shelly","Suzy","Tessa","Anita","Alissa","Rita","Cudsy","Eloff","Miru","Minot","Nevah","Niven","Ogoin"],[C.BIKER]:["Charles","Dwayne","Glenn","Harris","Joel","Riley","Zeke","Alex","Billy","Ernest","Gerald","Hideo","Isaac","Jared","Jaren","Jaxon","Jordy","Lao","Lukas","Malik","Nikolas","Ricardo","Ruben","Virgil","William","Aiden","Dale","Dan","Jacob","Markey","Reese","Teddy","Theron","Jeremy","Morgann","Phillip","Philip","Stanley","Dillon"],[C.BLACK_BELT]:[["Kenji","Lao","Lung","Nob","Wai","Yoshi","Atsushi","Daisuke","Hideki","Hitoshi","Kiyo","Koichi","Koji","Yuji","Cristian","Rhett","Takao","Theodore","Zander","Aaron","Hugh","Mike","Nicolas","Shea","Takashi","Adam","Carl","Colby","Darren","David","Davon","Derek","Eddie","Gregory","Griffin","Jarrett","Jeffery","Kendal","Kyle","Luke","Miles","Nathaniel","Philip","Rafael","Ray","Ricky","Sean","Willie","Ander","Manford","Benjamin","Corey","Edward","Grant","Jay","Kendrew","Kentaro","Ryder","Teppei","Thomas","Tyrone","Andrey","Donny","Drago","Gordon","Grigor","Jeriel","Kenneth","Martell","Mathis","Rich","Rocky","Rodrigo","Wesley","Zachery","Alonzo","Cadoc","Gunnar","Igor","Killian","Markus","Ricardo","Yanis","Banting","Clayton","Duane","Earl","Greg","Roy","Terry","Tracy","Walter","Alvaro","Curtis","Francis","Ross","Brice","Cheng","Dudley","Eric","Kano","Masahiro","Randy","Ryuji","Steve","Tadashi","Wong","Yuen","Brian","Carter","Reece","Nick","Yang"],["Cora","Cyndy","Jill","Laura","Sadie","Tessa","Vivian","Aisha","Callie","Danielle","Helene","Jocelyn","Lilith","Paula","Reyna","Helen","Kelsey","Tyler","Amy","Chandra","Hillary","Janie","Lee","Maggie","Mikiko","Miriam","Sharon","Susie","Xiao","Alize","Azra","Brenda","Chalina","Chan","Glinda","Maki","Tia","Tiffany","Wendy","Andrea","Gabrielle","Gerardine","Hailey","Hedvig","Justine","Kinsey","Sigrid","Veronique","Tess"]],[C.BREEDER]:[["Isaac","Myles","Salvadore","Albert","Kahlil","Eustace","Galen","Owen","Addison","Marcus","Foster","Cory","Glenn","Jay","Wesley","William","Adrian","Bradley","Jaime"],["Allison","Alize","Bethany","Lily","Lydia","Gabrielle","Jayden","Pat","Veronica","Amber","Jennifer","Kaylee","Adelaide","Brooke","Ethel","April","Irene","Magnolia","Amala","Mercy","Amanda","Ikue","Savannah","Yuka","Chloe","Debra","Denise","Elena"]],[C.CLERK]:[["Chaz","Clemens","Doug","Fredric","Ivan","Isaac","Nelson","Wade","Warren","Augustin","Gilligan","Cody","Jeremy","Shane","Dugal","Royce","Ronald"],["Alberta","Ingrid","Katie","Piper","Trisha","Wren","Britney","Lana","Jessica","Kristen","Michelle","Gabrielle"]],[C.CYCLIST]:[["Axel","James","John","Ryan","Hector","Jeremiah"],["Kayla","Megan","Nicole","Rachel","Krissa","Adelaide"]],[C.DANCER]:["Brian","Davey","Dirk","Edmond","Mickey","Raymond","Cara","Julia","Maika","Mireille","Ronda","Zoe"],[C.DEPOT_AGENT]:["Josh","Hank","Vincent"],[C.DOCTOR]:[["Hank","Jerry","Jules","Logan","Wayne","Braid","Derek","Heath","Julius","Kit","Graham"],["Kirsten","Sachiko","Shery","Carol","Dixie","Mariah"]],[C.FIREBREATHER]:["Bill","Burt","Cliff","Dick","Lyle","Ned","Otis","Ray","Richard","Walt"],[C.FISHERMAN]:["Andre","Arnold","Barney","Chris","Edgar","Henry","Jonah","Justin","Kyle","Martin","Marvin","Ralph","Raymond","Scott","Stephen","Wilton","Tully","Andrew","Barny","Carter","Claude","Dale","Elliot","Eugene","Ivan","Ned","Nolan","Roger","Ronald","Wade","Wayne","Darian","Kai","Chip","Hank","Kaden","Tommy","Tylor","Alec","Brett","Cameron","Cody","Cole","Cory","Erick","George","Joseph","Juan","Kenneth","Luc","Miguel","Travis","Walter","Zachary","Josh","Gideon","Kyler","Liam","Murphy","Bruce","Damon","Devon","Hubert","Jones","Lydon","Mick","Pete","Sean","Sid","Vince","Bucky","Dean","Eustace","Kenzo","Leroy","Mack","Ryder","Ewan","Finn","Murray","Seward","Shad","Wharton","Finley","Fisher","Fisk","River","Sheaffer","Timin","Carl","Ernest","Hal","Herbert","Hisato","Mike","Vernon","Harriet","Marina","Chase"],[C.GUITARIST]:["Anna","Beverly","January","Tina","Alicia","Claudia","Julia","Lidia","Mireia","Noelia","Sara","Sheila","Tatiana"],[C.HARLEQUIN]:["Charley","Ian","Jack","Kerry","Louis","Pat","Paul","Rick","Anders","Clarence","Gary"],[C.HIKER]:["Anthony","Bailey","Benjamin","Daniel","Erik","Jim","Kenny","Leonard","Michael","Parry","Phillip","Russell","Sidney","Tim","Timothy","Alan","Brice","Clark","Eric","Lenny","Lucas","Mike","Trent","Devan","Eli","Marc","Sawyer","Allen","Daryl","Dudley","Earl","Franklin","Jeremy","Marcos","Nob","Oliver","Wayne","Alexander","Damon","Jonathan","Justin","Kevin","Lorenzo","Louis","Maurice","Nicholas","Reginald","Robert","Theodore","Bruce","Clarke","Devin","Dwight","Edwin","Eoin","Noland","Russel","Andy","Bret","Darrell","Gene","Hardy","Hugh","Jebediah","Jeremiah","Kit","Neil","Terrell","Don","Doug","Hunter","Jared","Jerome","Keith","Manuel","Markus","Otto","Shelby","Stephen","Teppei","Tobias","Wade","Zaiem","Aaron","Alain","Bergin","Bernard","Brent","Corwin","Craig","Delmon","Dunstan","Orestes","Ross","Davian","Calhoun","David","Gabriel","Ryan","Thomas","Travis","Zachary","Anuhea","Barnaby","Claus","Collin","Colson","Dexter","Dillan","Eugine","Farkas","Hisato","Julius","Kenji","Irwin","Lionel","Paul","Richter","Valentino","Donald","Douglas","Kevyn","Chester"],[C.HOOLIGANS]:["Jim & Cas","Rob & Sal"],[C.HOOPSTER]:["Bobby","John","Lamarcus","Derrick","Nicolas"],[C.INFIELDER]:["Alex","Connor","Todd"],[C.JANITOR]:["Caleb","Geoff","Brady","Felix","Orville","Melvin","Shawn"],[C.LINEBACKER]:["Bob","Dan","Jonah"],[C.MAID]:["Belinda","Sophie","Emily","Elena","Clare","Alica","Tanya","Tammy"],[C.MUSICIAN]:["Boris","Preston","Charles","Clyde","Vincent","Dalton","Kirk","Shawn","Fabian","Fernando","Joseph","Marcos","Arturo","Jerry","Lonnie","Tony"],[C.NURSERY_AIDE]:["Autumn","Briana","Leah","Miho","Ethel","Hollie","Ilse","June","Kimya","Rosalyn"],[C.OFFICER]:["Dirk","Keith","Alex","Bobby","Caleb","Danny","Dylan","Thomas","Daniel","Jeff","Braven","Dell","Neagle","Haruki","Mitchell","Raymond"],[C.PARASOL_LADY]:["Angelica","Clarissa","Madeline","Akari","Annabell","Kayley","Rachel","Alexa","Sabrina","April","Gwyneth","Laura","Lumi","Mariah","Melita","Nicole","Tihana","Ingrid","Tyra"],[C.PILOT]:["Chase","Leonard","Ted","Elron","Ewing","Flynn","Winslow"],[C.POKEFAN]:[["Alex","Allan","Brandon","Carter","Colin","Derek","Jeremy","Joshua","Rex","Robert","Trevor","William","Colton","Miguel","Francisco","Kaleb","Leonard","Boone","Elliot","Jude","Norbert","Corey","Gabe","Baxter"],["Beverly","Georgia","Jaime","Ruth","Isabel","Marissa","Vanessa","Annika","Bethany","Kimberly","Meredith","Rebekah","Eleanor","Darcy","Lydia","Sachiko","Abigail","Agnes","Lydie","Roisin","Tara","Carmen","Janet"]],[C.PRESCHOOLER]:[["Billy","Doyle","Evan","Homer","Tully","Albert","Buster","Greg","Ike","Jojo","Tyrone","Adrian","Oliver","Hayden","Hunter","Kaleb","Liam","Dylan"],["Juliet","Mia","Sarah","Wendy","Winter","Chrissy","Eva","Lin","Samantha","Ella","Lily","Natalie","Ailey","Hannah","Malia","Kindra","Nancy"]],[C.PSYCHIC]:[["Fidel","Franklin","Gilbert","Greg","Herman","Jared","Mark","Nathan","Norman","Phil","Richard","Rodney","Cameron","Edward","Fritz","Joshua","Preston","Virgil","William","Alvaro","Blake","Cedric","Keenan","Nicholas","Dario","Johan","Lorenzo","Tyron","Bryce","Corbin","Deandre","Elijah","Kody","Landon","Maxwell","Mitchell","Sterling","Eli","Nelson","Vernon","Gaven","Gerard","Low","Micki","Perry","Rudolf","Tommy","Al","Nandor","Tully","Arthur","Emanuel","Franz","Harry","Paschal","Robert","Sayid","Angelo","Anton","Arin","Avery","Danny","Frasier","Harrison","Jaime","Ross","Rui","Vlad","Mason"],["Alexis","Hannah","Jacki","Jaclyn","Kayla","Maura","Samantha","Alix","Brandi","Edie","Macey","Mariella","Marlene","Laura","Rodette","Abigail","Brittney","Chelsey","Daisy","Desiree","Kendra","Lindsey","Rachael","Valencia","Belle","Cybil","Doreen","Dua","Future","Lin","Madhu","Alia","Ena","Joyce","Lynette","Olesia","Sarah"]],[C.RANGER]:[["Carlos","Jackson","Sebastian","Gav","Lorenzo","Logan","Nicolas","Trenton","Deshawn","Dwayne","Jeffery","Kyler","Taylor","Alain","Claude","Crofton","Forrest","Harry","Jaden","Keith","Lewis","Miguel","Pedro","Ralph","Richard","Bret","Daryl","Eddie","Johan","Leaf","Louis","Maxwell","Parker","Rick","Steve","Bjorn","Chaise","Dean","Lee","Maurice","Nash","Ralf","Reed","Shinobu","Silas"],["Catherine","Jenna","Sophia","Merdith","Nora","Beth","Chelsea","Katelyn","Madeline","Allison","Ashlee","Felicia","Krista","Annie","Audra","Brenda","Chloris","Eliza","Heidi","Irene","Mary","Mylene","Shanti","Shelly","Thalia","Anja","Briana","Dianna","Elaine","Elle","Hillary","Katie","Lena","Lois","Malory","Melita","Mikiko","Naoko","Serenity","Ambre","Brooke","Clementine","Melina","Petra","Twiggy"]],[C.RICH]:[["Alfred","Edward","Gregory","Preston","Thomas","Tucker","Walter","Clifford","Everett","Micah","Nate","Pierre","Terrance","Arthur","Brooks","Emanuel","Lamar","Jeremy","Leonardo","Milton","Frederic","Renaud","Robert","Yan","Daniel","Sheldon","Stonewall","Gerald","Ronald","Smith","Stanley","Reginald","Orson","Wilco","Caden","Glenn"],["Rebecca","Reina","Cassandra","Emilia","Grace","Marian","Elizabeth","Kathleen","Sayuri","Caroline","Judy"]],[C.RICH_KID]:[["Garret","Winston","Dawson","Enrique","Jason","Roman","Trey","Liam","Anthony","Brad","Cody","Manuel","Martin","Pierce","Rolan","Keenan","Filbert","Antoin","Cyus","Diek","Dugo","Flitz","Jurek","Lond","Perd","Quint","Basto","Benit","Brot","Denc","Guyit","Marcon","Perc","Puros","Roex","Sainz","Symin","Tark","Venak"],["Anette","Brianna","Cindy","Colleen","Daphne","Elizabeth","Naomi","Sarah","Charlotte","Gillian","Jacki","Lady","Melissa","Celeste","Colette","Elizandra","Isabel","Lynette","Magnolia","Sophie","Lina","Dulcie","Auro","Brin","Caril","Eloos","Gwin","Illa","Kowly","Rima","Ristin","Vesey","Brena","Deasy","Denslon","Kylet","Nemi","Rene","Sanol","Stouner","Sturk","Talmen","Zoila"]],[C.ROUGHNECK]:["Camron","Corey","Gabriel","Isaiah","Jamal","Koji","Luke","Paxton","Raul","Zeek","Kirby","Chance","Dave","Fletcher","Johnny","Reese","Joey","Ricky","Silvester","Martin"],[C.SAILOR]:["Alberto","Bost","Brennan","Brenden","Claude","Cory","Damian","Dirk","Duncan","Dwayne","Dylan","Eddie","Edmond","Elijah","Ernest","Eugene","Garrett","Golos","Gratin","Grestly","Harry","Hols","Hudson","Huey","Jebol","Jeff","Leonald","Luther","Kelvin","Kenneth","Kent","Knook","Marc","Mifis","Monar","Morkor","Ordes","Oxlin","Parker","Paul","Philip","Roberto","Samson","Skyler","Stanly","Tebu","Terrell","Trevor","Yasu","Zachariah"],[C.SCIENTIST]:[["Jed","Marc","Mitch","Rich","Ross","Beau","Braydon","Connor","Ed","Ivan","Jerry","Jose","Joshua","Parker","Rodney","Taylor","Ted","Travis","Zackery","Darrius","Emilio","Fredrick","Shaun","Stefano","Travon","Daniel","Garett","Gregg","Linden","Lowell","Trenton","Dudley","Luke","Markus","Nathan","Orville","Randall","Ron","Ronald","Simon","Steve","William","Franklin","Clarke","Jacques","Terrance","Ernst","Justus","Ikaika","Jayson","Kyle","Reid","Tyrone","Adam","Albert","Alphonse","Cory","Donnie","Elton","Francis","Gordon","Herbert","Humphrey","Jordan","Julian","Keaton","Levi","Melvin","Murray","West","Craig","Coren","Dubik","Kotan","Lethco","Mante","Mort","Myron","Odlow","Ribek","Roeck","Vogi","Vonder","Zogo","Doimo","Doton","Durel","Hildon","Kukla","Messa","Nanot","Platen","Raburn","Reman","Acrod","Coffy","Elrok","Foss","Hardig","Hombol","Hospel","Kaller","Klots","Krilok","Limar","Loket","Mesak","Morbit","Newin","Orill","Tabor","Tekot"],["Blythe","Chan","Kathrine","Marie","Maria","Naoko","Samantha","Satomi","Shannon","Athena","Caroline","Lumi","Lumina","Marissa","Sonia"]],[C.SMASHER]:["Aspen","Elena","Mari","Amy","Lizzy"],[C.SNOW_WORKER]:[["Braden","Brendon","Colin","Conrad","Dillan","Gary","Gerardo","Holden","Jackson","Mason","Quentin","Willy","Noel","Arnold","Brady","Brand","Cairn","Cliff","Don","Eddie","Felix","Filipe","Glenn","Gus","Heath","Matthew","Patton","Rich","Rob","Ryan","Scott","Shelby","Sterling","Tyler","Victor","Zack","Friedrich","Herman","Isaac","Leo","Maynard","Mitchell","Morgann","Nathan","Niel","Pasqual","Paul","Tavarius","Tibor","Dimitri","Narek","Yusif","Frank","Jeff","Vaclav","Ovid","Francis","Keith","Russel","Sangon","Toway","Bomber","Chean","Demit","Hubor","Kebile","Laber","Ordo","Retay","Ronix","Wagel","Dobit","Kaster","Lobel","Releo","Saken","Rustix"],["Georgia","Sandra","Yvonne"]],[C.STRIKER]:["Marco","Roberto","Tony"],[C.SCHOOL_KID]:[["Alan","Billy","Chad","Danny","Dudley","Jack","Joe","Johnny","Kipp","Nate","Ricky","Tommy","Jerry","Paul","Ted","Chance","Esteban","Forrest","Harrison","Connor","Sherman","Torin","Travis","Al","Carter","Edgar","Jem","Sammy","Shane","Shayne","Alvin","Keston","Neil","Seymour","William","Carson","Clark","Nolan"],["Georgia","Karen","Meiko","Christine","Mackenzie","Tiera","Ann","Gina","Lydia","Marsha","Millie","Sally","Serena","Silvia","Alberta","Cassie","Mara","Rita","Georgie","Meena","Nitzel"]],[C.SWIMMER]:[["Berke","Cameron","Charlie","George","Harold","Jerome","Kirk","Mathew","Parker","Randall","Seth","Simon","Tucker","Austin","Barry","Chad","Cody","Darrin","David","Dean","Douglas","Franklin","Gilbert","Herman","Jack","Luis","Matthew","Reed","Richard","Rodney","Roland","Spencer","Stan","Tony","Clarence","Declan","Dominik","Harrison","Kevin","Leonardo","Nolen","Pete","Santiago","Axle","Braden","Finn","Garrett","Mymo","Reece","Samir","Toby","Adrian","Colton","Dillon","Erik","Evan","Francisco","Glenn","Kurt","Oscar","Ricardo","Sam","Sheltin","Troy","Vincent","Wade","Wesley","Duane","Elmo","Esteban","Frankie","Ronald","Tyson","Bart","Matt","Tim","Wright","Jeffery","Kyle","Alessandro","Estaban","Kieran","Ramses","Casey","Dakota","Jared","Kalani","Keoni","Lawrence","Logan","Robert","Roddy","Yasu","Derek","Jacob","Bruce","Clayton"],["Briana","Dawn","Denise","Diana","Elaine","Kara","Kaylee","Lori","Nicole","Nikki","Paula","Susie","Wendy","Alice","Beth","Beverly","Brenda","Dana","Debra","Grace","Jenny","Katie","Laurel","Linda","Missy","Sharon","Tanya","Tara","Tisha","Carlee","Imani","Isabelle","Kyla","Sienna","Abigail","Amara","Anya","Connie","Maria","Melissa","Nora","Shirley","Shania","Tiffany","Aubree","Cassandra","Claire","Crystal","Erica","Gabrielle","Haley","Jessica","Joanna","Lydia","Mallory","Mary","Miranda","Paige","Sophia","Vanessa","Chelan","Debbie","Joy","Kendra","Leona","Mina","Caroline","Joyce","Larissa","Rebecca","Tyra","Dara","Desiree","Kaoru","Ruth","Coral","Genevieve","Isla","Marissa","Romy","Sheryl","Alexandria","Alicia","Chelsea","Jade","Kelsie","Laura","Portia","Shelby","Sara","Tiare","Kyra","Natasha","Layla","Scarlett","Cora"]],[C.TWINS]:["Amy & May","Jo & Zoe","Meg & Peg","Ann & Anne","Lea & Pia","Amy & Liv","Gina & Mia","Miu & Yuki","Tori & Tia","Eli & Anne","Jen & Kira","Joy & Meg","Kiri & Jan","Miu & Mia","Emma & Lil","Liv & Liz","Teri & Tia","Amy & Mimi","Clea & Gil","Day & Dani","Kay & Tia","Tori & Til","Saya & Aya","Emy & Lin","Kumi & Amy","Mayo & May","Ally & Amy","Lia & Lily","Rae & Ula","Sola & Ana","Tara & Val","Faith & Joy","Nana & Nina"],[C.VETERAN]:[["Armando","Brenden","Brian","Clayton","Edgar","Emanuel","Grant","Harlan","Terrell","Arlen","Chester","Hugo","Martell","Ray","Shaun","Abraham","Carter","Claude","Jerry","Lucius","Murphy","Rayne","Ron","Sinan","Sterling","Vincent","Zach","Gerard","Gilles","Louis","Timeo","Akira","Don","Eric","Harry","Leon","Roger","Angus","Aristo","Brone","Johnny"],["Julia","Karla","Kim","Sayuri","Tiffany","Cathy","Cecile","Chloris","Denae","Gina","Maya","Oriana","Portia","Rhona","Rosaline","Catrina","Inga","Trisha","Heather","Lynn","Sheri","Alonsa","Ella","Leticia","Kiara"]],[C.WAITER]:[["Bert","Clint","Maxwell","Lou"],["Kati","Aurora","Bonita","Flo","Tia","Jan","Olwen","Paget","Paula","Talia"]],[C.WORKER]:[["Braden","Brendon","Colin","Conrad","Dillan","Gary","Gerardo","Holden","Jackson","Mason","Quentin","Willy","Noel","Arnold","Brady","Brand","Cairn","Cliff","Don","Eddie","Felix","Filipe","Glenn","Gus","Heath","Matthew","Patton","Rich","Rob","Ryan","Scott","Shelby","Sterling","Tyler","Victor","Zack","Friedrich","Herman","Isaac","Leo","Maynard","Mitchell","Morgann","Nathan","Niel","Pasqual","Paul","Tavarius","Tibor","Dimitri","Narek","Yusif","Frank","Jeff","Vaclav","Ovid","Francis","Keith","Russel","Sangon","Toway","Bomber","Chean","Demit","Hubor","Kebile","Laber","Ordo","Retay","Ronix","Wagel","Dobit","Kaster","Lobel","Releo","Saken","Rustix"],["Georgia","Sandra","Yvonne"]],[C.YOUNGSTER]:[["Albert","Gordon","Ian","Jason","Jimmy","Mikey","Owen","Samuel","Warren","Allen","Ben","Billy","Calvin","Dillion","Eddie","Joey","Josh","Neal","Timmy","Tommy","Breyden","Deandre","Demetrius","Dillon","Jaylen","Johnson","Shigenobu","Chad","Cole","Cordell","Dan","Dave","Destin","Nash","Tyler","Yasu","Austin","Dallas","Darius","Donny","Jonathon","Logan","Michael","Oliver","Sebastian","Tristan","Wayne","Norman","Roland","Regis","Abe","Astor","Keita","Kenneth","Kevin","Kyle","Lester","Masao","Nicholas","Parker","Wes","Zachary","Cody","Henley","Jaye","Karl","Kenny","Masahiro","Pedro","Petey","Sinclair","Terrell","Waylon","Aidan","Anthony","David","Jacob","Jayden","Cutler","Ham","Caleb","Kai","Honus","Kenway","Bret","Chris","Cid","Dennis","Easton","Ken","Robby","Ronny","Shawn","Benjamin","Jake","Travis","Adan","Aday","Beltran","Elian","Hernan","Julen","Luka","Roi","Bernie","Dustin","Jonathan","Wyatt"],["Alice","Bridget","Carrie","Connie","Dana","Ellen","Krise","Laura","Linda","Michelle","Shannon","Andrea","Crissy","Janice","Robin","Sally","Tiana","Haley","Ali","Ann","Dalia","Dawn","Iris","Joana","Julia","Kay","Lisa","Megan","Mikaela","Miriam","Paige","Reli","Blythe","Briana","Caroline","Cassidy","Kaitlin","Madeline","Molly","Natalie","Samantha","Sarah","Cathy","Dye","Eri","Eva","Fey","Kara","Lurleen","Maki","Mali","Maya","Miki","Sibyl","Daya","Diana","Flo","Helia","Henrietta","Isabel","Mai","Persephone","Serena","Anna","Charlotte","Elin","Elsa","Lise","Sara","Suzette","Audrey","Emmy","Isabella","Madison","Rika","Rylee","Salla","Ellie","Alexandra","Amy","Lass","Brittany","Chel","Cindy","Dianne","Emily","Emma","Evelyn","Hana","Harleen","Hazel","Jocelyn","Katrina","Kimberly","Lina","Marge","Mila","Mizuki","Rena","Sal","Satoko","Summer","Tomoe","Vicky","Yue","Yumi","Lauren","Rei","Riley","Lois","Nancy","Tammy","Terry"]],[C.HEX_MANIAC]:["Kindra","Patricia","Tammy","Tasha","Valerie","Alaina","Kathleen","Leah","Makie","Sylvia","Anina","Arachna","Carrie","Desdemona","Josette","Luna","Melanie","Osanna","Raziah"]};var Me=(E=>(E.NONE="NONE",E.MUD_SPORT="MUD_SPORT",E.WATER_SPORT="WATER_SPORT",E.SPIKES="SPIKES",E.TOXIC_SPIKES="TOXIC_SPIKES",E.MIST="MIST",E.FUTURE_SIGHT="FUTURE_SIGHT",E.DOOM_DESIRE="DOOM_DESIRE",E.WISH="WISH",E.STEALTH_ROCK="STEALTH_ROCK",E.STICKY_WEB="STICKY_WEB",E.TRICK_ROOM="TRICK_ROOM",E.GRAVITY="GRAVITY",E.REFLECT="REFLECT",E.LIGHT_SCREEN="LIGHT_SCREEN",E.AURORA_VEIL="AURORA_VEIL",E.QUICK_GUARD="QUICK_GUARD",E.WIDE_GUARD="WIDE_GUARD",E.MAT_BLOCK="MAT_BLOCK",E.CRAFTY_SHIELD="CRAFTY_SHIELD",E.TAILWIND="TAILWIND",E.HAPPY_HOUR="HAPPY_HOUR",E.SAFEGUARD="SAFEGUARD",E.NO_CRIT="NO_CRIT",E.IMPRISON="IMPRISON",E.ION_DELUGE="ION_DELUGE",E.FIRE_GRASS_PLEDGE="FIRE_GRASS_PLEDGE",E.WATER_FIRE_PLEDGE="WATER_FIRE_PLEDGE",E.GRASS_WATER_PLEDGE="GRASS_WATER_PLEDGE",E))(Me||{});const yd=class yd{constructor(A){this.scene=A}start(){this.scene.abilityBar.shown&&this.scene.abilityBar.resetAutoHideTimer()}end(){this.scene.shiftPhase()}};T(yd,"Phase");let kA=yd;const wd=class wd extends kA{constructor(A){super(A)}showEnemyTrainer(A=qe.NONE){var I,i;const s=(I=this.scene.currentBattle.trainer)==null?void 0:I.getSprites(),R=(i=this.scene.currentBattle.trainer)==null?void 0:i.getTintSprites();for(let a=0;a<s.length;a++){const L=!A||!a==(A===qe.TRAINER)||s.length<2;[s[a],R[a]].map(S=>{L&&(S.x=A||s.length<2?0:a?16:-16),S.setVisible(L),S.clearTint()}),s[a].setVisible(L),R[a].setVisible(L),s[a].clearTint(),R[a].clearTint()}this.scene.tweens.add({targets:this.scene.currentBattle.trainer,x:"-=16",y:"+=16",alpha:1,ease:"Sine.easeInOut",duration:750})}hideEnemyTrainer(){this.scene.tweens.add({targets:this.scene.currentBattle.trainer,x:"+=16",y:"-=16",alpha:0,ease:"Sine.easeInOut",duration:750})}};T(wd,"BattlePhase");let LE=wd;const Vd=class Vd extends LE{executeForAll(A){this.scene.getField(!0).filter(R=>R.summonData).forEach(R=>A(R))}};T(Vd,"FieldPhase");let YO=Vd;const vd=class vd extends YO{constructor(A,s){super(A),s===void 0&&(s=A.getField().find(R=>R==null?void 0:R.isActive()).getBattlerIndex()),this.battlerIndex=s,this.player=s<2,this.fieldIndex=s%2}getPokemon(){return this.battlerIndex>Ct.ENEMY_2?this.scene.getPokemonById(this.battlerIndex):this.scene.getField()[this.battlerIndex]}};T(vd,"PokemonPhase");let zE=vd;const RM=class RM extends zE{constructor(A,s,R,I){if(super(A,s),this.move=I,R.includes(s)&&this.move.getMove().moveTarget===qE.ALL_NEAR_OTHERS){const i=R.indexOf(s);R.splice(i,i+1)}this.targets=R}start(){super.start();const A=this.getUserPokemon(),s=this.getTargets();if(!(A!=null&&A.isOnField()))return super.end();const R=new je(!1),I=this.move.getMove();eA(Tn,A,this.getTarget()??null,I,R,this.move.virtual).then(()=>{var D,M,c,G,P;if(R.value)return this.end();if(A.lapseTags(rs.MOVE_EFFECT),A.turnData.hitsLeft===-1){const _=new Jt(1);eA(jt,A,this.getTarget()??null,I,_),gO(YS,A,null,I,!1,s.length,_,new Jt(0)),I instanceof d&&!I.hasAttr(ZR)&&this.scene.applyModifiers(ji,A.isPlayer(),A,_,new Jt(0)),A.turnData.hitCount=_.value,A.turnData.hitsLeft=_.value}const i={move:this.move.moveId,targets:this.targets,result:DA.PENDING,virtual:this.move.virtual},a=Object.fromEntries(s.map(_=>[_.getBattlerIndex(),this.hitCheck(_)])),L=s.some(_=>_.isActive(!0)),S=s[0].hasAbilityWithAttr(eO)&&((c=(M=(D=s[0].getAbility())==null?void 0:D.getAttrs(eO))==null?void 0:M[0])==null?void 0:c.getImmuneType())===A.getMoveType(I)&&!s[0].getTag(In);if(!L||!I.hasAttr(La)&&!I.isMultiTarget()&&!a[this.targets[0]]&&!s[0].getTag(xI)&&!S)return this.stopMultiHit(),L?(this.scene.queueMessage(U.t("battle:attackMissed",{pokemonNameWithAffix:this.getTarget()?b(this.getTarget()):""})),i.result=DA.MISS,eA(qR,A,null,I)):(this.scene.queueMessage(U.t("battle:attackFailed")),i.result=DA.FAIL),A.pushMoveHistory(i),this.end();const o=[],l=((P=(G=this.scene.currentBattle)==null?void 0:G.mysteryEncounter)==null?void 0:P.hasBattleAnimationsWithoutTargets)??!1;new eD(I.id,A,this.getTarget().getBattlerIndex(),l).play(this.scene,I.hitsSubstitute(A,this.getTarget()),()=>{var H,F,p,v,k,j;let _=!1;for(const q of s){const ie=q.isPlayer()?et.PLAYER:et.ENEMY,z=new je(!1),Oe=new je(!1);this.move.getMove().isAllyTarget()||this.scene.arena.applyTagsForSide(Ki,ie,!1,z,A,q,I.id,Oe);const ae=(Oe.value||!this.move.getMove().checkFlag(pt.IGNORE_PROTECT,A,q))&&(z.value||!q.findTags(Ye=>Ye instanceof xL).length&&q.findTags(Ye=>Ye instanceof xI).find(Ye=>q.lapseTag(Ye.tagType))||this.move.getMove().category!==Ot.STATUS&&q.findTags(Ye=>Ye instanceof xL).find(Ye=>q.lapseTag(Ye.tagType)));if(!(q.hasAbilityWithAttr(eO)&&((p=(F=(H=q.getAbility())==null?void 0:H.getAttrs(eO))==null?void 0:F[0])==null?void 0:p.getImmuneType())===A.getMoveType(I)&&!q.getTag(In))&&!ae&&!a[q.getBattlerIndex()]){this.stopMultiHit(q),this.scene.queueMessage(U.t("battle:attackMissed",{pokemonNameWithAffix:b(q)})),i.result===DA.PENDING&&(i.result=DA.MISS),A.pushMoveHistory(i),eA(qR,A,null,I);continue}const Ne=A.turnData.hitsLeft===A.turnData.hitCount;Ne&&A.pushMoveHistory(i),i.result=DA.SUCCESS;const De=ae?Pt.NO_EFFECT:q.apply(A,I),Be=[Pt.EFFECTIVE,Pt.SUPER_EFFECTIVE,Pt.NOT_VERY_EFFECTIVE,Pt.ONE_HIT_KO].includes(De),de=Be&&!_;de&&(_=!0),De===Pt.NO_EFFECT&&(i.result=DA.FAIL);const fe=A.turnData.hitsLeft===1||!((v=this.getTarget())!=null&&v.isActive());fe&&this.scene.triggerPokemonFormChange(A,UT),o.push(new Promise(Ye=>{ar(Re=>Re instanceof st&&Re.trigger===ca.PRE_APPLY&&(!Re.firstHitOnly||Ne)&&(!Re.lastHitOnly||fe)&&De!==Pt.NO_EFFECT,A,q,I).then(()=>{De!==Pt.FAIL?ar(Re=>Re instanceof st&&Re.trigger===ca.POST_APPLY&&Re.selfTarget&&(!Re.firstHitOnly||Ne)&&(!Re.lastHitOnly||fe),A,q,I).then(()=>{De!==Pt.NO_EFFECT?ar(Re=>Re instanceof st&&Re.trigger===ca.POST_APPLY&&!Re.selfTarget&&(!Re.firstHitOnly||Ne)&&(!Re.lastHitOnly||fe),A,q,this.move.getMove()).then(()=>{if(Be&&!q.hasAbilityWithAttr(wI)&&!I.hitsSubstitute(A,q)){const Re=new je(!1);A.scene.applyModifiers(LS,A.isPlayer(),A,Re),Re.value&&q.addTag(Y.FLINCHED,void 0,this.move.moveId,A.id)}OL(!ae,()=>ar(Re=>Re instanceof st&&Re.trigger===ca.HIT&&(!Re.firstHitOnly||Ne)&&(!Re.lastHitOnly||fe)&&(!Re.firstTargetOnly||de),A,q,this.move.getMove()).then(()=>OL(!q.isFainted()||q.canApplyAbility(),()=>dX(YE,q,A,this.move.getMove(),De).then(()=>{if(I.hitsSubstitute(A,q))return Ye();!A.isPlayer()&&this.move.getMove()instanceof d&&A.scene.applyShuffledModifiers(this.scene,mL,!1,q),q.lapseTags(rs.AFTER_HIT)})).then(()=>{tb(VI,A,q,this.move.getMove(),De).then(()=>{this.move.getMove()instanceof d&&this.scene.applyModifiers(ta,this.player,A,q),Ye()})}))).then(()=>Ye())}):eA(uO,A,null,I).then(()=>Ye())}):Ye()})}))}const g=A.turnData.hitsLeft===1||!((k=this.getTarget())!=null&&k.isActive())?ar(q=>q instanceof st&&q.trigger===ca.POST_TARGET,A,null,I):null;g&&(o.length?(j=o[o.length-1])==null||j.then(()=>g):o.push(g)),Promise.allSettled(o).then(()=>{s.forEach(q=>{const ie=q.getTag(lE);ie&&ie.hp<=0&&q.lapseTag(Y.SUBSTITUTE)}),this.end()})})})}end(){var s;const A=this.getUserPokemon();if(A)if(A.turnData.hitsLeft&&--A.turnData.hitsLeft>=1&&((s=this.getTarget())!=null&&s.isActive()))this.scene.unshiftPhase(this.getNewHitPhase());else{const R=A.turnData.hitCount-Math.max(A.turnData.hitsLeft,0);(R>1||A.turnData.hitsLeft&&A.turnData.hitsLeft>0)&&this.scene.queueMessage(U.t("battle:attackHitsCount",{count:R})),this.scene.applyModifiers(Ji,this.player,A),this.getTargets().forEach(I=>I.turnData.moveEffectiveness=null)}super.end()}hitCheck(A){var L;if([qE.USER,qE.ENEMY_SIDE].includes(this.move.getMove().moveTarget))return!0;const s=this.getUserPokemon();if(s.turnData.hitsLeft<s.turnData.hitCount&&(!this.move.getMove().hasFlag(pt.CHECK_ALL_HITS)||s.hasAbilityWithAttr(JS))||s.hasAbilityWithAttr(jS)||A.hasAbilityWithAttr(jS)||s.getTag(Y.IGNORE_ACCURACY)&&(((L=s.getLastXMoves().find(()=>!0))==null?void 0:L.targets)||[]).indexOf(A.getBattlerIndex())!==-1||A.getTag(Y.ALWAYS_GET_HIT)||A.getTag(Y.TELEKINESIS)&&!A.getTag(In)&&!this.move.getMove().hasAttr(KO))return!0;const R=A.getTag(In);if(R&&!this.move.getMove().getAttrs(lR).some(S=>S.tagType===R.tagType)&&!(this.move.getMove().hasAttr(gD)&&s.isOfType(n.POISON)))return!1;const I=this.move.getMove().calculateBattleAccuracy(s,A);if(I===-1)return!0;const i=s.getAccuracyMultiplier(A,this.move.getMove());return s.randSeedInt(100)<I*i}getUserPokemon(){return this.battlerIndex>Ct.ENEMY_2?this.scene.getPokemonById(this.battlerIndex)??void 0:(this.player?this.scene.getPlayerField():this.scene.getEnemyField())[this.fieldIndex]}getTargets(){return this.scene.getField(!0).filter(A=>this.targets.indexOf(A.getBattlerIndex())>-1)}getTarget(){return this.getTargets()[0]}removeTarget(A){this.targets.findIndex(R=>R===A.getBattlerIndex())!==-1&&this.targets.splice(this.targets.findIndex(R=>R===A.getBattlerIndex()),1)}stopMultiHit(A){A&&this.removeTarget(A),(!A||this.targets.length===0)&&(this.getUserPokemon().turnData.hitCount=1,this.getUserPokemon().turnData.hitsLeft=1)}getNewHitPhase(){return new RM(this.scene,this.battlerIndex,this.targets,this.move)}};T(RM,"MoveEffectPhase");let sR=RM;const xd=class xd extends zE{constructor(A,s,R=!1){super(A,s),this.passive=R}start(){super.start();const A=this.getPokemon();A&&(this.scene.abilityBar.showAbility(A,this.passive),A!=null&&A.battleData&&(A.battleData.abilityRevealed=!0)),this.end()}};T(xd,"ShowAbilityPhase");let mn=xd;var yR=(E=>(E.Intro="INTRO",E.Access_Menu="ACCESS_MENU",E.Menu="MENU",E.Starter_Select="STARTER_SELECT",E.Pokerus="POKERUS",E.Stat_Change="STAT_CHANGE",E.Select_Item="SELECT_ITEM",E.Egg_Gacha="EGG_GACHA",E))(yR||{});const m8={INTRO:T(E=>new Promise(A=>{E.ui.showText(U.t("tutorial:intro"),null,()=>A(),null,!0)}),"INTRO"),ACCESS_MENU:T(E=>new Promise(A=>{if(E.enableTouchControls)return A();E.showFieldOverlay(1e3).then(()=>E.ui.showText(U.t("tutorial:accessMenu"),null,()=>E.hideFieldOverlay(1e3).then(()=>A()),null,!0))}),"ACCESS_MENU"),MENU:T(E=>new Promise(A=>{E.gameData.saveTutorialFlag("ACCESS_MENU",!0),E.ui.showText(U.t("tutorial:menu"),null,()=>E.ui.showText("",null,()=>A()),null,!0)}),"MENU"),STARTER_SELECT:T(E=>new Promise(A=>{E.ui.showText(U.t("tutorial:starterSelect"),null,()=>E.ui.showText("",null,()=>A()),null,!0)}),"STARTER_SELECT"),POKERUS:T(E=>new Promise(A=>{E.ui.showText(U.t("tutorial:pokerus"),null,()=>E.ui.showText("",null,()=>A()),null,!0)}),"POKERUS"),STAT_CHANGE:T(E=>new Promise(A=>{E.showFieldOverlay(1e3).then(()=>E.ui.showText(U.t("tutorial:statChange"),null,()=>E.ui.showText("",null,()=>E.hideFieldOverlay(1e3).then(()=>A())),null,!0))}),"STAT_CHANGE"),SELECT_ITEM:T(E=>new Promise(A=>{E.ui.setModeWithoutClear($.MESSAGE).then(()=>{E.ui.showText(U.t("tutorial:selectItem"),null,()=>E.ui.showText("",null,()=>E.ui.setModeWithoutClear($.MODIFIER_SELECT).then(()=>A())),null,!0)})}),"SELECT_ITEM"),EGG_GACHA:T(E=>new Promise(A=>{E.ui.showText(U.t("tutorial:eggGacha"),null,()=>E.ui.showText("",null,()=>A()),null,!0)}),"EGG_GACHA")};async function fI(E,A){if(!E.enableTutorials&&!Ge.BYPASS_TUTORIAL_SKIP_OVERRIDE||E.gameData.getTutorialFlags()[A]&&!Ge.BYPASS_TUTORIAL_SKIP_OVERRIDE)return!1;const s=E.ui.getHandler(),R=E.disableMenu;return E.disableMenu=!0,s instanceof Fn&&(s.tutorialActive=!0),await W8(E,s),await m8[A](E),await Y8(E,s),E.disableMenu=R,E.gameData.saveTutorialFlag(A,!0),s instanceof Fn&&(s.tutorialActive=!1),!0}T(fI,"handleTutorial");async function W8(E,A){if(A instanceof Fn&&A.tutorialOverlay)E.tweens.add({targets:A.tutorialOverlay,alpha:.5,duration:750,ease:"Sine.easeOut",onComplete:T(()=>!0,"onComplete")});else return!0}T(W8,"showTutorialOverlay");async function Y8(E,A){if(A instanceof Fn&&A.tutorialOverlay)E.tweens.add({targets:A.tutorialOverlay,alpha:0,duration:500,ease:"Sine.easeOut",onComplete:T(()=>!0,"onComplete")});else return!0}T(Y8,"hideTutorialOverlay");const NI=class NI extends zE{constructor(A,s,R,I,i,a=!0,L=!1,S=!0,o=null){super(A,s),this.selfTarget=R,this.stats=I,this.stages=i,this.showMessage=a,this.ignoreAbilities=L,this.canBeCopied=S,this.onChange=o}start(){if(this.stats.length>1){for(let L=0;L<this.stats.length;L++){const S=[this.stats[L]];this.scene.unshiftPhase(new NI(this.scene,this.battlerIndex,this.selfTarget,S,this.stages,this.showMessage,this.ignoreAbilities,this.canBeCopied,this.onChange))}return this.end()}const A=this.getPokemon();if(!A.isActive(!0))return this.end();const s=new $e(this.stages);this.ignoreAbilities||Et(XS,A,null,!1,s);let R=!1;const I=this.stats.filter(L=>{const S=new je(!1);return!this.selfTarget&&s.value<0&&this.scene.arena.applyTagsForSide(Ll,A.isPlayer()?et.PLAYER:et.ENEMY,!1,null,S),!S.value&&!this.selfTarget&&s.value<0&&YX(mR,A,L,S,R),S.value&&(R=!0),!S.value}),i=I.map(L=>(s.value>=1?Math.min(A.getStatStage(L)+s.value,6):Math.max(A.getStatStage(L)+s.value,-6))-A.getStatStage(L));this.onChange&&this.onChange(this.getPokemon(),I,i);const a=T(()=>{if(this.showMessage){const S=this.getStatStageChangeMessages(I,s.value,i);for(const o of S)this.scene.queueMessage(o)}for(const S of I)s.value>0&&A.getStatStage(S)<6?(A.turnData||A.resetTurnData(),A.turnData.statStagesIncreased=!0):s.value<0&&A.getStatStage(S)>-6&&(A.turnData||A.resetTurnData(),A.turnData.statStagesDecreased=!0),A.setStatStage(S,A.getStatStage(S)+s.value);if(s.value>0&&this.canBeCopied)for(const S of A.getOpponents())Et(MU,S,null,!1,this.stats,s.value);if(pX(xC,A,I,this.stages,this.selfTarget),!(this.scene.findPhase(S=>S instanceof NI&&S.battlerIndex===this.battlerIndex)instanceof NI)){const S=this.scene.applyModifier(gL,this.player,A);S&&(S.stackCount--,S.stackCount<=0&&this.scene.removeModifier(S),this.scene.updateModifiers(this.player))}A.updateInfo(),fI(this.scene,yR.Stat_Change).then(()=>super.end())},"end");if(i.filter(L=>L).length&&this.scene.moveAnimations){A.enableMask();const L=A.maskSprite,S=(this.player?106:236)*A.getSpriteScale()*this.scene.field.scale,o=((this.player?148:84)+(s.value>=1?160:0))*A.getSpriteScale()*this.scene.field.scale,l=156*this.scene.field.scale*A.getSpriteScale(),D=316*this.scene.field.scale*A.getSpriteScale(),M=s.value>=1?B[B.ATK].toLowerCase():B[B.SPD].toLowerCase(),c=this.scene.add.tileSprite(S,o,l,D,"battle_stats",M);c.setPipeline(this.scene.fieldSpritePipeline),c.setAlpha(0),c.setScale(6),c.setOrigin(.5,1),this.scene.playSound(`se/stat_${s.value>=1?"up":"down"}`),c.setMask(new Phaser.Display.Masks.BitmapMask(this.scene,L??void 0)),this.scene.tweens.add({targets:c,duration:250,alpha:.8375,onComplete:T(()=>{this.scene.tweens.add({targets:c,delay:1e3,duration:250,alpha:0})},"onComplete")}),this.scene.tweens.add({targets:c,duration:1500,y:`${s.value>=1?"-":"+"}=${160*6}`}),this.scene.time.delayedCall(1750,()=>{A.disableMask(),a()})}else a()}aggregateStatStageChanges(){const A=[B.ACC,B.EVA],s=A.some(I=>this.stats.includes(I));let R;if(this.stats.length===1)for(;(R=this.scene.findPhase(I=>I instanceof NI&&I.battlerIndex===this.battlerIndex&&I.stats.length===1&&I.stats[0]===this.stats[0]&&I.selfTarget===this.selfTarget&&I.showMessage===this.showMessage&&I.ignoreAbilities===this.ignoreAbilities))&&(this.stages+=R.stages,!!this.scene.tryRemovePhase(I=>I===R)););for(;(R=this.scene.findPhase(I=>I instanceof NI&&I.battlerIndex===this.battlerIndex&&I.selfTarget===this.selfTarget&&A.some(i=>I.stats.includes(i))===s&&I.stages===this.stages&&I.showMessage===this.showMessage&&I.ignoreAbilities===this.ignoreAbilities))&&(this.stats.push(...R.stats),!!this.scene.tryRemovePhase(I=>I===R)););}getStatStageChangeMessages(A,s,R){const I=[],i={};for(let a=0;a<R.length;a++){const L=R[a];i[L]||(i[L]=[]),i[L].push(a)}return Object.keys(i).forEach(a=>{const L=A.filter((o,l)=>i[a].includes(l));let S="";L.length>1?(S=L.length>=5?U.t("battle:stats"):`${L.slice(0,-1).map(o=>U.t(aE(o))).join(", ")}${L.length>2?",":""} ${U.t("battle:statsAnd")} ${U.t(aE(L[L.length-1]))}`,I.push(U.t(FV(Math.abs(parseInt(a)),s>=1),{pokemonNameWithAffix:b(this.getPokemon()),stats:S,count:L.length}))):(S=U.t(aE(L[0])),I.push(U.t(FV(Math.abs(parseInt(a)),s>=1),{pokemonNameWithAffix:b(this.getPokemon()),stats:S,count:L.length})))}),I}};T(NI,"StatStageChangePhase");let Ft=NI;const bd=class bd extends zE{constructor(A,s,R,I,i=!1){super(A,s),this.anim=I,this.targetIndex=R,this.playOnEmptyField=i}setAnimation(A){this.anim=A}start(){const A=this.targetIndex!==void 0?(this.player?this.scene.getEnemyField():this.scene.getPlayerField())[this.targetIndex]:this.getPokemon();new bI(this.anim,this.getPokemon(),A).play(this.scene,!1,()=>{this.end()})}};T(bd,"CommonAnimPhase");let Ts=bd;var et=(E=>(E[E.BOTH=0]="BOTH",E[E.PLAYER=1]="PLAYER",E[E.ENEMY=2]="ENEMY",E))(et||{});const kd=class kd{constructor(A,s,R,I,i=0){this.tagType=A,this.turnCount=s,this.sourceMove=R,this.sourceId=I,this.side=i}apply(A,s,...R){return!0}onAdd(A,s=!1){}onRemove(A,s=!1){s||A.scene.queueMessage(U.t(`arenaTag:arenaOnRemove${this.side===1?"Player":this.side===2?"Enemy":""}`,{moveName:this.getMoveName()}))}onOverlap(A){}lapse(A){return this.turnCount<1||!!--this.turnCount}getMoveName(){return this.sourceMove?He[this.sourceMove].name:null}loadTag(A){this.turnCount=A.turnCount,this.sourceMove=A.sourceMove,this.sourceId=A.sourceId,this.side=A.side}getSourcePokemon(A){return this.sourceId?A.getPokemonById(this.sourceId):null}getAffectedPokemon(A){switch(this.side){case 1:return A.getPlayerField()??[];case 2:return A.getEnemyField()??[];case 0:default:return A.getField(!0)??[]}}};T(kd,"ArenaTag");let WE=kd;const Zd=class Zd extends WE{constructor(A,s,R){super(Me.MIST,A,t.MIST,s,R)}onAdd(A,s=!1){if(super.onAdd(A),this.sourceId){const R=A.scene.getPokemonById(this.sourceId);!s&&R?A.scene.queueMessage(U.t("arenaTag:mistOnAdd",{pokemonNameWithAffix:b(R)})):s||console.warn("Failed to get source for MistTag onAdd")}}apply(A,s,R,I){if(R){const i=new je(!1);if(Et(Oa,R,null,!1,i),i.value)return!1}return I.value=!0,s||A.scene.queueMessage(U.t("arenaTag:mistApply")),!0}};T(Zd,"MistTag");let Ll=Zd;const Xd=class Xd extends WE{constructor(A,s,R,I,i,a){super(A,s,R,I,i),this.weakenedCategories=a}apply(A,s,R,I,i){if(this.weakenedCategories.includes(I)){const a=new je(!1);return Et(Oa,R,null,!1,a),a.value?!1:(i.value=A.scene.currentBattle.double?2732/4096:.5,!0)}return!1}};T(Xd,"WeakenMoveScreenTag");let iL=Xd;const Qd=class Qd extends iL{constructor(A,s,R){super(Me.REFLECT,A,t.REFLECT,s,R,[Ot.PHYSICAL])}onAdd(A,s=!1){s||A.scene.queueMessage(U.t(`arenaTag:reflectOnAdd${this.side===1?"Player":this.side===2?"Enemy":""}`))}};T(Qd,"ReflectTag");let v0=Qd;const Jd=class Jd extends iL{constructor(A,s,R){super(Me.LIGHT_SCREEN,A,t.LIGHT_SCREEN,s,R,[Ot.SPECIAL])}onAdd(A,s=!1){s||A.scene.queueMessage(U.t(`arenaTag:lightScreenOnAdd${this.side===1?"Player":this.side===2?"Enemy":""}`))}};T(Jd,"LightScreenTag");let x0=Jd;const $d=class $d extends iL{constructor(A,s,R){super(Me.AURORA_VEIL,A,t.AURORA_VEIL,s,R,[Ot.SPECIAL,Ot.PHYSICAL])}onAdd(A,s=!1){s||A.scene.queueMessage(U.t(`arenaTag:auroraVeilOnAdd${this.side===1?"Player":this.side===2?"Enemy":""}`))}};T($d,"AuroraVeilTag");let b0=$d;const qd=class qd extends WE{constructor(A,s,R,I,i,a=!1){super(A,1,s,R,I),this.protectConditionFunc=i,this.ignoresBypass=a}onAdd(A){A.scene.queueMessage(U.t(`arenaTag:conditionalProtectOnAdd${this.side===1?"Player":this.side===2?"Enemy":""}`,{moveName:super.getMoveName()}))}onRemove(A){}apply(A,s,R,I,i,a,L){return this.side===1===i.isPlayer()&&this.protectConditionFunc(A,a)?(R.value||(R.value=!0,s||(I.stopMultiHit(i),new bI(RA.PROTECT,i).play(A.scene),A.scene.queueMessage(U.t("arenaTag:conditionalProtectApply",{moveName:super.getMoveName(),pokemonNameWithAffix:b(i)})))),L.value=L.value||this.ignoresBypass,!0):!1}};T(qd,"ConditionalProtectTag");let Ki=qd;const p8=T((E,A)=>{const s=He[A],R=new $e(s.priority),I=E.scene.getCurrentPhase();if(I instanceof sR){const i=I.getUserPokemon();eA(Ia,i,null,s,R),Et(zR,i,null,!1,s,R)}return R.value>0},"QuickGuardConditionFunc"),jd=class jd extends Ki{constructor(A,s){super(Me.QUICK_GUARD,t.QUICK_GUARD,A,s,p8)}};T(jd,"QuickGuardTag");let k0=jd;const y8=T((E,A)=>{switch(He[A].moveTarget){case qE.ALL_ENEMIES:case qE.ALL_NEAR_ENEMIES:case qE.ALL_OTHERS:case qE.ALL_NEAR_OTHERS:return!0}return!1},"WideGuardConditionFunc"),zd=class zd extends Ki{constructor(A,s){super(Me.WIDE_GUARD,t.WIDE_GUARD,A,s,y8)}};T(zd,"WideGuardTag");let Z0=zd;const w8=T((E,A)=>He[A].category!==Ot.STATUS,"MatBlockConditionFunc"),ef=class ef extends Ki{constructor(A,s){super(Me.MAT_BLOCK,t.MAT_BLOCK,A,s,w8)}onAdd(A){if(this.sourceId){const s=A.scene.getPokemonById(this.sourceId);s?A.scene.queueMessage(U.t("arenaTag:matBlockOnAdd",{pokemonNameWithAffix:b(s)})):console.warn("Failed to get source for MatBlockTag onAdd")}}};T(ef,"MatBlockTag");let X0=ef;const V8=T((E,A)=>{const s=He[A];return s.category===Ot.STATUS&&s.moveTarget!==qE.ENEMY_SIDE&&s.moveTarget!==qE.BOTH_SIDES&&s.moveTarget!==qE.ALL},"CraftyShieldConditionFunc"),tf=class tf extends Ki{constructor(A,s){super(Me.CRAFTY_SHIELD,t.CRAFTY_SHIELD,A,s,V8,!0)}};T(tf,"CraftyShieldTag");let Q0=tf;const Af=class Af extends WE{constructor(A,s,R,I){super(Me.NO_CRIT,A,s,R,I)}onAdd(A){A.scene.queueMessage(U.t(`arenaTag:noCritOnAdd${this.side===1?"Player":"Enemy"}`,{moveName:this.getMoveName()}))}onRemove(A){const s=A.scene.getPokemonById(this.sourceId);A.scene.queueMessage(U.t("arenaTag:noCritOnRemove",{pokemonNameWithAffix:b(s??void 0),moveName:this.getMoveName()}))}};T(Af,"NoCritTag");let rl=Af;const Ef=class Ef extends WE{constructor(A,s,R){super(Me.WISH,A,t.WISH,s,R)}onAdd(A){if(this.sourceId){const s=A.scene.getPokemonById(this.sourceId);s?(this.battlerIndex=s.getBattlerIndex(),this.triggerMessage=U.t("arenaTag:wishTagOnAdd",{pokemonNameWithAffix:b(s)}),this.healHp=gt(s.getMaxHp()/2)):console.warn("Failed to get source for WishTag onAdd")}}onRemove(A){const s=A.scene.getField()[this.battlerIndex];s!=null&&s.isActive(!0)&&(A.scene.queueMessage(this.triggerMessage),A.scene.unshiftPhase(new CE(s.scene,s.getBattlerIndex(),this.healHp,null,!0,!1)))}};T(Ef,"WishTag");let J0=Ef;const sf=class sf extends WE{constructor(A,s,R,I,i){super(A,s,I,i),this.weakenedType=R}apply(A,s,R,I){return R===this.weakenedType?(I.value*=.33,!0):!1}};T(sf,"WeakenMoveTypeTag");let DT=sf;const Rf=class Rf extends DT{constructor(A,s){super(Me.MUD_SPORT,A,n.ELECTRIC,t.MUD_SPORT,s)}onAdd(A){A.scene.queueMessage(U.t("arenaTag:mudSportOnAdd"))}onRemove(A){A.scene.queueMessage(U.t("arenaTag:mudSportOnRemove"))}};T(Rf,"MudSportTag");let $0=Rf;const Of=class Of extends DT{constructor(A,s){super(Me.WATER_SPORT,A,n.FIRE,t.WATER_SPORT,s)}onAdd(A){A.scene.queueMessage(U.t("arenaTag:waterSportOnAdd"))}onRemove(A){A.scene.queueMessage(U.t("arenaTag:waterSportOnRemove"))}};T(Of,"WaterSportTag");let q0=Of;const nf=class nf extends WE{constructor(A){super(Me.ION_DELUGE,1,A)}onAdd(A){A.scene.queueMessage(U.t("arenaTag:plasmaFistsOnAdd"))}onRemove(A){}apply(A,s,R){return R.value===n.NORMAL?(R.value=n.ELECTRIC,!0):!1}};T(nf,"IonDelugeTag");let j0=nf;const If=class If extends WE{constructor(A,s,R,I,i){super(A,0,s,R,I),this.layers=1,this.maxLayers=i}onOverlap(A){this.layers<this.maxLayers&&(this.layers++,this.onAdd(A))}apply(A,s,R){return this.side===1!==R.isPlayer()?!1:this.activateTrap(R,s)}activateTrap(A,s){return!1}getMatchupScoreMultiplier(A){return A.isGrounded()?1:Phaser.Math.Linear(0,1/Math.pow(2,this.layers),Math.min(A.getHpRatio(),.5)*2)}loadTag(A){super.loadTag(A),this.layers=A.layers,this.maxLayers=A.maxLayers}};T(If,"ArenaTrapTag");let kR=If;const af=class af extends kR{constructor(A,s){super(Me.SPIKES,t.SPIKES,A,s,3)}onAdd(A,s=!1){super.onAdd(A);const R=this.sourceId?A.scene.getPokemonById(this.sourceId):null;!s&&R&&A.scene.queueMessage(U.t("arenaTag:spikesOnAdd",{moveName:this.getMoveName(),opponentDesc:R.getOpponentDescriptor()}))}activateTrap(A,s){if(A.isGrounded()){const R=new je(!1);if(Et(rE,A,R),s)return!R.value;if(!R.value){const I=1/(10-2*this.layers),i=gt(A.getMaxHp()*I);return A.scene.queueMessage(U.t("arenaTag:spikesActivateTrap",{pokemonNameWithAffix:b(A)})),A.damageAndUpdate(i,Pt.OTHER),A.turnData&&(A.turnData.damageTaken+=i),!0}}return!1}};T(af,"SpikesTag");let z0=af;const Lf=class Lf extends kR{constructor(A,s){super(Me.TOXIC_SPIKES,t.TOXIC_SPIKES,A,s,2),this.neutralized=!1}onAdd(A,s=!1){super.onAdd(A);const R=this.sourceId?A.scene.getPokemonById(this.sourceId):null;!s&&R&&A.scene.queueMessage(U.t("arenaTag:toxicSpikesOnAdd",{moveName:this.getMoveName(),opponentDesc:R.getOpponentDescriptor()}))}onRemove(A){this.neutralized||super.onRemove(A)}activateTrap(A,s){if(A.isGrounded()){if(s)return!0;if(A.isOfType(n.POISON)){if(this.neutralized=!0,A.scene.arena.removeTag(this.tagType))return A.scene.queueMessage(U.t("arenaTag:toxicSpikesActivateTrapPoison",{pokemonNameWithAffix:b(A),moveName:this.getMoveName()})),!0}else if(!A.status){const R=this.layers>1;if(A.trySetStatus(R?J.TOXIC:J.POISON,!0,null,0,this.getMoveName()))return!0}}return!1}getMatchupScoreMultiplier(A){return A.isGrounded()||!A.canSetStatus(J.POISON,!0)?1:A.isOfType(n.POISON)?1.25:super.getMatchupScoreMultiplier(A)}};T(Lf,"ToxicSpikesTag");let eh=Lf;const rf=class rf extends WE{constructor(A,s,R,I){super(A,3,s,R),this.targetIndex=I}lapse(A){const s=super.lapse(A);return s||A.scene.unshiftPhase(new sR(A.scene,this.sourceId,[this.targetIndex],new ke(this.sourceMove,0,0,!0))),s}onRemove(A){}};T(rf,"DelayedAttackTag");let th=rf;const Nf=class Nf extends kR{constructor(A,s){super(Me.STEALTH_ROCK,t.STEALTH_ROCK,A,s,1)}onAdd(A,s=!1){super.onAdd(A);const R=this.sourceId?A.scene.getPokemonById(this.sourceId):null;!s&&R&&A.scene.queueMessage(U.t("arenaTag:stealthRockOnAdd",{opponentDesc:R.getOpponentDescriptor()}))}getDamageHpRatio(A){const s=A.getAttackTypeEffectiveness(n.ROCK,void 0,!0);let R=0;switch(s){case 0:R=0;break;case .25:R=.03125;break;case .5:R=.0625;break;case 1:R=.125;break;case 2:R=.25;break;case 4:R=.5;break}return R}activateTrap(A,s){const R=new je(!1);if(Et(rE,A,R),R.value)return!1;const I=this.getDamageHpRatio(A);if(I){if(s)return!0;const i=gt(A.getMaxHp()*I);return A.scene.queueMessage(U.t("arenaTag:stealthRockActivateTrap",{pokemonNameWithAffix:b(A)})),A.damageAndUpdate(i,Pt.OTHER),A.turnData&&(A.turnData.damageTaken+=i),!0}return!1}getMatchupScoreMultiplier(A){const s=this.getDamageHpRatio(A);return Phaser.Math.Linear(super.getMatchupScoreMultiplier(A),1,1-Math.pow(s,s))}};T(Nf,"StealthRockTag");let Ah=Nf;const Tf=class Tf extends kR{constructor(A,s){super(Me.STICKY_WEB,t.STICKY_WEB,A,s,1)}onAdd(A,s=!1){super.onAdd(A);const R=this.sourceId?A.scene.getPokemonById(this.sourceId):null;!s&&R&&A.scene.queueMessage(U.t("arenaTag:stickyWebOnAdd",{moveName:this.getMoveName(),opponentDesc:R.getOpponentDescriptor()}))}activateTrap(A,s){if(A.isGrounded()){const R=new je(!1);if(Et(mR,A,R),s)return!R.value;if(!R.value){A.scene.queueMessage(U.t("arenaTag:stickyWebActivateTrap",{pokemonName:A.getNameToRender()}));const I=new $e(-1);return A.scene.unshiftPhase(new Ft(A.scene,A.getBattlerIndex(),!1,[B.SPD],I.value)),!0}}return!1}};T(Tf,"StickyWebTag");let Eh=Tf;const Sf=class Sf extends WE{constructor(A,s){super(Me.TRICK_ROOM,A,t.TRICK_ROOM,s)}apply(A,s,R){return R.value=!R.value,!0}onAdd(A){const s=this.sourceId?A.scene.getPokemonById(this.sourceId):null;s&&A.scene.queueMessage(U.t("arenaTag:trickRoomOnAdd",{pokemonNameWithAffix:b(s)}))}onRemove(A){A.scene.queueMessage(U.t("arenaTag:trickRoomOnRemove"))}};T(Sf,"TrickRoomTag");let Nl=Sf;const of=class of extends WE{constructor(A){super(Me.GRAVITY,A,t.GRAVITY)}onAdd(A){A.scene.queueMessage(U.t("arenaTag:gravityOnAdd")),A.scene.getField(!0).forEach(s=>{s!==null&&(s.removeTag(Y.FLOATING),s.removeTag(Y.TELEKINESIS),s.getTag(Y.FLYING)&&s.addTag(Y.INTERRUPTED))})}onRemove(A){A.scene.queueMessage(U.t("arenaTag:gravityOnRemove"))}};T(of,"GravityTag");let sh=of;const lf=class lf extends WE{constructor(A,s,R){super(Me.TAILWIND,A,t.TAILWIND,s,R)}onAdd(A,s=!1){s||A.scene.queueMessage(U.t(`arenaTag:tailwindOnAdd${this.side===1?"Player":this.side===2?"Enemy":""}`));const R=A.scene.getPokemonById(this.sourceId),I=(R!=null&&R.isPlayer()?R.scene.getPlayerField():R==null?void 0:R.scene.getEnemyField())??[];for(const i of I)i.hasAbility(O.WIND_POWER)&&!i.getTag(Y.CHARGED)&&(i.addTag(Y.CHARGED),i.scene.queueMessage(U.t("abilityTriggers:windPowerCharged",{pokemonName:b(i),moveName:this.getMoveName()}))),i.hasAbility(O.WIND_RIDER)&&(i.scene.unshiftPhase(new mn(i.scene,i.getBattlerIndex())),i.scene.unshiftPhase(new Ft(i.scene,i.getBattlerIndex(),!0,[B.ATK],1,!0)))}onRemove(A,s=!1){s||A.scene.queueMessage(U.t(`arenaTag:tailwindOnRemove${this.side===1?"Player":this.side===2?"Enemy":""}`))}};T(lf,"TailwindTag");let Rh=lf;const Cf=class Cf extends WE{constructor(A,s,R){super(Me.HAPPY_HOUR,A,t.HAPPY_HOUR,s,R)}onAdd(A){A.scene.queueMessage(U.t("arenaTag:happyHourOnAdd"))}onRemove(A){A.scene.queueMessage(U.t("arenaTag:happyHourOnRemove"))}};T(Cf,"HappyHourTag");let Oh=Cf;const Uf=class Uf extends WE{constructor(A,s,R){super(Me.SAFEGUARD,A,t.SAFEGUARD,s,R)}onAdd(A){A.scene.queueMessage(U.t(`arenaTag:safeguardOnAdd${this.side===1?"Player":this.side===2?"Enemy":""}`))}onRemove(A){A.scene.queueMessage(U.t(`arenaTag:safeguardOnRemove${this.side===1?"Player":this.side===2?"Enemy":""}`))}};T(Uf,"SafeguardTag");let nh=Uf;const Df=class Df extends WE{constructor(){super(Me.NONE,0)}};T(Df,"NoneTag");let Ih=Df;var RL;let v8=(RL=class extends kR{constructor(A,s){super(Me.IMPRISON,t.IMPRISON,A,s,1)}onAdd({scene:A}){const s=this.getSourcePokemon(A);if(s){const R=this.getAffectedPokemon(A);R==null||R.forEach(I=>{I.isAllowedInBattle()&&I.addTag(Y.IMPRISON,1,t.IMPRISON,this.sourceId)}),A.queueMessage(U.t("battlerTags:imprisonOnAdd",{pokemonNameWithAffix:b(s)}))}}lapse({scene:A}){const s=this.getSourcePokemon(A);return s?s.isActive(!0):!1}activateTrap(A){const s=this.getSourcePokemon(A.scene);return s&&s.isActive(!0)&&A.isAllowedInBattle()&&A.addTag(Y.IMPRISON,1,t.IMPRISON,this.sourceId),!0}onRemove({scene:A}){const s=this.getAffectedPokemon(A);s==null||s.forEach(R=>{R.removeTag(Y.IMPRISON)})}},T(RL,"ImprisonTag"),RL);const Mf=class Mf extends WE{constructor(A,s){super(Me.FIRE_GRASS_PLEDGE,4,t.FIRE_PLEDGE,A,s)}onAdd(A){A.scene.queueMessage(U.t(`arenaTag:fireGrassPledgeOnAdd${this.side===1?"Player":this.side===2?"Enemy":""}`))}lapse(A){return(this.side===1?A.scene.getPlayerField():A.scene.getEnemyField()).filter(R=>!R.isOfType(n.FIRE)).forEach(R=>{R.scene.queueMessage(U.t("arenaTag:fireGrassPledgeLapse",{pokemonNameWithAffix:b(R)})),R.scene.unshiftPhase(new Ts(R.scene,R.getBattlerIndex(),R.getBattlerIndex(),RA.MAGMA_STORM)),R.damageAndUpdate(gt(R.getMaxHp()/8))}),super.lapse(A)}};T(Mf,"FireGrassPledgeTag");let ih=Mf;const uf=class uf extends WE{constructor(A,s){super(Me.WATER_FIRE_PLEDGE,4,t.WATER_PLEDGE,A,s)}onAdd(A){A.scene.queueMessage(U.t(`arenaTag:waterFirePledgeOnAdd${this.side===1?"Player":this.side===2?"Enemy":""}`))}apply(A,s,R){return R.value*=2,!0}};T(uf,"WaterFirePledgeTag");let ah=uf;const hf=class hf extends WE{constructor(A,s){super(Me.GRASS_WATER_PLEDGE,4,t.GRASS_PLEDGE,A,s)}onAdd(A){A.scene.queueMessage(U.t(`arenaTag:grassWaterPledgeOnAdd${this.side===1?"Player":this.side===2?"Enemy":""}`))}};T(hf,"GrassWaterPledgeTag");let Lh=hf;function R6(E,A,s,R,I,i=0){switch(E){case Me.MIST:return new Ll(A,R,i);case Me.QUICK_GUARD:return new k0(R,i);case Me.WIDE_GUARD:return new Z0(R,i);case Me.MAT_BLOCK:return new X0(R,i);case Me.CRAFTY_SHIELD:return new Q0(R,i);case Me.NO_CRIT:return new rl(A,s,R,i);case Me.MUD_SPORT:return new $0(A,R);case Me.WATER_SPORT:return new q0(A,R);case Me.ION_DELUGE:return new j0(s);case Me.SPIKES:return new z0(R,i);case Me.TOXIC_SPIKES:return new eh(R,i);case Me.FUTURE_SIGHT:case Me.DOOM_DESIRE:return new th(E,s,R,I);case Me.WISH:return new J0(A,R,i);case Me.STEALTH_ROCK:return new Ah(R,i);case Me.STICKY_WEB:return new Eh(R,i);case Me.TRICK_ROOM:return new Nl(A,R);case Me.GRAVITY:return new sh(A);case Me.REFLECT:return new v0(A,R,i);case Me.LIGHT_SCREEN:return new x0(A,R,i);case Me.AURORA_VEIL:return new b0(A,R,i);case Me.TAILWIND:return new Rh(A,R,i);case Me.HAPPY_HOUR:return new Oh(A,R,i);case Me.SAFEGUARD:return new nh(A,R,i);case Me.IMPRISON:return new v8(R,i);case Me.FIRE_GRASS_PLEDGE:return new ih(R,i);case Me.WATER_FIRE_PLEDGE:return new ah(R,i);case Me.GRASS_WATER_PLEDGE:return new Lh(R,i);default:return null}}T(R6,"getArenaTag");function x8(E){const A=R6(E.tagType,E.turnCount,E.sourceMove,E.sourceId,E.targetIndex,E.side)??new Ih;return A.loadTag(E),A}T(x8,"loadArenaTag");var bt=(E=>(E[E.DEFAULT=0]="DEFAULT",E[E.FEMALE=1]="FEMALE",E[E.DOUBLE=2]="DOUBLE",E))(bt||{});const cf=class cf extends Phaser.GameObjects.Container{constructor(A,s,R,I,i,a,L){if(super(A,-72,80),this.config=BA.hasOwnProperty(s)?BA[s]:BA[C.ACE_TRAINER],L&&(this.config=L),this.variant=R,this.partyTemplateIndex=Math.min(I!==void 0?I:Hb(this.config.partyTemplates.map((D,M)=>M)),this.config.partyTemplates.length-1),or.hasOwnProperty(s)){const D=or[s];this.name=i||RE(Array.isArray(D[0])?D[R===1?1:0]:D),R===2&&(this.config.doubleOnly?a?this.partnerName=a:[this.name,this.partnerName]=this.name.split(" & "):this.partnerName=a||RE(Array.isArray(D[0])?D[1]:D))}switch(this.variant){case 1:this.config.hasGenders||(R=0);break;case 2:this.config.hasDouble||(R=0);break}Object.keys(ve)[Object.values(ve).indexOf(this.getPartyTemplate())];const S=T((D,M)=>{const c=this.scene.addFieldSprite(0,0,this.config.getSpriteKey(R===1||M,this.isDouble()));return c.setOrigin(.5,1),c.setPipeline(this.scene.spritePipeline,{tone:[0,0,0,0],hasShadow:!!D}),c},"getSprite"),o=S(!0),l=S();if(l.setVisible(!1),this.add(o),this.add(l),R===2&&!this.config.doubleOnly){const D=S(!0,!0),M=S(!1,!0);M.setVisible(!1),o.x=-4,l.x=-4,D.x=28,M.x=28,this.add(D),this.add(M)}}getKey(A){return this.config.getSpriteKey(this.variant===1||A,this.isDouble())}getName(A=qe.NONE,s=!1){let R=this.config.getTitle(A,this.variant),I=s&&this.config.title?this.config.title:null;const i=["grunt"];return this.name===""&&i.some(a=>R.toLocaleLowerCase().includes(a))?(I=U.t(`trainerClasses:${R.toLowerCase().replace(/\s/g,"_")}`),I):(this.name&&(s&&(aR()||LR(),I=U.t(`trainerClasses:${R.toLowerCase().replace(/\s/g,"_")}`)),A?R=A===qe.TRAINER?this.name:this.partnerName||this.name:(R=this.name,this.partnerName&&(R=`${R} & ${this.partnerName}`))),this.config.titleDouble&&this.variant===2&&!this.config.doubleOnly&&(I=this.config.titleDouble,R=U.t(`trainerNames:${this.config.nameDouble.toLowerCase().replace(/\s/g,"_")}`)),I?`${I} ${R}`:R)}isDouble(){return this.config.doubleOnly||this.variant===2}getMixedBattleBgm(){return this.config.mixedBattleBgm}getBattleBgm(){return this.config.battleBgm}getEncounterBgm(){return this.variant?(this.variant===2?this.config.doubleEncounterBgm:this.config.femaleEncounterBgm)||this.config.encounterBgm:this.config.encounterBgm}getEncounterMessages(){return this.variant?(this.variant===2?this.config.doubleEncounterMessages:this.config.femaleEncounterMessages)||this.config.encounterMessages:this.config.encounterMessages}getVictoryMessages(){return this.variant?(this.variant===2?this.config.doubleVictoryMessages:this.config.femaleVictoryMessages)||this.config.victoryMessages:this.config.victoryMessages}getDefeatMessages(){return this.variant?(this.variant===2?this.config.doubleDefeatMessages:this.config.femaleDefeatMessages)||this.config.defeatMessages:this.config.defeatMessages}getPartyTemplate(){return this.config.partyTemplateFunc?this.config.partyTemplateFunc(this.scene):this.config.partyTemplates[this.partyTemplateIndex]}getPartyLevels(A){const s=[],R=this.getPartyTemplate(),I=this.scene.gameMode.getWaveForDifficulty(A),i=1+I/2+Math.pow(I/25,2);this.isDouble()&&R.size<2&&(R.size=2);for(let a=0;a<R.size;a++){let L=1;const S=R.getStrength(a);switch(S){case Pe.WEAKER:L=.95;break;case Pe.WEAK:L=1;break;case Pe.AVERAGE:L=1.1;break;case Pe.STRONG:L=1.2;break;case Pe.STRONGER:L=1.25;break}let o=0;S<Pe.STRONG&&(L=Math.min(L+.025*Math.floor(I/25),1.2),o=-Math.floor(I/50*(Pe.STRONG-S)));const l=Math.ceil(i*L)+o;s.push(l)}return s}genPartyMember(A){var i;const s=this.scene.currentBattle,R=(i=s.enemyLevels)==null?void 0:i[A];let I;return this.scene.executeWithSeedOffset(()=>{const a=this.getPartyTemplate(),L=a.getStrength(A);if(!(this.config.trainerTypeDouble&&this.isDouble()&&!this.config.doubleOnly)){if(this.config.partyMemberFuncs.hasOwnProperty(A)){I=this.config.partyMemberFuncs[A](this.scene,R,L);return}if(this.config.partyMemberFuncs.hasOwnProperty(A-a.size)){I=this.config.partyMemberFuncs[A-a.size](this.scene,R,a.getStrength(A));return}}let S=0;if(a instanceof PA)for(const M of a.templates){if(S+M.size>A)break;S+=M.size}let o=[],l=!1;if(this.config.trainerTypeDouble&&this.isDouble()&&!this.config.doubleOnly){l=!0;const M=ce[C[this.config.trainerTypeDouble]],c=ce[C[this.config.trainerType]],G=s.enemyParty.map(g=>g.species.speciesId),P=c.filter(g=>Array.isArray(g)?!g.some(H=>G.includes(H)):!G.includes(g)).flat(),_=M.filter(g=>Array.isArray(g)?!g.some(H=>G.includes(H)):!G.includes(g)).flat();A%2?A===1&&C[this.config.trainerTypeDouble]===C[C.TATE]?o=[e.SOLROCK]:A===1&&C[this.config.trainerTypeDouble]===C[C.LIZA]?o=[e.LUNATONE]:o=_:A===0&&C[this.config.trainerType]===C[C.TATE]?o=[e.SOLROCK]:A===0&&C[this.config.trainerType]===C[C.LIZA]?o=[e.LUNATONE]:o=P,o.length===0&&(l=!1)}let D=l?Ke(o[Math.floor(le(o.length))]):a.isSameSpecies(A)&&A>S?Ke(s.enemyParty[S].species.getTrainerSpeciesForLevel(R,!1,a.getStrength(S),this.scene.currentBattle.waveIndex)):this.genNewPartyMemberSpecies(R,L);o&&(D=Ke(D.getSpeciesForLevel(R,!0,!0,L,this.scene.currentBattle.waveIndex))),I=this.scene.addEnemyPokemon(D,R,!this.isDouble()||!(A%2)?qe.TRAINER:qe.TRAINER_PARTNER)},this.config.hasStaticParty?this.config.getDerivedType()+(A+1<<8):this.scene.currentBattle.waveIndex+(this.config.getDerivedType()<<10)+((this.config.useSameSeedForAllMembers?0:A)+1<<8)),I}genNewPartyMemberSpecies(A,s,R){const I=this.scene.currentBattle,i=this.getPartyTemplate();let a;if(this.config.speciesPools){const o=le(512);let l=o>=156?ln.COMMON:o>=32?ln.UNCOMMON:o>=6?ln.RARE:o>=1?ln.SUPER_RARE:ln.ULTRA_RARE;for(ln[l];!this.config.speciesPools.hasOwnProperty(l)||!this.config.speciesPools[l].length;)`${ln[l]}${ln[l-1]}`,l--;const D=this.config.speciesPools[l];a=Ke(RE(D))}else a=this.scene.randomSpecies(I.waveIndex,A,!1,this.config.speciesFilter);let L=Ke(a.getTrainerSpeciesForLevel(A,!0,s,this.scene.currentBattle.waveIndex)),S=!1;if(L.getName(),KA.hasOwnProperty(a.speciesId)&&L.speciesId!==a.speciesId)S=!0;else if(i.isBalanced(I.enemyParty.length)){const o=I.enemyParty.map(l=>l.getTypes(!0)).flat();(o.indexOf(L.type1)>-1||L.type2!==null&&o.indexOf(L.type2)>-1)&&(S=!0)}if(!S&&this.config.specialtyTypes.length&&!this.config.specialtyTypes.find(o=>L.isOfType(o))){S=!0;let o=0;for(;S&&o++<10;)L=Ke(a.getTrainerSpeciesForLevel(A,!0,s,this.scene.currentBattle.waveIndex)),L.name,this.config.specialtyTypes.find(l=>L.isOfType(l))&&(S=!1)}return this.checkDuplicateSpecies(L,a)&&(S=!0),S&&(R??0)<10&&(L=this.genNewPartyMemberSpecies(A,s,(R??0)+1)),L}checkDuplicateSpecies(A,s){const R=(ce[C[this.config.trainerType]]??[]).flat(1);return this.scene.getEnemyParty().map(i=>i.species.speciesId).includes(A.speciesId)||R.includes(s.speciesId)}getPartyMemberMatchupScores(A=qe.NONE,s=!1){A&&!this.isDouble()&&(A=qe.NONE);const R=this.scene.getEnemyParty();return R.slice(this.scene.currentBattle.getBattlerCount()).filter(a=>a.isAllowedInBattle()).filter(a=>!A||a.trainerSlot===A).map(a=>{const L=this.scene.getPlayerField().filter(o=>o.isAllowedInBattle());let S=0;if(L.length>0){for(const o of L)S+=a.getMatchupScore(o),o.species.legendary&&(S/=2);S/=L.length,s&&!a.isOnField()&&this.scene.arena.findTagsOnSide(o=>o instanceof kR,et.ENEMY).map(o=>S*=o.getMatchupScoreMultiplier(a))}return[R.indexOf(a),S]})}getSortedPartyMemberMatchupScores(A=this.getPartyMemberMatchupScores()){const s=A.slice(0);return s.sort((R,I)=>{const i=R[1],a=I[1];return i<a?1:i>a?-1:0}),s}getNextSummonIndex(A=qe.NONE,s=this.getPartyMemberMatchupScores(A)){A&&!this.isDouble()&&(A=qe.NONE);const R=this.getSortedPartyMemberMatchupScores(s),I=s.filter(i=>i[1]===R[0][1]).map(i=>i[0]);if(I.length>1){let i;return this.scene.executeWithSeedOffset(()=>i=le(I.length),this.scene.currentBattle.turn<<2),I[i]}return I[0]}getPartyMemberModifierChanceMultiplier(A){switch(this.getPartyTemplate().getStrength(A)){case Pe.WEAKER:return .75;case Pe.WEAK:return .675;case Pe.AVERAGE:return .5625;case Pe.STRONG:return .45;case Pe.STRONGER:return .375;default:return console.warn("getPartyMemberModifierChanceMultiplier not defined. Using default 0"),0}}genModifiers(A){return this.config.genModifiersFunc?this.config.genModifiersFunc(A):[]}loadAssets(){return this.config.loadAssets(this.scene,this.variant)}initSprite(){this.getSprites().map((A,s)=>A.setTexture(this.getKey(!!s)).setFrame(0)),this.getTintSprites().map((A,s)=>A.setTexture(this.getKey(!!s)).setFrame(0))}tryPlaySprite(A,s,R){return A.texture.key==="__MISSING"?(console.error(`No texture found for '${R.key}'!`),!1):A.texture.frameTotal<=1?(console.warn(`No animation found for '${R.key}'. Is this intentional?`),!1):(A.play(R),s.play(R),!0)}playAnim(){const A={key:this.getKey(),repeat:0,startFrame:0},s=this.getSprites(),R=this.getTintSprites();if(this.tryPlaySprite(s[0],R[0],A),this.variant===2&&!this.config.doubleOnly){const I={key:this.getKey(!0),repeat:0,startFrame:0};this.tryPlaySprite(s[1],R[1],I)}}getSprites(){const A=[this.getAt(0)];return this.variant===2&&!this.config.doubleOnly&&A.push(this.getAt(2)),A}getTintSprites(){const A=[this.getAt(1)];return this.variant===2&&!this.config.doubleOnly&&A.push(this.getAt(3)),A}tint(A,s,R,I){this.getTintSprites().map(a=>{a.setTintFill(A),a.setVisible(!0),R?(a.setAlpha(0),this.scene.tweens.add({targets:a,alpha:s||1,duration:R,ease:I||"Linear"})):a.setAlpha(s)})}untint(A,s){this.getTintSprites().map(I=>{A?this.scene.tweens.add({targets:I,alpha:0,duration:A,ease:s||"Linear",onComplete:T(()=>{I.setVisible(!1),I.setAlpha(1)},"onComplete")}):(I.setVisible(!1),I.setAlpha(1))})}};T(cf,"Trainer");let is=cf;var sE=(E=>(E[E.DEFAULT=0]="DEFAULT",E[E.TRAINER_BATTLE=1]="TRAINER_BATTLE",E[E.WILD_BATTLE=2]="WILD_BATTLE",E[E.BOSS_BATTLE=3]="BOSS_BATTLE",E[E.NO_BATTLE=4]="NO_BATTLE",E))(sE||{}),O6=(E=>(E[E.EVIL_BOSS_1=115]="EVIL_BOSS_1",E[E.EVIL_BOSS_2=165]="EVIL_BOSS_2",E))(O6||{}),Nt=(E=>(E[E.WILD=0]="WILD",E[E.TRAINER=1]="TRAINER",E[E.CLEAR=2]="CLEAR",E[E.MYSTERY_ENCOUNTER=3]="MYSTERY_ENCOUNTER",E))(Nt||{}),Ct=(E=>(E[E.ATTACKER=-1]="ATTACKER",E[E.PLAYER=0]="PLAYER",E[E.PLAYER_2=1]="PLAYER_2",E[E.ENEMY=2]="ENEMY",E[E.ENEMY_2=3]="ENEMY_2",E))(Ct||{});const Gf=class Gf{constructor(A,s,R,I,i){this.enemyParty=[],this.seenEnemyPartyMemberIds=new Set,this.started=!1,this.enemySwitchCounter=0,this.turn=0,this.playerParticipantIds=new Set,this.battleScore=0,this.postBattleLoot=[],this.escapeAttempts=0,this.battleSeed=BM(16,!0),this.battleSeedState=null,this.moneyScattered=0,this.lastUsedPokeball=null,this.playerFaints=0,this.enemyFaints=0,this.playerFaintsHistory=[],this.enemyFaintsHistory=[],this.rngCounter=0,this.gameMode=A,this.waveIndex=s,this.battleType=R,this.trainer=I??null,this.initBattleSpec(),this.enemyLevels=R!==1?new Array(i?2:1).fill(null).map(()=>this.getLevelForWave()):I==null?void 0:I.getPartyLevels(this.waveIndex),this.double=i??!1}initBattleSpec(){let A=eE.DEFAULT;this.gameMode.isWaveFinal(this.waveIndex)&&this.gameMode.isClassic&&(A=eE.FINAL_BOSS),this.battleSpec=A}getLevelForWave(){const A=this.gameMode.getWaveForDifficulty(this.waveIndex),s=1+A/2+Math.pow(A/25,2),R=1.2;if(this.gameMode.isBoss(this.waveIndex)){const a=Math.floor(s*R);if(this.battleSpec===eE.FINAL_BOSS||!(this.waveIndex%250))return Math.ceil(a/25)*25;let L=0;return this.gameMode.isWaveFinal(this.waveIndex)||(L=Math.round(Phaser.Math.RND.realInRange(-1,1)*Math.floor(A/10))),a+L}let I=0;const i=10/A;return I=Math.abs(this.randSeedGaussForLevel(i)),Math.max(Math.round(s+I),1)}randSeedGaussForLevel(A){let s=0;for(let R=A;R>0;R--)s+=Phaser.Math.RND.realInRange(0,1);return s/A}getBattlerCount(){return this.double?2:1}incrementTurn(A){this.turn++,this.turnCommands=Object.fromEntries(IE(Ct).map(s=>[s,null])),this.battleSeedState=null}addParticipant(A){this.playerParticipantIds.add(A.id)}removeFaintedParticipant(A){this.playerParticipantIds.delete(A.id)}addPostBattleLoot(A){this.postBattleLoot.push(...A.scene.findModifiers(s=>s instanceof at&&s.pokemonId===A.id&&s.isTransferable,!1).map(s=>{const R=s;return R.pokemonId=null,R}))}pickUpScatteredMoney(A){const s=new Jt(A.currentBattle.moneyScattered);A.applyModifiers(cR,!0,s),A.arena.getTag(Me.HAPPY_HOUR)&&(s.value*=2),A.addMoney(s.value);const R=navigator.language||"en-US",I=s.value.toLocaleString(R),i=U.t("battle:moneyPickedUp",{moneyAmount:I});A.queueMessage(i,void 0,!0),A.currentBattle.moneyScattered=0}addBattleScore(A){let s=A.getEnemyParty().length/2+.5;this.double&&(s/=1.5);for(const i of A.getEnemyParty())i.isBoss()&&(s*=i.bossSegments/1.5/A.getEnemyParty().length);const R=Phaser.Tweens.Builders.GetEaseFunction("Sine.easeIn")(1-Math.min(this.turn-2,10*s)/(10*s)),I=Math.ceil(this.battleScore*R);A.score+=I,`${I}`,this.turn-1,Math.floor(R*100)/100,`${A.score}`,A.updateScoreText()}getBgmOverride(A){var R,I,i,a,L,S,o,l;const s=this.enemyParty.slice(0,this.getBattlerCount());if(this.isBattleMysteryEncounter()&&((R=this.mysteryEncounter)==null?void 0:R.encounterMode)===sE.DEFAULT)return null;if(this.battleType===1||((I=this.mysteryEncounter)==null?void 0:I.encounterMode)===sE.TRAINER_BATTLE)return!this.started&&((i=this.trainer)!=null&&i.config.encounterBgm)&&((L=(a=this.trainer)==null?void 0:a.getEncounterMessages())!=null&&L.length)?`encounter_${(S=this.trainer)==null?void 0:S.getEncounterBgm()}`:A.musicPreference===0?((o=this.trainer)==null?void 0:o.getBattleBgm())??null:((l=this.trainer)==null?void 0:l.getMixedBattleBgm())??null;if(this.gameMode.isClassic&&this.waveIndex>195&&this.battleSpec!==eE.FINAL_BOSS)return"end_summit";for(const D of s){if(this.battleSpec===eE.FINAL_BOSS)return D.formIndex?"battle_final":"battle_final_encounter";if(D.species.legendary||D.species.subLegendary||D.species.mythical){if(A.musicPreference===0)return D.species.speciesId===e.REGIROCK||D.species.speciesId===e.REGICE||D.species.speciesId===e.REGISTEEL||D.species.speciesId===e.REGIGIGAS||D.species.speciesId===e.REGIELEKI||D.species.speciesId===e.REGIDRAGO?"battle_legendary_regis_g5":D.species.speciesId===e.COBALION||D.species.speciesId===e.TERRAKION||D.species.speciesId===e.VIRIZION||D.species.speciesId===e.TORNADUS||D.species.speciesId===e.THUNDURUS||D.species.speciesId===e.LANDORUS||D.species.speciesId===e.KELDEO||D.species.speciesId===e.MELOETTA||D.species.speciesId===e.GENESECT?"battle_legendary_unova":D.species.speciesId===e.KYUREM?"battle_legendary_kyurem":D.species.legendary?"battle_legendary_res_zek":"battle_legendary_unova";if(D.species.speciesId===e.ARTICUNO||D.species.speciesId===e.ZAPDOS||D.species.speciesId===e.MOLTRES||D.species.speciesId===e.MEWTWO||D.species.speciesId===e.MEW)return"battle_legendary_kanto";if(D.species.speciesId===e.RAIKOU)return"battle_legendary_raikou";if(D.species.speciesId===e.ENTEI)return"battle_legendary_entei";if(D.species.speciesId===e.SUICUNE)return"battle_legendary_suicune";if(D.species.speciesId===e.LUGIA)return"battle_legendary_lugia";if(D.species.speciesId===e.HO_OH)return"battle_legendary_ho_oh";if(D.species.speciesId===e.REGIROCK||D.species.speciesId===e.REGICE||D.species.speciesId===e.REGISTEEL||D.species.speciesId===e.REGIGIGAS||D.species.speciesId===e.REGIELEKI||D.species.speciesId===e.REGIDRAGO)return"battle_legendary_regis_g6";if(D.species.speciesId===e.GROUDON||D.species.speciesId===e.KYOGRE)return"battle_legendary_gro_kyo";if(D.species.speciesId===e.RAYQUAZA)return"battle_legendary_rayquaza";if(D.species.speciesId===e.DEOXYS)return"battle_legendary_deoxys";if(D.species.speciesId===e.UXIE||D.species.speciesId===e.MESPRIT||D.species.speciesId===e.AZELF)return"battle_legendary_lake_trio";if(D.species.speciesId===e.HEATRAN||D.species.speciesId===e.CRESSELIA||D.species.speciesId===e.DARKRAI||D.species.speciesId===e.SHAYMIN)return"battle_legendary_sinnoh";if(D.species.speciesId===e.DIALGA||D.species.speciesId===e.PALKIA){if(D.getFormKey()==="")return"battle_legendary_dia_pal";if(D.getFormKey()==="origin")return"battle_legendary_origin_forme"}if(D.species.speciesId===e.GIRATINA)return"battle_legendary_giratina";if(D.species.speciesId===e.ARCEUS)return"battle_legendary_arceus";if(D.species.speciesId===e.COBALION||D.species.speciesId===e.TERRAKION||D.species.speciesId===e.VIRIZION||D.species.speciesId===e.TORNADUS||D.species.speciesId===e.THUNDURUS||D.species.speciesId===e.LANDORUS||D.species.speciesId===e.KELDEO||D.species.speciesId===e.MELOETTA||D.species.speciesId===e.GENESECT)return"battle_legendary_unova";if(D.species.speciesId===e.KYUREM)return"battle_legendary_kyurem";if(D.species.speciesId===e.XERNEAS||D.species.speciesId===e.YVELTAL||D.species.speciesId===e.ZYGARDE)return"battle_legendary_xern_yvel";if(D.species.speciesId===e.TAPU_KOKO||D.species.speciesId===e.TAPU_LELE||D.species.speciesId===e.TAPU_BULU||D.species.speciesId===e.TAPU_FINI)return"battle_legendary_tapu";if([e.COSMOG,e.COSMOEM,e.SOLGALEO,e.LUNALA].includes(D.species.speciesId))return"battle_legendary_sol_lun";if(D.species.speciesId===e.NECROZMA){if(D.getFormKey()==="")return"battle_legendary_sol_lun";if(D.getFormKey()==="dusk-mane"||D.getFormKey()==="dawn-wings")return"battle_legendary_dusk_dawn";if(D.getFormKey()==="ultra")return"battle_legendary_ultra_nec"}if([e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON].includes(D.species.speciesId))return"battle_legendary_ub";if(D.species.speciesId===e.ZACIAN||D.species.speciesId===e.ZAMAZENTA)return"battle_legendary_zac_zam";if(D.species.speciesId===e.GLASTRIER||D.species.speciesId===e.SPECTRIER)return"battle_legendary_glas_spec";if(D.species.speciesId===e.CALYREX){if(D.getFormKey()==="")return"battle_legendary_calyrex";if(D.getFormKey()==="ice"||D.getFormKey()==="shadow")return"battle_legendary_riders"}return D.species.speciesId===e.GALAR_ARTICUNO||D.species.speciesId===e.GALAR_ZAPDOS||D.species.speciesId===e.GALAR_MOLTRES?"battle_legendary_birds_galar":D.species.speciesId===e.WO_CHIEN||D.species.speciesId===e.CHIEN_PAO||D.species.speciesId===e.TING_LU||D.species.speciesId===e.CHI_YU?"battle_legendary_ruinous":D.species.speciesId===e.KORAIDON||D.species.speciesId===e.MIRAIDON?"battle_legendary_kor_mir":D.species.speciesId===e.OKIDOGI||D.species.speciesId===e.MUNKIDORI||D.species.speciesId===e.FEZANDIPITI?"battle_legendary_loyal_three":D.species.speciesId===e.OGERPON?"battle_legendary_ogerpon":D.species.speciesId===e.TERAPAGOS?"battle_legendary_terapagos":D.species.speciesId===e.PECHARUNT?"battle_legendary_pecharunt":D.species.legendary?"battle_legendary_res_zek":"battle_legendary_unova"}}return A.gameMode.isClassic&&this.waveIndex<=4?"battle_wild":null}randSeedInt(A,s,R=0){if(s<=1)return R;const I=A.rngCounter,i=A.rngSeedOverride,a=Phaser.Math.RND.state();this.battleSeedState?Phaser.Math.RND.state(this.battleSeedState):(Phaser.Math.RND.sow([L0(this.battleSeed,this.turn<<6)]),this.battleSeed),A.rngCounter=this.rngCounter++,A.rngSeedOverride=this.battleSeed;const L=le(s,R);return this.battleSeedState=Phaser.Math.RND.state(),Phaser.Math.RND.state(a),A.rngCounter=I,A.rngSeedOverride=i,L}isBattleMysteryEncounter(){return this.battleType===3}};T(Gf,"Battle");let rh=Gf;const Pf=class Pf{setBattleType(A){return this.battleType=A,this}setDouble(A){return this.double=A,this}setGetTrainerFunc(A){return this.getTrainer=A,this}setGetEnemyPartyFunc(A){return this.getEnemyParty=A,this}setSeedOffsetWave(A){return this.seedOffsetWaveIndex=A,this}setCustomModifierRewards(A){return this.customModifierRewardSettings=A,this}};T(Pf,"FixedBattleConfig");let nE=Pf;function _R(E,A=!1,s=0){return R=>{const I=le(E.length),i=[];R.executeWithSeedOffset(()=>{for(const o of E){const l=Array.isArray(o)?RE(o):o;i.push(l)}},s);let a=bt.DEFAULT;A&&(a=sA(2)===0?bt.FEMALE:bt.DEFAULT);const S=[C.ROCKET_GRUNT,C.MAGMA_GRUNT,C.AQUA_GRUNT,C.GALACTIC_GRUNT,C.PLASMA_GRUNT,C.FLARE_GRUNT,C.AETHER_GRUNT,C.SKULL_GRUNT,C.MACRO_GRUNT,C.STAR_GRUNT].includes(i[I]);return BA[i[I]].hasDouble&&S?new is(R,i[I],sA(3)===0?bt.DOUBLE:a):new is(R,i[I],a)}}T(_R,"getRandomTrainerFunc");const vV={5:new nE().setBattleType(1).setGetTrainerFunc(E=>new is(E,C.YOUNGSTER,le(2)?bt.FEMALE:bt.DEFAULT)),8:new nE().setBattleType(1).setGetTrainerFunc(E=>new is(E,C.RIVAL,E.gameData.gender===ct.MALE?bt.FEMALE:bt.DEFAULT)),25:new nE().setBattleType(1).setGetTrainerFunc(E=>new is(E,C.RIVAL_2,E.gameData.gender===ct.MALE?bt.FEMALE:bt.DEFAULT)).setCustomModifierRewards({guaranteedModifierTiers:[W.ULTRA,W.GREAT,W.GREAT],allowLuckUpgrades:!1}),35:new nE().setBattleType(1).setGetTrainerFunc(_R([C.ROCKET_GRUNT,C.MAGMA_GRUNT,C.AQUA_GRUNT,C.GALACTIC_GRUNT,C.PLASMA_GRUNT,C.FLARE_GRUNT,C.AETHER_GRUNT,C.SKULL_GRUNT,C.MACRO_GRUNT,C.STAR_GRUNT],!0)),55:new nE().setBattleType(1).setGetTrainerFunc(E=>new is(E,C.RIVAL_3,E.gameData.gender===ct.MALE?bt.FEMALE:bt.DEFAULT)).setCustomModifierRewards({guaranteedModifierTiers:[W.ULTRA,W.ULTRA,W.GREAT,W.GREAT],allowLuckUpgrades:!1}),62:new nE().setBattleType(1).setSeedOffsetWave(35).setGetTrainerFunc(_R([C.ROCKET_GRUNT,C.MAGMA_GRUNT,C.AQUA_GRUNT,C.GALACTIC_GRUNT,C.PLASMA_GRUNT,C.FLARE_GRUNT,C.AETHER_GRUNT,C.SKULL_GRUNT,C.MACRO_GRUNT,C.STAR_GRUNT],!0)),64:new nE().setBattleType(1).setSeedOffsetWave(35).setGetTrainerFunc(_R([C.ROCKET_GRUNT,C.MAGMA_GRUNT,C.AQUA_GRUNT,C.GALACTIC_GRUNT,C.PLASMA_GRUNT,C.FLARE_GRUNT,C.AETHER_GRUNT,C.SKULL_GRUNT,C.MACRO_GRUNT,C.STAR_GRUNT],!0)),66:new nE().setBattleType(1).setSeedOffsetWave(35).setGetTrainerFunc(_R([[C.ARCHER,C.ARIANA,C.PROTON,C.PETREL],[C.TABITHA,C.COURTNEY],[C.MATT,C.SHELLY],[C.JUPITER,C.MARS,C.SATURN],[C.ZINZOLIN,C.ROOD],[C.XEROSIC,C.BRYONY],C.FABA,C.PLUMERIA,C.OLEANA,[C.GIACOMO,C.MELA,C.ATTICUS,C.ORTEGA,C.ERI]],!0)),95:new nE().setBattleType(1).setGetTrainerFunc(E=>new is(E,C.RIVAL_4,E.gameData.gender===ct.MALE?bt.FEMALE:bt.DEFAULT)).setCustomModifierRewards({guaranteedModifierTiers:[W.ULTRA,W.ULTRA,W.ULTRA,W.ULTRA],allowLuckUpgrades:!1}),112:new nE().setBattleType(1).setSeedOffsetWave(35).setGetTrainerFunc(_R([C.ROCKET_GRUNT,C.MAGMA_GRUNT,C.AQUA_GRUNT,C.GALACTIC_GRUNT,C.PLASMA_GRUNT,C.FLARE_GRUNT,C.AETHER_GRUNT,C.SKULL_GRUNT,C.MACRO_GRUNT,C.STAR_GRUNT],!0)),114:new nE().setBattleType(1).setSeedOffsetWave(35).setGetTrainerFunc(_R([[C.ARCHER,C.ARIANA,C.PROTON,C.PETREL],[C.TABITHA,C.COURTNEY],[C.MATT,C.SHELLY],[C.JUPITER,C.MARS,C.SATURN],[C.ZINZOLIN,C.ROOD],[C.XEROSIC,C.BRYONY],C.FABA,C.PLUMERIA,C.OLEANA,[C.GIACOMO,C.MELA,C.ATTICUS,C.ORTEGA,C.ERI]],!0,1)),115:new nE().setBattleType(1).setSeedOffsetWave(35).setGetTrainerFunc(_R([C.ROCKET_BOSS_GIOVANNI_1,C.MAXIE,C.ARCHIE,C.CYRUS,C.GHETSIS,C.LYSANDRE,C.LUSAMINE,C.GUZMA,C.ROSE,C.PENNY])).setCustomModifierRewards({guaranteedModifierTiers:[W.ROGUE,W.ROGUE,W.ULTRA,W.ULTRA,W.ULTRA],allowLuckUpgrades:!1}),145:new nE().setBattleType(1).setGetTrainerFunc(E=>new is(E,C.RIVAL_5,E.gameData.gender===ct.MALE?bt.FEMALE:bt.DEFAULT)).setCustomModifierRewards({guaranteedModifierTiers:[W.ROGUE,W.ROGUE,W.ROGUE,W.ULTRA,W.ULTRA],allowLuckUpgrades:!1}),165:new nE().setBattleType(1).setSeedOffsetWave(35).setGetTrainerFunc(_R([C.ROCKET_BOSS_GIOVANNI_2,C.MAXIE_2,C.ARCHIE_2,C.CYRUS_2,C.GHETSIS_2,C.LYSANDRE_2,C.LUSAMINE_2,C.GUZMA_2,C.ROSE_2,C.PENNY_2])).setCustomModifierRewards({guaranteedModifierTiers:[W.ROGUE,W.ROGUE,W.ULTRA,W.ULTRA,W.ULTRA,W.ULTRA],allowLuckUpgrades:!1}),182:new nE().setBattleType(1).setGetTrainerFunc(_R([C.LORELEI,C.WILL,C.SIDNEY,C.AARON,C.SHAUNTAL,C.MALVA,[C.HALA,C.MOLAYNE],C.MARNIE_ELITE,C.RIKA,C.CRISPIN])),184:new nE().setBattleType(1).setSeedOffsetWave(182).setGetTrainerFunc(_R([C.BRUNO,C.KOGA,C.PHOEBE,C.BERTHA,C.MARSHAL,C.SIEBOLD,C.OLIVIA,C.NESSA_ELITE,C.POPPY,C.AMARYS])),186:new nE().setBattleType(1).setSeedOffsetWave(182).setGetTrainerFunc(_R([C.AGATHA,C.BRUNO,C.GLACIA,C.FLINT,C.GRIMSLEY,C.WIKSTROM,C.ACEROLA,[C.BEA_ELITE,C.ALLISTER_ELITE],C.LARRY_ELITE,C.LACEY])),188:new nE().setBattleType(1).setSeedOffsetWave(182).setGetTrainerFunc(_R([C.LANCE,C.KAREN,C.DRAKE,C.LUCIAN,C.CAITLIN,C.DRASNA,C.KAHILI,C.RAIHAN_ELITE,C.HASSEL,C.DRAYTON])),190:new nE().setBattleType(1).setSeedOffsetWave(182).setGetTrainerFunc(_R([C.BLUE,[C.RED,C.LANCE_CHAMPION],[C.STEVEN,C.WALLACE],C.CYNTHIA,[C.ALDER,C.IRIS],C.DIANTHA,C.HAU,C.LEON,[C.GEETA,C.NEMONA],C.KIERAN])),195:new nE().setBattleType(1).setGetTrainerFunc(E=>new is(E,C.RIVAL_6,E.gameData.gender===ct.MALE?bt.FEMALE:bt.DEFAULT)).setCustomModifierRewards({guaranteedModifierTiers:[W.ROGUE,W.ROGUE,W.ULTRA,W.ULTRA,W.GREAT,W.GREAT],allowLuckUpgrades:!1})};var tA=(E=>(E[E.CLASSIC=0]="CLASSIC",E[E.ENDLESS=1]="ENDLESS",E[E.SPLICED_ENDLESS=2]="SPLICED_ENDLESS",E[E.DAILY=3]="DAILY",E[E.CHALLENGE=4]="CHALLENGE",E))(tA||{});const HA=[10,180],b8=[10,180],_f=class _f{constructor(A,s,R){this.modeId=A,this.challenges=[],Object.assign(this,s),this.isChallenge&&(this.challenges=q6.map(I=>$6(I))),this.battleConfig=R||{}}hasChallenge(A){return this.challenges.some(s=>s.id===A&&s.value!==0)}isFreshStartChallenge(){return this.hasChallenge(ht.FRESH_START)}getStartingLevel(){if(Ge.STARTING_LEVEL_OVERRIDE)return Ge.STARTING_LEVEL_OVERRIDE;switch(this.modeId){case 3:return 20;default:return 5}}getStartingMoney(){return Ge.STARTING_MONEY_OVERRIDE||1e3}getStartingBiome(A){switch(this.modeId){case 3:return A.generateRandomBiome(this.getWaveForDifficulty(1));default:return Ge.STARTING_BIOME_OVERRIDE||r.TOWN}}getWaveForDifficulty(A,s=!1){switch(this.modeId){case 3:return A+30+(s?0:Math.floor(A/5));default:return A}}isWaveTrainer(A,s){if(this.isDaily)return A%10===5||!(A%10)&&A>10&&!this.isWaveFinal(A);if(A%30===(s.scene.offsetGym?0:20)&&!this.isWaveFinal(A))return!0;if(A%10!==1&&A%10){const R=s.getTrainerChance();let I=!0;if(R){const i=Math.floor(A/10)*10;for(let a=Math.max(A-3,i+2);a<=Math.min(A+3,i+9);a++)if(a!==A){if(a%30===(s.scene.offsetGym?0:20)||this.isFixedBattle(a)){I=!1;break}else if(a<A&&(s.scene.executeWithSeedOffset(()=>{const L=s.getTrainerChance();le(L)||(I=!1)},a),!I))break}}return!!(I&&R&&!le(R))}return!1}isTrainerBoss(A,s,R){switch(this.modeId){case 3:return A>10&&A<50&&!(A%10);default:return A%30===(R?0:20)&&(s!==r.END||this.isClassic||this.isWaveFinal(A))}}getOverrideSpecies(A){if(this.isDaily&&this.isWaveFinal(A)){const s=MR.filter(R=>(R.subLegendary||R.legendary||R.mythical)&&R.baseTotal>=600&&R.speciesId!==e.ETERNATUS&&R.speciesId!==e.ARCEUS);return RE(s)}return null}isWaveFinal(A,s=this.modeId){switch(s){case 0:case 4:return A===200;case 1:case 2:return!(A%250);case 3:return A===50}}isBoss(A){return A%10===0}isEndlessBoss(A){return!!(A%50)&&(this.modeId===1||this.modeId===2)}isEndlessMinorBoss(A){return A%250===0&&(this.modeId===1||this.modeId===2)}isEndlessMajorBoss(A){return A%1e3===0&&(this.modeId===1||this.modeId===2)}isFixedBattle(A){const s=new nE;return this.battleConfig.hasOwnProperty(A)||Is(this,JE.FIXED_BATTLES,A,s)}getFixedBattle(A){const s=new nE;return Is(this,JE.FIXED_BATTLES,A,s)?s:this.battleConfig[A]}getClearScoreBonus(){switch(this.modeId){case 0:case 4:return 5e3;case 3:return 2500;default:return 0}}getEnemyModifierChance(A){switch(this.modeId){case 0:case 4:case 3:return A?6:18;case 1:case 2:return A?4:12}}getName(){switch(this.modeId){case 0:return U.t("gameMode:classic");case 1:return U.t("gameMode:endless");case 2:return U.t("gameMode:endlessSpliced");case 3:return U.t("gameMode:dailyRun");case 4:return U.t("gameMode:challenge")}}getMysteryEncounterLegalWaves(){switch(this.modeId){default:return[0,0];case 0:return HA;case 4:return b8}}static getModeName(A){switch(A){case 0:return U.t("gameMode:classic");case 1:return U.t("gameMode:endless");case 2:return U.t("gameMode:endlessSpliced");case 3:return U.t("gameMode:dailyRun");case 4:return U.t("gameMode:challenge")}}};T(_f,"GameMode");let CR=_f;function Tl(E){switch(E){case 0:return new CR(0,{isClassic:!0,hasTrainers:!0,hasMysteryEncounters:!0},vV);case 1:return new CR(1,{isEndless:!0,hasShortBiomes:!0,hasRandomBosses:!0});case 2:return new CR(2,{isEndless:!0,hasShortBiomes:!0,hasRandomBosses:!0,isSplicedOnly:!0});case 3:return new CR(3,{isDaily:!0,hasTrainers:!0,hasNoShop:!0});case 4:return new CR(4,{isClassic:!0,hasTrainers:!0,isChallenge:!0,hasMysteryEncounters:!0},vV)}}T(Tl,"getGameMode");var Hs=(E=>(E[E.ENDLESS_MODE=0]="ENDLESS_MODE",E[E.MINI_BLACK_HOLE=1]="MINI_BLACK_HOLE",E[E.SPLICED_ENDLESS_MODE=2]="SPLICED_ENDLESS_MODE",E[E.EVIOLITE=3]="EVIOLITE",E))(Hs||{});function k8(E){switch(E){case 0:return`${CR.getModeName(tA.ENDLESS)} Mode`;case 1:return U.t("modifierType:ModifierType.MINI_BLACK_HOLE.name");case 2:return`${CR.getModeName(tA.SPLICED_ENDLESS)} Mode`;case 3:return U.t("modifierType:ModifierType.EVIOLITE.name")}}T(k8,"getUnlockableName");var $A=(E=>(E[E.REGULAR=0]="REGULAR",E[E.PLUS=1]="PLUS",E[E.PREMIUM=2]="PREMIUM",E[E.GOLDEN=3]="GOLDEN",E))($A||{});const Hf=class Hf{constructor(A,s,R){this.description=s,this.voucherType=A,this.conditionFunc=R}validate(A,s){return!this.conditionFunc||this.conditionFunc(A,s)}getName(A){return Sl(this.voucherType)}getIconImage(){return cn(this.voucherType)}getTier(){switch(this.voucherType){case 0:return Lr.COMMON;case 1:return Lr.GREAT;case 2:return Lr.ULTRA;case 3:return Lr.ROGUE}}};T(Hf,"Voucher");let MT=Hf;function Sl(E){switch(E){case 0:return U.t("voucher:eggVoucher");case 1:return U.t("voucher:eggVoucherPlus");case 2:return U.t("voucher:eggVoucherPremium");case 3:return U.t("voucher:eggVoucherGold")}}T(Sl,"getVoucherTypeName");function cn(E){switch(E){case 0:return"coupon";case 1:return"pair_of_tickets";case 2:return"mystic_ticket";case 3:return"golden_mystic_ticket"}}T(cn,"getVoucherTypeIcon");const Ls={};function Z8(){for(const s of[At.CLASSIC_VICTORY]){const R=s.score>=150?3:s.score>=100?2:s.score>=75?1:0;Ls[s.id]=new MT(R,F1(s.localizationKey))}const E=Object.keys(BA).filter(s=>BA[s].isBoss&&BA[s].getDerivedType()!==C.RIVAL&&BA[s].hasVoucher);for(const s of E){const R=BA[s].moneyMultiplier<10?1:2,I=C[s],i=BA[s].name,a=BA[s],L=a.title?` (${a.title})`:"";Ls[I]=new MT(R,`${U.t("voucher:defeatTrainer",{trainerName:i})} ${L}`)}const A=Object.keys(Ls);for(const s of A)Ls[s].id=s}T(Z8,"initVouchers");var FE=(E=>(E[E.PLAYER=0]="PLAYER",E[E.WILD=1]="WILD",E[E.TRAINER=2]="TRAINER",E[E.ENEMY_BUFF=3]="ENEMY_BUFF",E[E.DAILY_STARTER=4]="DAILY_STARTER",E))(FE||{});const df=class df{constructor(A,s,R,I,i){this.localeKey=A,this.iconImage=s,this.group=I,this.soundName=i??"se/restore",this.newModifierFunc=R}get name(){return U.t(`${this.localeKey}.name`)}getDescription(A){return U.t(`${this.localeKey}.description`)}setTier(A){this.tier=A}getOrInferTier(A=0){if(this.tier)return this.tier;if(!this.id)return null;let s;switch(A){case 0:s=[A,2,1];break;case 1:s=[A,0,2];break;case 2:s=[A,0,1];break;default:s=[A];break}for(const R of s){const I=PT(R);for(const i of IE(W))if(I.hasOwnProperty(i)&&I[i].find(a=>a.modifierType.id===this.id))return this.tier=i}return null}withIdFromFunc(A){return this.id=Object.keys(x).find(s=>x[s]===A),this}withTierFromPool(A=0){for(const s of Object.values(PT(A)))for(const R of s)if(this.id===R.modifierType.id)return this.tier=R.modifierType.tier,this;return this}newModifier(...A){return this.newModifierFunc&&this.newModifierFunc(this,A)}};T(df,"ModifierType");let xt=df;const ff=class ff extends xt{constructor(A){super(null,null,null),this.genTypeFunc=A}generateType(A,s){const R=this.genTypeFunc(A,s);return R&&(R.id=this.id,R.setTier(this.tier)),R}};T(ff,"ModifierTypeGenerator");let iE=ff;const Bf=class Bf extends xt{constructor(A,s,R){super("",A,(I,i)=>new _C(this,s,R),"pb","se/pb_bounce_1"),this.pokeballType=s,this.count=R}get name(){return U.t("modifierType:ModifierType.AddPokeballModifierType.name",{modifierCount:this.count,pokeballName:Al(this.pokeballType)})}getDescription(A){return U.t("modifierType:ModifierType.AddPokeballModifierType.description",{modifierCount:this.count,pokeballName:Al(this.pokeballType),catchRate:El(this.pokeballType)>-1?`${El(this.pokeballType)}x`:"100%",pokeballAmount:`${A.pokeballCounts[this.pokeballType]}`})}};T(Bf,"AddPokeballModifierType");let zI=Bf;const gf=class gf extends xt{constructor(A,s){super("",cn(A),(R,I)=>new HC(this,A,s),"voucher"),this.count=s,this.voucherType=A}get name(){return U.t("modifierType:ModifierType.AddVoucherModifierType.name",{modifierCount:this.count,voucherTypeName:Sl(this.voucherType)})}getDescription(A){return U.t("modifierType:ModifierType.AddVoucherModifierType.description",{modifierCount:this.count,voucherTypeName:Sl(this.voucherType)})}};T(gf,"AddVoucherModifierType");let lr=gf;const Kf=class Kf extends xt{constructor(A,s,R,I,i,a){super(A,s,R,i,a),this.selectFilter=I}};T(Kf,"PokemonModifierType");let RR=Kf;const Ff=class Ff extends RR{constructor(A,s,R,I,i){super(A,s,R,a=>{const L=this.newModifier(a),S=a.scene.findModifier(l=>l instanceof at&&l.pokemonId===a.id&&l.matchType(L)),o=L.getMaxStackCount(a.scene);return o?S&&S.stackCount===o?U.t("modifierType:ModifierType.PokemonHeldItemModifierType.extra.tooMany",{pokemonName:b(a)}):null:U.t("modifierType:ModifierType.PokemonHeldItemModifierType.extra.inoperable",{pokemonName:b(a)})},I,i)}newModifier(...A){return super.newModifier(...A)}};T(Ff,"PokemonHeldItemModifierType");let IA=Ff;const mf=class mf extends RR{constructor(A,s,R,I,i=!1,a,L,S){super(A,s,a||((o,l)=>new pI(this,l[0].id,this.restorePoints,this.restorePercent,this.healStatus,!1)),L||(o=>!o.hp||o.isFullHp()&&(!this.healStatus||!o.status&&!o.getTag(Y.CONFUSED))?HE.NoEffectMessage:null),S||"potion"),this.restorePoints=R,this.restorePercent=I,this.healStatus=i}getDescription(A){return this.restorePoints?U.t("modifierType:ModifierType.PokemonHpRestoreModifierType.description",{restorePoints:this.restorePoints,restorePercent:this.restorePercent}):this.healStatus?U.t("modifierType:ModifierType.PokemonHpRestoreModifierType.extra.fullyWithStatus"):U.t("modifierType:ModifierType.PokemonHpRestoreModifierType.extra.fully")}};T(mf,"PokemonHpRestoreModifierType");let lI=mf;const Wf=class Wf extends lI{constructor(A,s,R){super(A,s,0,R,!1,(I,i)=>new pI(this,i[0].id,0,this.restorePercent,!1,!0),I=>I.isFainted()?null:HE.NoEffectMessage,"revive"),this.selectFilter=I=>I.hp?HE.NoEffectMessage:null}getDescription(A){return U.t("modifierType:ModifierType.PokemonReviveModifierType.description",{restorePercent:this.restorePercent})}};T(Wf,"PokemonReviveModifierType");let ol=Wf;const Yf=class Yf extends RR{constructor(A,s){super(A,s,(R,I)=>new dC(this,I[0].id),R=>!R.hp||!R.status&&!R.getTag(Y.CONFUSED)?HE.NoEffectMessage:null)}getDescription(A){return U.t("modifierType:ModifierType.PokemonStatusHealModifierType.description")}};T(Yf,"PokemonStatusHealModifierType");let Nh=Yf;const pf=class pf extends RR{constructor(A,s,R,I,i,a){super(A,s,R,I,a),this.moveSelectFilter=i}};T(pf,"PokemonMoveModifierType");let aL=pf;const yf=class yf extends aL{constructor(A,s,R){super(A,s,(I,i)=>new fC(this,i[0].id,i[1],this.restorePoints),I=>null,I=>I.ppUsed?null:HE.NoEffectMessage,"ether"),this.restorePoints=R}getDescription(A){return this.restorePoints>-1?U.t("modifierType:ModifierType.PokemonPpRestoreModifierType.description",{restorePoints:this.restorePoints}):U.t("modifierType:ModifierType.PokemonPpRestoreModifierType.extra.fully")}};T(yf,"PokemonPpRestoreModifierType");let uT=yf;const wf=class wf extends RR{constructor(A,s,R){super(A,s,(I,i)=>new BC(this,i[0].id,this.restorePoints),I=>I.getMoveset().filter(i=>i==null?void 0:i.ppUsed).length?null:HE.NoEffectMessage,"elixir"),this.restorePoints=R}getDescription(A){return this.restorePoints>-1?U.t("modifierType:ModifierType.PokemonAllMovePpRestoreModifierType.description",{restorePoints:this.restorePoints}):U.t("modifierType:ModifierType.PokemonAllMovePpRestoreModifierType.extra.fully")}};T(wf,"PokemonAllMovePpRestoreModifierType");let ll=wf;const Vf=class Vf extends aL{constructor(A,s,R){super(A,s,(I,i)=>new gC(this,i[0].id,i[1],this.upPoints),I=>null,I=>I.getMove().pp<5||I.ppUp>=3||I.maxPpOverride?HE.NoEffectMessage:null,"ppUp"),this.upPoints=R}getDescription(A){return U.t("modifierType:ModifierType.PokemonPpUpModifierType.description",{upPoints:this.upPoints})}};T(Vf,"PokemonPpUpModifierType");let hT=Vf;const vf=class vf extends RR{constructor(A){var s;super("",`mint_${((s=tO(B).find(R=>So(A,B[R])>1))==null?void 0:s.toLowerCase())||"neutral"}`,(R,I)=>new KC(this,I[0].id,this.nature),R=>R.getNature()===this.nature?HE.NoEffectMessage:null,"mint"),this.nature=A}get name(){return U.t("modifierType:ModifierType.PokemonNatureChangeModifierType.name",{natureName:WO(this.nature)})}getDescription(A){return U.t("modifierType:ModifierType.PokemonNatureChangeModifierType.description",{natureName:WO(this.nature,!0,!0,!0)})}};T(vf,"PokemonNatureChangeModifierType");let Cl=vf;const xf=class xf extends RR{constructor(A,s,R){super(A,s,(I,i)=>new TS(I,i[0].id,i[1]),I=>I.getLearnableLevelMoves().length?null:HE.NoEffectMessage,R)}};T(xf,"RememberMoveModifierType");let ka=xf;const bf=class bf extends xt{constructor(A,s,R){super(A,s,(I,i)=>new cL(this,R),"lure"),this.maxBattles=R}getDescription(A){return U.t("modifierType:ModifierType.DoubleBattleChanceBoosterModifierType.description",{battleCount:this.maxBattles})}};T(bf,"DoubleBattleChanceBoosterModifierType");let Cr=bf;const kf=class kf extends xt{constructor(A){const s=dl.items[A];super("",s,(R,I)=>new GL(this,this.stat,5)),this.stat=A,this.nameKey=s,this.quantityKey=A!==B.ACC?"percentage":"stage"}get name(){return U.t(`modifierType:TempStatStageBoosterItem.${this.nameKey}`)}getDescription(A){return U.t("modifierType:ModifierType.TempStatStageBoosterModifierType.description",{stat:U.t(aE(this.stat)),amount:U.t(`modifierType:ModifierType.TempStatStageBoosterModifierType.extra.${this.quantityKey}`)})}getPregenArgs(){return[this.stat]}};T(kf,"TempStatStageBoosterModifierType");let Ul=kf;const Zf=class Zf extends IA{constructor(A){super("",`${nt[A].toLowerCase()}_berry`,(s,R)=>new _E(s,R[0].id,A),"berry"),this.berryType=A}get name(){return pG(this.berryType)}getDescription(A){return PX(this.berryType)}getPregenArgs(){return[this.berryType]}};T(Zf,"BerryModifierType");let cT=Zf;function xV(E){switch(E){case n.NORMAL:return"Silk Scarf";case n.FIGHTING:return"Black Belt";case n.FLYING:return"Sharp Beak";case n.POISON:return"Poison Barb";case n.GROUND:return"Soft Sand";case n.ROCK:return"Hard Stone";case n.BUG:return"Silver Powder";case n.GHOST:return"Spell Tag";case n.STEEL:return"Metal Coat";case n.FIRE:return"Charcoal";case n.WATER:return"Mystic Water";case n.GRASS:return"Miracle Seed";case n.ELECTRIC:return"Magnet";case n.PSYCHIC:return"Twisted Spoon";case n.ICE:return"Never-Melt Ice";case n.DRAGON:return"Dragon Fang";case n.DARK:return"Black Glasses";case n.FAIRY:return"Fairy Feather"}}T(xV,"getAttackTypeBoosterItemName");const Xf=class Xf extends IA{constructor(A,s){var R;super("",`${(R=xV(A))==null?void 0:R.replace(/[ \-]/g,"_").toLowerCase()}`,(I,i)=>new an(this,i[0].id,A,s)),this.moveType=A,this.boostPercent=s}get name(){var A;return U.t(`modifierType:AttackTypeBoosterItem.${(A=xV(this.moveType))==null?void 0:A.replace(/[ \-]/g,"_").toLowerCase()}`)}getDescription(A){return U.t("modifierType:ModifierType.AttackTypeBoosterModifierType.description",{moveType:U.t(`pokemonInfo:Type.${n[this.moveType]}`)})}getPregenArgs(){return[this.moveType]}};T(Xf,"AttackTypeBoosterModifierType");let Dl=Xf;const Qf=class Qf extends IA{constructor(A){const s=fl.items[A];super(`modifierType:SpeciesBoosterItem.${A}`,A.toLowerCase(),(R,I)=>new Zi(R,I[0].id,s.stats,s.multiplier,s.species)),this.key=A}getPregenArgs(){return[this.key]}};T(Qf,"SpeciesStatBoosterModifierType");let Ml=Qf;const Jf=class Jf extends RR{constructor(A,s){super(A,s,(R,I)=>new NS(this,I[0].id),R=>null)}getDescription(A){let s=1;const R=A.modifiers.find(I=>I instanceof YI);return R&&(s+=R.stackCount),U.t("modifierType:ModifierType.PokemonLevelIncrementModifierType.description",{levels:s})}};T(Jf,"PokemonLevelIncrementModifierType");let Th=Jf;const $f=class $f extends xt{constructor(A,s){super(A,s,(R,I)=>new NS(this,-1))}getDescription(A){let s=1;const R=A.modifiers.find(I=>I instanceof YI);return R&&(s+=R.stackCount),U.t("modifierType:ModifierType.AllPokemonLevelIncrementModifierType.description",{levels:s})}};T($f,"AllPokemonLevelIncrementModifierType");let Sh=$f;const qf=class qf extends IA{constructor(A){const s=Hl.items[A];super("",s,(R,I)=>new sS(this,I[0].id,this.stat)),this.stat=A,this.key=s}get name(){return U.t(`modifierType:BaseStatBoosterItem.${this.key}`)}getDescription(A){return U.t("modifierType:ModifierType.BaseStatBoosterModifierType.description",{stat:U.t(aE(this.stat))})}getPregenArgs(){return[this.stat]}};T(qf,"BaseStatBoosterModifierType");let ul=qf;const jf=class jf extends IA{constructor(A){super("modifierType:ModifierType.MYSTERY_ENCOUNTER_SHUCKLE_JUICE","berry_juice",(s,R)=>new OS(this,R[0].id,this.statModifier)),this.statModifier=A}getDescription(A){return U.t("modifierType:ModifierType.PokemonBaseStatTotalModifierType.description",{increaseDecrease:U.t(this.statModifier>=0?"modifierType:ModifierType.PokemonBaseStatTotalModifierType.extra.increase":"modifierType:ModifierType.PokemonBaseStatTotalModifierType.extra.decrease"),blessCurse:U.t(this.statModifier>=0?"modifierType:ModifierType.PokemonBaseStatTotalModifierType.extra.blessed":"modifierType:ModifierType.PokemonBaseStatTotalModifierType.extra.cursed"),statValue:this.statModifier})}getPregenArgs(){return[this.statModifier]}};T(jf,"PokemonBaseStatTotalModifierType");let hl=jf;const zf=class zf extends IA{constructor(A,s){super("modifierType:ModifierType.MYSTERY_ENCOUNTER_OLD_GATEAU","old_gateau",(R,I)=>new nS(this,I[0].id,this.statModifier,this.stats)),this.statModifier=A,this.stats=s}getDescription(A){return U.t("modifierType:ModifierType.PokemonBaseStatFlatModifierType.description",{stats:this.stats.map(s=>U.t(aE(s))).join("/"),statValue:this.statModifier})}getPregenArgs(){return[this.statModifier,this.stats]}};T(zf,"PokemonBaseStatFlatModifierType");let cl=zf;const eB=class eB extends xt{constructor(A,s,R,I){super(A,s,I||((i,a)=>new pI(this,-1,0,100,!1))),this.descriptionKey=R}getDescription(A){return U.t(`${this.descriptionKey||"modifierType:ModifierType.AllPokemonFullHpRestoreModifierType"}.description`)}};T(eB,"AllPokemonFullHpRestoreModifierType");let oh=eB;const tB=class tB extends oh{constructor(A,s){super(A,s,"modifierType:ModifierType.AllPokemonFullReviveModifierType",(R,I)=>new pI(this,-1,0,100,!1,!0))}};T(tB,"AllPokemonFullReviveModifierType");let lh=tB;const AB=class AB extends xt{constructor(A,s,R,I){super(A,s,(i,a)=>new WC(this,R),"money","se/buy"),this.moneyMultiplier=R,this.moneyMultiplierDescriptorKey=I}getDescription(A){const s=new Jt(A.getWaveMoneyAmount(this.moneyMultiplier));A.applyModifiers(cR,!0,s);const R=To(A.moneyFormat,s.value);return U.t("modifierType:ModifierType.MoneyRewardModifierType.description",{moneyMultiplier:U.t(this.moneyMultiplierDescriptorKey),moneyAmount:R})}};T(AB,"MoneyRewardModifierType");let Ur=AB;const EB=class EB extends xt{constructor(A,s,R){super(A,s,()=>new KL(this,R)),this.boostPercent=R}getDescription(A){return U.t("modifierType:ModifierType.ExpBoosterModifierType.description",{boostPercent:this.boostPercent})}};T(EB,"ExpBoosterModifierType");let Dr=EB;const sB=class sB extends IA{constructor(A,s,R){super(A,s,(I,i)=>new lS(this,i[0].id,R)),this.boostPercent=R}getDescription(A){return U.t("modifierType:ModifierType.PokemonExpBoosterModifierType.description",{boostPercent:this.boostPercent})}};T(sB,"PokemonExpBoosterModifierType");let Gl=sB;const RB=class RB extends IA{constructor(A,s){super(A,s,(R,I)=>new FL(this,I[0].id))}getDescription(A){return U.t("modifierType:ModifierType.PokemonFriendshipBoosterModifierType.description")}};T(RB,"PokemonFriendshipBoosterModifierType");let Ch=RB;const OB=class OB extends IA{constructor(A,s,R,I,i){super(A,s,(a,L)=>new MS(this,L[0].id,R),I,i),this.amount=R}getDescription(A){return U.t("modifierType:ModifierType.PokemonMoveAccuracyBoosterModifierType.description",{accuracyAmount:this.amount})}};T(OB,"PokemonMoveAccuracyBoosterModifierType");let Uh=OB;const nB=class nB extends IA{constructor(A,s){super(A,s,(R,I)=>new ji(R,I[0].id))}getDescription(A){return U.t("modifierType:ModifierType.PokemonMultiHitModifierType.description")}};T(nB,"PokemonMultiHitModifierType");let Dh=nB;const IB=class IB extends RR{constructor(A){super("",`tm_${n[He[A].type].toLowerCase()}`,(s,R)=>new FC(this,R[0].id),s=>s.compatibleTms.indexOf(A)===-1||s.getMoveset().filter(R=>(R==null?void 0:R.moveId)===A).length?HE.NoEffectMessage:null,"tm"),this.moveId=A}get name(){return U.t("modifierType:ModifierType.TmModifierType.name",{moveId:An(Object.keys(gi).indexOf(this.moveId.toString())+1,3),moveName:He[this.moveId].name})}getDescription(A){return U.t(A.enableMoveInfo?"modifierType:ModifierType.TmModifierTypeWithInfo.description":"modifierType:ModifierType.TmModifierType.description",{moveName:He[this.moveId].name})}};T(IB,"TmModifierType");let Fi=IB;const iB=class iB extends RR{constructor(A){super("",sL[A].toLowerCase(),(s,R)=>new mC(this,R[0].id),s=>Ht.hasOwnProperty(s.species.speciesId)&&Ht[s.species.speciesId].filter(R=>R.item===this.evolutionItem&&(!R.condition||R.condition.predicate(s))&&(R.preFormKey===null||R.preFormKey===s.getFormKey())).length&&s.getFormKey()!==Ee.GIGANTAMAX||s.isFusion()&&s.fusionSpecies&&Ht.hasOwnProperty(s.fusionSpecies.speciesId)&&Ht[s.fusionSpecies.speciesId].filter(R=>R.item===this.evolutionItem&&(!R.condition||R.condition.predicate(s))&&(R.preFormKey===null||R.preFormKey===s.getFusionFormKey())).length&&s.getFusionFormKey()!==Ee.GIGANTAMAX?null:HE.NoEffectMessage),this.evolutionItem=A}get name(){return U.t(`modifierType:EvolutionItem.${sL[this.evolutionItem]}`)}getDescription(A){return U.t("modifierType:ModifierType.EvolutionItemModifierType.description")}getPregenArgs(){return[this.evolutionItem]}};T(iB,"EvolutionItemModifierType");let Pl=iB;const aB=class aB extends RR{constructor(A){super("",YR[A].toLowerCase(),(s,R)=>new AR(this,R[0].id,A,!0),s=>mO.hasOwnProperty(s.species.speciesId)&&mO[s.species.speciesId].filter(R=>R.trigger.hasTriggerType(Ce)&&R.preFormKey===s.getFormKey()).map(R=>R.findTrigger(Ce)).flat().flatMap(R=>R.item).includes(this.formChangeItem)?null:HE.NoEffectMessage),this.formChangeItem=A}get name(){return U.t(`modifierType:FormChangeItem.${YR[this.formChangeItem]}`)}getDescription(A){return U.t("modifierType:ModifierType.FormChangeItemModifierType.description")}getPregenArgs(){return[this.formChangeItem]}};T(aB,"FormChangeItemModifierType");let GT=aB;const LB=class LB extends RR{constructor(A,s){super(A,s,(R,I)=>new SS(this,I[0].id,I[1].id),R=>R.isFusion()?HE.NoEffectMessage:null)}getDescription(A){return U.t("modifierType:ModifierType.FusePokemonModifierType.description")}};T(LB,"FusePokemonModifierType");let _l=LB;const rB=class rB extends iE{constructor(){super((A,s)=>{if(s&&s.length===1&&s[0]in n)return new Dl(s[0],20);const R=A.map(o=>o.getMoveset().map(l=>l==null?void 0:l.getMove()).filter(l=>l instanceof d).map(l=>l.type)).flat();if(!R.length)return null;const I=new Map;let i=0;for(const o of R){if(I.has(o))if(I.get(o)<3)I.set(o,I.get(o)+1);else continue;else I.set(o,1);i++}if(!i)return null;let a;const L=le(i);let S=0;for(const o of I.keys()){const l=I.get(o);if(L<=S+l){a=o;break}S+=l}return new Dl(a,20)})}};T(rB,"AttackTypeBoosterModifierTypeGenerator");let Mh=rB;const OM=class OM extends iE{constructor(){super((A,s)=>{if(s)return new ul(s[0]);const R=le(B.SPD+1);return new ul(R)})}};T(OM,"BaseStatBoosterModifierTypeGenerator"),OM.items={[B.HP]:"hp_up",[B.ATK]:"protein",[B.DEF]:"iron",[B.SPATK]:"calcium",[B.SPDEF]:"zinc",[B.SPD]:"carbos"};let Hl=OM;const nM=class nM extends iE{constructor(){super((A,s)=>{if(s&&s.length===1&&zx.includes(s[0]))return new Ul(s[0]);const R=le(B.ACC,B.ATK);return new Ul(R)})}};T(nM,"TempStatStageBoosterModifierTypeGenerator"),nM.items={[B.ATK]:"x_attack",[B.DEF]:"x_defense",[B.SPATK]:"x_sp_atk",[B.SPDEF]:"x_sp_def",[B.SPD]:"x_speed",[B.ACC]:"x_accuracy"};let dl=nM;const tN=class tN extends iE{constructor(){super((A,s)=>{const R=tN.items;if(s&&s.length===1&&s[0]in R)return new Ml(s[0]);const I=Object.values(R),i=Object.keys(R),a=i.map(()=>0);for(const S of A){const o=S.getSpeciesForm(!0).speciesId,l=S.isFusion()?S.getFusionSpeciesForm(!0).speciesId:null,D=S.getMoveset(!0).some(M=>(M==null?void 0:M.moveId)===t.FLING);for(const M in I){const c=I[M].species,G=I[M].stats;S.getHeldItems().some(_=>_ instanceof Zi&&_.contains(c[0],G[0]))||(c.includes(o)||l&&c.includes(l)||c.includes(e.PIKACHU)&&D)&&a[M]++}}let L=0;for(const S of a)L+=S;if(L!==0){const S=le(L,1);let o=0;for(const l in a)if(a[l]!==0){const D=o+a[l];if(S<=o+a[l])return new Ml(i[l]);o=D}}return null})}};T(tN,"SpeciesStatBoosterModifierTypeGenerator"),tN.items={LIGHT_BALL:{stats:[B.ATK,B.SPATK],multiplier:2,species:[e.PIKACHU]},THICK_CLUB:{stats:[B.ATK],multiplier:2,species:[e.CUBONE,e.MAROWAK,e.ALOLA_MAROWAK]},METAL_POWDER:{stats:[B.DEF],multiplier:2,species:[e.DITTO]},QUICK_POWDER:{stats:[B.SPD],multiplier:2,species:[e.DITTO]}};let fl=tN;const NB=class NB extends iE{constructor(A){super((s,R)=>{if(R&&R.length===1&&R[0]in t)return new Fi(R[0]);const i=s.map(L=>L.compatibleTms.filter(S=>!L.moveset.find(o=>(o==null?void 0:o.moveId)===S))).flat().filter(L=>Xo[L]===A).filter(L=>!He[L].name.endsWith(" (N)")).filter((L,S,o)=>o.indexOf(L)===S);if(!i.length)return null;const a=le(i.length);return new Fi(i[a])})}};T(NB,"TmModifierTypeGenerator");let Mr=NB;const TB=class TB extends iE{constructor(A){super((s,R)=>{if(R&&R.length===1&&R[0]in sL)return new Pl(R[0]);const I=[s.filter(i=>Ht.hasOwnProperty(i.species.speciesId)&&(!i.pauseEvolutions||i.species.speciesId===e.SLOWPOKE||i.species.speciesId===e.EEVEE)).map(i=>Ht[i.species.speciesId].filter(L=>L.item!==sL.NONE&&(L.evoFormKey===null||(L.preFormKey||"")===i.getFormKey())&&(!L.condition||L.condition.predicate(i)))).flat(),s.filter(i=>i.isFusion()&&i.fusionSpecies&&Ht.hasOwnProperty(i.fusionSpecies.speciesId)&&(!i.pauseEvolutions||i.fusionSpecies.speciesId===e.SLOWPOKE||i.fusionSpecies.speciesId===e.EEVEE)).map(i=>Ht[i.fusionSpecies.speciesId].filter(L=>L.item!==sL.NONE&&(L.evoFormKey===null||(L.preFormKey||"")===i.getFusionFormKey())&&(!L.condition||L.condition.predicate(i)))).flat()].flat().flatMap(i=>i.item).filter(i=>(!!i&&i>50)===A);return I.length?new Pl(I[le(I.length)]):null})}};T(TB,"EvolutionItemModifierTypeGenerator");let Bl=TB;const SB=class SB extends iE{constructor(A){super((s,R)=>{if(R&&R.length===1&&R[0]in YR)return new GT(R[0]);const I=[...new Set(s.filter(i=>mO.hasOwnProperty(i.species.speciesId)).map(i=>{let L=mO[i.species.speciesId].filter(S=>(S.formKey.indexOf(Ee.MEGA)===-1&&S.formKey.indexOf(Ee.PRIMAL)===-1||s[0].scene.getModifiers(PL).length)&&(S.formKey.indexOf(Ee.GIGANTAMAX)===-1&&S.formKey.indexOf(Ee.ETERNAMAX)===-1||s[0].scene.getModifiers(_L).length)&&(!S.conditions.length||S.conditions.filter(o=>o instanceof KR&&o.predicate(i)).length)&&S.preFormKey===i.getFormKey()).map(S=>S.findTrigger(Ce)).filter(S=>S&&S.active&&!i.scene.findModifier(o=>o instanceof AR&&o.pokemonId===i.id&&o.formChangeItem===S.item));if(i.species.speciesId===e.NECROZMA){let S=!1,o=!1,l=!1;L.forEach((D,M)=>{switch(D.item){case YR.ULTRANECROZIUM_Z:S=!0;break;case YR.N_LUNARIZER:o=!0;break;case YR.N_SOLARIZER:l=!0;break}}),S&&o&&l&&(L=L.filter(D=>D.item!==YR.ULTRANECROZIUM_Z))}return L}).flat())].flat().flatMap(i=>i.item).filter(i=>(i&&i<100)===A);return I.length?new GT(I[le(I.length)]):null})}};T(SB,"FormChangeItemModifierTypeGenerator");let gl=SB;const oB=class oB extends IA{constructor(A){super("",`${n[A].toLowerCase()}_tera_shard`,(s,R)=>new zs(s,R[0].id,A),"tera_shard"),this.teraType=A}get name(){return U.t("modifierType:ModifierType.TerastallizeModifierType.name",{teraType:U.t(`pokemonInfo:Type.${n[this.teraType]}`)})}getDescription(A){return U.t("modifierType:ModifierType.TerastallizeModifierType.description",{teraType:U.t(`pokemonInfo:Type.${n[this.teraType]}`)})}getPregenArgs(){return[this.teraType]}};T(oB,"TerastallizeModifierType");let Kl=oB;const lB=class lB extends IA{constructor(A,s,R,I,i){super(A,s,(a,L)=>new ta(a,L[0].id,R),I,i),this.chancePercent=R}getDescription(A){return U.t("modifierType:ModifierType.ContactHeldItemTransferChanceModifierType.description",{chancePercent:this.chancePercent})}};T(lB,"ContactHeldItemTransferChanceModifierType");let uh=lB;const CB=class CB extends IA{constructor(A,s,R,I){super(A,s,(i,a)=>new ea(i,a[0].id),R,I)}getDescription(A){return U.t("modifierType:ModifierType.TurnHeldItemTransferModifierType.description")}};T(CB,"TurnHeldItemTransferModifierType");let hh=CB;const UB=class UB extends xt{constructor(A,s,R,I,i){super(A,s,(a,L)=>new mL(a,I,R,i),"enemy_status_chance"),this.chancePercent=R,this.effect=I}getDescription(A){return U.t("modifierType:ModifierType.EnemyAttackStatusEffectChanceModifierType.description",{chancePercent:this.chancePercent,statusEffect:qx(this.effect)})}};T(UB,"EnemyAttackStatusEffectChanceModifierType");let ur=UB;const DB=class DB extends xt{constructor(A,s,R){super(A,s,(I,i)=>new fS(I,R),"enemy_endure"),this.chancePercent=R}getDescription(A){return U.t("modifierType:ModifierType.EnemyEndureChanceModifierType.description",{chancePercent:this.chancePercent})}};T(DB,"EnemyEndureChanceModifierType");let ch=DB;function n6(E,A){return s=>{const R=s[0].scene.gameMode,I=s[0].scene.currentBattle.waveIndex;return R.isClassic&&I>=E?0:A}}T(n6,"skipInClassicAfterWave");function TO(E){return n6(199,E)}T(TO,"skipInLastClassicWaveOrDefault");function kM(E,A){return s=>{const R=s[0].scene.getModifiers(cL);return!(s[0].scene.gameMode.isClassic&&s[0].scene.currentBattle.waveIndex===199)&&(R.length===0||R.filter(I=>I.getMaxBattles()===E&&I.getBattleCount()>=E*.6).length===0)?A:0}}T(kM,"lureWeightFunc");const MB=class MB{constructor(A,s,R){this.modifierType=A(),this.modifierType.id=Object.keys(x).find(I=>x[I]===A),this.weight=s,this.maxWeight=R||(s instanceof Function?0:s)}setTier(A){this.modifierType.setTier(A)}};T(MB,"WeightedModifierType");let ue=MB;const x={POKEBALL:T(()=>new zI("pb",ge.POKEBALL,5),"POKEBALL"),GREAT_BALL:T(()=>new zI("gb",ge.GREAT_BALL,5),"GREAT_BALL"),ULTRA_BALL:T(()=>new zI("ub",ge.ULTRA_BALL,5),"ULTRA_BALL"),ROGUE_BALL:T(()=>new zI("rb",ge.ROGUE_BALL,5),"ROGUE_BALL"),MASTER_BALL:T(()=>new zI("mb",ge.MASTER_BALL,1),"MASTER_BALL"),RARE_CANDY:T(()=>new Th("modifierType:ModifierType.RARE_CANDY","rare_candy"),"RARE_CANDY"),RARER_CANDY:T(()=>new Sh("modifierType:ModifierType.RARER_CANDY","rarer_candy"),"RARER_CANDY"),EVOLUTION_ITEM:T(()=>new Bl(!1),"EVOLUTION_ITEM"),RARE_EVOLUTION_ITEM:T(()=>new Bl(!0),"RARE_EVOLUTION_ITEM"),FORM_CHANGE_ITEM:T(()=>new gl(!1),"FORM_CHANGE_ITEM"),RARE_FORM_CHANGE_ITEM:T(()=>new gl(!0),"RARE_FORM_CHANGE_ITEM"),EVOLUTION_TRACKER_GIMMIGHOUL:T(()=>new IA("modifierType:ModifierType.EVOLUTION_TRACKER_GIMMIGHOUL","relic_gold",(E,A)=>new RS(E,A[0].id,e.GIMMIGHOUL,10)),"EVOLUTION_TRACKER_GIMMIGHOUL"),MEGA_BRACELET:T(()=>new xt("modifierType:ModifierType.MEGA_BRACELET","mega_bracelet",(E,A)=>new PL(E)),"MEGA_BRACELET"),DYNAMAX_BAND:T(()=>new xt("modifierType:ModifierType.DYNAMAX_BAND","dynamax_band",(E,A)=>new _L(E)),"DYNAMAX_BAND"),TERA_ORB:T(()=>new xt("modifierType:ModifierType.TERA_ORB","tera_orb",(E,A)=>new ES(E)),"TERA_ORB"),MAP:T(()=>new xt("modifierType:ModifierType.MAP","map",(E,A)=>new AS(E)),"MAP"),POTION:T(()=>new lI("modifierType:ModifierType.POTION","potion",20,10),"POTION"),SUPER_POTION:T(()=>new lI("modifierType:ModifierType.SUPER_POTION","super_potion",50,25),"SUPER_POTION"),HYPER_POTION:T(()=>new lI("modifierType:ModifierType.HYPER_POTION","hyper_potion",200,50),"HYPER_POTION"),MAX_POTION:T(()=>new lI("modifierType:ModifierType.MAX_POTION","max_potion",0,100),"MAX_POTION"),FULL_RESTORE:T(()=>new lI("modifierType:ModifierType.FULL_RESTORE","full_restore",0,100,!0),"FULL_RESTORE"),REVIVE:T(()=>new ol("modifierType:ModifierType.REVIVE","revive",50),"REVIVE"),MAX_REVIVE:T(()=>new ol("modifierType:ModifierType.MAX_REVIVE","max_revive",100),"MAX_REVIVE"),FULL_HEAL:T(()=>new Nh("modifierType:ModifierType.FULL_HEAL","full_heal"),"FULL_HEAL"),SACRED_ASH:T(()=>new lh("modifierType:ModifierType.SACRED_ASH","sacred_ash"),"SACRED_ASH"),REVIVER_SEED:T(()=>new IA("modifierType:ModifierType.REVIVER_SEED","reviver_seed",(E,A)=>new BL(E,A[0].id)),"REVIVER_SEED"),WHITE_HERB:T(()=>new IA("modifierType:ModifierType.WHITE_HERB","white_herb",(E,A)=>new gL(E,A[0].id)),"WHITE_HERB"),ETHER:T(()=>new uT("modifierType:ModifierType.ETHER","ether",10),"ETHER"),MAX_ETHER:T(()=>new uT("modifierType:ModifierType.MAX_ETHER","max_ether",-1),"MAX_ETHER"),ELIXIR:T(()=>new ll("modifierType:ModifierType.ELIXIR","elixir",10),"ELIXIR"),MAX_ELIXIR:T(()=>new ll("modifierType:ModifierType.MAX_ELIXIR","max_elixir",-1),"MAX_ELIXIR"),PP_UP:T(()=>new hT("modifierType:ModifierType.PP_UP","pp_up",1),"PP_UP"),PP_MAX:T(()=>new hT("modifierType:ModifierType.PP_MAX","pp_max",3),"PP_MAX"),LURE:T(()=>new Cr("modifierType:ModifierType.LURE","lure",10),"LURE"),SUPER_LURE:T(()=>new Cr("modifierType:ModifierType.SUPER_LURE","super_lure",15),"SUPER_LURE"),MAX_LURE:T(()=>new Cr("modifierType:ModifierType.MAX_LURE","max_lure",30),"MAX_LURE"),SPECIES_STAT_BOOSTER:T(()=>new fl,"SPECIES_STAT_BOOSTER"),TEMP_STAT_STAGE_BOOSTER:T(()=>new dl,"TEMP_STAT_STAGE_BOOSTER"),DIRE_HIT:T(()=>new class extends xt{getDescription(E){return U.t("modifierType:ModifierType.TempStatStageBoosterModifierType.description",{stat:U.t("modifierType:ModifierType.DIRE_HIT.extra.raises"),amount:U.t("modifierType:ModifierType.TempStatStageBoosterModifierType.extra.stage")})}}("modifierType:ModifierType.DIRE_HIT","dire_hit",(E,A)=>new tS(E,5)),"DIRE_HIT"),BASE_STAT_BOOSTER:T(()=>new Hl,"BASE_STAT_BOOSTER"),ATTACK_TYPE_BOOSTER:T(()=>new Mh,"ATTACK_TYPE_BOOSTER"),MINT:T(()=>new iE((E,A)=>A&&A.length===1&&A[0]in be?new Cl(A[0]):new Cl(le(IE(be).length))),"MINT"),TERA_SHARD:T(()=>new iE((E,A)=>{if(A&&A.length===1&&A[0]in n)return new Kl(A[0]);if(!E[0].scene.getModifiers(ES).length)return null;let s;if(le(3))s=le(64)?le(18):n.STELLAR;else{const R=E.map(I=>I.getTypes(!1,!1,!0)).flat();s=RE(R)}return new Kl(s)}),"TERA_SHARD"),BERRY:T(()=>new iE((E,A)=>{if(A&&A.length===1&&A[0]in nt)return new cT(A[0]);const s=IE(nt);let R;const I=le(12);return I<2?R=nt.SITRUS:I<4?R=nt.LUM:I<6?R=nt.LEPPA:R=s[le(s.length-3)+2],new cT(R)}),"BERRY"),TM_COMMON:T(()=>new Mr(W.COMMON),"TM_COMMON"),TM_GREAT:T(()=>new Mr(W.GREAT),"TM_GREAT"),TM_ULTRA:T(()=>new Mr(W.ULTRA),"TM_ULTRA"),MEMORY_MUSHROOM:T(()=>new ka("modifierType:ModifierType.MEMORY_MUSHROOM","big_mushroom"),"MEMORY_MUSHROOM"),EXP_SHARE:T(()=>new xt("modifierType:ModifierType.EXP_SHARE","exp_share",(E,A)=>new CS(E)),"EXP_SHARE"),EXP_BALANCE:T(()=>new xt("modifierType:ModifierType.EXP_BALANCE","exp_balance",(E,A)=>new US(E)),"EXP_BALANCE"),OVAL_CHARM:T(()=>new xt("modifierType:ModifierType.OVAL_CHARM","oval_charm",(E,A)=>new oS(E)),"OVAL_CHARM"),EXP_CHARM:T(()=>new Dr("modifierType:ModifierType.EXP_CHARM","exp_charm",25),"EXP_CHARM"),SUPER_EXP_CHARM:T(()=>new Dr("modifierType:ModifierType.SUPER_EXP_CHARM","super_exp_charm",60),"SUPER_EXP_CHARM"),GOLDEN_EXP_CHARM:T(()=>new Dr("modifierType:ModifierType.GOLDEN_EXP_CHARM","golden_exp_charm",100),"GOLDEN_EXP_CHARM"),LUCKY_EGG:T(()=>new Gl("modifierType:ModifierType.LUCKY_EGG","lucky_egg",40),"LUCKY_EGG"),GOLDEN_EGG:T(()=>new Gl("modifierType:ModifierType.GOLDEN_EGG","golden_egg",100),"GOLDEN_EGG"),SOOTHE_BELL:T(()=>new Ch("modifierType:ModifierType.SOOTHE_BELL","soothe_bell"),"SOOTHE_BELL"),SCOPE_LENS:T(()=>new IA("modifierType:ModifierType.SCOPE_LENS","scope_lens",(E,A)=>new fL(E,A[0].id,1)),"SCOPE_LENS"),LEEK:T(()=>new IA("modifierType:ModifierType.LEEK","leek",(E,A)=>new iS(E,A[0].id,2,[e.FARFETCHD,e.GALAR_FARFETCHD,e.SIRFETCHD])),"LEEK"),EVIOLITE:T(()=>new IA("modifierType:ModifierType.EVIOLITE","eviolite",(E,A)=>new IS(E,A[0].id,[B.DEF,B.SPDEF],1.5)),"EVIOLITE"),SOUL_DEW:T(()=>new IA("modifierType:ModifierType.SOUL_DEW","soul_dew",(E,A)=>new DS(E,A[0].id)),"SOUL_DEW"),NUGGET:T(()=>new Ur("modifierType:ModifierType.NUGGET","nugget",1,"modifierType:ModifierType.MoneyRewardModifierType.extra.small"),"NUGGET"),BIG_NUGGET:T(()=>new Ur("modifierType:ModifierType.BIG_NUGGET","big_nugget",2.5,"modifierType:ModifierType.MoneyRewardModifierType.extra.moderate"),"BIG_NUGGET"),RELIC_GOLD:T(()=>new Ur("modifierType:ModifierType.RELIC_GOLD","relic_gold",10,"modifierType:ModifierType.MoneyRewardModifierType.extra.large"),"RELIC_GOLD"),AMULET_COIN:T(()=>new xt("modifierType:ModifierType.AMULET_COIN","amulet_coin",(E,A)=>new cR(E)),"AMULET_COIN"),GOLDEN_PUNCH:T(()=>new IA("modifierType:ModifierType.GOLDEN_PUNCH","golden_punch",(E,A)=>new Yn(E,A[0].id)),"GOLDEN_PUNCH"),COIN_CASE:T(()=>new xt("modifierType:ModifierType.COIN_CASE","coin_case",(E,A)=>new uS(E)),"COIN_CASE"),LOCK_CAPSULE:T(()=>new xt("modifierType:ModifierType.LOCK_CAPSULE","lock_capsule",(E,A)=>new hS(E)),"LOCK_CAPSULE"),GRIP_CLAW:T(()=>new uh("modifierType:ModifierType.GRIP_CLAW","grip_claw",10),"GRIP_CLAW"),WIDE_LENS:T(()=>new Uh("modifierType:ModifierType.WIDE_LENS","wide_lens",5),"WIDE_LENS"),MULTI_LENS:T(()=>new Dh("modifierType:ModifierType.MULTI_LENS","zoom_lens"),"MULTI_LENS"),HEALING_CHARM:T(()=>new xt("modifierType:ModifierType.HEALING_CHARM","healing_charm",(E,A)=>new qi(E,1.1)),"HEALING_CHARM"),CANDY_JAR:T(()=>new xt("modifierType:ModifierType.CANDY_JAR","candy_jar",(E,A)=>new YI(E)),"CANDY_JAR"),BERRY_POUCH:T(()=>new xt("modifierType:ModifierType.BERRY_POUCH","berry_pouch",(E,A)=>new $i(E)),"BERRY_POUCH"),FOCUS_BAND:T(()=>new IA("modifierType:ModifierType.FOCUS_BAND","focus_band",(E,A)=>new aS(E,A[0].id)),"FOCUS_BAND"),QUICK_CLAW:T(()=>new IA("modifierType:ModifierType.QUICK_CLAW","quick_claw",(E,A)=>new Xi(E,A[0].id)),"QUICK_CLAW"),KINGS_ROCK:T(()=>new IA("modifierType:ModifierType.KINGS_ROCK","kings_rock",(E,A)=>new LS(E,A[0].id)),"KINGS_ROCK"),LEFTOVERS:T(()=>new IA("modifierType:ModifierType.LEFTOVERS","leftovers",(E,A)=>new Qi(E,A[0].id)),"LEFTOVERS"),SHELL_BELL:T(()=>new IA("modifierType:ModifierType.SHELL_BELL","shell_bell",(E,A)=>new Ji(E,A[0].id)),"SHELL_BELL"),TOXIC_ORB:T(()=>new IA("modifierType:ModifierType.TOXIC_ORB","toxic_orb",(E,A)=>new nn(E,A[0].id)),"TOXIC_ORB"),FLAME_ORB:T(()=>new IA("modifierType:ModifierType.FLAME_ORB","flame_orb",(E,A)=>new nn(E,A[0].id)),"FLAME_ORB"),BATON:T(()=>new IA("modifierType:ModifierType.BATON","baton",(E,A)=>new _I(E,A[0].id)),"BATON"),SHINY_CHARM:T(()=>new xt("modifierType:ModifierType.SHINY_CHARM","shiny_charm",(E,A)=>new zi(E)),"SHINY_CHARM"),ABILITY_CHARM:T(()=>new xt("modifierType:ModifierType.ABILITY_CHARM","ability_charm",(E,A)=>new pn(E)),"ABILITY_CHARM"),IV_SCANNER:T(()=>new xt("modifierType:ModifierType.IV_SCANNER","scanner",(E,A)=>new Aa(E)),"IV_SCANNER"),DNA_SPLICERS:T(()=>new _l("modifierType:ModifierType.DNA_SPLICERS","dna_splicers"),"DNA_SPLICERS"),MINI_BLACK_HOLE:T(()=>new hh("modifierType:ModifierType.MINI_BLACK_HOLE","mini_black_hole"),"MINI_BLACK_HOLE"),VOUCHER:T(()=>new lr($A.REGULAR,1),"VOUCHER"),VOUCHER_PLUS:T(()=>new lr($A.PLUS,1),"VOUCHER_PLUS"),VOUCHER_PREMIUM:T(()=>new lr($A.PREMIUM,1),"VOUCHER_PREMIUM"),GOLDEN_POKEBALL:T(()=>new xt("modifierType:ModifierType.GOLDEN_POKEBALL","pb_gold",(E,A)=>new yn(E),void 0,"se/pb_bounce_1"),"GOLDEN_POKEBALL"),SILVER_POKEBALL:T(()=>new xt("modifierType:ModifierType.SILVER_POKEBALL","pb_silver",(E,A)=>new wn(E,100),void 0,"se/pb_bounce_1"),"SILVER_POKEBALL"),ENEMY_DAMAGE_BOOSTER:T(()=>new xt("modifierType:ModifierType.ENEMY_DAMAGE_BOOSTER","wl_item_drop",(E,A)=>new PS(E,5)),"ENEMY_DAMAGE_BOOSTER"),ENEMY_DAMAGE_REDUCTION:T(()=>new xt("modifierType:ModifierType.ENEMY_DAMAGE_REDUCTION","wl_guard_spec",(E,A)=>new _S(E,2.5)),"ENEMY_DAMAGE_REDUCTION"),ENEMY_HEAL:T(()=>new xt("modifierType:ModifierType.ENEMY_HEAL","wl_potion",(E,A)=>new HS(E,2,10)),"ENEMY_HEAL"),ENEMY_ATTACK_POISON_CHANCE:T(()=>new ur("modifierType:ModifierType.ENEMY_ATTACK_POISON_CHANCE","wl_antidote",5,J.POISON,10),"ENEMY_ATTACK_POISON_CHANCE"),ENEMY_ATTACK_PARALYZE_CHANCE:T(()=>new ur("modifierType:ModifierType.ENEMY_ATTACK_PARALYZE_CHANCE","wl_paralyze_heal",2.5,J.PARALYSIS,10),"ENEMY_ATTACK_PARALYZE_CHANCE"),ENEMY_ATTACK_BURN_CHANCE:T(()=>new ur("modifierType:ModifierType.ENEMY_ATTACK_BURN_CHANCE","wl_burn_heal",5,J.BURN,10),"ENEMY_ATTACK_BURN_CHANCE"),ENEMY_STATUS_EFFECT_HEAL_CHANCE:T(()=>new xt("modifierType:ModifierType.ENEMY_STATUS_EFFECT_HEAL_CHANCE","wl_full_heal",(E,A)=>new dS(E,2.5,10)),"ENEMY_STATUS_EFFECT_HEAL_CHANCE"),ENEMY_ENDURE_CHANCE:T(()=>new ch("modifierType:ModifierType.ENEMY_ENDURE_CHANCE","wl_reset_urge",2),"ENEMY_ENDURE_CHANCE"),ENEMY_FUSED_CHANCE:T(()=>new xt("modifierType:ModifierType.ENEMY_FUSED_CHANCE","wl_custom_spliced",(E,A)=>new BS(E,1)),"ENEMY_FUSED_CHANCE"),MYSTERY_ENCOUNTER_SHUCKLE_JUICE:T(()=>new iE((E,A)=>A?new hl(A[0]):new hl(le(20,1))),"MYSTERY_ENCOUNTER_SHUCKLE_JUICE"),MYSTERY_ENCOUNTER_OLD_GATEAU:T(()=>new iE((E,A)=>A?new cl(A[0],A[1]):new cl(le(20,1),[B.HP,B.ATK,B.DEF])),"MYSTERY_ENCOUNTER_OLD_GATEAU"),MYSTERY_ENCOUNTER_BLACK_SLUDGE:T(()=>new iE((E,A)=>A?new xt("modifierType:ModifierType.MYSTERY_ENCOUNTER_BLACK_SLUDGE","black_sludge",(s,R)=>new yI(s,A[0])):new xt("modifierType:ModifierType.MYSTERY_ENCOUNTER_BLACK_SLUDGE","black_sludge",(s,R)=>new yI(s,2.5))),"MYSTERY_ENCOUNTER_BLACK_SLUDGE"),MYSTERY_ENCOUNTER_MACHO_BRACE:T(()=>new IA("modifierType:ModifierType.MYSTERY_ENCOUNTER_MACHO_BRACE","macho_brace",(E,A)=>new ki(E,A[0].id)),"MYSTERY_ENCOUNTER_MACHO_BRACE"),MYSTERY_ENCOUNTER_GOLDEN_BUG_NET:T(()=>new xt("modifierType:ModifierType.MYSTERY_ENCOUNTER_GOLDEN_BUG_NET","golden_net",(E,A)=>new cS(E)),"MYSTERY_ENCOUNTER_GOLDEN_BUG_NET")};function Rr(E,A){return E[0].scene.gameMode.isClassic&&E[0].scene.pokeballCounts[A]>=Xx}T(Rr,"hasMaximumBalls");const Ha={[W.COMMON]:[new ue(x.POKEBALL,E=>Rr(E,ge.POKEBALL)?0:6,6),new ue(x.RARE_CANDY,2),new ue(x.POTION,E=>Math.min(E.filter(s=>(s.getInverseHp()>=10||s.getHpRatio()<=.875)&&!s.isFainted()).length,3)*3,9),new ue(x.SUPER_POTION,E=>Math.min(E.filter(s=>(s.getInverseHp()>=25||s.getHpRatio()<=.75)&&!s.isFainted()).length,3),3),new ue(x.ETHER,E=>Math.min(E.filter(s=>s.hp&&s.getMoveset().filter(R=>(R==null?void 0:R.ppUsed)&&R.getMovePp()-R.ppUsed<=5&&R.ppUsed>=Math.floor(R.getMovePp()/2)).length).length,3)*3,9),new ue(x.MAX_ETHER,E=>Math.min(E.filter(s=>s.hp&&s.getMoveset().filter(R=>(R==null?void 0:R.ppUsed)&&R.getMovePp()-R.ppUsed<=5&&R.ppUsed>=Math.floor(R.getMovePp()/2)).length).length,3),3),new ue(x.LURE,kM(10,2)),new ue(x.TEMP_STAT_STAGE_BOOSTER,4),new ue(x.BERRY,2),new ue(x.TM_COMMON,2)].map(E=>(E.setTier(W.COMMON),E)),[W.GREAT]:[new ue(x.GREAT_BALL,E=>Rr(E,ge.GREAT_BALL)?0:6,6),new ue(x.PP_UP,2),new ue(x.FULL_HEAL,E=>Math.min(E.filter(s=>s.hp&&!!s.status&&!s.getHeldItems().some(R=>{var I;return R instanceof nn?R.getStatusEffect()===((I=s.status)==null?void 0:I.effect):!1})).length,3)*6,18),new ue(x.REVIVE,E=>Math.min(E.filter(s=>s.isFainted()).length,3)*9,27),new ue(x.MAX_REVIVE,E=>Math.min(E.filter(s=>s.isFainted()).length,3)*3,9),new ue(x.SACRED_ASH,E=>E.filter(A=>A.isFainted()).length>=Math.ceil(E.length/2)?1:0,1),new ue(x.HYPER_POTION,E=>Math.min(E.filter(s=>(s.getInverseHp()>=100||s.getHpRatio()<=.625)&&!s.isFainted()).length,3)*3,9),new ue(x.MAX_POTION,E=>Math.min(E.filter(s=>(s.getInverseHp()>=150||s.getHpRatio()<=.5)&&!s.isFainted()).length,3),3),new ue(x.FULL_RESTORE,E=>{const A=Math.min(E.filter(R=>R.hp&&!!R.status&&!R.getHeldItems().some(I=>{var i;return I instanceof nn?I.getStatusEffect()===((i=R.status)==null?void 0:i.effect):!1})).length,3);return Math.floor((Math.min(E.filter(R=>(R.getInverseHp()>=150||R.getHpRatio()<=.5)&&!R.isFainted()).length,3)+A)/2)},3),new ue(x.ELIXIR,E=>Math.min(E.filter(s=>s.hp&&s.getMoveset().filter(R=>(R==null?void 0:R.ppUsed)&&R.getMovePp()-R.ppUsed<=5&&R.ppUsed>=Math.floor(R.getMovePp()/2)).length).length,3)*3,9),new ue(x.MAX_ELIXIR,E=>Math.min(E.filter(s=>s.hp&&s.getMoveset().filter(R=>(R==null?void 0:R.ppUsed)&&R.getMovePp()-R.ppUsed<=5&&R.ppUsed>=Math.floor(R.getMovePp()/2)).length).length,3),3),new ue(x.DIRE_HIT,4),new ue(x.SUPER_LURE,kM(15,4)),new ue(x.NUGGET,TO(5)),new ue(x.EVOLUTION_ITEM,E=>Math.min(Math.ceil(E[0].scene.currentBattle.waveIndex/15),8),8),new ue(x.MAP,E=>E[0].scene.gameMode.isClassic&&E[0].scene.currentBattle.waveIndex<180?E[0].scene.eventManager.isEventActive()?2:1:0,E=>E[0].scene.eventManager.isEventActive()?2:1),new ue(x.SOOTHE_BELL,E=>E[0].scene.eventManager.isEventActive()?3:0),new ue(x.TM_GREAT,3),new ue(x.MEMORY_MUSHROOM,E=>{if(!E.find(s=>s.getLearnableLevelMoves().length))return 0;const A=E.map(s=>s.level).reduce((s,R)=>Math.max(s,R),1);return Math.min(Math.ceil(A/20),4)},4),new ue(x.BASE_STAT_BOOSTER,3),new ue(x.TERA_SHARD,1),new ue(x.DNA_SPLICERS,E=>E[0].scene.gameMode.isSplicedOnly&&E.filter(A=>!A.fusionSpecies).length>1?4:0),new ue(x.VOUCHER,(E,A)=>E[0].scene.gameMode.isDaily?0:Math.max(1-A,0),1)].map(E=>(E.setTier(W.GREAT),E)),[W.ULTRA]:[new ue(x.ULTRA_BALL,E=>Rr(E,ge.ULTRA_BALL)?0:15,15),new ue(x.MAX_LURE,kM(30,4)),new ue(x.BIG_NUGGET,TO(12)),new ue(x.PP_MAX,3),new ue(x.MINT,4),new ue(x.RARE_EVOLUTION_ITEM,E=>Math.min(Math.ceil(E[0].scene.currentBattle.waveIndex/15)*4,32),32),new ue(x.FORM_CHANGE_ITEM,E=>Math.min(Math.ceil(E[0].scene.currentBattle.waveIndex/50),4)*6,24),new ue(x.AMULET_COIN,TO(3)),new ue(x.EVIOLITE,E=>{const{gameMode:A,gameData:s}=E[0].scene;return(A.isDaily||!A.isFreshStartChallenge()&&s.isUnlocked(Hs.EVIOLITE))&&E.some(R=>(R.getSpeciesForm(!0).speciesId in Ht||R.isFusion()&&R.getFusionSpeciesForm(!0).speciesId in Ht)&&!R.getHeldItems().some(I=>I instanceof IS)&&!R.isMax())?10:0}),new ue(x.SPECIES_STAT_BOOSTER,12),new ue(x.LEEK,E=>{const A=[e.FARFETCHD,e.GALAR_FARFETCHD,e.SIRFETCHD];return E.some(s=>!s.getHeldItems().some(R=>R instanceof iS)&&(A.includes(s.getSpeciesForm(!0).speciesId)||s.isFusion()&&A.includes(s.getFusionSpeciesForm(!0).speciesId)))?12:0},12),new ue(x.TOXIC_ORB,E=>{const A=[O.QUICK_FEET,O.GUTS,O.MARVEL_SCALE,O.TOXIC_BOOST,O.POISON_HEAL,O.MAGIC_GUARD],s=[t.FACADE,t.TRICK,t.FLING,t.SWITCHEROO,t.PSYCHO_SHIFT];return E.some(R=>!R.getHeldItems().some(I=>I instanceof nn)&&(A.some(I=>R.hasAbility(I,!1,!0))||R.getMoveset(!0).some(I=>I&&s.includes(I.moveId))))?10:0},10),new ue(x.FLAME_ORB,E=>{const A=[O.QUICK_FEET,O.GUTS,O.MARVEL_SCALE,O.FLARE_BOOST,O.MAGIC_GUARD],s=[t.FACADE,t.TRICK,t.FLING,t.SWITCHEROO,t.PSYCHO_SHIFT];return E.some(R=>!R.getHeldItems().some(I=>I instanceof nn)&&(A.some(I=>R.hasAbility(I,!1,!0))||R.getMoveset(!0).some(I=>I&&s.includes(I.moveId))))?10:0},10),new ue(x.WHITE_HERB,E=>{const A=[O.WEAK_ARMOR,O.CONTRARY,O.MOODY,O.ANGER_SHELL,O.COMPETITIVE,O.DEFIANT],s=E.filter(R=>!R.getHeldItems().some(I=>I instanceof gL&&I.stackCount>=I.getMaxHeldItemCount(R))&&(A.some(I=>R.hasAbility(I,!1,!0))||R.getMoveset(!0).some(I=>I&&ab.includes(I.moveId)))).length;return 0*(s?2:1)+(s?s*0:0)},10),new ue(x.REVIVER_SEED,4),new ue(x.CANDY_JAR,TO(5)),new ue(x.ATTACK_TYPE_BOOSTER,9),new ue(x.TM_ULTRA,11),new ue(x.RARER_CANDY,E=>E[0].scene.eventManager.isEventActive()?6:4),new ue(x.GOLDEN_PUNCH,TO(2)),new ue(x.IV_SCANNER,TO(4)),new ue(x.EXP_CHARM,TO(8)),new ue(x.EXP_SHARE,TO(10)),new ue(x.EXP_BALANCE,TO(3)),new ue(x.TERA_ORB,E=>Math.min(Math.max(Math.floor(E[0].scene.currentBattle.waveIndex/50)*2,1),4),4),new ue(x.QUICK_CLAW,3),new ue(x.WIDE_LENS,4)].map(E=>(E.setTier(W.ULTRA),E)),[W.ROGUE]:[new ue(x.ROGUE_BALL,E=>Rr(E,ge.ROGUE_BALL)?0:16,16),new ue(x.RELIC_GOLD,TO(2)),new ue(x.LEFTOVERS,3),new ue(x.SHELL_BELL,3),new ue(x.BERRY_POUCH,4),new ue(x.GRIP_CLAW,5),new ue(x.SCOPE_LENS,4),new ue(x.BATON,2),new ue(x.SOUL_DEW,7),new ue(x.SOOTHE_BELL,E=>E[0].scene.eventManager.isEventActive()?0:4),new ue(x.ABILITY_CHARM,n6(189,6)),new ue(x.FOCUS_BAND,5),new ue(x.KINGS_ROCK,3),new ue(x.LOCK_CAPSULE,E=>E[0].scene.gameMode.isClassic?0:3),new ue(x.SUPER_EXP_CHARM,TO(8)),new ue(x.RARE_FORM_CHANGE_ITEM,E=>Math.min(Math.ceil(E[0].scene.currentBattle.waveIndex/50),4)*6,24),new ue(x.MEGA_BRACELET,E=>Math.min(Math.ceil(E[0].scene.currentBattle.waveIndex/50),4)*9,36),new ue(x.DYNAMAX_BAND,E=>Math.min(Math.ceil(E[0].scene.currentBattle.waveIndex/50),4)*9,36),new ue(x.VOUCHER_PLUS,(E,A)=>E[0].scene.gameMode.isDaily?0:Math.max(3-A*1,0),3)].map(E=>(E.setTier(W.ROGUE),E)),[W.MASTER]:[new ue(x.MASTER_BALL,E=>Rr(E,ge.MASTER_BALL)?0:24,24),new ue(x.SHINY_CHARM,14),new ue(x.HEALING_CHARM,18),new ue(x.MULTI_LENS,18),new ue(x.VOUCHER_PREMIUM,(E,A)=>!E[0].scene.gameMode.isDaily&&!E[0].scene.gameMode.isEndless&&!E[0].scene.gameMode.isSplicedOnly?Math.max(5-A*2,0):0,5),new ue(x.DNA_SPLICERS,E=>!E[0].scene.gameMode.isSplicedOnly&&E.filter(A=>!A.fusionSpecies).length>1?24:0,24),new ue(x.MINI_BLACK_HOLE,E=>E[0].scene.gameMode.isDaily||!E[0].scene.gameMode.isFreshStartChallenge()&&E[0].scene.gameData.isUnlocked(Hs.MINI_BLACK_HOLE)?1:0,1)].map(E=>(E.setTier(W.MASTER),E))},X8={[W.COMMON]:[new ue(x.BERRY,1)].map(E=>(E.setTier(W.COMMON),E)),[W.GREAT]:[new ue(x.BASE_STAT_BOOSTER,1)].map(E=>(E.setTier(W.GREAT),E)),[W.ULTRA]:[new ue(x.ATTACK_TYPE_BOOSTER,10),new ue(x.WHITE_HERB,0)].map(E=>(E.setTier(W.ULTRA),E)),[W.ROGUE]:[new ue(x.LUCKY_EGG,4)].map(E=>(E.setTier(W.ROGUE),E)),[W.MASTER]:[new ue(x.GOLDEN_EGG,1)].map(E=>(E.setTier(W.MASTER),E))},Q8={[W.COMMON]:[new ue(x.BERRY,8),new ue(x.BASE_STAT_BOOSTER,3)].map(E=>(E.setTier(W.COMMON),E)),[W.GREAT]:[new ue(x.BASE_STAT_BOOSTER,3)].map(E=>(E.setTier(W.GREAT),E)),[W.ULTRA]:[new ue(x.ATTACK_TYPE_BOOSTER,10),new ue(x.WHITE_HERB,0)].map(E=>(E.setTier(W.ULTRA),E)),[W.ROGUE]:[new ue(x.FOCUS_BAND,2),new ue(x.LUCKY_EGG,4),new ue(x.QUICK_CLAW,1),new ue(x.GRIP_CLAW,1),new ue(x.WIDE_LENS,1)].map(E=>(E.setTier(W.ROGUE),E)),[W.MASTER]:[new ue(x.KINGS_ROCK,1),new ue(x.LEFTOVERS,1),new ue(x.SHELL_BELL,1),new ue(x.SCOPE_LENS,1)].map(E=>(E.setTier(W.MASTER),E))},J8={[W.COMMON]:[new ue(x.ENEMY_DAMAGE_BOOSTER,9),new ue(x.ENEMY_DAMAGE_REDUCTION,9),new ue(x.ENEMY_ATTACK_POISON_CHANCE,3),new ue(x.ENEMY_ATTACK_PARALYZE_CHANCE,3),new ue(x.ENEMY_ATTACK_BURN_CHANCE,3),new ue(x.ENEMY_STATUS_EFFECT_HEAL_CHANCE,9),new ue(x.ENEMY_ENDURE_CHANCE,4),new ue(x.ENEMY_FUSED_CHANCE,1)].map(E=>(E.setTier(W.COMMON),E)),[W.GREAT]:[new ue(x.ENEMY_DAMAGE_BOOSTER,5),new ue(x.ENEMY_DAMAGE_REDUCTION,5),new ue(x.ENEMY_STATUS_EFFECT_HEAL_CHANCE,5),new ue(x.ENEMY_ENDURE_CHANCE,5),new ue(x.ENEMY_FUSED_CHANCE,1)].map(E=>(E.setTier(W.GREAT),E)),[W.ULTRA]:[new ue(x.ENEMY_DAMAGE_BOOSTER,10),new ue(x.ENEMY_DAMAGE_REDUCTION,10),new ue(x.ENEMY_HEAL,10),new ue(x.ENEMY_STATUS_EFFECT_HEAL_CHANCE,10),new ue(x.ENEMY_ENDURE_CHANCE,10),new ue(x.ENEMY_FUSED_CHANCE,5)].map(E=>(E.setTier(W.ULTRA),E)),[W.ROGUE]:[].map(E=>(E.setTier(W.ROGUE),E)),[W.MASTER]:[].map(E=>(E.setTier(W.MASTER),E))},$8={[W.COMMON]:[new ue(x.BASE_STAT_BOOSTER,1),new ue(x.BERRY,3)].map(E=>(E.setTier(W.COMMON),E)),[W.GREAT]:[new ue(x.ATTACK_TYPE_BOOSTER,5)].map(E=>(E.setTier(W.GREAT),E)),[W.ULTRA]:[new ue(x.REVIVER_SEED,4),new ue(x.SOOTHE_BELL,1),new ue(x.SOUL_DEW,1),new ue(x.GOLDEN_PUNCH,1)].map(E=>(E.setTier(W.ULTRA),E)),[W.ROGUE]:[new ue(x.GRIP_CLAW,5),new ue(x.BATON,2),new ue(x.FOCUS_BAND,5),new ue(x.QUICK_CLAW,3),new ue(x.KINGS_ROCK,3)].map(E=>(E.setTier(W.ROGUE),E)),[W.MASTER]:[new ue(x.LEFTOVERS,1),new ue(x.SHELL_BELL,1)].map(E=>(E.setTier(W.MASTER),E))};function YM(E){const A=E();return A.id||(A.id=Object.keys(x).find(s=>x[s]===E)),A}T(YM,"getModifierType");let I6={},Gh={},i6={},Ph={},a6={};function PT(E){let A;switch(E){case 0:A=Ha;break;case 1:A=X8;break;case 2:A=Q8;break;case 3:A=J8;break;case 4:A=$8;break}return A}T(PT,"getModifierPoolForType");const q8=[768/1024,195/1024,48/1024,12/1024,1/1024],_o=new Map;function QI(E,A,s=0){const R=PT(A);_o.forEach((L,S)=>{_o.set(S,!1)});const I={},i={},a=Object.fromEntries(new Map(Object.keys(R).map(L=>{I[L]=[];const S=new Map,o=[];let l=0,D=0;R[L].reduce((M,c)=>{const G=c,P=E[0].scene.findModifiers(H=>H.type.id===G.modifierType.id,A===0),_=G.modifierType instanceof iE?G.modifierType.generateType(E):G.modifierType,g=!P.length||_ instanceof IA||_ instanceof GT||P.find(H=>H.stackCount<H.getMaxStackCount(E[0].scene,!0))?G.weight instanceof Function?G.weight(E,s):G.weight:0;if(G.maxWeight){const H=G.modifierType.id;o.push(H);const F=g;i[H]={weight:F,tier:parseInt(L),tierPercent:0,totalPercent:0},l+=F}if(g)M+=g;else return I[L].push(D++),M;return _o.has(c.modifierType.id)&&_o.set(c.modifierType.id,!0),S.set(M,D++),M},0);for(const M of o)i[M].tierPercent=Math.floor(i[M].weight/l*1e4)/100;return[L,Object.fromEntries(S)]})));for(const L of Object.keys(i))i[L].totalPercent=Math.floor(i[L].tierPercent*q8[i[L].tier]*100)/100,i[L].tier=W[i[L].tier];switch(A){case 0:I6=a,Gh=I;break;case 1:case 2:Ph=a;break;case 3:a6=a;break;case 4:i6=a;break}}T(QI,"regenerateModifierPoolThresholds");function j8(E){return x[E]}T(j8,"getModifierTypeFuncById");function u1(E,A,s,R){const I=[],i=Math.min(E*5,50);if(!R)new Array(E).fill(0).map((a,L)=>{I.push(ZM(I,i,A,s&&s.length>L?s[L]:void 0))});else{if(R!=null&&R.guaranteedModifierTypeOptions&&R.guaranteedModifierTypeOptions.length>0&&I.push(...R.guaranteedModifierTypeOptions),R.guaranteedModifierTypeFuncs&&R.guaranteedModifierTypeFuncs.length>0&&R.guaranteedModifierTypeFuncs.forEach((a,L)=>{var D;const S=Object.keys(x).find(M=>x[M]===a);let o=(D=x[S])==null?void 0:D.call(x);o=o.withIdFromFunc(x[S]).withTierFromPool();const l=o instanceof iE?o.generateType(A):o;if(l){const M=new QE(l,0);I.push(M)}}),R.guaranteedModifierTiers&&R.guaranteedModifierTiers.length>0){const a=R.allowLuckUpgrades??!0;R.guaranteedModifierTiers.forEach(L=>{I.push(ZM(I,i,A,L,a))})}if(I.length<E&&R.fillRemaining)for(;I.length<E;)I.push(ZM(I,i,A,void 0))}return z8(I,A),I}T(u1,"getPlayerModifierTypeOptions");function ZM(E,A,s,R,I){I=I??!0;let i=mi(s,0,R,void 0,0,I),a=0;for(;E.length&&++a<A&&E.filter(L=>L.type.name===(i==null?void 0:i.type.name)||L.type.group===(i==null?void 0:i.type.group)).length;)i=mi(s,0,(i==null?void 0:i.type.tier)??R,i==null?void 0:i.upgradeCount,0,I);return i}T(ZM,"getModifierTypeOptionWithRetry");function z8(E,A){const s=Math.min(E.length,Ge.ITEM_REWARD_OVERRIDE.length);for(let R=0;R<s;R++){const I=Ge.ITEM_REWARD_OVERRIDE[R],i=x[I.name];let a=i();if(a instanceof iE){const L="type"in I&&I.type!==null?[I.type]:void 0;a=a.generateType(A,L)}a&&(E[R].type=a.withIdFromFunc(i).withTierFromPool())}}T(z8,"overridePlayerModifierTypeOptions");function L6(E,A){return E%10?[[new QE(x.POTION(),0,A*.2),new QE(x.ETHER(),0,A*.4),new QE(x.REVIVE(),0,A*2)],[new QE(x.SUPER_POTION(),0,A*.45),new QE(x.FULL_HEAL(),0,A)],[new QE(x.ELIXIR(),0,A),new QE(x.MAX_ETHER(),0,A)],[new QE(x.HYPER_POTION(),0,A*.8),new QE(x.MAX_REVIVE(),0,A*2.75),new QE(x.MEMORY_MUSHROOM(),0,A*4)],[new QE(x.MAX_POTION(),0,A*1.5),new QE(x.MAX_ELIXIR(),0,A*2.5)],[new QE(x.FULL_RESTORE(),0,A*2.25)],[new QE(x.SACRED_ASH(),0,A*10)]].slice(0,Math.ceil(Math.max(E+10,0)/30)).flat():[]}T(L6,"getPlayerShopModifierTypeOptionsForWave");function e7(E,A,s){var o;let R;switch(E){case W.ULTRA:R=5;break;case W.GREAT:R=3;break;default:R=1;break}const I=50;let i=mi([],3,E),a=0,L;for(;++a<I&&(L=A.find(l=>{var D;return l.type.id===((D=i==null?void 0:i.type)==null?void 0:D.id)}))&&L.getMaxStackCount(s)<L.stackCount+(a<10?R:1);)i=mi([],3,E);const S=(o=i==null?void 0:i.type)==null?void 0:o.newModifier();return S.stackCount=R,S}T(e7,"getEnemyBuffModifierForWave");function t7(E,A,s,R,I=0){const i=new Array(A).fill(0).map(()=>{var a;return(a=mi(s,R,void 0,I&&!le(I)?1:0))==null?void 0:a.type});return E%1e3||i.push(YM(x.MINI_BLACK_HOLE)),i}T(t7,"getEnemyModifierTypesForWave");function A7(E){var s,R;const A=[];for(const I of E)for(let i=0;i<3;i++){const a=le(64);let L;a>25?L=W.COMMON:a>12?L=W.GREAT:a>4?L=W.ULTRA:a?L=W.ROGUE:L=W.MASTER;const S=(R=(s=mi(E,4,L))==null?void 0:s.type)==null?void 0:R.newModifier(I);A.push(S)}return A}T(A7,"getDailyRunStarterModifiers");function mi(E,A,s,R,I=0,i=!0){const a=!A,L=PT(A);let S;switch(A){case 0:S=I6;break;case 1:S=Ph;break;case 2:S=Ph;break;case 3:S=a6;break;case 4:S=i6;break}if(s===void 0){const G=le(1024);if(R||(R=0),a&&G&&i){const P=BI(E),_=Math.floor(128/((P+4)/4));let g=!1;do g=le(_)<4,g&&R++;while(g)}for(G>255?s=W.COMMON:G>60?s=W.GREAT:G>12?s=W.ULTRA:G?s=W.ROGUE:s=W.MASTER,s+=R;s&&(!Ha.hasOwnProperty(s)||!Ha[s].length);)s--,R&&R--}else if(R===void 0&&a){if(R=0,s<W.MASTER&&i){const G=E.filter(_=>_.isShiny()&&!_.isFainted()).length,P=Math.floor(32/((G+2)/2));for(;Ha.hasOwnProperty(s+R+1)&&Ha[s+R+1].length&&!le(P);)R++;s+=R}}else I===10&&s&&(I=0,s--);const o=Object.keys(S[s]),l=parseInt(o[o.length-1]),D=le(l);let M;for(const G of o){const P=parseInt(G);if(D<P){M=S[s][P];break}}if(M===void 0)return null;a&&(Gh[s].filter(G=>G<=M).length,Gh[s]);let c=L[s][M].modifierType;return c instanceof iE&&(c=c.generateType(E),c===null)?(a&&W[s],mi(E,A,s,R,++I)):new QE(c,R)}T(mi,"getNewModifierTypeOption");function E7(E){let A=Ha[E||W.COMMON][0];return A instanceof ue&&(A=A.modifierType),A}T(E7,"getDefaultModifierTypeForTier");const uB=class uB{constructor(A,s,R=0){this.type=A,this.upgradeCount=s,this.cost=Math.min(Math.round(R),Number.MAX_SAFE_INTEGER)}};T(uB,"ModifierTypeOption");let QE=uB;function BI(E){if(E[0].scene.gameMode.isDaily){const s=new $e(0);return E[0].scene.executeWithSeedOffset(()=>{s.value=le(15)},0,E[0].scene.seed),s.value}return Phaser.Math.Clamp(E.map(s=>s.isAllowedInBattle()?s.getLuck():0).reduce((s,R)=>s+=R,0),0,14)??0}T(BI,"getPartyLuckValue");function r6(E){return["D","C","C+","B-","B","B+","A-","A","A+","A++","S","S+","SS","SS+","SSS"][E]}T(r6,"getLuckString");function N6(E){let A;return E>11?A=W.LUXURY:E>9?A=W.MASTER:E>5?A=W.ROGUE:E>2?A=W.ULTRA:E?A=W.GREAT:A=W.COMMON,Pa(A)}T(N6,"getLuckTextTint");var _n=(E=>(E[E.REROLL=0]="REROLL",E[E.REWARDS=1]="REWARDS",E[E.SHOP=2]="SHOP",E[E.CHECK_TEAM=3]="CHECK_TEAM",E))(_n||{});const EI=7,XM=12,QM=24,on=-62,hB=class hB extends Fn{constructor(A){super(A,$.CONFIRM),this.moveInfoOverlayActive=!1,this.rowCursor=0,this.options=[],this.shopOptionsRows=[]}setup(){const A=this.getUi();this.modifierContainer=this.scene.add.container(0,0),A.add(this.modifierContainer);const R=document.createElement("canvas").getContext("2d"),I=Sn(V.PARTY,this.scene.uiTheme).styleOptions;R&&(R.font=I.fontSize+"px "+I.fontFamily,this.transferButtonWidth=R.measureText(U.t("modifierSelectUiHandler:transfer")).width,this.checkButtonWidth=R.measureText(U.t("modifierSelectUiHandler:checkTeam")).width),this.transferButtonContainer=this.scene.add.container((this.scene.game.canvas.width-this.checkButtonWidth)/6-21,on),this.transferButtonContainer.setName("transfer-btn"),this.transferButtonContainer.setVisible(!1),A.add(this.transferButtonContainer);const i=se(this.scene,-4,-2,U.t("modifierSelectUiHandler:transfer"),V.PARTY);i.setName("text-transfer-btn"),i.setOrigin(1,0),this.transferButtonContainer.add(i),this.checkButtonContainer=this.scene.add.container(this.scene.game.canvas.width/6-1,on),this.checkButtonContainer.setName("use-btn"),this.checkButtonContainer.setVisible(!1),A.add(this.checkButtonContainer);const a=se(this.scene,-4,-2,U.t("modifierSelectUiHandler:checkTeam"),V.PARTY);a.setName("text-use-btn"),a.setOrigin(1,0),this.checkButtonContainer.add(a),this.rerollButtonContainer=this.scene.add.container(16,on),this.rerollButtonContainer.setName("reroll-brn"),this.rerollButtonContainer.setVisible(!1),A.add(this.rerollButtonContainer);const L=se(this.scene,-4,-2,U.t("modifierSelectUiHandler:reroll"),V.PARTY);L.setName("text-reroll-btn"),L.setOrigin(0,0),this.rerollButtonContainer.add(L),this.rerollCostText=se(this.scene,0,0,"",V.MONEY),this.rerollCostText.setName("text-reroll-cost"),this.rerollCostText.setOrigin(0,0),this.rerollCostText.setPositionRelative(L,L.displayWidth+5,1),this.rerollButtonContainer.add(this.rerollCostText),this.lockRarityButtonContainer=this.scene.add.container(16,on),this.lockRarityButtonContainer.setVisible(!1),A.add(this.lockRarityButtonContainer),this.lockRarityButtonText=se(this.scene,-4,-2,U.t("modifierSelectUiHandler:lockRarities"),V.PARTY),this.lockRarityButtonText.setOrigin(0,0),this.lockRarityButtonContainer.add(this.lockRarityButtonText),this.continueButtonContainer=this.scene.add.container(this.scene.game.canvas.width/12,-(this.scene.game.canvas.height/12)),this.continueButtonContainer.setVisible(!1),A.add(this.continueButtonContainer);const S=se(this.scene,-24,5,U.t("modifierSelectUiHandler:continueNextWaveButton"),V.MESSAGE);S.setName("text-continue-btn"),this.continueButtonContainer.add(S);const o=1;this.moveInfoOverlay=new nO(this.scene,{delayVisibility:!0,scale:o,onSide:!0,right:!0,x:1,y:-nO.getHeight(o,!0)-1,width:this.scene.game.canvas.width/6-2}),A.add(this.moveInfoOverlay),this.scene.addInfoToggle(this.moveInfoOverlay)}show(A){if(this.scene.disableMenu=!1,this.active)return A.length>=3&&(this.awaitingActionInput=!0,this.onActionInput=A[2]),this.moveInfoOverlay.active=this.moveInfoOverlayActive,!1;if(A.length!==4||!(A[1]instanceof Array)||!(A[2]instanceof Function))return!1;super.show(A),this.getUi().clearText(),this.player=A[0];const s=this.player&&!!this.scene.findModifiers(M=>M instanceof at&&M.isTransferable).length,R=!!this.scene.findModifier(M=>M instanceof hS);this.transferButtonContainer.setVisible(!1),this.transferButtonContainer.setAlpha(0),this.checkButtonContainer.setVisible(!1),this.checkButtonContainer.setAlpha(0),this.rerollButtonContainer.setVisible(!1),this.rerollButtonContainer.setAlpha(0),this.lockRarityButtonContainer.setVisible(!1),this.lockRarityButtonContainer.setAlpha(0),this.continueButtonContainer.setVisible(!1),this.continueButtonContainer.setAlpha(0),this.rerollButtonContainer.setPositionRelative(this.lockRarityButtonContainer,0,R?-12:0),this.rerollCost=A[3],this.updateRerollCostText();const I=A[1],i=this.scene.gameMode.hasNoShop,a=new Jt(this.scene.getWaveMoneyAmount(1));this.scene.applyModifier(yI,!0,a);const L=i?[]:L6(this.scene.currentBattle.waveIndex,a.value),S=L.length>EI?-XM:-QM;for(let M=0;M<I.length;M++){const c=this.scene.game.canvas.width/6/(I.length+2),G=new Fl(this.scene,c*(M+1)+c*.5,-this.scene.game.canvas.height/12+S,I[M]);G.setScale(.5),this.scene.add.existing(G),this.modifierContainer.add(G),this.options.push(G)}const o=this.continueButtonContainer.getAt(0);o.y=S-5,o.setVisible(this.options.length===0);for(let M=0;M<L.length;M++){const c=M<EI?0:1,G=M<EI?M:M-EI,P=L.slice(c?EI:0,c?void 0:EI),_=this.scene.game.canvas.width/6/(P.length+2),g=new Fl(this.scene,_*(G+1)+_*.5,-this.scene.game.canvas.height/12-this.scene.game.canvas.height/32-(42-(28*c-1)),L[M]);g.setScale(.375),this.scene.add.existing(g),this.modifierContainer.add(g),c>=this.shopOptionsRows.length&&this.shopOptionsRows.push([]),this.shopOptionsRows[c].push(g)}const l=I.map(M=>M.upgradeCount).reduce((M,c)=>Math.max(c,M),0);this.scene.getModifierBar().updateModifiers(this.scene.modifiers,!0),this.scene.showShopOverlay(750*this.scene.gameSpeed),this.scene.updateAndShowText(750),this.scene.updateBiomeWaveText(),this.scene.updateMoneyText();let D=0;return this.scene.tweens.addCounter({ease:"Sine.easeIn",duration:1250,onUpdate:T(M=>{const c=M.getValue(),G=Math.floor(c*I.length);if(G>D&&G<=I.length){const P=this.options[D];P==null||P.show(Math.floor((1-c)*1250)*.325+2e3*l,-(l-I[D].upgradeCount)),D++}},"onUpdate")}),this.scene.time.delayedCall(1e3+l*2e3,()=>{for(const M of this.shopOptionsRows.flat())M.show(0,0)}),this.scene.time.delayedCall(4e3+l*2e3,()=>{s&&(this.transferButtonContainer.setAlpha(0),this.transferButtonContainer.setVisible(!0),this.scene.tweens.add({targets:this.transferButtonContainer,alpha:1,duration:250})),this.rerollButtonContainer.setAlpha(0),this.checkButtonContainer.setAlpha(0),this.lockRarityButtonContainer.setAlpha(0),this.continueButtonContainer.setAlpha(0),this.rerollButtonContainer.setVisible(!0),this.checkButtonContainer.setVisible(!0),this.continueButtonContainer.setVisible(this.rerollCost<0),this.lockRarityButtonContainer.setVisible(R),this.scene.tweens.add({targets:[this.checkButtonContainer,this.continueButtonContainer],alpha:1,duration:250}),this.scene.tweens.add({targets:[this.rerollButtonContainer,this.lockRarityButtonContainer],alpha:this.rerollCost<0?.5:1,duration:250});const M=T(()=>{this.scene.shopCursorTarget===_n.CHECK_TEAM?(this.setRowCursor(0),this.setCursor(2)):this.scene.shopCursorTarget===_n.SHOP&&this.scene.gameMode.hasNoShop?(this.setRowCursor(_n.REWARDS),this.setCursor(0)):(this.setRowCursor(this.scene.shopCursorTarget),this.setCursor(0))},"updateCursorTarget");M(),fI(this.scene,yR.Select_Item).then(c=>{c&&M(),this.awaitingActionInput=!0,this.onActionInput=A[2]})}),!0}processInput(A){const s=this.getUi();if(!this.awaitingActionInput)return!1;let R=!1;if(A===y.ACTION){if(R=!0,this.onActionInput){const I=this.onActionInput;this.awaitingActionInput=!1,this.onActionInput=null,I(this.rowCursor,this.cursor)?(this.moveInfoOverlayActive=this.moveInfoOverlay.active,this.moveInfoOverlay.setVisible(!1),this.moveInfoOverlay.active=!1):(this.awaitingActionInput=!0,this.onActionInput=I)}}else if(A===y.CANCEL){if(this.player&&(R=!0,this.onActionInput)){const I=this.onActionInput;this.awaitingActionInput=!1,this.onActionInput=null,I(-1),this.moveInfoOverlayActive=this.moveInfoOverlay.active,this.moveInfoOverlay.setVisible(!1),this.moveInfoOverlay.active=!1}}else switch(A){case y.UP:this.rowCursor===0&&this.cursor===3?R=this.setCursor(0):this.rowCursor<this.shopOptionsRows.length+1&&(R=this.setRowCursor(this.rowCursor+1));break;case y.DOWN:this.rowCursor?R=this.setRowCursor(this.rowCursor-1):this.lockRarityButtonContainer.visible&&this.cursor===0&&(R=this.setCursor(3));break;case y.LEFT:if(this.rowCursor)this.cursor?R=this.setCursor(this.cursor-1):this.rowCursor===1&&this.rerollButtonContainer.visible&&(R=this.setRowCursor(0));else switch(this.cursor){case 0:R=!1;break;case 1:this.lockRarityButtonContainer.visible?R=this.setCursor(3):R=this.rerollButtonContainer.visible&&this.setCursor(0);break;case 2:this.transferButtonContainer.visible?R=this.setCursor(1):this.rerollButtonContainer.visible?R=this.setCursor(0):R=!1;break}break;case y.RIGHT:if(this.rowCursor)this.cursor<this.getRowItems(this.rowCursor)-1?R=this.setCursor(this.cursor+1):this.rowCursor===1&&this.transferButtonContainer.visible&&(R=this.setRowCursor(0));else switch(this.cursor){case 0:this.transferButtonContainer.visible?R=this.setCursor(1):R=this.setCursor(2);break;case 1:R=this.setCursor(2);break;case 2:R=!1;break;case 3:this.transferButtonContainer.visible?R=this.setCursor(1):R=this.setCursor(2);break}break}return R&&s.playSelect(),R}setCursor(A){const s=this.getUi(),R=super.setCursor(A);this.cursorObj||(this.cursorObj=this.scene.add.image(0,0,"cursor"),this.modifierContainer.add(this.cursorObj));const I=this.rowCursor===1?this.options:this.shopOptionsRows[this.shopOptionsRows.length-(this.rowCursor-1)];if(this.cursorObj.setScale(this.rowCursor===1?2:this.rowCursor>=2?1.5:1),this.moveInfoOverlay.clear(),this.rowCursor){if(this.rowCursor===1&&I.length===0)return this.cursorObj.setScale(1.25),this.cursorObj.setPosition(this.scene.game.canvas.width/18+23,-this.scene.game.canvas.height/12-(this.shopOptionsRows.length>1?XM-2:QM-2)),s.showText(U.t("modifierSelectUiHandler:continueNextWaveDescription")),R;const i=this.scene.game.canvas.width/6/(I.length+2);this.rowCursor<2?this.cursorObj.setPosition(i*(A+1)+i*.5-20,-this.scene.game.canvas.height/12-(this.shopOptionsRows.length>1?XM-2:QM-2)):this.cursorObj.setPosition(i*(A+1)+i*.5-16,-this.scene.game.canvas.height/12-this.scene.game.canvas.height/32-(-14+28*(this.rowCursor-(this.shopOptionsRows.length-1))));const a=I[this.cursor].modifierTypeOption.type;a&&s.showText(a.getDescription(this.scene)),a instanceof Fi&&this.moveInfoOverlay.show(He[a.moveId])}else A===0?(this.cursorObj.setPosition(6,this.lockRarityButtonContainer.visible?on-8:on+4),s.showText(U.t("modifierSelectUiHandler:rerollDesc"))):A===1?(this.cursorObj.setPosition((this.scene.game.canvas.width-this.transferButtonWidth-this.checkButtonWidth)/6-30,on+4),s.showText(U.t("modifierSelectUiHandler:transferDesc"))):A===2?(this.cursorObj.setPosition((this.scene.game.canvas.width-this.checkButtonWidth)/6-10,on+4),s.showText(U.t("modifierSelectUiHandler:checkTeamDesc"))):(this.cursorObj.setPosition(6,on+4),s.showText(U.t("modifierSelectUiHandler:lockRaritiesDesc")));return R}setRowCursor(A){const s=this.rowCursor;if(A!==s){this.rowCursor=A;let R=Math.round(this.cursor/Math.max(this.getRowItems(s)-1,1)*(this.getRowItems(A)-1));return A===1&&this.options.length===0&&(R=0),A===0&&(this.options.length===0&&(R=1),R===0&&!this.rerollButtonContainer.visible&&(R=1),R===1&&!this.transferButtonContainer.visible&&(R=2)),this.cursor=-1,this.setCursor(R),!0}return!1}getRowItems(A){switch(A){case 0:return 3;case 1:return this.options.length;default:return this.shopOptionsRows[this.shopOptionsRows.length-(A-1)].length}}setRerollCost(A){this.rerollCost=A}updateCostText(){const A=this.shopOptionsRows.flat();for(const s of A)s.updateCostText();this.updateRerollCostText()}updateRerollCostText(){if(this.rerollCost<0){this.rerollCostText.setVisible(!1);return}else this.rerollCostText.setVisible(!0);const s=this.scene.money>=this.rerollCost,R=To(this.scene.moneyFormat,this.rerollCost);this.rerollCostText.setText(U.t("modifierSelectUiHandler:rerollCost",{formattedMoney:R})),this.rerollCostText.setColor(this.getTextColor(s?V.MONEY:V.PARTY_RED)),this.rerollCostText.setShadowColor(this.getTextColor(s?V.MONEY:V.PARTY_RED,!0))}updateLockRaritiesText(){const A=this.scene.lockModifierTiers?V.SUMMARY_BLUE:V.PARTY;this.lockRarityButtonText.setColor(this.getTextColor(A)),this.lockRarityButtonText.setShadowColor(this.getTextColor(A,!0))}clear(){super.clear(),this.moveInfoOverlay.clear(),this.moveInfoOverlayActive=!1,this.awaitingActionInput=!1,this.onActionInput=null,this.getUi().clearText(),this.eraseCursor(),this.cursor=0,this.rowCursor=0,this.scene.hideShopOverlay(750*this.scene.gameSpeed),this.scene.hideLuckText(250),this.scene.getModifierBar().updateModifiers(this.scene.modifiers);const A=this.options.concat(this.shopOptionsRows.flat());this.options.splice(0,this.options.length),this.shopOptionsRows.splice(0,this.shopOptionsRows.length),this.scene.tweens.add({targets:A,scale:.01,duration:250,ease:"Cubic.easeIn",onComplete:T(()=>A.forEach(s=>s.destroy()),"onComplete")}),[this.rerollButtonContainer,this.checkButtonContainer,this.transferButtonContainer,this.lockRarityButtonContainer,this.continueButtonContainer].forEach(s=>{s.visible&&this.scene.tweens.add({targets:s,alpha:0,duration:250,ease:"Cubic.easeIn",onComplete:T(()=>{this.options.length?s.setAlpha(1):s.setVisible(!1)},"onComplete")})})}eraseCursor(){this.cursorObj&&this.cursorObj.destroy(),this.cursorObj=null}};T(hB,"ModifierSelectUiHandler");let _h=hB;const cB=class cB extends vA.GameObjects.Container{constructor(A,s,R,I){super(A,s,R),this.modifierTypeOption=I,this.setup()}setup(){var s,R,I;if(!this.modifierTypeOption.cost){const i=T(()=>{const a=this.scene.add.sprite(0,-182,"pb",this.getPbAtlasKey(-this.modifierTypeOption.upgradeCount));return a.setScale(2),a},"getPb");this.pb=i(),this.add(this.pb),this.pbTint=i(),this.pbTint.setVisible(!1),this.add(this.pbTint)}this.itemContainer=this.scene.add.container(0,0),this.itemContainer.setScale(.5),this.itemContainer.setAlpha(0),this.add(this.itemContainer);const A=T(()=>{var a;return this.scene.add.sprite(0,0,"items",(a=this.modifierTypeOption.type)==null?void 0:a.iconImage)},"getItem");this.item=A(),this.itemContainer.add(this.item),this.modifierTypeOption.cost||(this.itemTint=A(),this.itemTint.setTintFill(vA.Display.Color.GetColor(255,192,255)),this.itemContainer.add(this.itemTint)),this.itemText=se(this.scene,0,35,(s=this.modifierTypeOption.type)==null?void 0:s.name,V.PARTY,{align:"center"}),this.itemText.setOrigin(.5,0),this.itemText.setAlpha(0),this.itemText.setTint((R=this.modifierTypeOption.type)!=null&&R.tier?Pa((I=this.modifierTypeOption.type)==null?void 0:I.tier):void 0),this.add(this.itemText),this.modifierTypeOption.cost&&(this.itemCostText=se(this.scene,0,45,"",V.MONEY,{align:"center"}),this.itemCostText.setOrigin(.5,0),this.itemCostText.setAlpha(0),this.add(this.itemCostText),this.updateCostText())}show(A,s){if(!this.modifierTypeOption.cost){this.scene.tweens.add({targets:this.pb,y:0,duration:1250,ease:"Bounce.Out"});let R=1,I=0,i=!1;this.scene.tweens.addCounter({from:1,to:0,duration:1250,ease:"Bounce.Out",onUpdate:T(a=>{if(!this.scene)return;const L=a.getValue();!i&&L>R?(this.scene.playSound("se/pb_bounce_1",{volume:1/++I}),i=!0):i&&L<R&&(i=!1),R=L},"onUpdate")});for(let a=0;a<this.modifierTypeOption.upgradeCount;a++){const L=a;this.scene.time.delayedCall(A-2e3*(this.modifierTypeOption.upgradeCount-(L+1+s)),()=>{this.scene.playSound("se/upgrade",{rate:1+.25*L}),this.pbTint.setPosition(this.pb.x,this.pb.y),this.pbTint.setTintFill(16777215),this.pbTint.setAlpha(0),this.pbTint.setVisible(!0),this.scene.tweens.add({targets:this.pbTint,alpha:1,duration:1e3,ease:"Sine.easeIn",onComplete:T(()=>{this.pb.setTexture("pb",this.getPbAtlasKey(-this.modifierTypeOption.upgradeCount+(L+1))),this.scene.tweens.add({targets:this.pbTint,alpha:0,duration:750,ease:"Sine.easeOut",onComplete:T(()=>{this.pbTint.setVisible(!1)},"onComplete")})},"onComplete")})})}}this.scene.time.delayedCall(A+2e3,()=>{this.scene&&(this.modifierTypeOption.cost||(this.pb.setTexture("pb",`${this.getPbAtlasKey(0)}_open`),this.scene.playSound("se/pb_rel"),this.scene.tweens.add({targets:this.pb,duration:500,delay:250,ease:"Sine.easeIn",alpha:0,onComplete:T(()=>this.pb.destroy(),"onComplete")})),this.scene.tweens.add({targets:this.itemContainer,duration:500,ease:"Elastic.Out",scale:2,alpha:1}),this.modifierTypeOption.cost||this.scene.tweens.add({targets:this.itemTint,alpha:0,duration:500,ease:"Sine.easeIn",onComplete:T(()=>this.itemTint.destroy(),"onComplete")}),this.scene.tweens.add({targets:this.itemText,duration:500,alpha:1,y:25,ease:"Cubic.easeInOut"}),this.itemCostText&&this.scene.tweens.add({targets:this.itemCostText,duration:500,alpha:1,y:35,ease:"Cubic.easeInOut"}))})}getPbAtlasKey(A=0){var s;return OO(((s=this.modifierTypeOption.type)==null?void 0:s.tier)+A)}updateCostText(){const A=this.scene,s=Ge.WAIVE_ROLL_FEE_OVERRIDE?0:this.modifierTypeOption.cost,R=s<=A.money?V.MONEY:V.PARTY_RED,I=To(A.moneyFormat,s);this.itemCostText.setText(U.t("modifierSelectUiHandler:itemCost",{formattedMoney:I})),this.itemCostText.setColor(zt(R,!1,A.uiTheme)),this.itemCostText.setShadowColor(zt(R,!0,A.uiTheme))}};T(cB,"ModifierOption");let Fl=cB;const AN=class AN extends LE{constructor(A,s=0,R,I,i=!1){super(A),this.rerollCount=s,this.modifierTiers=R,this.customModifierSettings=I,this.isCopy=i}start(){var I,i,a;super.start(),!this.rerollCount&&!this.isCopy?this.updateSeed():this.rerollCount&&(this.scene.reroll=!1);const A=this.scene.getParty();this.isCopy||QI(A,this.getPoolType(),this.rerollCount);const s=new Jt(3);if(this.isPlayer()&&(this.scene.applyModifiers(yn,!0,s),this.scene.applyModifiers(wn,!0,s)),this.customModifierSettings){const L=(((I=this.customModifierSettings.guaranteedModifierTiers)==null?void 0:I.length)||0)+(((i=this.customModifierSettings.guaranteedModifierTypeOptions)==null?void 0:i.length)||0)+(((a=this.customModifierSettings.guaranteedModifierTypeFuncs)==null?void 0:a.length)||0);if(this.customModifierSettings.fillRemaining){const S=s.value;s.value=S>L?S:L}else s.value=L}this.typeOptions=this.getModifierTypeOptions(s.value);const R=T((L,S)=>{if(L<0||S<0)return this.scene.ui.showText(U.t("battle:skipItemQuestion"),null,()=>{this.scene.ui.setOverlayMode($.CONFIRM,()=>{this.scene.ui.revertMode(),this.scene.ui.setMode($.MESSAGE),super.end()},()=>this.scene.ui.setMode($.MODIFIER_SELECT,this.isPlayer(),this.typeOptions,R,this.getRerollCost(this.scene.lockModifierTiers)))}),!1;let o,l;const D=this.getRerollCost(this.scene.lockModifierTiers);switch(L){case 0:switch(S){case 0:if(D<0||this.scene.money<D)return this.scene.ui.playError(),!1;this.scene.reroll=!0,this.scene.unshiftPhase(new AN(this.scene,this.rerollCount+1,this.typeOptions.map(g=>{var H;return(H=g.type)==null?void 0:H.tier}).filter(g=>g!==void 0))),this.scene.ui.clearText(),this.scene.ui.setMode($.MESSAGE).then(()=>super.end()),Ge.WAIVE_ROLL_FEE_OVERRIDE||(this.scene.money-=D,this.scene.updateMoneyText(),this.scene.animateMoneyChanged(!1)),this.scene.playSound("se/buy");break;case 1:this.scene.ui.setModeWithoutClear($.PARTY,as.MODIFIER_TRANSFER,-1,(g,H,F,p)=>{if(p!==void 0&&g<6&&p<6&&g!==p&&H>-1){const k=this.scene.findModifiers(j=>j instanceof at&&j.isTransferable&&j.pokemonId===A[g].id)[H];this.scene.tryTransferHeldItemModifier(k,A[p],!0,F)}else this.scene.ui.setMode($.MODIFIER_SELECT,this.isPlayer(),this.typeOptions,R,this.getRerollCost(this.scene.lockModifierTiers))},HE.FilterItemMaxStacks);break;case 2:this.scene.ui.setModeWithoutClear($.PARTY,as.CHECK,-1,()=>{this.scene.ui.setMode($.MODIFIER_SELECT,this.isPlayer(),this.typeOptions,R,this.getRerollCost(this.scene.lockModifierTiers))});break;case 3:if(D<0)return this.scene.ui.playError(),!1;this.scene.lockModifierTiers=!this.scene.lockModifierTiers;const _=this.scene.ui.getHandler();return _.setRerollCost(this.getRerollCost(this.scene.lockModifierTiers)),_.updateLockRaritiesText(),_.updateRerollCostText(),!1}return!0;case 1:if(this.typeOptions.length===0)return this.scene.ui.clearText(),this.scene.ui.setMode($.MESSAGE),super.end(),!0;this.typeOptions[S].type&&(o=this.typeOptions[S].type);break;default:const c=L6(this.scene.currentBattle.waveIndex,this.scene.getWaveMoneyAmount(1)),G=c[L>2||c.length<=EI?S:S+EI];G.type&&(o=G.type);const P=new $e(G.cost);this.scene.applyModifier(yI,!0,P),l=P.value;break}if(l&&this.scene.money<l&&!Ge.WAIVE_ROLL_FEE_OVERRIDE)return this.scene.ui.playError(),!1;const M=T((c,G=!1)=>{const P=this.scene.addModifier(c,!1,G,void 0,void 0,l);if((c.type instanceof ka||c.type instanceof Fi)&&this.scene.unshiftPhase(this.copy()),l&&!(c.type instanceof ka))P.then(_=>{_?(Ge.WAIVE_ROLL_FEE_OVERRIDE||(this.scene.money-=l,this.scene.updateMoneyText(),this.scene.animateMoneyChanged(!1)),this.scene.playSound("se/buy"),this.scene.ui.getHandler().updateCostText()):this.scene.ui.playError()});else{const _=T(()=>{this.scene.ui.clearText(),this.scene.ui.setMode($.MESSAGE),super.end()},"doEnd");P instanceof Promise?P.then(()=>_()):_()}},"applyModifier");if(o instanceof RR)if(o instanceof _l)this.scene.ui.setModeWithoutClear($.PARTY,as.SPLICE,-1,(c,G)=>{G!==void 0&&c<6&&G<6&&c!==G?this.scene.ui.setMode($.MODIFIER_SELECT,this.isPlayer()).then(()=>{const P=o.newModifier(A[c],A[G]);M(P,!0)}):this.scene.ui.setMode($.MODIFIER_SELECT,this.isPlayer(),this.typeOptions,R,this.getRerollCost(this.scene.lockModifierTiers))},o.selectFilter);else{const c=o,G=o instanceof aL,P=o instanceof Fi,_=o instanceof ka,g=o instanceof uT||o instanceof hT,H=G?as.MOVE_MODIFIER:P?as.TM_MODIFIER:_?as.REMEMBER_MOVE_MODIFIER:as.MODIFIER,F=P?o.moveId:void 0;this.scene.ui.setModeWithoutClear($.PARTY,H,-1,(p,v)=>{p<6?this.scene.ui.setMode($.MODIFIER_SELECT,this.isPlayer()).then(()=>{const k=G?o.newModifier(A[p],v-_T.MOVE_1):_?o.newModifier(A[p],v):o.newModifier(A[p]);M(k,!0)}):this.scene.ui.setMode($.MODIFIER_SELECT,this.isPlayer(),this.typeOptions,R,this.getRerollCost(this.scene.lockModifierTiers))},c.selectFilter,o instanceof aL?o.moveSelectFilter:void 0,F,g)}else M(o.newModifier());return!l},"modifierSelectCallback");this.scene.ui.setMode($.MODIFIER_SELECT,this.isPlayer(),this.typeOptions,R,this.getRerollCost(this.scene.lockModifierTiers))}updateSeed(){this.scene.resetSeed()}isPlayer(){return!0}getRerollCost(A){var a;let s=0;if(Ge.WAIVE_ROLL_FEE_OVERRIDE)return s;if(A){const L=[50,125,300,750,2e3];for(const S of this.typeOptions)s+=L[S.type.tier??0]}else s=250;let R=1;if(!xe((a=this.customModifierSettings)==null?void 0:a.rerollMultiplier)){if(this.customModifierSettings.rerollMultiplier<0)return-1;R=this.customModifierSettings.rerollMultiplier}const I=Math.min(Math.ceil(this.scene.currentBattle.waveIndex/10)*s*2**this.rerollCount*R,Number.MAX_SAFE_INTEGER),i=new $e(I);return this.scene.applyModifier(yI,!0,i),i.value}getPoolType(){return FE.PLAYER}getModifierTypeOptions(A){return u1(A,this.scene.getParty(),this.scene.lockModifierTiers?this.modifierTiers:void 0,this.customModifierSettings)}copy(){var A;return new AN(this.scene,this.rerollCount,this.modifierTiers,{guaranteedModifierTypeOptions:this.typeOptions,rerollMultiplier:(A=this.customModifierSettings)==null?void 0:A.rerollMultiplier,allowLuckUpgrades:!1},!0)}addModifier(A){return this.scene.addModifier(A,!1,!0)}};T(AN,"SelectModifierPhase");let IO=AN;const bV=U.t("partyUiHandler:choosePokemon");var as=(E=>(E[E.SWITCH=0]="SWITCH",E[E.FAINT_SWITCH=1]="FAINT_SWITCH",E[E.POST_BATTLE_SWITCH=2]="POST_BATTLE_SWITCH",E[E.REVIVAL_BLESSING=3]="REVIVAL_BLESSING",E[E.MODIFIER=4]="MODIFIER",E[E.MOVE_MODIFIER=5]="MOVE_MODIFIER",E[E.TM_MODIFIER=6]="TM_MODIFIER",E[E.REMEMBER_MOVE_MODIFIER=7]="REMEMBER_MOVE_MODIFIER",E[E.MODIFIER_TRANSFER=8]="MODIFIER_TRANSFER",E[E.SPLICE=9]="SPLICE",E[E.RELEASE=10]="RELEASE",E[E.CHECK=11]="CHECK",E[E.SELECT=12]="SELECT",E))(as||{}),_T=(E=>(E[E.CANCEL=-1]="CANCEL",E[E.SEND_OUT=0]="SEND_OUT",E[E.PASS_BATON=1]="PASS_BATON",E[E.REVIVE=2]="REVIVE",E[E.APPLY=3]="APPLY",E[E.TEACH=4]="TEACH",E[E.TRANSFER=5]="TRANSFER",E[E.SUMMARY=6]="SUMMARY",E[E.UNPAUSE_EVOLUTION=7]="UNPAUSE_EVOLUTION",E[E.SPLICE=8]="SPLICE",E[E.UNSPLICE=9]="UNSPLICE",E[E.RELEASE=10]="RELEASE",E[E.RENAME=11]="RENAME",E[E.SELECT=12]="SELECT",E[E.SCROLL_UP=1e3]="SCROLL_UP",E[E.SCROLL_DOWN=1001]="SCROLL_DOWN",E[E.FORM_CHANGE_ITEM=2e3]="FORM_CHANGE_ITEM",E[E.MOVE_1=3e3]="MOVE_1",E[E.MOVE_2=3001]="MOVE_2",E[E.MOVE_3=3002]="MOVE_3",E[E.MOVE_4=3003]="MOVE_4",E[E.ALL=4e3]="ALL",E))(_T||{});const CO=class CO extends vs{constructor(A){super(A,$.PARTY),this.optionsCursor=0,this.optionsScrollCursor=0,this.optionsScrollTotal=0,this.lastCursor=0,this.FilterChallengeLegal=s=>{const R=new je(!0);return Is(this.scene.gameMode,JE.POKEMON_IN_BATTLE,s,R),R.value?null:U.t("partyUiHandler:cantBeUsed",{pokemonName:b(s)})},this.localizedOptions=[0,6,-1,3,10,4,8,9,2,5,7,1,11,12]}setup(){const A=this.getUi(),s=this.scene.add.container(0,0);s.setName("party"),s.setVisible(!1),A.add(s),this.partyContainer=s,this.partyBg=this.scene.add.image(0,0,"party_bg"),this.partyBg.setName("img-party-bg"),s.add(this.partyBg),this.partyBg.setOrigin(0,1);const R=this.scene.add.container(0,0);R.setName("party-slots"),s.add(R),this.partySlotsContainer=R;const I=this.scene.add.container(0,-32);I.setName("party-msg-box"),s.add(I);const i=it(this.scene,1,31,262,30);i.setName("window-party-msg-box"),i.setOrigin(0,1),I.add(i),this.partyMessageBox=i;const a=se(this.scene,10,8,bV,V.WINDOW,{maxLines:2});a.setName("text-party-msg"),a.setOrigin(0,0),I.add(a),this.message=a;const L=new dh(this.scene,291,-16);s.add(L),this.partyCancelButton=L,this.optionsContainer=this.scene.add.container(this.scene.game.canvas.width/6-1,-1),s.add(this.optionsContainer),this.iconAnimHandler=new IL,this.iconAnimHandler.setup(this.scene);const S=1;this.moveInfoOverlay=new nO(this.scene,{scale:S,top:!0,x:1,y:-nO.getHeight(S)-1,width:this.scene.game.canvas.width/12-30}),A.add(this.moveInfoOverlay),this.options=[],this.partySlots=[]}show(A){return!A.length||this.active?!1:(super.show(A),this.moveInfoOverlay.clear(),this.partyUiMode=A[0],this.fieldIndex=A.length>1?A[1]:-1,this.selectCallback=A.length>2&&A[2]instanceof Function?A[2]:void 0,this.selectFilter=A.length>3&&A[3]instanceof Function?A[3]:CO.FilterAll,this.moveSelectFilter=A.length>4&&A[4]instanceof Function?A[4]:CO.FilterAllMoves,this.tmMoveId=A.length>5&&A[5]?A[5]:t.NONE,this.showMovePp=A.length>6&&A[6],this.partyContainer.setVisible(!0),this.partyBg.setTexture(`party_bg${this.scene.currentBattle.double?"_double":""}`),this.populatePartySlots(),this.setCursor(0),!0)}processInput(A){var I,i;const s=this.getUi();if(this.pendingPrompt||this.blockInput)return!1;if(this.awaitingActionInput){if((A===y.ACTION||A===y.CANCEL)&&this.onActionInput){s.playSelect();const a=this.onActionInput;return this.onActionInput=null,a(),this.awaitingActionInput=!1,!0}return!1}let R=!1;if(this.optionsMode){const a=this.options[this.optionsCursor];if(A===y.ACTION){const L=this.scene.getParty()[this.cursor];if(this.partyUiMode===8&&!this.transferMode&&a!==-1){this.startTransfer();let S;for(let o=0;o<this.scene.getParty().length;o++){const l=this.scene.getParty()[o],D=T(G=>this.scene.findModifiers(P=>P instanceof at&&P.isTransferable&&P.pokemonId===G.id),"getTransferrableItemsFromPokemon"),M=l.scene.findModifier(G=>G instanceof at&&G.pokemonId===l.id&&G.matchType(D(L)[this.transferOptionCursor])),c=this.partySlots.filter(G=>G.getPokemon()===l)[0];o!==this.transferCursor?M&&M.getMaxStackCount(this.scene)===M.stackCount?S="Not able":S="Able":S="",c.slotHpBar.setVisible(!1),c.slotHpOverlay.setVisible(!1),c.slotHpText.setVisible(!1),c.slotDescriptionLabel.setText(S),c.slotDescriptionLabel.setVisible(!0)}return this.clearOptions(),s.playSelect(),!0}else if(this.partyUiMode===7&&a!==-1){this.moveInfoOverlay.clear();const S=this.selectFilter(L);return S===null?((I=this.selectCallback)==null||I.call(this,this.cursor,a),this.clearOptions()):(this.clearOptions(),this.showText(S,void 0,()=>this.showText("",0),void 0,!0)),s.playSelect(),!0}else if(a!==6&&a!==7&&a!==9&&a!==10&&a!==-1&&a!==11||a===10&&this.partyUiMode===10){let S;const o=T(l=>this.scene.findModifiers(D=>D instanceof at&&D.isTransferable&&D.pokemonId===l.id),"getTransferrableItemsFromPokemon");if(a!==5&&a!==8?(S=this.selectFilter(L),S===null&&(a===0||a===1)&&(S=this.FilterChallengeLegal(L)),S===null&&this.partyUiMode===5&&(S=this.moveSelectFilter(L.moveset[this.optionsCursor]))):S=this.selectFilter(L,o(this.scene.getParty()[this.transferCursor])[this.transferOptionCursor]),S===null){if(this.partyUiMode!==9&&this.clearOptions(),this.selectCallback&&this.partyUiMode!==11)if(a===5)this.transferCursor!==this.cursor&&(this.transferAll?o(this.scene.getParty()[this.transferCursor]).forEach((l,D)=>this.selectCallback(this.transferCursor,D,this.transferQuantitiesMax[D],this.cursor)):this.selectCallback(this.transferCursor,this.transferOptionCursor,this.transferQuantities[this.transferOptionCursor],this.cursor)),this.clearTransfer();else if(this.partyUiMode===9)a===8?(this.selectCallback(this.transferCursor,this.cursor),this.clearTransfer()):this.startTransfer(),this.clearOptions();else if(a===10)this.doRelease(this.cursor);else{const l=this.selectCallback;this.selectCallback=null,l(this.cursor,a)}else if(a>=2e3&&this.scene.getCurrentPhase()instanceof IO){if(this.partyUiMode===11){const D=this.getFormChangeItemsModifiers(L)[a-2e3];D.active=!D.active,this.scene.triggerPokemonFormChange(L,Ce,!1,!0)}}else this.cursor&&this.scene.getCurrentPhase().handleCommand(vt.POKEMON,this.cursor,a===1);return this.partyUiMode!==4&&this.partyUiMode!==6&&this.partyUiMode!==5&&s.playSelect(),!0}else this.clearOptions(),this.showText(S,void 0,()=>this.showText("",0),void 0,!0)}else{if(a===6)return s.playSelect(),s.setModeWithoutClear($.SUMMARY,L).then(()=>this.clearOptions()),!0;if(a===7)this.clearOptions(),s.playSelect(),L.pauseEvolutions=!L.pauseEvolutions,this.showText(U.t(L.pauseEvolutions?"partyUiHandler:pausedEvolutions":"partyUiHandler:unpausedEvolutions",{pokemonName:b(L)}),void 0,()=>this.showText("",0),null,!0);else if(a===9)this.clearOptions(),s.playSelect(),this.showText(U.t("partyUiHandler:unspliceConfirmation",{fusionName:(i=L.fusionSpecies)==null?void 0:i.name,pokemonName:L.name}),null,()=>{s.setModeWithoutClear($.CONFIRM,()=>{const S=L.name;L.unfuse().then(()=>{this.clearPartySlots(),this.populatePartySlots(),s.setMode($.PARTY),this.showText(U.t("partyUiHandler:wasReverted",{fusionName:S,pokemonName:L.name}),void 0,()=>{s.setMode($.PARTY),this.showText("",0)},null,!0)})},()=>{s.setMode($.PARTY),this.showText("",0)})});else{if(a===10)return this.clearOptions(),s.playSelect(),this.cursor>=this.scene.currentBattle.getBattlerCount()||!L.isAllowedInBattle()?(this.blockInput=!0,this.showText(U.t("partyUiHandler:releaseConfirmation",{pokemonName:b(L)}),null,()=>{this.blockInput=!1,s.setModeWithoutClear($.CONFIRM,()=>{s.setMode($.PARTY),this.doRelease(this.cursor)},()=>{s.setMode($.PARTY),this.showText("",0)})})):this.showText(U.t("partyUiHandler:releaseInBattle"),null,()=>this.showText("",0),null,!0),!0;if(a===11)return this.clearOptions(),s.playSelect(),s.setModeWithoutClear($.RENAME_POKEMON,{buttonActions:[S=>{s.playSelect(),L.nickname=S,L.updateInfo(),this.clearPartySlots(),this.populatePartySlots(),s.setMode($.PARTY)},()=>{s.setMode($.PARTY)}]},L),!0;if(a===-1)return this.processInput(y.CANCEL);if(a===12)return s.playSelect(),!0}}}else{if(A===y.CANCEL)return this.clearOptions(),s.playSelect(),!0;switch(A){case y.LEFT:this.partyUiMode===8&&(this.transferQuantities[a]=this.transferQuantities[a]===1?this.transferQuantitiesMax[a]:this.transferQuantities[a]-1,this.updateOptions(),R=this.setCursor(this.optionsCursor));break;case y.RIGHT:this.partyUiMode===8&&(this.transferQuantities[a]=this.transferQuantities[a]===this.transferQuantitiesMax[a]?1:this.transferQuantities[a]+1,this.updateOptions(),R=this.setCursor(this.optionsCursor));break;case y.UP:this.partyUiMode===8&&(a!==4e3&&(this.transferQuantities[a]=this.transferQuantitiesMax[a]),this.updateOptions()),R=this.setCursor(this.optionsCursor?this.optionsCursor-1:this.options.length-1);break;case y.DOWN:this.partyUiMode===8&&(a!==4e3&&(this.transferQuantities[a]=this.transferQuantitiesMax[a]),this.updateOptions()),R=this.setCursor(this.optionsCursor<this.options.length-1?this.optionsCursor+1:0);break}if(this.partyUiMode===7){const L=this.options[this.optionsCursor],S=this.scene.getParty()[this.cursor],o=He[S.getLearnableLevelMoves()[L]];o?this.moveInfoOverlay.show(o):this.moveInfoOverlay.clear()}}}else{if(A===y.ACTION){if(this.cursor<6){if(this.partyUiMode===8&&!this.transferMode){const S=this.scene.findModifiers(o=>o instanceof at&&o.isTransferable&&o.pokemonId===this.scene.getParty()[this.cursor].id);this.transferQuantities=S.map(o=>o.getStackCount()),this.transferQuantitiesMax=S.map(o=>o.getStackCount())}this.showOptions(),s.playSelect()}else if(this.partyUiMode===1||this.partyUiMode===3)s.playError();else return this.processInput(y.CANCEL);return!0}else if(A===y.CANCEL){if((this.partyUiMode===8||this.partyUiMode===9)&&this.transferMode)this.clearTransfer(),s.playSelect();else if(this.partyUiMode!==1&&this.partyUiMode!==3)if(this.selectCallback){const S=this.selectCallback;this.selectCallback=null,S(6,-1),s.playSelect()}else s.setMode($.COMMAND,this.fieldIndex),s.playSelect();return!0}const a=this.partySlots.length,L=this.scene.currentBattle.getBattlerCount();switch(A){case y.UP:R=this.setCursor(this.cursor?this.cursor<6?this.cursor-1:a-1:6);break;case y.DOWN:R=this.setCursor(this.cursor<6?this.cursor<a-1?this.cursor+1:6:0);break;case y.LEFT:this.cursor>=L&&this.cursor<=6&&(R=this.setCursor(0));break;case y.RIGHT:if(a===L){R=this.setCursor(6);break}else if(L>=2&&a>L&&this.getCursor()===0&&this.lastCursor===1){R=this.setCursor(2);break}else if(a>L&&this.cursor<L){R=this.setCursor(this.lastCursor<6&&this.lastCursor||L);break}}}return R&&s.playSelect(),R}populatePartySlots(){const A=this.scene.getParty();this.cursor<6&&this.cursor>=A.length?this.cursor=A.length-1:this.cursor===6&&this.partyCancelButton.select(),this.lastCursor<6&&this.lastCursor>=A.length&&(this.lastCursor=A.length-1);for(const s in A){const R=parseInt(s),I=new Hh(this.scene,R,A[s],this.iconAnimHandler,this.partyUiMode,this.tmMoveId);this.scene.add.existing(I),this.partySlotsContainer.add(I),this.partySlots.push(I),this.cursor===R&&I.select()}}setCursor(A){let s;if(this.optionsMode){s=this.optionsCursor!==A;let R=!1;if(s&&this.optionsScroll)if(Math.abs(A-this.optionsCursor)===this.options.length-1)this.optionsScrollCursor=A?this.optionsScrollTotal-8:0,this.updateOptions();else{const I=A&&A>this.optionsCursor;I?this.options[A]===1001&&(R=!0,this.optionsScrollCursor++):!A&&this.optionsScrollCursor&&(R=!0,this.optionsScrollCursor--),R&&this.optionsScrollCursor===1&&(this.optionsScrollCursor+=I?1:-1)}R?this.updateOptions():this.optionsCursor=A,this.optionsCursorObj||(this.optionsCursorObj=this.scene.add.image(0,0,"cursor"),this.optionsCursorObj.setOrigin(0,0),this.optionsContainer.add(this.optionsCursorObj)),this.optionsCursorObj.setPosition(8-this.optionsBg.displayWidth,-19-16*(this.options.length-1-this.optionsCursor))}else s=this.cursor!==A,s&&(this.lastCursor=this.cursor,this.cursor=A,this.lastCursor<6?this.partySlots[this.lastCursor].deselect():this.lastCursor===6&&this.partyCancelButton.deselect(),A<6?this.partySlots[A].select():A===6&&this.partyCancelButton.select());return s}showText(A,s,R,I,i,a){A.length===0&&(A=bV),(A==null?void 0:A.indexOf(`
`))===-1?(this.partyMessageBox.setSize(262,30),this.message.setY(10)):(this.partyMessageBox.setSize(262,42),this.message.setY(-5)),super.showText(A,s,R,I,i,a)}showOptions(){if(this.cursor===6)return;this.optionsMode=!0;let A=U.t("partyUiHandler:doWhatWithThisPokemon");switch(this.partyUiMode){case 5:A=U.t("partyUiHandler:selectAMove");break;case 8:this.transferMode||(A=U.t("partyUiHandler:changeQuantity"));break;case 9:this.transferMode||(A=U.t("partyUiHandler:selectAnotherPokemonToSplice"));break}this.showText(A,0),this.updateOptions(),this.partyUiMode===8?this.partyMessageBox.setSize(262-Math.max(this.optionsBg.displayWidth-56,0),42):this.partyMessageBox.setSize(262-Math.max(this.optionsBg.displayWidth-56,0),30),this.setCursor(0)}updateOptions(){var o;const A=this.scene.getParty()[this.cursor],s=this.partyUiMode===7?A.getLearnableLevelMoves():[];this.partyUiMode===7&&(s!=null&&s.length)&&this.moveInfoOverlay.show(He[s[0]]);const R=this.partyUiMode===8?this.scene.findModifiers(l=>l instanceof at&&l.isTransferable&&l.pokemonId===A.id):[];this.options.length&&(this.options.splice(0,this.options.length),this.optionsContainer.removeAll(!0),this.eraseOptionsCursor());let I;if(this.partyUiMode!==5&&this.partyUiMode!==7&&(this.transferMode||this.partyUiMode!==8)){switch(this.partyUiMode){case 0:case 1:case 2:if(this.cursor>=this.scene.currentBattle.getBattlerCount()){const l=this.partyUiMode!==1&&this.scene.findModifier(c=>c instanceof _I&&c.pokemonId===this.scene.getPlayerField()[this.fieldIndex].id),D=this.scene.getPlayerField()[this.fieldIndex].getMoveHistory(),M=this.partyUiMode===1&&D.length&&((o=He[D[D.length-1].move].getAttrs(Ws)[0])==null?void 0:o.isBatonPass())&&D[D.length-1].result===DA.SUCCESS;this.options.push(M&&!l?1:0),l&&!M&&this.options.push(1)}break;case 3:this.options.push(2);break;case 4:this.options.push(3);break;case 6:this.options.push(4);break;case 8:this.options.push(5);break;case 9:this.transferMode?this.cursor!==this.transferCursor&&this.options.push(8):this.options.push(3);break;case 10:this.options.push(10);break;case 11:if(this.scene.getCurrentPhase()instanceof IO){I=this.getFormChangeItemsModifiers(A);for(let l=0;l<I.length;l++)this.options.push(2e3+l)}break;case 12:this.options.push(12);break}this.options.push(6),this.options.push(11),(Ht.hasOwnProperty(A.species.speciesId)||A.isFusion()&&A.fusionSpecies&&Ht.hasOwnProperty(A.fusionSpecies.speciesId))&&this.options.push(7),this.partyUiMode===0?(A.isFusion()&&this.options.push(9),this.options.push(10)):this.partyUiMode===9&&A.isFusion()&&this.options.push(9)}else if(this.partyUiMode===5)for(let l=0;l<A.moveset.length;l++)this.options.push(3e3+l);else if(this.partyUiMode===7){const l=A.getLearnableLevelMoves();for(let D=0;D<l.length;D++)this.options.push(D)}else{for(let l=0;l<R.length;l++)this.options.push(l);R.length>1&&this.options.push(4e3)}this.optionsScrollTotal=this.options.length;let i=this.optionsScrollCursor,a=Math.min(this.optionsScrollTotal,i+(!i||this.optionsScrollCursor+8>=this.optionsScrollTotal?8:7));this.optionsScroll=this.optionsScrollTotal>9,this.optionsScroll&&(this.options.splice(a,this.optionsScrollTotal),this.options.splice(0,i),i&&this.options.unshift(1e3),a<this.optionsScrollTotal&&this.options.push(1001)),this.options.push(-1),this.optionsBg=it(this.scene,0,0,0,16*this.options.length+13),this.optionsBg.setOrigin(1,1),this.optionsContainer.add(this.optionsBg),i=0,a=this.options.length;let L=0;const S=[];for(let l=i;l<a;l++){const D=this.options[this.options.length-(l+1)];let M=!1,c;if(D===1e3)c="↑";else if(D===1001)c="↓";else if(this.partyUiMode!==7&&(this.partyUiMode!==8||this.transferMode)||D===-1)switch(D){case 3e3:case 3001:case 3002:case 3003:const g=A.moveset[D-3e3];if(this.showMovePp){const H=g.getMovePp(),F=H-g.ppUsed;c=`${g.getName()} ${F}/${H}`}else c=g.getName();break;default:if(I&&D>=2e3){const H=I[D-2e3];c=`${H.active?U.t("partyUiHandler:DEACTIVATE"):U.t("partyUiHandler:ACTIVATE")} ${H.type.name}`}else D===7?c=`${A.pauseEvolutions?U.t("partyUiHandler:UNPAUSE_EVOLUTION"):U.t("partyUiHandler:PAUSE_EVOLUTION")}`:this.localizedOptions.includes(D)?c=U.t(`partyUiHandler:${_T[D]}`):c=Bn(_T[D]);break}else if(this.partyUiMode===7){const g=s[D];c=He[g].name,M=!A.getSpeciesForm().getLevelMoves().find(H=>H[1]===g)}else D===4e3?c=U.t("partyUiHandler:ALL"):c=R[D].type.name;const G=-6-16*l,P=PE(this.scene,0,G-16,c,V.WINDOW,{maxLines:1});M&&(P.setColor("#40c8f8"),P.setShadowColor("#006090")),P.setOrigin(0,0);const _=R[D];if(this.partyUiMode===8&&this.transferQuantitiesMax[D]>1&&!this.transferMode&&_!==void 0&&_.type.name===c){let g=` (${this.transferQuantities[D]})`;this.transferQuantitiesMax[D]===_.getMaxHeldItemCount(void 0)&&(g=`[color=${zt(V.SUMMARY_RED)}]${g}[/color]`),P.setText(c+g)}P.setText(`[shadow]${P.text}[/shadow]`),S.push(P),L=Math.max(P.displayWidth,L),this.optionsContainer.add(P)}this.optionsBg.width=Math.max(L+24,94);for(const l of S)l.x=15-this.optionsBg.width}startTransfer(){this.transferMode=!0,this.transferCursor=this.cursor,this.transferOptionCursor=this.getOptionsCursorWithScroll(),this.transferAll=this.options[this.optionsCursor]===4e3,this.partySlots[this.transferCursor].setTransfer(!0)}clearTransfer(){this.transferMode=!1,this.transferAll=!1,this.partySlots[this.transferCursor].setTransfer(!1);for(let A=0;A<this.partySlots.length;A++)this.partySlots[A].slotDescriptionLabel.setVisible(!1),this.partySlots[A].slotHpBar.setVisible(!0),this.partySlots[A].slotHpOverlay.setVisible(!0),this.partySlots[A].slotHpText.setVisible(!0)}doRelease(A){this.showText(this.getReleaseMessage(b(this.scene.getParty()[A])),null,()=>{if(this.clearPartySlots(),this.scene.removePartyMemberModifiers(A),this.scene.getParty().splice(A,1)[0].destroy(),this.populatePartySlots(),this.cursor>=this.scene.getParty().length&&this.setCursor(this.cursor-1),this.partyUiMode===10){const R=this.selectCallback;this.selectCallback=null,R&&R(this.cursor,10)}this.showText("",0)},null,!0)}getReleaseMessage(A){const s=sA(128);return s<20?U.t("partyUiHandler:goodbye",{pokemonName:A}):s<40?U.t("partyUiHandler:byebye",{pokemonName:A}):s<60?U.t("partyUiHandler:farewell",{pokemonName:A}):s<80?U.t("partyUiHandler:soLong",{pokemonName:A}):s<100?U.t("partyUiHandler:thisIsWhereWePart",{pokemonName:A}):s<108?U.t("partyUiHandler:illMissYou",{pokemonName:A}):s<116?U.t("partyUiHandler:illNeverForgetYou",{pokemonName:A}):s<124?U.t("partyUiHandler:untilWeMeetAgain",{pokemonName:A}):s<127?U.t("partyUiHandler:sayonara",{pokemonName:A}):U.t("partyUiHandler:smellYaLater",{pokemonName:A})}getFormChangeItemsModifiers(A){let s=this.scene.findModifiers(I=>I instanceof AR&&I.pokemonId===A.id);const R=s.filter(I=>I.active&&I.formChangeItem===YR.ULTRANECROZIUM_Z);return R.length>0?R:(s.find(I=>I.active)?s=s.filter(I=>I.active||I.formChangeItem===YR.ULTRANECROZIUM_Z):A.species.speciesId===e.NECROZMA&&(s=s.filter(I=>I.formChangeItem!==YR.ULTRANECROZIUM_Z)),s)}getOptionsCursorWithScroll(){return this.optionsCursor+this.optionsScrollCursor+(this.options&&this.options[0]===1e3?-1:0)}clearOptions(){this.moveInfoOverlay.clear(),this.optionsMode=!1,this.optionsScroll=!1,this.optionsScrollCursor=0,this.optionsScrollTotal=0,this.options.splice(0,this.options.length),this.optionsContainer.removeAll(!0),this.eraseOptionsCursor(),this.partyMessageBox.setSize(262,30),this.showText("",0)}eraseOptionsCursor(){this.optionsCursorObj&&this.optionsCursorObj.destroy(),this.optionsCursorObj=null}clear(){super.clear(),this.moveInfoOverlay.clear(),this.partyContainer.setVisible(!1),this.clearPartySlots()}clearPartySlots(){this.partySlots.splice(0,this.partySlots.length),this.partySlotsContainer.removeAll(!0)}};T(CO,"PartyUiHandler"),CO.FilterAll=A=>null,CO.FilterNonFainted=A=>A.isFainted()?U.t("partyUiHandler:noEnergy",{pokemonName:b(A)}):null,CO.FilterFainted=A=>A.isFainted()?null:U.t("partyUiHandler:hasEnergy",{pokemonName:b(A)}),CO.FilterAllMoves=A=>null,CO.FilterItemMaxStacks=(A,s)=>{const R=A.scene.findModifier(I=>I instanceof at&&I.pokemonId===A.id&&I.matchType(s));return R&&R.stackCount===R.getMaxStackCount(A.scene)?U.t("partyUiHandler:tooManyItems",{pokemonName:b(A)}):null},CO.NoEffectMessage=U.t("partyUiHandler:anyEffect");let HE=CO;const GB=class GB extends Phaser.GameObjects.Container{constructor(A,s,R,I,i,a){super(A,s>=A.currentBattle.getBattlerCount()?230.5:64,s>=A.currentBattle.getBattlerCount()?-184+(A.currentBattle.double?-40:0)+(28+(A.currentBattle.double?8:0))*s:-124+(A.currentBattle.double?-8:0)+s*64),this.slotIndex=s,this.pokemon=R,this.iconAnimHandler=I,this.setup(i,a)}getPokemon(){return this.pokemon}setup(A,s){var P;const R=this.scene.currentBattle.getBattlerCount(),I=`party_slot${this.slotIndex>=R?"":"_main"}`,i=this.scene.add.sprite(0,0,I,`${I}${this.pokemon.hp?"":"_fnt"}`);this.slotBg=i,this.add(i);const a=this.scene.add.sprite(this.slotIndex>=R?-85.5:-51,this.slotIndex>=R?0:-20.5,"party_pb");this.slotPb=a,this.add(a),this.pokemonIcon=this.scene.addPokemonIcon(this.pokemon,a.x,a.y,.5,.5,!0),this.add(this.pokemonIcon),this.iconAnimHandler.addOrUpdate(this.pokemonIcon,ys.PASSIVE);const L=this.scene.add.container(0,0);this.add(L);let S=this.pokemon.getNameToRender(),o;const l=se(this.scene,0,0,S,V.PARTY);for(o=l.displayWidth;o>(this.slotIndex>=R?52:76-(this.pokemon.fusionSpecies?8:0));)S=`${S.slice(0,S.endsWith(".")?-2:-1).trimEnd()}.`,l.setText(S),o=l.displayWidth;l.destroy(),this.slotName=se(this.scene,0,0,S,V.PARTY),this.slotName.setPositionRelative(i,this.slotIndex>=R?21:24,this.slotIndex>=R?2:10),this.slotName.setOrigin(0,0);const D=this.scene.add.image(0,0,"party_slot_overlay_lv");D.setPositionRelative(this.slotName,8,12),D.setOrigin(0,0);const M=se(this.scene,0,0,this.pokemon.level.toString(),this.pokemon.level<this.scene.getMaxExpLevel()?V.PARTY:V.PARTY_RED);M.setPositionRelative(D,9,0),M.setOrigin(0,.25),L.add([this.slotName,D,M]);const c=$L(this.pokemon.getGender(!0));if(c){const _=se(this.scene,0,0,c,V.PARTY);_.setColor(gn(this.pokemon.getGender(!0))),_.setShadowColor(gn(this.pokemon.getGender(!0),!0)),this.slotIndex>=R?_.setPositionRelative(D,36,0):_.setPositionRelative(this.slotName,76-(this.pokemon.fusionSpecies?8:0),3),_.setOrigin(0,.25),L.add(_)}if(this.pokemon.fusionSpecies){const _=this.scene.add.image(0,0,"icon_spliced");_.setScale(.5),_.setOrigin(0,0),this.slotIndex>=R?_.setPositionRelative(D,36+(c?8:0),.5):_.setPositionRelative(this.slotName,76,3.5),L.add(_)}if(this.pokemon.status){const _=this.scene.add.sprite(0,0,UR("statuses"));_.setFrame(J[(P=this.pokemon.status)==null?void 0:P.effect].toLowerCase()),_.setOrigin(0,0),_.setPositionRelative(D,this.slotIndex>=R?43:55,0),L.add(_)}if(this.pokemon.isShiny()){const _=this.pokemon.isFusion()&&this.pokemon.shiny&&this.pokemon.fusionShiny,g=this.scene.add.image(0,0,`shiny_star_small${_?"_1":""}`);if(g.setOrigin(0,0),g.setPositionRelative(this.slotName,-9,3),g.setTint(GE(_?this.pokemon.variant:this.pokemon.getVariant())),L.add(g),_){const H=this.scene.add.image(0,0,"shiny_star_small_2");H.setOrigin(0,0),H.setPosition(g.x,g.y),H.setTint(GE(this.pokemon.fusionVariant)),L.add(H)}}this.slotHpBar=this.scene.add.image(0,0,"party_slot_hp_bar"),this.slotHpBar.setPositionRelative(i,this.slotIndex>=R?72:8,this.slotIndex>=R?6:31),this.slotHpBar.setOrigin(0,0),this.slotHpBar.setVisible(!1);const G=this.pokemon.getHpRatio();if(this.slotHpOverlay=this.scene.add.sprite(0,0,"party_slot_hp_overlay",G>.5?"high":G>.25?"medium":"low"),this.slotHpOverlay.setPositionRelative(this.slotHpBar,16,2),this.slotHpOverlay.setOrigin(0,0),this.slotHpOverlay.setScale(G,1),this.slotHpOverlay.setVisible(!1),this.slotHpText=se(this.scene,0,0,`${this.pokemon.hp}/${this.pokemon.getMaxHp()}`,V.PARTY),this.slotHpText.setPositionRelative(this.slotHpBar,this.slotHpBar.width-3,this.slotHpBar.height-2),this.slotHpText.setOrigin(1,0),this.slotHpText.setVisible(!1),this.slotDescriptionLabel=se(this.scene,0,0,"",V.MESSAGE),this.slotDescriptionLabel.setPositionRelative(i,this.slotIndex>=R?94:32,this.slotIndex>=R?16:46),this.slotDescriptionLabel.setOrigin(0,1),this.slotDescriptionLabel.setVisible(!1),L.add([this.slotHpBar,this.slotHpOverlay,this.slotHpText,this.slotDescriptionLabel]),A!==6)this.slotDescriptionLabel.setVisible(!1),this.slotHpBar.setVisible(!0),this.slotHpOverlay.setVisible(!0),this.slotHpText.setVisible(!0);else{this.slotHpBar.setVisible(!1),this.slotHpOverlay.setVisible(!1),this.slotHpText.setVisible(!1);let _;this.pokemon.getMoveset().filter(g=>(g==null?void 0:g.moveId)===s).length>0?_=U.t("partyUiHandler:learned"):this.pokemon.compatibleTms.indexOf(s)===-1?_=U.t("partyUiHandler:notAble"):_=U.t("partyUiHandler:able"),this.slotDescriptionLabel.setText(_),this.slotDescriptionLabel.setVisible(!0)}}select(){this.selected||(this.selected=!0,this.iconAnimHandler.addOrUpdate(this.pokemonIcon,ys.ACTIVE),this.updateSlotTexture(),this.slotPb.setFrame("party_pb_sel"))}deselect(){this.selected&&(this.selected=!1,this.iconAnimHandler.addOrUpdate(this.pokemonIcon,ys.PASSIVE),this.updateSlotTexture(),this.slotPb.setFrame("party_pb"))}setTransfer(A){this.transfer!==A&&(this.transfer=A,this.updateSlotTexture())}updateSlotTexture(){const A=this.scene.currentBattle.getBattlerCount();this.slotBg.setTexture(`party_slot${this.slotIndex>=A?"":"_main"}`,`party_slot${this.slotIndex>=A?"":"_main"}${this.transfer?"_swap":this.pokemon.hp?"":"_fnt"}${this.selected?"_sel":""}`)}};T(GB,"PartySlot");let Hh=GB;const PB=class PB extends Phaser.GameObjects.Container{constructor(A,s,R){super(A,s,R),this.setup()}setup(){const A=this.scene.add.sprite(0,0,"party_cancel");this.add(A),this.partyCancelBg=A;const s=this.scene.add.sprite(-17,0,"party_pb");this.add(s),this.partyCancelPb=s;const R=se(this.scene,-8,-7,U.t("partyUiHandler:cancel"),V.PARTY);this.add(R)}select(){this.selected||(this.selected=!0,this.partyCancelBg.setFrame("party_cancel_sel"),this.partyCancelPb.setFrame("party_pb_sel"))}deselect(){this.selected&&(this.selected=!1,this.partyCancelBg.setFrame("party_cancel"),this.partyCancelPb.setFrame("party_pb"))}};T(PB,"PartyCancelButton");let dh=PB;const _B=class _B extends zE{constructor(A,s){super(A,s)}start(){var R;super.start();const A=this.scene.currentBattle.turnCommands[this.fieldIndex],s=(R=A==null?void 0:A.move)==null?void 0:R.move;this.scene.ui.setMode($.TARGET_SELECT,this.fieldIndex,s,I=>{this.scene.ui.setMode($.MESSAGE);const i=this.scene.getField(),a=i[this.fieldIndex],L=He[s];if(L&&a.isMoveTargetRestricted(L.id,a,i[I[0]])){const S=a.getRestrictingTag(s,a,i[I[0]]).selectionDeniedText(a,L.id);a.scene.queueMessage(U.t(S,{moveName:L.name}),0,!0),I=[]}I.length<1?(this.scene.currentBattle.turnCommands[this.fieldIndex]=null,this.scene.unshiftPhase(new HT(this.scene,this.fieldIndex))):A.targets=I,(A==null?void 0:A.command)===vt.BALL&&this.fieldIndex&&(this.scene.currentBattle.turnCommands[this.fieldIndex-1].skip=!0),this.end()})}};T(_B,"SelectTargetPhase");let ml=_B;const EN=class EN extends YO{constructor(A,s){super(A),this.fieldIndex=s}start(){var I,i;super.start();const A=this.scene.ui.handlers[$.COMMAND];if(A&&(this.scene.currentBattle.turn===1||A.getCursor()===vt.POKEMON?A.setCursor(vt.FIGHT):A.setCursor(A.getCursor())),this.fieldIndex)if(this.scene.getPlayerField().filter(a=>a.isActive()).length===1)this.fieldIndex=eR.CENTER;else{const a=this.scene.currentBattle.turnCommands[this.fieldIndex-1];((a==null?void 0:a.command)===vt.BALL||(a==null?void 0:a.command)===vt.RUN)&&(this.scene.currentBattle.turnCommands[this.fieldIndex]={command:a==null?void 0:a.command,skip:!0})}if((I=this.scene.currentBattle.turnCommands[this.fieldIndex])!=null&&I.skip)return this.end();const s=this.scene.getPlayerField()[this.fieldIndex],R=s.getMoveQueue();for(;R.length&&R[0]&&R[0].move&&(!s.getMoveset().find(a=>(a==null?void 0:a.moveId)===R[0].move)||!s.getMoveset()[s.getMoveset().findIndex(a=>(a==null?void 0:a.moveId)===R[0].move)].isUsable(s,R[0].ignorePP));)R.shift();if(R.length){const a=R[0];if(!a.move)this.handleCommand(vt.FIGHT,-1,!1);else{const L=s.getMoveset().findIndex(S=>(S==null?void 0:S.moveId)===a.move);L>-1&&s.getMoveset()[L].isUsable(s,a.ignorePP)?this.handleCommand(vt.FIGHT,L,a.ignorePP,{targets:a.targets,multiple:a.targets.length>1}):this.scene.ui.setMode($.COMMAND,this.fieldIndex)}}else this.scene.currentBattle.isBattleMysteryEncounter()&&((i=this.scene.currentBattle.mysteryEncounter)!=null&&i.skipToFightInput)?(this.scene.ui.clearText(),this.scene.ui.setMode($.FIGHT,this.fieldIndex)):this.scene.ui.setMode($.COMMAND,this.fieldIndex)}handleCommand(A,s,...R){var a,L;const I=this.scene.getPlayerField()[this.fieldIndex];let i;switch(A){case vt.FIGHT:let S=!1;if(s===-1||I.trySelectMove(s,R[0])||(S=s>-1&&!I.getMoveset().filter(G=>G==null?void 0:G.isUsable(I)).length)){const G=S?t.STRUGGLE:s>-1?I.getMoveset()[s].moveId:t.NONE,P={command:vt.FIGHT,cursor:s,move:{move:G,targets:[],ignorePP:R[0]},args:R},_=R.length<3?xn(I,G):R[2];G||(P.targets=[this.fieldIndex]),b(I),_.targets.length>1&&_.multiple&&this.scene.unshiftPhase(new ml(this.scene,this.fieldIndex)),_.targets.length<=1||_.multiple?P.move.targets=_.targets:I.getTag(Y.CHARGING)&&I.getMoveQueue().length>=1?P.move.targets=I.getMoveQueue()[0].targets:this.scene.unshiftPhase(new ml(this.scene,this.fieldIndex)),this.scene.currentBattle.turnCommands[this.fieldIndex]=P,i=!0}else if(s<I.getMoveset().length){const G=I.getMoveset()[s];this.scene.ui.setMode($.MESSAGE);const P=I.isMoveRestricted(G.moveId,I)?I.getRestrictingTag(G.moveId,I).selectionDeniedText(I,G.moveId):G.getName().endsWith(" (N)")?"battle:moveNotImplemented":"battle:moveNoPP",_=G.getName().replace(" (N)","");this.scene.ui.showText(U.t(P,{moveName:_}),null,()=>{this.scene.ui.clearText(),this.scene.ui.setMode($.FIGHT,this.fieldIndex)},null,!0)}break;case vt.BALL:const o=this.scene.getEnemyField().filter(G=>G.isActive(!0)).some(G=>!G.scene.gameData.dexData[G.species.speciesId].caughtAttr)&&this.scene.gameData.getStarterCount(G=>!!G.caughtAttr)<Object.keys(CA).length-1;if(this.scene.arena.biomeType===r.END&&(!this.scene.gameMode.isClassic||this.scene.gameMode.isFreshStartChallenge()||o))this.scene.ui.setMode($.COMMAND,this.fieldIndex),this.scene.ui.setMode($.MESSAGE),this.scene.ui.showText(U.t("battle:noPokeballForce"),null,()=>{this.scene.ui.showText("",0),this.scene.ui.setMode($.COMMAND,this.fieldIndex)},null,!0);else if(this.scene.currentBattle.battleType===Nt.TRAINER)this.scene.ui.setMode($.COMMAND,this.fieldIndex),this.scene.ui.setMode($.MESSAGE),this.scene.ui.showText(U.t("battle:noPokeballTrainer"),null,()=>{this.scene.ui.showText("",0),this.scene.ui.setMode($.COMMAND,this.fieldIndex)},null,!0);else if(this.scene.currentBattle.isBattleMysteryEncounter()&&!this.scene.currentBattle.mysteryEncounter.catchAllowed)this.scene.ui.setMode($.COMMAND,this.fieldIndex),this.scene.ui.setMode($.MESSAGE),this.scene.ui.showText(U.t("battle:noPokeballMysteryEncounter"),null,()=>{this.scene.ui.showText("",0),this.scene.ui.setMode($.COMMAND,this.fieldIndex)},null,!0);else{const G=this.scene.getEnemyField().filter(P=>P.isActive(!0)).map(P=>P.getBattlerIndex());if(G.length>1)this.scene.ui.setMode($.COMMAND,this.fieldIndex),this.scene.ui.setMode($.MESSAGE),this.scene.ui.showText(U.t("battle:noPokeballMulti"),null,()=>{this.scene.ui.showText("",0),this.scene.ui.setMode($.COMMAND,this.fieldIndex)},null,!0);else if(s<5){const P=this.scene.getEnemyField().find(_=>_.isActive(!0));P!=null&&P.isBoss()&&(P==null?void 0:P.bossSegmentIndex)>=1&&!(P!=null&&P.hasAbility(O.WONDER_GUARD,!1,!0))&&s<ge.MASTER_BALL?(this.scene.ui.setMode($.COMMAND,this.fieldIndex),this.scene.ui.setMode($.MESSAGE),this.scene.ui.showText(U.t("battle:noPokeballStrong"),null,()=>{this.scene.ui.showText("",0),this.scene.ui.setMode($.COMMAND,this.fieldIndex)},null,!0)):(this.scene.currentBattle.turnCommands[this.fieldIndex]={command:vt.BALL,cursor:s},this.scene.currentBattle.turnCommands[this.fieldIndex].targets=G,this.fieldIndex&&(this.scene.currentBattle.turnCommands[this.fieldIndex-1].skip=!0),i=!0)}}break;case vt.POKEMON:case vt.RUN:const l=A===vt.POKEMON,{currentBattle:D,arena:M}=this.scene,c=(a=D.mysteryEncounter)==null?void 0:a.fleeAllowed;if(!l&&(M.biomeType===r.END||!xe(c)&&!c))this.scene.ui.setMode($.COMMAND,this.fieldIndex),this.scene.ui.setMode($.MESSAGE),this.scene.ui.showText(U.t("battle:noEscapeForce"),null,()=>{this.scene.ui.showText("",0),this.scene.ui.setMode($.COMMAND,this.fieldIndex)},null,!0);else if(!l&&(D.battleType===Nt.TRAINER||((L=D.mysteryEncounter)==null?void 0:L.encounterMode)===sE.TRAINER_BATTLE))this.scene.ui.setMode($.COMMAND,this.fieldIndex),this.scene.ui.setMode($.MESSAGE),this.scene.ui.showText(U.t("battle:noEscapeTrainer"),null,()=>{this.scene.ui.showText("",0),this.scene.ui.setMode($.COMMAND,this.fieldIndex)},null,!0);else{const G=l&&R[0],P=[];if(G||!I.isTrapped(P))D.turnCommands[this.fieldIndex]=l?{command:vt.POKEMON,cursor:s,args:R}:{command:vt.RUN},i=!0,!l&&this.fieldIndex&&(D.turnCommands[this.fieldIndex-1].skip=!0);else if(P.length>0)l||this.scene.ui.setMode($.MESSAGE),this.scene.ui.showText(P[0],null,()=>{this.scene.ui.showText("",0),l||this.scene.ui.setMode($.COMMAND,this.fieldIndex)},null,!0);else{const _=I.getTag(GR);if(!_){D.turnCommands[this.fieldIndex]=l?{command:vt.POKEMON,cursor:s,args:R}:{command:vt.RUN};break}l||(this.scene.ui.setMode($.COMMAND,this.fieldIndex),this.scene.ui.setMode($.MESSAGE)),this.scene.ui.showText(U.t("battle:noEscapePokemon",{pokemonName:_.sourceId&&this.scene.getPokemonById(_.sourceId)?b(this.scene.getPokemonById(_.sourceId)):"",moveName:_.getMoveName(),escapeVerb:l?U.t("battle:escapeVerbSwitch"):U.t("battle:escapeVerbFlee")}),null,()=>{this.scene.ui.showText("",0),l||this.scene.ui.setMode($.COMMAND,this.fieldIndex)},null,!0)}}break}return i&&this.end(),i}cancel(){this.fieldIndex&&(this.scene.unshiftPhase(new EN(this.scene,0)),this.scene.unshiftPhase(new EN(this.scene,1)),this.end())}checkFightOverride(){const A=this.getPokemon(),s=A.getTag(vL);if(!s)return!1;const R=A.getMoveset().findIndex(I=>(I==null?void 0:I.moveId)===s.moveId);return R===-1||!A.getMoveset()[R].isUsable(A)?!1:(this.handleCommand(vt.FIGHT,R,!1),!0)}getFieldIndex(){return this.fieldIndex}getPokemon(){return this.scene.getPlayerField()[this.fieldIndex]}end(){this.scene.ui.setMode($.MESSAGE).then(()=>super.end())}};T(EN,"CommandPhase");let HT=EN;var vt=(E=>(E[E.FIGHT=0]="FIGHT",E[E.BALL=1]="BALL",E[E.POKEMON=2]="POKEMON",E[E.RUN=3]="RUN",E))(vt||{});const HB=class HB extends os{constructor(A){super(A,$.COMMAND),this.fieldIndex=0,this.cursor2=0}setup(){const A=this.getUi(),s=[U.t("commandUiHandler:fight"),U.t("commandUiHandler:ball"),U.t("commandUiHandler:pokemon"),U.t("commandUiHandler:run")];this.commandsContainer=this.scene.add.container(217,-38.7),this.commandsContainer.setName("commands"),this.commandsContainer.setVisible(!1),A.add(this.commandsContainer);for(let R=0;R<s.length;R++){const I=se(this.scene,R%2===0?0:55.8,R<2?0:16,s[R],V.WINDOW);I.setName(s[R]),this.commandsContainer.add(I)}}show(A){super.show(A),this.fieldIndex=A.length?A[0]:0,this.commandsContainer.setVisible(!0);let s;const R=this.scene.getCurrentPhase();R instanceof HT?s=R:s=this.scene.getStandbyPhase();const I=this.getUi().getMessageHandler();return I.bg.setVisible(!0),I.commandWindow.setVisible(!0),I.movesWindowContainer.setVisible(!1),I.message.setWordWrapWidth(1110),I.showText(U.t("commandUiHandler:actionMessage",{pokemonName:b(s.getPokemon())}),0),this.getCursor()===2?this.setCursor(0):this.setCursor(this.getCursor()),!0}processInput(A){const s=this.getUi();let R=!1;const I=this.getCursor();if(A===y.CANCEL||A===y.ACTION)if(A===y.ACTION)switch(I){case 0:if(this.scene.getCurrentPhase().checkFightOverride())return!0;s.setMode($.FIGHT,this.scene.getCurrentPhase().getFieldIndex()),R=!0;break;case 1:s.setModeWithoutClear($.BALL),R=!0;break;case 2:s.setMode($.PARTY,as.SWITCH,this.scene.getCurrentPhase().getPokemon().getFieldIndex(),null,HE.FilterNonFainted),R=!0;break;case 3:this.scene.getCurrentPhase().handleCommand(3,0),R=!0;break}else this.scene.getCurrentPhase().cancel();else switch(A){case y.UP:I>=2&&(R=this.setCursor(I-2));break;case y.DOWN:I<2&&(R=this.setCursor(I+2));break;case y.LEFT:I%2===1&&(R=this.setCursor(I-1));break;case y.RIGHT:I%2===0&&(R=this.setCursor(I+1));break}return R&&s.playSelect(),R}getCursor(){return this.fieldIndex?this.cursor2:this.cursor}setCursor(A){const s=this.getCursor()!==A;return s&&(this.fieldIndex?this.cursor2=A:this.cursor=A),this.cursorObj||(this.cursorObj=this.scene.add.image(0,0,"cursor"),this.commandsContainer.add(this.cursorObj)),this.cursorObj.setPosition(-5+(A%2===1?56:0),8+(A>=2?16:0)),s}clear(){super.clear(),this.getUi().getMessageHandler().commandWindow.setVisible(!1),this.commandsContainer.setVisible(!1),this.getUi().getMessageHandler().clearText(),this.eraseCursor()}eraseCursor(){this.cursorObj&&this.cursorObj.destroy(),this.cursorObj=null}};T(HB,"CommandUiHandler");let fh=HB;const sN=class sN extends os{constructor(A){super(A,$.FIGHT),this.fieldIndex=0,this.cursor2=0}setup(){const A=this.getUi();this.movesContainer=this.scene.add.container(18,-38.7),this.movesContainer.setName(sN.MOVES_CONTAINER_NAME),A.add(this.movesContainer),this.moveInfoContainer=this.scene.add.container(1,0),this.moveInfoContainer.setName("move-info"),A.add(this.moveInfoContainer),this.typeIcon=this.scene.add.sprite(this.scene.scaledCanvas.width-57,-36,UR("types"),"unknown"),this.typeIcon.setVisible(!1),this.moveInfoContainer.add(this.typeIcon),this.moveCategoryIcon=this.scene.add.sprite(this.scene.scaledCanvas.width-25,-36,"categories","physical"),this.moveCategoryIcon.setVisible(!1),this.moveInfoContainer.add(this.moveCategoryIcon),this.ppLabel=se(this.scene,this.scene.scaledCanvas.width-70,-26,"PP",V.MOVE_INFO_CONTENT),this.ppLabel.setOrigin(0,.5),this.ppLabel.setVisible(!1),this.ppLabel.setText(U.t("fightUiHandler:pp")),this.moveInfoContainer.add(this.ppLabel),this.ppText=se(this.scene,this.scene.scaledCanvas.width-12,-26,"--/--",V.MOVE_INFO_CONTENT),this.ppText.setOrigin(1,.5),this.ppText.setVisible(!1),this.moveInfoContainer.add(this.ppText),this.powerLabel=se(this.scene,this.scene.scaledCanvas.width-70,-18,"POWER",V.MOVE_INFO_CONTENT),this.powerLabel.setOrigin(0,.5),this.powerLabel.setVisible(!1),this.powerLabel.setText(U.t("fightUiHandler:power")),this.moveInfoContainer.add(this.powerLabel),this.powerText=se(this.scene,this.scene.scaledCanvas.width-12,-18,"---",V.MOVE_INFO_CONTENT),this.powerText.setOrigin(1,.5),this.powerText.setVisible(!1),this.moveInfoContainer.add(this.powerText),this.accuracyLabel=se(this.scene,this.scene.scaledCanvas.width-70,-10,"ACC",V.MOVE_INFO_CONTENT),this.accuracyLabel.setOrigin(0,.5),this.accuracyLabel.setVisible(!1),this.accuracyLabel.setText(U.t("fightUiHandler:accuracy")),this.moveInfoContainer.add(this.accuracyLabel),this.accuracyText=se(this.scene,this.scene.scaledCanvas.width-12,-10,"---",V.MOVE_INFO_CONTENT),this.accuracyText.setOrigin(1,.5),this.accuracyText.setVisible(!1),this.moveInfoContainer.add(this.accuracyText);const s=1;this.moveInfoOverlay=new nO(this.scene,{delayVisibility:!0,scale:s,onSide:!0,right:!0,x:0,y:-nO.getHeight(s,!0),width:this.scene.game.canvas.width/6+4,hideEffectBox:!0,hideBg:!0}),A.add(this.moveInfoOverlay),this.scene.addInfoToggle(this.moveInfoOverlay),this.scene.addInfoToggle(this)}show(A){super.show(A),this.fieldIndex=A.length?A[0]:0;const s=this.getUi().getMessageHandler();return s.bg.setVisible(!1),s.commandWindow.setVisible(!1),s.movesWindowContainer.setVisible(!0),this.scene.getCurrentPhase().getPokemon().battleSummonData.turnCount<=1?this.setCursor(0):this.setCursor(this.getCursor()),this.displayMoves(),this.toggleInfo(!1),this.active=!0,!0}processInput(A){const s=this.getUi();let R=!1;const I=this.getCursor();if(A===y.CANCEL||A===y.ACTION)if(A===y.ACTION)this.scene.getCurrentPhase().handleCommand(vt.FIGHT,I,!1)?R=!0:s.playError();else{const{battleType:i,mysteryEncounter:a}=this.scene.currentBattle;(i!==Nt.MYSTERY_ENCOUNTER||!(a!=null&&a.skipToFightInput))&&(s.setMode($.COMMAND,this.fieldIndex),R=!0)}else switch(A){case y.UP:I>=2&&(R=this.setCursor(I-2));break;case y.DOWN:I<2&&(R=this.setCursor(I+2));break;case y.LEFT:I%2===1&&(R=this.setCursor(I-1));break;case y.RIGHT:I%2===0&&(R=this.setCursor(I+1));break}return R&&s.playSelect(),R}toggleInfo(A){var s,R;A&&(this.movesContainer.setVisible(!1),(s=this.cursorObj)==null||s.setVisible(!1)),this.scene.tweens.add({targets:[this.movesContainer,this.cursorObj],duration:Ve(125),ease:"Sine.easeInOut",alpha:A?0:1}),A||(this.movesContainer.setVisible(!0),(R=this.cursorObj)==null||R.setVisible(!0))}isActive(){return this.active}getCursor(){return this.fieldIndex?this.cursor2:this.cursor}setCursor(A){const s=this.getUi();this.moveInfoOverlay.clear();const R=this.getCursor()!==A;R&&(this.fieldIndex?this.cursor2=A:this.cursor=A),this.cursorObj||(this.cursorObj=this.scene.add.image(0,0,"cursor"),s.add(this.cursorObj));const I=this.scene.getCurrentPhase().getPokemon(),i=I.getMoveset(),a=A<i.length;if(a){const L=i[A],S=I.getMoveType(L.getMove()),o=UR("types");this.typeIcon.setTexture(o,n[S].toLowerCase()).setScale(.8);const l=L.getMove().category;this.moveCategoryIcon.setTexture("categories",Ot[l].toLowerCase()).setScale(1);const D=L.getMove().power,M=L.getMove().accuracy,c=L.getMovePp(),G=c-L.ppUsed,P=An(G,2,"  "),_=An(c,2,"  ");this.ppText.setText(`${P}/${_}`),this.powerText.setText(`${D>=0?D:"---"}`),this.accuracyText.setText(`${M>=0?M:"---"}`);const g=G/c;let H=V.MOVE_PP_FULL;g>.25&&g<=.5?H=V.MOVE_PP_HALF_FULL:g>0&&g<=.25?H=V.MOVE_PP_NEAR_EMPTY:g===0&&(H=V.MOVE_PP_EMPTY),this.ppText.setColor(this.getTextColor(H,!1)),this.ppText.setShadowColor(this.getTextColor(H,!0)),this.moveInfoOverlay.show(L.getMove()),I.getOpponents().forEach(F=>{F.updateEffectiveness(this.getEffectivenessText(I,F,L))})}return this.typeIcon.setVisible(a),this.ppLabel.setVisible(a),this.ppText.setVisible(a),this.powerLabel.setVisible(a),this.powerText.setVisible(a),this.accuracyLabel.setVisible(a),this.accuracyText.setVisible(a),this.moveCategoryIcon.setVisible(a),this.cursorObj.setPosition(13+(A%2===1?100:0),-31+(A>=2?15:0)),R}getEffectivenessText(A,s,R){var i;const I=s.getMoveEffectiveness(A,R.getMove(),!((i=s.battleData)!=null&&i.abilityRevealed));if(I!==void 0)return`${I}x`}displayMoves(){const A=this.scene.getCurrentPhase().getPokemon(),s=A.getMoveset();for(let R=0;R<4;R++){const I=se(this.scene,R%2===0?0:100,R<2?0:16,"-",V.WINDOW);if(I.setName("text-empty-move"),R<s.length){const i=s[R];I.setText(i.getName()),I.setName(i.getName()),I.setColor(this.getMoveColor(A,i)??I.style.color)}this.movesContainer.add(I)}}getMoveColor(A,s){if(!this.scene.typeHints)return;const R=A.getOpponents();return R.length<=0?void 0:R.map(i=>i.getMoveEffectiveness(A,s.getMove(),!i.battleData.abilityRevealed)).sort((i,a)=>a-i).map(i=>$b(i??0))[0]}clear(){super.clear();const A=this.getUi().getMessageHandler();this.clearMoves(),this.typeIcon.setVisible(!1),this.ppLabel.setVisible(!1),this.ppText.setVisible(!1),this.powerLabel.setVisible(!1),this.powerText.setVisible(!1),this.accuracyLabel.setVisible(!1),this.accuracyText.setVisible(!1),this.moveCategoryIcon.setVisible(!1),this.moveInfoOverlay.clear(),A.bg.setVisible(!0),this.eraseCursor(),this.active=!1}clearMoves(){this.movesContainer.removeAll(!0),this.scene.getCurrentPhase().getPokemon().getOpponents().forEach(s=>{s.updateEffectiveness(void 0)})}eraseCursor(){this.cursorObj&&this.cursorObj.destroy(),this.cursorObj=null}};T(sN,"FightUiHandler"),sN.MOVES_CONTAINER_NAME="moves";let Bh=sN;const s7="↑",kV="↓",dB=class dB extends os{constructor(A,s){super(A,s),this.scrollCursor=0,this.scale=.1666666667}getWindowHeight(){var A,s;return(Math.min((((A=this.config)==null?void 0:A.options)||[]).length,((s=this.config)==null?void 0:s.maxOptions)||99)+1)*96*this.scale}setup(){const A=this.getUi();this.optionSelectContainer=this.scene.add.container(this.scene.game.canvas.width/6-1,-48),this.optionSelectContainer.setName(`option-select-${this.mode?$[this.mode]:"UNKNOWN"}`),this.optionSelectContainer.setVisible(!1),A.add(this.optionSelectContainer),this.optionSelectBg=it(this.scene,0,0,this.getWindowWidth(),this.getWindowHeight()),this.optionSelectBg.setName("option-select-bg"),this.optionSelectBg.setOrigin(1,1),this.optionSelectContainer.add(this.optionSelectBg),this.optionSelectIcons=[],this.scale=Sn(V.WINDOW,this.scene.uiTheme).scale,this.setCursor(0)}setupOptions(){var R,I,i,a,L,S,o,l,D,M;const A=((R=this.config)==null?void 0:R.options)??[];let s;if(A.length>=10&&this.scene.ui.getMode()===$.AUTO_COMPLETE){const c=A.length,G=this.scrollCursor,P=Math.min(c,G+(!G||this.scrollCursor+(((I=this.config)==null?void 0:I.maxOptions)-1)>=c?((i=this.config)==null?void 0:i.maxOptions)-1:((a=this.config)==null?void 0:a.maxOptions)-2));s=A.slice(G,P+2)}else s=A;this.optionSelectText&&this.optionSelectText.destroy(),(L=this.optionSelectIcons)!=null&&L.length&&(this.optionSelectIcons.map(c=>c.destroy()),this.optionSelectIcons.splice(0,this.optionSelectIcons.length)),this.optionSelectText=se(this.scene,0,0,s.map(c=>c.item?`    ${c.label}`:c.label).join(`
`),V.WINDOW,{maxLines:s.length}),this.optionSelectText.setLineSpacing(this.scale*72),this.optionSelectText.setName("text-option-select"),this.optionSelectText.setLineSpacing(12),this.optionSelectContainer.add(this.optionSelectText),this.optionSelectContainer.setPosition(this.scene.game.canvas.width/6-1-(((S=this.config)==null?void 0:S.xOffset)||0),-48+(((o=this.config)==null?void 0:o.yOffset)||0)),this.optionSelectBg.width=Math.max(this.optionSelectText.displayWidth+24,this.getWindowWidth()),(l=this.config)!=null&&l.options&&((D=this.config)==null?void 0:D.options.length)>((M=this.config)==null?void 0:M.maxOptions)&&this.optionSelectText.setText(this.getOptionsWithScroll().map(c=>c.label).join(`
`)),this.optionSelectBg.height=this.getWindowHeight(),this.optionSelectText.setPositionRelative(this.optionSelectBg,12+24*this.scale,2+42*this.scale),s.forEach((c,G)=>{if(c.item){const P=this.scene.add.sprite(0,0,"items",c.item);if(P.setScale(3*this.scale),this.optionSelectIcons.push(P),this.optionSelectContainer.add(P),P.setPositionRelative(this.optionSelectText,36*this.scale,7+G*(114*this.scale-3)),c.item==="candy"){const _=this.scene.add.sprite(0,0,"items","candy_overlay");_.setScale(3*this.scale),this.optionSelectIcons.push(_),this.optionSelectContainer.add(_),_.setPositionRelative(this.optionSelectText,36*this.scale,7+G*(114*this.scale-3)),c.itemArgs&&(P.setTint(ps(Ns(c.itemArgs[0]))),_.setTint(ps(Ns(c.itemArgs[1]))))}}})}show(A){var s;return!A.length||!A[0].hasOwnProperty("options")||!A[0].options.length?!1:(super.show(A),this.config=A[0],this.setupOptions(),this.scene.ui.bringToTop(this.optionSelectContainer),this.optionSelectContainer.setVisible(!0),this.scrollCursor=0,this.setCursor(0),this.config.delay&&(this.blockInput=!0,this.optionSelectText.setAlpha(.5),(s=this.cursorObj)==null||s.setAlpha(.8),this.scene.time.delayedCall(Ve(this.config.delay),()=>this.unblockInput())),!0)}processInput(A){var a,L,S,o,l,D,M,c;const s=this.getUi();let R=!1;const I=this.getOptionsWithScroll();let i=!0;if(A===y.ACTION||A===y.CANCEL){if(this.blockInput)return s.playError(),!1;if(R=!0,A===y.CANCEL)if((a=this.config)!=null&&a.maxOptions&&this.config.options.length>this.config.maxOptions)this.scrollCursor=this.config.options.length-this.config.maxOptions+1,this.cursor=I.length-1;else if(!((L=this.config)!=null&&L.noCancel))this.setCursor(I.length-1);else return!1;const G=(S=this.config)==null?void 0:S.options[this.cursor+(this.scrollCursor-(this.scrollCursor?1:0))];G!=null&&G.handler()?(G.keepOpen||this.clear(),i=!G.overrideSound):s.playError()}else if(A===y.SUBMIT&&s.getMode()===$.AUTO_COMPLETE){R=!0;const G=(o=this.config)==null?void 0:o.options[this.cursor+(this.scrollCursor-(this.scrollCursor?1:0))];G!=null&&G.handler()?(G.keepOpen||this.clear(),i=!G.overrideSound):s.playError()}else{switch(A){case y.UP:this.cursor?R=this.setCursor(this.cursor-1):this.cursor===0&&(R=this.setCursor(I.length-1));break;case y.DOWN:this.cursor<I.length-1?R=this.setCursor(this.cursor+1):R=this.setCursor(0);break}(l=this.config)!=null&&l.supportHover&&((c=(M=(D=this.config)==null?void 0:D.options[this.cursor+(this.scrollCursor-(this.scrollCursor?1:0))])==null?void 0:M.onHover)==null||c.call(M))}return R&&i&&s.playSelect(),R}unblockInput(){var A;this.blockInput&&(this.blockInput=!1,this.optionSelectText.setAlpha(1),(A=this.cursorObj)==null||A.setAlpha(1))}getOptionsWithScroll(){var i;if(!this.config)return[];const A=this.config.options.slice(0);if(!this.config.maxOptions||this.config.options.length<this.config.maxOptions)return A;const s=A.length,R=this.scrollCursor,I=Math.min(s,R+(!R||this.scrollCursor+(this.config.maxOptions-1)>=s?this.config.maxOptions-1:this.config.maxOptions-2));return(i=this.config)!=null&&i.maxOptions&&A.length>this.config.maxOptions&&(A.splice(I,s),A.splice(0,R),R&&A.unshift({label:s7,handler:T(()=>!0,"handler")}),I<s&&A.push({label:kV,handler:T(()=>!0,"handler")})),A}setCursor(A){var i;const s=this.cursor!==A;let R=!1;const I=this.getOptionsWithScroll();if(s&&((i=this.config)!=null&&i.maxOptions)&&this.config.options.length>this.config.maxOptions)if(Math.abs(A-this.cursor)===I.length-1){const a=this.config.options.length;this.scrollCursor=A?a-(this.config.maxOptions-1):0,this.setupOptions()}else{const a=A&&A>this.cursor;a?I[A].label===kV&&(R=!0,this.scrollCursor++):!A&&this.scrollCursor&&(R=!0,this.scrollCursor--),R&&this.scrollCursor===1&&(this.scrollCursor+=a?1:-1)}return R?this.setupOptions():this.cursor=A,this.cursorObj||(this.cursorObj=this.scene.add.image(0,0,"cursor"),this.optionSelectContainer.add(this.cursorObj)),this.cursorObj.setScale(this.scale*6),this.cursorObj.setPositionRelative(this.optionSelectBg,12,102*this.scale+this.cursor*(114*this.scale-3)),s}clear(){super.clear(),this.config=null,this.optionSelectContainer.setVisible(!1),this.scrollCursor=0,this.eraseCursor()}eraseCursor(){this.cursorObj&&this.cursorObj.destroy(),this.cursorObj=null}};T(dB,"AbstractOptionSelectUiHandler");let dT=dB;const RN=class RN extends dT{constructor(A){super(A,$.CONFIRM)}getWindowWidth(){return RN.windowWidth}show(A){if(A.length===4&&A[0]instanceof Function&&A[1]instanceof Function&&A[2]instanceof Function&&A[3]==="fullParty"){const s={options:[{label:U.t("partyUiHandler:SUMMARY"),handler:T(()=>(A[0](),!0),"handler")},{label:U.t("menu:yes"),handler:T(()=>(A[1](),!0),"handler")},{label:U.t("menu:no"),handler:T(()=>(A[2](),!0),"handler")}],delay:A.length>=8&&A[7]!==null?A[7]:0};super.show([s]),this.switchCheck=A.length>=5&&A[4]!==null&&A[4];const R=A.length>=6&&A[5]!==null?A[5]:0,I=A.length>=7&&A[6]!==null?A[6]:0;return this.optionSelectContainer.setPosition(this.scene.game.canvas.width/6-1+R,-48+I),this.setCursor(this.switchCheck?this.switchCheckCursor:0),!0}else if(A.length>=2&&A[0]instanceof Function&&A[1]instanceof Function){const s={options:[{label:U.t("menu:yes"),handler:T(()=>(A[0](),!0),"handler")},{label:U.t("menu:no"),handler:T(()=>(A[1](),!0),"handler")}],delay:A.length>=6&&A[5]!==null?A[5]:0,noCancel:A.length>=7&&A[6]!==null?A[6]:!1};super.show([s]),this.switchCheck=A.length>=3&&A[2]!==null&&A[2];const R=A.length>=4&&A[3]!==null?A[3]:0,I=A.length>=5&&A[4]!==null?A[4]:0;return this.optionSelectContainer.setPosition(this.scene.game.canvas.width/6-1+R,-48+I),this.setCursor(this.switchCheck?this.switchCheckCursor:0),!0}return!1}processInput(A){var s;return A===y.CANCEL&&this.blockInput&&!((s=this.config)!=null&&s.noCancel)&&this.unblockInput(),super.processInput(A)}setCursor(A){const s=super.setCursor(A);return s&&this.switchCheck&&(this.switchCheckCursor=this.cursor),s}};T(RN,"ConfirmUiHandler"),RN.windowWidth=48;let Wl=RN;const fB=class fB extends os{constructor(A){super(A,$.BALL),this.scale=.1666666667}setup(){const A=this.getUi();this.scale=Sn(V.WINDOW,this.scene.uiTheme).scale;let s="";for(let i=0;i<Object.keys(this.scene.pokeballCounts).length;i++)s+=`${Al(i)}
`;s+="Cancel";const R=se(this.scene,0,0,s,V.WINDOW,{align:"right",maxLines:6}),I=R.displayWidth;this.pokeballSelectContainer=this.scene.add.container(this.scene.game.canvas.width/6-51-Math.max(64,I),-49),this.pokeballSelectContainer.setVisible(!1),A.add(this.pokeballSelectContainer),this.pokeballSelectBg=it(this.scene,0,0,50+Math.max(64,I),32+480*this.scale),this.pokeballSelectBg.setOrigin(0,1),this.pokeballSelectContainer.add(this.pokeballSelectBg),this.pokeballSelectContainer.add(R),R.setOrigin(0,0),R.setPositionRelative(this.pokeballSelectBg,42,9),R.setLineSpacing(this.scale*72),this.countsText=se(this.scene,0,0,"",V.WINDOW,{maxLines:5}),this.countsText.setPositionRelative(this.pokeballSelectBg,18,9),this.countsText.setLineSpacing(this.scale*72),this.pokeballSelectContainer.add(this.countsText),this.setCursor(0)}show(A){return super.show(A),this.updateCounts(),this.pokeballSelectContainer.setVisible(!0),this.setCursor(this.cursor),!0}processInput(A){const s=this.getUi();let R=!1;const I=Object.keys(this.scene.pokeballCounts).length;if(A===y.ACTION||A===y.CANCEL){const i=this.scene.getCurrentPhase();R=!0,A===y.ACTION&&this.cursor<I?this.scene.pokeballCounts[this.cursor]?i.handleCommand(vt.BALL,this.cursor)&&(this.scene.ui.setMode($.COMMAND,i.getFieldIndex()),this.scene.ui.setMode($.MESSAGE),R=!0):s.playError():(s.setMode($.COMMAND,i.getFieldIndex()),R=!0)}else switch(A){case y.UP:R=this.setCursor(this.cursor?this.cursor-1:I);break;case y.DOWN:R=this.setCursor(this.cursor<I?this.cursor+1:0);break}return R&&s.playSelect(),R}updateCounts(){this.countsText.setText(Object.values(this.scene.pokeballCounts).map(A=>`x${A}`).join(`
`))}setCursor(A){const s=super.setCursor(A);return this.cursorObj||(this.cursorObj=this.scene.add.image(0,0,"cursor"),this.pokeballSelectContainer.add(this.cursorObj)),this.cursorObj.setScale(this.scale*6),this.cursorObj.setPositionRelative(this.pokeballSelectBg,12,15+(6+this.cursor*96)*this.scale),s}clear(){super.clear(),this.pokeballSelectContainer.setVisible(!1),this.eraseCursor()}eraseCursor(){this.cursorObj&&this.cursorObj.destroy(),this.cursorObj=null}};T(fB,"BallUiHandler");let gh=fB,we=null;const SO=BM(32);function BO(){return new Promise(E=>{GO("account/info",!0).then(A=>{if(!A.ok){E([!1,A.status]);return}return A.json()}).then(A=>{we=A,E([!0,200])}).catch(A=>{console.error(A),E([!1,500])})})}T(BO,"updateUserInfo");var Kh=(E=>(E[E.PROFILE=0]="PROFILE",E[E.STATS=1]="STATS",E[E.MOVES=2]="MOVES",E))(Kh||{}),pM=(E=>(E[E.DEFAULT=0]="DEFAULT",E[E.LEARN_MOVE=1]="LEARN_MOVE",E))(pM||{});const BB=class BB extends os{constructor(A){super(A,$.SUMMARY)}setup(){const A=this.getUi();this.summaryContainer=this.scene.add.container(0,0),this.summaryContainer.setVisible(!1),A.add(this.summaryContainer);const s=this.scene.add.image(0,0,"summary_bg");s.setOrigin(0,1),this.summaryContainer.add(s),this.tabSprite=this.scene.add.sprite(134,-s.displayHeight+16,"summary_tabs_1"),this.tabSprite.setOrigin(1,1),this.summaryContainer.add(this.tabSprite);const R=se(this.scene,4,-165,U.t("pokemonSummary:pokemonInfo"),V.SUMMARY);R.setOrigin(0,1),this.summaryContainer.add(R),this.shinyOverlay=this.scene.add.image(6,-54,"summary_overlay_shiny"),this.shinyOverlay.setOrigin(0,1),this.shinyOverlay.setVisible(!1),this.summaryContainer.add(this.shinyOverlay),this.numberText=se(this.scene,17,-149,"0000",V.SUMMARY),this.numberText.setOrigin(0,1),this.summaryContainer.add(this.numberText),this.pokemonSprite=this.scene.initPokemonSprite(this.scene.add.sprite(56,-106,"pkmn__sub"),void 0,!1,!0),this.summaryContainer.add(this.pokemonSprite),this.nameText=se(this.scene,6,-54,"",V.SUMMARY),this.nameText.setOrigin(0,0),this.summaryContainer.add(this.nameText),this.splicedIcon=this.scene.add.sprite(0,-54,"icon_spliced"),this.splicedIcon.setVisible(!1),this.splicedIcon.setOrigin(0,0),this.splicedIcon.setScale(.75),this.splicedIcon.setInteractive(new Phaser.Geom.Rectangle(0,0,12,15),Phaser.Geom.Rectangle.Contains),this.summaryContainer.add(this.splicedIcon),this.shinyIcon=this.scene.add.image(0,-54,"shiny_star"),this.shinyIcon.setVisible(!1),this.shinyIcon.setOrigin(0,0),this.shinyIcon.setScale(.75),this.shinyIcon.setInteractive(new Phaser.Geom.Rectangle(0,0,12,15),Phaser.Geom.Rectangle.Contains),this.summaryContainer.add(this.shinyIcon),this.fusionShinyIcon=this.scene.add.image(0,0,"shiny_star_2"),this.fusionShinyIcon.setVisible(!1),this.fusionShinyIcon.setOrigin(0,0),this.fusionShinyIcon.setScale(.75),this.summaryContainer.add(this.fusionShinyIcon),this.pokeball=this.scene.add.sprite(6,-19,"pb"),this.pokeball.setOrigin(0,1),this.summaryContainer.add(this.pokeball),this.candyIcon=this.scene.add.sprite(13,-140,"candy"),this.candyIcon.setScale(.8),this.summaryContainer.add(this.candyIcon),this.candyOverlay=this.scene.add.sprite(13,-140,"candy_overlay"),this.candyOverlay.setScale(.8),this.summaryContainer.add(this.candyOverlay),this.candyShadow=this.scene.add.sprite(13,-140,"candy"),this.candyShadow.setTint(0),this.candyShadow.setAlpha(.5),this.candyShadow.setScale(.8),this.candyShadow.setInteractive(new Phaser.Geom.Rectangle(0,0,16,16),Phaser.Geom.Rectangle.Contains),this.summaryContainer.add(this.candyShadow),this.candyCountText=se(this.scene,20,-146,"x0",V.WINDOW_ALT,{fontSize:"76px"}),this.candyCountText.setOrigin(0,0),this.summaryContainer.add(this.candyCountText),this.friendshipIcon=this.scene.add.sprite(13,-60,"friendship"),this.friendshipIcon.setScale(.8),this.summaryContainer.add(this.friendshipIcon),this.friendshipOverlay=this.scene.add.sprite(13,-60,"friendship_overlay"),this.friendshipOverlay.setScale(.8),this.summaryContainer.add(this.friendshipOverlay),this.friendshipShadow=this.scene.add.sprite(13,-60,"friendship"),this.friendshipShadow.setTint(0),this.friendshipShadow.setAlpha(.5),this.friendshipShadow.setScale(.8),this.friendshipShadow.setInteractive(new Phaser.Geom.Rectangle(0,0,16,16),Phaser.Geom.Rectangle.Contains),this.summaryContainer.add(this.friendshipShadow),this.friendshipText=se(this.scene,20,-66,"x0",V.WINDOW_ALT,{fontSize:"76px"}),this.friendshipText.setOrigin(0,0),this.summaryContainer.add(this.friendshipText),this.championRibbon=this.scene.add.image(88,-146,"champion_ribbon"),this.championRibbon.setOrigin(0,0),this.championRibbon.setScale(1.25),this.summaryContainer.add(this.championRibbon),this.championRibbon.setVisible(!1),this.levelText=se(this.scene,36,-17,"",V.SUMMARY_ALT),this.levelText.setOrigin(0,1),this.summaryContainer.add(this.levelText),this.genderText=se(this.scene,96,-17,"",V.SUMMARY),this.genderText.setOrigin(0,1),this.summaryContainer.add(this.genderText),this.statusContainer=this.scene.add.container(-106,-16);const I=this.scene.add.image(0,0,"summary_status");I.setOrigin(0,0),this.statusContainer.add(I);const i=se(this.scene,3,0,U.t("pokemonSummary:status"),V.SUMMARY);i.setOrigin(0,0),this.statusContainer.add(i),this.status=this.scene.add.sprite(91,4,UR("statuses")),this.status.setOrigin(.5,0),this.statusContainer.add(this.status),this.summaryContainer.add(this.statusContainer),this.moveEffectContainer=this.scene.add.container(106,-62),this.summaryContainer.add(this.moveEffectContainer);const a=this.scene.add.image(0,0,"summary_moves_effect");a.setOrigin(0,0),this.moveEffectContainer.add(a);const L=se(this.scene,8,12,U.t("pokemonSummary:powerAccuracyCategory"),V.SUMMARY);L.setLineSpacing(9),L.setOrigin(0,0),this.moveEffectContainer.add(L),this.movePowerText=se(this.scene,99,27,"0",V.WINDOW_ALT),this.movePowerText.setOrigin(1,1),this.moveEffectContainer.add(this.movePowerText),this.moveAccuracyText=se(this.scene,99,43,"0",V.WINDOW_ALT),this.moveAccuracyText.setOrigin(1,1),this.moveEffectContainer.add(this.moveAccuracyText),this.moveCategoryIcon=this.scene.add.sprite(99,57,"categories"),this.moveCategoryIcon.setOrigin(1,1),this.moveEffectContainer.add(this.moveCategoryIcon);const S=T(()=>{const o=this.scene.add.sprite(0,0,this.getPageKey(0));return o.setOrigin(0,1),o},"getSummaryPageBg");this.summaryContainer.add(this.summaryPageContainer=this.scene.add.container(106,0)),this.summaryPageContainer.add(S()),this.summaryPageContainer.setVisible(!1),this.summaryContainer.add(this.summaryPageTransitionContainer=this.scene.add.container(106,0)),this.summaryPageTransitionContainer.add(S()),this.summaryPageTransitionContainer.setVisible(!1)}getPageKey(A){return A===void 0&&(A=this.cursor),`summary_${Kh[A].toLowerCase()}`}show(A){var l,D;super.show(A),this.pokemon=A[0],this.summaryUiMode=A.length>1?A[1]:0,this.playerParty=A[4]??!0,this.scene.ui.bringToTop(this.summaryContainer),this.summaryContainer.setVisible(!0),this.cursor=-1,this.shinyOverlay.setVisible(this.pokemon.isShiny());const s=js[this.pokemon.species.getRootSpeciesId()];this.candyIcon.setTint(ps(Ns(s[0]))),this.candyOverlay.setTint(ps(Ns(s[1]))),this.numberText.setText(An(this.pokemon.species.speciesId,4)),this.numberText.setColor(this.getTextColor(this.pokemon.isShiny()?V.SUMMARY_GOLD:V.SUMMARY)),this.numberText.setShadowColor(this.getTextColor(this.pokemon.isShiny()?V.SUMMARY_GOLD:V.SUMMARY,!0)),this.pokemonSprite.play(this.pokemon.getSpriteKey(!0)),this.pokemonSprite.setPipelineData("teraColor",DR(this.pokemon.getTeraType())),this.pokemonSprite.setPipelineData("ignoreTimeTint",!0),this.pokemonSprite.setPipelineData("spriteKey",this.pokemon.getSpriteKey()),this.pokemonSprite.setPipelineData("shiny",this.pokemon.shiny),this.pokemonSprite.setPipelineData("variant",this.pokemon.variant),["spriteColors","fusionSpriteColors"].map(M=>{var c,G,P;delete this.pokemonSprite.pipelineData[`${M}Base`],(G=(c=this.pokemon)==null?void 0:c.summonData)!=null&&G.speciesForm&&(M+="Base"),this.pokemonSprite.pipelineData[M]=(P=this.pokemon)==null?void 0:P.getSprite().pipelineData[M]}),this.pokemon.cry(),this.nameText.setText(this.pokemon.getNameToRender());const R=this.pokemon.isFusion();this.splicedIcon.setPositionRelative(this.nameText,this.nameText.displayWidth+2,3),this.splicedIcon.setVisible(R),this.splicedIcon.visible&&(this.splicedIcon.on("pointerover",()=>{var M,c,G,P;return this.scene.ui.showTooltip("",`${(M=this.pokemon)==null?void 0:M.species.getName(this.pokemon.formIndex)}/${(P=(c=this.pokemon)==null?void 0:c.fusionSpecies)==null?void 0:P.getName((G=this.pokemon)==null?void 0:G.fusionFormIndex)}`,!0)}),this.splicedIcon.on("pointerout",()=>this.scene.ui.hideTooltip())),this.scene.gameData.starterData[this.pokemon.species.getRootSpeciesId()].classicWinCount>0&&this.scene.gameData.starterData[this.pokemon.species.getRootSpeciesId(!0)].classicWinCount>0?this.championRibbon.setVisible(!0):this.championRibbon.setVisible(!1);let I=this.scene.gameData.starterData[this.pokemon.species.getRootSpeciesId()].friendship;(!I||I===void 0)&&(I=0);const i=D1(CA[this.pokemon.species.getRootSpeciesId()]),a=16-16*(I/i);this.candyShadow.visible&&(this.candyShadow.on("pointerover",()=>this.scene.ui.showTooltip("",`${I}/${i}`,!0)),this.candyShadow.on("pointerout",()=>this.scene.ui.hideTooltip())),this.candyCountText.setText(`x${this.scene.gameData.starterData[this.pokemon.species.getRootSpeciesId()].candyCount}`),this.candyShadow.setCrop(0,0,16,a),this.friendshipShadow.visible&&(this.friendshipShadow.on("pointerover",()=>this.scene.ui.showTooltip("",`${U.t("pokemonSummary:friendship")}`,!0)),this.friendshipShadow.on("pointerout",()=>this.scene.ui.hideTooltip())),this.friendshipText.setText(`${((l=this.pokemon)==null?void 0:l.friendship)||"0"} / 255`),this.friendshipShadow.setCrop(0,0,16,16-16*((((D=this.pokemon)==null?void 0:D.friendship)||0)/255));const L=R&&this.pokemon.shiny&&this.pokemon.fusionShiny,S=L?this.pokemon.variant:this.pokemon.getVariant();if(this.shinyIcon.setPositionRelative(this.nameText,this.nameText.displayWidth+(this.splicedIcon.visible?this.splicedIcon.displayWidth+1:0)+1,3),this.shinyIcon.setTexture(`shiny_star${L?"_1":""}`),this.shinyIcon.setVisible(this.pokemon.isShiny()),this.shinyIcon.setTint(GE(S)),this.shinyIcon.visible){const M=L||S?`${S===2?U.t("common:epicShiny"):S===1?U.t("common:rareShiny"):U.t("common:commonShiny")}${L?`/${this.pokemon.fusionVariant===2?U.t("common:epicShiny"):this.pokemon.fusionVariant===1?U.t("common:rareShiny"):U.t("common:commonShiny")}`:""}`:"";this.shinyIcon.on("pointerover",()=>this.scene.ui.showTooltip("",`${U.t("common:shinyOnHover")}${M?` (${M})`:""}`,!0)),this.shinyIcon.on("pointerout",()=>this.scene.ui.hideTooltip())}switch(this.fusionShinyIcon.setPosition(this.shinyIcon.x,this.shinyIcon.y),this.fusionShinyIcon.setVisible(L),R&&this.fusionShinyIcon.setTint(GE(this.pokemon.fusionVariant)),this.pokeball.setFrame(OO(this.pokemon.pokeball)),this.levelText.setText(this.pokemon.level.toString()),this.genderText.setText($L(this.pokemon.getGender(!0))),this.genderText.setColor(gn(this.pokemon.getGender(!0))),this.genderText.setShadowColor(gn(this.pokemon.getGender(!0),!0)),this.summaryUiMode){case 0:const M=A.length<2?0:A[2];this.hideMoveEffect(!0),this.setCursor(M),A.length>3&&(this.selectCallback=A[3]);break;case 1:this.newMove=A[2],this.moveSelectFunction=A[3],this.showMoveEffect(!0),this.setCursor(2),this.showMoveSelect();break}const o=A.length>=2;return this.pokemon.status||this.pokemon.pokerus?(this.showStatus(!o),this.status.setFrame(this.pokemon.status?J[this.pokemon.status.effect].toLowerCase():"pokerus")):this.hideStatus(!o),!0}processInput(A){var a,L,S,o,l,D,M,c;if(this.transitioning)return!1;const s=this.getUi(),R=s.handlers[$.PARTY].active;let I=!1,i=!1;if(this.moveSelect)if(A===y.ACTION)if(this.pokemon&&this.moveCursor<this.pokemon.moveset.length){if(this.summaryUiMode===1)this.moveSelectFunction&&this.moveSelectFunction(this.moveCursor);else if(this.selectedMoveIndex===-1)this.selectedMoveIndex=this.moveCursor,this.setCursor(this.moveCursor);else{if(this.selectedMoveIndex!==this.moveCursor){const G=(a=this.pokemon)==null?void 0:a.moveset[this.selectedMoveIndex];this.pokemon.moveset[this.selectedMoveIndex]=this.pokemon.moveset[this.moveCursor],this.pokemon.moveset[this.moveCursor]=G;const P=this.moveRowsContainer.getAt(this.selectedMoveIndex),_=this.moveRowsContainer.getAt(this.moveCursor);this.moveRowsContainer.moveTo(P,this.moveCursor),this.moveRowsContainer.moveTo(_,this.selectedMoveIndex),P.setY(this.moveCursor*16),_.setY(this.selectedMoveIndex*16)}this.selectedMoveIndex=-1,this.selectedMoveCursorObj&&(this.selectedMoveCursorObj.destroy(),this.selectedMoveCursorObj=null)}I=!0}else{if(this.moveCursor===4)return this.processInput(y.CANCEL);i=!0}else if(A===y.CANCEL)this.hideMoveSelect(),I=!0;else switch(A){case y.UP:I=this.setCursor(this.moveCursor?this.moveCursor-1:4);break;case y.DOWN:I=this.setCursor(this.moveCursor<4?this.moveCursor+1:0);break;case y.LEFT:if(this.moveSelect=!1,this.setCursor(1),this.summaryUiMode===1){this.hideMoveEffect(),this.destroyBlinkCursor(),I=!0;break}else{this.hideMoveSelect(),I=!0;break}}else if(A===y.ACTION)this.cursor===2?(this.showMoveSelect(),I=!0):this.cursor===0&&((L=this.pokemon)!=null&&L.hasPassive())&&((o=this.abilityContainer.nameText)==null||o.setVisible(!((S=this.abilityContainer.descriptionText)!=null&&S.visible)),(l=this.abilityContainer.descriptionText)==null||l.setVisible(!this.abilityContainer.descriptionText.visible),this.abilityContainer.labelImage.setVisible(!this.abilityContainer.labelImage.visible),(M=this.passiveContainer.nameText)==null||M.setVisible(!((D=this.passiveContainer.descriptionText)!=null&&D.visible)),(c=this.passiveContainer.descriptionText)==null||c.setVisible(!this.passiveContainer.descriptionText.visible),this.passiveContainer.labelImage.setVisible(!this.passiveContainer.labelImage.visible));else if(A===y.CANCEL){if(this.summaryUiMode===1)this.hideMoveSelect();else{if(this.selectCallback instanceof Function){const G=this.selectCallback;this.selectCallback=null,G()}R?s.setMode($.PARTY):s.setMode($.MESSAGE)}I=!0}else{const G=IE(Kh);switch(A){case y.UP:case y.DOWN:if(this.summaryUiMode===1)break;if(!R)break;const P=A===y.DOWN,_=this.scene.getParty(),g=this.pokemon?_.indexOf(this.pokemon):-1;if(P&&g<_.length-1||!P&&g){const H=this.cursor;this.clear(),this.show([_[g+(P?1:-1)],this.summaryUiMode,H])}break;case y.LEFT:this.cursor&&(I=this.setCursor(this.cursor-1));break;case y.RIGHT:this.cursor<G.length-1&&(I=this.setCursor(this.cursor+1),this.summaryUiMode===1&&this.cursor===2&&(this.moveSelect=!0));break}}return I?s.playSelect():i&&s.playError(),I||i}setCursor(A,s=!1){let R=s||this.moveCursor!==A;if(this.moveSelect){this.moveCursor=A;const I=this.getSelectedMove();I?(this.moveDescriptionText.setY(84),this.movePowerText.setText(I.power>=0?I.power.toString():"---"),this.moveAccuracyText.setText(I.accuracy>=0?I.accuracy.toString():"---"),this.moveCategoryIcon.setFrame(Ot[I.category].toLowerCase()),this.showMoveEffect()):this.hideMoveEffect(),this.moveDescriptionText.setText((I==null?void 0:I.effect)||"");const i=Math.floor(this.moveDescriptionText.displayHeight/14.83);this.descriptionScrollTween&&(this.descriptionScrollTween.remove(),this.descriptionScrollTween=null),i>3&&(this.descriptionScrollTween=this.scene.tweens.add({targets:this.moveDescriptionText,delay:Ve(2e3),loop:-1,hold:Ve(2e3),duration:Ve((i-3)*2e3),y:`-=${14.83*(i-3)}`})),this.moveCursorObj||(this.moveCursorObj=this.scene.add.sprite(-2,0,"summary_moves_cursor","highlight"),this.moveCursorObj.setOrigin(0,1),this.movesContainer.add(this.moveCursorObj)),this.moveCursorObj.setY(16*this.moveCursor+1),this.moveCursorBlinkTimer&&this.moveCursorBlinkTimer.destroy(),this.moveCursorObj.setVisible(!0),this.moveCursorBlinkTimer=this.scene.time.addEvent({loop:!0,delay:Ve(600),callback:T(()=>{var a;(a=this.moveCursorObj)==null||a.setVisible(!1),this.scene.time.delayedCall(Ve(100),()=>{this.moveCursorObj&&this.moveCursorObj.setVisible(!0)})},"callback")}),this.selectedMoveIndex>-1&&(this.selectedMoveCursorObj||(this.selectedMoveCursorObj=this.scene.add.sprite(-2,0,"summary_moves_cursor","select"),this.selectedMoveCursorObj.setOrigin(0,1),this.movesContainer.add(this.selectedMoveCursorObj),this.movesContainer.moveBelow(this.selectedMoveCursorObj,this.moveCursorObj)),this.selectedMoveCursorObj.setY(16*this.selectedMoveIndex+1))}else if(R=this.cursor!==A,R){const I=this.cursor<A;this.cursor=A,this.tabSprite.setTexture(`summary_tabs_${this.cursor+1}`),this.getUi().hideTooltip(),this.summaryPageContainer.visible?(this.transitioning=!0,this.populatePageContainer(this.summaryPageTransitionContainer,I?A:A+1),I?this.summaryPageTransitionContainer.x+=214:this.populatePageContainer(this.summaryPageContainer),this.scene.tweens.add({targets:this.summaryPageTransitionContainer,x:I?"-=214":"+=214",duration:250,onComplete:T(()=>{I?(this.populatePageContainer(this.summaryPageContainer),this.cursor===2&&(this.moveCursorObj=null,this.showMoveSelect(),this.showMoveEffect())):this.summaryPageTransitionContainer.x-=214,this.summaryPageTransitionContainer.setVisible(!1),this.transitioning=!1},"onComplete")}),this.summaryPageTransitionContainer.setVisible(!0)):(this.populatePageContainer(this.summaryPageContainer),this.summaryPageContainer.setVisible(!0))}return R}populatePageContainer(A,s){var I,i,a,L,S,o,l,D,M,c,G,P,_,g,H,F,p,v,k,j,q,ie,z;s===void 0&&(s=this.cursor),A.getAll().length>1&&(A.each(Oe=>{Oe instanceof Phaser.GameObjects.Container&&Oe.removeAll(!0)}),A.removeBetween(1,void 0,!0));const R=A.getAt(0);switch(R.setTexture(this.getPageKey(s)),this.descriptionScrollTween&&(this.descriptionScrollTween.remove(),this.descriptionScrollTween=null),s){case 0:const Oe=this.scene.add.container(0,-R.height);A.add(Oe);const ae=PE(this.scene,7,12,`${U.t("pokemonSummary:ot")}/${jR((we==null?void 0:we.username)||U.t("pokemonSummary:unknown"),this.scene.gameData.gender===ct.FEMALE?V.SUMMARY_PINK:V.SUMMARY_BLUE)}`,V.SUMMARY_ALT);ae.setOrigin(0,0),Oe.add(ae);const Le=se(this.scene,174,12,this.scene.gameData.trainerId.toString(),V.SUMMARY_ALT);Le.setOrigin(0,0),Oe.add(Le);const Ne=se(this.scene,7,28,`${U.t("pokemonSummary:type")}/`,V.WINDOW_ALT);Ne.setOrigin(0,0),Oe.add(Ne);const De=T((Bt,Qt,OE=!1)=>{const ME=Ne.width*Ne.scale+9+34*Bt,NE=OE?this.scene.add.sprite(ME,42,"type_tera"):this.scene.add.sprite(ME,42,UR("types"),n[Qt].toLowerCase());if(OE){NE.setScale(.5);const ts=DR(Qt);NE.setTint(Phaser.Display.Color.GetColor(ts[0],ts[1],ts[2]))}return NE.setOrigin(0,1),NE},"getTypeIcon"),Be=(I=this.pokemon)==null?void 0:I.getTypes(!1,!1,!0);if(Oe.add(De(0,Be[0])),Be.length>1&&Oe.add(De(1,Be[1])),(i=this.pokemon)!=null&&i.isTerastallized()&&Oe.add(De(Be.length,this.pokemon.getTeraType(),!0)),(a=this.pokemon)!=null&&a.getLuck()){const Bt=se(this.scene,141,28,U.t("common:luckIndicator"),V.SUMMARY_ALT);Bt.setOrigin(0,0),Oe.add(Bt);const Qt=se(this.scene,141+Bt.displayWidth+2,28,this.pokemon.getLuck().toString(),V.SUMMARY);Qt.setOrigin(0,0),Qt.setTint(GE(Math.min(this.pokemon.getLuck()-1,2))),Oe.add(Qt)}this.abilityContainer={labelImage:this.scene.add.image(0,0,"summary_profile_ability"),ability:(L=this.pokemon)==null?void 0:L.getAbility(!0),nameText:null,descriptionText:null};const de=[this.abilityContainer];(S=this.pokemon)!=null&&S.hasPassive()&&(this.passiveContainer={labelImage:this.scene.add.image(0,0,"summary_profile_passive"),ability:this.pokemon.getPassiveAbility(),nameText:null,descriptionText:null},de.push(this.passiveContainer),this.abilityPrompt=this.scene.add.image(0,0,(o=this.scene.inputController)!=null&&o.gamepadSupport?"summary_profile_prompt_a":"summary_profile_prompt_z"),this.abilityPrompt.setPosition(8,43),this.abilityPrompt.setVisible(!0),this.abilityPrompt.setOrigin(0,0),Oe.add(this.abilityPrompt)),de.forEach(Bt=>{var NE,ts;Bt.labelImage.setPosition(17,43),Bt.labelImage.setVisible(!0),Bt.labelImage.setOrigin(0,0),Oe.add(Bt.labelImage),Bt.nameText=se(this.scene,7,66,(NE=Bt.ability)==null?void 0:NE.name,V.SUMMARY_ALT),Bt.nameText.setOrigin(0,1),Oe.add(Bt.nameText),Bt.descriptionText=se(this.scene,7,69,(ts=Bt.ability)==null?void 0:ts.description,V.WINDOW_ALT,{wordWrap:{width:1224}}),Bt.descriptionText.setOrigin(0,0),Oe.add(Bt.descriptionText);const Qt=this.scene.make.graphics({});Qt.setScale(6),Qt.fillStyle(16777215),Qt.beginPath(),Qt.fillRect(110,90.5,206,31);const OE=Qt.createGeometryMask();Bt.descriptionText.setMask(OE);const ME=Math.floor(Bt.descriptionText.displayHeight/14.83);ME>2&&(Bt.descriptionText.setY(69),this.descriptionScrollTween=this.scene.tweens.add({targets:Bt.descriptionText,delay:Ve(2e3),loop:-1,hold:Ve(2e3),duration:Ve((ME-2)*2e3),y:`-=${14.83*(ME-2)}`}))}),(l=this.passiveContainer)==null||l.labelImage.setVisible(!1),(M=(D=this.passiveContainer)==null?void 0:D.nameText)==null||M.setVisible(!1),(G=(c=this.passiveContainer)==null?void 0:c.descriptionText)==null||G.setVisible(!1);const fe=jR("",V.WINDOW_ALT),Ye=Bn(be[(P=this.pokemon)==null?void 0:P.getNature()]),Re=`${jR(Bn(WO((_=this.pokemon)==null?void 0:_.getNature())),V.SUMMARY_RED)}${fe}`,Ie=U.t("pokemonSummary:memoString",{metFragment:U.t(`pokemonSummary:metFragment.${((g=this.pokemon)==null?void 0:g.metBiome)===-1?"apparently":"normal"}`,{biome:`${jR(JL((H=this.pokemon)==null?void 0:H.metBiome),V.SUMMARY_RED)}${fe}`,level:`${jR((F=this.pokemon)==null?void 0:F.metLevel.toString(),V.SUMMARY_RED)}${fe}`,wave:`${jR((p=this.pokemon)!=null&&p.metWave?this.pokemon.metWave.toString():U.t("pokemonSummary:unknownTrainer"),V.SUMMARY_RED)}${fe}`}),natureFragment:U.t(`pokemonSummary:natureFragment.${Ye}`,{nature:Re})}),oe=PE(this.scene,7,113,String(Ie),V.WINDOW_ALT);oe.setOrigin(0,0),Oe.add(oe);break;case 1:const Te=this.scene.add.container(0,-R.height);A.add(Te),PO.forEach((Bt,Qt)=>{var Zn,Mo,er,tr;const OE=U.t(aE(Bt)),ME=Qt%3,NE=Math.floor(Qt/3),ts=So((Zn=this.pokemon)==null?void 0:Zn.getNature(),Qt),vO=se(this.scene,27+115*NE+(NE===1?5:0),56+16*ME,OE,ts===1?V.SUMMARY:ts>1?V.SUMMARY_PINK:V.SUMMARY_BLUE);vO.setOrigin(.5,0),Te.add(vO);const kn=Bt!==B.HP?ko((Mo=this.pokemon)==null?void 0:Mo.getStat(Bt)):`${ko((er=this.pokemon)==null?void 0:er.hp,!0)}/${ko((tr=this.pokemon)==null?void 0:tr.getMaxHp(),!0)}`,XR=se(this.scene,120+88*NE,56+16*ME,kn,V.WINDOW_ALT);XR.setOrigin(1,0),Te.add(XR)}),this.scene.findModifiers(Bt=>{var Qt;return Bt instanceof at&&Bt.pokemonId===((Qt=this.pokemon)==null?void 0:Qt.id)},this.playerParty).sort(jT).forEach((Bt,Qt)=>{const OE=Bt.getIcon(this.scene,!0);OE.setPosition(Qt%17*12+3,14*Math.floor(Qt/17)+15),Te.add(OE),OE.setInteractive(new Phaser.Geom.Rectangle(0,0,32,32),Phaser.Geom.Rectangle.Contains),OE.on("pointerover",()=>this.scene.ui.showTooltip(Bt.type.name,Bt.type.getDescription(this.scene),!0)),OE.on("pointerout",()=>this.scene.ui.hideTooltip())});const tt=(v=this.pokemon)==null?void 0:v.level,lt=(k=this.pokemon)==null?void 0:k.levelExp,yt=(j=this.pokemon)==null?void 0:j.exp,Ut=(q=this.pokemon)==null?void 0:q.species.growthRate,EA=Jx(tt+1,Ut),AE=tt<this.scene.getMaxExpLevel()?lt/EA:0,WA=se(this.scene,6,112,U.t("pokemonSummary:expPoints"),V.SUMMARY);WA.setOrigin(0,0),Te.add(WA);const pE=se(this.scene,6,128,U.t("pokemonSummary:nextLv"),V.SUMMARY);pE.setOrigin(0,0),Te.add(pE);const yE=se(this.scene,208,112,yt.toString(),V.WINDOW_ALT);yE.setOrigin(1,0),Te.add(yE);const ut=tt<this.scene.getMaxExpLevel()?WR(tt+1,Ut)-yt:0,aA=se(this.scene,208,128,ut.toString(),V.WINDOW_ALT);aA.setOrigin(1,0),Te.add(aA);const hA=this.scene.add.image(140,145,"summary_stats_overlay_exp");hA.setOrigin(0,0),Te.add(hA);const DE=this.scene.make.graphics({});DE.setScale(6),DE.fillStyle(16777215),DE.beginPath(),DE.fillRect(140+A.x,145+A.y+21,Math.floor(AE*64),3);const OR=DE.createGeometryMask();hA.setMask(OR);break;case 2:this.movesContainer=this.scene.add.container(5,-R.height+26),A.add(this.movesContainer),this.extraMoveRowContainer=this.scene.add.container(0,64),this.extraMoveRowContainer.setVisible(!1),this.movesContainer.add(this.extraMoveRowContainer);const Ta=this.scene.add.image(-2,1,"summary_moves_overlay_row");Ta.setOrigin(0,1),this.extraMoveRowContainer.add(Ta);const bn=se(this.scene,35,0,this.summaryUiMode===1&&this.newMove?this.newMove.name:U.t("pokemonSummary:cancel"),this.summaryUiMode===1?V.SUMMARY_PINK:V.SUMMARY);if(bn.setOrigin(0,1),this.extraMoveRowContainer.add(bn),this.summaryUiMode===1){if(this.extraMoveRowContainer.setVisible(!0),this.newMove&&this.pokemon){const ME=UR("types"),NE=this.pokemon.getMoveType(this.newMove),ts=this.scene.add.sprite(0,0,ME,n[NE].toLowerCase());ts.setOrigin(0,1),this.extraMoveRowContainer.add(ts)}const Bt=this.scene.add.image(163,-1,"summary_moves_overlay_pp");Bt.setOrigin(0,1),this.extraMoveRowContainer.add(Bt);const Qt=An((ie=this.newMove)==null?void 0:ie.pp,2,"  "),OE=se(this.scene,173,1,`${Qt}/${Qt}`,V.WINDOW);OE.setOrigin(0,1),this.extraMoveRowContainer.add(OE)}this.moveRowsContainer=this.scene.add.container(0,0),this.movesContainer.add(this.moveRowsContainer);for(let Bt=0;Bt<4;Bt++){const Qt=this.pokemon&&this.pokemon.moveset.length>Bt?(z=this.pokemon)==null?void 0:z.moveset[Bt]:null,OE=this.scene.add.container(0,16*Bt);if(this.moveRowsContainer.add(OE),Qt&&this.pokemon){const vO=UR("types"),kn=this.pokemon.getMoveType(Qt.getMove()),XR=this.scene.add.sprite(0,0,vO,n[kn].toLowerCase());XR.setOrigin(0,1),OE.add(XR)}const ME=se(this.scene,35,0,Qt?Qt.getName():"-",V.SUMMARY);ME.setOrigin(0,1),OE.add(ME);const NE=this.scene.add.image(163,-1,"summary_moves_overlay_pp");NE.setOrigin(0,1),OE.add(NE);const ts=se(this.scene,173,1,"--/--",V.WINDOW);if(ts.setOrigin(0,1),Qt){const vO=Qt.getMovePp(),kn=vO-Qt.ppUsed;ts.setText(`${An(kn,2,"  ")}/${An(vO,2,"  ")}`)}OE.add(ts)}this.moveDescriptionText=se(this.scene,2,84,"",V.WINDOW_ALT,{wordWrap:{width:1212}}),this.movesContainer.add(this.moveDescriptionText);const Cs=this.scene.make.graphics({});Cs.setScale(6),Cs.fillStyle(16777215),Cs.beginPath(),Cs.fillRect(112,130,202,46);const nR=Cs.createGeometryMask();this.moveDescriptionText.setMask(nR);break}}showStatus(A){this.statusVisible||(this.statusVisible=!0,this.scene.tweens.add({targets:this.statusContainer,x:0,duration:A?0:250,ease:"Sine.easeOut"}))}hideStatus(A){this.statusVisible&&(this.statusVisible=!1,this.scene.tweens.add({targets:this.statusContainer,x:-106,duration:A?0:250,ease:"Sine.easeIn"}))}getSelectedMove(){return this.cursor!==2?null:this.moveCursor<4&&this.pokemon&&this.moveCursor<this.pokemon.moveset.length?this.pokemon.moveset[this.moveCursor].getMove():this.summaryUiMode===1&&this.moveCursor===4?this.newMove:null}showMoveSelect(){this.moveSelect=!0,this.extraMoveRowContainer.setVisible(!0),this.selectedMoveIndex=-1,this.setCursor(0),this.showMoveEffect()}hideMoveSelect(){if(this.summaryUiMode===1){this.moveSelectFunction&&this.moveSelectFunction(4);return}this.moveSelect=!1,this.extraMoveRowContainer.setVisible(!1),this.moveDescriptionText.setText(""),this.destroyBlinkCursor(),this.hideMoveEffect()}destroyBlinkCursor(){this.moveCursorBlinkTimer&&(this.moveCursorBlinkTimer.destroy(),this.moveCursorBlinkTimer=null),this.moveCursorObj&&(this.moveCursorObj.destroy(),this.moveCursorObj=null),this.selectedMoveCursorObj&&(this.selectedMoveCursorObj.destroy(),this.selectedMoveCursorObj=null)}showMoveEffect(A){this.moveEffectsVisible||(this.moveEffectsVisible=!0,this.scene.tweens.add({targets:this.moveEffectContainer,x:6,duration:A?0:250,ease:"Sine.easeOut"}))}hideMoveEffect(A){this.moveEffectsVisible&&(this.moveEffectsVisible=!1,this.scene.tweens.add({targets:this.moveEffectContainer,x:106,duration:A?0:250,ease:"Sine.easeIn"}))}clear(){super.clear(),this.pokemon=null,this.cursor=-1,this.newMove=null,this.moveSelect&&(this.moveSelect=!1,this.moveSelectFunction=null,this.extraMoveRowContainer.setVisible(!1),this.moveCursorBlinkTimer&&(this.moveCursorBlinkTimer.destroy(),this.moveCursorBlinkTimer=null),this.moveCursorObj&&(this.moveCursorObj.destroy(),this.moveCursorObj=null),this.selectedMoveCursorObj&&(this.selectedMoveCursorObj.destroy(),this.selectedMoveCursorObj=null),this.hideMoveEffect(!0)),this.summaryContainer.setVisible(!1),this.summaryPageContainer.setVisible(!1)}};T(BB,"SummaryUiHandler");let Fh=BB;const xO=24,la=[[0,-1],[.825,-.5],[.825,.5],[-.825,-.5],[-.825,.5],[0,1]],R7=-3,Ho=1,ZV=[0,Ho,-Ho,Ho,-Ho,R7],O7=[0,5,0,5,0,0],Ca=[0,1,2,5,4,3],fo=new Array(12).fill(null).map(()=>0),gB=class gB extends Phaser.GameObjects.Container{constructor(A,s,R,I){super(A,s,R),this.showDiff=!!I,this.setup()}setup(){this.setName("stats");const A=new Array(6).fill(null).map((i,a)=>[xO*la[Ca[a]][0],xO*la[Ca[a]][1]]).flat(),s=this.scene.add.polygon(48,44,A,14213360,.625);s.setOrigin(0,0);const R=this.scene.add.polygon(s.x,s.y,A).setStrokeStyle(1,4735056);R.setOrigin(0,0);const I=[[0,-1,0,1],[-.825,-.5,.825,.5],[.825,-.5,-.825,.5]].map(i=>{const a=new Phaser.GameObjects.Line(this.scene,s.x,s.y,xO*i[0],xO*i[1],xO*i[2],xO*i[3],16777215).setLineWidth(.5);return a.setOrigin(0,0),a});this.ivChart=this.scene.add.polygon(s.x,s.y,fo,10016928,.75),this.ivChart.setOrigin(0,0),this.add(s),I.map(i=>this.add(i)),this.add(this.ivChart),this.add(R),this.ivStatValueTexts=[];for(const i of PO){const a=se(this.scene,s.x+xO*la[i][0]*1.325+(this.showDiff?0:ZV[i]),s.y+xO*la[i][1]*1.325-4+(this.showDiff?0:O7[i]),U.t(aE(i)),V.TOOLTIP_CONTENT);a.setOrigin(.5),this.ivStatValueTexts[i]=PE(this.scene,a.x-(this.showDiff?0:ZV[i]),a.y+8,"0",V.TOOLTIP_CONTENT),this.ivStatValueTexts[i].setOrigin(.5),this.add(a),this.add(this.ivStatValueTexts[i])}}updateIvs(A,s){if(A){const R=new Array(6).fill(null).map((o,l)=>[A[Ca[l]]/31*xO*la[Ca[l]][0],A[Ca[l]]/31*xO*la[Ca[l]][1]]).flat(),I=this.statsIvsCache||fo,i=zt(V.SUMMARY_GOLD,!1,this.scene.uiTheme);this.statsIvsCache=R.slice(0),this.ivStatValueTexts.map((o,l)=>{let D="";A[l]===31?D+=`[color=${i}][shadow]${A[l].toString()}[/shadow][/color]`:D=A[l].toString(),this.showDiff&&s&&(s[l]<A[l]?D+=` ([color=${zt(V.SUMMARY_BLUE,!1,this.scene.uiTheme)}][shadow=${zt(V.SUMMARY_BLUE,!0,this.scene.uiTheme)}]+${A[l]-s[l]}[/shadow][/color])`:D+=" (-)"),o.setText(`[shadow]${D}[/shadow]`)});const a=A.every(o=>o===31)?parseInt(i.substr(1),16):10016928,L=this.ivChart.fillColor,S=L!==a?[Phaser.Display.Color.IntegerToColor(L),Phaser.Display.Color.IntegerToColor(a)]:null;this.scene.tweens.addCounter({from:0,to:1,duration:1e3,ease:"Cubic.easeOut",onUpdate:T(o=>{const l=o.getValue(),D=R.map((M,c)=>M*l+I[c]*(1-l));S&&this.ivChart.setFillStyle(Phaser.Display.Color.ValueToColor(Phaser.Display.Color.Interpolate.ColorWithColor(S[0],S[1],1,l)).color,.75),this.ivChart.setTo(D)},"onUpdate")})}else this.statsIvsCache=fo,this.ivChart.setTo(fo)}};T(gB,"StatsContainer");let Yl=gB;var hE=(E=>(E[E.GACHA_MOVE=0]="GACHA_MOVE",E[E.GACHA_LEGENDARY=1]="GACHA_LEGENDARY",E[E.GACHA_SHINY=2]="GACHA_SHINY",E[E.SAME_SPECIES_EGG=3]="SAME_SPECIES_EGG",E[E.EVENT=4]="EVENT",E))(hE||{});const XV=64,QV=256,n7=52,I7=8,i7=1,JV=1,a7=412,L7=59,r7=9,N7=10,T7=25,S7=50,o7=100,l7=50,C7=128,U7=64,D7=12,M7=8,$V=8,u7=192,h7=6,c7=3,G7=3,T6=4,S6=1,hr={[e.BULBASAUR]:f.COMMON,[e.CHARMANDER]:f.COMMON,[e.SQUIRTLE]:f.COMMON,[e.CATERPIE]:f.COMMON,[e.WEEDLE]:f.COMMON,[e.PIDGEY]:f.COMMON,[e.RATTATA]:f.COMMON,[e.SPEAROW]:f.COMMON,[e.EKANS]:f.COMMON,[e.PIKACHU]:f.COMMON,[e.SANDSHREW]:f.COMMON,[e.NIDORAN_F]:f.COMMON,[e.NIDORAN_M]:f.COMMON,[e.CLEFAIRY]:f.COMMON,[e.VULPIX]:f.COMMON,[e.JIGGLYPUFF]:f.COMMON,[e.ZUBAT]:f.COMMON,[e.ODDISH]:f.COMMON,[e.PARAS]:f.COMMON,[e.VENONAT]:f.COMMON,[e.DIGLETT]:f.COMMON,[e.MEOWTH]:f.COMMON,[e.PSYDUCK]:f.COMMON,[e.MANKEY]:f.RARE,[e.GROWLITHE]:f.RARE,[e.POLIWAG]:f.COMMON,[e.ABRA]:f.RARE,[e.MACHOP]:f.COMMON,[e.BELLSPROUT]:f.COMMON,[e.TENTACOOL]:f.COMMON,[e.GEODUDE]:f.COMMON,[e.PONYTA]:f.COMMON,[e.SLOWPOKE]:f.COMMON,[e.MAGNEMITE]:f.RARE,[e.FARFETCHD]:f.COMMON,[e.DODUO]:f.COMMON,[e.SEEL]:f.COMMON,[e.GRIMER]:f.COMMON,[e.SHELLDER]:f.RARE,[e.GASTLY]:f.RARE,[e.ONIX]:f.COMMON,[e.DROWZEE]:f.COMMON,[e.KRABBY]:f.COMMON,[e.VOLTORB]:f.COMMON,[e.EXEGGCUTE]:f.COMMON,[e.CUBONE]:f.COMMON,[e.HITMONLEE]:f.RARE,[e.HITMONCHAN]:f.RARE,[e.LICKITUNG]:f.COMMON,[e.KOFFING]:f.COMMON,[e.RHYHORN]:f.COMMON,[e.CHANSEY]:f.COMMON,[e.TANGELA]:f.COMMON,[e.KANGASKHAN]:f.RARE,[e.HORSEA]:f.COMMON,[e.GOLDEEN]:f.COMMON,[e.STARYU]:f.COMMON,[e.MR_MIME]:f.COMMON,[e.SCYTHER]:f.RARE,[e.JYNX]:f.RARE,[e.ELECTABUZZ]:f.RARE,[e.MAGMAR]:f.RARE,[e.PINSIR]:f.RARE,[e.TAUROS]:f.RARE,[e.MAGIKARP]:f.RARE,[e.LAPRAS]:f.RARE,[e.DITTO]:f.COMMON,[e.EEVEE]:f.COMMON,[e.PORYGON]:f.RARE,[e.OMANYTE]:f.COMMON,[e.KABUTO]:f.COMMON,[e.AERODACTYL]:f.RARE,[e.SNORLAX]:f.RARE,[e.ARTICUNO]:f.EPIC,[e.ZAPDOS]:f.EPIC,[e.MOLTRES]:f.EPIC,[e.DRATINI]:f.RARE,[e.MEWTWO]:f.LEGENDARY,[e.MEW]:f.EPIC,[e.CHIKORITA]:f.COMMON,[e.CYNDAQUIL]:f.COMMON,[e.TOTODILE]:f.COMMON,[e.SENTRET]:f.COMMON,[e.HOOTHOOT]:f.COMMON,[e.LEDYBA]:f.COMMON,[e.SPINARAK]:f.COMMON,[e.CHINCHOU]:f.COMMON,[e.PICHU]:f.COMMON,[e.CLEFFA]:f.COMMON,[e.IGGLYBUFF]:f.COMMON,[e.TOGEPI]:f.COMMON,[e.NATU]:f.COMMON,[e.MAREEP]:f.COMMON,[e.MARILL]:f.RARE,[e.SUDOWOODO]:f.COMMON,[e.HOPPIP]:f.COMMON,[e.AIPOM]:f.COMMON,[e.SUNKERN]:f.COMMON,[e.YANMA]:f.COMMON,[e.WOOPER]:f.COMMON,[e.MURKROW]:f.COMMON,[e.MISDREAVUS]:f.COMMON,[e.UNOWN]:f.COMMON,[e.WOBBUFFET]:f.COMMON,[e.GIRAFARIG]:f.COMMON,[e.PINECO]:f.COMMON,[e.DUNSPARCE]:f.COMMON,[e.GLIGAR]:f.COMMON,[e.SNUBBULL]:f.COMMON,[e.QWILFISH]:f.COMMON,[e.SHUCKLE]:f.COMMON,[e.HERACROSS]:f.RARE,[e.SNEASEL]:f.RARE,[e.TEDDIURSA]:f.RARE,[e.SLUGMA]:f.COMMON,[e.SWINUB]:f.COMMON,[e.CORSOLA]:f.COMMON,[e.REMORAID]:f.COMMON,[e.DELIBIRD]:f.COMMON,[e.MANTINE]:f.COMMON,[e.SKARMORY]:f.RARE,[e.HOUNDOUR]:f.COMMON,[e.PHANPY]:f.COMMON,[e.STANTLER]:f.COMMON,[e.SMEARGLE]:f.COMMON,[e.TYROGUE]:f.COMMON,[e.SMOOCHUM]:f.COMMON,[e.ELEKID]:f.COMMON,[e.MAGBY]:f.COMMON,[e.MILTANK]:f.RARE,[e.RAIKOU]:f.EPIC,[e.ENTEI]:f.EPIC,[e.SUICUNE]:f.EPIC,[e.LARVITAR]:f.RARE,[e.LUGIA]:f.LEGENDARY,[e.HO_OH]:f.LEGENDARY,[e.CELEBI]:f.EPIC,[e.TREECKO]:f.COMMON,[e.TORCHIC]:f.RARE,[e.MUDKIP]:f.COMMON,[e.POOCHYENA]:f.COMMON,[e.ZIGZAGOON]:f.COMMON,[e.WURMPLE]:f.COMMON,[e.LOTAD]:f.COMMON,[e.SEEDOT]:f.COMMON,[e.TAILLOW]:f.COMMON,[e.WINGULL]:f.COMMON,[e.RALTS]:f.COMMON,[e.SURSKIT]:f.COMMON,[e.SHROOMISH]:f.COMMON,[e.SLAKOTH]:f.RARE,[e.NINCADA]:f.RARE,[e.WHISMUR]:f.COMMON,[e.MAKUHITA]:f.COMMON,[e.AZURILL]:f.RARE,[e.NOSEPASS]:f.COMMON,[e.SKITTY]:f.COMMON,[e.SABLEYE]:f.COMMON,[e.MAWILE]:f.COMMON,[e.ARON]:f.COMMON,[e.MEDITITE]:f.COMMON,[e.ELECTRIKE]:f.COMMON,[e.PLUSLE]:f.COMMON,[e.MINUN]:f.COMMON,[e.VOLBEAT]:f.COMMON,[e.ILLUMISE]:f.COMMON,[e.ROSELIA]:f.COMMON,[e.GULPIN]:f.COMMON,[e.CARVANHA]:f.COMMON,[e.WAILMER]:f.COMMON,[e.NUMEL]:f.COMMON,[e.TORKOAL]:f.COMMON,[e.SPOINK]:f.COMMON,[e.SPINDA]:f.COMMON,[e.TRAPINCH]:f.COMMON,[e.CACNEA]:f.COMMON,[e.SWABLU]:f.COMMON,[e.ZANGOOSE]:f.RARE,[e.SEVIPER]:f.COMMON,[e.LUNATONE]:f.COMMON,[e.SOLROCK]:f.COMMON,[e.BARBOACH]:f.COMMON,[e.CORPHISH]:f.COMMON,[e.BALTOY]:f.COMMON,[e.LILEEP]:f.COMMON,[e.ANORITH]:f.COMMON,[e.FEEBAS]:f.RARE,[e.CASTFORM]:f.COMMON,[e.KECLEON]:f.COMMON,[e.SHUPPET]:f.COMMON,[e.DUSKULL]:f.COMMON,[e.TROPIUS]:f.COMMON,[e.CHIMECHO]:f.COMMON,[e.ABSOL]:f.RARE,[e.WYNAUT]:f.COMMON,[e.SNORUNT]:f.COMMON,[e.SPHEAL]:f.COMMON,[e.CLAMPERL]:f.COMMON,[e.RELICANTH]:f.COMMON,[e.LUVDISC]:f.COMMON,[e.BAGON]:f.RARE,[e.BELDUM]:f.RARE,[e.REGIROCK]:f.EPIC,[e.REGICE]:f.EPIC,[e.REGISTEEL]:f.EPIC,[e.LATIAS]:f.EPIC,[e.LATIOS]:f.EPIC,[e.KYOGRE]:f.LEGENDARY,[e.GROUDON]:f.LEGENDARY,[e.RAYQUAZA]:f.LEGENDARY,[e.JIRACHI]:f.EPIC,[e.DEOXYS]:f.EPIC,[e.TURTWIG]:f.COMMON,[e.CHIMCHAR]:f.COMMON,[e.PIPLUP]:f.COMMON,[e.STARLY]:f.COMMON,[e.BIDOOF]:f.COMMON,[e.KRICKETOT]:f.COMMON,[e.SHINX]:f.COMMON,[e.BUDEW]:f.COMMON,[e.CRANIDOS]:f.COMMON,[e.SHIELDON]:f.COMMON,[e.BURMY]:f.COMMON,[e.COMBEE]:f.COMMON,[e.PACHIRISU]:f.COMMON,[e.BUIZEL]:f.COMMON,[e.CHERUBI]:f.COMMON,[e.SHELLOS]:f.COMMON,[e.DRIFLOON]:f.COMMON,[e.BUNEARY]:f.COMMON,[e.GLAMEOW]:f.COMMON,[e.CHINGLING]:f.COMMON,[e.STUNKY]:f.COMMON,[e.BRONZOR]:f.COMMON,[e.BONSLY]:f.COMMON,[e.MIME_JR]:f.COMMON,[e.HAPPINY]:f.COMMON,[e.CHATOT]:f.COMMON,[e.SPIRITOMB]:f.RARE,[e.GIBLE]:f.RARE,[e.MUNCHLAX]:f.RARE,[e.RIOLU]:f.COMMON,[e.HIPPOPOTAS]:f.COMMON,[e.SKORUPI]:f.COMMON,[e.CROAGUNK]:f.COMMON,[e.CARNIVINE]:f.COMMON,[e.FINNEON]:f.COMMON,[e.MANTYKE]:f.COMMON,[e.SNOVER]:f.COMMON,[e.ROTOM]:f.RARE,[e.UXIE]:f.EPIC,[e.MESPRIT]:f.EPIC,[e.AZELF]:f.EPIC,[e.DIALGA]:f.LEGENDARY,[e.PALKIA]:f.LEGENDARY,[e.HEATRAN]:f.EPIC,[e.REGIGIGAS]:f.EPIC,[e.GIRATINA]:f.LEGENDARY,[e.CRESSELIA]:f.EPIC,[e.PHIONE]:f.RARE,[e.MANAPHY]:f.EPIC,[e.DARKRAI]:f.EPIC,[e.SHAYMIN]:f.EPIC,[e.ARCEUS]:f.LEGENDARY,[e.VICTINI]:f.EPIC,[e.SNIVY]:f.COMMON,[e.TEPIG]:f.COMMON,[e.OSHAWOTT]:f.COMMON,[e.PATRAT]:f.COMMON,[e.LILLIPUP]:f.COMMON,[e.PURRLOIN]:f.COMMON,[e.PANSAGE]:f.COMMON,[e.PANSEAR]:f.COMMON,[e.PANPOUR]:f.COMMON,[e.MUNNA]:f.COMMON,[e.PIDOVE]:f.COMMON,[e.BLITZLE]:f.COMMON,[e.ROGGENROLA]:f.COMMON,[e.WOOBAT]:f.COMMON,[e.DRILBUR]:f.RARE,[e.AUDINO]:f.COMMON,[e.TIMBURR]:f.RARE,[e.TYMPOLE]:f.COMMON,[e.THROH]:f.RARE,[e.SAWK]:f.RARE,[e.SEWADDLE]:f.COMMON,[e.VENIPEDE]:f.COMMON,[e.COTTONEE]:f.COMMON,[e.PETILIL]:f.COMMON,[e.BASCULIN]:f.RARE,[e.SANDILE]:f.RARE,[e.DARUMAKA]:f.RARE,[e.MARACTUS]:f.COMMON,[e.DWEBBLE]:f.COMMON,[e.SCRAGGY]:f.COMMON,[e.SIGILYPH]:f.RARE,[e.YAMASK]:f.COMMON,[e.TIRTOUGA]:f.COMMON,[e.ARCHEN]:f.COMMON,[e.TRUBBISH]:f.COMMON,[e.ZORUA]:f.COMMON,[e.MINCCINO]:f.COMMON,[e.GOTHITA]:f.COMMON,[e.SOLOSIS]:f.COMMON,[e.DUCKLETT]:f.COMMON,[e.VANILLITE]:f.COMMON,[e.DEERLING]:f.COMMON,[e.EMOLGA]:f.COMMON,[e.KARRABLAST]:f.COMMON,[e.FOONGUS]:f.COMMON,[e.FRILLISH]:f.COMMON,[e.ALOMOMOLA]:f.RARE,[e.JOLTIK]:f.COMMON,[e.FERROSEED]:f.COMMON,[e.KLINK]:f.COMMON,[e.TYNAMO]:f.COMMON,[e.ELGYEM]:f.COMMON,[e.LITWICK]:f.COMMON,[e.AXEW]:f.RARE,[e.CUBCHOO]:f.COMMON,[e.CRYOGONAL]:f.RARE,[e.SHELMET]:f.COMMON,[e.STUNFISK]:f.COMMON,[e.MIENFOO]:f.COMMON,[e.DRUDDIGON]:f.RARE,[e.GOLETT]:f.COMMON,[e.PAWNIARD]:f.RARE,[e.BOUFFALANT]:f.RARE,[e.RUFFLET]:f.COMMON,[e.VULLABY]:f.COMMON,[e.HEATMOR]:f.COMMON,[e.DURANT]:f.RARE,[e.DEINO]:f.RARE,[e.LARVESTA]:f.RARE,[e.COBALION]:f.EPIC,[e.TERRAKION]:f.EPIC,[e.VIRIZION]:f.EPIC,[e.TORNADUS]:f.EPIC,[e.THUNDURUS]:f.EPIC,[e.RESHIRAM]:f.LEGENDARY,[e.ZEKROM]:f.LEGENDARY,[e.LANDORUS]:f.EPIC,[e.KYUREM]:f.LEGENDARY,[e.KELDEO]:f.EPIC,[e.MELOETTA]:f.EPIC,[e.GENESECT]:f.EPIC,[e.CHESPIN]:f.COMMON,[e.FENNEKIN]:f.COMMON,[e.FROAKIE]:f.RARE,[e.BUNNELBY]:f.COMMON,[e.FLETCHLING]:f.COMMON,[e.SCATTERBUG]:f.COMMON,[e.LITLEO]:f.COMMON,[e.FLABEBE]:f.COMMON,[e.SKIDDO]:f.COMMON,[e.PANCHAM]:f.COMMON,[e.FURFROU]:f.COMMON,[e.ESPURR]:f.COMMON,[e.HONEDGE]:f.RARE,[e.SPRITZEE]:f.COMMON,[e.SWIRLIX]:f.COMMON,[e.INKAY]:f.COMMON,[e.BINACLE]:f.COMMON,[e.SKRELP]:f.COMMON,[e.CLAUNCHER]:f.COMMON,[e.HELIOPTILE]:f.COMMON,[e.TYRUNT]:f.COMMON,[e.AMAURA]:f.COMMON,[e.HAWLUCHA]:f.RARE,[e.DEDENNE]:f.COMMON,[e.CARBINK]:f.COMMON,[e.GOOMY]:f.RARE,[e.KLEFKI]:f.COMMON,[e.PHANTUMP]:f.COMMON,[e.PUMPKABOO]:f.COMMON,[e.BERGMITE]:f.COMMON,[e.NOIBAT]:f.COMMON,[e.XERNEAS]:f.LEGENDARY,[e.YVELTAL]:f.LEGENDARY,[e.ZYGARDE]:f.LEGENDARY,[e.DIANCIE]:f.EPIC,[e.HOOPA]:f.EPIC,[e.VOLCANION]:f.EPIC,[e.ETERNAL_FLOETTE]:f.RARE,[e.ROWLET]:f.COMMON,[e.LITTEN]:f.COMMON,[e.POPPLIO]:f.RARE,[e.PIKIPEK]:f.COMMON,[e.YUNGOOS]:f.COMMON,[e.GRUBBIN]:f.COMMON,[e.CRABRAWLER]:f.COMMON,[e.ORICORIO]:f.COMMON,[e.CUTIEFLY]:f.COMMON,[e.ROCKRUFF]:f.COMMON,[e.WISHIWASHI]:f.COMMON,[e.MAREANIE]:f.COMMON,[e.MUDBRAY]:f.COMMON,[e.DEWPIDER]:f.COMMON,[e.FOMANTIS]:f.COMMON,[e.MORELULL]:f.COMMON,[e.SALANDIT]:f.COMMON,[e.STUFFUL]:f.COMMON,[e.BOUNSWEET]:f.COMMON,[e.COMFEY]:f.RARE,[e.ORANGURU]:f.RARE,[e.PASSIMIAN]:f.RARE,[e.WIMPOD]:f.COMMON,[e.SANDYGAST]:f.COMMON,[e.PYUKUMUKU]:f.COMMON,[e.TYPE_NULL]:f.RARE,[e.MINIOR]:f.RARE,[e.KOMALA]:f.COMMON,[e.TURTONATOR]:f.RARE,[e.TOGEDEMARU]:f.COMMON,[e.MIMIKYU]:f.RARE,[e.BRUXISH]:f.RARE,[e.DRAMPA]:f.RARE,[e.DHELMISE]:f.RARE,[e.JANGMO_O]:f.RARE,[e.TAPU_KOKO]:f.EPIC,[e.TAPU_LELE]:f.EPIC,[e.TAPU_BULU]:f.EPIC,[e.TAPU_FINI]:f.EPIC,[e.COSMOG]:f.EPIC,[e.NIHILEGO]:f.EPIC,[e.BUZZWOLE]:f.EPIC,[e.PHEROMOSA]:f.EPIC,[e.XURKITREE]:f.EPIC,[e.CELESTEELA]:f.EPIC,[e.KARTANA]:f.EPIC,[e.GUZZLORD]:f.EPIC,[e.NECROZMA]:f.LEGENDARY,[e.MAGEARNA]:f.EPIC,[e.MARSHADOW]:f.EPIC,[e.POIPOLE]:f.EPIC,[e.STAKATAKA]:f.EPIC,[e.BLACEPHALON]:f.EPIC,[e.ZERAORA]:f.EPIC,[e.MELTAN]:f.EPIC,[e.ALOLA_RATTATA]:f.COMMON,[e.ALOLA_SANDSHREW]:f.COMMON,[e.ALOLA_VULPIX]:f.COMMON,[e.ALOLA_DIGLETT]:f.COMMON,[e.ALOLA_MEOWTH]:f.COMMON,[e.ALOLA_GEODUDE]:f.COMMON,[e.ALOLA_GRIMER]:f.COMMON,[e.GROOKEY]:f.COMMON,[e.SCORBUNNY]:f.RARE,[e.SOBBLE]:f.COMMON,[e.SKWOVET]:f.COMMON,[e.ROOKIDEE]:f.COMMON,[e.BLIPBUG]:f.COMMON,[e.NICKIT]:f.COMMON,[e.GOSSIFLEUR]:f.COMMON,[e.WOOLOO]:f.COMMON,[e.CHEWTLE]:f.COMMON,[e.YAMPER]:f.COMMON,[e.ROLYCOLY]:f.COMMON,[e.APPLIN]:f.COMMON,[e.SILICOBRA]:f.COMMON,[e.CRAMORANT]:f.COMMON,[e.ARROKUDA]:f.COMMON,[e.TOXEL]:f.COMMON,[e.SIZZLIPEDE]:f.COMMON,[e.CLOBBOPUS]:f.COMMON,[e.SINISTEA]:f.COMMON,[e.HATENNA]:f.COMMON,[e.IMPIDIMP]:f.COMMON,[e.MILCERY]:f.COMMON,[e.FALINKS]:f.RARE,[e.PINCURCHIN]:f.COMMON,[e.SNOM]:f.COMMON,[e.STONJOURNER]:f.COMMON,[e.EISCUE]:f.COMMON,[e.INDEEDEE]:f.RARE,[e.MORPEKO]:f.COMMON,[e.CUFANT]:f.COMMON,[e.DRACOZOLT]:f.RARE,[e.ARCTOZOLT]:f.RARE,[e.DRACOVISH]:f.RARE,[e.ARCTOVISH]:f.RARE,[e.DURALUDON]:f.RARE,[e.DREEPY]:f.RARE,[e.ZACIAN]:f.LEGENDARY,[e.ZAMAZENTA]:f.LEGENDARY,[e.ETERNATUS]:f.LEGENDARY,[e.KUBFU]:f.EPIC,[e.ZARUDE]:f.EPIC,[e.REGIELEKI]:f.EPIC,[e.REGIDRAGO]:f.EPIC,[e.GLASTRIER]:f.EPIC,[e.SPECTRIER]:f.EPIC,[e.CALYREX]:f.LEGENDARY,[e.GALAR_MEOWTH]:f.COMMON,[e.GALAR_PONYTA]:f.COMMON,[e.GALAR_SLOWPOKE]:f.COMMON,[e.GALAR_FARFETCHD]:f.COMMON,[e.GALAR_CORSOLA]:f.COMMON,[e.GALAR_ZIGZAGOON]:f.COMMON,[e.GALAR_DARUMAKA]:f.RARE,[e.GALAR_YAMASK]:f.COMMON,[e.GALAR_STUNFISK]:f.COMMON,[e.GALAR_MR_MIME]:f.COMMON,[e.GALAR_ARTICUNO]:f.EPIC,[e.GALAR_ZAPDOS]:f.EPIC,[e.GALAR_MOLTRES]:f.EPIC,[e.HISUI_GROWLITHE]:f.RARE,[e.HISUI_VOLTORB]:f.COMMON,[e.HISUI_QWILFISH]:f.RARE,[e.HISUI_SNEASEL]:f.RARE,[e.HISUI_ZORUA]:f.COMMON,[e.ENAMORUS]:f.EPIC,[e.SPRIGATITO]:f.RARE,[e.FUECOCO]:f.RARE,[e.QUAXLY]:f.RARE,[e.LECHONK]:f.COMMON,[e.TAROUNTULA]:f.COMMON,[e.NYMBLE]:f.COMMON,[e.PAWMI]:f.COMMON,[e.TANDEMAUS]:f.RARE,[e.FIDOUGH]:f.COMMON,[e.SMOLIV]:f.COMMON,[e.SQUAWKABILLY]:f.COMMON,[e.NACLI]:f.RARE,[e.CHARCADET]:f.RARE,[e.TADBULB]:f.COMMON,[e.WATTREL]:f.COMMON,[e.MASCHIFF]:f.COMMON,[e.SHROODLE]:f.COMMON,[e.BRAMBLIN]:f.COMMON,[e.TOEDSCOOL]:f.COMMON,[e.KLAWF]:f.COMMON,[e.CAPSAKID]:f.COMMON,[e.RELLOR]:f.COMMON,[e.FLITTLE]:f.COMMON,[e.TINKATINK]:f.RARE,[e.WIGLETT]:f.COMMON,[e.BOMBIRDIER]:f.COMMON,[e.FINIZEN]:f.COMMON,[e.VAROOM]:f.RARE,[e.CYCLIZAR]:f.RARE,[e.ORTHWORM]:f.RARE,[e.GLIMMET]:f.RARE,[e.GREAVARD]:f.COMMON,[e.FLAMIGO]:f.RARE,[e.CETODDLE]:f.COMMON,[e.VELUZA]:f.RARE,[e.DONDOZO]:f.RARE,[e.TATSUGIRI]:f.RARE,[e.GREAT_TUSK]:f.EPIC,[e.SCREAM_TAIL]:f.EPIC,[e.BRUTE_BONNET]:f.EPIC,[e.FLUTTER_MANE]:f.EPIC,[e.SLITHER_WING]:f.EPIC,[e.SANDY_SHOCKS]:f.EPIC,[e.IRON_TREADS]:f.EPIC,[e.IRON_BUNDLE]:f.EPIC,[e.IRON_HANDS]:f.EPIC,[e.IRON_JUGULIS]:f.EPIC,[e.IRON_MOTH]:f.EPIC,[e.IRON_THORNS]:f.EPIC,[e.FRIGIBAX]:f.RARE,[e.GIMMIGHOUL]:f.RARE,[e.WO_CHIEN]:f.EPIC,[e.CHIEN_PAO]:f.EPIC,[e.TING_LU]:f.EPIC,[e.CHI_YU]:f.EPIC,[e.ROARING_MOON]:f.EPIC,[e.IRON_VALIANT]:f.EPIC,[e.KORAIDON]:f.LEGENDARY,[e.MIRAIDON]:f.LEGENDARY,[e.WALKING_WAKE]:f.EPIC,[e.IRON_LEAVES]:f.EPIC,[e.POLTCHAGEIST]:f.RARE,[e.OKIDOGI]:f.EPIC,[e.MUNKIDORI]:f.EPIC,[e.FEZANDIPITI]:f.EPIC,[e.OGERPON]:f.EPIC,[e.GOUGING_FIRE]:f.EPIC,[e.RAGING_BOLT]:f.EPIC,[e.IRON_BOULDER]:f.EPIC,[e.IRON_CROWN]:f.EPIC,[e.TERAPAGOS]:f.LEGENDARY,[e.PECHARUNT]:f.EPIC,[e.PALDEA_TAUROS]:f.RARE,[e.PALDEA_WOOPER]:f.COMMON,[e.BLOODMOON_URSALUNA]:f.EPIC},ci=1073741824,KB=class KB{get id(){return this._id}get tier(){return this._tier}get sourceType(){return this._sourceType}get hatchWaves(){return this._hatchWaves}set hatchWaves(A){this._hatchWaves=A}get timestamp(){return this._timestamp}get species(){return this._species}get isShiny(){return this._isShiny}get variantTier(){return this._variantTier}get eggMoveIndex(){return this._eggMoveIndex}get overrideHiddenAbility(){return this._overrideHiddenAbility}constructor(A){const s=T(R=>{this._sourceType=R==null?void 0:R.sourceType,this._tier=(R==null?void 0:R.tier)??Ge.EGG_TIER_OVERRIDE??this.rollEggTier(),R!=null&&R.pulled&&this.checkForPityTierOverrides(R.scene),this._id=(R==null?void 0:R.id)??sA(ci,ci*this._tier),this._sourceType=(R==null?void 0:R.sourceType)??void 0,this._hatchWaves=(R==null?void 0:R.hatchWaves)??this.getEggTierDefaultHatchWaves(),this._timestamp=(R==null?void 0:R.timestamp)??new Date().getTime(),this._isShiny=(R==null?void 0:R.isShiny)??(Ge.EGG_SHINY_OVERRIDE||this.rollShiny()),this._variantTier=(R==null?void 0:R.variantTier)??Ge.EGG_VARIANT_OVERRIDE??this.rollVariant(),this._species=(R==null?void 0:R.species)??this.rollSpecies(R.scene),this._overrideHiddenAbility=(R==null?void 0:R.overrideHiddenAbility)??!1,R!=null&&R.species&&(this._tier=this.getEggTier(),this._hatchWaves=R.hatchWaves??this.getEggTierDefaultHatchWaves()),this._species&&!Ke(this._species).hasVariants()&&(this._variantTier=cO.STANDARD),this._eggMoveIndex=(R==null?void 0:R.eggMoveIndex)??this.rollEggMoveIndex(),R!=null&&R.pulled&&(this.increasePullStatistic(R.scene),this.addEggToGameData(R.scene))},"generateEggProperties");if(A!=null&&A.scene){const R=BM(24);A==null||A.scene.executeWithSeedOffset(()=>{s(A)},0,R)}else s(A);this._eggDescriptor=A==null?void 0:A.eggDescriptor}isManaphyEgg(){return this._species===e.PHIONE||this._species===e.MANAPHY||this._tier===f.COMMON&&!(this._id%204)&&!this._species}getKey(){return this.isManaphyEgg()?"manaphy":this._tier.toString()}generatePlayerPokemon(A){let s;const R=T(I=>{this._species||(this._isShiny=this.rollShiny(),this._species=this.rollSpecies(I));let i=Ke(this._species);this._species===e.PHIONE&&this._sourceType===hE.SAME_SPECIES_EGG&&(i=Ke(le($V)?e.PHIONE:e.MANAPHY));let a;const L=this._sourceType===hE.SAME_SPECIES_EGG&&!le(M7),S=this._sourceType!==hE.SAME_SPECIES_EGG&&!le(u7);i.abilityHidden&&(this._overrideHiddenAbility||L||S)&&(a=2),s=I.addPlayerPokemon(i,1,a,void 0,void 0,!1),s.shiny=this._isShiny,s.variant=this._variantTier;const o=N1(le(4294967295));for(let l=0;l<s.ivs.length;l++)s.ivs[l]=Math.max(s.ivs[l],o[l])},"generatePlayerPokemonHelper");return s=s,A.executeWithSeedOffset(()=>{R(A)},this._id,ci.toString()),s}addEggToGameData(A){A.gameData.eggs.push(this)}getEggDescriptor(){if(this.isManaphyEgg())return"Manaphy";switch(this.tier){case f.RARE:return U.t("egg:greatTier");case f.EPIC:return U.t("egg:ultraTier");case f.LEGENDARY:return U.t("egg:masterTier");default:return U.t("egg:defaultTier")}}getEggHatchWavesMessage(){return this.hatchWaves<=5?U.t("egg:hatchWavesMessageSoon"):this.hatchWaves<=15?U.t("egg:hatchWavesMessageClose"):this.hatchWaves<=50?U.t("egg:hatchWavesMessageNotClose"):U.t("egg:hatchWavesMessageLongTime")}getEggTypeDescriptor(A){switch(this.sourceType){case hE.SAME_SPECIES_EGG:return this._eggDescriptor??U.t("egg:sameSpeciesEgg",{species:Ke(this._species).getName()});case hE.GACHA_LEGENDARY:return this._eggDescriptor??`${U.t("egg:gachaTypeLegendary")} (${Ke(mh(A,this.timestamp)).getName()})`;case hE.GACHA_SHINY:return this._eggDescriptor??U.t("egg:gachaTypeShiny");case hE.GACHA_MOVE:return this._eggDescriptor??U.t("egg:gachaTypeMove");case hE.EVENT:return this._eggDescriptor??U.t("egg:eventType");default:return console.warn("getEggTypeDescriptor case not defined. Returning default empty string"),""}}rollEggMoveIndex(){let A=h7;switch(this._sourceType){case hE.SAME_SPECIES_EGG:A=c7;break;case hE.GACHA_MOVE:A=G7;break}const s=this.isManaphyEgg()?2:Math.pow(2,3-this.tier);return le(A*s)?le(3):3}getEggTierDefaultHatchWaves(A){if(this._species===e.PHIONE||this._species===e.MANAPHY)return l7;switch(A??this._tier){case f.COMMON:return N7;case f.RARE:return T7;case f.EPIC:return S7}return o7}rollEggTier(){const A=this._sourceType===hE.GACHA_LEGENDARY?JV:0,s=sA(256);return s>=n7+A?f.COMMON:s>=I7+A?f.RARE:s>=i7+A?f.EPIC:f.LEGENDARY}rollSpecies(A){if(!A)return null;if(this.isManaphyEgg())return le($V)!==1?e.PHIONE:e.MANAPHY;if(this.tier===f.LEGENDARY&&this._sourceType===hE.GACHA_LEGENDARY&&!le(2))return mh(A,this.timestamp);let s,R;switch(this.tier){case f.RARE:s=4,R=5;break;case f.EPIC:s=6,R=7;break;case f.LEGENDARY:s=8,R=9;break;default:s=1,R=3;break}const I=[e.PHIONE,e.MANAPHY,e.ETERNATUS];let i=Object.keys(hr).filter(l=>hr[l]===this.tier).map(l=>parseInt(l)).filter(l=>!KA.hasOwnProperty(l)&&Ke(l).isObtainable()&&I.indexOf(l)===-1);if(A.gameData.unlockPity[this.tier]>=9){const l=i.filter(D=>!A.gameData.dexData[D].caughtAttr&&!A.gameData.eggs.some(M=>M.species===D));l.length&&(i=l)}this.variantTier&&(this.variantTier===cO.RARE||this.variantTier===cO.EPIC)&&(i=i.filter(l=>Ke(l).hasVariants()));let a=0;const L=[];for(const l of i){const D=Phaser.Math.Clamp(CA[l],s,R);let M=Math.floor(((R-D)/(R-s+1)*1.5+1)*100);Ke(l).isRegional()&&(M=Math.floor(M/2)),L.push(a+M),a+=M}let S;const o=le(a);for(let l=0;l<L.length;l++)if(o<L[l]){S=i[l];break}return S=S,A.gameData.dexData[S].caughtAttr||A.gameData.eggs.some(l=>l.species===S)?A.gameData.unlockPity[this.tier]=Math.min(A.gameData.unlockPity[this.tier]+1,10):A.gameData.unlockPity[this.tier]=0,S}rollShiny(){let A=C7;switch(this._sourceType){case hE.GACHA_SHINY:A=U7;break;case hE.SAME_SPECIES_EGG:A=D7;break}return!le(A)}rollVariant(){if(!this.isShiny)return cO.STANDARD;const A=le(10);return A>=T6?cO.STANDARD:A>=S6?cO.RARE:cO.EPIC}checkForPityTierOverrides(A){const s=this._sourceType===hE.GACHA_LEGENDARY?JV:0;A.gameData.eggPity[f.RARE]+=1,A.gameData.eggPity[f.EPIC]+=1,A.gameData.eggPity[f.LEGENDARY]+=1+s,A.gameData.eggPity[f.LEGENDARY]>=a7&&this._tier===f.COMMON?this._tier=f.LEGENDARY:A.gameData.eggPity[f.EPIC]>=L7&&this._tier===f.COMMON?this._tier=f.EPIC:A.gameData.eggPity[f.RARE]>=r7&&this._tier===f.COMMON&&(this._tier=f.RARE),A.gameData.eggPity[this._tier]=0}increasePullStatistic(A){if(A.gameData.gameStats.eggsPulled++,this.isManaphyEgg()){A.gameData.gameStats.manaphyEggsPulled++,this._hatchWaves=this.getEggTierDefaultHatchWaves(f.EPIC);return}switch(this.tier){case f.RARE:A.gameData.gameStats.rareEggsPulled++;break;case f.EPIC:A.gameData.gameStats.epicEggsPulled++;break;case f.LEGENDARY:A.gameData.gameStats.legendaryEggsPulled++;break}}getEggTier(){return hr[this.species]}};T(KB,"Egg");let PI=KB;function P7(){return Object.entries(hr).filter(E=>E[1]===f.LEGENDARY).map(E=>parseInt(E[0])).filter(E=>Ke(E).isObtainable()&&E!==e.ETERNATUS)}T(P7,"getValidLegendaryGachaSpecies");function mh(E,A){const s=P7();let R;const i=new Date(A).getTime(),a=Math.floor(Math.floor(i/864e5)/s.length),L=Math.floor(i/864e5)%s.length;return E.executeWithSeedOffset(()=>{R=Phaser.Math.RND.shuffle(s)[L]},a,ci.toString()),R=R,R}T(mh,"getLegendaryGachaSpeciesForTimestamp");function da(E){return hr[E.getRootSpeciesId()]}T(da,"getEggTierForSpecies");var Je=(E=>(E.Button_Up="BUTTON_UP",E.Alt_Button_Up="ALT_BUTTON_UP",E.Button_Down="BUTTON_DOWN",E.Alt_Button_Down="ALT_BUTTON_DOWN",E.Button_Left="BUTTON_LEFT",E.Alt_Button_Left="ALT_BUTTON_LEFT",E.Button_Right="BUTTON_RIGHT",E.Alt_Button_Right="ALT_BUTTON_RIGHT",E.Button_Action="BUTTON_ACTION",E.Alt_Button_Action="ALT_BUTTON_ACTION",E.Button_Cancel="BUTTON_CANCEL",E.Alt_Button_Cancel="ALT_BUTTON_CANCEL",E.Button_Menu="BUTTON_MENU",E.Alt_Button_Menu="ALT_BUTTON_MENU",E.Button_Stats="BUTTON_STATS",E.Alt_Button_Stats="ALT_BUTTON_STATS",E.Button_Cycle_Form="BUTTON_CYCLE_FORM",E.Alt_Button_Cycle_Form="ALT_BUTTON_CYCLE_FORM",E.Button_Cycle_Shiny="BUTTON_CYCLE_SHINY",E.Alt_Button_Cycle_Shiny="ALT_BUTTON_CYCLE_SHINY",E.Button_Cycle_Gender="BUTTON_CYCLE_GENDER",E.Alt_Button_Cycle_Gender="ALT_BUTTON_CYCLE_GENDER",E.Button_Cycle_Ability="BUTTON_CYCLE_ABILITY",E.Alt_Button_Cycle_Ability="ALT_BUTTON_CYCLE_ABILITY",E.Button_Cycle_Nature="BUTTON_CYCLE_NATURE",E.Alt_Button_Cycle_Nature="ALT_BUTTON_CYCLE_NATURE",E.Button_Cycle_Variant="BUTTON_CYCLE_VARIANT",E.Alt_Button_Cycle_Variant="ALT_BUTTON_CYCLE_VARIANT",E.Button_Speed_Up="BUTTON_SPEED_UP",E.Alt_Button_Speed_Up="ALT_BUTTON_SPEED_UP",E.Button_Slow_Down="BUTTON_SLOW_DOWN",E.Alt_Button_Slow_Down="ALT_BUTTON_SLOW_DOWN",E.Button_Submit="BUTTON_SUBMIT",E.Alt_Button_Submit="ALT_BUTTON_SUBMIT",E))(Je||{});const LA=U.t("settings:pressToBind"),_7={BUTTON_UP:[`KEY ${y.UP.toString()}`,LA],BUTTON_DOWN:[`KEY ${y.DOWN.toString()}`,LA],ALT_BUTTON_UP:[`KEY ${y.UP.toString()}`,LA],BUTTON_LEFT:[`KEY ${y.LEFT.toString()}`,LA],BUTTON_RIGHT:[`KEY ${y.RIGHT.toString()}`,LA],BUTTON_ACTION:[`KEY ${y.ACTION.toString()}`,LA],BUTTON_MENU:[`KEY ${y.MENU.toString()}`,LA],BUTTON_SUBMIT:[`KEY ${y.SUBMIT.toString()}`,LA],ALT_BUTTON_DOWN:[`KEY ${y.DOWN.toString()}`,LA],ALT_BUTTON_LEFT:[`KEY ${y.LEFT.toString()}`,LA],ALT_BUTTON_RIGHT:[`KEY ${y.RIGHT.toString()}`,LA],ALT_BUTTON_ACTION:[`KEY ${y.ACTION.toString()}`,LA],BUTTON_CANCEL:[`KEY ${y.CANCEL.toString()}`,LA],ALT_BUTTON_CANCEL:[`KEY ${y.CANCEL.toString()}`,LA],ALT_BUTTON_MENU:[`KEY ${y.MENU.toString()}`,LA],BUTTON_STATS:[`KEY ${y.STATS.toString()}`,LA],ALT_BUTTON_STATS:[`KEY ${y.STATS.toString()}`,LA],BUTTON_CYCLE_FORM:[`KEY ${y.CYCLE_FORM.toString()}`,LA],ALT_BUTTON_CYCLE_FORM:[`KEY ${y.CYCLE_FORM.toString()}`,LA],BUTTON_CYCLE_SHINY:[`KEY ${y.CYCLE_SHINY.toString()}`,LA],ALT_BUTTON_CYCLE_SHINY:[`KEY ${y.CYCLE_SHINY.toString()}`,LA],BUTTON_CYCLE_GENDER:[`KEY ${y.CYCLE_GENDER.toString()}`,LA],ALT_BUTTON_CYCLE_GENDER:[`KEY ${y.CYCLE_GENDER.toString()}`,LA],BUTTON_CYCLE_ABILITY:[`KEY ${y.CYCLE_ABILITY.toString()}`,LA],ALT_BUTTON_CYCLE_ABILITY:[`KEY ${y.CYCLE_ABILITY.toString()}`,LA],BUTTON_CYCLE_NATURE:[`KEY ${y.CYCLE_NATURE.toString()}`,LA],ALT_BUTTON_CYCLE_NATURE:[`KEY ${y.CYCLE_NATURE.toString()}`,LA],BUTTON_CYCLE_VARIANT:[`KEY ${y.V.toString()}`,LA],ALT_BUTTON_CYCLE_VARIANT:[`KEY ${y.V.toString()}`,LA],BUTTON_SPEED_UP:[`KEY ${y.SPEED_UP.toString()}`,LA],ALT_BUTTON_SPEED_UP:[`KEY ${y.SPEED_UP.toString()}`,LA],BUTTON_SLOW_DOWN:[`KEY ${y.SLOW_DOWN.toString()}`,LA],ALT_BUTTON_SLOW_DOWN:[`KEY ${y.SLOW_DOWN.toString()}`,LA],ALT_BUTTON_SUBMIT:[`KEY ${y.SUBMIT.toString()}`,LA]},H7={BUTTON_UP:0,BUTTON_DOWN:0,BUTTON_LEFT:0,BUTTON_RIGHT:0,BUTTON_ACTION:0,BUTTON_MENU:0,BUTTON_SUBMIT:0,ALT_BUTTON_UP:0,ALT_BUTTON_DOWN:0,ALT_BUTTON_LEFT:0,ALT_BUTTON_RIGHT:0,ALT_BUTTON_ACTION:0,BUTTON_CANCEL:0,ALT_BUTTON_CANCEL:0,ALT_BUTTON_MENU:0,BUTTON_STATS:0,ALT_BUTTON_STATS:0,BUTTON_CYCLE_FORM:0,ALT_BUTTON_CYCLE_FORM:0,BUTTON_CYCLE_SHINY:0,ALT_BUTTON_CYCLE_SHINY:0,BUTTON_CYCLE_GENDER:0,ALT_BUTTON_CYCLE_GENDER:0,BUTTON_CYCLE_ABILITY:0,ALT_BUTTON_CYCLE_ABILITY:0,BUTTON_CYCLE_NATURE:0,ALT_BUTTON_CYCLE_NATURE:0,BUTTON_CYCLE_VARIANT:0,ALT_BUTTON_CYCLE_VARIANT:0,BUTTON_SPEED_UP:0,ALT_BUTTON_SPEED_UP:0,BUTTON_SLOW_DOWN:0,ALT_BUTTON_SLOW_DOWN:0,ALT_BUTTON_SUBMIT:0},d7=["BUTTON_SUBMIT","BUTTON_MENU","BUTTON_ACTION","BUTTON_CANCEL","BUTTON_UP","BUTTON_DOWN","BUTTON_LEFT","BUTTON_RIGHT"];function o6(E,A,s){switch(A){case"BUTTON_UP":case"BUTTON_DOWN":case"BUTTON_LEFT":case"BUTTON_RIGHT":case"BUTTON_ACTION":case"BUTTON_CANCEL":case"BUTTON_MENU":case"BUTTON_STATS":case"BUTTON_CYCLE_SHINY":case"BUTTON_CYCLE_FORM":case"BUTTON_CYCLE_GENDER":case"BUTTON_CYCLE_ABILITY":case"BUTTON_CYCLE_NATURE":case"BUTTON_CYCLE_VARIANT":case"BUTTON_SPEED_UP":case"BUTTON_SLOW_DOWN":case"ALT_BUTTON_UP":case"ALT_BUTTON_DOWN":case"ALT_BUTTON_LEFT":case"ALT_BUTTON_RIGHT":case"ALT_BUTTON_ACTION":case"ALT_BUTTON_CANCEL":case"ALT_BUTTON_MENU":case"ALT_BUTTON_STATS":case"ALT_BUTTON_CYCLE_SHINY":case"ALT_BUTTON_CYCLE_FORM":case"ALT_BUTTON_CYCLE_GENDER":case"ALT_BUTTON_CYCLE_ABILITY":case"ALT_BUTTON_CYCLE_NATURE":case"ALT_BUTTON_CYCLE_VARIANT":case"ALT_BUTTON_SPEED_UP":case"ALT_BUTTON_SLOW_DOWN":case"ALT_BUTTON_SUBMIT":if(s&&E.ui){const R=T((I=!1)=>(E.ui.revertMode(),E.ui.getHandler().updateBindings(),I),"cancelHandler");E.ui.setOverlayMode($.KEYBOARD_BINDING,{target:A,cancelHandler:R})}break}return!0}T(o6,"setSettingKeyboard");var dR=(E=>(E[E.UNLOCKED=1]="UNLOCKED",E[E.ENABLED=2]="ENABLED",E))(dR||{}),Zt=(E=>(E[E.GAMEPAD=0]="GAMEPAD",E[E.KEYBOARD=1]="KEYBOARD",E))(Zt||{}),mt=(E=>(E[E.ON=0]="ON",E[E.OFF=1]="OFF",E[E.EXCLUDE=2]="EXCLUDE",E[E.UNLOCKABLE=3]="UNLOCKABLE",E))(mt||{}),sI=(E=>(E[E.SINGLE=0]="SINGLE",E[E.MULTI=1]="MULTI",E[E.HYBRID=2]="HYBRID",E[E.RADIAL=3]="RADIAL",E))(sI||{}),oO=(E=>(E[E.NUMBER=0]="NUMBER",E[E.COST=1]="COST",E[E.CANDY=2]="CANDY",E[E.IV=3]="IV",E[E.NAME=4]="NAME",E))(oO||{});const FB=class FB{constructor(A,s,R=1){this.text=A||"",this.sprite=s,this.state=R}};T(FB,"DropDownLabel");let Yt=FB;const mB=class mB extends Phaser.GameObjects.Container{constructor(A,s,R){super(A),this.state=0,this.dir=-1,this.onColor=3390463,this.offColor=2565927,this.excludeColor=16733525,this.unlockableColor=16776960,this.val=s,Array.isArray(R)?this.labels=R:this.labels=R?[R]:[new Yt("")],this.currentLabelIndex=0;const I=this.labels[this.currentLabelIndex];this.state=I.state,this.text=se(A,0,0,I.text||"",V.TOOLTIP_CONTENT),this.text.setOrigin(0,.5),this.add(this.text);for(let i=0;i<this.labels.length;i++){const a=this.labels[i].sprite;a&&(this.add(a),a.setOrigin(0,.5),i!==this.currentLabelIndex&&a.setVisible(!1))}}setupToggleIcon(A,s){A===0?(this.toggle=this.scene.add.sprite(0,0,"cursor"),this.toggle.setScale(.5),this.toggle.setOrigin(0,.5),this.toggle.setRotation(Math.PI/180*-90)):(this.toggle=this.scene.add.sprite(0,0,"candy"),this.toggle.setScale(.3),this.toggle.setOrigin(0,.5)),this.add(this.toggle),this.toggle.setVisible(s),this.updateToggleIconColor()}updateToggleIconColor(){switch(this.state){case 0:this.toggle.setTint(this.onColor);break;case 1:this.toggle.setTint(this.offColor);break;case 2:this.toggle.setTint(this.excludeColor);break;case 3:this.toggle.setTint(this.unlockableColor);break}}toggleOptionState(){if(this.labels.length>1)return this.setCurrentLabel((this.currentLabelIndex+1)%this.labels.length);const A=this.state===0?1:0;return this.setOptionState(A)}setOptionState(A){const s=this.labels.findIndex(R=>R.state===A);return s!==-1&&s!==this.currentLabelIndex?this.setCurrentLabel(s):(this.state=A,this.updateToggleIconColor(),A)}setCurrentLabel(A){const s=this.labels[this.currentLabelIndex],R=this.labels[A];return R?(this.currentLabelIndex=A,this.state=R.state,this.updateToggleIconColor(),s.sprite&&(this.text.x-=s.sprite.displayWidth+2,s.sprite.setVisible(!1)),R.sprite&&(this.text.x+=R.sprite.displayWidth+2,R.sprite.setVisible(!0)),this.text.setText(R.text),this.state):this.state}setDirection(A){this.dir=A,this.toggle.flipX=this.dir===1}toggleDirection(){this.setDirection(this.dir*-1)}setLabelPosition(A,s){let R=A;for(let I=0;I<this.labels.length;I++){const i=this.labels[I];i.sprite&&(i.sprite.x=A,i.sprite.y=s,I===this.currentLabelIndex&&(R+=i.sprite.displayWidth+2))}this.text&&(this.text.x=R,this.text.y=s)}setTogglePosition(A,s){this.toggle&&(this.toggle.x=A,this.toggle.y=s)}getCurrentLabelX(){var A;return this.labels[this.currentLabelIndex].sprite?(A=this.labels[this.currentLabelIndex].sprite)==null?void 0:A.x:this.text.x}getWidth(){let A=0;const s=this.text.text;for(const R of this.labels){this.text.setText(R.text);const I=R.sprite?R.sprite.displayWidth+2:0;A=Math.max(A,this.text.displayWidth+I)}return this.text.setText(s),A}};T(mB,"DropDownOption");let dA=mB;const WB=class WB extends Phaser.GameObjects.Container{constructor(A,s,R,I,i,a=1,L=2){super(A,s-7-5,R),this.dropDownType=1,this.cursor=0,this.lastCursor=-1,this.defaultCursor=0,this.lastDir=-1,this.options=I,this.dropDownType=a,this.onChange=i,this.cursorObj=A.add.image(7,0,"cursor"),this.cursorObj.setScale(.5),this.cursorObj.setOrigin(0,.5),this.cursorObj.setVisible(!1),(this.dropDownType===1||this.dropDownType===2)&&this.options.unshift(new dA(A,"ALL",new Yt(U.t("filterBar:all"),void 0,this.checkForAllOn()?0:1))),this.defaultSettings=this.getSettings(),I.forEach((G,P)=>{const _=a!==0||G.state===0;G.setupToggleIcon(a,_),G.width=100,G.y=P*7+P*L+6;const g=14,H=7/2;G.setLabelPosition(g+8,H),a===0?G.setTogglePosition(g+3,H+1):G.setTogglePosition(g,H)}),this.window=it(A,0,0,100,I[I.length-1].y+7+6,!1,!1,void 0,void 0,vR.XTHIN),this.add(this.window),this.add(I),this.add(this.cursorObj),this.setVisible(!1)}getWidth(){return this.window?this.window.width:this.width}toggleVisibility(){this.setVisible(!this.visible)}setVisible(A){return super.setVisible(A),A&&this.autoSize(),this}resetCursor(){return this.dropDownType===2&&this.checkForAllOff()?this.setCursor(this.lastCursor):this.setCursor(this.defaultCursor)}setCursor(A){return this.cursor=A,A<0?(A=0,this.cursorObj.setVisible(!1),!1):A>=this.options.length?(A=this.options.length-1,this.cursorObj.y=this.options[A].y+3.5,this.cursorObj.setVisible(!0),!1):(this.cursorObj.y=this.options[A].y+3.5,this.cursorObj.setVisible(!0),this.dropDownType===2&&(this.lastCursor=A,this.onChange()),!0)}toggleOptionState(A=this.cursor){const s=this.options[A];if(this.dropDownType===1||this.dropDownType===2){const R=s.toggleOptionState();A===0?this.setAllOptions(R):R===0&&this.checkForAllOn()?this.options[0].setOptionState(0):this.options[0].setOptionState(1)}else this.dropDownType===0?s.state===1?(this.options.forEach(R=>{R.setOptionState(1),R.setDirection(-1),R.toggle.setVisible(!1)}),s.setOptionState(0),s.setDirection(this.lastDir),s.toggle.setVisible(!0)):(s.toggleDirection(),this.lastDir=this.options[this.cursor].dir):this.dropDownType===3&&s.toggleOptionState();this.onChange()}checkForAllOn(){return this.options.every((A,s)=>s===0||A.state===0)}checkForAllOff(){return this.options.every((A,s)=>s===0||A.state===1)}getVals(){if(this.dropDownType===1)return this.options.filter((A,s)=>s>0&&A.state===0).map(A=>A.val);if(this.dropDownType===2){const A=this.options.filter((s,R)=>R>0&&s.state===0).map(s=>s.val);return A.length>0?A:this.cursor===0?this.options.filter((s,R)=>R>0).map(s=>s.val):[this.options[this.cursor].val]}else return this.dropDownType===3?this.options.map(A=>({val:A.val,state:A.state})):this.options.filter(A=>A.state===0).map(A=>({val:A.val,dir:A.dir}))}getSettings(){const A=[];for(let s=0;s<this.options.length;s++)A.push({val:this.options[s].val,state:this.options[s].state,cursor:this.cursor===s,dir:this.options[s].dir});return A}hasDefaultValues(){const A=this.getSettings(),s=T(R=>A.length===this.defaultSettings.length&&A.every((I,i)=>R.every(a=>I[a]===this.defaultSettings[i][a])),"compareValues");switch(this.dropDownType){case 1:case 3:return s(["val","state"]);case 2:return s(["val","state","cursor"]);case 0:return s(["val","state","dir"]);default:return!1}}resetToDefault(){if(this.defaultSettings.length>0){this.setCursor(this.defaultCursor),this.lastDir=-1;for(let A=0;A<this.options.length;A++)this.dropDownType===0?this.defaultSettings[A].state===1?(this.options[A].setOptionState(1),this.options[A].setDirection(-1),this.options[A].toggle.setVisible(!1)):(this.options[A].setOptionState(0),this.options[A].setDirection(-1),this.options[A].toggle.setVisible(!0)):this.defaultSettings[A]&&this.options[A].setOptionState(this.defaultSettings[A].state)}}setAllOptions(A){if(this.dropDownType!==0)for(const s of this.options)s.setOptionState(A)}selectAllOptions(){this.setAllOptions(0)}unselectAllOptions(){this.setAllOptions(1)}autoSize(){let A=0,s=0;for(let R=0;R<this.options.length;R++){const I=this.options[R].getWidth();I>A&&(A=I,s=this.options[R].getCurrentLabelX()??0)}this.window.width=A+s-this.window.x+6,this.x+this.window.width>this.parentContainer.width&&(this.x=this.parentContainer.width-this.window.width)}};T(WB,"DropDown");let RI=WB;const YB=class YB extends Phaser.GameObjects.Container{constructor(A,s){super(A,0,0),this.shinyIcons=[],this.cost=0,this.species=s;const R=A.gameData.getSpeciesDefaultDexAttr(s,!1,!0),I=A.gameData.getSpeciesDexAttrProps(s,R),i=this.scene.add.image(2,5,"passive_bg");i.setOrigin(0,0),i.setScale(.75),i.setVisible(!1),this.add(i),this.starterPassiveBgs=i,this.icon=this.scene.add.sprite(-2,2,s.getIconAtlasKey(I.formIndex,I.shiny,I.variant)),this.icon.setScale(.5),this.icon.setOrigin(0,0),this.icon.setFrame(s.getIconId(I.female,I.formIndex,I.shiny,I.variant)),this.checkIconId(I.female,I.formIndex,I.shiny,I.variant),this.icon.setTint(0),this.add(this.icon);for(let M=0;M<3;M++){const c=this.scene.add.image(M*-3+12,2,"shiny_star_small");c.setScale(.5),c.setOrigin(0,0),c.setVisible(!1),this.shinyIcons.push(c)}this.add(this.shinyIcons);const a=se(this.scene,1,2,"0",V.WINDOW,{fontSize:"32px"});a.setShadowOffset(2,2),a.setOrigin(0,0),a.setVisible(!1),this.add(a),this.label=a;const L=this.scene.add.image(12,7,"ha_capsule");L.setOrigin(0,0),L.setScale(.5),L.setVisible(!1),this.add(L),this.hiddenAbilityIcon=L;const S=this.scene.add.image(0,7,"favorite");S.setOrigin(0,0),S.setScale(.5),S.setVisible(!1),this.add(S),this.favoriteIcon=S;const o=this.scene.add.image(0,12,"champion_ribbon");o.setOrigin(0,0),o.setScale(.5),o.setVisible(!1),this.add(o),this.classicWinIcon=o;const l=this.scene.add.image(12,12,"candy");l.setOrigin(0,0),l.setScale(.25),l.setVisible(!1),this.add(l),this.candyUpgradeIcon=l;const D=this.scene.add.image(12,12,"candy_overlay");D.setOrigin(0,0),D.setScale(.25),D.setVisible(!1),this.add(D),this.candyUpgradeOverlayIcon=D}checkIconId(A,s,R,I){this.icon.frame.name!==this.species.getIconId(A,s,R,I)&&(`${this.species.name}`,this.icon.setTexture(this.species.getIconAtlasKey(s,!1,I)),this.icon.setFrame(this.species.getIconId(A,s,!1,I)))}};T(YB,"StarterContainer");let Wh=YB;var bE=(E=>(E[E.GEN=0]="GEN",E[E.TYPES=1]="TYPES",E[E.CAUGHT=2]="CAUGHT",E[E.UNLOCKS=3]="UNLOCKS",E[E.MISC=4]="MISC",E[E.SORT=5]="SORT",E))(bE||{});const pB=class pB extends Phaser.GameObjects.Container{constructor(A,s,R,I,i){super(A,s,R),this.labels=[],this.dropDowns=[],this.columns=[],this.numFilters=0,this.openDropDown=!1,this.lastCursor=-1,this.width=I,this.height=i,this.window=it(A,0,0,I,i,!1,!1,void 0,void 0,vR.THIN),this.add(this.window),this.cursorObj=this.scene.add.image(1,1,"cursor"),this.cursorObj.setScale(.5),this.cursorObj.setVisible(!1),this.cursorObj.setOrigin(0,0),this.add(this.cursorObj),this.uiTheme=A.uiTheme}addFilter(A,s,R){if(this.columns.includes(A))return!1;this.columns.push(A);const I=se(this.scene,0,3,s,V.TOOLTIP_CONTENT);return this.labels.push(I),this.add(I),this.dropDowns.push(R),this.add(R),this.calcFilterPositions(),this.numFilters++,!0}getFilter(A){return this.dropDowns[this.columns.indexOf(A)]}updateFilterLabels(){for(let A=0;A<this.numFilters;A++)this.dropDowns[A].hasDefaultValues()?this.labels[A].setColor(zt(V.TOOLTIP_CONTENT,!1,this.uiTheme)):this.labels[A].setColor(zt(V.STATS_LABEL,!1,this.uiTheme))}calcFilterPositions(){let R=20;this.labels.forEach(i=>{R+=i.displayWidth+8});const I=(this.width-R)/(this.labels.length-1);for(let i=0;i<this.labels.length;i++){if(i===0)this.labels[i].x=14;else{const a=this.labels[i-1].x+this.labels[i-1].displayWidth;this.labels[i].x=a+I+8}this.dropDowns[i].x=this.labels[i].x-8-6,this.dropDowns[i].y=this.height}}offsetHybridFilters(){for(let A=0;A<this.dropDowns.length;A++)this.dropDowns[A].dropDownType===sI.HYBRID&&(this.dropDowns[A].autoSize(),this.dropDowns[A].x=-this.dropDowns[A].getWidth(),this.dropDowns[A].y=0)}setCursor(A){this.lastCursor>-1&&this.dropDowns[this.lastCursor].visible&&(this.dropDowns[this.lastCursor].setVisible(!1),this.dropDowns[A].setVisible(!0),this.dropDowns[A].resetCursor()),this.cursorObj.setPosition(this.labels[A].x-8+2,6),this.lastCursor=A}toggleDropDown(A){this.dropDowns[A].toggleVisibility(),this.openDropDown=this.dropDowns[A].visible,this.dropDowns[A].resetCursor()}hideDropDowns(){this.dropDowns.forEach(A=>{A.setVisible(!1)}),this.openDropDown=!1}incDropDownCursor(){return this.dropDowns[this.lastCursor].cursor===this.dropDowns[this.lastCursor].options.length-1?this.dropDowns[this.lastCursor].setCursor(0):this.dropDowns[this.lastCursor].setCursor(this.dropDowns[this.lastCursor].cursor+1)}decDropDownCursor(){return this.dropDowns[this.lastCursor].cursor===0?this.dropDowns[this.lastCursor].setCursor(this.dropDowns[this.lastCursor].options.length-1):this.dropDowns[this.lastCursor].setCursor(this.dropDowns[this.lastCursor].cursor-1)}toggleOptionState(){this.dropDowns[this.lastCursor].toggleOptionState()}getVals(A){return this.getFilter(A).getVals()}setValsToDefault(){for(const A of this.dropDowns)A.resetToDefault()}getNearestFilter(A){const s=A.x+A.icon.displayWidth/2;let R=0,I=1e3;for(let i=0;i<this.labels.length;i++){const a=Math.abs(s-(this.labels[i].x+this.labels[i].displayWidth/3));a<I&&(R=i,I=a)}return R}};T(pB,"FilterBar");let Yh=pB;const yB=class yB extends Phaser.GameObjects.Container{constructor(A,s,R,I,i,a){super(A,s,R),this.maxRows=a,this.totalRows=a,this.currentRow=0;const L=2;I=Math.max(I,4),this.bg=A.add.nineslice(0,0,"scroll_bar",void 0,I,i,L,L,L,L),this.bg.setOrigin(0,0),this.add(this.bg),this.handleBody=A.add.rectangle(1,1,I-2,4,11184810),this.handleBody.setOrigin(0,0),this.add(this.handleBody),this.handleBottom=A.add.nineslice(1,1,"scroll_bar_handle",void 0,I-2,2,2,0,0,0),this.handleBottom.setOrigin(0,0),this.add(this.handleBottom)}setScrollCursor(A){this.currentRow=A,this.updateHandlePosition()}setTotalRows(A){this.totalRows=A,this.handleBody.height=(this.bg.displayHeight-1-this.handleBottom.displayHeight)*this.maxRows/this.totalRows,this.updateHandlePosition(),this.setVisible(this.totalRows>this.maxRows)}updateHandlePosition(){this.handleBody.y=1+(this.bg.displayHeight-1-this.handleBottom.displayHeight)/this.totalRows*this.currentRow,this.handleBottom.y=this.handleBody.y+this.handleBody.displayHeight}};T(yB,"ScrollBar");let gI=yB;const wB=class wB extends kA{constructor(A){super(A)}start(){super.start(),this.scene.playBgm("menu"),this.scene.ui.setMode($.CHALLENGE_SELECT)}};T(wB,"SelectChallengePhase");let pl=wB;var h1=(E=>(E[E.SWITCH=0]="SWITCH",E[E.SET=1]="SET",E))(h1||{});const VB=class VB extends zE{constructor(A,s){super(A,s)}start(){var s;super.start();const A=this.getPokemon();((s=A.status)==null?void 0:s.effect)===J.TOXIC&&(A.status.toxicTurnCount=0),this.scene.arena.applyTags(kR,!1,A),this.scene.currentBattle.isBattleMysteryEncounter()&&A.findTags(R=>R instanceof QU).length>0&&A.lapseTag(Y.MYSTERY_ENCOUNTER_POST_SUMMON),mX(UE,A).then(()=>this.end())}};T(VB,"PostSummonPhase");let Wi=VB;function yM(E,A,s,R){switch(R){case ge.POKEBALL:qV(E,A,s,48);break;case ge.GREAT_BALL:qV(E,A,s,96);break;case ge.ULTRA_BALL:jV(E,A,s,8);break;case ge.ROGUE_BALL:jV(E,A,s,10);break;case ge.MASTER_BALL:f7(E,A,s);break}}T(yM,"addPokeballOpenParticles");function qV(E,A,s,R){const I=E.anims.generateFrameNames("pb_particles",{start:0,end:3,suffix:".png"});E.anims.exists("pb_open_particle")||E.anims.create({key:"pb_open_particle",frames:I,frameRate:16,repeat:-1});const i=T(L=>{const S=E.add.sprite(A,s,"pb_open_particle");E.field.add(S);const o=L*45,[l,D]=[R*Math.cos(o*Math.PI/180),R*Math.sin(o*Math.PI/180)];E.tweens.add({targets:S,x:A+l,y:s+D,duration:575}),S.play({key:"pb_open_particle",startFrame:(L+3)%4,frameRate:Math.floor(16*E.gameSpeed)}),E.tweens.add({targets:S,delay:500,duration:75,alpha:0,ease:"Sine.easeIn",onComplete:T(()=>S.destroy(),"onComplete")})},"addParticle");let a=0;E.time.addEvent({delay:20,repeat:16,callback:T(()=>i(++a),"callback")})}T(qV,"doDefaultPbOpenParticles");function jV(E,A,s,R){const I=[];for(let i=0;i<10;i++)I.push(l6(E,i*25,A,s,1,1,5,R));E.tweens.add({targets:I,delay:750,duration:250,alpha:0,ease:"Sine.easeIn",onComplete:T(()=>{for(const i of I)i.destroy()},"onComplete")})}T(jV,"doUbOpenParticles");function f7(E,A,s){const R=[];for(let I=0;I<2;I++){for(let i=0;i<8;i++)R.push(l6(E,i*32,A,s,I?1:2,I?2:1,8,4));E.tweens.add({targets:R,delay:750,duration:250,alpha:0,ease:"Sine.easeIn",onComplete:T(()=>{for(const i of R)i.destroy()},"onComplete")})}}T(f7,"doMbOpenParticles");function l6(E,A,s,R,I,i,a,L){let S=0;const o=E.add.image(s,R,"pb_particles",`${L}.png`);E.field.add(o);const l=T(()=>{if(!o.scene)return D.remove();o.x=s+zO(A,S*I),o.y=R+Gi(A,S*i),A=A+a,S++},"updateParticle"),D=E.tweens.addCounter({repeat:-1,duration:zA(1),onRepeat:T(()=>{l()},"onRepeat")});return o}T(l6,"doFanOutParticle");function C6(E,A){const s=T(()=>{const R=E.add.sprite(A.x,A.y,"pb_particles","4.png");R.setOrigin(A.originX,A.originY),R.setAlpha(.5),E.field.add(R),E.tweens.add({targets:R,y:A.y-10,ease:"Sine.easeOut",duration:250,onComplete:T(()=>{E.tweens.add({targets:R,y:A.y,alpha:0,ease:"Sine.easeIn",duration:250})},"onComplete")});const I=db(25);E.tweens.add({targets:R,x:A.x+I,duration:500}),E.tweens.add({targets:R,alpha:0,delay:425,duration:75,onComplete:T(()=>R.destroy(),"onComplete")})},"addParticle");new Array(3).fill(null).map(()=>s())}T(C6,"addPokeballCaptureStars");function zO(E,A){return A*Math.sin(E*(Math.PI/128))}T(zO,"sin");function Gi(E,A){return A*Math.cos(E*(Math.PI/128))}T(Gi,"cos");const vB=class vB extends YO{constructor(A,s,R){super(A),this.partyMemberIndex=s,this.fieldIndex=s<this.scene.currentBattle.getBattlerCount()?s:-1,this.player=R}getParty(){return this.player?this.scene.getParty():this.scene.getEnemyParty()}getPokemon(){return this.getParty()[this.partyMemberIndex]}};T(vB,"PartyMemberPokemonPhase");let yl=vB;const xB=class xB extends kA{constructor(A){super(A)}start(){super.start(),this.scene.ui.getMessageHandler().bg.setVisible(!1),this.scene.ui.getMessageHandler().nameBoxContainer.setVisible(!1),this.endCard=this.scene.add.image(0,0,`end_${this.scene.gameData.gender===ct.FEMALE?"f":"m"}`),this.endCard.setOrigin(0),this.endCard.setScale(.5),this.scene.field.add(this.endCard),this.text=se(this.scene,this.scene.game.canvas.width/12,this.scene.game.canvas.height/6-16,U.t("battle:congratulations"),V.SUMMARY,{fontSize:"128px"}),this.text.setOrigin(.5),this.scene.field.add(this.text),this.scene.ui.clearText(),this.scene.ui.fadeIn(1e3).then(()=>{this.scene.ui.showText("",null,()=>{this.scene.ui.getMessageHandler().bg.setVisible(!0),this.end()},null,!0)})}};T(xB,"EndCardPhase");let wl=xB;const bB=class bB extends LE{constructor(A,s){super(A),this.modifierType=YM(s)}start(){super.start(),this.doReward().then(()=>this.end())}doReward(){return new Promise(A=>{const s=this.modifierType.newModifier();this.scene.addModifier(s).then(()=>{this.scene.playSound("item_fanfare"),this.scene.ui.showText(U.t("battle:rewardGain",{modifierName:s==null?void 0:s.type.name}),null,()=>A(),null,!0)})})}};T(bB,"ModifierRewardPhase");let gE=bB;const kB=class kB extends gE{constructor(A,s){super(A,s)}doReward(){return new Promise(A=>{const s=this.modifierType.newModifier();this.scene.addModifier(s).then(()=>{this.scene.playSound("level_up_fanfare"),this.scene.ui.setMode($.MESSAGE),this.scene.ui.fadeIn(250).then(()=>{this.scene.ui.showText(U.t("battle:rewardGain",{modifierName:s==null?void 0:s.type.name}),null,()=>{this.scene.time.delayedCall(1500,()=>this.scene.arenaBg.setVisible(!0)),A()},null,!0,1500)})})})}};T(kB,"GameOverModifierRewardPhase");let ph=kB;function B7(){return new Promise((E,A)=>{GO("daily/seed").then(s=>{if(!s.ok){E(null);return}return s.text()}).then(s=>E(s??null)).catch(s=>A(s))})}T(B7,"fetchDailyRunSeed");function g7(E,A){const s=[];return E.executeWithSeedOffset(()=>{const R=E.gameMode.getStartingLevel();if(/\d{18}$/.test(A)){for(let i=0;i<3;i++){const a=6+i*6,L=GI(parseInt(A.slice(a,a+4)),parseInt(A.slice(a+4,a+6)));s.push(zV(E,L,R))}return}const I=[];I.push(Math.min(Math.round(3.5+Math.abs(a0(1))),8)),I.push(le(9-I[0],1)),I.push(10-(I[0]+I[1]));for(let i=0;i<I.length;i++){const a=I[i],L=Object.keys(CA).map(l=>parseInt(l)).filter(l=>CA[l]===a),S=Ke(RE(L)),o=Ke(S.getTrainerSpeciesForLevel(R,!0,Pe.STRONGER));s.push(zV(E,o,R))}},0,A),s}T(g7,"getDailyRunStarters");function zV(E,A,s){const R=A instanceof u?A:Ke(A.speciesId),I=A instanceof u?void 0:A.formIndex,i=new Ss(E,R,s,void 0,I,void 0,void 0,void 0,void 0,void 0,void 0),a={species:R,dexAttr:i.getDexAttr(),abilityIndex:i.abilityIndex,passive:!1,nature:i.getNature(),pokerus:i.pokerus};return i.destroy(),a}T(zV,"getDailyRunStarter");var Vl=(E=>(E.WHITE="#ffffff",E.OFF_WHITE="#f8f8f8",E.LIGHT_GREY="#a0a0a0",E.GREY="#484848",E.DARK_GREY="#404040",E.PINK="#f89890",E.RED="#e13d3d",E.RED2="#e70808",E.REDORANGE="#d64b00",E.ORANGE="#f8b050",E.LIGHT_YELLOW="#e8e8a8",E.YELLOW="#ccbe00",E.DARK_YELLOW="#a68e17",E.GREEN="#78c850",E.BLUE="#40c8f8",E.COMMON="#ffffff",E.GREAT="#3890f8",E.ULTRA="#f8d038",E.ROGUE="#d52929",E.MASTER="#e020c0",E.LUXURY="#e64a18",E))(Vl||{}),c1=(E=>(E.NORMAL="#ADA594",E.FIGHTING="#A55239",E.FLYING="#9CADF7",E.POISON="#9141CB",E.GROUND="#AE7A3B",E.ROCK="#BDA55A",E.BUG="#ADBD21",E.GHOST="#6363B5",E.STEEL="#81A6BE",E.FIRE="#F75231",E.WATER="#399CFF",E.GRASS="#7BCE52",E.ELECTRIC="#FFC631",E.PSYCHIC="#EF4179",E.ICE="#5ACEE7",E.DRAGON="#7B63E7",E.DARK="#735A4A",E.FAIRY="#EF70EF",E))(c1||{}),G1=(E=>(E.NORMAL="#574F4A",E.FIGHTING="#4E637C",E.FLYING="#4E637C",E.POISON="#352166",E.GROUND="#572D1E",E.ROCK="#5F442D",E.BUG="#5F5010",E.GHOST="#323D5B",E.STEEL="#415C5F",E.FIRE="#7C1818",E.WATER="#1C4E80",E.GRASS="#4F6729",E.ELECTRIC="#804618",E.PSYCHIC="#782155",E.ICE="#2D5C74",E.DRAGON="#313874",E.DARK="#392725",E.FAIRY="#663878",E))(G1||{}),vl=(E=>(E.GREY="#636363",E.PURPLE="#6b5a73",E.LIGHT_GREY="#d0d0c8",E.BROWN="#69402a",E.PINK="#fca2a2",E.BRIGHT_RED="#f83018",E.RED="#984038",E.MAROON="#632929",E.GREEN="#306850",E.BLUE="#006090",E.LIGHT_YELLOW="#ded6b5",E.YELLOW="#ebd773",E.DARK_YELLOW="#a0a060",E.ORANGE="#c07800",E.LIGHT_ORANGE="#ffbd73",E))(vl||{}),P1=(E=>(E[E.RUN_HISTORY=0]="RUN_HISTORY",E[E.SESSION_PREVIEW=1]="SESSION_PREVIEW",E))(P1||{});const ZB=class ZB extends os{constructor(A){super(A,$.RUN_INFO)}async setup(){this.runContainer=this.scene.add.container(1,-(this.scene.game.canvas.height/6)+1),this.modifiersModule=el,this.runContainer.setVisible(!1),this.scene.loadImage("encounter_exclaim","mystery-encounters")}show(A){super.show(A);const s=this.scene.add.rectangle(0,0,this.scene.game.canvas.width,this.scene.game.canvas.height,26720);s.setOrigin(0,0),this.runContainer.add(s);const R=A[0];this.runDisplayMode=A[1],this.runDisplayMode===0?(this.runInfo=this.scene.gameData.parseSessionData(JSON.stringify(R.entry)),this.isVictory=R.isVictory??!1):this.runDisplayMode===1&&(this.runInfo=A[0]),this.pageMode=0,this.addHeader(),this.statsBgWidth=(this.scene.game.canvas.width/6-2)/3,this.runResultContainer=this.scene.add.container(0,24);const I=it(this.scene,0,0,this.statsBgWidth-11,65);I.setOrigin(0,0),this.runResultContainer.add(I),this.runDisplayMode===0?this.parseRunResult():this.runDisplayMode===1&&this.parseRunStatus(),this.runInfoContainer=this.scene.add.container(0,89);const i=it(this.scene,0,0,this.statsBgWidth-11,90),a=i.getBottomRight();return this.runInfoContainer.add(i),this.parseRunInfo(a.x,a.y),this.partyContainer=this.scene.add.container(this.statsBgWidth-10,23),this.parsePartyInfo(),this.showParty(!0),this.runContainer.setInteractive(new Phaser.Geom.Rectangle(0,0,this.scene.game.canvas.width/6,this.scene.game.canvas.height/6),Phaser.Geom.Rectangle.Contains),this.getUi().bringToTop(this.runContainer),this.runContainer.setVisible(!0),this.isVictory&&(this.createHallofFame(),this.getUi().bringToTop(this.hallofFameContainer)),this.setCursor(0),this.getUi().add(this.runContainer),this.getUi().hideTooltip(),!0}addHeader(){var R;const A=it(this.scene,0,0,this.scene.game.canvas.width/6-2,24);if(A.setOrigin(0,0),this.runContainer.add(A),this.runInfo.modifiers.length!==0){const I=A.getTopRight(),i=this.scene.add.container(0,0),a=se(this.scene,8,0,U.t("runHistory:viewHeldItems"),V.WINDOW,{fontSize:"34px"}),L=this.getUi().getGamepadType();let S;L==="touch"?S=new Phaser.GameObjects.Sprite(this.scene,0,2,"keyboard","E.png"):S=new Phaser.GameObjects.Sprite(this.scene,0,2,L,(R=this.scene.inputController)==null?void 0:R.getIconForLatestInputRecorded(Je.Button_Cycle_Ability)),i.add([a,S]),i.setPosition(I.x-a.displayWidth-S.displayWidth-8,10),this.runContainer.add(i)}const s=se(this.scene,0,0,U.t("runHistory:runInfo"),V.SETTINGS_LABEL);s.setOrigin(0,0),s.setPositionRelative(A,8,4),this.runContainer.add(s)}async parseRunResult(){var a,L;const A=this.scene.gameData.gender??ct.UNSET,s=ct[A],R=this.isVictory?V.PERFECT_IV:V.SUMMARY_RED,I=this.isVictory?U.t("runHistory:victory"):U.t("runHistory:defeated",{context:s}),i=se(this.scene,6,5,`${I} - ${U.t("saveSlotSelectUiHandler:wave")} ${this.runInfo.waveIndex}`,R,{fontSize:"65px",lineSpacing:.1});if(this.isVictory){const S=this.scene.add.container(0,0),o=se(this.scene,8,0,U.t("runHistory:viewHallOfFame"),V.WINDOW,{fontSize:"65px"}),l=se(this.scene,8,12,U.t("runHistory:viewEndingSplash"),V.WINDOW,{fontSize:"65px"}),D=this.getUi().getGamepadType();let M,c;D==="touch"?(M=new Phaser.GameObjects.Sprite(this.scene,0,4,"keyboard","R.png"),c=new Phaser.GameObjects.Sprite(this.scene,0,16,"keyboard","F.png")):(M=new Phaser.GameObjects.Sprite(this.scene,0,4,D,(a=this.scene.inputController)==null?void 0:a.getIconForLatestInputRecorded(Je.Button_Cycle_Shiny)),c=new Phaser.GameObjects.Sprite(this.scene,0,16,D,(L=this.scene.inputController)==null?void 0:L.getIconForLatestInputRecorded(Je.Button_Cycle_Form))),S.add([o,M]),S.add([l,c]),S.setPosition(12,25),this.runResultContainer.add(S)}if(this.runResultContainer.add(i),!this.isVictory){const S=this.scene.add.container(0,0);if(this.runInfo.battleType===Nt.WILD||this.runInfo.battleType===Nt.MYSTERY_ENCOUNTER&&!this.runInfo.trainer)switch(this.runInfo.enemyParty.length){case 1:this.parseWildSingleDefeat(S);break;case 2:this.parseWildDoubleDefeat(S);break}else(this.runInfo.battleType===Nt.TRAINER||this.runInfo.battleType===Nt.MYSTERY_ENCOUNTER&&this.runInfo.trainer)&&this.parseTrainerDefeat(S);this.runResultContainer.add(S)}this.runContainer.add(this.runResultContainer)}parseRunStatus(){const A=se(this.scene,6,5,`${U.t("saveSlotSelectUiHandler:wave")} ${this.runInfo.waveIndex} - ${JL(this.runInfo.arena.biome)}`,V.WINDOW,{fontSize:"65px",lineSpacing:.1}),s=this.scene.add.container(0,0);if(this.runResultContainer.add(s),this.runInfo.battleType===Nt.WILD)this.runInfo.enemyParty.length===1?this.parseWildSingleDefeat(s):this.runInfo.enemyParty.length===2&&this.parseWildDoubleDefeat(s);else if(this.runInfo.battleType===Nt.TRAINER){this.showTrainerSprites(s);const R=3;this.runInfo.enemyParty.forEach((l,D)=>{const M=this.scene.add.sprite(0,0,"pb");M.setFrame(OO(l.pokeball)),M.setScale(.5),M.setPosition(52+D%R*8,D<=2?18:25),s.add(M)});const I=this.runInfo.trainer.toTrainer(this.scene),i=375;let a="";this.runInfo.trainer.trainerType>=i?a=I.variant===bt.FEMALE?U.t("trainerNames:rival_female"):U.t("trainerNames:rival"):a=I.getName(0,!0);const L=U.t(I.variant!==bt.DOUBLE?"battle:trainerAppeared":"battle:trainerAppearedDouble",{trainerName:a}).replace(/\n/g," "),S=this.scene.add.container(0,0),o=se(this.scene,0,0,L,V.WINDOW,{fontSize:"35px",wordWrap:{width:200}});S.add(o),S.setPosition(52,29),this.runResultContainer.add(S)}else if(this.runInfo.battleType===Nt.MYSTERY_ENCOUNTER){const R=this.scene.add.sprite(0,0,"encounter_exclaim");R.setPosition(34,26),R.setScale(.65);const I=this.scene.add.sprite(56,-106,"pkmn__sub");I.setScale(.65),I.setPosition(34,46);const i=U.t(this.scene.getMysteryEncounter(this.runInfo.mysteryEncounterType,!0).localizationKey+":title"),a=this.scene.add.container(0,0),L=se(this.scene,0,0,i,V.WINDOW,{fontSize:"45px",wordWrap:{width:160}});a.add(L),a.setPosition(47,37),this.runResultContainer.add([R,I,a])}this.runResultContainer.add(A),this.runContainer.add(this.runResultContainer)}parseWildSingleDefeat(A){const s=this.scene.add.container(0,0),R=this.runInfo.enemyParty[0],I=R.boss;R.boss=!1,R.player=!0;const i=R.toPokemon(this.scene),a=this.scene.addPokemonIcon(i,0,0,0,0),L=I?V.PARTY_RED:V.PARTY,S=se(this.scene,36,26,`${U.t("saveSlotSelectUiHandler:lv")}${va(i.level,1e3)}`,L,{fontSize:"44px",color:"#f8f8f8"});S.setShadow(0,0,void 0),S.setStroke("#424242",14),S.setOrigin(1,0),s.add(a),s.add(S),A.add(s),A.setPosition(27,12),i.destroy()}parseWildDoubleDefeat(A){this.runInfo.enemyParty.forEach((s,R)=>{const I=this.scene.add.container(0,0),i=s.boss;s.boss=!1,s.player=!0;const a=s.toPokemon(this.scene),L=this.scene.addPokemonIcon(a,0,0,0,0),S=se(this.scene,36,26,`${U.t("saveSlotSelectUiHandler:lv")}${va(a.level,1e3)}`,i?V.PARTY_RED:V.PARTY,{fontSize:"44px",color:"#f8f8f8"});S.setShadow(0,0,void 0),S.setStroke("#424242",14),S.setOrigin(1,0),I.add(L),I.add(S),I.setPosition(R*35,0),A.add(I),a.destroy()}),A.setPosition(8,14)}showTrainerSprites(A){const s=this.runInfo.trainer.toTrainer(this.scene);s.config.loadAssets(this.scene,this.runInfo.trainer.variant).then(()=>{const R=s.config.getSpriteKey(this.runInfo.trainer.variant===bt.FEMALE,!1),I=this.scene.add.sprite(0,5,R);if(this.runInfo.trainer.variant===bt.DOUBLE&&!s.config.doubleOnly){const i=this.scene.add.container(5,8);I.setPosition(-3,-3);const a=s.config.getSpriteKey(!0,!0),L=this.scene.add.sprite(5,-3,a);this.runDisplayMode===0?(L.setScale(.2),I.setScale(.2),i.add(I),i.add(L),i.setPosition(12,38)):(I.setScale(.55),I.setPosition(-9,-3),L.setScale(.55),i.add([I,L]),i.setPosition(28,40)),A.add(i)}else{const i=this.runDisplayMode===0?.35:.65,a=this.runDisplayMode===0?[12,28]:[32,36];I.setScale(i,i),I.setPosition(a[0],a[1]),A.add(I)}})}parseTrainerDefeat(A){this.showTrainerSprites(A);const s={};this.runInfo.enemyModifiers.forEach(I=>{const i=I.toModifier(this.scene,this.modifiersModule[I.className]);if(i instanceof zs){const a=i==null?void 0:i.getArgs(),L=a[0];s[L]=a[1]}});const R=this.scene.add.container(0,0);this.runInfo.enemyParty.forEach((I,i)=>{const a=Math.floor(i/3),L=this.scene.add.container(0,0);L.setScale(.6);const S=I.boss;I.boss=!1,I.player=!0;const o=I.toPokemon(this.scene),l=this.scene.addPokemonIcon(o,0,0,0,0),D=l.list[0],M=l.list.length>1?l.list[1]:void 0;if(s[I.id]){const G=DR(s[I.id]),P=new Phaser.Display.Color(G[0],G[1],G[2]);D.setTint(P.color),M&&M.setTint(P.color)}l.setPosition(39*(i%3)+5,35*a);const c=se(this.scene,43*(i%3),27*(a+1),`${U.t("saveSlotSelectUiHandler:lv")}${va(o.level,1e3)}`,S?V.PARTY_RED:V.PARTY,{fontSize:"54px"});c.setShadow(0,0,void 0),c.setStroke("#424242",14),c.setOrigin(0,0),L.add(l),L.add(c),R.add(L),o.destroy()}),R.setPosition(25,15),A.add(R)}async parseRunInfo(A,s){const R=PE(this.scene,7,0,"",V.WINDOW,{fontSize:"50px",lineSpacing:3});switch(R.setPosition(7,5),R.appendText(U.t("runHistory:mode")+": ",!1),this.runInfo.gameMode){case tA.DAILY:R.appendText(`${U.t("gameMode:dailyRun")}`,!1);break;case tA.SPLICED_ENDLESS:R.appendText(`${U.t("gameMode:endlessSpliced")}`,!1);break;case tA.CHALLENGE:R.appendText(`${U.t("gameMode:challenge")}`,!1),R.appendText(`${U.t("runHistory:challengeRules")}: `),R.setWrapMode(1),R.setWrapWidth(500);const M=this.challengeParser();if(M)for(let c=0;c<M.length;c++)c>0&&R.appendText(" + ",!1),R.appendText(M[c],!1);break;case tA.ENDLESS:R.appendText(`${U.t("gameMode:endless")}`,!1);break;case tA.CLASSIC:R.appendText(`${U.t("gameMode:classic")}`,!1);break}(this.runInfo.gameMode===tA.ENDLESS||this.runInfo.gameMode===tA.SPLICED_ENDLESS)&&this.runInfo.waveIndex===this.scene.gameData.gameStats.highestEndlessWave&&(R.appendText(` [${U.t("runHistory:personalBest")}]`),R.setTint(16772956,4718441,7039999,16738665));const I=this.scene.add.container(0,0),i=U.resolvedLanguage==="ja"?12:3,a=PE(this.scene,7,0,"",V.WINDOW,{fontSize:"50px",lineSpacing:i}),L=T1(this.runInfo.playTime);a.appendText(`${U.t("runHistory:runLength")}: ${L}`,!1);const S=To(this.scene.moneyFormat,this.runInfo.money);a.appendText(`[color=${zt(V.MONEY)}]${U.t("battleScene:moneyOwned",{formattedMoney:S})}[/color]`),a.setPosition(7,70),I.add(a);const o=PE(this.scene,0,0,"",V.WINDOW,{fontSize:"55px"}),l=Phaser.Math.Clamp(this.runInfo.party.map(M=>M.toPokemon(this.scene).getLuck()).reduce((M,c)=>M+=c,0),0,14);let D=U.t("runHistory:luck")+": "+r6(l);if(l<14?D="[color=#"+N6(l).toString(16)+"]"+D+"[/color]":o.setTint(16772956,4718441,7039999,16738665),o.appendText("[align=right]"+D+"[/align]",!1),o.setPosition(A-o.displayWidth-5,s-13),I.add(o),this.runInfo.modifiers.length){let M=0;const c=this.scene.add.container(8,this.runInfo.gameMode===tA.CHALLENGE?20:15);c.setScale(.45);for(const G of this.runInfo.modifiers){const P=G.toModifier(this.scene,this.modifiersModule[G.className]);if(P instanceof at)continue;const _=P==null?void 0:P.getIcon(this.scene,!1);if(_){const g=Math.floor(M/7);_.setPosition(24*(M%7),20+35*g),c.add(_)}if(++M===20){const g=se(this.scene,45,90,"+",V.WINDOW);g.setPositionRelative(c,70,45),this.runInfoContainer.add(g);break}}this.runInfoContainer.add(c)}this.runInfoContainer.add(R),this.runInfoContainer.add(I),this.runContainer.add(this.runInfoContainer)}challengeParser(){const A=[];for(let s=0;s<this.runInfo.challenges.length;s++)if(this.runInfo.challenges[s].value!==0)switch(this.runInfo.challenges[s].id){case ht.SINGLE_GENERATION:A.push(U.t(`runHistory:challengeMonoGen${this.runInfo.challenges[s].value}`));break;case ht.SINGLE_TYPE:const R=n[this.runInfo.challenges[s].value-1],I=`[color=${c1[R]}]`,i=`[shadow=${G1[R]}]`,a=I+i+U.t(`pokemonInfo:Type.${R}`)+"[/color][/shadow]";A.push(a);break;case ht.INVERSE_BATTLE:A.push(U.t("challenges:inverseBattle.shortName"));break;default:const L=ht[this.runInfo.challenges[s].id].split("_").map((S,o)=>o?`${S[0]}${S.slice(1).toLowerCase()}`:S.toLowerCase()).join("");A.push(U.t(`challenges:${L}.name`));break}return A}parsePartyInfo(){const A=this.runInfo.party,s=U.resolvedLanguage??"en",R=(this.scene.game.canvas.height/6-23)/6;A.forEach((I,i)=>{var yE;const a=new fb(this.scene,0,14,this.statsBgWidth*2+10,R-2,3),L=I.toPokemon(this.scene),S=this.scene.add.container(this.statsBgWidth+5,(R-.5)*i),o=L.getTypes(),l=DR(o[0]),D=new Phaser.Display.Color(l[0],l[1],l[2]),M=D.clone().darken(45);a.setFillStyle(M.color);const c=this.scene.add.container(0,0),G=this.scene.addPokemonIcon(L,0,0,0,0);G.setScale(.75),G.setPosition(-99,1);const P=o[1]?DR(o[1]):void 0,_=P?new Phaser.Display.Color(P[0],P[1],P[2]):void 0;_?a.setStrokeStyle(1,_.color,.95):a.setStrokeStyle(1,D.color,.95),this.getUi().bringToTop(G);const g=this.scene.add.container(-85,3.5),H="34px",F=L.getNature(),p=WO(F),v=L.getNameToRender(),k=["ko","zh_CN","zh_TW"];let j=U.t("starterSelectUiHandler:passive")??"-",q=U.t("starterSelectUiHandler:ability")??"-";k.includes(s)||(j=j.charAt(0),q=q.charAt(0));const ie=L.passive?j+": "+L.getPassiveAbility().name:"",z=q+": "+L.getAbility().name,Oe=U.resolvedLanguage==="ja"?12:3,ae=PE(this.scene,0,0,v,V.SUMMARY,{fontSize:H,lineSpacing:Oe});ae.appendText(`${U.t("saveSlotSelectUiHandler:lv")}${r0(L.level,1)} - ${p}`),ae.appendText(z),ae.appendText(ie),g.add(ae);const Le=this.scene.add.container(-35,6),Ne=[];L.stats.forEach(ut=>Ne.push(r0(ut,1)));for(let ut=0;ut<Ne.length;ut++){const aA=So(F,ut);Ne[ut]=aA<1?Ne[ut]+"[color=#40c8f8]↓[/color]":Ne[ut],Ne[ut]=aA>1?Ne[ut]+"[color=#f89890]↑[/color]":Ne[ut]}const De=U.t("pokemonInfo:Stat.HPshortened")+": "+Ne[0],Be=U.t("pokemonInfo:Stat.ATKshortened")+": "+Ne[1],de=U.t("pokemonInfo:Stat.DEFshortened")+": "+Ne[2],fe=U.t("pokemonInfo:Stat.SPATKshortened")+": "+Ne[3],Ye=U.t("pokemonInfo:Stat.SPDEFshortened")+": "+Ne[4],Ie=(s==="es"||s==="pt_BR"?U.t("runHistory:SPDshortened"):U.t("pokemonInfo:Stat.SPDshortened"))+": "+Ne[5],oe=PE(this.scene,-5,0,De,V.SUMMARY,{fontSize:H,lineSpacing:Oe});oe.appendText(Be),oe.appendText(de),Le.add(oe);const Te=PE(this.scene,25,0,fe,V.SUMMARY,{fontSize:H,lineSpacing:Oe});Te.appendText(Ye),Te.appendText(Ie),Le.add(Te);const he=this.scene.add.container(0,0);if(L.fusionSpecies){const ut=this.scene.add.image(0,0,"icon_spliced");ut.setScale(.35),ut.setOrigin(0,0),L.isShiny()?ut.setPositionRelative(g,35,0):ut.setPositionRelative(g,28,0),he.add(ut),this.getUi().bringToTop(ut)}if(L.isShiny()){const ut=L.isFusion()&&L.shiny&&L.fusionShiny,aA=this.scene.add.image(0,0,`shiny_star_small${ut?"_1":""}`);if(aA.setOrigin(0,0),aA.setScale(.65),aA.setPositionRelative(g,28,0),aA.setTint(GE(ut?L.variant:L.getVariant())),he.add(aA),this.getUi().bringToTop(aA),ut){const hA=this.scene.add.image(0,0,"shiny_star_small_2");hA.setOrigin(0,0),hA.setScale(.5),hA.setPosition(aA.x+1,aA.y+1),hA.setTint(GE(L.fusionVariant)),he.add(hA),this.getUi().bringToTop(hA)}}const tt=L.getMoveset(),lt=this.scene.add.container(70,-29),yt=[],Ut=[],EA=[[-6.5,35.5],[37,35.5],[-6.5,43.5],[37,43.5]];for(let ut=0;ut<(tt==null?void 0:tt.length);ut++){const aA=this.scene.add.container(EA[ut][0],EA[ut][1]);aA.setScale(.5);const hA=this.scene.add.nineslice(0,0,"type_bgs","unknown",85,15,2,2,2,2);hA.setOrigin(1,0);const DE=se(this.scene,-hA.width/2,2,"-",V.PARTY);DE.setOrigin(.5,0),DE.setName("text-move-label"),yt.push(hA),Ut.push(DE),aA.add(hA),aA.add(DE),lt.add(aA);const OR=(yE=tt[ut])==null?void 0:yE.getMove();yt[ut].setFrame(n[OR?OR.type:n.UNKNOWN].toString().toLowerCase()),Ut[ut].setText(OR?OR.name:"-")}const AE=this.runInfo.gameMode===tA.SPLICED_ENDLESS||this.runInfo.gameMode===tA.ENDLESS?.25:.5,WA=this.scene.add.container(-82,2),pE=[];if(this.runInfo.modifiers.length){for(const ut of this.runInfo.modifiers){const aA=ut.toModifier(this.scene,this.modifiersModule[ut.className]);aA instanceof at&&aA.pokemonId===L.id&&(aA.stackCount=ut.stackCount,pE.push(aA))}if(pE.length>0){pE.sort(jT);let ut=0;for(const[aA,hA]of pE.entries()){if(aA>36){const OR=se(this.scene,182,4,"+",V.WINDOW);WA.add(OR);break}const DE=hA==null?void 0:hA.getIcon(this.scene,!0);(hA==null?void 0:hA.stackCount)<(hA==null?void 0:hA.getMaxHeldItemCount(L))&&DE.list[1]instanceof Phaser.GameObjects.BitmapText&&DE.list[1].clearTint(),DE.setScale(AE),DE.setPosition(aA%19*10,ut*10),WA.add(DE),aA!==0&&aA%18===0&&ut++}}}WA.setName("heldItems"),WA.setVisible(!1),S.add(a),c.add(G),S.add(c),he.setName("PkmnMarks"),S.add(he),lt.setName("PkmnMoves"),S.add(lt),g.setName("PkmnInfoText"),S.add(g),Le.setName("PkmnStatsText"),S.add(Le),S.add(WA),S.setName("PkmnInfo"),this.partyContainer.add(S),L.destroy()}),this.runContainer.add(this.partyContainer)}showParty(A){this.partyContainer.getAll("name","PkmnInfo").forEach(R=>{R.getByName("PkmnMoves").setVisible(A),R.getByName("PkmnInfoText").setVisible(A),R.getByName("PkmnStatsText").setVisible(A),R.getByName("PkmnMarks").setVisible(A),R.getByName("heldItems").setVisible(!A),this.partyVisibility=A})}createVictorySplash(){this.endCardContainer=this.scene.add.container(0,0);const s=(this.scene.gameData.gender??ct.UNSET)===ct.FEMALE,R=this.scene.add.image(0,0,`end_${s?"f":"m"}`);R.setOrigin(0),R.setScale(.5);const I=se(this.scene,this.scene.game.canvas.width/12,this.scene.game.canvas.height/6-16,U.t("battle:congratulations"),V.SUMMARY,{fontSize:"128px"});I.setOrigin(.5),this.endCardContainer.add(R),this.endCardContainer.add(I)}createHallofFame(){const A=this.scene.gameData.gender??ct.UNSET,s=A===ct.FEMALE,R=ct[A].toLowerCase();this.hallofFameContainer=this.scene.add.container(0,0);const I=this.scene.add.image(0,0,`end_${s?"f":"m"}`);I.setOrigin(0),I.setPosition(-1,-1),I.setScale(.5);const i=I.getBottomCenter(),a=s?"red":"blue",L=this.scene.add.image(0,0,"hall_of_fame_"+a);L.setPosition(159,89),L.setSize(this.scene.game.canvas.width,this.scene.game.canvas.height+10),L.setAlpha(.8),this.hallofFameContainer.add(I),this.hallofFameContainer.add(L);const S=se(this.scene,0,0,U.t("runHistory:hallofFameText",{context:R}),V.WINDOW);S.setPosition(i.x-S.displayWidth/2,164),this.hallofFameContainer.add(S),this.runInfo.party.forEach((o,l)=>{const D=o.toPokemon(this.scene),M=l%2,c=D.id,G=D.shiny,P=D.formIndex,_=D.variant,g=D.getSpeciesForm(),H=this.scene.add.sprite(60+40*l,40+M*80,"pkmn__sub");H.setPipeline(this.scene.spritePipeline,{tone:[0,0,0,0],ignoreTimeTint:!0}),this.hallofFameContainer.add(H);const F=new Map;F.set(c,!1);const p=D.gender===1;if(g.loadAssets(this.scene,p,P,G,_,!0).then(()=>{F.set(c,!0),H.play(g.getSpriteKey(p,P,G,_)),H.setPipelineData("shiny",G),H.setPipelineData("variant",_),H.setPipelineData("spriteKey",g.getSpriteKey(p,P,G,_)),H.setVisible(!0)}),D.isFusion()){const v=this.scene.add.sprite(80+40*l,50+M*80,D.getFusionIconAtlasKey());v.setName("sprite-fusion-icon"),v.setOrigin(.5,0),v.setFrame(D.getFusionIconId(!0)),this.hallofFameContainer.add(v)}D.destroy()}),this.hallofFameContainer.setVisible(!1),this.runContainer.add(this.hallofFameContainer)}processInput(A){const s=this.getUi();let R=!1;const I=!1;switch(A){case y.CANCEL:R=!0,this.pageMode===0?(this.runInfoContainer.removeAll(!0),this.runResultContainer.removeAll(!0),this.partyContainer.removeAll(!0),this.runContainer.removeAll(!0),this.isVictory&&this.hallofFameContainer.removeAll(!0),super.clear(),this.runContainer.setVisible(!1),s.revertMode()):this.pageMode===1?(this.hallofFameContainer.setVisible(!1),this.pageMode=0):this.pageMode===2&&(this.endCardContainer.setVisible(!1),this.runContainer.remove(this.endCardContainer),this.pageMode=0);break;case y.DOWN:case y.UP:break;case y.CYCLE_FORM:case y.CYCLE_SHINY:case y.CYCLE_ABILITY:this.buttonCycleOption(A);break}return R&&s.playSelect(),R||I}buttonCycleOption(A){switch(A){case y.CYCLE_FORM:this.isVictory&&this.pageMode!==1&&(!this.endCardContainer||!this.endCardContainer.visible?(this.createVictorySplash(),this.endCardContainer.setVisible(!0),this.runContainer.add(this.endCardContainer),this.pageMode=2):(this.endCardContainer.setVisible(!1),this.runContainer.remove(this.endCardContainer),this.pageMode=0));break;case y.CYCLE_SHINY:this.isVictory&&this.pageMode!==2&&(this.hallofFameContainer.visible?(this.hallofFameContainer.setVisible(!1),this.pageMode=0):(this.hallofFameContainer.setVisible(!0),this.pageMode=1));break;case y.CYCLE_ABILITY:this.runInfo.modifiers.length!==0&&this.pageMode===0&&(this.partyVisibility?this.showParty(!1):this.showParty(!0));break}}};T(ZB,"RunInfoUiHandler");let xl=ZB;const ev=5,tv=3;var bl=(E=>(E[E.LOAD=0]="LOAD",E[E.SAVE=1]="SAVE",E))(bl||{});const XB=class XB extends vs{constructor(A){super(A,$.SAVE_SLOT),this.scrollCursor=0}setup(){const A=this.getUi();this.saveSlotSelectContainer=this.scene.add.container(0,0),this.saveSlotSelectContainer.setVisible(!1),A.add(this.saveSlotSelectContainer);const s=this.scene.add.rectangle(0,0,this.scene.game.canvas.width/6,-this.scene.game.canvas.height/6,26720);s.setOrigin(0,0),this.saveSlotSelectContainer.add(s),this.sessionSlotsContainerInitialY=-this.scene.game.canvas.height/6+8,this.sessionSlotsContainer=this.scene.add.container(8,this.sessionSlotsContainerInitialY),this.saveSlotSelectContainer.add(this.sessionSlotsContainer),this.saveSlotSelectMessageBoxContainer=this.scene.add.container(0,0),this.saveSlotSelectMessageBoxContainer.setVisible(!1),this.saveSlotSelectContainer.add(this.saveSlotSelectMessageBoxContainer),this.saveSlotSelectMessageBox=it(this.scene,1,-1,318,28),this.saveSlotSelectMessageBox.setOrigin(0,1),this.saveSlotSelectMessageBoxContainer.add(this.saveSlotSelectMessageBox),this.message=se(this.scene,8,8,"",V.WINDOW,{maxLines:2}),this.message.setOrigin(0,0),this.saveSlotSelectMessageBoxContainer.add(this.message),this.sessionSlots=[]}show(A){return A.length<2||!(A[1]instanceof Function)?!1:(super.show(A),this.uiMode=A[0],this.saveSlotSelectCallback=A[1],this.saveSlotSelectContainer.setVisible(!0),this.populateSessionSlots(),this.setScrollCursor(0),this.setCursor(0),!0)}processInput(A){const s=this.getUi();let R=!1,I=!1;if(A===y.ACTION||A===y.CANCEL){const i=this.saveSlotSelectCallback;if(A===y.ACTION){const a=this.cursor+this.scrollCursor;if(this.uiMode===0&&!this.sessionSlots[a].hasData)I=!0;else{switch(this.uiMode){case 0:this.saveSlotSelectCallback=null,i&&i(a);break;case 1:const L=T(()=>{const S=this.saveSlotSelectCallback;this.saveSlotSelectCallback=null,s.revertMode(),s.showText("",0),s.setMode($.MESSAGE),S&&S(a)},"saveAndCallback");if(this.sessionSlots[a].hasData)s.showText(U.t("saveSlotSelectUiHandler:overwriteData"),null,()=>{s.setOverlayMode($.CONFIRM,()=>{this.scene.gameData.deleteSession(a).then(S=>{S===!1?this.scene.reset(!0):L()})},()=>{s.revertMode(),s.showText("",0)},!1,0,19,2e3)});else if(this.sessionSlots[a].hasData===!1)L();else return!1;break}R=!0}}else this.saveSlotSelectCallback=null,i&&i(-1),R=!0}else{const i=this.cursor+this.scrollCursor;switch(A){case y.UP:this.cursor?R=this.cursor===0?this.setCursor(this.cursor):this.setCursor(this.cursor-1,i):this.scrollCursor&&(R=this.setScrollCursor(this.scrollCursor-1,i));break;case y.DOWN:this.cursor<tv-1?R=this.setCursor(this.cursor+1,i):this.scrollCursor<ev-tv&&(R=this.setScrollCursor(this.scrollCursor+1,i));break;case y.RIGHT:this.sessionSlots[i].hasData&&this.sessionSlots[i].saveData&&(this.scene.ui.setOverlayMode($.RUN_INFO,this.sessionSlots[i].saveData,P1.SESSION_PREVIEW),R=!0)}}return R?s.playSelect():I&&s.playError(),R||I}populateSessionSlots(){for(let A=0;A<ev;A++){const s=new wh(this.scene,A);this.scene.add.existing(s),this.sessionSlotsContainer.add(s),this.sessionSlots.push(s),s.load().then(R=>{R&&this.cursor+this.scrollCursor===A&&this.setCursor(A)})}}showText(A,s,R,I,i,a){super.showText(A,s,R,I,i,a),(A==null?void 0:A.indexOf(`
`))===-1?(this.saveSlotSelectMessageBox.setSize(318,28),this.message.setY(-22)):(this.saveSlotSelectMessageBox.setSize(318,42),this.message.setY(-37)),this.saveSlotSelectMessageBoxContainer.setVisible(!!(A!=null&&A.length))}setCursor(A,s){const R=super.setCursor(A);if(!this.cursorObj){this.cursorObj=this.scene.add.container(0,0);const a=this.scene.add.nineslice(0,0,"select_cursor_highlight_thick",void 0,296,44,6,6,6,6),L=this.scene.add.image(0,0,"cursor");L.setPosition(160,0),L.setName("rightArrow"),this.cursorObj.add([a,L]),this.sessionSlotsContainer.add(this.cursorObj)}const I=A+this.scrollCursor,i=I*56;if(this.sessionSlots[I]&&this.cursorObj){const a=this.sessionSlots[I].hasData;a?(this.cursorObj.setPosition(145,26+i),this.sessionSlots[I].setPosition(-6,i)):(this.cursorObj.setPosition(151,26+i),this.sessionSlots[I].setPosition(0,i)),this.setArrowVisibility(a)}return xe(s)||this.revertSessionSlot(s),R}revertSessionSlot(A){const s=this.sessionSlots[A];s&&s.setPosition(0,A*56)}setArrowVisibility(A){var s;this.cursorObj&&((s=this.cursorObj)==null?void 0:s.getByName("rightArrow")).setVisible(A)}setScrollCursor(A,s){const R=A!==this.scrollCursor;return R&&(this.scrollCursor=A,this.setCursor(this.cursor,s),this.scene.tweens.add({targets:this.sessionSlotsContainer,y:this.sessionSlotsContainerInitialY-56*A,duration:Ve(325),ease:"Sine.easeInOut"})),R}clear(){super.clear(),this.saveSlotSelectContainer.setVisible(!1),this.setScrollCursor(0),this.eraseCursor(),this.saveSlotSelectCallback=null,this.clearSessionSlots()}eraseCursor(){this.cursorObj&&this.cursorObj.destroy(),this.cursorObj=null}clearSessionSlots(){this.sessionSlots.splice(0,this.sessionSlots.length),this.sessionSlotsContainer.removeAll(!0)}};T(XB,"SaveSlotSelectUiHandler");let yh=XB;const QB=class QB extends Phaser.GameObjects.Container{constructor(A,s){super(A,0,s*56),this.slotId=s,this.setup()}setup(){const A=it(this.scene,0,0,304,52);this.add(A),this.loadingLabel=se(this.scene,152,26,U.t("saveSlotSelectUiHandler:loading"),V.WINDOW),this.loadingLabel.setOrigin(.5,.5),this.add(this.loadingLabel)}async setupWithData(A){this.remove(this.loadingLabel,!0);const s=se(this.scene,8,5,`${CR.getModeName(A.gameMode)||U.t("gameMode:unkown")} - ${U.t("saveSlotSelectUiHandler:wave")} ${A.waveIndex}`,V.WINDOW);this.add(s);const R=se(this.scene,8,19,new Date(A.timestamp).toLocaleString(),V.WINDOW);this.add(R);const I=se(this.scene,8,33,T1(A.playTime),V.WINDOW);this.add(I);const i=this.scene.add.container(144,4);A.party.forEach((S,o)=>{const l=this.scene.add.container(26*o,0);l.setScale(.75);const D=S.toPokemon(this.scene),M=this.scene.addPokemonIcon(D,0,0,0,0),c=se(this.scene,32,20,`${U.t("saveSlotSelectUiHandler:lv")}${va(D.level,1e3)}`,V.PARTY,{fontSize:"54px",color:"#f8f8f8"});c.setShadow(0,0,void 0),c.setStroke("#424242",14),c.setOrigin(1,0),l.add(M),l.add(c),i.add(l),D.destroy()}),this.add(i);const a=this.scene.add.container(148,30);a.setScale(.5);let L=0;for(const S of A.modifiers){const o=S.toModifier(this.scene,el[S.className]);if(o instanceof at)continue;const l=o==null?void 0:o.getIcon(this.scene,!1);if(l&&(l.setPosition(24*L,0),a.add(l)),++L===12)break}this.add(a)}load(){return new Promise(A=>{this.scene.gameData.getSession(this.slotId).then(async s=>{if(this.active){if(!s){this.hasData=!1,this.loadingLabel.setText(U.t("saveSlotSelectUiHandler:empty")),A(!1);return}this.hasData=!0,this.saveData=s,await this.setupWithData(s),A(!0)}})})}};T(QB,"SessionSlot");let wh=QB;const wR={fadeIn:Bb,fadeOut:gb},JB=class JB extends kA{constructor(A){super(A)}start(){super.start(),this.scene.playBgm("menu"),this.scene.ui.setMode($.STARTER_SELECT,A=>{this.scene.ui.clearText(),this.scene.ui.setMode($.SAVE_SLOT,bl.SAVE,s=>{if(s===-1)return this.scene.clearPhaseQueue(),this.scene.pushPhase(new Yi(this.scene)),this.end();this.scene.sessionSlotId=s,this.initBattle(A)})})}initBattle(A){const s=this.scene.getParty(),R=[];A.forEach((I,i)=>{!i&&Ge.STARTER_SPECIES_OVERRIDE&&(I.species=Ke(Ge.STARTER_SPECIES_OVERRIDE));const a=this.scene.gameData.getSpeciesDexAttrProps(I.species,I.dexAttr);let L=Math.min(a.formIndex,Math.max(I.species.forms.length-1,0));I.species.speciesId in Ge.STARTER_FORM_OVERRIDES&&I.species.forms[Ge.STARTER_FORM_OVERRIDES[I.species.speciesId]]&&(L=Ge.STARTER_FORM_OVERRIDES[I.species.speciesId]);let S=I.species.malePercent!==null?a.female?ye.FEMALE:ye.MALE:ye.GENDERLESS;Ge.GENDER_OVERRIDE!==null&&(S=Ge.GENDER_OVERRIDE);const o=this.scene.gameData.dexData[I.species.speciesId].ivs.slice(0),l=this.scene.addPlayerPokemon(I.species,this.scene.gameMode.getStartingLevel(),I.abilityIndex,L,S,a.shiny,a.variant,o,I.nature);I.moveset&&l.tryPopulateMoveset(I.moveset),I.passive&&(l.passive=!0),l.luck=this.scene.gameData.getDexAttrLuck(this.scene.gameData.dexData[I.species.speciesId].caughtAttr),I.pokerus&&(l.pokerus=!0),I.nickname&&(l.nickname=I.nickname),(this.scene.gameMode.isSplicedOnly||Ge.STARTER_FUSION_OVERRIDE)&&l.generateFusionSpecies(!0),l.setVisible(!1),Is(this.scene.gameMode,JE.STARTER_MODIFY,l),s.push(l),R.push(l.loadAssets())}),m1(this.scene),W1(this.scene,s[0]),Promise.all(R).then(()=>{wR.fadeOut(this.scene,this.scene.sound.get("menu"),500,!0),this.scene.time.delayedCall(500,()=>this.scene.playBgm()),this.scene.gameMode.isClassic?this.scene.gameData.gameStats.classicSessionsPlayed++:this.scene.gameData.gameStats.endlessSessionsPlayed++,this.scene.newBattle(),this.scene.arena.init(),this.scene.sessionPlayTime=0,this.scene.lastSavePlayTime=0,this.scene.getParty().forEach(I=>{this.scene.triggerPokemonFormChange(I,Bi)}),this.end()})}};T(JB,"SelectStarterPhase");let kl=JB;const ON=class ON extends kA{constructor(A){super(A),this.loaded=!1}start(){super.start(),this.scene.ui.clearText(),this.scene.ui.fadeIn(250),this.scene.playBgm("title",!0),this.scene.gameData.getSession((we==null?void 0:we.lastSessionSlot)??-1).then(A=>{if(A){this.lastSessionData=A;const R=`${Do(A.arena.biome)}_bg`;this.scene.arenaBg.setTexture(R)}this.showOptions()}).catch(A=>{console.error(A),this.showOptions()})}showOptions(){const A=[];we&&we.lastSessionSlot>-1&&A.push({label:U.t("continue",{ns:"menu"}),handler:T(()=>(this.loadSaveSlot(this.lastSessionData||!we?-1:we.lastSessionSlot),!0),"handler")}),A.push({label:U.t("menu:newGame"),handler:T(()=>{const R=T(i=>{this.gameMode=i,this.scene.ui.setMode($.MESSAGE),this.scene.ui.clearText(),this.end()},"setModeAndEnd"),{gameData:I}=this.scene;if(I.isUnlocked(Hs.ENDLESS_MODE)){const i=[{label:CR.getModeName(tA.CLASSIC),handler:T(()=>(R(tA.CLASSIC),!0),"handler")},{label:CR.getModeName(tA.CHALLENGE),handler:T(()=>(R(tA.CHALLENGE),!0),"handler")},{label:CR.getModeName(tA.ENDLESS),handler:T(()=>(R(tA.ENDLESS),!0),"handler")}];I.isUnlocked(Hs.SPLICED_ENDLESS_MODE)&&i.push({label:CR.getModeName(tA.SPLICED_ENDLESS),handler:T(()=>(R(tA.SPLICED_ENDLESS),!0),"handler")}),i.push({label:U.t("menu:cancel"),handler:T(()=>(this.scene.clearPhaseQueue(),this.scene.pushPhase(new ON(this.scene)),super.end(),!0),"handler")}),this.scene.ui.showText(U.t("menu:selectGameMode"),null,()=>this.scene.ui.setOverlayMode($.OPTION_SELECT,{options:i}))}else this.gameMode=tA.CLASSIC,this.scene.ui.setMode($.MESSAGE),this.scene.ui.clearText(),this.end();return!0},"handler")},{label:U.t("menu:loadGame"),handler:T(()=>(this.scene.ui.setOverlayMode($.SAVE_SLOT,bl.LOAD,R=>{if(R===-1)return this.showOptions();this.loadSaveSlot(R)}),!0),"handler")},{label:U.t("menu:dailyRun"),handler:T(()=>(this.initDailyRun(),!0),"handler"),keepOpen:!0},{label:U.t("menu:settings"),handler:T(()=>(this.scene.ui.setOverlayMode($.SETTINGS),!0),"handler"),keepOpen:!0});const s={options:A,noCancel:!0,yOffset:47};this.scene.ui.setMode($.TITLE,s)}loadSaveSlot(A){this.scene.sessionSlotId=A>-1||!we?A:we.lastSessionSlot,this.scene.ui.setMode($.MESSAGE),this.scene.ui.resetModeChain(),this.scene.gameData.loadSession(this.scene,A,A===-1?this.lastSessionData:void 0).then(s=>{s?(this.loaded=!0,this.scene.ui.showText(U.t("menu:sessionSuccess"),null,()=>this.end())):this.end()}).catch(s=>{console.error(s),this.scene.ui.showText(U.t("menu:failedToLoadSession"),null)})}initDailyRun(){this.scene.ui.setMode($.SAVE_SLOT,bl.SAVE,A=>{if(this.scene.clearPhaseQueue(),A===-1)return this.scene.pushPhase(new ON(this.scene)),super.end();this.scene.sessionSlotId=A;const s=T(R=>{this.scene.gameMode=Tl(tA.DAILY),this.scene.setSeed(R),this.scene.resetSeed(0),this.scene.money=this.scene.gameMode.getStartingMoney();const I=g7(this.scene,R),i=this.scene.gameMode.getStartingLevel(),a=this.scene.getParty(),L=[];for(const o of I){const l=this.scene.gameData.getSpeciesDexAttrProps(o.species,o.dexAttr),D=Math.min(l.formIndex,Math.max(o.species.forms.length-1,0)),M=o.species.malePercent!==null?l.female?ye.FEMALE:ye.MALE:ye.GENDERLESS,c=this.scene.addPlayerPokemon(o.species,i,o.abilityIndex,D,M,l.shiny,l.variant,void 0,o.nature);c.setVisible(!1),a.push(c),L.push(c.loadAssets())}QI(a,FE.DAILY_STARTER);const S=Array(3).fill(null).map(()=>x.EXP_SHARE().withIdFromFunc(x.EXP_SHARE).newModifier()).concat(Array(3).fill(null).map(()=>x.GOLDEN_EXP_CHARM().withIdFromFunc(x.GOLDEN_EXP_CHARM).newModifier())).concat([x.MAP().withIdFromFunc(x.MAP).newModifier()]).concat(A7(a)).filter(o=>o!==null);for(const o of S)this.scene.addModifier(o,!0,!1,!1,!0);this.scene.updateModifiers(!0,!0),Promise.all(L).then(()=>{this.scene.time.delayedCall(500,()=>this.scene.playBgm()),this.scene.gameData.gameStats.dailyRunSessionsPlayed++,this.scene.newArena(this.scene.gameMode.getStartingBiome(this.scene)),this.scene.newBattle(),this.scene.arena.init(),this.scene.sessionPlayTime=0,this.scene.lastSavePlayTime=0,this.end()})},"generateDaily");gM?s(btoa(new Date().toISOString().substring(0,10))):B7().then(R=>{if(R)s(R);else throw new Error("Daily run seed is null!")}).catch(R=>{console.error(`Failed to load daily run:
`,R)})})}end(){if(!this.loaded&&!this.scene.gameMode.isDaily?(this.scene.arena.preloadBgm(),this.scene.gameMode=Tl(this.gameMode),this.gameMode===tA.CHALLENGE?this.scene.pushPhase(new pl(this.scene)):this.scene.pushPhase(new kl(this.scene)),this.scene.newArena(this.scene.gameMode.getStartingBiome(this.scene))):this.scene.playBgm(),this.scene.pushPhase(new UL(this.scene,this.loaded)),this.loaded){const A=this.scene.getParty().filter(s=>s.isAllowedInBattle()).length;if(this.scene.pushPhase(new KE(this.scene,0,!0,!0)),this.scene.currentBattle.double&&A>1&&this.scene.pushPhase(new KE(this.scene,1,!0,!0)),this.scene.currentBattle.battleType!==Nt.TRAINER&&(this.scene.currentBattle.waveIndex>1||!this.scene.gameMode.isDaily)){const s=this.scene.currentBattle.double?2:1;A>s&&(this.scene.pushPhase(new Ln(this.scene,0,this.scene.currentBattle.double)),this.scene.currentBattle.double&&this.scene.pushPhase(new Ln(this.scene,1,this.scene.currentBattle.double)))}}for(const A of Object.keys(this.scene.gameData.achvUnlocks))Ls.hasOwnProperty(A)&&A!=="CLASSIC_VICTORY"&&this.scene.validateVoucher(Ls[A]);super.end()}};T(ON,"TitlePhase");let Yi=ON;const $B=class $B extends kA{constructor(A,s){super(A),this.endCardPhase=s}start(){super.start();const A=T(()=>{this.scene.gameData.saveAll(this.scene,!0,!0,!0).then(s=>{if(!s)return this.scene.reset(!0);this.scene.gameData.tryClearSession(this.scene,this.scene.sessionSlotId).then(R=>{if(!R[0])return this.scene.reset(!0);this.scene.reset(),this.scene.unshiftPhase(new Yi(this.scene)),this.end()})})},"saveAndReset");this.endCardPhase?this.scene.ui.fadeOut(500).then(()=>{var s,R;this.scene.ui.getMessageHandler().bg.setVisible(!0),(s=this.endCardPhase)==null||s.endCard.destroy(),(R=this.endCardPhase)==null||R.text.destroy(),A()}):A()}};T($B,"PostGameOverPhase");let Vh=$B;const qB=class qB extends gE{constructor(A,s,R){super(A,s),this.species=R}doReward(){return new Promise(A=>{const s=this.modifierType.newModifier();this.scene.addModifier(s).then(()=>{this.scene.playSound("level_up_fanfare"),this.scene.ui.setMode($.MESSAGE),this.scene.ui.showText(U.t("battle:beatModeFirstTime",{speciesName:this.species.name,gameMode:this.scene.gameMode.getName(),newModifier:s==null?void 0:s.type.name}),null,()=>{A()},null,!0,1500)})})}};T(qB,"RibbonModifierRewardPhase");let vh=qB;const jB=class jB extends kA{constructor(A,s){super(A),this.unlockable=s}start(){this.scene.time.delayedCall(2e3,()=>{this.scene.gameData.unlocks[this.unlockable]=!0,this.scene.playSound("level_up_fanfare"),this.scene.ui.setMode($.MESSAGE),this.scene.ui.showText(U.t("battle:unlockedSomething",{unlockedThing:k8(this.unlockable)}),null,()=>{this.scene.time.delayedCall(1500,()=>this.scene.arenaBg.setVisible(!0)),this.end()},null,!0,1500)})}};T(jB,"UnlockPhase");let fa=jB;const zB=class zB extends LE{constructor(A,s){super(A),this.firstRibbons=[],this.victory=!!s}start(){var A;if(super.start(),this.scene.gameMode.isClassic&&this.scene.currentBattle.waveIndex>200&&(this.victory=!0),!this.victory&&((A=this.scene.currentBattle.mysteryEncounter)!=null&&A.onGameOver)&&!this.scene.currentBattle.mysteryEncounter.onGameOver(this.scene))return this.end();if(this.victory&&this.scene.gameMode.isEndless){const s=this.scene.gameData.gender??ct.UNSET,R=ct[s].toLowerCase();this.scene.ui.showDialogue(U.t("miscDialogue:ending_endless",{context:R}),U.t("miscDialogue:ending_name"),0,()=>this.handleGameOver())}else this.victory||!this.scene.enableRetries?this.handleGameOver():this.scene.ui.showText(U.t("battle:retryBattle"),null,()=>{this.scene.ui.setMode($.CONFIRM,()=>{this.scene.ui.fadeOut(1250).then(()=>{this.scene.reset(),this.scene.clearPhaseQueue(),this.scene.gameData.loadSession(this.scene,this.scene.sessionSlotId).then(()=>{this.scene.pushPhase(new UL(this.scene,!0));const s=this.scene.getParty().filter(R=>R.isAllowedInBattle()).length;this.scene.pushPhase(new KE(this.scene,0)),this.scene.currentBattle.double&&s>1&&this.scene.pushPhase(new KE(this.scene,1)),this.scene.currentBattle.waveIndex>1&&this.scene.currentBattle.battleType!==Nt.TRAINER&&(this.scene.pushPhase(new Ln(this.scene,0,this.scene.currentBattle.double)),this.scene.currentBattle.double&&s>1&&this.scene.pushPhase(new Ln(this.scene,1,this.scene.currentBattle.double))),this.scene.ui.fadeIn(1250),this.end()})})},()=>this.handleGameOver(),!1,0,0,1e3)})}handleGameOver(){const A=T(s=>{this.scene.disableMenu=!0,this.scene.time.delayedCall(1e3,()=>{let R=!1;if(this.victory&&s)if(this.scene.gameMode.isClassic){R=this.scene.validateAchv(At.CLASSIC_VICTORY),this.scene.validateAchv(At.UNEVOLVED_CLASSIC_VICTORY),this.scene.gameData.gameStats.sessionsWon++;for(const a of this.scene.getParty())this.awardRibbon(a),a.species.getRootSpeciesId()!==a.species.getRootSpeciesId(!0)&&this.awardRibbon(a,!0)}else this.scene.gameMode.isDaily&&s&&this.scene.gameData.gameStats.dailyRunSessionsWon++;this.scene.gameData.saveRunHistory(this.scene,this.scene.gameData.getSessionSaveData(this.scene),this.victory);const I=this.victory?1e4:5e3;this.scene.fadeOutBgm(I,!0);const i=this.scene.getField().filter(a=>a==null?void 0:a.isActive(!0));i.map(a=>a.hideInfo()),this.scene.ui.fadeOut(I).then(()=>{i.map(L=>L.setVisible(!1)),this.scene.setFieldScale(1,!0),this.scene.clearPhaseQueue(),this.scene.ui.clearText(),this.victory&&this.scene.gameMode.isChallenge&&this.scene.gameMode.challenges.forEach(L=>this.scene.validateAchvs(uA,L));const a=T(L=>{if(s&&this.handleUnlocks(),this.victory&&s){for(const S of this.firstRibbons)this.scene.unshiftPhase(new vh(this.scene,x.VOUCHER_PLUS,S));R||this.scene.unshiftPhase(new ph(this.scene,x.VOUCHER_PREMIUM))}this.scene.pushPhase(new Vh(this.scene,L)),this.end()},"clear");if(this.victory&&this.scene.gameMode.isClassic){const L="miscDialogue:ending";if(!this.scene.ui.shouldSkipDialogue(L))this.scene.ui.fadeIn(500).then(()=>{const S=this.scene.gameData.gender??ct.UNSET,o=ct[S].toLowerCase(),l=U.t(L,{context:o});this.scene.charSprite.showCharacter(`rival_${this.scene.gameData.gender===ct.FEMALE?"m":"f"}`,WM(l)).then(()=>{this.scene.ui.showDialogue(L,this.scene.gameData.gender===ct.FEMALE?BA[C.RIVAL].name:BA[C.RIVAL].nameFemale,null,()=>{this.scene.ui.fadeOut(500).then(()=>{this.scene.charSprite.hide().then(()=>{const D=new wl(this.scene);this.scene.unshiftPhase(D),a(D)})})})})});else{const S=new wl(this.scene);this.scene.unshiftPhase(S),a(S)}}else a()})})},"doGameOver");this.victory?gM?this.scene.gameData.offlineNewClear(this.scene).then(s=>{A(s)}):GO(`savedata/session/newclear?slot=${this.scene.sessionSlotId}&clientSessionId=${SO}`,!0).then(s=>s.json()).then(s=>A(s)):A(!1)}handleUnlocks(){this.victory&&this.scene.gameMode.isClassic&&(this.scene.gameData.unlocks[Hs.ENDLESS_MODE]||this.scene.unshiftPhase(new fa(this.scene,Hs.ENDLESS_MODE)),this.scene.getParty().filter(A=>A.fusionSpecies).length&&!this.scene.gameData.unlocks[Hs.SPLICED_ENDLESS_MODE]&&this.scene.unshiftPhase(new fa(this.scene,Hs.SPLICED_ENDLESS_MODE)),this.scene.gameData.unlocks[Hs.MINI_BLACK_HOLE]||this.scene.unshiftPhase(new fa(this.scene,Hs.MINI_BLACK_HOLE)),!this.scene.gameData.unlocks[Hs.EVIOLITE]&&this.scene.getParty().some(A=>A.getSpeciesForm(!0).speciesId in Ht)&&this.scene.unshiftPhase(new fa(this.scene,Hs.EVIOLITE)))}awardRibbon(A,s=!1){const R=Ke(A.species.speciesId);this.scene.gameData.incrementRibbonCount(R,s)===1&&this.firstRibbons.push(Ke(A.species.getRootSpeciesId(s)))}};T(zB,"GameOverPhase");let iO=zB;const eg=class eg extends zE{constructor(A,s){super(A,s)}start(){super.start(),this.getPokemon().sparkle(),this.scene.time.delayedCall(1e3,()=>this.end())}};T(eg,"ShinySparklePhase");let fT=eg;const tg=class tg extends yl{constructor(A,s,R=!0,I=!1){super(A,s,R),this.loaded=I}start(){super.start(),this.preSummon()}preSummon(){var s,R;const A=this.getPokemon();if(!A.isAllowedInBattle()||this.player&&!this.getParty().some(I=>I.id===A.id)){console.warn("The Pokemon about to be sent out is fainted or illegal under a challenge. Attempting to resolve..."),A.isOnField()&&A.leaveField();const I=this.getParty(),i=I.findIndex((a,L)=>L>this.partyMemberIndex&&a.isAllowedInBattle());if(i===-1){console.error(`Party Details:
`,I),console.error("All available Pokemon were fainted or illegal!"),this.scene.clearPhaseQueue(),this.scene.unshiftPhase(new iO(this.scene)),this.end();return}[I[this.partyMemberIndex],I[i]]=[I[i],I[this.partyMemberIndex]],console.warn("Swapped %s %O with %s %O",b(A),A,b(I[0]),I[0])}if(this.player)this.scene.ui.showText(U.t("battle:playerGo",{pokemonName:b(this.getPokemon())})),this.player&&this.scene.pbTray.hide(),this.scene.trainer.setTexture(`trainer_${this.scene.gameData.gender===ct.FEMALE?"f":"m"}_back_pb`),this.scene.time.delayedCall(562,()=>{this.scene.trainer.setFrame("2"),this.scene.time.delayedCall(64,()=>{this.scene.trainer.setFrame("3")})}),this.scene.tweens.add({targets:this.scene.trainer,x:-36,duration:1e3,onComplete:T(()=>this.scene.trainer.setVisible(!1),"onComplete")}),this.scene.time.delayedCall(750,()=>this.summon());else if(this.scene.currentBattle.battleType===Nt.TRAINER||((s=this.scene.currentBattle.mysteryEncounter)==null?void 0:s.encounterMode)===sE.TRAINER_BATTLE){const I=(R=this.scene.currentBattle.trainer)==null?void 0:R.getName(this.fieldIndex%2?qe.TRAINER_PARTNER:qe.TRAINER),i=this.getPokemon().getNameToRender(),a=U.t("battle:trainerSendOut",{trainerName:I,pokemonName:i});this.scene.pbTrayEnemy.hide(),this.scene.ui.showText(a,null,()=>this.summon())}else this.scene.currentBattle.isBattleMysteryEncounter()&&(this.scene.pbTrayEnemy.hide(),this.summonWild())}summon(){const A=this.getPokemon(),s=this.scene.addFieldSprite(this.player?36:248,this.player?80:44,"pb",OO(A.pokeball));if(s.setVisible(!1),s.setOrigin(.5,.625),this.scene.field.add(s),this.fieldIndex===1)A.setFieldPosition(eR.RIGHT,0);else{const I=this.getParty().filter(i=>i.isAllowedInBattle()).length;A.setFieldPosition(!this.scene.currentBattle.double||I===1?eR.CENTER:eR.LEFT)}const R=A.getFieldPositionOffset();s.setVisible(!0),this.scene.tweens.add({targets:s,duration:650,x:(this.player?100:236)+R[0]}),this.scene.tweens.add({targets:s,duration:150,ease:"Cubic.easeOut",y:(this.player?70:34)+R[1],onComplete:T(()=>{this.scene.tweens.add({targets:s,duration:500,ease:"Cubic.easeIn",angle:1440,y:(this.player?132:86)+R[1],onComplete:T(()=>{if(this.scene.playSound("se/pb_rel"),s.destroy(),this.scene.add.existing(A),this.scene.field.add(A),!this.player){const I=this.scene.getPlayerPokemon();I!=null&&I.visible&&this.scene.field.moveBelow(A,I),this.scene.currentBattle.seenEnemyPartyMemberIds.add(A.id)}yM(this.scene,A.x,A.y-16,A.pokeball),this.scene.updateModifiers(this.player),this.scene.updateFieldScale(),A.showInfo(),A.playAnim(),A.setVisible(!0),A.getSprite().setVisible(!0),A.setScale(.5),A.tint(FO(A.pokeball)),A.untint(250,"Sine.easeIn"),this.scene.updateFieldScale(),this.scene.tweens.add({targets:A,duration:250,ease:"Sine.easeIn",scale:A.getSpriteScale(),onComplete:T(()=>{A.cry(A.getHpRatio()>.25?void 0:{rate:.85}),A.getSprite().clearTint(),A.resetSummonData(),this.scene.time.delayedCall(1e3,()=>this.end())},"onComplete")})},"onComplete")})},"onComplete")})}summonWild(){const A=this.getPokemon();if(this.fieldIndex===1)A.setFieldPosition(eR.RIGHT,0);else{const s=this.getParty().filter(R=>!R.isFainted()).length;A.setFieldPosition(!this.scene.currentBattle.double||s===1?eR.CENTER:eR.LEFT)}if(this.scene.add.existing(A),this.scene.field.add(A),!this.player){const s=this.scene.getPlayerPokemon();s!=null&&s.visible&&this.scene.field.moveBelow(A,s),this.scene.currentBattle.seenEnemyPartyMemberIds.add(A.id)}this.scene.updateModifiers(this.player),this.scene.updateFieldScale(),A.showInfo(),A.playAnim(),A.setVisible(!0),A.getSprite().setVisible(!0),A.setScale(.75),A.tint(FO(A.pokeball)),A.untint(250,"Sine.easeIn"),this.scene.updateFieldScale(),A.x+=16,A.y-=20,A.alpha=0,this.scene.tweens.add({targets:A,x:"-=16",y:"+=16",alpha:1,duration:1e3,ease:"Sine.easeIn",scale:A.getSpriteScale(),onComplete:T(()=>{A.cry(A.getHpRatio()>.25?void 0:{rate:.85}),A.getSprite().clearTint(),A.resetSummonData(),this.scene.updateFieldScale(),this.scene.time.delayedCall(1e3,()=>this.end())},"onComplete")})}onEnd(){const A=this.getPokemon();A.isShiny()&&this.scene.unshiftPhase(new fT(this.scene,A.getBattlerIndex())),A.resetTurnData(),(!this.loaded||[Nt.TRAINER,Nt.MYSTERY_ENCOUNTER].includes(this.scene.currentBattle.battleType)||this.scene.currentBattle.waveIndex%10===1)&&(this.scene.triggerPokemonFormChange(A,Os,!0),this.queuePostSummon())}queuePostSummon(){this.scene.pushPhase(new Wi(this.scene,this.getPokemon().getBattlerIndex()))}end(){this.onEnd(),super.end()}};T(tg,"SummonPhase");let KE=tg;const Ag=class Ag extends KE{constructor(A,s){super(A,s)}preSummon(){this.scene.ui.showText(U.t("battle:sendOutPokemon",{pokemonName:b(this.getPokemon())})),this.scene.time.delayedCall(250,()=>this.summon())}};T(Ag,"SummonMissingPhase");let xh=Ag;var xA=(E=>(E[E.SWITCH=0]="SWITCH",E[E.BATON_PASS=1]="BATON_PASS",E[E.SHED_TAIL=2]="SHED_TAIL",E))(xA||{});const Eg=class Eg extends KE{constructor(A,s,R,I,i,a){super(A,R,a!==void 0?a:!0),this.switchType=s,this.slotIndex=I,this.doReturn=i}start(){super.start()}preSummon(){var s,R;if(this.player||(this.slotIndex===-1&&(this.slotIndex=(s=this.scene.currentBattle.trainer)==null?void 0:s.getNextSummonIndex(this.fieldIndex?qe.TRAINER_PARTNER:qe.TRAINER)),this.slotIndex>-1&&(this.showEnemyTrainer(this.fieldIndex%2?qe.TRAINER_PARTNER:qe.TRAINER),this.scene.pbTrayEnemy.showPbTray(this.scene.getEnemyParty()))),!this.doReturn||this.slotIndex!==-1&&!(this.player?this.scene.getParty():this.scene.getEnemyParty())[this.slotIndex]){if(this.player)return this.switchAndSummon();this.scene.time.delayedCall(750,()=>this.switchAndSummon());return}const A=this.getPokemon();if((this.player?this.scene.getEnemyField():this.scene.getPlayerField()).forEach(I=>I.removeTagsBySourceId(A.id)),this.switchType===xA.SWITCH){const I=A.getTag(lE);I&&this.scene.tweens.add({targets:I.sprite,duration:250,scale:I.sprite.scale*.5,ease:"Sine.easeIn",onComplete:T(()=>I.sprite.destroy(),"onComplete")})}this.scene.ui.showText(this.player?U.t("battle:playerComeBack",{pokemonName:b(A)}):U.t("battle:trainerComeBack",{trainerName:(R=this.scene.currentBattle.trainer)==null?void 0:R.getName(this.fieldIndex%2?qe.TRAINER_PARTNER:qe.TRAINER),pokemonName:A.getNameToRender()})),this.scene.playSound("se/pb_rel"),A.hideInfo(),A.tint(FO(A.pokeball),1,250,"Sine.easeIn"),this.scene.tweens.add({targets:A,duration:250,ease:"Sine.easeIn",scale:.5,onComplete:T(()=>{A.leaveField(this.switchType===xA.SWITCH,!1),this.scene.time.delayedCall(750,()=>this.switchAndSummon())},"onComplete")})}switchAndSummon(){const A=this.player?this.getParty():this.scene.getEnemyParty(),s=A[this.slotIndex];if(this.lastPokemon=this.getPokemon(),WX(sa,this.lastPokemon),this.switchType===xA.BATON_PASS&&s&&((this.player?this.scene.getEnemyField():this.scene.getPlayerField()).forEach(R=>R.transferTagsBySourceId(this.lastPokemon.id,s.id)),!this.scene.findModifier(R=>R instanceof _I&&R.pokemonId===s.id))){const R=this.scene.findModifier(I=>I instanceof _I&&I.pokemonId===this.lastPokemon.id);R&&!this.scene.findModifier(I=>I instanceof _I&&I.pokemonId===s.id)&&this.scene.tryTransferHeldItemModifier(R,s,!1)}if(s){A[this.slotIndex]=this.lastPokemon,A[this.fieldIndex]=s;const R=T(()=>{var I;this.scene.ui.showText(this.player?U.t("battle:playerGo",{pokemonName:b(s)}):U.t("battle:trainerGo",{trainerName:(I=this.scene.currentBattle.trainer)==null?void 0:I.getName(this.fieldIndex%2?qe.TRAINER_PARTNER:qe.TRAINER),pokemonName:this.getPokemon().getNameToRender()})),this.switchType===xA.BATON_PASS||this.switchType===xA.SHED_TAIL?this.lastPokemon.getTag(lE)&&(s.x+=this.lastPokemon.getSubstituteOffset()[0],s.y+=this.lastPokemon.getSubstituteOffset()[1],s.setAlpha(.5)):(s.resetBattleData(),s.resetSummonData()),this.summon()},"showTextAndSummon");this.player?R():this.scene.time.delayedCall(1500,()=>{this.hideEnemyTrainer(),this.scene.pbTrayEnemy.hide(),R()})}else this.end()}onEnd(){var a,L,S;super.onEnd();const A=this.getPokemon(),s=(a=this.lastPokemon)==null?void 0:a.scene.currentBattle.lastMove,R=s?He[s]:void 0,I=(L=A.scene.currentBattle.turnCommands[this.fieldIndex])==null?void 0:L.command,i=(R==null?void 0:R.hasAttr(Ws))&&!this.lastPokemon.isFainted();if((I===vt.POKEMON||i)&&(A.battleSummonData.turnCount--,A.battleSummonData.waveTurnCount--),this.switchType===xA.BATON_PASS&&A)A.transferSummon(this.lastPokemon);else if(this.switchType===xA.SHED_TAIL&&A){const o=this.lastPokemon.getTag(lE);o&&A.summonData.tags.push(o)}(S=this.lastPokemon)==null||S.resetSummonData(),this.scene.triggerPokemonFormChange(A,Os,!0),this.scene.arena.triggerWeatherBasedFormChanges()}queuePostSummon(){this.scene.unshiftPhase(new Wi(this.scene,this.getPokemon().getBattlerIndex()))}};T(Eg,"SwitchSummonPhase");let EO=Eg;const sg=class sg extends LE{constructor(A,s,R,I,i){super(A),this.switchType=s,this.fieldIndex=R,this.isModal=I,this.doReturn=i}start(){if(super.start(),this.isModal&&!this.scene.getParty().filter(s=>s.isAllowedInBattle()&&!s.isActive(!0)).length)return super.end();if(this.isModal&&!this.doReturn&&!this.scene.getParty()[this.fieldIndex].isFainted())return super.end();if(this.isModal&&this.scene.getPlayerField().filter(s=>s.isAllowedInBattle()&&s.isActive(!0)).length>=this.scene.currentBattle.getBattlerCount())return super.end();const A=this.scene.currentBattle.getBattlerCount()===1||this.scene.getParty().filter(s=>s.isAllowedInBattle()).length>1?this.fieldIndex:0;this.scene.ui.setMode($.PARTY,this.isModal?as.FAINT_SWITCH:as.POST_BATTLE_SWITCH,A,(s,R)=>{if(s>=this.scene.currentBattle.getBattlerCount()&&s<6){const I=R===_T.PASS_BATON?xA.BATON_PASS:this.switchType;this.scene.unshiftPhase(new EO(this.scene,I,A,s,this.doReturn))}this.scene.ui.setMode($.MESSAGE).then(()=>super.end())},HE.FilterNonFainted)}};T(sg,"SwitchPhase");let pi=sg;const Rg=class Rg extends LE{constructor(A,s,R){super(A),this.fieldIndex=s,this.useName=R}start(){super.start();const A=this.scene.getPlayerField()[this.fieldIndex];if(this.scene.battleStyle===h1.SET){super.end();return}if(this.scene.field.getAll().indexOf(A)===-1){this.scene.unshiftPhase(new xh(this.scene,this.fieldIndex)),super.end();return}if(!this.scene.getParty().slice(1).filter(s=>s.isActive()).length){super.end();return}if(A.getTag(Y.FRENZY)){super.end();return}this.scene.ui.showText(U.t("battle:switchQuestion",{pokemonName:this.useName?b(A):U.t("battle:pokemon")}),null,()=>{this.scene.ui.setMode($.CONFIRM,()=>{this.scene.ui.setMode($.MESSAGE),this.scene.tryRemovePhase(s=>s instanceof Wi&&s.player&&s.fieldIndex===this.fieldIndex),this.scene.unshiftPhase(new pi(this.scene,xA.SWITCH,this.fieldIndex,!1,!0)),this.end()},()=>{this.scene.ui.setMode($.MESSAGE),this.end()})})}};T(Rg,"CheckSwitchPhase");let Ln=Rg;const Og=class Og extends EO{constructor(A,s){super(A,xA.SWITCH,s,-1,!0)}switchAndSummon(){this.end()}summon(){}onEnd(){const A=this.getPokemon();A.resetSprite(),A.resetTurnData(),A.resetSummonData(),this.scene.updateFieldScale(),this.scene.triggerPokemonFormChange(A,Os)}};T(Og,"ReturnPhase");let LL=Og;const ng=class ng extends zE{constructor(A,s,R){super(A,s),this.shownIvs=R}start(){if(super.start(),!this.shownIvs)return this.end();const A=this.getPokemon();let s=[],R=[],I=[];const i=this.scene.getEnemyField(),a=this.scene.uiTheme;for(let L=0;L<i.length;L++){s=i[L].ivs;const S=this.scene.gameData.dexData[i[L].species.getRootSpeciesId()].ivs,o=this.scene.ui.getMessageHandler().getTopIvs(s,this.shownIvs);R=i[L].getBattleInfo().getStatsValueContainer().list,I=R.filter(l=>l.name.indexOf("icon_stat_label")>=0);for(let l=0;l<I.length;l++){const D=B[I[l].frame.name];if(s[D]>S[D]&&o.indexOf(Number(D))>=0){const M=s[D]===31?zt(V.PERFECT_IV,!1,a):zt(V.SUMMARY_GREEN,!1,a),c=Phaser.Display.Color.HexStringToColor(M).color;I[l].setTint(c)}I[l].setVisible(!0)}}this.scene.hideIvs?this.end():this.scene.ui.showText(U.t("battle:ivScannerUseQuestion",{pokemonName:b(A)}),null,()=>{this.scene.ui.setMode($.CONFIRM,()=>{this.scene.ui.setMode($.MESSAGE),this.scene.ui.clearText(),new bI(RA.LOCK_ON,A,A).play(this.scene,!1,()=>{this.scene.ui.getMessageHandler().promptIvs(A.id,A.ivs,this.shownIvs).then(()=>this.end())})},()=>{this.scene.ui.setMode($.MESSAGE),this.scene.ui.clearText(),this.end()})})}};T(ng,"ScanIvsPhase");let BT=ng;const Ig=class Ig extends LE{constructor(A,s){super(A),this.double=s}start(){super.start();const A=this.scene.getPlayerField().find(s=>s.isActive(!0));A?A.setFieldPosition(this.double&&this.scene.getParty().filter(s=>s.isAllowedInBattle()).length>1?eR.LEFT:eR.CENTER,500).then(()=>{if(A.getFieldIndex()===1){const s=this.scene.getParty();s[1]=s[0],s[0]=A}this.end()}):this.end()}};T(Ig,"ToggleDoublePositionPhase");let aO=Ig;var me=(E=>(E[E.MYSTERIOUS_CHALLENGERS=0]="MYSTERIOUS_CHALLENGERS",E[E.MYSTERIOUS_CHEST=1]="MYSTERIOUS_CHEST",E[E.DARK_DEAL=2]="DARK_DEAL",E[E.FIGHT_OR_FLIGHT=3]="FIGHT_OR_FLIGHT",E[E.SLUMBERING_SNORLAX=4]="SLUMBERING_SNORLAX",E[E.TRAINING_SESSION=5]="TRAINING_SESSION",E[E.DEPARTMENT_STORE_SALE=6]="DEPARTMENT_STORE_SALE",E[E.SHADY_VITAMIN_DEALER=7]="SHADY_VITAMIN_DEALER",E[E.FIELD_TRIP=8]="FIELD_TRIP",E[E.SAFARI_ZONE=9]="SAFARI_ZONE",E[E.LOST_AT_SEA=10]="LOST_AT_SEA",E[E.FIERY_FALLOUT=11]="FIERY_FALLOUT",E[E.THE_STRONG_STUFF=12]="THE_STRONG_STUFF",E[E.THE_POKEMON_SALESMAN=13]="THE_POKEMON_SALESMAN",E[E.AN_OFFER_YOU_CANT_REFUSE=14]="AN_OFFER_YOU_CANT_REFUSE",E[E.DELIBIRDY=15]="DELIBIRDY",E[E.ABSOLUTE_AVARICE=16]="ABSOLUTE_AVARICE",E[E.A_TRAINERS_TEST=17]="A_TRAINERS_TEST",E[E.TRASH_TO_TREASURE=18]="TRASH_TO_TREASURE",E[E.BERRIES_ABOUND=19]="BERRIES_ABOUND",E[E.CLOWNING_AROUND=20]="CLOWNING_AROUND",E[E.PART_TIMER=21]="PART_TIMER",E[E.DANCING_LESSONS=22]="DANCING_LESSONS",E[E.WEIRD_DREAM=23]="WEIRD_DREAM",E[E.THE_WINSTRATE_CHALLENGE=24]="THE_WINSTRATE_CHALLENGE",E[E.TELEPORTING_HIJINKS=25]="TELEPORTING_HIJINKS",E[E.BUG_TYPE_SUPERFAN=26]="BUG_TYPE_SUPERFAN",E[E.FUN_AND_GAMES=27]="FUN_AND_GAMES",E[E.UNCOMMON_BREED=28]="UNCOMMON_BREED",E[E.GLOBAL_TRADE_SYSTEM=29]="GLOBAL_TRADE_SYSTEM",E[E.THE_EXPERT_POKEMON_BREEDER=30]="THE_EXPERT_POKEMON_BREEDER",E))(me||{});function UA(E,A,s,R=bR.DEFAULT){if(xe(A))return null;let I=K7(E,A);return s&&I&&(I=e8(I,s,R)),I}T(UA,"getEncounterText");function K7(E,A){var R,I;const s=(I=(R=E.currentBattle)==null?void 0:R.mysteryEncounter)==null?void 0:I.dialogueTokens;return U.exists(A,s)?U.t(A,s):A??null}T(K7,"getTextWithDialogueTokens");function bA(E,A){const s=UA(E,A);E.queueMessage(s??"",null,!0)}T(bA,"queueEncounterMessage");function Kt(E,A,s=null,R=0,I=!0,i=null){return new Promise(a=>{const L=UA(E,A);E.ui.showText(L??"",s,()=>a(),R,I,i)})}T(Kt,"showEncounterText");function en(E,A,s,R=null,I=0){return new Promise(i=>{const a=UA(E,A),L=UA(E,s);E.ui.showDialogue(a??"",L??"",R,()=>i(),I)})}T(en,"showEncounterDialogue");const ig=class ig extends LE{constructor(A,s=!0){super(A),this.isVictory=s}start(){super.start(),this.isVictory&&(this.scene.currentBattle.addBattleScore(this.scene),this.scene.gameData.gameStats.battles++,this.scene.currentBattle.trainer&&this.scene.gameData.gameStats.trainersDefeated++,this.scene.gameMode.isEndless&&this.scene.currentBattle.waveIndex+1>this.scene.gameData.gameStats.highestEndlessWave&&(this.scene.gameData.gameStats.highestEndlessWave=this.scene.currentBattle.waveIndex+1)),this.scene.gameMode.isEndless&&this.scene.currentBattle.waveIndex>=5850&&(this.scene.clearPhaseQueue(),this.scene.unshiftPhase(new iO(this.scene,!0)));for(const s of this.scene.getField())s&&s.battleSummonData&&(s.battleSummonData.waveTurnCount=1);for(const s of this.scene.getParty().filter(R=>R.isAllowedInBattle()))bX($S,s);this.scene.currentBattle.moneyScattered&&this.scene.currentBattle.pickUpScatteredMoney(this.scene),this.scene.clearEnemyHeldItemModifiers();const A=this.scene.findModifiers(s=>s instanceof WI||s instanceof HL);for(const s of A){const R=[];s instanceof HL&&R.push(this.scene.getPokemonById(s.pokemonId)),s.lapse(...R)||this.scene.removeModifier(s)}this.scene.updateModifiers().then(()=>this.end())}};T(ig,"BattleEndPhase");let yi=ig;const ag=class ag extends LE{start(){super.start(),this.scene.newBattle(),this.end()}};T(ag,"NewBattlePhase");let rL=ag;const Lg=class Lg extends kA{constructor(A){super(A)}start(){super.start();const A=this.scene.currentBattle.waveIndex,s=A%1e3?A%250?W.COMMON:W.GREAT:W.ULTRA;QI(this.scene.getEnemyParty(),FE.ENEMY_BUFF);const R=Math.ceil(A/250);for(let I=0;I<R;I++)this.scene.addEnemyModifier(e7(s,this.scene.findModifiers(i=>i instanceof rn,!1),this.scene),!0,!0);this.scene.updateModifiers(!1,!0).then(()=>this.end())}};T(Lg,"AddEnemyBuffModifierPhase");let bh=Lg;var U6=(E=>(E.EGG_COUNT_CHANGED="onEggCountChanged",E))(U6||{});const rg=class rg extends Event{constructor(A){super("onEggCountChanged"),this.eggCount=A}};T(rg,"EggCountChangedEvent");let kh=rg;const Ng=class Ng extends Phaser.GameObjects.Container{constructor(A,s){super(A,0,0),this.WINDOW_DEFAULT_WIDTH=37,this.WINDOW_MEDIUM_WIDTH=42,this.WINDOW_HEIGHT=26,this.onEggCountChangedEvent=I=>this.onEggCountChanged(I),this.eggCount=s,this.battleScene=A,this.battleScene.ui.getHandler().eventTarget.addEventListener(U6.EGG_COUNT_CHANGED,this.onEggCountChangedEvent),this.setup()}setup(){const A=this.eggCount>9?this.WINDOW_MEDIUM_WIDTH:this.WINDOW_DEFAULT_WIDTH;this.eggCountWindow=it(this.battleScene,5,5,A,this.WINDOW_HEIGHT),this.setVisible(this.eggCount>1),this.add(this.eggCountWindow);const s=this.battleScene.add.sprite(19,18,"egg","egg_0");s.setScale(.32),this.eggCountText=se(this.battleScene,28,13,`${this.eggCount}`,V.MESSAGE,{fontSize:"66px"}),this.eggCountText.setName("text-egg-count"),this.add(s),this.add(this.eggCountText)}setWindowToDefaultSize(){this.eggCountWindow.setSize(this.WINDOW_DEFAULT_WIDTH,this.WINDOW_HEIGHT)}onEggCountChanged(A){var I;const s=A;if(!s||!((I=this.eggCountText)!=null&&I.data))return;const R=s.eggCount;R<10&&this.setWindowToDefaultSize(),R>0?this.eggCountText.setText(R.toString()):this.eggCountText.setVisible(!1)}};T(Ng,"EggCounterContainer");let Zh=Ng;const Bo={en:{infoContainerTextSize:"64px"},de:{infoContainerTextSize:"64px"},es:{infoContainerTextSize:"64px"},fr:{infoContainerTextSize:"64px"},it:{infoContainerTextSize:"64px"},zh:{infoContainerTextSize:"64px"},pt:{infoContainerTextSize:"60px",infoContainerLabelXPos:-15,infoContainerTextXPos:-12}},Tg=class Tg extends Phaser.GameObjects.Container{constructor(A,s=372,R=66){super(A,s,R),this.infoWindowWidth=104,this.numCharsBeforeCutoff=16,this.initialX=s}setup(){this.setName("pkmn-info");const A=U.resolvedLanguage,s=Object.keys(Bo).find(o=>A==null?void 0:A.includes(o)),R=Bo[s];this.infoBg=it(this.scene,0,0,this.infoWindowWidth,132),this.infoBg.setOrigin(.5,.5),this.infoBg.setName("window-info-bg"),this.pokemonMovesContainer=this.scene.add.container(6,14),this.pokemonMovesContainer.setName("pkmn-moves"),this.movesContainerInitialX=this.pokemonMovesContainer.x,this.pokemonMovesContainers=[],this.pokemonMoveBgs=[],this.pokemonMoveLabels=[];const I=it(this.scene,0,0,58,52);I.setOrigin(1,0),I.setName("window-moves-bg"),this.pokemonMovesContainer.add(I);const i=se(this.scene,-I.width/2,6,U.t("pokemonInfoContainer:moveset"),V.WINDOW,{fontSize:"64px"});i.setOrigin(.5,0),i.setName("text-moves"),this.pokemonMovesContainer.add(i);for(let o=0;o<4;o++){const l=this.scene.add.container(-6,18+7*o);l.setScale(.5),l.setName("move");const D=this.scene.add.nineslice(0,0,"type_bgs","unknown",92,14,2,2,2,2);D.setOrigin(1,0),D.setName("nineslice-move-bg");const M=se(this.scene,-D.width/2,0,"-",V.PARTY);M.setOrigin(.5,0),M.setName("text-move-label"),this.pokemonMoveBgs.push(D),this.pokemonMoveLabels.push(M),l.add(D),l.add(M),this.pokemonMovesContainers.push(l),this.pokemonMovesContainer.add(l)}this.add(this.pokemonMovesContainer),this.statsContainer=new Yl(this.scene,-48,-64,!0),this.add(this.infoBg),this.add(this.statsContainer);const a=(R==null?void 0:R.infoContainerLabelXPos)||-18,L=(R==null?void 0:R.infoContainerTextXPos)||-14,S=(R==null?void 0:R.infoContainerTextSize)||"64px";this.pokemonFormLabelText=se(this.scene,a,19,U.t("pokemonInfoContainer:form"),V.WINDOW,{fontSize:S}),this.pokemonFormLabelText.setOrigin(1,0),this.pokemonFormLabelText.setVisible(!1),this.add(this.pokemonFormLabelText),this.pokemonFormText=se(this.scene,L,19,"",V.WINDOW,{fontSize:S}),this.pokemonFormText.setOrigin(0,0),this.pokemonFormText.setVisible(!1),this.add(this.pokemonFormText),this.pokemonGenderText=se(this.scene,-42,-61,"",V.WINDOW,{fontSize:S}),this.pokemonGenderText.setOrigin(0,0),this.pokemonGenderText.setVisible(!1),this.pokemonGenderText.setName("text-pkmn-gender"),this.add(this.pokemonGenderText),this.pokemonGenderNewText=se(this.scene,-36,-61,"",V.WINDOW,{fontSize:"64px"}),this.pokemonGenderNewText.setOrigin(0,0),this.pokemonGenderNewText.setVisible(!1),this.pokemonGenderNewText.setName("text-pkmn-new-gender"),this.add(this.pokemonGenderNewText),this.pokemonAbilityLabelText=se(this.scene,a,29,U.t("pokemonInfoContainer:ability"),V.WINDOW,{fontSize:S}),this.pokemonAbilityLabelText.setOrigin(1,0),this.pokemonAbilityLabelText.setName("text-pkmn-ability-label"),this.add(this.pokemonAbilityLabelText),this.pokemonAbilityText=se(this.scene,L,29,"",V.WINDOW,{fontSize:S}),this.pokemonAbilityText.setOrigin(0,0),this.pokemonAbilityText.setName("text-pkmn-ability"),this.add(this.pokemonAbilityText),this.pokemonNatureLabelText=se(this.scene,a,39,U.t("pokemonInfoContainer:nature"),V.WINDOW,{fontSize:S}),this.pokemonNatureLabelText.setOrigin(1,0),this.pokemonNatureLabelText.setName("text-pkmn-nature-label"),this.add(this.pokemonNatureLabelText),this.pokemonNatureText=PE(this.scene,L,39,"",V.WINDOW,{fontSize:S,lineSpacing:3,maxLines:2}),this.pokemonNatureText.setOrigin(0,0),this.pokemonNatureText.setName("text-pkmn-nature"),this.add(this.pokemonNatureText),this.pokemonShinyIcon=this.scene.add.image(-43.5,48.5,"shiny_star"),this.pokemonShinyIcon.setOrigin(0,0),this.pokemonShinyIcon.setScale(.75),this.pokemonShinyIcon.setInteractive(new Phaser.Geom.Rectangle(0,0,12,15),Phaser.Geom.Rectangle.Contains),this.pokemonShinyIcon.setName("img-pkmn-shiny-icon"),this.add(this.pokemonShinyIcon),this.pokemonShinyNewIcon=se(this.scene,this.pokemonShinyIcon.x+12,this.pokemonShinyIcon.y,"",V.WINDOW,{fontSize:S}),this.pokemonShinyNewIcon.setOrigin(0,0),this.pokemonShinyNewIcon.setName("text-pkmn-shiny-new-icon"),this.add(this.pokemonShinyNewIcon),this.pokemonShinyNewIcon.setVisible(!1),this.pokemonFusionShinyIcon=this.scene.add.image(this.pokemonShinyIcon.x,this.pokemonShinyIcon.y,"shiny_star_2"),this.pokemonFusionShinyIcon.setOrigin(0,0),this.pokemonFusionShinyIcon.setScale(.75),this.pokemonFusionShinyIcon.setName("img-pkmn-fusion-shiny-icon"),this.add(this.pokemonFusionShinyIcon),this.setVisible(!1)}show(A,s=!1,R=1,I,i,a=!1){return new Promise(L=>{var k,j,q;I||(I=A.scene.gameData.dexData[A.species.speciesId]),i||(i=A.scene.gameData.starterData[A.species.getRootSpeciesId()]);const S=BigInt(I.caughtAttr);if(A.gender>ye.GENDERLESS){this.pokemonGenderText.setText($L(A.gender)),this.pokemonGenderText.setColor(gn(A.gender)),this.pokemonGenderText.setShadowColor(gn(A.gender,!0)),this.pokemonGenderText.setVisible(!0);const ie=BigInt(1<<A.gender)*Fe.MALE;this.pokemonGenderNewText.setText("(+)"),this.pokemonGenderNewText.setColor(zt(V.SUMMARY_BLUE,!1,this.scene.uiTheme)),this.pokemonGenderNewText.setShadowColor(zt(V.SUMMARY_BLUE,!0,this.scene.uiTheme)),this.pokemonGenderNewText.setVisible((ie&S)===BigInt(0))}else this.pokemonGenderNewText.setVisible(!1),this.pokemonGenderText.setVisible(!1);const o=(q=(j=(k=A.species)==null?void 0:k.forms)==null?void 0:j[A.formIndex])==null?void 0:q.formKey,l=qo(o,"-",!1,!1)||"",D=qo(e[A.species.getRootSpeciesId()],"_",!0,!1);let M="";if(A.species.speciesId===e.ARCEUS)M=U.t(`pokemonInfo:Type.${l==null?void 0:l.toUpperCase()}`);else{const ie=`pokemonForm:${D}${l}`;M=U.exists(ie)?U.t(ie):l}M?(this.pokemonFormLabelText.setVisible(!0),this.pokemonFormText.setVisible(!0),(BigInt(1<<A.formIndex)*Fe.DEFAULT_FORM&S)===BigInt(0)?(this.pokemonFormLabelText.setColor(zt(V.SUMMARY_BLUE,!1,this.scene.uiTheme)),this.pokemonFormLabelText.setShadowColor(zt(V.SUMMARY_BLUE,!0,this.scene.uiTheme))):(this.pokemonFormLabelText.setColor(zt(V.WINDOW,!1,this.scene.uiTheme)),this.pokemonFormLabelText.setShadowColor(zt(V.WINDOW,!0,this.scene.uiTheme))),this.pokemonFormText.setText(M.length>this.numCharsBeforeCutoff?M.substring(0,this.numCharsBeforeCutoff-3)+"...":M),M.length>this.numCharsBeforeCutoff?(this.pokemonFormText.setInteractive(new Phaser.Geom.Rectangle(0,0,this.pokemonFormText.width,this.pokemonFormText.height),Phaser.Geom.Rectangle.Contains),this.pokemonFormText.on("pointerover",()=>this.scene.ui.showTooltip("",M,!0)),this.pokemonFormText.on("pointerout",()=>this.scene.ui.hideTooltip())):this.pokemonFormText.disableInteractive()):(this.pokemonFormLabelText.setVisible(!1),this.pokemonFormText.setVisible(!1),this.pokemonFormText.disableInteractive());const c=A.abilityIndex===2?V.MONEY:V.WINDOW;this.pokemonAbilityText.setText(A.getAbility(!0).name),this.pokemonAbilityText.setColor(zt(c,!1,this.scene.uiTheme)),this.pokemonAbilityText.setShadowColor(zt(c,!0,this.scene.uiTheme)),A.checkIfPlayerHasAbilityOfStarter(i.abilityAttr)?(this.pokemonAbilityLabelText.setColor(zt(V.WINDOW,!1,this.scene.uiTheme)),this.pokemonAbilityLabelText.setShadowColor(zt(V.WINDOW,!0,this.scene.uiTheme))):(this.pokemonAbilityLabelText.setColor(zt(V.SUMMARY_BLUE,!1,this.scene.uiTheme)),this.pokemonAbilityLabelText.setShadowColor(zt(V.SUMMARY_BLUE,!0,this.scene.uiTheme))),this.pokemonNatureText.setText(WO(A.getNature(),!0,!1,!1,this.scene.uiTheme));const P=I.natureAttr,_=1<<A.nature+1;P&_?(this.pokemonNatureLabelText.setColor(zt(V.WINDOW,!1,this.scene.uiTheme)),this.pokemonNatureLabelText.setShadowColor(zt(V.WINDOW,!0,this.scene.uiTheme))):(this.pokemonNatureLabelText.setColor(zt(V.SUMMARY_BLUE,!1,this.scene.uiTheme)),this.pokemonNatureLabelText.setShadowColor(zt(V.SUMMARY_BLUE,!0,this.scene.uiTheme)));const g=A.isFusion(),H=g&&A.shiny&&A.fusionShiny,F=H?A.variant:A.getVariant();if(this.pokemonShinyIcon.setTexture(`shiny_star${H?"_1":""}`),this.pokemonShinyIcon.setVisible(A.isShiny()),this.pokemonShinyIcon.setTint(GE(F)),this.pokemonShinyIcon.visible){const ie=H||F?`${F===2?U.t("common:epicShiny"):F===1?U.t("common:rareShiny"):U.t("common:commonShiny")}${H?`/${A.fusionVariant===2?U.t("common:epicShiny"):A.fusionVariant===1?U.t("common:rareShiny"):U.t("common:commonShiny")}`:""}`:"";this.pokemonShinyIcon.on("pointerover",()=>this.scene.ui.showTooltip("",`${U.t("common:shinyOnHover")}${ie?` (${ie})`:""}`,!0)),this.pokemonShinyIcon.on("pointerout",()=>this.scene.ui.hideTooltip());const z=BigInt(1<<(A.shiny?1:0)),Oe=BigInt(1<<A.variant+4);this.pokemonShinyNewIcon.setText("(+)"),this.pokemonShinyNewIcon.setColor(zt(V.SUMMARY_BLUE,!1,this.scene.uiTheme)),this.pokemonShinyNewIcon.setShadowColor(zt(V.SUMMARY_BLUE,!0,this.scene.uiTheme));const ae=(z&S)===BigInt(0)||(Oe&S)===BigInt(0);this.pokemonShinyNewIcon.setVisible(!!ae)}else this.pokemonShinyNewIcon.setVisible(!1);this.pokemonFusionShinyIcon.setPosition(this.pokemonShinyIcon.x,this.pokemonShinyIcon.y),this.pokemonFusionShinyIcon.setVisible(H),g&&this.pokemonFusionShinyIcon.setTint(GE(A.fusionVariant));const p=A.species.getRootSpeciesId(),v=a?I.caughtAttr?I.ivs:null:this.scene.gameData.dexData[p].caughtAttr?this.scene.gameData.dexData[p].ivs:null;this.statsContainer.updateIvs(A.ivs,v),a||(this.scene.tweens.add({targets:this,duration:Ve(Math.floor(750/R)),ease:"Cubic.easeInOut",x:this.initialX-this.infoWindowWidth,onComplete:T(()=>{L()},"onComplete")}),s&&this.scene.tweens.add({delay:Ve(Math.floor(325/R)),targets:this.pokemonMovesContainer,duration:Ve(Math.floor(325/R)),ease:"Cubic.easeInOut",x:this.movesContainerInitialX-57,onComplete:T(()=>L(),"onComplete")}));for(let ie=0;ie<4;ie++){const z=ie<A.moveset.length&&A.moveset[ie]?A.moveset[ie].getMove():null;this.pokemonMoveBgs[ie].setFrame(n[z?z.type:n.UNKNOWN].toString().toLowerCase()),this.pokemonMoveLabels[ie].setText(z?z.name:"-"),this.pokemonMovesContainers[ie].setVisible(!!z)}this.setVisible(!0),this.shown=!0,this.scene.hideEnemyModifierBar()})}changeToEggSummaryLayout(){const A=U.resolvedLanguage,s=Object.keys(Bo).find(L=>A==null?void 0:A.includes(L)),R=Bo[s],I=43,i=((R==null?void 0:R.infoContainerLabelXPos)||-18)+I,a=((R==null?void 0:R.infoContainerTextXPos)||-14)+I;this.x=this.initialX-this.infoWindowWidth,this.pokemonGenderText.setPosition(89,-2),this.pokemonGenderNewText.setPosition(79,-2),this.pokemonShinyIcon.setPosition(82,87),this.pokemonShinyNewIcon.setPosition(72,87),this.pokemonFormLabelText.setPosition(i,152),this.pokemonFormText.setPosition(a,152),this.pokemonAbilityLabelText.setPosition(i,110),this.pokemonAbilityText.setPosition(a,110),this.pokemonNatureLabelText.setPosition(i,125),this.pokemonNatureText.setPosition(a,125),this.statsContainer.setScale(.7),this.statsContainer.setPosition(30,-3),this.infoBg.setVisible(!1),this.pokemonMovesContainer.setVisible(!1)}makeRoomForConfirmUi(A=1,s=!1){const R=s?this.initialX-this.infoWindowWidth-65:this.initialX-this.infoWindowWidth-Wl.windowWidth;return new Promise(I=>{this.scene.tweens.add({targets:this,duration:Ve(Math.floor(150/A)),ease:"Cubic.easeInOut",x:R,onComplete:T(()=>{I()},"onComplete")})})}hide(A=1){return new Promise(s=>{if(!this.shown)return this.scene.showEnemyModifierBar(),s();this.scene.tweens.add({targets:this.pokemonMovesContainer,duration:Ve(Math.floor(750/A)),ease:"Cubic.easeInOut",x:this.movesContainerInitialX}),this.scene.tweens.add({targets:this,duration:Ve(Math.floor(750/A)),ease:"Cubic.easeInOut",x:this.initialX,onComplete:T(()=>{this.setVisible(!1),this.pokemonShinyIcon.off("pointerover"),this.pokemonShinyIcon.off("pointerout"),this.scene.ui.hideTooltip(),this.scene.showEnemyModifierBar(),s()},"onComplete")}),this.shown=!1})}};T(Tg,"PokemonInfoContainer");let gT=Tg;const IM=class IM extends kA{constructor(A,s,R,I){super(A),this.eggLapsePhase=s,this.egg=R,this.eggsToHatchCount=I}start(){super.start(),this.scene.ui.setModeForceTransition($.EGG_HATCH_SCENE).then(()=>{if(!this.egg)return this.end();const A=this.scene.gameData.eggs.findIndex(I=>I.id===this.egg.id);if(A===-1)return this.end();this.scene.gameData.eggs.splice(A,1),this.scene.fadeOutBgm(void 0,!1),this.eggHatchHandler=this.scene.ui.getHandler(),this.eggHatchContainer=this.eggHatchHandler.eggHatchContainer,this.eggHatchBg=this.scene.add.image(0,0,"default_bg"),this.eggHatchBg.setOrigin(0,0),this.eggHatchContainer.add(this.eggHatchBg),this.eggContainer=this.scene.add.container(this.eggHatchBg.displayWidth/2,this.eggHatchBg.displayHeight/2),this.eggSprite=this.scene.add.sprite(0,0,"egg",`egg_${this.egg.getKey()}`),this.eggCrackSprite=this.scene.add.sprite(0,0,"egg_crack","0"),this.eggCrackSprite.setVisible(!1),this.eggLightraysOverlay=this.scene.add.sprite(-this.eggHatchBg.displayWidth/2+4,-this.eggHatchBg.displayHeight/2,"egg_lightrays","3"),this.eggLightraysOverlay.setOrigin(0,0),this.eggLightraysOverlay.setVisible(!1),this.eggContainer.add(this.eggSprite),this.eggContainer.add(this.eggCrackSprite),this.eggContainer.add(this.eggLightraysOverlay),this.eggHatchContainer.add(this.eggContainer),this.eggCounterContainer=new Zh(this.scene,this.eggsToHatchCount),this.eggHatchContainer.add(this.eggCounterContainer);const s=T(()=>{const I=this.scene.add.sprite(this.eggHatchBg.displayWidth/2,this.eggHatchBg.displayHeight/2,"pkmn__sub");return I.setPipeline(this.scene.spritePipeline,{tone:[0,0,0,0],ignoreTimeTint:!0}),I},"getPokemonSprite");this.eggHatchContainer.add(this.pokemonSprite=s()),this.pokemonShinySparkle=this.scene.add.sprite(this.pokemonSprite.x,this.pokemonSprite.y,"shiny"),this.pokemonShinySparkle.setVisible(!1),this.eggHatchContainer.add(this.pokemonShinySparkle),this.eggHatchOverlay=this.scene.add.rectangle(0,-this.scene.game.canvas.height/6,this.scene.game.canvas.width/6,this.scene.game.canvas.height/6,16777215),this.eggHatchOverlay.setOrigin(0,0),this.eggHatchOverlay.setAlpha(0),this.scene.fieldUI.add(this.eggHatchOverlay),this.infoContainer=new gT(this.scene),this.infoContainer.setup(),this.eggHatchContainer.add(this.infoContainer);const R=this.generatePokemon();R.fusionSpecies&&R.clearFusionSpecies(),this.pokemonSprite.setVisible(!1),this.pokemon=R,R.loadAssets().then(()=>{this.canSkip=!0,this.scene.time.delayedCall(1e3,()=>{this.hatched||(this.evolutionBgm=this.scene.playSoundWithoutBgm("evolution"))}),this.scene.time.delayedCall(2e3,()=>{this.hatched||(this.eggCrackSprite.setVisible(!0),this.doSpray(1,this.eggSprite.displayHeight/-2),this.doEggShake(2).then(()=>{this.hatched||this.scene.time.delayedCall(1e3,()=>{this.hatched||(this.doSpray(2,this.eggSprite.displayHeight/-4),this.eggCrackSprite.setFrame("1"),this.scene.time.delayedCall(125,()=>this.eggCrackSprite.setFrame("2")),this.doEggShake(4).then(()=>{this.hatched||this.scene.time.delayedCall(1e3,()=>{this.hatched||(this.scene.playSound("se/egg_crack"),this.doSpray(4),this.eggCrackSprite.setFrame("3"),this.scene.time.delayedCall(125,()=>this.eggCrackSprite.setFrame("4")),this.doEggShake(8,2).then(()=>{this.hatched||this.doHatch()}))})}))})}))})})})}end(){this.scene.findPhase(A=>A instanceof IM)?this.eggHatchHandler.clear():this.scene.time.delayedCall(250,()=>this.scene.setModifiersVisible(!0)),super.end()}doEggShake(A,s,R){return new Promise(I=>{s===void 0&&(s=0),R===void 0&&(R=0),this.scene.playSound("se/pb_move"),this.scene.tweens.add({targets:this.eggContainer,x:`-=${A/(R?1:2)}`,ease:"Sine.easeInOut",duration:125,onComplete:T(()=>{this.scene.tweens.add({targets:this.eggContainer,x:`+=${A}`,ease:"Sine.easeInOut",duration:250,onComplete:T(()=>{if(R++,R<s)return this.doEggShake(A,s,R).then(()=>I());this.scene.tweens.add({targets:this.eggContainer,x:`-=${A/2}`,ease:"Sine.easeInOut",duration:125,onComplete:T(()=>I(),"onComplete")})},"onComplete")})},"onComplete")})})}trySkip(){var A;return!this.canSkip||this.skipped||((A=this.eggCounterContainer.eggCountText)==null?void 0:A.data)===void 0?!1:(this.skipped=!0,this.hatched?this.doReveal():this.doHatch(),!0)}doHatch(){this.canSkip=!1,this.hatched=!0,this.evolutionBgm&&wR.fadeOut(this.scene,this.evolutionBgm,Ve(100));for(let A=0;A<5;A++)this.scene.time.delayedCall(Ve(375*A),()=>this.scene.playSound("se/egg_hatch",{volume:1-A*.2}));this.eggLightraysOverlay.setVisible(!0),this.eggLightraysOverlay.play("egg_lightrays"),this.scene.tweens.add({duration:Ve(125),targets:this.eggHatchOverlay,alpha:1,ease:"Cubic.easeIn",onComplete:T(()=>{this.skipped=!1,this.canSkip=!0},"onComplete")}),this.scene.time.delayedCall(Ve(1500),()=>{this.canSkip=!1,this.skipped||this.doReveal()})}doReveal(){const A=this.pokemon.isShiny();this.pokemon.species.subLegendary&&this.scene.validateAchv(At.HATCH_SUB_LEGENDARY),this.pokemon.species.legendary&&this.scene.validateAchv(At.HATCH_LEGENDARY),this.pokemon.species.mythical&&this.scene.validateAchv(At.HATCH_MYTHICAL),A&&this.scene.validateAchv(At.HATCH_SHINY),this.eggContainer.setVisible(!1),this.pokemonSprite.play(this.pokemon.getSpriteKey(!0)),this.pokemonSprite.setPipelineData("ignoreTimeTint",!0),this.pokemonSprite.setPipelineData("spriteKey",this.pokemon.getSpriteKey()),this.pokemonSprite.setPipelineData("shiny",this.pokemon.shiny),this.pokemonSprite.setPipelineData("variant",this.pokemon.variant),this.pokemonSprite.setVisible(!0),this.scene.time.delayedCall(Ve(250),()=>{this.eggsToHatchCount--,this.eggHatchHandler.eventTarget.dispatchEvent(new kh(this.eggsToHatchCount)),this.pokemon.cry(),A&&this.scene.time.delayedCall(Ve(500),()=>{this.pokemonShinySparkle.play(`sparkle${this.pokemon.variant?`_${this.pokemon.variant+1}`:""}`),this.scene.playSound("se/sparkle")}),this.scene.time.delayedCall(Ve(this.skipped?A?750:250:A?1750:1250),()=>{this.infoContainer.show(this.pokemon,!1,this.skipped?2:1),this.scene.playSoundWithoutBgm("evolution_fanfare"),this.scene.ui.showText(U.t("egg:hatchFromTheEgg",{pokemonName:b(this.pokemon)}),null,()=>{this.scene.gameData.updateSpeciesDexIvs(this.pokemon.species.speciesId,this.pokemon.ivs),this.scene.gameData.setPokemonCaught(this.pokemon,!0,!0).then(()=>{this.scene.gameData.setEggMoveUnlocked(this.pokemon.species,this.eggMoveIndex).then(s=>{this.eggHatchData.setEggMoveUnlocked(s),this.scene.ui.showText("",0),this.end()})})},null,!0,3e3)})}),this.scene.tweens.add({duration:Ve(this.skipped?500:3e3),targets:this.eggHatchOverlay,alpha:0,ease:"Cubic.easeOut"})}sin(A,s){return s*Math.sin(A*(Math.PI/128))}doSpray(A,s){this.scene.tweens.addCounter({repeat:A,duration:zA(1),onRepeat:T(()=>{this.doSprayParticle(sA(8),s||0)},"onRepeat")})}doSprayParticle(A,s){const R=this.eggHatchBg.displayWidth/2,I=this.eggHatchBg.displayHeight/2+s,i=this.egg.isManaphyEgg()?"1":this.egg.tier.toString(),a=this.scene.add.image(R,I,"egg_shard",`${i}_${Math.floor(A/2)}`);this.eggHatchContainer.add(a);let L=0,S=0;const o=3-sA(8),l=24+sA(32),D=this.scene.tweens.addCounter({repeat:-1,duration:zA(1),onRepeat:T(()=>{M()},"onRepeat")}),M=T(()=>{const c=this.skipped?6:1;S+=c,A<160?(a.setPosition(R+o*L/3,I+S),a.y+=-this.sin(A,l),L>108&&a.setScale(1-(L-108)/20),A+=2*c,L+=c):(a.destroy(),D.remove())},"updateParticle");M()}generatePokemon(){return this.eggHatchData=this.eggLapsePhase.generatePokemon(this.egg),this.eggMoveIndex=this.eggHatchData.eggMoveIndex,this.eggHatchData.pokemon}};T(IM,"EggHatchPhase");let Zl=IM;const Sg=class Sg extends kA{constructor(A,s){super(A),this.eggHatchData=s}start(){super.start();const A=T(s=>{s>=this.eggHatchData.length?this.scene.ui.setModeForceTransition($.EGG_HATCH_SUMMARY,this.eggHatchData).then(()=>{this.scene.fadeOutBgm(void 0,!1)}):(this.eggHatchData[s].setDex(),this.eggHatchData[s].updatePokemon().then(()=>{s<this.eggHatchData.length&&A(s+1)}))},"updateNextPokemon");A(0)}end(){this.scene.time.delayedCall(250,()=>this.scene.setModifiersVisible(!0)),this.scene.ui.setModeForceTransition($.MESSAGE).then(()=>{super.end()})}};T(Sg,"EggSummaryPhase");let Xl=Sg;const og=class og{constructor(A,s,R){this.scene=A,this.pokemon=s,this.eggMoveIndex=R}setEggMoveUnlocked(A){this.eggMoveUnlocked=A}setDex(){const A=this.scene.gameData.dexData[this.pokemon.species.speciesId],s=this.scene.gameData.starterData[this.pokemon.species.getRootSpeciesId()];this.dexEntryBeforeUpdate={seenAttr:A.seenAttr,caughtAttr:A.caughtAttr,natureAttr:A.natureAttr,seenCount:A.seenCount,caughtCount:A.caughtCount,hatchedCount:A.hatchedCount,ivs:[...A.ivs]},this.starterDataEntryBeforeUpdate={moveset:s.moveset,eggMoves:s.eggMoves,candyCount:s.candyCount,friendship:s.friendship,abilityAttr:s.abilityAttr,passiveAttr:s.passiveAttr,valueReduction:s.valueReduction,classicWinCount:s.classicWinCount}}getDex(){return this.dexEntryBeforeUpdate}getStarterEntry(){return this.starterDataEntryBeforeUpdate}updatePokemon(A=!1){return new Promise(s=>{this.scene.gameData.setPokemonCaught(this.pokemon,!0,!0,A).then(()=>{this.scene.gameData.updateSpeciesDexIvs(this.pokemon.species.speciesId,this.pokemon.ivs),this.scene.gameData.setEggMoveUnlocked(this.pokemon.species,this.eggMoveIndex,A).then(R=>{this.setEggMoveUnlocked(R),s()})})})}};T(og,"EggHatchData");let Xh=og;const lg=class lg extends kA{constructor(A){super(A),this.eggHatchData=[],this.minEggsToSkip=2}start(){super.start();const A=this.scene.gameData.eggs.filter(R=>Ge.EGG_IMMEDIATE_HATCH_OVERRIDE?!0:--R.hatchWaves<1),s=A.length;this.eggHatchData=[],s>0?s>=this.minEggsToSkip&&this.scene.eggSkipPreference===1?this.scene.ui.showText(U.t("battle:eggHatching"),0,()=>{this.scene.ui.showText(U.t("battle:eggSkipPrompt"),0),this.scene.ui.setModeWithoutClear($.CONFIRM,()=>{this.hatchEggsSkipped(A),this.showSummary()},()=>{this.hatchEggsRegular(A),this.end()},null,null,null,1e3,!0)},100,!0):s>=this.minEggsToSkip&&this.scene.eggSkipPreference===2?(this.scene.queueMessage(U.t("battle:eggHatching")),this.hatchEggsSkipped(A),this.showSummary()):(this.scene.queueMessage(U.t("battle:eggHatching")),this.hatchEggsRegular(A),this.end()):this.end()}hatchEggsRegular(A){let s=A.length;for(const R of A)this.scene.unshiftPhase(new Zl(this.scene,this,R,s)),s--}hatchEggsSkipped(A){for(const s of A)this.hatchEggSilently(s)}showSummary(){this.scene.unshiftPhase(new Xl(this.scene,this.eggHatchData)),this.end()}hatchEggSilently(A){const s=this.scene.gameData.eggs.findIndex(i=>i.id===A.id);if(s===-1)return this.end();this.scene.gameData.eggs.splice(s,1);const I=this.generatePokemon(A).pokemon;I.fusionSpecies&&I.clearFusionSpecies(),I.species.subLegendary&&this.scene.validateAchv(At.HATCH_SUB_LEGENDARY),I.species.legendary&&this.scene.validateAchv(At.HATCH_LEGENDARY),I.species.mythical&&this.scene.validateAchv(At.HATCH_MYTHICAL),I.isShiny()&&this.scene.validateAchv(At.HATCH_SHINY)}generatePokemon(A){let s,R;return this.scene.executeWithSeedOffset(()=>{s=A.generatePlayerPokemon(this.scene),R=new Xh(this.scene,s,A.eggMoveIndex),R.setDex(),this.eggHatchData.push(R)},A.id,ci.toString()),R}};T(lg,"EggLapsePhase");let NL=lg;const Cg=class Cg extends LE{constructor(A,s){super(A),this.moneyMultiplier=s}start(){const A=new Jt(this.scene.getWaveMoneyAmount(this.moneyMultiplier));this.scene.applyModifiers(cR,!0,A),this.scene.arena.getTag(Me.HAPPY_HOUR)&&(A.value*=2),this.scene.addMoney(A.value);const s=navigator.language||"en-US",R=A.value.toLocaleString(s),I=U.t("battle:moneyWon",{moneyAmount:R});this.scene.ui.showText(I,null,()=>this.end(),null,!0)}};T(Cg,"MoneyRewardPhase");let Qh=Cg;const Ug=class Ug extends LE{constructor(A){super(A)}start(){var R,I,i,a,L,S,o;this.scene.disableMenu=!0,this.scene.playBgm((R=this.scene.currentBattle.trainer)==null?void 0:R.config.victoryBgm),this.scene.unshiftPhase(new Qh(this.scene,(I=this.scene.currentBattle.trainer)==null?void 0:I.config.moneyMultiplier));const A=(i=this.scene.currentBattle.trainer)==null?void 0:i.config.modifierRewardFuncs;for(const l of A)this.scene.unshiftPhase(new gE(this.scene,l));if(this.scene.eventManager.isEventActive())for(const l of(a=this.scene.currentBattle.trainer)==null?void 0:a.config.eventRewardFuncs)this.scene.unshiftPhase(new gE(this.scene,l));const s=(L=this.scene.currentBattle.trainer)==null?void 0:L.config.trainerType;Ls.hasOwnProperty(C[s])&&!this.scene.validateVoucher(Ls[C[s]])&&(S=this.scene.currentBattle.trainer)!=null&&S.config.isBoss&&this.scene.unshiftPhase(new gE(this.scene,[x.VOUCHER,x.VOUCHER,x.VOUCHER_PLUS,x.VOUCHER_PREMIUM][Ls[C[s]].voucherType])),this.scene.ui.showText(U.t("battle:trainerDefeated",{trainerName:(o=this.scene.currentBattle.trainer)==null?void 0:o.getName(qe.NONE,!0)}),null,()=>{var G,P;const l=(G=this.scene.currentBattle.trainer)==null?void 0:G.getVictoryMessages();let D;this.scene.executeWithSeedOffset(()=>D=RE(l),this.scene.currentBattle.waveIndex),D=D;const M=T(()=>{const _=c;c=T(()=>{var g;return this.scene.ui.showDialogue(D,(g=this.scene.currentBattle.trainer)==null?void 0:g.getName(qe.TRAINER,!0),null,_)},"showMessageOrEnd"),c()},"showMessage");let c=T(()=>this.end(),"showMessageOrEnd");if(l!=null&&l.length)if((P=this.scene.currentBattle.trainer)!=null&&P.config.hasCharSprite&&!this.scene.ui.shouldSkipDialogue(D)){const _=c;c=T(()=>this.scene.charSprite.hide().then(()=>this.scene.hideFieldOverlay(250).then(()=>_())),"showMessageOrEnd"),this.scene.showFieldOverlay(500).then(()=>{var g;return this.scene.charSprite.showCharacter((g=this.scene.currentBattle.trainer)==null?void 0:g.getKey(),WM(l[0])).then(()=>M())})}else M();else c()},null,!0),this.showEnemyTrainer()}};T(Ug,"TrainerVictoryPhase");let Ql=Ug;const Dg=class Dg extends zE{constructor(A,s,R=!1){super(A,s),this.isExpOnly=R}start(){var R;super.start();const A=this.scene.currentBattle.isBattleMysteryEncounter();(!A||!((R=this.scene.currentBattle.mysteryEncounter)!=null&&R.preventGameStatsUpdates))&&this.scene.gameData.gameStats.pokemonDefeated++;const s=this.getPokemon().getExpValue();if(this.scene.applyPartyExp(s,!0),A)return W6(this.scene,!1,this.isExpOnly),this.end();if(!this.scene.getEnemyParty().find(I=>this.scene.currentBattle.battleType===Nt.WILD?I.isOnField():!(I!=null&&I.isFainted(!0))))if(this.scene.pushPhase(new yi(this.scene)),this.scene.currentBattle.battleType===Nt.TRAINER&&this.scene.pushPhase(new Ql(this.scene)),this.scene.gameMode.isEndless||!this.scene.gameMode.isWaveFinal(this.scene.currentBattle.waveIndex)){if(this.scene.pushPhase(new NL(this.scene)),this.scene.gameMode.isClassic&&this.scene.currentBattle.waveIndex===O6.EVIL_BOSS_2&&this.scene.pushPhase(new gE(this.scene,x.LOCK_CAPSULE)),this.scene.currentBattle.waveIndex%10)this.scene.pushPhase(new IO(this.scene,void 0,void 0,this.getFixedBattleCustomModifiers()));else if(this.scene.gameMode.isDaily)this.scene.pushPhase(new gE(this.scene,x.EXP_CHARM)),this.scene.currentBattle.waveIndex>10&&!this.scene.gameMode.isWaveFinal(this.scene.currentBattle.waveIndex)&&this.scene.pushPhase(new gE(this.scene,x.GOLDEN_POKEBALL));else{const I=this.scene.gameMode.isEndless?10:this.scene.offsetGym?0:20;this.scene.gameMode.isEndless&&this.scene.currentBattle.waveIndex===10&&this.scene.pushPhase(new gE(this.scene,x.EXP_SHARE)),this.scene.currentBattle.waveIndex<=750&&(this.scene.currentBattle.waveIndex<=500||this.scene.currentBattle.waveIndex%30===I)&&this.scene.pushPhase(new gE(this.scene,this.scene.currentBattle.waveIndex%30!==I||this.scene.currentBattle.waveIndex>250?x.EXP_CHARM:x.SUPER_EXP_CHARM)),this.scene.currentBattle.waveIndex<=150&&!(this.scene.currentBattle.waveIndex%50)&&this.scene.pushPhase(new gE(this.scene,x.GOLDEN_POKEBALL)),this.scene.gameMode.isEndless&&!(this.scene.currentBattle.waveIndex%50)&&(this.scene.pushPhase(new gE(this.scene,this.scene.currentBattle.waveIndex%250?x.VOUCHER_PLUS:x.VOUCHER_PREMIUM)),this.scene.pushPhase(new bh(this.scene)))}this.scene.pushPhase(new rL(this.scene))}else this.scene.currentBattle.battleType=Nt.CLEAR,this.scene.score+=this.scene.gameMode.getClearScoreBonus(),this.scene.updateScoreText(),this.scene.pushPhase(new iO(this.scene,!0));this.end()}getFixedBattleCustomModifiers(){const A=this.scene.gameMode,s=this.scene.currentBattle.waveIndex;if(A.isFixedBattle(s))return A.getFixedBattle(s).customModifierRewardSettings}};T(Dg,"VictoryPhase");let KT=Dg;const Mg=class Mg{constructor(A){xe(A)||Object.assign(this,A),this.spriteScale=this.spriteScale??-1,this.ability=this.ability??-1,this.passive=this.passive??-1,this.nature=this.nature??-1,this.types=this.types??[]}};T(Mg,"CustomPokemonData");let $E=Mg;const oo=1;function tn(E,A,s,R,I){const i=Ke(E).getSpriteKey(A??!1,s??0,!1,0),a=Ke(E).getSpriteAtlasPath(A??!1,s??0,!1,0);return{spriteKey:i,fileRoot:a}}T(tn,"getSpriteKeysFromSpecies");function wM(E){const A=E.getSpeciesForm().getSpriteKey(E.getGender()===ye.FEMALE,E.formIndex,E.shiny,E.variant),s=E.getSpeciesForm().getSpriteAtlasPath(E.getGender()===ye.FEMALE,E.formIndex,E.shiny,E.variant);return{spriteKey:A,fileRoot:s}}T(wM,"getSpriteKeysFromPokemon");function F7(E,A=!1,s=!1,R=!1){const I=E.getParty();let i,a=null;const L=I.filter(o=>(!A||o.isAllowed())&&(s||!o.isFainted())),S=I.filter(o=>o.isAllowed());if(R&&L.length===1){const o=I.filter(l=>(!A||l.isAllowed())&&l.isFainted());o.length>0&&(i=le(o.length),a=o[i])}return!a&&L.length>0&&(i=le(L.length),a=L[i]),!a&&A&&S.length>0&&(i=le(S.length),a=S[i]),a||(i=le(I.length),a=I[i]),a}T(F7,"getRandomPlayerPokemon");function _1(E,A=!1,s=!1){const R=E.getParty();let I=null;for(const i of R)A&&!i.isAllowed()||!s&&i.isFainted()||(I=I?(I==null?void 0:I.level)<(i==null?void 0:i.level)?i:I:i);return I}T(_1,"getHighestLevelPlayerPokemon");function m7(E,A,s=!1,R=!1){const I=E.getParty();let i=null;for(const a of I)s&&!a.isAllowed()||!R&&a.isFainted()||(i=i?i.getStat(A)<(a==null?void 0:a.getStat(A))?a:i:a);return i}T(m7,"getHighestStatPlayerPokemon");function W7(E,A=!1,s=!1){const R=E.getParty();let I=null;for(const i of R)A&&!i.isAllowed()||!s&&i.isFainted()||(I=I?(I==null?void 0:I.stats.reduce((a,L)=>a+L))<(i==null?void 0:i.stats.reduce((a,L)=>a+L))?i:I:i);return I}T(W7,"getHighestStatTotalPlayerPokemon");function Jl(E,A,s,R=!0,I=!0,i=!0){let a=Array.isArray(E)?E[0]:E,L=Array.isArray(E)?E[1]:E,S=Object.keys(CA).map(l=>[parseInt(l),CA[l]]).filter(l=>{const D=Ke(l[0]);return D&&(!A||!A.includes(l[0]))&&(R||!D.subLegendary)&&(I||!D.legendary)&&(i||!D.mythical)}).map(l=>[Ke(l[0]),l[1]]);s&&s.length>0&&(S=S.filter(l=>s.includes(l[0].type1)||!xe(l[0].type2)&&s.includes(l[0].type2)));let o=S.filter(l=>l[1]>=a&&l[1]<=L);for(;o.length===0&&!(a===0&&L===10);)a>0?a--:L++,o=S.filter(l=>l[1]>=a&&l[1]<=L);if(o.length>0){const l=le(o.length);return Phaser.Math.RND.shuffle(o)[l][0].speciesId}return e.BULBASAUR}T(Jl,"getRandomSpeciesByStarterTier");function D6(E,A){A.hp=0,A.trySetStatus(J.FAINT),A.updateInfo(),bA(E,U.t("battle:fainted",{pokemonNameWithAffix:b(A)}))}T(D6,"koPlayerPokemon");function Y7(E,A,s){const R=Math.round(A.hp+s),I=Math.max(Math.min(R,A.getMaxHp()),0);I===0?D6(E,A):A.hp=I}T(Y7,"applyHpChangeToPokemon");function H1(E,A,s){s<=0&&console.warn("Healing pokemon with `applyDamageToPokemon` is not recommended! Please use `applyHealToPokemon` instead."),Y7(E,A,-s)}T(H1,"applyDamageToPokemon");async function Av(E,A){var I;const s=(I=x.MYSTERY_ENCOUNTER_SHUCKLE_JUICE().generateType(E.scene.getParty(),[A]))==null?void 0:I.withIdFromFunc(x.MYSTERY_ENCOUNTER_SHUCKLE_JUICE),R=s==null?void 0:s.newModifier(E);R&&(await E.scene.addModifier(R,!1,!1,!1,!0),E.calculateStats())}T(Av,"modifyPlayerPokemonBST");async function tR(E,A,s,R){const I=s.newModifier(A),i=E.findModifier(a=>a instanceof at&&a.type.id===s.id&&a.pokemonId===A.id&&a.matchType(I));i&&i.getStackCount()>=i.getMaxStackCount(E)||await E.addModifier(I,!1,!1,!1,!0)}T(tR,"applyModifierTypeToPlayerPokemon");function p7(E,A,s,R){const I=A.y;if(!R){const S=3*A.getMaxHp(),o=2*A.hp,l=A.species.catchRate,D=El(s),M=A.status?jx(A.status.effect):1,c=Math.round((S-o)*l*D/S*M);R=Math.round(65536/Math.sqrt(Math.sqrt(255/c)))}const i=A.getFieldPositionOffset(),a=OO(s),L=E.addFieldSprite(91,105,"pb",a);return L.setOrigin(.5,.625),E.field.add(L),E.time.delayedCall(300,()=>{E.field.moveBelow(L,A)}),new Promise(S=>{E.trainer.setTexture(`trainer_${E.gameData.gender===ct.FEMALE?"f":"m"}_back_pb`),E.time.delayedCall(512,()=>{E.playSound("se/pb_throw"),E.trainer.setFrame("2"),E.time.delayedCall(256,()=>{E.trainer.setFrame("3"),E.time.delayedCall(768,()=>{E.trainer.setTexture(`trainer_${E.gameData.gender===ct.FEMALE?"f":"m"}_back`)})}),E.tweens.add({targets:L,x:{value:236+i[0],ease:"Linear"},y:{value:16+i[1],ease:"Cubic.easeOut"},duration:500,onComplete:T(()=>{L.setTexture("pb",`${a}_opening`),E.time.delayedCall(17,()=>L.setTexture("pb",`${a}_open`)),E.playSound("se/pb_rel"),A.tint(FO(s)),yM(E,L.x,L.y,s),E.tweens.add({targets:A,duration:500,ease:"Sine.easeIn",scale:.25,y:20,onComplete:T(()=>{L.setTexture("pb",`${a}_opening`),A.setVisible(!1),E.playSound("se/pb_catch"),E.time.delayedCall(17,()=>L.setTexture("pb",`${a}`));const o=T(()=>{let l=0;const D=L.x,M=E.tweens.addCounter({from:0,to:1,repeat:4,yoyo:!0,ease:"Cubic.easeOut",duration:250,repeatDelay:500,onUpdate:T(c=>{if(l&&l<4){const G=c.getValue(),P=l%2===1?1:-1;L.setX(D+G*4*P),L.setAngle(G*27.5*P)}},"onUpdate"),onRepeat:T(()=>{if(!A.species.isObtainable())M.stop(),Ev(E,A,I,L,s).then(()=>S(!1));else if(l++<3)le(65536)<R?E.playSound("se/pb_move"):(M.stop(),Ev(E,A,I,L,s).then(()=>S(!1)));else{E.playSound("se/pb_lock"),C6(E,L);const c=E.add.sprite(L.x,L.y,"pb","pb");c.setOrigin(L.originX,L.originY),c.setTintFill(0),c.setAlpha(0),E.field.add(c),E.tweens.add({targets:c,alpha:.375,duration:200,easing:"Sine.easeOut",onComplete:T(()=>{E.tweens.add({targets:c,alpha:0,duration:200,easing:"Sine.easeIn",onComplete:T(()=>c.destroy(),"onComplete")})},"onComplete")})}},"onRepeat"),onComplete:T(()=>{TL(E,A,L,s).then(()=>S(!0))},"onComplete")})},"doShake");E.time.delayedCall(250,()=>Qx(E,L,16,72,350,o))},"onComplete")})},"onComplete")})})})}T(p7,"trainerThrowPokeball");function Ev(E,A,s,R,I){return new Promise(i=>{var L;E.playSound("se/pb_rel"),A.setY(s),((L=A.status)==null?void 0:L.effect)!==J.SLEEP&&A.cry(A.getHpRatio()>.25?void 0:{rate:.85}),A.tint(FO(I)),A.setVisible(!0),A.untint(250,"Sine.easeOut");const a=OO(I);R.setTexture("pb",`${a}_opening`),E.time.delayedCall(17,()=>R.setTexture("pb",`${a}_open`)),E.tweens.add({targets:A,duration:250,ease:"Sine.easeOut",scale:1}),E.currentBattle.lastUsedPokeball=I,M6(E,R),E.ui.showText(U.t("battle:pokemonBrokeFree",{pokemonName:A.getNameToRender()}),null,()=>i(),null,!0)})}T(Ev,"failCatch");async function TL(E,A,s,R,I=!0,i=!1){const a=A.fusionSpecies?A.getFusionSpeciesForm():A.getSpeciesForm();return a.abilityHidden&&(A.fusionSpecies?A.fusionAbilityIndex:A.abilityIndex)===a.getAbilityCount()-1&&E.validateAchv(At.HIDDEN_ABILITY),A.species.subLegendary&&E.validateAchv(At.CATCH_SUB_LEGENDARY),A.species.legendary&&E.validateAchv(At.CATCH_LEGENDARY),A.species.mythical&&E.validateAchv(At.CATCH_MYTHICAL),E.pokemonInfoContainer.show(A,!0),E.gameData.updateSpeciesDexIvs(A.species.getRootSpeciesId(!0),A.ivs),new Promise(L=>{const S=T(()=>{const o=T(()=>{E.getEnemyParty().some(M=>M.id===A.id)||E.getEnemyParty().push(A),E.unshiftPhase(new KT(E,A.id,!0)),E.pokemonInfoContainer.hide(),s&&M6(E,s),L()},"end"),l=T(()=>{A&&E.field.remove(A,!0)},"removePokemon"),D=T(M=>{const c=A.addToParty(R,M),G=E.findModifiers(P=>P instanceof at,!1);E.getParty().filter(P=>P.isShiny()).length===6&&E.validateAchv(At.SHINY_PARTY),Promise.all(G.map(P=>E.addModifier(P,!0))).then(()=>{E.updateModifiers(!0),l(),c?c.loadAssets().then(o):o()})},"addToParty");Promise.all([A.hideInfo(),E.gameData.setPokemonCaught(A)]).then(()=>{if(E.getParty().length===6){const M=T(()=>{E.ui.showText(U.t("battle:partyFull",{pokemonName:A.getNameToRender()}),null,()=>{E.pokemonInfoContainer.makeRoomForConfirmUi(1,!0),E.ui.setMode($.CONFIRM,()=>{const c=E.addPlayerPokemon(A.species,A.level,A.abilityIndex,A.formIndex,A.gender,A.shiny,A.variant,A.ivs,A.nature,A);E.ui.setMode($.SUMMARY,c,0,pM.DEFAULT,()=>{E.ui.setMode($.MESSAGE).then(()=>{M()})},!1)},()=>{E.ui.setMode($.PARTY,as.RELEASE,0,(c,G)=>{E.ui.setMode($.MESSAGE).then(()=>{c<6?D(c):M()})})},()=>{E.ui.setMode($.MESSAGE).then(()=>{l(),o()})},"fullParty")})},"promptRelease");M()}else D()})},"doPokemonCatchMenu");I?E.ui.showText(U.t(i?"battle:pokemonObtained":"battle:pokemonCaught",{pokemonName:A.getNameToRender()}),null,S,0,!0):S()})}T(TL,"catchPokemon");function M6(E,A){A&&E.tweens.add({targets:A,duration:250,delay:250,ease:"Sine.easeIn",alpha:0,onComplete:T(()=>{A.destroy()},"onComplete")})}T(M6,"removePb");async function y7(E,A){await new Promise(s=>{E.playSound("se/flee"),E.tweens.add({targets:A,x:"+=16",y:"-=16",alpha:0,duration:1e3,ease:"Sine.easeIn",scale:A.getSpriteScale(),onComplete:T(()=>{A.setVisible(!1),E.field.remove(A,!0),Kt(E,U.t("battle:pokemonFled",{pokemonName:A.getNameToRender()}),null,600,!1).then(()=>{s()})},"onComplete")})})}T(y7,"doPokemonFlee");function w7(E,A){return new Promise(s=>{E.tweens.add({targets:A,x:"+=16",y:"-=16",alpha:0,duration:1e3,ease:"Sine.easeIn",scale:A.getSpriteScale(),onComplete:T(()=>{A.setVisible(!1),E.field.remove(A,!0),Kt(E,U.t("battle:playerFled",{pokemonName:A.getNameToRender()}),null,600,!1).then(()=>{s()})},"onComplete")})})}T(w7,"doPlayerFlee");const sv=[[e.SCYTHER,40],[e.SCIZOR,40],[e.KLEAVOR,40],[e.PINSIR,40],[e.HERACROSS,40],[e.YANMA,40],[e.YANMEGA,40],[e.SHUCKLE,40],[e.ANORITH,40],[e.ARMALDO,40],[e.ESCAVALIER,40],[e.ACCELGOR,40],[e.JOLTIK,40],[e.GALVANTULA,40],[e.DURANT,40],[e.LARVESTA,40],[e.VOLCARONA,40],[e.DEWPIDER,40],[e.ARAQUANID,40],[e.WIMPOD,40],[e.GOLISOPOD,40],[e.SIZZLIPEDE,40],[e.CENTISKORCH,40],[e.NYMBLE,40],[e.LOKIX,40],[e.BUZZWOLE,1],[e.PHEROMOSA,1]];function V7(E){const A=sv.reduce((I,i)=>I+i[1],0),s=le(A);let R=0;for(const I of sv)if(R+=I[1],s<R){const i=Ke(I[0]);return Ke(i.getSpeciesForLevel(E,!0))}return Ke(e.SCYTHER)}T(V7,"getGoldenBugNetSpecies");function lo(E,A=0){const s=E.currentBattle;return s.getLevelForWave()+Math.max(Math.round(s.waveIndex/10*A),0)}T(lo,"getEncounterPokemonLevelForWave");async function Rv(E,A){const s=A.fusionSpecies?A.getFusionSpeciesForm():A.getSpeciesForm();return s.abilityHidden&&(A.fusionSpecies?A.fusionAbilityIndex:A.abilityIndex)===s.getAbilityCount()-1&&E.validateAchv(At.HIDDEN_ABILITY),A.species.subLegendary&&E.validateAchv(At.CATCH_SUB_LEGENDARY),A.species.legendary&&E.validateAchv(At.CATCH_LEGENDARY),A.species.mythical&&E.validateAchv(At.CATCH_MYTHICAL),E.gameData.updateSpeciesDexIvs(A.species.getRootSpeciesId(!0),A.ivs),E.gameData.setPokemonCaught(A,!0,!1,!1)}T(Rv,"addPokemonDataToDexAndValidateAchievements");function Pi(E,A,s){return E.isAllowed()?E.isAllowedInBattle()?null:UA(A,s)??null:U.t("partyUiHandler:cantBeUsed",{pokemonName:E.getNameToRender()})??null}T(Pi,"isPokemonValidForEncounterOptionSelection");function u6(E,A){E.isFusion()?(E.fusionCustomPokemonData||(E.fusionCustomPokemonData=new $E),E.fusionCustomPokemonData.ability=A):(E.customPokemonData||(E.customPokemonData=new $E),E.customPokemonData.ability=A)}T(u6,"applyAbilityOverrideToPokemon");const ug=class ug extends Phaser.GameObjects.Container{constructor(A,s){var l;if(super(A,-72,76),this.encounter=s,this.enterFromRight=s.enterIntroVisualsFromRight??!1,this.spriteConfigs=s.spriteConfigs.map(D=>{const M={...D};if(!xe(M.species)){const c=tn(M.species);M.spriteKey=c.spriteKey,M.fileRoot=c.fileRoot,M.isPokemon=!0}return M}),!this.spriteConfigs)return;const R=T((D,M,c)=>{const G=this.scene.addFieldSprite(0,0,D);return G.setOrigin(.5,1),G.setPipeline(this.scene.spritePipeline,{tone:[0,0,0,0],hasShadow:!!M,yShadowOffset:c??0}),G},"getSprite"),I=T((D,M,c)=>{const G=this.scene.add.sprite(-19,2,"items",D);return G.setOrigin(.5,1),G.setPipeline(this.scene.spritePipeline,{tone:[0,0,0,0],hasShadow:!!M,yShadowOffset:c??0}),G},"getItemSprite"),i=-40,a=40,L=4;let S=0;const o=Math.round((a-i)/Math.max(this.spriteConfigs.filter(D=>!D.x&&!D.y).length,1));(l=this.spriteConfigs)==null||l.forEach(D=>{const{spriteKey:M,isItem:c,hasShadow:G,scale:P,x:_,y:g,yShadow:H,alpha:F}=D;let p,v;c?(p=I(M,G,H),v=I(M)):(p=R(M,G,H),v=R(M)),p.setVisible(!D.hidden),v.setVisible(!1),P&&(p.setScale(P),v.setScale(P)),_||g?(_&&(p.setPosition(L+_,p.y),v.setPosition(L+_,v.y)),g&&(p.setPosition(p.x,p.y+g),v.setPosition(v.x,v.y+g))):this.spriteConfigs.length===1?(p.x=L,v.x=L):(p.x=i+(S+.5)*o+L,v.x=i+(S+.5)*o+L,S++),xe(F)||(p.setAlpha(F),v.setAlpha(F)),this.add(p),this.add(v)})}loadAssets(){return new Promise(A=>{this.spriteConfigs||A(),this.spriteConfigs.forEach(s=>{s.isPokemon?this.scene.loadPokemonAtlas(s.spriteKey,s.fileRoot):s.isItem?this.scene.loadAtlas("items",""):this.scene.loadAtlas(s.spriteKey,s.fileRoot)}),this.scene.load.once(Phaser.Loader.Events.COMPLETE,()=>{this.spriteConfigs.every(s=>{if(s.isItem)return!0;const R=console.warn;console.warn=()=>{};const I=this.scene.anims.generateFrameNames(s.spriteKey,{zeroPad:4,suffix:".png",start:1,end:128});return console.warn=R,this.scene.anims.exists(s.spriteKey)||this.scene.anims.create({key:s.spriteKey,frames:I,frameRate:12,repeat:-1}),!0}),A()}),this.scene.load.isLoading()||this.scene.load.start()})}initSprite(){this.spriteConfigs&&(this.getSprites().map((A,s)=>{this.spriteConfigs[s].isItem||A.setTexture(this.spriteConfigs[s].spriteKey).setFrame(0)}),this.getTintSprites().map((A,s)=>{this.spriteConfigs[s].isItem||A.setTexture(this.spriteConfigs[s].spriteKey).setFrame(0)}),this.spriteConfigs.every((A,s)=>{if(!A.tint)return!0;const R=this.getAt(s*2+1);return this.tint(R,0,A.tint),!0}))}tryPlaySprite(A,s,R){return A.texture.key==="__MISSING"?(console.error(`No texture found for '${R.key}'!`),!1):A.texture.frameTotal<=1?(console.warn(`No animation found for '${R.key}'. Is this intentional?`),!1):(A.play(R),s.play(R),!0)}playAnim(){if(!this.spriteConfigs)return;const A=this.getSprites(),s=this.getTintSprites();this.spriteConfigs.forEach((R,I)=>{if(!R.disableAnimation){const i={key:R.spriteKey,repeat:R!=null&&R.repeat?-1:0,startFrame:(R==null?void 0:R.startFrame)??0};this.tryPlaySprite(A[I],s[I],i)}})}getSpriteAtIndex(A){if(!this.spriteConfigs)return[];const s=[];return s.push(this.getAt(A*2)),s.push(this.getAt(A*2+1)),s}getSprites(){if(!this.spriteConfigs)return[];const A=[];return this.spriteConfigs.forEach((s,R)=>{A.push(this.getAt(R*2))}),A}getTintSprites(){if(!this.spriteConfigs)return[];const A=[];return this.spriteConfigs.forEach((s,R)=>{A.push(this.getAt(R*2+1))}),A}tint(A,s,R,I,i){A.setTintFill(s),A.setVisible(!0),I?(A.setAlpha(0),this.scene.tweens.add({targets:A,alpha:R||1,duration:I,ease:i||"Linear"})):A.setAlpha(R)}tintAll(A,s,R,I){this.getTintSprites().map(a=>{this.tint(a,A,s,R,I)})}untint(A,s,R){s?this.scene.tweens.add({targets:A,alpha:0,duration:s,ease:R||"Linear",onComplete:T(()=>{A.setVisible(!1),A.setAlpha(1)},"onComplete")}):(A.setVisible(!1),A.setAlpha(1))}untintAll(A,s){this.getTintSprites().map(I=>{this.untint(I,A,s)})}setVisible(A){return this.getSprites().forEach(s=>{s.setVisible(A)}),super.setVisible(A)}};T(ug,"MysteryEncounterIntroVisuals");let FT=ug;var N=(E=>(E[E.ALL=-1]="ALL",E[E.DAWN=0]="DAWN",E[E.DAY=1]="DAY",E[E.DUSK=2]="DUSK",E[E.NIGHT=3]="NIGHT",E))(N||{});const hg=class hg{};T(hg,"EncounterSceneRequirement");let wi=hg;const cg=class cg{};T(cg,"EncounterPokemonRequirement");let pO=cg;const nN=class nN extends pO{static Some(...A){return new nN(!1,...A)}static Every(...A){return new nN(!0,...A)}constructor(A,...s){super(),this.isAnd=A,this.invertQuery=!1,this.minNumberOfPokemon=1,this.requirements=s}meetsRequirement(A){return this.isAnd?this.requirements.every(s=>s.meetsRequirement(A)):this.requirements.some(s=>s.meetsRequirement(A))}queryParty(A){if(this.isAnd)return this.requirements.reduce((s,R)=>R.queryParty(s),A);{const s=this.requirements.find(R=>R.queryParty(A).length>0);return s?s.queryParty(A):[]}}getDialogueToken(A,s){if(this.isAnd)throw new Error("Not implemented (Sorry)");for(const R of this.requirements)if(R.meetsRequirement(A))return R.getDialogueToken(A,s);return this.requirements[0].getDialogueToken(A,s)}};T(nN,"CombinationPokemonRequirement");let Vi=nN;const Gg=class Gg extends wi{constructor(A){super(),this.waveRange=A}meetsRequirement(A){if(!xe(this.waveRange)&&this.waveRange[0]<=this.waveRange[1]){const s=A.currentBattle.waveIndex;if(s>=0&&this.waveRange[0]>=0&&this.waveRange[0]>s||this.waveRange[1]>=0&&this.waveRange[1]<s)return!1}return!0}getDialogueToken(A,s){return["waveIndex",A.currentBattle.waveIndex.toString()]}};T(Gg,"WaveRangeRequirement");let Jh=Gg;const Pg=class Pg extends wi{constructor(A,s){super(),this.waveModuli=A,this.modulusValue=s}meetsRequirement(A){return this.waveModuli.includes(A.currentBattle.waveIndex%this.modulusValue)}getDialogueToken(A,s){return["waveIndex",A.currentBattle.waveIndex.toString()]}};T(Pg,"WaveModulusRequirement");let $h=Pg;const _g=class _g extends wi{constructor(A,s){super(),this.partySizeRange=A,this.excludeDisallowedPokemon=s}meetsRequirement(A){if(!xe(this.partySizeRange)&&this.partySizeRange[0]<=this.partySizeRange[1]){const s=this.excludeDisallowedPokemon?A.getParty().filter(R=>R.isAllowedInBattle()).length:A.getParty().length;if(s>=0&&this.partySizeRange[0]>=0&&this.partySizeRange[0]>s||this.partySizeRange[1]>=0&&this.partySizeRange[1]<s)return!1}return!0}getDialogueToken(A,s){return["partySize",A.getParty().length.toString()]}};T(_g,"PartySizeRequirement");let qh=_g;const Hg=class Hg extends wi{constructor(A,s=1){super(),this.minNumberOfItems=s,this.requiredHeldItemModifiers=Array.isArray(A)?A:[A]}meetsRequirement(A){var I;const s=A.getParty();if(xe(s)||((I=this.requiredHeldItemModifiers)==null?void 0:I.length)<0)return!1;let R=0;return this.requiredHeldItemModifiers.forEach(i=>{const a=A.findModifiers(L=>L.constructor.name===i);(a==null?void 0:a.length)>0&&a.forEach(L=>{R+=L.stackCount})}),R>=this.minNumberOfItems}getDialogueToken(A,s){return["requiredItem",this.requiredHeldItemModifiers[0]]}};T(Hg,"PersistentModifierRequirement");let $l=Hg;const dg=class dg extends wi{constructor(A,s){super(),this.requiredMoney=A??0,this.scalingMultiplier=s??0}meetsRequirement(A){const s=A.money;return xe(s)?!1:(this.scalingMultiplier>0&&(this.requiredMoney=A.getWaveMoneyAmount(this.scalingMultiplier)),!(this.requiredMoney>0&&this.requiredMoney>s))}getDialogueToken(A,s){return["money",this.scalingMultiplier>0?A.getWaveMoneyAmount(this.scalingMultiplier).toString():this.requiredMoney.toString()]}};T(dg,"MoneyRequirement");let yO=dg;const fg=class fg extends pO{constructor(A,s=!0,R=1,I=!1){super(),this.excludeFainted=s,this.minNumberOfPokemon=R,this.invertQuery=I,this.requiredType=Array.isArray(A)?A:[A]}meetsRequirement(A){let s=A.getParty();return xe(s)?!1:(this.excludeFainted&&(s=s.filter(R=>!R.isFainted())),this.queryParty(s).length>=this.minNumberOfPokemon)}queryParty(A){return this.invertQuery?A.filter(s=>this.requiredType.filter(R=>s.getTypes().includes(R)).length===0):A.filter(s=>this.requiredType.filter(R=>s.getTypes().includes(R)).length>0)}getDialogueToken(A,s){const R=this.requiredType.filter(I=>s==null?void 0:s.getTypes().includes(I));return R.length>0?["type",n[R[0]]]:["type",""]}};T(fg,"TypeRequirement");let SL=fg;const Bg=class Bg extends pO{constructor(A,s,R=1,I=!1){super(),this.requiredMoves=[],this.excludeDisallowedPokemon=s,this.minNumberOfPokemon=R,this.invertQuery=I,this.requiredMoves=Array.isArray(A)?A:[A]}meetsRequirement(A){var R;const s=A.getParty();return xe(s)||((R=this.requiredMoves)==null?void 0:R.length)<0?!1:this.queryParty(s).length>=this.minNumberOfPokemon}queryParty(A){return this.invertQuery?A.filter(s=>(!this.excludeDisallowedPokemon||s.isAllowedInBattle())&&!s.moveset.some(R=>(R==null?void 0:R.moveId)&&this.requiredMoves.includes(R.moveId))):A.filter(s=>(!this.excludeDisallowedPokemon||s.isAllowedInBattle())&&s.moveset.some(R=>(R==null?void 0:R.moveId)&&this.requiredMoves.includes(R.moveId)))}getDialogueToken(A,s){const R=s==null?void 0:s.moveset.filter(I=>(I==null?void 0:I.moveId)&&this.requiredMoves.includes(I.moveId));return R&&R.length>0&&R[0]?["move",R[0].getName()]:["move",""]}};T(Bg,"MoveRequirement");let KI=Bg;const gg=class gg extends pO{constructor(A,s,R=1,I=!1){super(),this.excludeDisallowedPokemon=s,this.minNumberOfPokemon=R,this.invertQuery=I,this.requiredAbilities=Array.isArray(A)?A:[A]}meetsRequirement(A){var R;const s=A.getParty();return xe(s)||((R=this.requiredAbilities)==null?void 0:R.length)<0?!1:this.queryParty(s).length>=this.minNumberOfPokemon}queryParty(A){return this.invertQuery?A.filter(s=>(!this.excludeDisallowedPokemon||s.isAllowedInBattle())&&this.requiredAbilities.filter(R=>s.hasAbility(R,!1)).length===0):A.filter(s=>(!this.excludeDisallowedPokemon||s.isAllowedInBattle())&&this.requiredAbilities.some(R=>s.hasAbility(R,!1)))}getDialogueToken(A,s){const R=this.requiredAbilities.find(I=>s==null?void 0:s.hasAbility(I,!1));return xe(R)?["ability",""]:["ability",jA[R].name]}};T(gg,"AbilityRequirement");let ql=gg;const Kg=class Kg extends pO{constructor(A,s=1,R=!1){super(),this.minNumberOfPokemon=s,this.invertQuery=R,this.requiredStatusEffect=Array.isArray(A)?A:[A]}meetsRequirement(A){var I;const s=A.getParty();return xe(s)||((I=this.requiredStatusEffect)==null?void 0:I.length)<0?!1:this.queryParty(s).length>=this.minNumberOfPokemon}queryParty(A){return this.invertQuery?A.filter(s=>!this.requiredStatusEffect.some(R=>{var I;return R===J.NONE?xe(s.status)||xe(s.status.effect)||s.status.effect===R:((I=s.status)==null?void 0:I.effect)===R})):A.filter(s=>this.requiredStatusEffect.some(R=>{var I;return R===J.NONE?xe(s.status)||xe(s.status.effect)||s.status.effect===R:((I=s.status)==null?void 0:I.effect)===R}))}getDialogueToken(A,s){const R=this.requiredStatusEffect.filter(I=>{var i;return I===J.NONE?xe(s==null?void 0:s.status)||xe(s.status.effect)||s.status.effect===I:((i=s.status)==null?void 0:i.effect)===I});return R.length>0?["status",J[R[0]]]:["status",""]}};T(Kg,"StatusEffectRequirement");let jh=Kg;const Fg=class Fg extends pO{constructor(A,s=1,R=!1,I=!0){super(),this.minNumberOfPokemon=s,this.invertQuery=R,this.requiredHeldItemModifiers=Array.isArray(A)?A:[A],this.requireTransferable=I}meetsRequirement(A){const s=A.getParty();return xe(s)?!1:this.queryParty(s).length>=this.minNumberOfPokemon}queryParty(A){return this.invertQuery?A.filter(s=>s.getHeldItems().filter(R=>!this.requiredHeldItemModifiers.some(I=>R.constructor.name===I)&&(!this.requireTransferable||R.isTransferable)).length>0):A.filter(s=>this.requiredHeldItemModifiers.some(R=>s.getHeldItems().some(I=>I.constructor.name===R&&(!this.requireTransferable||I.isTransferable))))}getDialogueToken(A,s){const R=s==null?void 0:s.getHeldItems().filter(I=>this.requiredHeldItemModifiers.some(i=>I.constructor.name===i)&&(!this.requireTransferable||I.isTransferable));return R&&R.length>0?["heldItem",R[0].type.name]:["heldItem",""]}};T(Fg,"HeldItemRequirement");let MI=Fg;const mg=class mg extends pO{constructor(A,s=1,R=!1,I=!0){super(),this.minNumberOfPokemon=s,this.invertQuery=R,this.requiredHeldItemTypes=Array.isArray(A)?A:[A],this.requireTransferable=I}meetsRequirement(A){const s=A.getParty();return xe(s)?!1:this.queryParty(s).length>=this.minNumberOfPokemon}queryParty(A){return this.invertQuery?A.filter(s=>s.getHeldItems().filter(R=>!this.requiredHeldItemTypes.some(I=>R instanceof an&&R.type.moveType===I&&(!this.requireTransferable||R.isTransferable))).length>0):A.filter(s=>this.requiredHeldItemTypes.some(R=>s.getHeldItems().some(I=>I instanceof an&&I.type.moveType===R&&(!this.requireTransferable||I.isTransferable))))}getDialogueToken(A,s){const R=s==null?void 0:s.getHeldItems().filter(I=>this.requiredHeldItemTypes.some(i=>I instanceof an&&I.type.moveType===i)&&(!this.requireTransferable||I.isTransferable));return R&&R.length>0?["heldItem",R[0].type.name]:["heldItem",""]}};T(mg,"AttackTypeBoosterHeldItemTypeRequirement");let jl=mg;const Wg=class Wg extends pO{constructor(A,s=1,R=!1){super(),this.minNumberOfPokemon=s,this.invertQuery=R,this.requiredHealthRange=A}meetsRequirement(A){if(!xe(this.requiredHealthRange)&&this.requiredHealthRange[0]<=this.requiredHealthRange[1]){const s=A.getParty();if(this.queryParty(s).length<this.minNumberOfPokemon)return!1}return!0}queryParty(A){return this.invertQuery?A.filter(s=>s.getHpRatio()<this.requiredHealthRange[0]||s.getHpRatio()>this.requiredHealthRange[1]):A.filter(s=>s.getHpRatio()>=this.requiredHealthRange[0]&&s.getHpRatio()<=this.requiredHealthRange[1])}getDialogueToken(A,s){const R=s==null?void 0:s.getHpRatio();return xe(R)?["healthRatio",""]:["healthRatio",Math.floor(R*100).toString()+"%"]}};T(Wg,"HealthRatioRequirement");let zh=Wg;const Yg=class Yg extends pO{constructor(A,s={}){super(),this.requiredMoves=Array.isArray(A)?A:[A],this.excludeLevelMoves=s.excludeLevelMoves??!1,this.excludeTmMoves=s.excludeTmMoves??!1,this.excludeEggMoves=s.excludeEggMoves??!1,this.includeFainted=s.includeFainted??!1,this.minNumberOfPokemon=s.minNumberOfPokemon??1,this.invertQuery=s.invertQuery??!1}meetsRequirement(A){var R;const s=A.getParty().filter(I=>this.includeFainted?I.isAllowed():I.isAllowedInBattle());return xe(s)||((R=this.requiredMoves)==null?void 0:R.length)<0?!1:this.queryParty(s).length>=this.minNumberOfPokemon}queryParty(A){return this.invertQuery?A.filter(s=>!this.requiredMoves.some(R=>this.getAllPokemonMoves(s).includes(R))):A.filter(s=>this.requiredMoves.every(R=>this.getAllPokemonMoves(s).includes(R)))}getDialogueToken(A,s){return["requiredMoves",this.requiredMoves.map(R=>new ke(R).getName()).join(", ")]}getPokemonLevelMoves(A){return A.getLevelMoves().map(([s,R])=>R)}getAllPokemonMoves(A){const s=[];return this.excludeLevelMoves||s.push(...this.getPokemonLevelMoves(A)??[]),this.excludeTmMoves||s.push(...A.compatibleTms??[]),this.excludeEggMoves||s.push(...A.getEggMoves()??[]),s}};T(Yg,"CanLearnMoveRequirement");let ec=Yg;var It=(E=>(E[E.DEFAULT=0]="DEFAULT",E[E.DISABLED_OR_DEFAULT=1]="DISABLED_OR_DEFAULT",E[E.DEFAULT_OR_SPECIAL=2]="DEFAULT_OR_SPECIAL",E[E.DISABLED_OR_SPECIAL=3]="DISABLED_OR_SPECIAL",E))(It||{});const pg=class pg{constructor(A){xe(A)||Object.assign(this,A),this.hasDexProgress=this.hasDexProgress??!1,this.requirements=this.requirements??[],this.primaryPokemonRequirements=this.primaryPokemonRequirements??[],this.secondaryPokemonRequirements=this.secondaryPokemonRequirements??[]}hasRequirements(){return this.requirements.length>0||this.primaryPokemonRequirements.length>0||this.secondaryPokemonRequirements.length>0}meetsRequirements(A){return!this.requirements.some(s=>!s.meetsRequirement(A))&&this.meetsSupportingRequirementAndSupportingPokemonSelected(A)&&this.meetsPrimaryRequirementAndPrimaryPokemonSelected(A)}pokemonMeetsPrimaryRequirements(A,s){return!this.primaryPokemonRequirements.some(R=>!R.queryParty(A.getParty()).map(I=>I.id).includes(s.id))}meetsPrimaryRequirementAndPrimaryPokemonSelected(A){if(!this.primaryPokemonRequirements||this.primaryPokemonRequirements.length===0)return!0;let s=A.getParty();for(const R of this.primaryPokemonRequirements)if(R.meetsRequirement(A)){const I=R.queryParty(A.getParty());s=s.filter(i=>I.includes(i))}else return this.primaryPokemon=void 0,!1;if(s.length===0)return!1;if(this.excludePrimaryFromSecondaryRequirements&&this.secondaryPokemon&&this.secondaryPokemon.length>0){const R=[],I=[];for(const i of s)this.secondaryPokemon.includes(i)?I.push(i):R.push(i);return R.length>0?(this.primaryPokemon=R[le(R.length)],!0):I.length>1||this.secondaryPokemon.length-I.length>=1?(this.primaryPokemon=I[le(I.length)],this.secondaryPokemon=this.secondaryPokemon.filter(i=>i!==this.primaryPokemon),!0):!1}else return this.primaryPokemon=s[0],!0}meetsSupportingRequirementAndSupportingPokemonSelected(A){if(!this.secondaryPokemonRequirements||this.secondaryPokemonRequirements.length===0)return this.secondaryPokemon=[],!0;let s=A.getParty();for(const R of this.secondaryPokemonRequirements)if(R.meetsRequirement(A)){const I=R.queryParty(A.getParty());s=s.filter(i=>I.includes(i))}else return this.secondaryPokemon=[],!1;return this.secondaryPokemon=s,!0}};T(pg,"MysteryEncounterOption");let tc=pg;const iM=class iM{constructor(){this.optionMode=It.DEFAULT,this.requirements=[],this.primaryPokemonRequirements=[],this.secondaryPokemonRequirements=[],this.excludePrimaryFromSecondaryRequirements=!1,this.isDisabledOnRequirementsNotMet=!0,this.hasDexProgress=!1}static newOptionWithMode(A){return Object.assign(new iM,{optionMode:A})}withHasDexProgress(A){return Object.assign(this,{hasDexProgress:A})}withSceneRequirement(A){return this.requirements.push(A),Object.assign(this,{requirements:this.requirements})}withSceneMoneyRequirement(A,s){return this.withSceneRequirement(new yO(A,s))}withPreOptionPhase(A){return Object.assign(this,{onPreOptionPhase:A})}withOptionPhase(A){return Object.assign(this,{onOptionPhase:A})}withPostOptionPhase(A){return Object.assign(this,{onPostOptionPhase:A})}withPrimaryPokemonRequirement(A){return this.primaryPokemonRequirements.push(A),Object.assign(this,{primaryPokemonRequirements:this.primaryPokemonRequirements})}withPokemonTypeRequirement(A,s,R,I){return this.withPrimaryPokemonRequirement(new SL(A,s,R,I))}withPokemonCanLearnMoveRequirement(A,s){return this.withPrimaryPokemonRequirement(new ec(A,s))}withSecondaryPokemonRequirement(A,s=!0){return this.secondaryPokemonRequirements.push(A),this.excludePrimaryFromSecondaryRequirements=s,Object.assign(this,{secondaryPokemonRequirements:this.secondaryPokemonRequirements})}withDialogue(A){return this.dialogue=A,this}build(){return new tc(this)}};T(iM,"MysteryEncounterOptionBuilder");let Dt=iM;var Gt=(E=>(E[E.COMMON=66]="COMMON",E[E.GREAT=40]="GREAT",E[E.ULTRA=19]="ULTRA",E[E.ROGUE=3]="ROGUE",E[E.MASTER=0]="MASTER",E))(Gt||{});const v7=2,x7=1,yg=class yg{constructor(A){this.startOfBattleEffects=[],xe(A)||Object.assign(this,A),this.encounterTier=this.encounterTier??Gt.COMMON,this.localizationKey=this.localizationKey??"",this.dialogue=this.dialogue??{},this.spriteConfigs=this.spriteConfigs?[...this.spriteConfigs]:[],this.maxAllowedEncounters=this.maxAllowedEncounters??this.encounterTier===Gt.ROGUE?x7:v7,this.encounterMode=sE.DEFAULT,this.requirements=this.requirements?this.requirements:[],this.hideBattleIntroMessage=this.hideBattleIntroMessage??!1,this.autoHideIntroVisuals=this.autoHideIntroVisuals??!0,this.enterIntroVisualsFromRight=this.enterIntroVisualsFromRight??!1,this.continuousEncounter=this.continuousEncounter??!1,this.startOfBattleEffectsComplete=!1,this.lockEncounterRewardTiers=!0,this.dialogueTokens={},this.enemyPartyConfigs=[],this.startOfBattleEffects=[],this.introVisuals=void 0,this.misc=null,this.expMultiplier=1,this.loadAssets=[]}meetsRequirements(A){const s=!this.requirements.some(i=>!i.meetsRequirement(A)),R=this.meetsSecondaryRequirementAndSecondaryPokemonSelected(A),I=this.meetsPrimaryRequirementAndPrimaryPokemonSelected(A);return s&&R&&I}pokemonMeetsPrimaryRequirements(A,s){return!this.primaryPokemonRequirements.some(R=>!R.queryParty(A.getParty()).map(I=>I.id).includes(s.id))}meetsPrimaryRequirementAndPrimaryPokemonSelected(A){if(!this.primaryPokemonRequirements||this.primaryPokemonRequirements.length===0){const R=A.getParty().filter(I=>I.isActive(!0));return R.length>0?this.primaryPokemon=R[0]:this.primaryPokemon=A.getParty().filter(I=>I.isAllowedInBattle())[0],!0}let s=A.getParty();for(const R of this.primaryPokemonRequirements)if(R.meetsRequirement(A))s=s.filter(I=>R.queryParty(A.getParty()).includes(I));else return this.primaryPokemon=void 0,!1;if(s.length===0)return!1;if(this.excludePrimaryFromSupportRequirements&&this.secondaryPokemon&&this.secondaryPokemon.length>0){const R=[],I=[];for(const i of s)this.secondaryPokemon.includes(i)?I.push(i):R.push(i);return R.length>0?(this.primaryPokemon=R[le(R.length,0)],!0):I.length>1||this.secondaryPokemon.length-I.length>=1?(this.primaryPokemon=I[le(I.length,0)],this.secondaryPokemon=this.secondaryPokemon.filter(i=>i!==this.primaryPokemon),!0):!1}else return this.primaryPokemon=s[le(s.length,0)],!0}meetsSecondaryRequirementAndSecondaryPokemonSelected(A){if(!this.secondaryPokemonRequirements||this.secondaryPokemonRequirements.length===0)return this.secondaryPokemon=[],!0;let s=A.getParty();for(const R of this.secondaryPokemonRequirements)if(R.meetsRequirement(A))s=s.filter(I=>R.queryParty(A.getParty()).includes(I));else return this.secondaryPokemon=[],!1;return this.secondaryPokemon=s,!0}initIntroVisuals(A){this.introVisuals=new FT(A,this)}populateDialogueTokensFromRequirements(A){var s,R,I;if(this.meetsRequirements(A),((s=this.requirements)==null?void 0:s.length)>0)for(const i of this.requirements){const a=i.getDialogueToken(A);(a==null?void 0:a.length)===2&&this.setDialogueToken(...a)}if(this.primaryPokemon&&this.primaryPokemon.length>0){this.setDialogueToken("primaryName",this.primaryPokemon.getNameToRender());for(const i of this.primaryPokemonRequirements)if(!i.invertQuery){const a=i.getDialogueToken(A,this.primaryPokemon);(a==null?void 0:a.length)===2&&this.setDialogueToken("primary"+Sa(a[0]),a[1])}}if(((R=this.secondaryPokemonRequirements)==null?void 0:R.length)>0&&this.secondaryPokemon&&this.secondaryPokemon.length>0){this.setDialogueToken("secondaryName",this.secondaryPokemon[0].getNameToRender());for(const i of this.secondaryPokemonRequirements)if(!i.invertQuery){const a=i.getDialogueToken(A,this.secondaryPokemon[0]);(a==null?void 0:a.length)===2&&this.setDialogueToken("primary"+Sa(a[0]),a[1]),this.setDialogueToken("secondary"+Sa(a[0]),a[1])}}for(let i=0;i<this.options.length;i++){const a=this.options[i];a.meetsRequirements(A);const L=i+1;if(a.requirements.length>0)for(const S of a.requirements){const o=S.getDialogueToken(A);(o==null?void 0:o.length)===2&&this.setDialogueToken("option"+L+Sa(o[0]),o[1])}if(a.primaryPokemonRequirements.length>0&&a.primaryPokemon){this.setDialogueToken("option"+L+"PrimaryName",a.primaryPokemon.getNameToRender());for(const S of a.primaryPokemonRequirements)if(!S.invertQuery){const o=S.getDialogueToken(A,a.primaryPokemon);(o==null?void 0:o.length)===2&&this.setDialogueToken("option"+L+"Primary"+Sa(o[0]),o[1])}}if(((I=a.secondaryPokemonRequirements)==null?void 0:I.length)>0&&a.secondaryPokemon&&a.secondaryPokemon.length>0){this.setDialogueToken("option"+L+"SecondaryName",a.secondaryPokemon[0].getNameToRender());for(const S of a.secondaryPokemonRequirements)if(!S.invertQuery){const o=S.getDialogueToken(A,a.secondaryPokemon[0]);(o==null?void 0:o.length)===2&&this.setDialogueToken("option"+L+"Secondary"+Sa(o[0]),o[1])}}}}setDialogueToken(A,s){this.dialogueTokens[A]=s}getSeedOffset(){return this.seedOffset}updateSeedOffset(A){const s=this.seedOffset??A.currentBattle.waveIndex*1e3;this.seedOffset=s+512}};T(yg,"MysteryEncounter");let mT=yg;const aM=class aM{constructor(){this.enemyPartyConfigs=[],this.localizationKey="",this.dialogue={},this.requirements=[],this.primaryPokemonRequirements=[],this.secondaryPokemonRequirements=[],this.excludePrimaryFromSupportRequirements=!0,this.dialogueTokens={},this.hideBattleIntroMessage=!1,this.autoHideIntroVisuals=!0,this.enterIntroVisualsFromRight=!1,this.continuousEncounter=!1,this.catchAllowed=!1,this.fleeAllowed=!0,this.lockEncounterRewardTiers=!1,this.startOfBattleEffectsComplete=!1,this.hasBattleAnimationsWithoutTargets=!1,this.skipEnemyBattleTurns=!1,this.skipToFightInput=!1,this.preventGameStatsUpdates=!1,this.maxAllowedEncounters=3,this.expMultiplier=1}static withEncounterType(A){return Object.assign(new aM,{encounterType:A})}withOption(A){return this.options?(this.options.push(A),this):Object.assign(this,{options:[A]})}withSimpleOption(A,s){return this.withOption(Dt.newOptionWithMode(It.DEFAULT).withDialogue(A).withOptionPhase(s).build())}withSimpleDexProgressOption(A,s){return this.withOption(Dt.newOptionWithMode(It.DEFAULT).withHasDexProgress(!0).withDialogue(A).withOptionPhase(s).build())}withIntroSpriteConfigs(A){return Object.assign(this,{spriteConfigs:A})}withIntroDialogue(A=[]){return this.dialogue={...this.dialogue,intro:A},this}withIntro({spriteConfigs:A,dialogue:s}){return this.withIntroSpriteConfigs(A).withIntroDialogue(s)}setLocalizationKey(A){return this.localizationKey=A,this}withEncounterTier(A){return Object.assign(this,{encounterTier:A})}withAnimations(...A){const s=Array.isArray(A)?A:[A];return Object.assign(this,{encounterAnimations:s})}withDisallowedGameModes(...A){const s=Array.isArray(A)?A:[A];return Object.assign(this,{disallowedGameModes:s})}withDisallowedChallenges(...A){const s=Array.isArray(A)?A:[A];return Object.assign(this,{disallowedChallenges:s})}withContinuousEncounter(A){return Object.assign(this,{continuousEncounter:A})}withBattleAnimationsWithoutTargets(A){return Object.assign(this,{hasBattleAnimationsWithoutTargets:A})}withSkipEnemyBattleTurns(A){return Object.assign(this,{skipEnemyBattleTurns:A})}withSkipToFightInput(A){return Object.assign(this,{skipToFightInput:A})}withPreventGameStatsUpdates(A){return Object.assign(this,{preventGameStatsUpdates:A})}withMaxAllowedEncounters(A){return Object.assign(this,{maxAllowedEncounters:A})}withSceneRequirement(A){return this.requirements.push(A),this}withSceneWaveRangeRequirement(A,s){return this.withSceneRequirement(new Jh([A,s??A]))}withScenePartySizeRequirement(A,s,R=!1){return this.withSceneRequirement(new qh([A,s??A],R))}withPrimaryPokemonRequirement(A){return this.primaryPokemonRequirements.push(A),Object.assign(this,{primaryPokemonRequirements:this.primaryPokemonRequirements})}withPrimaryPokemonStatusEffectRequirement(A,s=1,R=!1){return this.withPrimaryPokemonRequirement(new jh(A,s,R))}withPrimaryPokemonHealthRatioRequirement(A,s=1,R=!1){return this.withPrimaryPokemonRequirement(new zh(A,s,R))}withSecondaryPokemonRequirement(A,s=!1){return this.secondaryPokemonRequirements.push(A),this.excludePrimaryFromSupportRequirements=s,Object.assign(this,{excludePrimaryFromSecondaryRequirements:this.excludePrimaryFromSupportRequirements,secondaryPokemonRequirements:this.secondaryPokemonRequirements})}withRewards(A){return Object.assign(this,{doEncounterRewards:A})}withExp(A){return Object.assign(this,{doEncounterExp:A})}withOnInit(A){return Object.assign(this,{onInit:A})}withOnVisualsStart(A){return Object.assign(this,{onVisualsStart:A})}withCatchAllowed(A){return Object.assign(this,{catchAllowed:A})}withFleeAllowed(A){return Object.assign(this,{fleeAllowed:A})}withHideWildIntroMessage(A){return Object.assign(this,{hideBattleIntroMessage:A})}withAutoHideIntroVisuals(A){return Object.assign(this,{autoHideIntroVisuals:A})}withEnterIntroVisualsFromRight(A){return Object.assign(this,{enterIntroVisualsFromRight:A})}withTitle(A){const s=this.dialogue.encounterOptionsDialogue??{};return this.dialogue={...this.dialogue,encounterOptionsDialogue:{...s,title:A}},this}withDescription(A){const s=this.dialogue.encounterOptionsDialogue??{};return this.dialogue={...this.dialogue,encounterOptionsDialogue:{...s,description:A}},this}withQuery(A){const s=this.dialogue.encounterOptionsDialogue??{};return this.dialogue={...this.dialogue,encounterOptionsDialogue:{...s,query:A}},this}withOutroDialogue(A=[]){return this.dialogue={...this.dialogue,outro:A},this}build(){return new mT(this)}};T(aM,"MysteryEncounterBuilder");let MA=aM;const Us="mysteryEncounters/darkDeal",b7=[e.NECROZMA,e.COSMOG,e.COSMOEM,e.SOLGALEO,e.LUNALA,e.ETERNATUS,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.ROARING_MOON,e.KORAIDON,e.WALKING_WAKE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.IRON_VALIANT,e.MIRAIDON,e.IRON_LEAVES,e.IRON_BOULDER,e.IRON_CROWN,e.MEW,e.CELEBI,e.DEOXYS,e.JIRACHI,e.DARKRAI,e.PHIONE,e.MANAPHY,e.ARCEUS,e.SHAYMIN,e.VICTINI,e.MELOETTA,e.KELDEO,e.GENESECT,e.DIANCIE,e.HOOPA,e.VOLCANION,e.MAGEARNA,e.MARSHADOW,e.ZERAORA,e.ZARUDE,e.MELTAN,e.MELMETAL,e.PECHARUNT],k7=MA.withEncounterType(me.DARK_DEAL).withEncounterTier(Gt.ROGUE).withIntroSpriteConfigs([{spriteKey:"dark_deal_scientist",fileRoot:"mystery-encounters",hasShadow:!0},{spriteKey:"dark_deal_porygon",fileRoot:"mystery-encounters",hasShadow:!0,repeat:!0}]).withIntroDialogue([{text:`${Us}:intro`},{speaker:`${Us}:speaker`,text:`${Us}:intro_dialogue`}]).withSceneWaveRangeRequirement(30,HA[1]).withScenePartySizeRequirement(2,6,!0).withCatchAllowed(!0).setLocalizationKey(`${Us}`).withTitle(`${Us}:title`).withDescription(`${Us}:description`).withQuery(`${Us}:query`).withOption(Dt.newOptionWithMode(It.DEFAULT).withDialogue({buttonLabel:`${Us}:option.1.label`,buttonTooltip:`${Us}:option.1.tooltip`,selected:[{speaker:`${Us}:speaker`,text:`${Us}:option.1.selected_dialogue`},{text:`${Us}:option.1.selected_message`}]}).withPreOptionPhase(async E=>{const A=F7(E,!0,!1,!0),s=A.getHeldItems().filter(I=>!(I instanceof AR));E.removePokemonFromPlayerParty(A);const R=E.currentBattle.mysteryEncounter;R.setDialogueToken("pokeName",A.getNameToRender()),R.misc={removedTypes:A.getTypes(),modifiers:s}}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter;E.unshiftPhase(new gE(E,x.ROGUE_BALL));let s=A.misc.removedTypes;const R=E.gameMode.challenges.filter(l=>l.value&&l.id===ht.SINGLE_TYPE);E.gameMode.isChallenge&&R.length>0&&(s=R.map(l=>l.value-1));const I=A.misc.modifiers,i=le(100),a=i>=65?6:i>=15?7:i>=5?8:[9,10],L=Ke(Jl(a,b7,s)),S={species:L,isBoss:!0,modifierConfigs:I.map(l=>({modifier:l,stackCount:l.getStackCount()}))};!xe(L.forms)&&L.forms.length>0&&(S.formIndex=0),await mA(E,{pokemonConfigs:[S]})}).build()).withSimpleOption({buttonLabel:`${Us}:option.2.label`,buttonTooltip:`${Us}:option.2.tooltip`,selected:[{speaker:`${Us}:speaker`,text:`${Us}:option.2.selected`}]},async E=>(Lt(E,!0),!0)).withOutroDialogue([{text:`${Us}:outro`}]).build(),ds="mysteryEncounters/departmentStoreSale",Z7=MA.withEncounterType(me.DEPARTMENT_STORE_SALE).withEncounterTier(Gt.COMMON).withSceneWaveRangeRequirement(HA[0],100).withIntroSpriteConfigs([{spriteKey:"department_store_sale_lady",fileRoot:"mystery-encounters",hasShadow:!0,x:-20},{spriteKey:"",fileRoot:"",species:e.FURFROU,hasShadow:!0,repeat:!0,x:30}]).withIntroDialogue([{text:`${ds}:intro`},{text:`${ds}:intro_dialogue`,speaker:`${ds}:speaker`}]).withAutoHideIntroVisuals(!1).setLocalizationKey(`${ds}`).withTitle(`${ds}:title`).withDescription(`${ds}:description`).withQuery(`${ds}:query`).withSimpleOption({buttonLabel:`${ds}:option.1.label`,buttonTooltip:`${ds}:option.1.tooltip`},async E=>{const A=[];let s=0;for(;s<5;){const R=le(5);R<2?A.push(x.TM_COMMON):R<4?A.push(x.TM_GREAT):A.push(x.TM_ULTRA),s++}ot(E,{guaranteedModifierTypeFuncs:A,fillRemaining:!1}),Lt(E)}).withSimpleOption({buttonLabel:`${ds}:option.2.label`,buttonTooltip:`${ds}:option.2.tooltip`},async E=>{const A=[];let s=0;for(;s<3;)le(3)===0?A.push(x.PP_UP):A.push(x.BASE_STAT_BOOSTER),s++;ot(E,{guaranteedModifierTypeFuncs:A,fillRemaining:!1}),Lt(E)}).withSimpleOption({buttonLabel:`${ds}:option.3.label`,buttonTooltip:`${ds}:option.3.tooltip`},async E=>{const A=[];let s=0;for(;s<5;)le(5)===0?A.push(x.DIRE_HIT):A.push(x.TEMP_STAT_STAGE_BOOSTER),s++;ot(E,{guaranteedModifierTypeFuncs:A,fillRemaining:!1}),Lt(E)}).withSimpleOption({buttonLabel:`${ds}:option.4.label`,buttonTooltip:`${ds}:option.4.tooltip`},async E=>{const A=[];let s=0;for(;s<4;){const R=le(65);R<10?A.push(x.POKEBALL):R<40?A.push(x.GREAT_BALL):R<60?A.push(x.ULTRA_BALL):A.push(x.ROGUE_BALL),s++}ot(E,{guaranteedModifierTypeFuncs:A,fillRemaining:!1}),Lt(E)}).withOutroDialogue([{text:`${ds}:outro`}]).build(),QA="mysteryEncounters/fieldTrip",X7=MA.withEncounterType(me.FIELD_TRIP).withEncounterTier(Gt.COMMON).withSceneWaveRangeRequirement(HA[0],100).withIntroSpriteConfigs([{spriteKey:"preschooler_m",fileRoot:"trainer",hasShadow:!0},{spriteKey:"field_trip_teacher",fileRoot:"mystery-encounters",hasShadow:!0},{spriteKey:"preschooler_f",fileRoot:"trainer",hasShadow:!0}]).withIntroDialogue([{text:`${QA}:intro`},{text:`${QA}:intro_dialogue`,speaker:`${QA}:speaker`}]).withAutoHideIntroVisuals(!1).setLocalizationKey(`${QA}`).withTitle(`${QA}:title`).withDescription(`${QA}:description`).withQuery(`${QA}:query`).withOption(Dt.newOptionWithMode(It.DEFAULT).withDialogue({buttonLabel:`${QA}:option.1.label`,buttonTooltip:`${QA}:option.1.tooltip`,secondOptionPrompt:`${QA}:second_option_prompt`}).withPreOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter;return mE(E,T(R=>R.moveset.map(I=>({label:I.getName(),handler:T(()=>(A.setDialogueToken("moveCategory",U.t(`${QA}:physical`)),JM(E,R,I,Ot.PHYSICAL),!0),"handler")})),"onPokemonSelected"))}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter;if(A.misc.correctMove){const s=[VA(E,x.TEMP_STAT_STAGE_BOOSTER,[B.ATK]),VA(E,x.TEMP_STAT_STAGE_BOOSTER,[B.DEF]),VA(E,x.TEMP_STAT_STAGE_BOOSTER,[B.SPD]),VA(E,x.DIRE_HIT),VA(E,x.RARER_CANDY)];ot(E,{guaranteedModifierTypeOptions:s,fillRemaining:!1})}Lt(E,!A.misc.correctMove)}).build()).withOption(Dt.newOptionWithMode(It.DEFAULT).withDialogue({buttonLabel:`${QA}:option.2.label`,buttonTooltip:`${QA}:option.2.tooltip`,secondOptionPrompt:`${QA}:second_option_prompt`}).withPreOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter;return mE(E,T(R=>R.moveset.map(I=>({label:I.getName(),handler:T(()=>(A.setDialogueToken("moveCategory",U.t(`${QA}:special`)),JM(E,R,I,Ot.SPECIAL),!0),"handler")})),"onPokemonSelected"))}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter;if(A.misc.correctMove){const s=[VA(E,x.TEMP_STAT_STAGE_BOOSTER,[B.SPATK]),VA(E,x.TEMP_STAT_STAGE_BOOSTER,[B.SPDEF]),VA(E,x.TEMP_STAT_STAGE_BOOSTER,[B.SPD]),VA(E,x.DIRE_HIT),VA(E,x.RARER_CANDY)];ot(E,{guaranteedModifierTypeOptions:s,fillRemaining:!1})}Lt(E,!A.misc.correctMove)}).build()).withOption(Dt.newOptionWithMode(It.DEFAULT).withDialogue({buttonLabel:`${QA}:option.3.label`,buttonTooltip:`${QA}:option.3.tooltip`,secondOptionPrompt:`${QA}:second_option_prompt`}).withPreOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter;return mE(E,T(R=>R.moveset.map(I=>({label:I.getName(),handler:T(()=>(A.setDialogueToken("moveCategory",U.t(`${QA}:status`)),JM(E,R,I,Ot.STATUS),!0),"handler")})),"onPokemonSelected"))}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter;if(A.misc.correctMove){const s=[VA(E,x.TEMP_STAT_STAGE_BOOSTER,[B.ACC]),VA(E,x.TEMP_STAT_STAGE_BOOSTER,[B.SPD]),VA(E,x.GREAT_BALL),VA(E,x.IV_SCANNER),VA(E,x.RARER_CANDY)];ot(E,{guaranteedModifierTypeOptions:s,fillRemaining:!1})}Lt(E,!A.misc.correctMove)}).build()).build();function JM(E,A,s,R){const I=E.currentBattle.mysteryEncounter,i=s.getMove().category===R;I.setDialogueToken("pokeName",A.getNameToRender()),I.setDialogueToken("move",s.getName()),i?(I.selectedOption.dialogue.selected=[{text:`${QA}:option.selected`},{text:`${QA}:correct`,speaker:`${QA}:speaker`},{text:`${QA}:correct_exp`}],ER(E,[A.id],100)):(I.selectedOption.dialogue.selected=[{text:`${QA}:option.selected`},{text:`${QA}:incorrect`,speaker:`${QA}:speaker`},{text:`${QA}:incorrect_exp`}],ER(E,E.getParty().map(a=>a.id),50)),I.misc={correctMove:i}}T(JM,"pokemonAndMoveChosen");const h6=[t.PLUCK,t.COVET,t.KNOCK_OFF,t.THIEF,t.TRICK,t.SWITCHEROO],c6=[t.CHARM,t.FLATTER,t.DRAGON_CHEER,t.ALLURING_VOICE,t.ATTRACT,t.SWEET_SCENT,t.CAPTIVATE,t.AROMATIC_MIST],Ov=[t.AQUA_STEP,t.CLANGOROUS_SOUL,t.DRAGON_DANCE,t.FEATHER_DANCE,t.FIERY_DANCE,t.LUNAR_DANCE,t.PETAL_DANCE,t.REVELATION_DANCE,t.QUIVER_DANCE,t.SWORDS_DANCE,t.TEETER_DANCE,t.VICTORY_DANCE];t.FAKE_OUT,t.FOLLOW_ME,t.TAUNT,t.ROAR,t.TELEPORT,t.CHARM,t.FAKE_TEARS,t.TICKLE,t.CAPTIVATE,t.RAGE_POWDER,t.SUBSTITUTE,t.SHED_TAIL;t.PROTECT,t.WIDE_GUARD,t.MAX_GUARD,t.SAFEGUARD,t.REFLECT,t.BARRIER,t.QUICK_GUARD,t.FLOWER_SHIELD,t.KINGS_SHIELD,t.CRAFTY_SHIELD,t.SPIKY_SHIELD,t.OBSTRUCT,t.DETECT;const Q7=[t.BIND,t.CLAMP,t.INFESTATION,t.SAND_TOMB,t.SNAP_TRAP,t.THUNDER_CAGE,t.WRAP,t.SPIRIT_SHACKLE,t.MEAN_LOOK,t.JAW_LOCK,t.BLOCK,t.SPIDER_WEB,t.ANCHOR_SHOT,t.OCTOLOCK,t.PURSUIT,t.CONSTRICT,t.BEAT_UP,t.COIL,t.WRING_OUT,t.STRING_SHOT],J7=[O.INTIMIDATE,O.ARENA_TRAP,O.SHADOW_TAG,O.SUCTION_CUPS,O.STICKY_HOLD],$7=[O.FLAME_BODY,O.FLASH_FIRE,O.WELL_BAKED_BODY,O.HEATPROOF,O.THERMAL_EXCHANGE,O.THICK_FAT,O.WATER_BUBBLE,O.MAGMA_ARMOR,O.WATER_VEIL,O.STEAM_ENGINE,O.PRIMORDIAL_SEA],wg=class wg{constructor(A,s=!1){var I,i,a;const R=A instanceof pR?A:null;this.id=A.id,this.player=R?R.isPlayer():A.player,this.species=R?R.species.speciesId:A.species,this.nickname=R?R.nickname:A.nickname,this.formIndex=Math.max(Math.min(A.formIndex,Ke(this.species).forms.length-1),0),this.abilityIndex=A.abilityIndex,this.passive=A.passive,this.shiny=A.shiny,this.variant=A.variant,this.pokeball=A.pokeball,this.level=A.level,this.exp=A.exp,s||(this.levelExp=A.levelExp),this.gender=A.gender,s||(this.hp=A.hp),this.stats=A.stats,this.ivs=A.ivs,this.nature=A.nature!==void 0?A.nature:0,this.friendship=A.friendship!==void 0?A.friendship:Ke(this.species).baseFriendship,this.metLevel=A.metLevel||5,this.metBiome=A.metBiome!==void 0?A.metBiome:-1,this.metSpecies=A.metSpecies,this.metWave=A.metWave??(this.metBiome===-1?-1:0),this.luck=A.luck!==void 0?A.luck:A.shiny?A.variant+1:0,s||(this.pauseEvolutions=!!A.pauseEvolutions,this.evoCounter=A.evoCounter??0),this.pokerus=!!A.pokerus,this.fusionSpecies=R?(I=R.fusionSpecies)==null?void 0:I.speciesId:A.fusionSpecies,this.fusionFormIndex=A.fusionFormIndex,this.fusionAbilityIndex=A.fusionAbilityIndex,this.fusionShiny=A.fusionShiny,this.fusionVariant=A.fusionVariant,this.fusionGender=A.fusionGender,this.fusionLuck=A.fusionLuck!==void 0?A.fusionLuck:A.fusionShiny?A.fusionVariant+1:0,this.fusionCustomPokemonData=new $E(A.fusionCustomPokemonData),this.usedTMs=A.usedTMs??[],this.customPokemonData=new $E(A.customPokemonData),this.natureOverride=A.natureOverride,this.mysteryEncounterPokemonData=A.mysteryEncounterPokemonData?new $E(A.mysteryEncounterPokemonData):null,this.fusionMysteryEncounterPokemonData=A.fusionMysteryEncounterPokemonData?new $E(A.fusionMysteryEncounterPokemonData):null,s||(this.boss=A instanceof es&&!!A.bossSegments||!this.player&&!!A.boss,this.bossSegments=A.bossSegments),R?(this.moveset=R.moveset,s||(this.status=R.status,this.player&&(this.summonData=R.summonData))):(this.moveset=(A.moveset||[new ke(t.TACKLE),new ke(t.GROWL)]).filter(L=>L).map(L=>new ke(L.moveId,L.ppUsed,L.ppUp,L.virtual,L.maxPpOverride)),s||(this.status=A.status?new fi(A.status.effect,A.status.toxicTurnCount,A.status.sleepTurnsRemaining):null),this.summonData=new gS,!s&&A.summonData&&(this.summonData.stats=A.summonData.stats,this.summonData.statStages=A.summonData.statStages,this.summonData.moveQueue=A.summonData.moveQueue,this.summonData.abilitySuppressed=A.summonData.abilitySuppressed,this.summonData.abilitiesApplied=A.summonData.abilitiesApplied,this.summonData.ability=A.summonData.ability,this.summonData.moveset=(i=A.summonData.moveset)==null?void 0:i.map(L=>ke.loadMove(L)),this.summonData.types=A.summonData.types,A.summonData.tags?this.summonData.tags=(a=A.summonData.tags)==null?void 0:a.map(L=>ZX(L)):this.summonData.tags=[]))}toPokemon(A,s,R=0,I=!1){const i=Ke(this.species),a=this.player?A.addPlayerPokemon(i,this.level,this.abilityIndex,this.formIndex,this.gender,this.shiny,this.variant,this.ivs,this.nature,this,L=>{this.nickname&&(L.nickname=this.nickname)}):A.addEnemyPokemon(i,this.level,s===Nt.TRAINER?!I||!(R%2)?qe.TRAINER:qe.TRAINER_PARTNER:qe.NONE,this.boss,this);return this.summonData&&a.primeSummonData(this.summonData),a}};T(wg,"PokemonData");let xs=wg;const fs="mysteryEncounters/fightOrFlight",q7=MA.withEncounterType(me.FIGHT_OR_FLIGHT).withEncounterTier(Gt.COMMON).withSceneWaveRangeRequirement(...HA).withCatchAllowed(!0).withHideWildIntroMessage(!0).withFleeAllowed(!1).withIntroSpriteConfigs([]).withIntroDialogue([{text:`${fs}:intro`}]).withOnInit(E=>{const A=E.currentBattle.mysteryEncounter,s=lo(E,oo),R=E.arena.randomSpecies(E.currentBattle.waveIndex,s,0,BI(E.getParty()),!0),I=new es(E,R,s,qe.NONE,!0);A.setDialogueToken("enemyPokemon",I.getNameToRender());const i={pokemonConfigs:[{level:s,species:R,dataSource:new xs(I),isBoss:!0,tags:[Y.MYSTERY_ENCOUNTER_POST_SUMMON],mysteryEncounterBattleEffects:T(l=>{bA(l.scene,`${fs}:option.1.stat_boost`),l.scene.unshiftPhase(new Ft(l.scene,l.getBattlerIndex(),!0,[le(4,1)],2))},"mysteryEncounterBattleEffects")}]};A.enemyPartyConfigs=[i];const a=E.currentBattle.waveIndex>160?W.MASTER:E.currentBattle.waveIndex>120?W.ROGUE:E.currentBattle.waveIndex>40?W.ULTRA:W.GREAT;QI(E.getParty(),FE.PLAYER,0);let L=null;for(;!L||L.type.id.includes("TM_")||L.type.id==="CANDY_JAR";)L=u1(1,E.getParty(),[],{guaranteedModifierTiers:[a],allowLuckUpgrades:!1})[0];A.setDialogueToken("itemName",L.type.name),A.misc=L;const{spriteKey:S,fileRoot:o}=wM(I);return A.spriteConfigs=[{spriteKey:L.type.iconImage,fileRoot:"items",hasShadow:!1,x:35,y:-5,scale:.75,isItem:!0,disableAnimation:!0},{spriteKey:S,fileRoot:o,hasShadow:!0,tint:.25,x:-5,repeat:!0,isPokemon:!0}],!0}).setLocalizationKey(`${fs}`).withTitle(`${fs}:title`).withDescription(`${fs}:description`).withQuery(`${fs}:query`).withSimpleOption({buttonLabel:`${fs}:option.1.label`,buttonTooltip:`${fs}:option.1.tooltip`,selected:[{text:`${fs}:option.1.selected`}]},async E=>{const A=E.currentBattle.mysteryEncounter.misc;ot(E,{guaranteedModifierTypeOptions:[A],fillRemaining:!1}),await mA(E,E.currentBattle.mysteryEncounter.enemyPartyConfigs[0])}).withOption(Dt.newOptionWithMode(It.DISABLED_OR_SPECIAL).withPrimaryPokemonRequirement(new KI(h6,!0)).withDialogue({buttonLabel:`${fs}:option.2.label`,buttonTooltip:`${fs}:option.2.tooltip`,disabledButtonTooltip:`${fs}:option.2.disabled_tooltip`,selected:[{text:`${fs}:option.2.selected`}]}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter,s=E.currentBattle.mysteryEncounter.misc;ot(E,{guaranteedModifierTypeOptions:[s],fillRemaining:!1});const R=A.options[1].primaryPokemon;ER(E,R.id,A.enemyPartyConfigs[0].pokemonConfigs[0].species.baseExp),Lt(E)}).build()).withSimpleOption({buttonLabel:`${fs}:option.3.label`,buttonTooltip:`${fs}:option.3.tooltip`,selected:[{text:`${fs}:option.3.selected`}]},async E=>(Lt(E,!0),!0)).build(),nv=t.SURF,Iv=t.FLY,iv=25,wE="mysteryEncounters/lostAtSea",j7=MA.withEncounterType(me.LOST_AT_SEA).withEncounterTier(Gt.COMMON).withSceneWaveRangeRequirement(...HA).withIntroSpriteConfigs([{spriteKey:"lost_at_sea_buoy",fileRoot:"mystery-encounters",hasShadow:!1,x:20,y:3}]).withIntroDialogue([{text:`${wE}:intro`}]).withOnInit(E=>{const A=E.currentBattle.mysteryEncounter;return A.setDialogueToken("damagePercentage",String(iv)),A.setDialogueToken("option1RequiredMove",new ke(nv).getName()),A.setDialogueToken("option2RequiredMove",new ke(Iv).getName()),!0}).setLocalizationKey(`${wE}`).withTitle(`${wE}:title`).withDescription(`${wE}:description`).withQuery(`${wE}:query`).withOption(Dt.newOptionWithMode(It.DISABLED_OR_DEFAULT).withPokemonCanLearnMoveRequirement(nv).withDialogue({buttonLabel:`${wE}:option.1.label`,disabledButtonLabel:`${wE}:option.1.label_disabled`,buttonTooltip:`${wE}:option.1.tooltip`,disabledButtonTooltip:`${wE}:option.1.tooltip_disabled`,selected:[{text:`${wE}:option.1.selected`}]}).withOptionPhase(async E=>av(E)).build()).withOption(Dt.newOptionWithMode(It.DISABLED_OR_DEFAULT).withPokemonCanLearnMoveRequirement(Iv).withDialogue({buttonLabel:`${wE}:option.2.label`,disabledButtonLabel:`${wE}:option.2.label_disabled`,buttonTooltip:`${wE}:option.2.tooltip`,disabledButtonTooltip:`${wE}:option.2.tooltip_disabled`,selected:[{text:`${wE}:option.2.selected`}]}).withOptionPhase(async E=>av(E)).build()).withSimpleOption({buttonLabel:`${wE}:option.3.label`,buttonTooltip:`${wE}:option.3.tooltip`,selected:[{text:`${wE}:option.3.selected`}]},async E=>{const A=E.getParty().filter(s=>s.isAllowedInBattle());for(const s of A){const R=iv/100,I=Math.floor(s.getMaxHp()*R);H1(E,s,I)}return Lt(E),!0}).withOutroDialogue([{text:`${wE}:outro`}]).build();function av(E){var R,I;const A=Ke(e.LAPRAS),{mysteryEncounter:s}=E.currentBattle;return(I=(R=s==null?void 0:s.selectedOption)==null?void 0:R.primaryPokemon)!=null&&I.id?ER(E,s.selectedOption.primaryPokemon.id,A.baseExp,!0):console.warn("Lost at sea: No guide pokemon found but pokemon guides player. huh!?"),Lt(E),!0}T(av,"handlePokemonGuidingYouPhase");const Xs="mysteryEncounters/mysteriousChallengers",z7=MA.withEncounterType(me.MYSTERIOUS_CHALLENGERS).withEncounterTier(Gt.GREAT).withSceneWaveRangeRequirement(...HA).withIntroSpriteConfigs([]).withIntroDialogue([{text:`${Xs}:intro`}]).withOnInit(E=>{const A=E.currentBattle.mysteryEncounter,s=E.arena.randomTrainerType(E.currentBattle.waveIndex),R=BA[s].clone();let I=!1;R.hasGenders&&(I=!!le(2));const i=R.getSpriteKey(I,R.doubleOnly);A.enemyPartyConfigs.push({trainerConfig:R,female:I});let a=0,L=E.arena.randomTrainerType(E.currentBattle.waveIndex);for(;a<5&&L===s;)L=E.arena.randomTrainerType(E.currentBattle.waveIndex),a++;const S=new PA(new We(1,Pe.STRONGER,!1,!0),new We(Math.min(Math.ceil(E.currentBattle.waveIndex/20),5),Pe.AVERAGE,!1,!0)),o=BA[L].clone();o.setPartyTemplates(S),I=!1,o.hasGenders&&(I=!!le(2));const l=o.getSpriteKey(I,o.doubleOnly);A.enemyPartyConfigs.push({trainerConfig:o,levelAdditiveModifier:1,female:I});const D=E.arena.randomTrainerType(E.currentBattle.waveIndex,!0),M=ve.ELITE_FOUR,c=BA[D].clone();c.title=BA[D].title,c.setPartyTemplates(M),c.partyTemplateFunc=null,I=!1,c.hasGenders&&(I=!!le(2));const G=c.getSpriteKey(I,c.doubleOnly);return A.enemyPartyConfigs.push({trainerConfig:c,levelAdditiveModifier:1.5,female:I}),A.spriteConfigs=[{spriteKey:i,fileRoot:"trainer",hasShadow:!0,tint:1},{spriteKey:l,fileRoot:"trainer",hasShadow:!0,tint:1},{spriteKey:G,fileRoot:"trainer",hasShadow:!0,tint:1}],!0}).setLocalizationKey(`${Xs}`).withTitle(`${Xs}:title`).withDescription(`${Xs}:description`).withQuery(`${Xs}:query`).withSimpleOption({buttonLabel:`${Xs}:option.1.label`,buttonTooltip:`${Xs}:option.1.tooltip`,selected:[{text:`${Xs}:option.selected`}]},async E=>{const s=E.currentBattle.mysteryEncounter.enemyPartyConfigs[0];ot(E,{guaranteedModifierTypeFuncs:[x.TM_COMMON,x.TM_GREAT,x.MEMORY_MUSHROOM],fillRemaining:!0});let R;E.executeWithSeedOffset(()=>{R=mA(E,s)},E.currentBattle.waveIndex*10),await R}).withSimpleOption({buttonLabel:`${Xs}:option.2.label`,buttonTooltip:`${Xs}:option.2.tooltip`,selected:[{text:`${Xs}:option.selected`}]},async E=>{const s=E.currentBattle.mysteryEncounter.enemyPartyConfigs[1];ot(E,{guaranteedModifierTiers:[W.ULTRA,W.ULTRA,W.GREAT,W.GREAT],fillRemaining:!0});let R;E.executeWithSeedOffset(()=>{R=mA(E,s)},E.currentBattle.waveIndex*100),await R}).withSimpleOption({buttonLabel:`${Xs}:option.3.label`,buttonTooltip:`${Xs}:option.3.tooltip`,selected:[{text:`${Xs}:option.selected`}]},async E=>{const A=E.currentBattle.mysteryEncounter,s=A.enemyPartyConfigs[2];A.expMultiplier=.9,ot(E,{guaranteedModifierTiers:[W.ROGUE,W.ROGUE,W.ULTRA,W.GREAT],fillRemaining:!0});let R;E.executeWithSeedOffset(()=>{R=mA(E,s)},E.currentBattle.waveIndex*1e3),await R}).withOutroDialogue([{text:`${Xs}:outro`}]).build(),Bs="mysteryEncounters/mysteriousChest",Or=100,Lv=35,nr=20,go=30,$M=10,rv=5,ek=MA.withEncounterType(me.MYSTERIOUS_CHEST).withEncounterTier(Gt.COMMON).withSceneWaveRangeRequirement(...HA).withAutoHideIntroVisuals(!1).withCatchAllowed(!0).withIntroSpriteConfigs([{spriteKey:"mysterious_chest_blue",fileRoot:"mystery-encounters",hasShadow:!0,y:8,yShadow:6,alpha:1,disableAnimation:!0},{spriteKey:"mysterious_chest_red",fileRoot:"mystery-encounters",hasShadow:!1,y:8,yShadow:6,alpha:0,disableAnimation:!0}]).withIntroDialogue([{text:`${Bs}:intro`}]).setLocalizationKey(`${Bs}`).withTitle(`${Bs}:title`).withDescription(`${Bs}:description`).withQuery(`${Bs}:query`).withOnInit(E=>{const A=E.currentBattle.mysteryEncounter,s={levelAdditiveModifier:.5,disableSwitch:!0,pokemonConfigs:[{species:Ke(e.GIMMIGHOUL),formIndex:0,isBoss:!0,moveSet:[t.NASTY_PLOT,t.SHADOW_BALL,t.POWER_GEM,t.THIEF]}]};return A.enemyPartyConfigs=[s],A.setDialogueToken("gimmighoulName",Ke(e.GIMMIGHOUL).getName()),A.setDialogueToken("trapPercent",Lv.toString()),A.setDialogueToken("commonPercent",nr.toString()),A.setDialogueToken("ultraPercent",go.toString()),A.setDialogueToken("roguePercent",$M.toString()),A.setDialogueToken("masterPercent",rv.toString()),!0}).withOption(Dt.newOptionWithMode(It.DEFAULT).withDialogue({buttonLabel:`${Bs}:option.1.label`,buttonTooltip:`${Bs}:option.1.tooltip`,selected:[{text:`${Bs}:option.1.selected`}]}).withPreOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter,s=A.introVisuals,R=le(Or);if(A.misc={roll:R},R<Lv){const I=s.getSpriteAtIndex(0);s.getSpriteAtIndex(1)[0].setAlpha(1),I[0].setAlpha(.001)}s.spriteConfigs[0].disableAnimation=!1,s.spriteConfigs[1].disableAnimation=!1,s.playAnim()}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter,s=A.misc.roll;if(s>=Or-nr)ot(E,{guaranteedModifierTiers:[W.COMMON,W.COMMON,W.GREAT,W.GREAT]}),bA(E,`${Bs}:option.1.normal`),Lt(E);else if(s>=Or-nr-go)ot(E,{guaranteedModifierTiers:[W.ULTRA,W.ULTRA,W.ULTRA]}),bA(E,`${Bs}:option.1.good`),Lt(E);else if(s>=Or-nr-go-$M)ot(E,{guaranteedModifierTiers:[W.ROGUE,W.ROGUE]}),bA(E,`${Bs}:option.1.great`),Lt(E);else if(s>=Or-nr-go-$M-rv)ot(E,{guaranteedModifierTiers:[W.MASTER]}),bA(E,`${Bs}:option.1.amazing`),Lt(E);else{const R=_1(E,!0,!1);D6(E,R),A.setDialogueToken("pokeName",R.getNameToRender()),await Kt(E,`${Bs}:option.1.bad`),E.getParty().filter(i=>i.isAllowedInBattle()).length===0?(E.clearPhaseQueue(),E.unshiftPhase(new iO(E))):(await gA(E,!0,!0,500),ot(E,{fillRemaining:!0}),await mA(E,A.enemyPartyConfigs[0]))}}).build()).withSimpleOption({buttonLabel:`${Bs}:option.2.label`,buttonTooltip:`${Bs}:option.2.tooltip`,selected:[{text:`${Bs}:option.2.selected`}]},async E=>(Lt(E,!0),!0)).build(),uE="mysteryEncounters/shadyVitaminDealer",Nv=1.5,tk=5,Ak=MA.withEncounterType(me.SHADY_VITAMIN_DEALER).withEncounterTier(Gt.COMMON).withSceneWaveRangeRequirement(...HA).withSceneRequirement(new yO(0,Nv)).withPrimaryPokemonHealthRatioRequirement([.51,1]).withIntroSpriteConfigs([{spriteKey:e.KROOKODILE.toString(),fileRoot:"pokemon",hasShadow:!0,repeat:!0,x:12,y:-5,yShadow:-5},{spriteKey:"shady_vitamin_dealer",fileRoot:"mystery-encounters",hasShadow:!0,x:-12,y:3,yShadow:3}]).withIntroDialogue([{text:`${uE}:intro`},{text:`${uE}:intro_dialogue`,speaker:`${uE}:speaker`}]).setLocalizationKey(`${uE}`).withTitle(`${uE}:title`).withDescription(`${uE}:description`).withQuery(`${uE}:query`).withOption(Dt.newOptionWithMode(It.DISABLED_OR_DEFAULT).withSceneMoneyRequirement(0,Nv).withDialogue({buttonLabel:`${uE}:option.1.label`,buttonTooltip:`${uE}:option.1.tooltip`,selected:[{text:`${uE}:option.selected`}]}).withPreOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter;return mE(E,T(I=>{xR(E,-A.options[0].requirements[0].requiredMoney);const i=[St(E,x.BASE_STAT_BOOSTER),St(E,x.BASE_STAT_BOOSTER)];A.setDialogueToken("boost1",i[0].name),A.setDialogueToken("boost2",i[1].name),A.misc={chosenPokemon:I,modifiers:i}},"onPokemonSelected"),void 0,T(I=>I.isAllowed()?A.pokemonMeetsPrimaryRequirements(E,I)?null:UA(E,`${uE}:invalid_selection`)??null:U.t("partyUiHandler:cantBeUsed",{pokemonName:I.getNameToRender()})??null,"selectableFilter"))}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter,s=A.misc.chosenPokemon,R=A.misc.modifiers;for(const I of R)await tR(E,s,I);Lt(E,!0)}).withPostOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter,s=A.misc.chosenPokemon;H1(E,s,Math.floor(s.getMaxHp()/2));const R=s.nature;let I=le(25);for(;I===R;)I=le(25);s.customPokemonData.nature=I,A.setDialogueToken("newNature",WO(I)),bA(E,`${uE}:cheap_side_effects`),ER(E,[s.id],100),await s.updateInfo()}).build()).withOption(Dt.newOptionWithMode(It.DISABLED_OR_DEFAULT).withSceneMoneyRequirement(0,tk).withDialogue({buttonLabel:`${uE}:option.2.label`,buttonTooltip:`${uE}:option.2.tooltip`,selected:[{text:`${uE}:option.selected`}]}).withPreOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter;return mE(E,T(I=>{xR(E,-A.options[1].requirements[0].requiredMoney);const i=[St(E,x.BASE_STAT_BOOSTER),St(E,x.BASE_STAT_BOOSTER)];A.setDialogueToken("boost1",i[0].name),A.setDialogueToken("boost2",i[1].name),A.misc={chosenPokemon:I,modifiers:i}},"onPokemonSelected"),void 0,T(I=>Pi(I,E,`${uE}:invalid_selection`),"selectableFilter"))}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter,s=A.misc.chosenPokemon,R=A.misc.modifiers;for(const I of R)await tR(E,s,I);Lt(E,!0)}).withPostOptionPhase(async E=>{const s=E.currentBattle.mysteryEncounter.misc.chosenPokemon;bA(E,`${uE}:no_bad_effects`),ER(E,[s.id],100),await s.updateInfo()}).build()).withSimpleOption({buttonLabel:`${uE}:option.3.label`,buttonTooltip:`${uE}:option.3.tooltip`,selected:[{text:`${uE}:option.3.selected`,speaker:`${uE}:speaker`}]},async E=>(Lt(E,!0),!0)).build(),Vg=class Vg extends LE{constructor(A,s){super(A),this.resumeBgm=s}start(){super.start();const A=this.scene.isBgmPlaying();A&&this.scene.fadeOutBgm(1e3,!1),this.scene.ui.fadeOut(1e3).then(()=>{for(const R of this.scene.getParty()){R.hp=R.getMaxHp(),R.resetStatus();for(const I of R.moveset)I.ppUsed=0;R.updateInfo(!0)}const s=this.scene.playSoundWithoutBgm("heal");this.scene.time.delayedCall(Ve(s.totalDuration*1e3),()=>{s.destroy(),this.resumeBgm&&A&&this.scene.playBgm(),this.scene.ui.fadeIn(500).then(()=>this.end())})})}};T(Vg,"PartyHealPhase");let oL=Vg;const gs="mysteryEncounters/slumberingSnorlax",Ek=MA.withEncounterType(me.SLUMBERING_SNORLAX).withEncounterTier(Gt.GREAT).withSceneWaveRangeRequirement(...HA).withCatchAllowed(!0).withHideWildIntroMessage(!0).withFleeAllowed(!1).withIntroSpriteConfigs([{spriteKey:e.SNORLAX.toString(),fileRoot:"pokemon",hasShadow:!0,tint:.25,scale:1.25,repeat:!0,y:5}]).withIntroDialogue([{text:`${gs}:intro`}]).withOnInit(E=>{const A=E.currentBattle.mysteryEncounter,I={levelAdditiveModifier:.5,pokemonConfigs:[{species:Ke(e.SNORLAX),isBoss:!0,status:[J.SLEEP,5],moveSet:[t.REST,t.SLEEP_TALK,t.CRUNCH,t.GIGA_IMPACT],modifierConfigs:[{modifier:St(E,x.BERRY,[nt.SITRUS]),stackCount:2},{modifier:St(E,x.BERRY,[nt.ENIGMA]),stackCount:2}],customPokemonData:new $E({spriteScale:1.25}),aiType:z6.SMART}]};return A.enemyPartyConfigs=[I],Uo(E,[t.SNORE]),A.setDialogueToken("snorlaxName",Ke(e.SNORLAX).getName()),!0}).setLocalizationKey(`${gs}`).withTitle(`${gs}:title`).withDescription(`${gs}:description`).withQuery(`${gs}:query`).withSimpleOption({buttonLabel:`${gs}:option.1.label`,buttonTooltip:`${gs}:option.1.tooltip`,selected:[{text:`${gs}:option.1.selected`}]},async E=>{const A=E.currentBattle.mysteryEncounter;ot(E,{guaranteedModifierTypeFuncs:[x.LEFTOVERS],fillRemaining:!0}),A.startOfBattleEffects.push({sourceBattlerIndex:Ct.ENEMY,targets:[Ct.PLAYER],move:new ke(t.SNORE),ignorePp:!0},{sourceBattlerIndex:Ct.ENEMY,targets:[Ct.PLAYER],move:new ke(t.SNORE),ignorePp:!0}),await mA(E,A.enemyPartyConfigs[0])}).withSimpleOption({buttonLabel:`${gs}:option.2.label`,buttonTooltip:`${gs}:option.2.tooltip`,selected:[{text:`${gs}:option.2.selected`}]},async E=>{E.unshiftPhase(new oL(E,!0)),bA(E,`${gs}:option.2.rest_result`),Lt(E)}).withOption(Dt.newOptionWithMode(It.DISABLED_OR_SPECIAL).withPrimaryPokemonRequirement(new KI(h6,!0)).withDialogue({buttonLabel:`${gs}:option.3.label`,buttonTooltip:`${gs}:option.3.tooltip`,disabledButtonTooltip:`${gs}:option.3.disabled_tooltip`,selected:[{text:`${gs}:option.3.selected`}]}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter;ot(E,{guaranteedModifierTypeFuncs:[x.LEFTOVERS],fillRemaining:!1}),ER(E,A.primaryPokemon.id,Ke(e.SNORLAX).baseExp),Lt(E)}).build()).build(),EE="mysteryEncounters/trainingSession",sk=MA.withEncounterType(me.TRAINING_SESSION).withEncounterTier(Gt.ULTRA).withSceneWaveRangeRequirement(...HA).withScenePartySizeRequirement(2,6,!0).withFleeAllowed(!1).withHideWildIntroMessage(!0).withPreventGameStatsUpdates(!0).withIntroSpriteConfigs([{spriteKey:"training_session_gear",fileRoot:"mystery-encounters",hasShadow:!0,y:6,x:5,yShadow:-2}]).withIntroDialogue([{text:`${EE}:intro`}]).setLocalizationKey(`${EE}`).withTitle(`${EE}:title`).withDescription(`${EE}:description`).withQuery(`${EE}:query`).withOption(Dt.newOptionWithMode(It.DEFAULT).withHasDexProgress(!0).withDialogue({buttonLabel:`${EE}:option.1.label`,buttonTooltip:`${EE}:option.1.tooltip`,selected:[{text:`${EE}:option.selected`}]}).withPreOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter;return mE(E,T(I=>{A.misc={playerPokemon:I}},"onPokemonSelected"),void 0,T(I=>Pi(I,E,`${EE}:invalid_selection`),"selectableFilter"))}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter,s=A.misc.playerPokemon,R=Math.min(2+Math.floor(E.currentBattle.waveIndex/50),5),I=new cr,i=qM(E,s,R,I);E.removePokemonFromPlayerParty(s,!1),ot(E,{fillRemaining:!0},void 0,T(()=>{A.setDialogueToken("stat1","-"),A.setDialogueToken("stat2","-");let L=[];s.ivs.forEach((o,l)=>{o<31&&L.push({iv:o,index:l})});let S=0;for(;L.length>0&&S<2;){L=AO(L);const o=L.pop();let l=o.iv;S===0?A.setDialogueToken("stat1",U.t(aE(o.index))??""):A.setDialogueToken("stat2",U.t(aE(o.index))??""),o.iv<=21&&o.iv-1%5===0&&(l+=1),l+=o.iv<=10?10:o.iv<=20?5:3,l=Math.min(l,31),s.ivs[o.index]=l,S++}S>0&&(s.calculateStats(),E.gameData.updateSpeciesDexIvs(s.species.getRootSpeciesId(!0),s.ivs),E.gameData.setPokemonCaught(s,!1)),E.getParty().push(s);for(const o of I.value)o.pokemonId=s.id,E.addModifier(o,!0,!1,!1,!0);E.updateModifiers(!0),bA(E,`${EE}:option.1.finished`)},"onBeforeRewardsPhase")),await mA(E,i)}).build()).withOption(Dt.newOptionWithMode(It.DEFAULT).withHasDexProgress(!0).withDialogue({buttonLabel:`${EE}:option.2.label`,buttonTooltip:`${EE}:option.2.tooltip`,secondOptionPrompt:`${EE}:option.2.select_prompt`,selected:[{text:`${EE}:option.selected`}]}).withPreOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter,s=new Array(25).fill(null).map((i,a)=>a);return mE(E,T(i=>s.map(a=>({label:WO(a,!0,!0,!0,E.uiTheme),handler:T(()=>(A.setDialogueToken("nature",WO(a)),A.misc={playerPokemon:i,chosenNature:a},!0),"handler")})),"onPokemonSelected"),void 0,T(i=>Pi(i,E,`${EE}:invalid_selection`),"selectableFilter"))}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter,s=A.misc.playerPokemon,R=Math.min(2+Math.floor(E.currentBattle.waveIndex/40),6),I=new cr,i=qM(E,s,R,I);E.removePokemonFromPlayerParty(s,!1),ot(E,{fillRemaining:!0},void 0,T(()=>{bA(E,`${EE}:option.2.finished`),s.setNature(A.misc.chosenNature),E.gameData.setPokemonCaught(s,!1),E.getParty().push(s);for(const L of I.value)L.pokemonId=s.id,E.addModifier(L,!0,!1,!1,!0);E.updateModifiers(!0)},"onBeforeRewardsPhase")),await mA(E,i)}).build()).withOption(Dt.newOptionWithMode(It.DEFAULT).withHasDexProgress(!0).withDialogue({buttonLabel:`${EE}:option.3.label`,buttonTooltip:`${EE}:option.3.tooltip`,secondOptionPrompt:`${EE}:option.3.select_prompt`,selected:[{text:`${EE}:option.selected`}]}).withPreOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter;return mE(E,T(I=>{const i=I.getFusionSpeciesForm()?I.getFusionSpeciesForm():I.getSpeciesForm(),a=i.getAbilityCount(),L=new Array(a).fill(null).map((o,l)=>jA[i.getAbility(l)]),S=[];return L.forEach((o,l)=>{if(!S.some(D=>D.label===o.name)){const D={label:o.name,handler:T(()=>(A.setDialogueToken("ability",o.name),A.misc={playerPokemon:I,abilityIndex:l},!0),"handler"),onHover:T(()=>{Kt(E,o.description,0,0,!1)},"onHover")};S.push(D)}}),S},"onPokemonSelected"),void 0,T(I=>Pi(I,E,`${EE}:invalid_selection`),"selectableFilter"))}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter,s=A.misc.playerPokemon,R=Math.min(2+Math.floor(E.currentBattle.waveIndex/30),6),I=new cr,i=qM(E,s,R,I);i.pokemonConfigs[0].tags=[Y.MYSTERY_ENCOUNTER_POST_SUMMON],E.removePokemonFromPlayerParty(s,!1),ot(E,{fillRemaining:!0},void 0,T(()=>{var S,o;bA(E,`${EE}:option.3.finished`);const L=A.misc.abilityIndex;if(s.getFusionSpeciesForm()){s.fusionAbilityIndex=L;const l=(S=s.fusionSpecies)==null?void 0:S.getRootSpeciesId();!xe(l)&&CA.hasOwnProperty(l)&&E.gameData.dexData[l].caughtAttr&&(E.gameData.starterData[l].abilityAttr|=s.fusionAbilityIndex!==1||(o=s.fusionSpecies)!=null&&o.ability2?1<<s.fusionAbilityIndex:ns.ABILITY_HIDDEN)}else s.abilityIndex=L;s.calculateStats(),E.gameData.setPokemonCaught(s,!1),E.getParty().push(s);for(const l of I.value)l.pokemonId=s.id,E.addModifier(l,!0,!1,!1,!0);E.updateModifiers(!0)},"onBeforeRewardsPhase")),await mA(E,i)}).build()).withSimpleOption({buttonLabel:`${EE}:option.4.label`,buttonTooltip:`${EE}:option.4.tooltip`,selected:[{text:`${EE}:option.4.selected`}]},async E=>(Lt(E,!0),!0)).build();function qM(E,A,s,R){A.resetSummonData(),R.value=A.getHeldItems();const I=R.value.map(a=>({modifier:a.clone(),isTransferable:!1,stackCount:a.stackCount})),i=new xs(A);return{pokemonConfigs:[{species:A.species,isBoss:!0,bossSegments:s,formIndex:A.formIndex,level:A.level,dataSource:i,modifierConfigs:I}]}}T(qM,"getEnemyConfig");const vg=class vg{constructor(){this.value=[]}};T(vg,"ModifiersHolder");let cr=vg;const wA="mysteryEncounters/safariZone",Za=[512,184,768],Tv=2,Sv=3,Rk=MA.withEncounterType(me.SAFARI_ZONE).withEncounterTier(Gt.GREAT).withSceneWaveRangeRequirement(...HA).withSceneRequirement(new yO(0,Tv)).withAutoHideIntroVisuals(!1).withIntroSpriteConfigs([{spriteKey:"safari_zone",fileRoot:"mystery-encounters",hasShadow:!1,x:4,y:6}]).withIntroDialogue([{text:`${wA}:intro`}]).setLocalizationKey(`${wA}`).withTitle(`${wA}:title`).withDescription(`${wA}:description`).withQuery(`${wA}:query`).withOnInit(E=>{var A;return(A=E.currentBattle.mysteryEncounter)==null||A.setDialogueToken("numEncounters",Sv.toString()),!0}).withOption(Dt.newOptionWithMode(It.DISABLED_OR_DEFAULT).withSceneRequirement(new yO(0,Tv)).withDialogue({buttonLabel:`${wA}:option.1.label`,buttonTooltip:`${wA}:option.1.tooltip`,selected:[{text:`${wA}:option.1.selected`}]}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter;return A.continuousEncounter=!0,A.misc={safariPokemonRemaining:Sv},xR(E,-A.options[0].requirements[0].requiredMoney),E.loadSe("PRSFX- Bug Bite","battle_anims","PRSFX- Bug Bite.wav"),E.loadSe("PRSFX- Sludge Bomb2","battle_anims","PRSFX- Sludge Bomb2.wav"),E.loadSe("PRSFX- Taunt2","battle_anims","PRSFX- Taunt2.wav"),E.loadAtlas("safari_zone_bait","mystery-encounters"),E.loadAtlas("safari_zone_mud","mystery-encounters"),E.currentBattle.enemyParty=[],await gA(E),await zl(E),yT(E,{overrideOptions:WT,hideDescription:!0}),!0}).build()).withSimpleOption({buttonLabel:`${wA}:option.2.label`,buttonTooltip:`${wA}:option.2.tooltip`,selected:[{text:`${wA}:option.2.selected`}]},async E=>(Lt(E,!0),!0)).build(),WT=[Dt.newOptionWithMode(It.DEFAULT).withDialogue({buttonLabel:`${wA}:safari.1.label`,buttonTooltip:`${wA}:safari.1.tooltip`,selected:[{text:`${wA}:safari.1.selected`}]}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter,s=A.misc.pokemon;return await Ok(E,s)?A.misc.safariPokemonRemaining>0?(await zl(E),yT(E,{overrideOptions:WT,startingCursorIndex:0,hideDescription:!0})):(A.continuousEncounter=!1,Lt(E,!0)):await jM(E,0),!0}).build(),Dt.newOptionWithMode(It.DEFAULT).withDialogue({buttonLabel:`${wA}:safari.2.label`,buttonTooltip:`${wA}:safari.2.tooltip`,selected:[{text:`${wA}:safari.2.selected`}]}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter.misc.pokemon;return await nk(E,A),lv(E,2),ov(E,1,8)?await Kt(E,UA(E,`${wA}:safari.eating`)??"",null,1e3,!1):await Kt(E,UA(E,`${wA}:safari.busy_eating`)??"",null,1e3,!1),await jM(E,1),!0}).build(),Dt.newOptionWithMode(It.DEFAULT).withDialogue({buttonLabel:`${wA}:safari.3.label`,buttonTooltip:`${wA}:safari.3.tooltip`,selected:[{text:`${wA}:safari.3.selected`}]}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter.misc.pokemon;return await Ik(E,A),ov(E,-2),lv(E,-1,8)?await Kt(E,UA(E,`${wA}:safari.angry`)??"",null,1e3,!1):await Kt(E,UA(E,`${wA}:safari.beside_itself_angry`)??"",null,1e3,!1),await jM(E,2),!0}).build(),Dt.newOptionWithMode(It.DEFAULT).withDialogue({buttonLabel:`${wA}:safari.4.label`,buttonTooltip:`${wA}:safari.4.tooltip`}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter,s=A.misc.pokemon;return await w7(E,s),A.misc.safariPokemonRemaining>0?(await zl(E),yT(E,{overrideOptions:WT,startingCursorIndex:3,hideDescription:!0})):(A.continuousEncounter=!1,Lt(E,!0)),!0}).build()];async function zl(E){const A=E.currentBattle.mysteryEncounter;A.setDialogueToken("remainingCount",A.misc.safariPokemonRemaining),E.queueMessage(UA(E,`${wA}:safari.remaining_count`)??"",null,!0);let s,R;E.executeWithSeedOffset(()=>{s=Ke(Jl([0,5],void 0,void 0,!1,!1,!1));const i=E.currentBattle.getLevelForWave();if(s=Ke(s.getWildSpeciesForLevel(i,!0,!1,E.gameMode)),R=E.addEnemyPokemon(s,i,qe.NONE,!1),R.shiny||R.trySetShinySeed(),R.species.abilityHidden){const a=R.species.ability2?2:1;if(R.abilityIndex<a){const L=new Jt(256);E.applyModifiers(pn,!0,L),!le(L.value)&&(R.abilityIndex=a)}}R.calculateStats(),E.currentBattle.enemyParty.unshift(R)},E.currentBattle.waveIndex*1e3*A.misc.safariPokemonRemaining),E.gameData.setPokemonSeen(R,!0),await R.loadAssets(),A.misc.catchStage=0,A.misc.fleeStage=0,A.misc.pokemon=R,A.misc.safariPokemonRemaining-=1,E.unshiftPhase(new KE(E,0,!1)),A.setDialogueToken("pokemonName",b(R));const I=E.findModifier(i=>i instanceof Aa);I&&E.pushPhase(new BT(E,R.getBattlerIndex(),Math.min(I.getStackCount()*2,6)))}T(zl,"summonSafariPokemon");function Ok(E,A){const s=A.species.catchRate,R=E.currentBattle.mysteryEncounter.misc.catchStage,I=(2+Math.min(Math.max(R,0),6))/(2-Math.max(Math.min(R,0),-6)),a=Math.round(s*1.5*I),L=Math.round(1048560/Math.sqrt(Math.sqrt(16711680/a)));return p7(E,A,ge.POKEBALL,L)}T(Ok,"throwPokeball");async function nk(E,A){const s=A.y,R=A.getFieldPositionOffset(),I=E.addFieldSprite(91,105,"safari_zone_bait","0001.png");return I.setOrigin(.5,.625),E.field.add(I),new Promise(i=>{E.trainer.setTexture(`trainer_${E.gameData.gender===ct.FEMALE?"f":"m"}_back_pb`),E.time.delayedCall(Za[0],()=>{E.playSound("se/pb_throw"),E.trainer.setFrame("2"),E.time.delayedCall(Za[1],()=>{E.trainer.setFrame("3"),E.time.delayedCall(Za[2],()=>{E.trainer.setTexture(`trainer_${E.gameData.gender===ct.FEMALE?"f":"m"}_back`)})}),E.tweens.add({targets:I,x:{value:210+R[0],ease:"Linear"},y:{value:55+R[1],ease:"Cubic.easeOut"},duration:500,onComplete:T(()=>{let a=1;E.time.delayedCall(768,()=>{E.tweens.add({targets:A,duration:150,ease:"Cubic.easeOut",yoyo:!0,y:s-5,loop:6,onStart:T(()=>{E.playSound("battle_anims/PRSFX- Bug Bite"),I.setFrame("0002.png")},"onStart"),onLoop:T(()=>{a%2===0&&E.playSound("battle_anims/PRSFX- Bug Bite"),a===4&&I.setFrame("0003.png"),a++},"onLoop"),onComplete:T(()=>{E.time.delayedCall(256,()=>{I.destroy(),i(!0)})},"onComplete")})})},"onComplete")})})})}T(nk,"throwBait");async function Ik(E,A){const s=A.y,R=A.getFieldPositionOffset(),I=E.addFieldSprite(91,115,"safari_zone_mud","0001.png");return I.setOrigin(.5,.625),E.field.add(I),new Promise(i=>{E.trainer.setTexture(`trainer_${E.gameData.gender===ct.FEMALE?"f":"m"}_back_pb`),E.time.delayedCall(Za[0],()=>{E.playSound("se/pb_throw"),E.trainer.setFrame("2"),E.time.delayedCall(Za[1],()=>{E.trainer.setFrame("3"),E.time.delayedCall(Za[2],()=>{E.trainer.setTexture(`trainer_${E.gameData.gender===ct.FEMALE?"f":"m"}_back`)})}),E.tweens.add({targets:I,x:{value:230+R[0],ease:"Linear"},y:{value:55+R[1],ease:"Cubic.easeOut"},duration:500,onComplete:T(()=>{E.playSound("battle_anims/PRSFX- Sludge Bomb2"),I.setFrame("0002.png"),E.time.delayedCall(200,()=>{I.setFrame("0003.png"),E.time.delayedCall(400,()=>{I.setFrame("0004.png")})}),E.tweens.add({targets:I,alpha:0,ease:"Cubic.easeIn",duration:1e3,onComplete:T(()=>{I.destroy(),E.tweens.add({targets:A,duration:300,ease:"Cubic.easeOut",yoyo:!0,y:s-20,loop:1,onStart:T(()=>{E.playSound("battle_anims/PRSFX- Taunt2")},"onStart"),onLoop:T(()=>{E.playSound("battle_anims/PRSFX- Taunt2")},"onLoop"),onComplete:T(()=>{i(!0)},"onComplete")})},"onComplete")})},"onComplete")})})})}T(Ik,"throwMud");function ik(E,A){const s=E.species.catchRate,R=(2+Math.min(Math.max(A,0),6))/(2-Math.max(Math.min(A,0),-6)),I=(255*255-s*s)/255/2*R;return le(256)<I}T(ik,"isPokemonFlee");function ov(E,A,s){if(s&&le(10)>=s)return!1;const R=E.currentBattle.mysteryEncounter.misc.fleeStage??0;return E.currentBattle.mysteryEncounter.misc.fleeStage=Math.min(Math.max(R+A,-6),6),!0}T(ov,"tryChangeFleeStage");function lv(E,A,s){if(s&&le(10)>=s)return!1;const R=E.currentBattle.mysteryEncounter.misc.catchStage??0;return E.currentBattle.mysteryEncounter.misc.catchStage=Math.min(Math.max(R+A,-6),6),!0}T(lv,"tryChangeCatchStage");async function jM(E,A){const s=E.getEnemyParty();if(s.length>1){for(let a=1;a<s.length;a++)s[a].destroy();E.currentBattle.enemyParty=s.slice(0,1)}const R=E.currentBattle.mysteryEncounter,I=R.misc.pokemon;ik(I,R.misc.fleeStage)?(await y7(E,I),R.misc.safariPokemonRemaining>0?(await zl(E),yT(E,{overrideOptions:WT,startingCursorIndex:A,hideDescription:!0})):(R.continuousEncounter=!1,Lt(E,!0))):(E.queueMessage(UA(E,`${wA}:safari.watching`)??"",0,null,1e3),yT(E,{overrideOptions:WT,startingCursorIndex:A,hideDescription:!0}))}T(jM,"doEndTurn");var VR=(E=>(E[E.MAGMA_BG=0]="MAGMA_BG",E[E.MAGMA_SPOUT=1]="MAGMA_SPOUT",E[E.SMOKESCREEN=2]="SMOKESCREEN",E[E.DANCE=3]="DANCE",E))(VR||{});const hs="mysteryEncounters/fieryFallout",ak=20,Lk=MA.withEncounterType(me.FIERY_FALLOUT).withEncounterTier(Gt.COMMON).withSceneWaveRangeRequirement(40,HA[1]).withCatchAllowed(!0).withIntroSpriteConfigs([]).withAnimations(VR.MAGMA_BG,VR.MAGMA_SPOUT).withAutoHideIntroVisuals(!1).withFleeAllowed(!1).withIntroDialogue([{text:`${hs}:intro`}]).withOnInit(E=>{const A=E.currentBattle.mysteryEncounter,s=Ke(e.VOLCARONA),R={pokemonConfigs:[{species:s,isBoss:!1,gender:ye.MALE,tags:[Y.MYSTERY_ENCOUNTER_POST_SUMMON],mysteryEncounterBattleEffects:T(I=>{I.scene.unshiftPhase(new Ft(I.scene,I.getBattlerIndex(),!0,[B.SPDEF,B.SPD],1))},"mysteryEncounterBattleEffects")},{species:s,isBoss:!1,gender:ye.FEMALE,tags:[Y.MYSTERY_ENCOUNTER_POST_SUMMON],mysteryEncounterBattleEffects:T(I=>{I.scene.unshiftPhase(new Ft(I.scene,I.getBattlerIndex(),!0,[B.SPDEF,B.SPD],1))},"mysteryEncounterBattleEffects")}],doubleBattle:!0,disableSwitch:!0};return A.enemyPartyConfigs=[R],A.spriteConfigs=[{spriteKey:"",fileRoot:"",species:e.VOLCARONA,repeat:!0,hidden:!0,hasShadow:!0,x:-20,startFrame:20},{spriteKey:"",fileRoot:"",species:e.VOLCARONA,repeat:!0,hidden:!0,hasShadow:!0,x:20}],Uo(E,[t.FIRE_SPIN,t.QUIVER_DANCE]),E.arena.trySetWeather(Q.SUNNY,!0),A.setDialogueToken("volcaronaName",Ke(e.VOLCARONA).getName()),!0}).withOnVisualsStart(E=>{new dn(VR.MAGMA_BG,E.getPlayerPokemon(),E.getPlayerPokemon()).playWithoutTargets(E,200,70,2,3);const s=new dn(VR.MAGMA_SPOUT,E.getPlayerPokemon(),E.getPlayerPokemon());return s.playWithoutTargets(E,80,100,2),E.time.delayedCall(600,()=>{s.playWithoutTargets(E,-20,100,2)}),E.time.delayedCall(1200,()=>{s.playWithoutTargets(E,140,150,2)}),!0}).setLocalizationKey(`${hs}`).withTitle(`${hs}:title`).withDescription(`${hs}:description`).withQuery(`${hs}:query`).withSimpleOption({buttonLabel:`${hs}:option.1.label`,buttonTooltip:`${hs}:option.1.tooltip`,selected:[{text:`${hs}:option.1.selected`}]},async E=>{const A=E.currentBattle.mysteryEncounter;ot(E,{fillRemaining:!0},void 0,()=>Cv(E)),A.startOfBattleEffects.push({sourceBattlerIndex:Ct.ENEMY,targets:[Ct.PLAYER],move:new ke(t.FIRE_SPIN),ignorePp:!0},{sourceBattlerIndex:Ct.ENEMY_2,targets:[Ct.PLAYER_2],move:new ke(t.FIRE_SPIN),ignorePp:!0}),await mA(E,E.currentBattle.mysteryEncounter.enemyPartyConfigs[0])}).withSimpleOption({buttonLabel:`${hs}:option.2.label`,buttonTooltip:`${hs}:option.2.tooltip`,selected:[{text:`${hs}:option.2.selected`}]},async E=>{const A=E.currentBattle.mysteryEncounter,s=E.getParty().filter(I=>I.isAllowedInBattle()&&!I.getTypes().includes(n.FIRE));for(const I of s){const i=ak/100,a=Math.floor(I.getMaxHp()*i);H1(E,I,a)}const R=s.filter(I=>xe(I.status)||xe(I.status.effect)||I.status.effect===J.NONE);if((R==null?void 0:R.length)>0){const I=le(R.length),i=R[I];i.trySetStatus(J.BURN)&&(A.setDialogueToken("burnedPokemon",i.getNameToRender()),A.setDialogueToken("abilityName",new X(O.HEATPROOF,3).name),bA(E,`${hs}:option.2.target_burned`),u6(i,O.HEATPROOF))}Lt(E,!0)}).withOption(Dt.newOptionWithMode(It.DISABLED_OR_SPECIAL).withPrimaryPokemonRequirement(Vi.Some(new SL(n.FIRE,!0,1),new ql($7,!0))).withDialogue({buttonLabel:`${hs}:option.3.label`,buttonTooltip:`${hs}:option.3.tooltip`,disabledButtonTooltip:`${hs}:option.3.disabled_tooltip`,selected:[{text:`${hs}:option.3.selected`}]}).withPreOptionPhase(async E=>{gA(E,!1,!1,2e3)}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter;await gA(E),ot(E,{fillRemaining:!0},void 0,()=>{Cv(E)});const s=A.options[2].primaryPokemon;ER(E,[s.id],Ke(e.VOLCARONA).baseExp*2),Lt(E)}).build()).build();function Cv(E){var s;const A=(s=E.getParty())==null?void 0:s[0];if(A){let R=St(E,x.ATTACK_TYPE_BOOSTER);R||(R=St(E,x.ATTACK_TYPE_BOOSTER,[n.FIRE])),tR(E,A,R);const I=E.currentBattle.mysteryEncounter;I.setDialogueToken("itemName",R.name),I.setDialogueToken("leadPokemon",A.getNameToRender()),bA(E,`${hs}:found_item`)}}T(Cv,"giveLeadPokemonAttackTypeBoostItem");const IR="mysteryEncounters/theStrongStuff",Uv=15,Dv=10,rk=MA.withEncounterType(me.THE_STRONG_STUFF).withEncounterTier(Gt.COMMON).withSceneWaveRangeRequirement(...HA).withScenePartySizeRequirement(3,6).withMaxAllowedEncounters(1).withHideWildIntroMessage(!0).withAutoHideIntroVisuals(!1).withFleeAllowed(!1).withIntroSpriteConfigs([{spriteKey:"berry_juice",fileRoot:"items",hasShadow:!0,isItem:!0,scale:1.25,x:-15,y:3,disableAnimation:!0},{spriteKey:e.SHUCKLE.toString(),fileRoot:"pokemon",hasShadow:!0,repeat:!0,scale:1.25,x:20,y:10,yShadow:7}]).withIntroDialogue([{text:`${IR}:intro`}]).withOnInit(E=>{const A=E.currentBattle.mysteryEncounter,s={levelAdditiveModifier:1,disableSwitch:!0,pokemonConfigs:[{species:Ke(e.SHUCKLE),isBoss:!0,bossSegments:5,customPokemonData:new $E({spriteScale:1.25}),nature:be.BOLD,moveSet:[t.INFESTATION,t.SALT_CURE,t.GASTRO_ACID,t.HEAL_ORDER],modifierConfigs:[{modifier:St(E,x.BERRY,[nt.SITRUS])},{modifier:St(E,x.BERRY,[nt.ENIGMA])},{modifier:St(E,x.BERRY,[nt.APICOT])},{modifier:St(E,x.BERRY,[nt.GANLON])},{modifier:St(E,x.BERRY,[nt.LUM]),stackCount:2}],tags:[Y.MYSTERY_ENCOUNTER_POST_SUMMON],mysteryEncounterBattleEffects:T(R=>{bA(R.scene,`${IR}:option.2.stat_boost`),R.scene.unshiftPhase(new Ft(R.scene,R.getBattlerIndex(),!0,[B.DEF,B.SPDEF],2))},"mysteryEncounterBattleEffects")}]};return A.enemyPartyConfigs=[s],Uo(E,[t.GASTRO_ACID,t.STEALTH_ROCK]),A.setDialogueToken("shuckleName",Ke(e.SHUCKLE).getName()),!0}).setLocalizationKey(`${IR}`).withTitle(`${IR}:title`).withDescription(`${IR}:description`).withQuery(`${IR}:query`).withSimpleOption({buttonLabel:`${IR}:option.1.label`,buttonTooltip:`${IR}:option.1.tooltip`,selected:[{text:`${IR}:option.1.selected`}]},async E=>{const A=E.currentBattle.mysteryEncounter;return E.time.delayedCall(750,()=>{gA(E,!0,!0,50)}),E.getParty().slice(0).sort((R,I)=>{const i=R.calculateBaseStats().reduce((L,S)=>L+S,0);return I.calculateBaseStats().reduce((L,S)=>L+S,0)-i}).forEach((R,I)=>{I<2?(Av(R,-Uv),A.setDialogueToken("highBstPokemon"+(I+1),R.getNameToRender())):Av(R,Dv)}),A.setDialogueToken("reductionValue",Uv.toString()),A.setDialogueToken("increaseValue",Dv.toString()),await Kt(E,`${IR}:option.1.selected_2`,null,void 0,!0),A.dialogue.outro=[{text:`${IR}:outro`}],ot(E,{fillRemaining:!0}),Lt(E,!0),!0}).withSimpleOption({buttonLabel:`${IR}:option.2.label`,buttonTooltip:`${IR}:option.2.tooltip`,selected:[{text:`${IR}:option.2.selected`}]},async E=>{const A=E.currentBattle.mysteryEncounter;ot(E,{guaranteedModifierTypeFuncs:[x.SOUL_DEW],fillRemaining:!0}),A.startOfBattleEffects.push({sourceBattlerIndex:Ct.ENEMY,targets:[Ct.PLAYER],move:new ke(t.GASTRO_ACID),ignorePp:!0},{sourceBattlerIndex:Ct.ENEMY,targets:[Ct.PLAYER],move:new ke(t.STEALTH_ROCK),ignorePp:!0}),A.dialogue.outro=[],await gA(E,!0,!0,500),await mA(E,A.enemyPartyConfigs[0])}).build(),Ds="mysteryEncounters/thePokemonSalesman",Ko=4,Nk=100,Tk=MA.withEncounterType(me.THE_POKEMON_SALESMAN).withEncounterTier(Gt.ULTRA).withSceneWaveRangeRequirement(...HA).withSceneRequirement(new yO(0,Ko)).withAutoHideIntroVisuals(!1).withIntroSpriteConfigs([{spriteKey:"pokemon_salesman",fileRoot:"mystery-encounters",hasShadow:!0}]).withIntroDialogue([{text:`${Ds}:intro`},{text:`${Ds}:intro_dialogue`,speaker:`${Ds}:speaker`}]).setLocalizationKey(`${Ds}`).withTitle(`${Ds}:title`).withDescription(`${Ds}:description`).withQuery(`${Ds}:query`).withOnInit(E=>{const A=E.currentBattle.mysteryEncounter;let s=Ke(Jl([0,5],void 0,void 0,!1,!1,!1)),R=0;for(;(xe(s.abilityHidden)||s.abilityHidden===O.NONE)&&R<5;)s=Ke(Jl([0,5],void 0,void 0,!1,!1,!1)),R++;let I;if(le(Nk)===0||xe(s.abilityHidden)||s.abilityHidden===O.NONE){s=Ke(e.MAGIKARP);const l=s.ability2?2:1;I=new Ss(E,s,5,l,s.formIndex,void 0,!0,0)}else{const l=s.ability2?2:1;I=new Ss(E,s,5,l,s.formIndex)}I.generateAndPopulateMoveset();const{spriteKey:i,fileRoot:a}=wM(I);A.spriteConfigs.push({spriteKey:i,fileRoot:a,hasShadow:!0,repeat:!0,isPokemon:!0});const L=CA[s.speciesId];let S=Ko*(Math.max(L,2.5)/5);I.shiny&&(S=Ko,I.abilityIndex=0,A.dialogue.encounterOptionsDialogue.description=`${Ds}:description_shiny`,A.options[0].dialogue.buttonTooltip=`${Ds}:option.1.tooltip_shiny`);const o=E.getWaveMoneyAmount(S);return A.setDialogueToken("purchasePokemon",I.getNameToRender()),A.setDialogueToken("price",o.toString()),A.misc={price:o,pokemon:I},I.calculateStats(),!0}).withOption(Dt.newOptionWithMode(It.DISABLED_OR_DEFAULT).withHasDexProgress(!0).withSceneMoneyRequirement(0,Ko).withDialogue({buttonLabel:`${Ds}:option.1.label`,buttonTooltip:`${Ds}:option.1.tooltip`,selected:[{text:`${Ds}:option.1.selected_message`}]}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter,s=A.misc.price,R=A.misc.pokemon;xR(E,-s,!0,!1),await en(E,`${Ds}:option.1.selected_dialogue`,`${Ds}:speaker`),await gA(E);const I=new xs(R);I.player=!1,await TL(E,I.toPokemon(E),null,ge.POKEBALL,!0,!0),Lt(E,!0)}).build()).withSimpleOption({buttonLabel:`${Ds}:option.2.label`,buttonTooltip:`${Ds}:option.2.tooltip`,selected:[{text:`${Ds}:option.2.selected`}]},async E=>(Lt(E,!0),!0)).build(),fE="mysteryEncounters/anOfferYouCantRefuse",Sk=10,ok=30,lk=MA.withEncounterType(me.AN_OFFER_YOU_CANT_REFUSE).withEncounterTier(Gt.GREAT).withSceneWaveRangeRequirement(...HA).withScenePartySizeRequirement(2,6,!0).withIntroSpriteConfigs([{spriteKey:e.LIEPARD.toString(),fileRoot:"pokemon",hasShadow:!0,repeat:!0,x:0,y:-4,yShadow:-4},{spriteKey:"rich_kid_m",fileRoot:"trainer",hasShadow:!0,x:2,y:5,yShadow:5}]).withIntroDialogue([{text:`${fE}:intro`},{text:`${fE}:intro_dialogue`,speaker:`${fE}:speaker`}]).setLocalizationKey(`${fE}`).withTitle(`${fE}:title`).withDescription(`${fE}:description`).withQuery(`${fE}:query`).withOnInit(E=>{const A=E.currentBattle.mysteryEncounter,s=W7(E,!0,!0),R=s.getSpeciesForm().getRootSpeciesId(),I=CA[R]??1,i=Math.max(ok/10*I,Sk),a=E.getWaveMoneyAmount(i);if(A.setDialogueToken("strongestPokemon",s.getNameToRender()),A.setDialogueToken("price",a.toString()),A.misc={pokemon:s,price:a},A.options[1].primaryPokemonRequirements[0].meetsRequirement(E)){const o=A.dialogueTokens.option2PrimaryAbility,l=A.dialogueTokens.option2PrimaryMove;o?A.setDialogueToken("moveOrAbility",o):l&&A.setDialogueToken("moveOrAbility",l)}const S=St(E,x.SHINY_CHARM);return A.setDialogueToken("itemName",(S==null?void 0:S.name)??U.t("modifierType:ModifierType.SHINY_CHARM.name")),A.setDialogueToken("liepardName",Ke(e.LIEPARD).getName()),!0}).withOption(Dt.newOptionWithMode(It.DEFAULT).withDialogue({buttonLabel:`${fE}:option.1.label`,buttonTooltip:`${fE}:option.1.tooltip`,selected:[{text:`${fE}:option.1.selected`,speaker:`${fE}:speaker`}]}).withPreOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter;return xR(E,A.misc.price),E.removePokemonFromPlayerParty(A.misc.pokemon),!0}).withOptionPhase(async E=>{E.unshiftPhase(new gE(E,x.SHINY_CHARM)),Lt(E,!0)}).build()).withOption(Dt.newOptionWithMode(It.DISABLED_OR_SPECIAL).withPrimaryPokemonRequirement(Vi.Some(new KI(Q7,!0),new ql(J7,!0))).withDialogue({buttonLabel:`${fE}:option.2.label`,buttonTooltip:`${fE}:option.2.tooltip`,disabledButtonTooltip:`${fE}:option.2.tooltip_disabled`,selected:[{speaker:`${fE}:speaker`,text:`${fE}:option.2.selected`}]}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter;xR(E,A.misc.price),ER(E,A.options[1].primaryPokemon.id,Ke(e.LIEPARD).baseExp,!0),Lt(E,!0)}).build()).withSimpleOption({buttonLabel:`${fE}:option.3.label`,buttonTooltip:`${fE}:option.3.tooltip`,selected:[{speaker:`${fE}:speaker`,text:`${fE}:option.3.selected`}]},async E=>(Lt(E,!0),!0)).build(),VE="mysteryEncounters/delibirdy",zM=["BerryModifier","PokemonInstantReviveModifier"],eu=["BerryModifier","PokemonInstantReviveModifier","TerastallizeModifier","PokemonBaseStatModifier","PokemonBaseStatTotalModifier"],Mv=2,Ck=MA.withEncounterType(me.DELIBIRDY).withEncounterTier(Gt.GREAT).withSceneWaveRangeRequirement(...HA).withSceneRequirement(new yO(0,Mv)).withPrimaryPokemonRequirement(Vi.Some(new MI(zM),new MI(eu,1,!0))).withIntroSpriteConfigs([{spriteKey:"",fileRoot:"",species:e.DELIBIRD,hasShadow:!0,repeat:!0,startFrame:38,scale:.94},{spriteKey:"",fileRoot:"",species:e.DELIBIRD,hasShadow:!0,repeat:!0,scale:1.06},{spriteKey:"",fileRoot:"",species:e.DELIBIRD,hasShadow:!0,repeat:!0,startFrame:65,x:1,y:5,yShadow:5}]).withIntroDialogue([{text:`${VE}:intro`}]).setLocalizationKey(`${VE}`).withTitle(`${VE}:title`).withDescription(`${VE}:description`).withQuery(`${VE}:query`).withOutroDialogue([{text:`${VE}:outro`}]).withOnInit(E=>(E.currentBattle.mysteryEncounter.setDialogueToken("delibirdName",Ke(e.DELIBIRD).getName()),E.loadBgm("mystery_encounter_delibirdy","mystery_encounter_delibirdy.mp3"),!0)).withOnVisualsStart(E=>(E.fadeAndSwitchBgm("mystery_encounter_delibirdy"),!0)).withOption(Dt.newOptionWithMode(It.DISABLED_OR_DEFAULT).withSceneMoneyRequirement(0,Mv).withDialogue({buttonLabel:`${VE}:option.1.label`,buttonTooltip:`${VE}:option.1.tooltip`,selected:[{text:`${VE}:option.1.selected`}]}).withPreOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter;return xR(E,-A.options[0].requirements[0].requiredMoney,!0,!1),!0}).withOptionPhase(async E=>{const A=E.findModifier(s=>s instanceof cR);if(A&&A.getStackCount()>=A.getMaxStackCount(E)){const s=St(E,x.SHELL_BELL);await tR(E,E.getParty()[0],s),E.playSound("item_fanfare"),await Kt(E,U.t("battle:rewardGain",{modifierName:s.name}),null,void 0,!0)}else E.unshiftPhase(new gE(E,x.AMULET_COIN));Lt(E,!0)}).build()).withOption(Dt.newOptionWithMode(It.DISABLED_OR_DEFAULT).withPrimaryPokemonRequirement(new MI(zM)).withDialogue({buttonLabel:`${VE}:option.2.label`,buttonTooltip:`${VE}:option.2.tooltip`,secondOptionPrompt:`${VE}:option.2.select_prompt`,selected:[{text:`${VE}:option.2.selected`}]}).withPreOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter;return mE(E,T(I=>I.getHeldItems().filter(a=>zM.some(L=>a.constructor.name===L)&&a.isTransferable).map(a=>({label:a.type.name,handler:T(()=>(A.setDialogueToken("chosenItem",a.type.name),A.misc={chosenPokemon:I,chosenModifier:a},!0),"handler")})),"onPokemonSelected"),void 0,T(I=>A.options[1].pokemonMeetsPrimaryRequirements(E,I)?null:UA(E,`${VE}:invalid_selection`)??null,"selectableFilter"))}).withOptionPhase(async E=>{const s=E.currentBattle.mysteryEncounter.misc.chosenModifier;if(s instanceof _E){const R=E.findModifier(I=>I instanceof YI);if(R&&R.getStackCount()>=R.getMaxStackCount(E)){const I=St(E,x.SHELL_BELL);await tR(E,E.getParty()[0],I),E.playSound("item_fanfare"),await Kt(E,U.t("battle:rewardGain",{modifierName:I.name}),null,void 0,!0)}else E.unshiftPhase(new gE(E,x.CANDY_JAR))}else{const R=E.findModifier(I=>I instanceof $i);if(R&&R.getStackCount()>=R.getMaxStackCount(E)){const I=St(E,x.SHELL_BELL);await tR(E,E.getParty()[0],I),E.playSound("item_fanfare"),await Kt(E,U.t("battle:rewardGain",{modifierName:I.name}),null,void 0,!0)}else E.unshiftPhase(new gE(E,x.BERRY_POUCH))}s.stackCount-=1,s.stackCount===0&&E.removeModifier(s),Lt(E,!0)}).build()).withOption(Dt.newOptionWithMode(It.DISABLED_OR_DEFAULT).withPrimaryPokemonRequirement(new MI(eu,1,!0)).withDialogue({buttonLabel:`${VE}:option.3.label`,buttonTooltip:`${VE}:option.3.tooltip`,secondOptionPrompt:`${VE}:option.3.select_prompt`,selected:[{text:`${VE}:option.3.selected`}]}).withPreOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter;return mE(E,T(I=>I.getHeldItems().filter(a=>!eu.some(L=>a.constructor.name===L)&&a.isTransferable).map(a=>({label:a.type.name,handler:T(()=>(A.setDialogueToken("chosenItem",a.type.name),A.misc={chosenPokemon:I,chosenModifier:a},!0),"handler")})),"onPokemonSelected"),void 0,T(I=>A.options[2].pokemonMeetsPrimaryRequirements(E,I)?null:UA(E,`${VE}:invalid_selection`)??null,"selectableFilter"))}).withOptionPhase(async E=>{const s=E.currentBattle.mysteryEncounter.misc.chosenModifier,R=E.findModifier(I=>I instanceof qi);if(R&&R.getStackCount()>=R.getMaxStackCount(E)){const I=St(E,x.SHELL_BELL);await tR(E,E.getParty()[0],I),E.playSound("item_fanfare"),await Kt(E,U.t("battle:rewardGain",{modifierName:I.name}),null,void 0,!0)}else E.unshiftPhase(new gE(E,x.HEALING_CHARM));s.stackCount-=1,s.stackCount===0&&E.removeModifier(s),Lt(E,!0)}).build()).build(),Ks="mysteryEncounters/absoluteAvarice",Uk=MA.withEncounterType(me.ABSOLUTE_AVARICE).withEncounterTier(Gt.GREAT).withSceneWaveRangeRequirement(...HA).withSceneRequirement(new $l("BerryModifier",4)).withFleeAllowed(!1).withIntroSpriteConfigs([{spriteKey:"",fileRoot:"",species:e.GREEDENT,hasShadow:!0,alpha:.001,repeat:!0,x:-5},{spriteKey:"",fileRoot:"",species:e.GREEDENT,hasShadow:!1,repeat:!0,x:-5},{spriteKey:"lum_berry",fileRoot:"items",isItem:!0,x:7,y:-14,hidden:!0,disableAnimation:!0},{spriteKey:"salac_berry",fileRoot:"items",isItem:!0,x:2,y:4,hidden:!0,disableAnimation:!0},{spriteKey:"lansat_berry",fileRoot:"items",isItem:!0,x:32,y:5,hidden:!0,disableAnimation:!0},{spriteKey:"liechi_berry",fileRoot:"items",isItem:!0,x:6,y:-5,hidden:!0,disableAnimation:!0},{spriteKey:"sitrus_berry",fileRoot:"items",isItem:!0,x:7,y:8,hidden:!0,disableAnimation:!0},{spriteKey:"enigma_berry",fileRoot:"items",isItem:!0,x:26,y:-4,hidden:!0,disableAnimation:!0},{spriteKey:"leppa_berry",fileRoot:"items",isItem:!0,x:16,y:-27,hidden:!0,disableAnimation:!0},{spriteKey:"petaya_berry",fileRoot:"items",isItem:!0,x:30,y:-17,hidden:!0,disableAnimation:!0},{spriteKey:"ganlon_berry",fileRoot:"items",isItem:!0,x:16,y:-11,hidden:!0,disableAnimation:!0},{spriteKey:"apicot_berry",fileRoot:"items",isItem:!0,x:14,y:-2,hidden:!0,disableAnimation:!0},{spriteKey:"starf_berry",fileRoot:"items",isItem:!0,x:18,y:9,hidden:!0,disableAnimation:!0}]).withHideWildIntroMessage(!0).withAutoHideIntroVisuals(!1).withIntroDialogue([{text:`${Ks}:intro`}]).setLocalizationKey(`${Ks}`).withTitle(`${Ks}:title`).withDescription(`${Ks}:description`).withQuery(`${Ks}:query`).withOnInit(E=>{const A=E.currentBattle.mysteryEncounter;E.loadSe("PRSFX- Bug Bite","battle_anims","PRSFX- Bug Bite.wav"),E.loadSe("Follow Me","battle_anims","Follow Me.mp3");const s=E.findModifiers(L=>L instanceof _E),R=new Map;E.getParty().forEach(L=>{const S=s.filter(o=>o.pokemonId===L.id);(S==null?void 0:S.length)>0&&R.set(L.id,S)}),A.misc={berryItemsMap:R};const I=[];s.forEach(L=>{for(let S=0;S<L.stackCount;S++){const o=St(E,x.BERRY,[L.berryType]);I.push({modifier:o})}});const i=E.currentBattle.waveIndex<50?[B.SPDEF]:[B.ATK,B.DEF,B.SPATK,B.SPDEF,B.SPD],a={levelAdditiveModifier:1,pokemonConfigs:[{species:Ke(e.GREEDENT),isBoss:!0,bossSegments:3,moveSet:[t.THRASH,t.BODY_PRESS,t.STUFF_CHEEKS,t.CRUNCH],modifierConfigs:I,tags:[Y.MYSTERY_ENCOUNTER_POST_SUMMON],mysteryEncounterBattleEffects:T(L=>{bA(L.scene,`${Ks}:option.1.boss_enraged`),L.scene.unshiftPhase(new Ft(L.scene,L.getBattlerIndex(),!0,i,1))},"mysteryEncounterBattleEffects")}]};return A.enemyPartyConfigs=[a],A.setDialogueToken("greedentName",Ke(e.GREEDENT).getName()),!0}).withOnVisualsStart(E=>(Dk(E),uv(E),E.findModifiers(s=>s instanceof _E).forEach(s=>{E.removeModifier(s)}),E.updateModifiers(!0),!0)).withOption(Dt.newOptionWithMode(It.DEFAULT).withDialogue({buttonLabel:`${Ks}:option.1.label`,buttonTooltip:`${Ks}:option.1.tooltip`,selected:[{text:`${Ks}:option.1.selected`}]}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter,s=St(E,x.REVIVER_SEED);A.setDialogueToken("foodReward",(s==null?void 0:s.name)??U.t("modifierType:ModifierType.REVIVER_SEED.name")),ot(E,{fillRemaining:!0},void 0,T(()=>{E.getParty().forEach(i=>{const a=i.getHeldItems();if(s&&!a.some(L=>L instanceof BL)){const L=s.newModifier(i);E.addModifier(L,!1,!1,!1,!0)}}),bA(E,`${Ks}:option.1.food_stash`)},"givePartyPokemonReviverSeeds")),A.startOfBattleEffects.push({sourceBattlerIndex:Ct.ENEMY,targets:[Ct.ENEMY],move:new ke(t.STUFF_CHEEKS),ignorePp:!0}),await gA(E,!0,!0,500),await mA(E,A.enemyPartyConfigs[0])}).build()).withOption(Dt.newOptionWithMode(It.DEFAULT).withDialogue({buttonLabel:`${Ks}:option.2.label`,buttonTooltip:`${Ks}:option.2.tooltip`,selected:[{text:`${Ks}:option.2.selected`}]}).withOptionPhase(async E=>{const s=E.currentBattle.mysteryEncounter.misc.berryItemsMap;E.getParty().forEach(I=>{const i=s.get(I.id),a=[];i==null||i.forEach(S=>a.push(...new Array(S.stackCount).fill(S.berryType)));const L=Math.floor((a.length??0)*2/5);if(L>0)for(let S=0;S<L;S++){Phaser.Math.RND.shuffle(a);const o=a.pop(),l=St(E,x.BERRY,[o]);tR(E,I,l)}}),await E.updateModifiers(!0),await gA(E,!0,!0,500),Lt(E,!0)}).build()).withOption(Dt.newOptionWithMode(It.DEFAULT).withDialogue({buttonLabel:`${Ks}:option.3.label`,buttonTooltip:`${Ks}:option.3.tooltip`,selected:[{text:`${Ks}:option.3.selected`}]}).withPreOptionPhase(async E=>(Mk(E),uv(E,!0),!0)).withOptionPhase(async E=>{const A=_1(E,!1,!0).level-2,s=new es(E,Ke(e.GREEDENT),A,qe.NONE,!1);s.moveset=[new ke(t.THRASH),new ke(t.BODY_PRESS),new ke(t.STUFF_CHEEKS),new ke(t.SLACK_OFF)],s.passive=!0,await gA(E,!0,!0,500),await TL(E,s,null,ge.POKEBALL,!1),Lt(E,!0)}).build()).build();function Dk(E){var I;const R=(I=E.currentBattle.mysteryEncounter.introVisuals)==null?void 0:I.getSpriteAtIndex(1);E.playSound("battle_anims/Follow Me"),E.tweens.chain({targets:R,tweens:[{duration:500,ease:"Cubic.easeOut",y:"+=75",x:"-=65",scale:1.1},{duration:50,ease:"Cubic.easeOut",yoyo:!0,x:(sA(2)>0?"-=":"+=")+5,y:(sA(2)>0?"-=":"+=")+5},{duration:50,ease:"Cubic.easeOut",yoyo:!0,x:(sA(2)>0?"-=":"+=")+5,y:(sA(2)>0?"-=":"+=")+5},{duration:50,ease:"Cubic.easeOut",yoyo:!0,x:(sA(2)>0?"-=":"+=")+5,y:(sA(2)>0?"-=":"+=")+5},{duration:50,ease:"Cubic.easeOut",yoyo:!0,x:(sA(2)>0?"-=":"+=")+5,y:(sA(2)>0?"-=":"+=")+5},{duration:50,ease:"Cubic.easeOut",yoyo:!0,x:(sA(2)>0?"-=":"+=")+5,y:(sA(2)>0?"-=":"+=")+5},{duration:50,ease:"Cubic.easeOut",yoyo:!0,x:(sA(2)>0?"-=":"+=")+5,y:(sA(2)>0?"-=":"+=")+5},{duration:500,ease:"Cubic.easeOut",y:"-=75",x:"+=65",scale:1},{duration:300,ease:"Cubic.easeOut",yoyo:!0,y:"-=20",loop:1}]})}T(Dk,"doGreedentSpriteSteal");function Mk(E){var R;const A=(R=E.currentBattle.mysteryEncounter.introVisuals)==null?void 0:R.getSpriteAtIndex(1);let s=1;E.tweens.add({targets:A,duration:150,ease:"Cubic.easeOut",yoyo:!0,y:"-=8",loop:5,onStart:T(()=>{E.playSound("battle_anims/PRSFX- Bug Bite")},"onStart"),onLoop:T(()=>{s%2===0&&E.playSound("battle_anims/PRSFX- Bug Bite"),s++},"onLoop")})}T(Mk,"doGreedentEatBerries");function uv(E,A=!1){let R=["starf","sitrus","lansat","salac","apicot","enigma","liechi","ganlon","lum","petaya","leppa"];A&&(R=R.reverse());const I=E.currentBattle.mysteryEncounter;R.forEach((i,a)=>{var D;const L=I.spriteConfigs.findIndex(M=>{var c;return(c=M.spriteKey)==null?void 0:c.includes(i)});let S,o;const l=(D=I.introVisuals)==null?void 0:D.getSpriteAtIndex(L);l&&(S=l[0],o=l[1]),E.time.delayedCall(150*a+400,()=>{S&&S.setVisible(!A),o&&o.setVisible(!A),i==="petaya"&&S&&o&&!A&&E.time.delayedCall(200,()=>{uk(E,[S,o],30,500)})})})}T(uv,"doBerrySpritePile");function uk(E,A,s,R){let I=1,i=s;const a=T(()=>{E.tweens.add({targets:A,y:"+="+i,x:{value:"+="+I*I*10,ease:"Linear"},duration:I*R,ease:"Cubic.easeIn",onComplete:T(()=>{I=I>.01?I*.5:0,I&&(i=i*I,E.tweens.add({targets:A,y:"-="+i,x:{value:"+="+I*I*10,ease:"Linear"},duration:I*R,ease:"Cubic.easeOut",onComplete:T(()=>a(),"onComplete")}))},"onComplete")})},"doBounce");a()}T(uk,"doBerryBounce");const Fs="mysteryEncounters/aTrainersTest",hk=MA.withEncounterType(me.A_TRAINERS_TEST).withEncounterTier(Gt.ROGUE).withSceneWaveRangeRequirement(100,HA[1]).withIntroSpriteConfigs([]).withIntroDialogue([{text:`${Fs}:intro`}]).withAutoHideIntroVisuals(!1).withOnInit(E=>{const A=E.currentBattle.mysteryEncounter;let s,R,I;switch(le(5)){default:case 0:s=C.BUCK,R=tn(e.CLAYDOL),I="buck";break;case 1:s=C.CHERYL,R=tn(e.BLISSEY),I="cheryl";break;case 2:s=C.MARLEY,R=tn(e.ARCANINE),I="marley";break;case 3:s=C.MIRA,R=tn(e.ALAKAZAM,!1,1),I="mira";break;case 4:s=C.RILEY,R=tn(e.LUCARIO,!1,1),I="riley";break}A.dialogue.intro=[{speaker:`trainerNames:${I}`,text:`${Fs}:${I}.intro_dialogue`}],A.options[0].dialogue.selected=[{speaker:`trainerNames:${I}`,text:`${Fs}:${I}.accept`}],A.options[1].dialogue.selected=[{speaker:`trainerNames:${I}`,text:`${Fs}:${I}.decline`}],A.setDialogueToken("statTrainerName",U.t(`trainerNames:${I}`));const i=U.t(`${Fs}:title`)+`:
`+U.t(`trainerNames:${I}`);A.misc={trainerType:s,trainerNameKey:I,trainerEggDescription:i};const a=BA[s].clone(),L=a.getSpriteKey();return A.enemyPartyConfigs.push({levelAdditiveModifier:1,trainerConfig:a}),A.spriteConfigs=[{spriteKey:R.spriteKey,fileRoot:R.fileRoot,hasShadow:!0,repeat:!0,isPokemon:!0,x:22,y:-2,yShadow:-2},{spriteKey:L,fileRoot:"trainer",hasShadow:!0,disableAnimation:!0,x:-24,y:4,yShadow:4}],!0}).setLocalizationKey(`${Fs}`).withTitle(`${Fs}:title`).withDescription(`${Fs}:description`).withQuery(`${Fs}:query`).withIntroDialogue().withSimpleOption({buttonLabel:`${Fs}:option.1.label`,buttonTooltip:`${Fs}:option.1.tooltip`},async E=>{const A=E.currentBattle.mysteryEncounter,s=A.enemyPartyConfigs[0];await gA(E);const R={scene:E,pulled:!1,sourceType:hE.EVENT,eggDescriptor:A.misc.trainerEggDescription,tier:f.EPIC};A.setDialogueToken("eggType",U.t(`${Fs}:eggTypes.epic`)),ot(E,{guaranteedModifierTypeFuncs:[x.SACRED_ASH],guaranteedModifierTiers:[W.ROGUE,W.ULTRA],fillRemaining:!0},[R]),await mA(E,s)}).withSimpleOption({buttonLabel:`${Fs}:option.2.label`,buttonTooltip:`${Fs}:option.2.tooltip`},async E=>{const A=E.currentBattle.mysteryEncounter;E.unshiftPhase(new oL(E,!0));const s={scene:E,pulled:!1,sourceType:hE.EVENT,eggDescriptor:A.misc.trainerEggDescription,tier:f.RARE};A.setDialogueToken("eggType",U.t(`${Fs}:eggTypes.rare`)),ot(E,{fillRemaining:!1,rerollMultiplier:-1},[s]),Lt(E)}).withOutroDialogue([{text:`${Fs}:outro`}]).build(),QR="mysteryEncounters/trashToTreasure",hv=700,cv=2.5,ck=MA.withEncounterType(me.TRASH_TO_TREASURE).withEncounterTier(Gt.ULTRA).withSceneWaveRangeRequirement(60,HA[1]).withMaxAllowedEncounters(1).withFleeAllowed(!1).withIntroSpriteConfigs([{spriteKey:e.GARBODOR.toString()+"-gigantamax",fileRoot:"pokemon",hasShadow:!1,disableAnimation:!0,scale:1.5,y:8,tint:.4}]).withAutoHideIntroVisuals(!1).withIntroDialogue([{text:`${QR}:intro`}]).setLocalizationKey(`${QR}`).withTitle(`${QR}:title`).withDescription(`${QR}:description`).withQuery(`${QR}:query`).withOnInit(E=>{const A=E.currentBattle.mysteryEncounter,I={levelAdditiveModifier:.5,pokemonConfigs:[{species:Ke(e.GARBODOR),isBoss:!0,formIndex:1,bossSegmentModifier:1,moveSet:[t.PAYBACK,t.GUNK_SHOT,t.STOMPING_TANTRUM,t.DRAIN_PUNCH]}],disableSwitch:!0};return A.enemyPartyConfigs=[I],Uo(E,[t.TOXIC,t.AMNESIA]),E.loadSe("PRSFX- Dig2","battle_anims","PRSFX- Dig2.wav"),E.loadSe("PRSFX- Venom Drench","battle_anims","PRSFX- Venom Drench.wav"),A.setDialogueToken("costMultiplier",cv.toString()),!0}).withOption(Dt.newOptionWithMode(It.DEFAULT).withDialogue({buttonLabel:`${QR}:option.1.label`,buttonTooltip:`${QR}:option.1.tooltip`,selected:[{text:`${QR}:option.1.selected`}]}).withPreOptionPhase(async E=>{Pk(E)}).withOptionPhase(async E=>{await gA(E),await Gk(E);const A=St(E,x.MYSTERY_ENCOUNTER_BLACK_SLUDGE,[cv]),s=A==null?void 0:A.newModifier();s&&(await E.addModifier(s,!1,!1,!1,!0),E.playSound("battle_anims/PRSFX- Venom Drench",{volume:2}),await Kt(E,U.t("battle:rewardGain",{modifierName:s.type.name}),null,void 0,!0)),Lt(E,!0)}).build()).withOption(Dt.newOptionWithMode(It.DEFAULT).withDialogue({buttonLabel:`${QR}:option.2.label`,buttonTooltip:`${QR}:option.2.tooltip`,selected:[{text:`${QR}:option.2.selected`}]}).withOptionPhase(async E=>{E.setFieldScale(.75),await Kt(E,`${QR}:option.2.selected_2`),await gA(E);const A=E.currentBattle.mysteryEncounter;ot(E,{guaranteedModifierTiers:[W.ROGUE,W.ROGUE,W.ULTRA,W.GREAT],fillRemaining:!0}),A.startOfBattleEffects.push({sourceBattlerIndex:Ct.ENEMY,targets:[Ct.PLAYER],move:new ke(t.TOXIC),ignorePp:!0},{sourceBattlerIndex:Ct.ENEMY,targets:[Ct.ENEMY],move:new ke(t.AMNESIA),ignorePp:!0}),await mA(E,A.enemyPartyConfigs[0])}).build()).build();async function Gk(E){const A=St(E,x.SHELL_BELL),s=St(E,x.LEFTOVERS),R=E.getParty();for(const I of R){const a=E.findModifiers(L=>L instanceof at&&L.pokemonId===I.id,!0).find(L=>L instanceof Qi);if(!a||a.getStackCount()<a.getMaxStackCount(E)){await tR(E,I,s);break}}for(const I of R){const a=E.findModifiers(L=>L instanceof at&&L.pokemonId===I.id,!0).find(L=>L instanceof Qi);if(!a||a.getStackCount()<a.getMaxStackCount(E)){await tR(E,I,s);break}}E.playSound("item_fanfare"),await Kt(E,U.t("battle:rewardGainCount",{modifierName:s.name,count:2}),null,void 0,!0);for(const I of R){const a=E.findModifiers(L=>L instanceof at&&L.pokemonId===I.id,!0).find(L=>L instanceof Ji);if(!a||a.getStackCount()<a.getMaxStackCount(E)){await tR(E,I,A);break}}for(const I of R){const a=E.findModifiers(L=>L instanceof at&&L.pokemonId===I.id,!0).find(L=>L instanceof Ji);if(!a||a.getStackCount()<a.getMaxStackCount(E)){await tR(E,I,A);break}}E.playSound("item_fanfare"),await Kt(E,U.t("battle:rewardGainCount",{modifierName:A.name,count:2}),null,void 0,!0)}T(Gk,"tryApplyDigRewardItems");function Pk(E){E.playSound("battle_anims/PRSFX- Dig2"),E.time.delayedCall(hv,()=>{E.playSound("battle_anims/PRSFX- Dig2"),E.playSound("battle_anims/PRSFX- Venom Drench",{volume:2})}),E.time.delayedCall(hv*2,()=>{E.playSound("battle_anims/PRSFX- Dig2")})}T(Pk,"doGarbageDig");const vE="mysteryEncounters/berriesAbound",_k=MA.withEncounterType(me.BERRIES_ABOUND).withEncounterTier(Gt.COMMON).withSceneWaveRangeRequirement(...HA).withCatchAllowed(!0).withHideWildIntroMessage(!0).withFleeAllowed(!1).withIntroSpriteConfigs([]).withIntroDialogue([{text:`${vE}:intro`}]).withOnInit(E=>{const A=E.currentBattle.mysteryEncounter,s=lo(E,oo),R=E.arena.randomSpecies(E.currentBattle.waveIndex,s,0,BI(E.getParty()),!0),I=new es(E,R,s,qe.NONE,!0);A.setDialogueToken("enemyPokemon",b(I));const i={pokemonConfigs:[{level:s,species:R,dataSource:new xs(I),isBoss:!0}]};A.enemyPartyConfigs=[i];const a=E.currentBattle.waveIndex>160?7:E.currentBattle.waveIndex>120?5:E.currentBattle.waveIndex>40?4:2;QI(E.getParty(),FE.PLAYER,0),A.misc={numBerries:a};const{spriteKey:L,fileRoot:S}=wM(I);A.spriteConfigs=[{spriteKey:"berries_abound_bush",fileRoot:"mystery-encounters",x:25,y:-6,yShadow:-7,disableAnimation:!0,hasShadow:!0},{spriteKey:L,fileRoot:S,hasShadow:!0,tint:.25,x:-5,repeat:!0,isPokemon:!0}];const o=m7(E,PO[B.SPD],!0,!1);return A.misc.fastestPokemon=o,A.misc.enemySpeed=I.getStat(B.SPD),A.setDialogueToken("fastestPokemon",o.getNameToRender()),!0}).setLocalizationKey(`${vE}`).withTitle(`${vE}:title`).withDescription(`${vE}:description`).withQuery(`${vE}:query`).withSimpleOption({buttonLabel:`${vE}:option.1.label`,buttonTooltip:`${vE}:option.1.tooltip`,selected:[{text:`${vE}:option.1.selected`}]},async E=>{const s=E.currentBattle.mysteryEncounter.misc.numBerries,R=T(()=>{const i=U.t(`${vE}:berries`);E.playSound("item_fanfare"),bA(E,U.t("battle:rewardGainCount",{modifierName:i,count:s}));for(let a=0;a<s;a++)tu(E)},"doBerryRewards"),I=[];for(let i=0;i<5;i++){const a=VA(E,x.BERRY);a&&I.push(a)}ot(E,{guaranteedModifierTypeOptions:I,fillRemaining:!1},void 0,R),await mA(E,E.currentBattle.mysteryEncounter.enemyPartyConfigs[0])}).withOption(Dt.newOptionWithMode(It.DEFAULT).withDialogue({buttonLabel:`${vE}:option.2.label`,buttonTooltip:`${vE}:option.2.tooltip`}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter,s=A.misc.fastestPokemon,R=A.misc.enemySpeed,I=s.getStat(B.SPD)/(R*1.1),i=A.misc.numBerries,a=[];for(let L=0;L<5;L++){const S=VA(E,x.BERRY);S&&a.push(S)}if(I<1){const L=T(()=>{const l=U.t(`${vE}:berries`);E.playSound("item_fanfare"),bA(E,U.t("battle:rewardGainCount",{modifierName:l,count:i}));for(let D=0;D<i;D++)tu(E)},"doBerryRewards"),S=E.currentBattle.waveIndex<50?[B.DEF,B.SPDEF,B.SPD]:[B.ATK,B.DEF,B.SPATK,B.SPDEF,B.SPD],o=E.currentBattle.mysteryEncounter.enemyPartyConfigs[0];o.pokemonConfigs[0].tags=[Y.MYSTERY_ENCOUNTER_POST_SUMMON],o.pokemonConfigs[0].mysteryEncounterBattleEffects=l=>{bA(l.scene,`${vE}:option.2.boss_enraged`),l.scene.unshiftPhase(new Ft(l.scene,l.getBattlerIndex(),!0,S,1))},ot(E,{guaranteedModifierTypeOptions:a,fillRemaining:!1},void 0,L),await Kt(E,`${vE}:option.2.selected_bad`),await mA(E,o);return}else{const L=Math.max(Math.min(Math.round((I-1)/.08),i),2);A.setDialogueToken("numBerries",String(L));const S=T(()=>{const o=U.t(`${vE}:berries`);E.playSound("item_fanfare"),bA(E,U.t("battle:rewardGainCount",{modifierName:o,count:L}));for(let l=0;l<L;l++)tu(E,s)},"doFasterBerryRewards");ER(E,s.id,A.enemyPartyConfigs[0].pokemonConfigs[0].species.baseExp),ot(E,{guaranteedModifierTypeOptions:a,fillRemaining:!1},void 0,S),await Kt(E,`${vE}:option.2.selected`),Lt(E)}}).build()).withSimpleOption({buttonLabel:`${vE}:option.3.label`,buttonTooltip:`${vE}:option.3.tooltip`,selected:[{text:`${vE}:option.3.selected`}]},async E=>(Lt(E,!0),!0)).build();function tu(E,A){const s=le(Object.keys(nt).filter(i=>!isNaN(Number(i))).length),R=St(E,x.BERRY,[s]),I=E.getParty();if(A){const i=E.findModifier(a=>a instanceof _E&&a.pokemonId===A.id&&a.berryType===s,!0);if(!i||i.getStackCount()<i.getMaxStackCount(E)){tR(E,A,R);return}}for(const i of I){const a=E.findModifier(L=>L instanceof _E&&L.pokemonId===i.id&&L.berryType===s,!0);if(!a||a.getStackCount()<a.getMaxStackCount(E)){tR(E,i,R);return}}}T(tu,"tryGiveBerry");const cA="mysteryEncounters/clowningAround",Gv=[O.STURDY,O.PICKUP,O.INTIMIDATE,O.GUTS,O.DROUGHT,O.DRIZZLE,O.SNOW_WARNING,O.SAND_STREAM,O.ELECTRIC_SURGE,O.PSYCHIC_SURGE,O.GRASSY_SURGE,O.MISTY_SURGE,O.MAGICIAN,O.SHEER_FORCE,O.PRANKSTER],Hk=MA.withEncounterType(me.CLOWNING_AROUND).withEncounterTier(Gt.ULTRA).withDisallowedChallenges(ht.SINGLE_TYPE).withSceneWaveRangeRequirement(80,HA[1]).withAnimations(VR.SMOKESCREEN).withAutoHideIntroVisuals(!1).withIntroSpriteConfigs([{spriteKey:e.MR_MIME.toString(),fileRoot:"pokemon",hasShadow:!0,repeat:!0,x:-25,tint:.3,y:-3,yShadow:-3},{spriteKey:e.BLACEPHALON.toString(),fileRoot:"pokemon/exp",hasShadow:!0,repeat:!0,x:25,tint:.3,y:-3,yShadow:-3},{spriteKey:"harlequin",fileRoot:"trainer",hasShadow:!0,x:0,y:2,yShadow:2}]).withIntroDialogue([{text:`${cA}:intro`},{text:`${cA}:intro_dialogue`,speaker:`${cA}:speaker`}]).withOnInit(E=>{const A=E.currentBattle.mysteryEncounter,s=C.HARLEQUIN,R=BA[s].clone(),I=new PA(new We(1,Pe.STRONG),new We(1,Pe.STRONGER));R.setPartyTemplates(I),R.setDoubleOnly(),R.partyTemplateFunc=null;const i=Gv[le(Gv.length)];return A.setDialogueToken("ability",new X(i,3).name),A.misc={ability:i},A.enemyPartyConfigs.push({trainerConfig:R,pokemonConfigs:[{species:Ke(e.MR_MIME),isBoss:!0,moveSet:[t.TEETER_DANCE,t.ALLY_SWITCH,t.DAZZLING_GLEAM,t.PSYCHIC]},{species:Ke(e.BLACEPHALON),customPokemonData:new $E({ability:i,types:[le(18),le(18)]}),isBoss:!0,moveSet:[t.TRICK,t.HYPNOSIS,t.SHADOW_BALL,t.MIND_BLOWN]}],doubleBattle:!0}),Uo(E,[t.ROLE_PLAY,t.TAUNT]),A.setDialogueToken("blacephalonName",Ke(e.BLACEPHALON).getName()),!0}).setLocalizationKey(`${cA}`).withTitle(`${cA}:title`).withDescription(`${cA}:description`).withQuery(`${cA}:query`).withOption(Dt.newOptionWithMode(It.DEFAULT).withDialogue({buttonLabel:`${cA}:option.1.label`,buttonTooltip:`${cA}:option.1.tooltip`,selected:[{text:`${cA}:option.1.selected`,speaker:`${cA}:speaker`}]}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter,s=A.enemyPartyConfigs[0];ot(E,{fillRemaining:!0}),A.startOfBattleEffects.push({sourceBattlerIndex:Ct.ENEMY,targets:[Ct.ENEMY_2],move:new ke(t.ROLE_PLAY),ignorePp:!0},{sourceBattlerIndex:Ct.ENEMY_2,targets:[Ct.PLAYER],move:new ke(t.TAUNT),ignorePp:!0},{sourceBattlerIndex:Ct.ENEMY_2,targets:[Ct.PLAYER_2],move:new ke(t.TAUNT),ignorePp:!0}),await gA(E),await mA(E,s)}).withPostOptionPhase(async E=>(await dk(E)&&await Kt(E,`${cA}:option.1.ability_gained`),E.tweens.add({targets:E.currentBattle.trainer,x:"+=16",y:"-=16",alpha:0,ease:"Sine.easeInOut",duration:250}),new dn(VR.SMOKESCREEN,E.getPlayerPokemon(),E.getPlayerPokemon()).playWithoutTargets(E,230,40,2),!0)).build()).withOption(Dt.newOptionWithMode(It.DEFAULT).withDialogue({buttonLabel:`${cA}:option.2.label`,buttonTooltip:`${cA}:option.2.tooltip`,selected:[{text:`${cA}:option.2.selected`,speaker:`${cA}:speaker`},{text:`${cA}:option.2.selected_2`},{text:`${cA}:option.2.selected_3`,speaker:`${cA}:speaker`}]}).withPreOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter,s=E.getParty();let R=s[0],I=R.getHeldItems().filter(o=>o.isTransferable&&!(o instanceof _E)).reduce((o,l)=>o+l.stackCount,0);s.forEach(o=>{const l=o.getHeldItems().filter(D=>D.isTransferable&&!(D instanceof _E)).reduce((D,M)=>D+M.stackCount,0);l>I&&(R=o,I=l)}),A.setDialogueToken("switchPokemon",R.getNameToRender());const i=R.getHeldItems();let a=0;i.filter(o=>o instanceof _E).forEach(o=>{a+=o.stackCount,E.removeModifier(o)}),Au(E,R,a,"Berries");let L=0,S=0;i.filter(o=>o.isTransferable&&!(o instanceof _E)).forEach(o=>{const l=o.type.withTierFromPool(),D=l.tier??W.ULTRA;l.id==="GOLDEN_EGG"||D===W.ROGUE?(S+=o.stackCount,E.removeModifier(o)):(l.id==="LUCKY_EGG"||D===W.ULTRA)&&(L+=o.stackCount,E.removeModifier(o))}),Au(E,R,L,W.ULTRA),Au(E,R,S,W.ROGUE)}).withOptionPhase(async E=>{Lt(E,!0)}).withPostOptionPhase(async E=>{new dn(VR.SMOKESCREEN,E.getPlayerPokemon(),E.getPlayerPokemon()).playWithoutTargets(E,230,40,2),await gA(E,!0,!0,200)}).build()).withOption(Dt.newOptionWithMode(It.DEFAULT).withDialogue({buttonLabel:`${cA}:option.3.label`,buttonTooltip:`${cA}:option.3.tooltip`,selected:[{text:`${cA}:option.3.selected`,speaker:`${cA}:speaker`},{text:`${cA}:option.3.selected_2`},{text:`${cA}:option.3.selected_3`,speaker:`${cA}:speaker`}]}).withPreOptionPhase(async E=>{for(const A of E.getParty()){const s=A.getTypes(!1,!1,!0);let R=A.moveset.filter(a=>a&&!s.includes(a.getMove().type)&&a.getMove().category!==Ot.STATUS).map(a=>a.getMove().type);(R==null?void 0:R.length)>0&&(R=[...new Set(R)].sort(),R=AO(R));const I=[s[0]];let i=null;for(;i===null||i===I[0]||s.includes(i);)R.length>0?i=R.pop()??null:i=le(18);I.push(i),A.customPokemonData||(A.customPokemonData=new $E),A.customPokemonData.types=I,A.isFusion()&&(A.fusionCustomPokemonData||(A.fusionCustomPokemonData=new $E),A.fusionCustomPokemonData.types=I)}}).withOptionPhase(async E=>{Lt(E,!0)}).withPostOptionPhase(async E=>{new dn(VR.SMOKESCREEN,E.getPlayerPokemon(),E.getPlayerPokemon()).playWithoutTargets(E,230,40,2),await gA(E,!0,!0,200)}).build()).withOutroDialogue([{text:`${cA}:outro`}]).build();async function dk(E){return new Promise(async A=>{await en(E,`${cA}:option.1.apply_ability_dialogue`,`${cA}:speaker`),await Kt(E,`${cA}:option.1.apply_ability_message`),E.ui.setMode($.MESSAGE).then(()=>{G6(E,A)})})}T(dk,"handleSwapAbility");function G6(E,A){Kt(E,`${cA}:option.1.ability_prompt`,null,500,!1);const R={options:[{label:U.t("menu:yes"),handler:T(()=>(fk(E,A),!0),"handler")},{label:U.t("menu:no"),handler:T(()=>(A(!1),!0),"handler")}],maxOptions:7,yOffset:0};E.ui.setModeWithoutClear($.OPTION_SELECT,R,null,!0)}T(G6,"displayYesNoOptions");function fk(E,A){mE(E,T(I=>{const i=E.currentBattle.mysteryEncounter;u6(I,i.misc.ability),i.setDialogueToken("chosenPokemon",I.getNameToRender()),E.ui.setMode($.MESSAGE).then(()=>A(!0))},"onPokemonSelected"),T(()=>{E.ui.setMode($.MESSAGE).then(()=>{G6(E,A)})},"onPokemonNotSelected"))}T(fk,"onYesAbilitySwap");function Au(E,A,s,R){const I=[[x.REVIVER_SEED,1],[x.GOLDEN_PUNCH,5],[x.ATTACK_TYPE_BOOSTER,99],[x.QUICK_CLAW,3],[x.WIDE_LENS,3]],i=[[x.LEFTOVERS,4],[x.SHELL_BELL,4],[x.SOUL_DEW,10],[x.SOOTHE_BELL,3],[x.SCOPE_LENS,1],[x.BATON,1],[x.FOCUS_BAND,5],[x.KINGS_ROCK,3],[x.GRIP_CLAW,5]],a=[[nt.APICOT,3],[nt.ENIGMA,2],[nt.GANLON,3],[nt.LANSAT,3],[nt.LEPPA,2],[nt.LIECHI,3],[nt.LUM,2],[nt.PETAYA,3],[nt.SALAC,2],[nt.SITRUS,2],[nt.STARF,3]];let L;R==="Berries"?L=a:L=R===W.ULTRA?I:i;for(let S=0;S<s;S++){if(L.length===0)return;const o=le(L.length),l=L[o];let D;R==="Berries"?D=St(E,x.BERRY,[l[0]]):D=St(E,l[0]),tR(E,A,D),l[1]--,l[1]<=0&&L.splice(o,1)}}T(Au,"generateItemsOfTier");const rA="mysteryEncounters/partTimer",Bk=MA.withEncounterType(me.PART_TIMER).withEncounterTier(Gt.COMMON).withSceneWaveRangeRequirement(...HA).withIntroSpriteConfigs([{spriteKey:"part_timer_crate",fileRoot:"mystery-encounters",hasShadow:!1,y:6,x:15},{spriteKey:"worker_f",fileRoot:"trainer",hasShadow:!0,x:-18,y:4}]).withAutoHideIntroVisuals(!1).withIntroDialogue([{text:`${rA}:intro`},{speaker:`${rA}:speaker`,text:`${rA}:intro_dialogue`}]).withOnInit(E=>(E.loadSe("PRSFX- Horn Drill1","battle_anims","PRSFX- Horn Drill1.wav"),E.loadSe("PRSFX- Horn Drill3","battle_anims","PRSFX- Horn Drill3.wav"),E.loadSe("PRSFX- Guillotine2","battle_anims","PRSFX- Guillotine2.wav"),E.loadSe("PRSFX- Heavy Slam2","battle_anims","PRSFX- Heavy Slam2.wav"),E.loadSe("PRSFX- Agility","battle_anims","PRSFX- Agility.wav"),E.loadSe("PRSFX- Extremespeed1","battle_anims","PRSFX- Extremespeed1.wav"),E.loadSe("PRSFX- Accelerock1","battle_anims","PRSFX- Accelerock1.wav"),E.loadSe("PRSFX- Captivate","battle_anims","PRSFX- Captivate.wav"),E.loadSe("PRSFX- Attract2","battle_anims","PRSFX- Attract2.wav"),E.loadSe("PRSFX- Aurora Veil2","battle_anims","PRSFX- Aurora Veil2.wav"),!0)).setLocalizationKey(`${rA}`).withTitle(`${rA}:title`).withDescription(`${rA}:description`).withQuery(`${rA}:query`).withOption(Dt.newOptionWithMode(It.DEFAULT).withDialogue({buttonLabel:`${rA}:option.1.label`,buttonTooltip:`${rA}:option.1.tooltip`,selected:[{text:`${rA}:option.1.selected`}]}).withPreOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter;return mE(E,T(I=>{A.setDialogueToken("selectedPokemon",I.getNameToRender());const i=Math.floor((2*90+16)*I.level*.01)+5,a=(I.getStat(B.SPD)-i)/i,L=Math.min(Math.max(2.5*(1+a),1),4);A.misc={moneyMultiplier:L},I.moveset.forEach(S=>{if(S){const o=S.getMovePp()-2;S.ppUsed=S.ppUsed<o?o:S.ppUsed}}),ER(E,I.id,100),gA(E,!0,!1),Kk(E)},"onPokemonSelected"),void 0,T(I=>Pi(I,E,`${rA}:invalid_selection`),"selectableFilter"))}).withOptionPhase(async E=>{await gA(E,!1,!1);const A=E.currentBattle.mysteryEncounter.misc.moneyMultiplier;A>2.5?await en(E,`${rA}:job_complete_good`,`${rA}:speaker`):await en(E,`${rA}:job_complete_bad`,`${rA}:speaker`);const s=E.getWaveMoneyAmount(A);xR(E,s,!0,!1),await Kt(E,U.t("mysteryEncounterMessages:receive_money",{amount:s})),await Kt(E,`${rA}:pokemon_tired`),ot(E,{fillRemaining:!0}),Lt(E)}).build()).withOption(Dt.newOptionWithMode(It.DEFAULT).withDialogue({buttonLabel:`${rA}:option.2.label`,buttonTooltip:`${rA}:option.2.tooltip`,selected:[{text:`${rA}:option.2.selected`}]}).withPreOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter;return mE(E,T(I=>{A.setDialogueToken("selectedPokemon",I.getNameToRender());const i=Math.floor((2*75+16)*I.level*.01)+I.level+10,a=Math.floor((2*75+16)*I.level*.01)+5,L=i+1.5*(a*2),o=(I.getStat(B.HP)+1.5*(I.getStat(B.ATK)+I.getStat(B.DEF))-L)/L,l=Math.min(Math.max(2.5*(1+o),1),4);A.misc={moneyMultiplier:l},I.moveset.forEach(D=>{if(D){const M=D.getMovePp()-2;D.ppUsed=D.ppUsed<M?M:D.ppUsed}}),ER(E,I.id,100),gA(E,!0,!1),gk(E)},"onPokemonSelected"),void 0,T(I=>Pi(I,E,`${rA}:invalid_selection`),"selectableFilter"))}).withOptionPhase(async E=>{await gA(E,!1,!1);const A=E.currentBattle.mysteryEncounter.misc.moneyMultiplier;A>2.5?await en(E,`${rA}:job_complete_good`,`${rA}:speaker`):await en(E,`${rA}:job_complete_bad`,`${rA}:speaker`);const s=E.getWaveMoneyAmount(A);xR(E,s,!0,!1),await Kt(E,U.t("mysteryEncounterMessages:receive_money",{amount:s})),await Kt(E,`${rA}:pokemon_tired`),ot(E,{fillRemaining:!0}),Lt(E)}).build()).withOption(Dt.newOptionWithMode(It.DISABLED_OR_SPECIAL).withPrimaryPokemonRequirement(new KI(c6,!0)).withDialogue({buttonLabel:`${rA}:option.3.label`,buttonTooltip:`${rA}:option.3.tooltip`,disabledButtonTooltip:`${rA}:option.3.disabled_tooltip`,selected:[{text:`${rA}:option.3.selected`}]}).withPreOptionPhase(async E=>{var R;const A=E.currentBattle.mysteryEncounter,s=(R=A.selectedOption)==null?void 0:R.primaryPokemon;return A.setDialogueToken("selectedPokemon",s.getNameToRender()),s.moveset.forEach(I=>{if(I){const i=I.getMovePp()-2;I.ppUsed=I.ppUsed<i?i:I.ppUsed}}),ER(E,s.id,100),gA(E,!0,!1),Fk(E),!0}).withOptionPhase(async E=>{await gA(E,!1,!1),await en(E,`${rA}:job_complete_good`,`${rA}:speaker`);const A=E.getWaveMoneyAmount(2.5);xR(E,A,!0,!1),await Kt(E,U.t("mysteryEncounterMessages:receive_money",{amount:A})),await Kt(E,`${rA}:pokemon_tired`),ot(E,{fillRemaining:!0}),Lt(E)}).build()).withOutroDialogue([{speaker:`${rA}:speaker`,text:`${rA}:outro`}]).build();function gk(E){E.playSound("battle_anims/PRSFX- Horn Drill1"),E.playSound("battle_anims/PRSFX- Horn Drill1"),E.time.delayedCall(1e3,()=>{E.playSound("battle_anims/PRSFX- Guillotine2")}),E.time.delayedCall(2e3,()=>{E.playSound("battle_anims/PRSFX- Heavy Slam2")}),E.time.delayedCall(2500,()=>{E.playSound("battle_anims/PRSFX- Guillotine2")})}T(gk,"doStrongWorkSfx");function Kk(E){E.playSound("battle_anims/PRSFX- Accelerock1"),E.time.delayedCall(1500,()=>{E.playSound("battle_anims/PRSFX- Extremespeed1")}),E.time.delayedCall(2e3,()=>{E.playSound("battle_anims/PRSFX- Extremespeed1")}),E.time.delayedCall(2250,()=>{E.playSound("battle_anims/PRSFX- Agility")})}T(Kk,"doDeliverySfx");function Fk(E){E.playSound("battle_anims/PRSFX- Captivate"),E.time.delayedCall(1500,()=>{E.playSound("battle_anims/PRSFX- Attract2")}),E.time.delayedCall(2e3,()=>{E.playSound("battle_anims/PRSFX- Aurora Veil2")}),E.time.delayedCall(3e3,()=>{E.playSound("battle_anims/PRSFX- Attract2")})}T(Fk,"doSalesSfx");const xg=class xg extends vs{constructor(A){super(A,$.EVOLUTION_SCENE)}setup(){this.canCancel=!1,this.cancelled=!1;const A=this.getUi();this.evolutionContainer=this.scene.add.container(0,-this.scene.game.canvas.height/6),A.add(this.evolutionContainer);const s=this.scene.add.sprite(0,0,"bg",this.scene.windowType);s.setOrigin(0,1),s.setVisible(!1),A.add(s),this.messageBg=s,this.messageContainer=this.scene.add.container(12,-39),this.messageContainer.setVisible(!1),A.add(this.messageContainer);const R=se(this.scene,0,0,"",V.MESSAGE,{maxLines:2,wordWrap:{width:1780}});this.messageContainer.add(R),this.message=R,this.initPromptSprite(this.messageContainer)}show(A){return super.show(A),this.scene.ui.bringToTop(this.evolutionContainer),this.scene.ui.bringToTop(this.messageBg),this.scene.ui.bringToTop(this.messageContainer),this.messageBg.setVisible(!0),this.messageContainer.setVisible(!0),!0}processInput(A){if(this.canCancel&&!this.cancelled&&A===y.CANCEL)return this.cancelled=!0,!0;const s=this.getUi();if(this.awaitingActionInput&&(A===y.CANCEL||A===y.ACTION)&&this.onActionInput){s.playSelect();const R=this.onActionInput;return this.onActionInput=null,R(),!0}return!1}setCursor(A){return!1}clear(){this.clearText(),this.canCancel=!1,this.cancelled=!1,this.evolutionContainer.removeAll(!0),this.messageContainer.setVisible(!1),this.messageBg.setVisible(!1)}};T(xg,"EvolutionSceneHandler");let eC=xg;const bg=class bg extends yl{constructor(A,s){super(A,s,!0)}getPlayerPokemon(){return super.getPokemon()}};T(bg,"PlayerPartyMemberPokemonPhase");let lL=bg;var d1=(E=>(E[E.LEARN_MOVE=0]="LEARN_MOVE",E[E.MEMORY=1]="MEMORY",E[E.TM=2]="TM",E))(d1||{});const kg=class kg extends lL{constructor(A,s,R,I=0,i=-1){super(A,s),this.moveId=R,this.learnMoveType=I,this.cost=i}start(){super.start();const A=this.getPokemon(),s=He[this.moveId],R=A.getMoveset();if(R.some(i=>(i==null?void 0:i.moveId)===s.id)&&this.moveId!==t.SKETCH)return this.end();this.messageMode=this.scene.ui.getHandler()instanceof eC?$.EVOLUTION_SCENE:$.MESSAGE,this.scene.ui.setMode(this.messageMode),R.length<4?this.learnMove(R.length,s,A):this.replaceMoveCheck(s,A)}async replaceMoveCheck(A,s){const R=U.t("battle:learnMovePrompt",{pokemonName:b(s),moveName:A.name}),I=U.t("battle:learnMoveLimitReached",{pokemonName:b(s)}),i=U.t("battle:learnMoveReplaceQuestion",{moveName:A.name}),a=[R,I].join("$");await this.scene.ui.showTextPromise(a),await this.scene.ui.showTextPromise(i,void 0,!1),await this.scene.ui.setModeWithoutClear($.CONFIRM,()=>this.forgetMoveProcess(A,s),()=>{this.scene.ui.setMode(this.messageMode),this.rejectMoveAndEnd(A,s)})}async forgetMoveProcess(A,s){this.scene.ui.setMode(this.messageMode),await this.scene.ui.showTextPromise(U.t("battle:learnMoveForgetQuestion"),void 0,!0),await this.scene.ui.setModeWithoutClear($.SUMMARY,s,pM.LEARN_MOVE,A,R=>{if(R===4){this.scene.ui.setMode(this.messageMode).then(()=>this.rejectMoveAndEnd(A,s));return}const I=U.t("battle:learnMoveForgetSuccess",{pokemonName:b(s),moveName:s.moveset[R].getName()}),i=[U.t("battle:countdownPoof"),I,U.t("battle:learnMoveAnd")].join("$");this.scene.ui.setMode(this.messageMode).then(()=>this.learnMove(R,A,s,i))})}async rejectMoveAndEnd(A,s){await this.scene.ui.showTextPromise(U.t("battle:learnMoveStopTeaching",{moveName:A.name}),void 0,!1),this.scene.ui.setModeWithoutClear($.CONFIRM,()=>{this.scene.ui.setMode(this.messageMode),this.scene.ui.showTextPromise(U.t("battle:learnMoveNotLearned",{pokemonName:b(s),moveName:A.name}),void 0,!0).then(()=>this.end())},()=>{this.scene.ui.setMode(this.messageMode),this.replaceMoveCheck(A,s)})}async learnMove(A,s,R,I){this.learnMoveType===2?(R.usedTMs||(R.usedTMs=[]),R.usedTMs.push(this.moveId),this.scene.tryRemovePhase(a=>a instanceof IO)):this.learnMoveType===1&&(this.cost!==-1?(Ge.WAIVE_ROLL_FEE_OVERRIDE||(this.scene.money-=this.cost,this.scene.updateMoneyText(),this.scene.animateMoneyChanged(!1)),this.scene.playSound("se/buy")):this.scene.tryRemovePhase(a=>a instanceof IO)),R.setMove(A,this.moveId),jL(this.scene,this.moveId).then(()=>{zL(this.scene,[this.moveId],!0)}),this.scene.ui.setMode(this.messageMode);const i=U.t("battle:learnMove",{pokemonName:b(R),moveName:s.name});I&&await this.scene.ui.showTextPromise(I),this.scene.playSound("level_up_fanfare"),this.scene.ui.showText(i,null,()=>{this.scene.triggerPokemonFormChange(R,Bi,!0),this.end()},this.messageMode===$.EVOLUTION_SCENE?1e3:void 0,!0)}};T(kg,"LearnMovePhase");let Wn=kg;const As="mysteryEncounters/dancingLessons",mk=[r.VOLCANO,r.BEACH,r.ISLAND,r.WASTELAND,r.MOUNTAIN,r.BADLANDS,r.DESERT],Wk=[r.CONSTRUCTION_SITE,r.POWER_PLANT,r.FACTORY,r.LABORATORY,r.SLUM,r.METROPOLIS,r.DOJO],Yk=[r.JUNGLE,r.FAIRY_CAVE,r.MEADOW,r.PLAINS,r.GRASS,r.TALL_GRASS,r.FOREST],pk=[r.RUINS,r.SWAMP,r.CAVE,r.ABYSS,r.GRAVEYARD,r.LAKE,r.TEMPLE],yk=MA.withEncounterType(me.DANCING_LESSONS).withEncounterTier(Gt.GREAT).withSceneWaveRangeRequirement(...HA).withIntroSpriteConfigs([]).withAnimations(VR.DANCE).withHideWildIntroMessage(!0).withAutoHideIntroVisuals(!1).withCatchAllowed(!0).withFleeAllowed(!1).withOnVisualsStart(E=>(new dn(VR.DANCE,E.getEnemyPokemon(),E.getParty()[0]).play(E),!0)).withIntroDialogue([{text:`${As}:intro`}]).setLocalizationKey(`${As}`).withTitle(`${As}:title`).withDescription(`${As}:description`).withQuery(`${As}:query`).withOnInit(E=>{const A=E.currentBattle.mysteryEncounter,s=Ke(e.ORICORIO),R=lo(E,oo),I=new es(E,s,R,qe.NONE,!1);I.moveset.some(o=>o&&o.getMove().id===t.REVELATION_DANCE)||(I.moveset.length<4?I.moveset.push(new ke(t.REVELATION_DANCE)):I.moveset[0]=new ke(t.REVELATION_DANCE));const i=E.arena.biomeType;mk.includes(i)?I.formIndex=0:Wk.includes(i)?I.formIndex=1:Yk.includes(i)?I.formIndex=2:pk.includes(i)?I.formIndex=3:I.formIndex=0;const a=new xs(I),L=E.addEnemyPokemon(s,R,qe.NONE,!1,a);E.getEnemyParty().forEach(o=>{E.field.remove(o,!0)}),E.currentBattle.enemyParty=[L],E.field.add(L),L.x-=300,A.loadAssets.push(L.loadAssets());const S={pokemonConfigs:[{species:s,dataSource:a,isBoss:!0,tags:[Y.MYSTERY_ENCOUNTER_POST_SUMMON],mysteryEncounterBattleEffects:T(o=>{bA(o.scene,`${As}:option.1.boss_enraged`),o.scene.unshiftPhase(new Ft(o.scene,o.getBattlerIndex(),!0,[B.ATK,B.DEF,B.SPATK,B.SPDEF],1))},"mysteryEncounterBattleEffects")}]};return A.enemyPartyConfigs=[S],A.misc={oricorioData:a},A.setDialogueToken("oricorioName",Ke(e.ORICORIO).getName()),!0}).withOption(Dt.newOptionWithMode(It.DEFAULT).withDialogue({buttonLabel:`${As}:option.1.label`,buttonTooltip:`${As}:option.1.tooltip`,selected:[{text:`${As}:option.1.selected`}]}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter;A.startOfBattleEffects.push({sourceBattlerIndex:Ct.ENEMY,targets:[Ct.PLAYER],move:new ke(t.REVELATION_DANCE),ignorePp:!0}),await Eu(E),ot(E,{guaranteedModifierTypeFuncs:[x.BATON],fillRemaining:!0}),await mA(E,A.enemyPartyConfigs[0])}).build()).withOption(Dt.newOptionWithMode(It.DEFAULT).withDialogue({buttonLabel:`${As}:option.2.label`,buttonTooltip:`${As}:option.2.tooltip`,selected:[{text:`${As}:option.2.selected`}]}).withPreOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter;return mE(E,T(R=>{A.setDialogueToken("selectedPokemon",R.getNameToRender()),E.unshiftPhase(new Wn(E,E.getParty().indexOf(R),t.REVELATION_DANCE)),new dn(VR.DANCE,E.getEnemyPokemon(),E.getPlayerPokemon()).play(E)},"onPokemonSelected"))}).withOptionPhase(async E=>{await Eu(E),Lt(E,!0)}).build()).withOption(Dt.newOptionWithMode(It.DISABLED_OR_SPECIAL).withPrimaryPokemonRequirement(new KI(Ov,!0)).withDialogue({buttonLabel:`${As}:option.3.label`,buttonTooltip:`${As}:option.3.tooltip`,disabledButtonTooltip:`${As}:option.3.disabled_tooltip`,secondOptionPrompt:`${As}:option.3.select_prompt`,selected:[{text:`${As}:option.3.selected`}]}).withPreOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter;return mE(E,T(I=>I.moveset.filter(i=>i&&Ov.includes(i.getMove().id)).map(i=>({label:i.getName(),handler:T(()=>(A.setDialogueToken("selectedPokemon",I.getNameToRender()),A.setDialogueToken("selectedMove",i.getName()),A.misc.selectedMove=i,!0),"handler")})),"onPokemonSelected"),void 0,T(I=>I.isAllowedInBattle()?A.options[2].pokemonMeetsPrimaryRequirements(E,I)?null:UA(E,`${As}:invalid_selection`)??null:U.t("partyUiHandler:cantBeUsed",{pokemonName:I.getNameToRender()})??null,"selectableFilter"))}).withOptionPhase(async E=>{var I;const A=E.currentBattle.mysteryEncounter,s=A.misc.oricorioData.toPokemon(E);s.passive=!0;const R=(I=A.misc.selectedMove)==null?void 0:I.getMove().id;s.moveset.some(i=>i.getMove().id===R)||(s.moveset.length<4?s.moveset.push(new ke(R)):s.moveset[3]=new ke(R)),await Eu(E),await TL(E,s,null,ge.POKEBALL,!1),Lt(E,!0)}).build()).build();function Eu(E){return new Promise(A=>{const s=E.getEnemyParty()[0];E.tweens.add({targets:s,x:"+=16",y:"-=16",alpha:0,ease:"Sine.easeInOut",duration:750,onComplete:T(()=>{E.field.remove(s,!0),A()},"onComplete")})})}T(Eu,"hideOricorioPokemon");var P6=(E=>(E[E.CENTER=0]="CENTER",E[E.LEFT=1]="LEFT",E[E.RIGHT=2]="RIGHT",E))(P6||{});function Ac(E,A,s,R){return new Promise(I=>{const i=E.fieldUI.getByName("Dream Background"),a=E.add.image(0,0,"default_bg");a.setOrigin(0,0),a.setVisible(!1),i.add(a);let L,S,o,l;const D=R===0?0:R===2?100:-100,M=R!==0?-15:0,c=T(()=>{const G=E.addPokemonSprite(A,a.displayWidth/2+D,a.displayHeight/2+M,"pkmn__sub");return G.setPipeline(E.spritePipeline,{tone:[0,0,0,0],ignoreTimeTint:!0}),G},"getPokemonSprite");i.add(L=c()),i.add(S=c()),i.add(o=c()),i.add(l=c()),L.setAlpha(0),S.setAlpha(0),S.setTintFill(16777215),o.setVisible(!1),l.setVisible(!1),l.setTintFill(16777215),[L,S,o,l].map(G=>{G.play(A.getSpriteKey(!0)),G.setPipeline(E.spritePipeline,{tone:[0,0,0,0],hasShadow:!1,teraColor:DR(A.getTeraType())}),G.setPipelineData("ignoreTimeTint",!0),G.setPipelineData("spriteKey",A.getSpriteKey()),G.setPipelineData("shiny",A.shiny),G.setPipelineData("variant",A.variant),["spriteColors","fusionSpriteColors"].map(P=>{var _;(_=A.summonData)!=null&&_.speciesForm&&(P+="Base"),G.pipelineData[P]=A.getSprite().pipelineData[P]})}),[o,l].map(G=>{G.play(s.getSpriteKey(!0)),G.setPipelineData("ignoreTimeTint",!0),G.setPipelineData("spriteKey",s.getSpriteKey()),G.setPipelineData("shiny",s.shiny),G.setPipelineData("variant",s.variant),["spriteColors","fusionSpriteColors"].map(P=>{var _;(_=s.summonData)!=null&&_.speciesForm&&(P+="Base"),G.pipelineData[P]=s.getSprite().pipelineData[P]})}),E.tweens.add({targets:L,alpha:1,ease:"Cubic.easeInOut",duration:2e3,onComplete:T(()=>{wk(E,a,i,D,M),E.tweens.addCounter({from:0,to:1,duration:1e3,onUpdate:T(G=>{S.setAlpha(G.getValue())},"onUpdate"),onComplete:T(()=>{L.setVisible(!1),E.time.delayedCall(700,()=>{Vk(E,a,i,D,M),E.time.delayedCall(1e3,()=>{l.setScale(.25),l.setVisible(!0),_6(E,1.5,6,S,l).then(()=>{o.setVisible(!0),vk(E,a,i,D,M),E.time.delayedCall(900,()=>{E.tweens.add({targets:l,alpha:0,duration:1500,delay:150,easing:"Sine.easeIn",onComplete:T(()=>{E.time.delayedCall(3e3,()=>{I(),E.tweens.add({targets:o,alpha:0,duration:2e3,delay:150,easing:"Sine.easeIn",onComplete:T(()=>{A.destroy(),s.setVisible(!1),s.setAlpha(1)},"onComplete")})})},"onComplete")})})})})})},"onComplete")})},"onComplete")})})}T(Ac,"doPokemonTransformationSequence");function wk(E,A,s,R,I){let i=0;E.tweens.addCounter({repeat:64,duration:zA(1),onRepeat:T(()=>{if(i<64){if(!(i&7))for(let a=0;a<4;a++)xk(E,(i&120)*2+a*64,A,s,R,I);i++}},"onRepeat")})}T(wk,"doSpiralUpward");function Vk(E,A,s,R,I){let i=0;E.tweens.addCounter({repeat:96,duration:zA(1),onRepeat:T(()=>{if(i<96){if(i<6)for(let a=0;a<9;a++)bk(E,a*16,A,s,R,I);i++}},"onRepeat")})}T(Vk,"doArcDownward");function _6(E,A,s,R,I){return new Promise(i=>{const a=A===s;E.tweens.add({targets:R,scale:.25,ease:"Cubic.easeInOut",duration:500/A,yoyo:!a}),E.tweens.add({targets:I,scale:1,ease:"Cubic.easeInOut",duration:500/A,yoyo:!a,onComplete:T(()=>{A<s?_6(E,A+.5,s,R,I).then(L=>i(L)):(R.setVisible(!1),i(!0))},"onComplete")})})}T(_6,"doCycle");function vk(E,A,s,R,I){let i=0;E.tweens.addCounter({repeat:48,duration:zA(1),onRepeat:T(()=>{if(i){if(i===32)for(let a=0;a<16;a++)Pv(E,a*16,8,A,s,R,I)}else for(let a=0;a<16;a++)Pv(E,a*16,4,A,s,R,I);i++},"onRepeat")})}T(vk,"doCircleInward");function xk(E,A,s,R,I,i){const a=s.displayWidth/2+I,L=E.add.image(a,0,"evo_sparkle");R.add(L);let S=0,o=48;const l=E.tweens.addCounter({repeat:-1,duration:zA(1),onRepeat:T(()=>{D()},"onRepeat")}),D=T(()=>{!S||L.y>8?(L.setPosition(a,88-S*S/80+i),L.y+=zO(A,o)/4,L.x+=Gi(A,o),L.setScale(1-S/80),A+=4,S&1&&o--,S++):(L.destroy(),l.remove())},"updateParticle");D()}T(xk,"doSpiralUpwardParticle");function bk(E,A,s,R,I,i){const a=s.displayWidth/2+I,L=E.add.image(a,0,"evo_sparkle");L.setScale(.5),R.add(L);let S=0,o=8;const l=E.tweens.addCounter({repeat:-1,duration:zA(1),onRepeat:T(()=>{D()},"onRepeat")}),D=T(()=>{!S||L.y<88?(L.setPosition(a,8+S*S/5+i),L.y+=zO(A,o)/4,L.x+=Gi(A,o),o=8+zO(S*4,40),S++):(L.destroy(),l.remove())},"updateParticle");D()}T(bk,"doArcDownParticle");function Pv(E,A,s,R,I,i,a){const L=R.displayWidth/2+i,S=R.displayHeight/2+a,o=E.add.image(L,S,"evo_sparkle");I.add(o);let l=120;const D=E.tweens.addCounter({repeat:-1,duration:zA(1),onRepeat:T(()=>{M()},"onRepeat")}),M=T(()=>{l>8?(o.setPosition(L,S),o.y+=zO(A,l),o.x+=Gi(A,l),l-=s,A+=4):(o.destroy(),D.remove())},"updateParticle");M()}T(Pv,"doCircleInwardParticle");const xE="mysteryEncounters/weirdDream",kk=[e.ETERNATUS,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.ROARING_MOON,e.WALKING_WAKE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.IRON_VALIANT,e.IRON_LEAVES,e.IRON_BOULDER,e.IRON_CROWN,e.COSMOG,e.MELTAN,e.KUBFU,e.COSMOEM,e.POIPOLE,e.TERAPAGOS,e.TYPE_NULL,e.CALYREX,e.NAGANADEL,e.URSHIFU,e.OGERPON,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI],tC=600,Co=570,H6=20,Zk=10,Xk=[90,110],Qk=[40,50],Jk=MA.withEncounterType(me.WEIRD_DREAM).withEncounterTier(Gt.ROGUE).withDisallowedChallenges(ht.SINGLE_TYPE,ht.SINGLE_GENERATION).withSceneWaveRangeRequirement(30,140).withIntroSpriteConfigs([{spriteKey:"weird_dream_woman",fileRoot:"mystery-encounters",hasShadow:!0,y:11,yShadow:6,x:4}]).withIntroDialogue([{text:`${xE}:intro`},{speaker:`${xE}:speaker`,text:`${xE}:intro_dialogue`}]).setLocalizationKey(`${xE}`).withTitle(`${xE}:title`).withDescription(`${xE}:description`).withQuery(`${xE}:query`).withOnInit(E=>{E.loadBgm("mystery_encounter_weird_dream","mystery_encounter_weird_dream.mp3");const A=$k(E),s=A.map(R=>R.newPokemon.loadAssets());return E.currentBattle.mysteryEncounter.misc={teamTransformations:A,loadAssets:s},!0}).withOnVisualsStart(E=>(E.fadeAndSwitchBgm("mystery_encounter_weird_dream"),!0)).withOption(Dt.newOptionWithMode(It.DEFAULT).withHasDexProgress(!0).withDialogue({buttonLabel:`${xE}:option.1.label`,buttonTooltip:`${xE}:option.1.tooltip`,selected:[{text:`${xE}:option.1.selected`}]}).withPreOptionPhase(async E=>{E.time.delayedCall(1e3,()=>{zk(E)});for(const A of E.currentBattle.mysteryEncounter.misc.teamTransformations)E.removePokemonFromPlayerParty(A.previousPokemon,!1),E.getParty().push(A.newPokemon)}).withOptionPhase(async E=>{const A=Kt(E,`${xE}:option.1.cutscene`);await Promise.all(E.currentBattle.mysteryEncounter.misc.loadAssets);const s=E.currentBattle.mysteryEncounter.misc.teamTransformations;if(s.length<=3)for(const R of s){const I=R.previousPokemon,i=R.newPokemon;await Ac(E,I,i,P6.CENTER)}else await tZ(E,s);await A,eZ(E),await Kt(E,`${xE}:option.1.dream_complete`),await qk(E,s),ot(E,{guaranteedModifierTypeFuncs:[x.MEMORY_MUSHROOM,x.ROGUE_BALL,x.MINT,x.MINT,x.MINT],fillRemaining:!1}),Lt(E,!0)}).build()).withSimpleOption({buttonLabel:`${xE}:option.2.label`,buttonTooltip:`${xE}:option.2.tooltip`,selected:[{text:`${xE}:option.2.selected`}]},async E=>{const A=E.currentBattle.mysteryEncounter.misc.teamTransformations,s=[];for(const L of A){const S=L.newPokemon,o=L.previousPokemon;await d6(E,o,S,S.species.getRootSpeciesId(),!0);const l=new xs(S);l.player=!1;const D=[];for(const c of L.heldItems)D.push({modifier:c.clone(),stackCount:c.getStackCount(),isTransferable:!1});if(f6(S)){const c=B6(S);D.push({modifier:St(E,x.MYSTERY_ENCOUNTER_OLD_GATEAU,[H6,c]),stackCount:1,isTransferable:!1})}const M={species:L.newSpecies,isBoss:S.getSpeciesForm().getBaseStatTotal()>Co,level:o.level,dataSource:l,modifierConfigs:D};s.push(M)}const R=E.gameData.gender??ct.UNSET,I=BA[R===ct.FEMALE?C.FUTURE_SELF_F:C.FUTURE_SELF_M].clone();I.setPartyTemplates(new We(A.length,Pe.STRONG));const i={trainerConfig:I,pokemonConfigs:s,female:R===ct.FEMALE},a=T(()=>{const L=E.getParty().filter(S=>!S.passive);if((L==null?void 0:L.length)>0){const S=L[le(L.length)];S.passive=!0,S.updateInfo(!0)}},"onBeforeRewards");ot(E,{guaranteedModifierTiers:[W.ROGUE,W.ROGUE,W.ULTRA,W.ULTRA,W.GREAT,W.GREAT],fillRemaining:!1},void 0,a),await Kt(E,`${xE}:option.2.selected_2`,null,void 0,!0),await mA(E,i)}).withSimpleOption({buttonLabel:`${xE}:option.3.label`,buttonTooltip:`${xE}:option.3.tooltip`,selected:[{text:`${xE}:option.3.selected`}]},async E=>{for(const A of E.getParty())A.level=Math.max(Math.ceil((100-Zk)/100*A.level),1),A.exp=WR(A.level,A.species.growthRate),A.levelExp=0,A.calculateStats(),await A.updateInfo();return Lt(E,!0),!0}).build();function $k(E){const A=E.getParty(),s=A.map(S=>S.species),R=A.map(S=>({previousPokemon:S}));let I=!1,i=!1;const a=A.length,L=AO(A.slice(0));for(let S=0;S<a;S++){const o=L[S],l=R.findIndex(P=>P.previousPokemon.id===o.id);R[l].heldItems=o.getHeldItems().filter(P=>!(P instanceof AR));const D=o.calculateBaseStats().reduce((P,_)=>P+_,0);let M;S<2?M=Xk:M=Qk;const c=jk(D,M,I,i,s),G=c.getBaseStatTotal();G>tC&&(I=!0),G<=tC&&G>=Co&&(i=!0),R[l].newSpecies=c,""+JSON.stringify(c),s.push(c)}for(const S of R){const o=le(S.newSpecies.getAbilityCount());S.newPokemon=E.addPlayerPokemon(S.newSpecies,S.previousPokemon.level,o,void 0)}return R}T($k,"getTeamTransformations");async function qk(E,A){var I;let s=!1;for(const i of A){const a=i.previousPokemon,L=i.newPokemon,S=L.species.getRootSpeciesId();await d6(E,a,L,S)&&(s=!0);for(const o of i.heldItems)o.pokemonId=L.id,await E.addModifier(o,!1,!1,!1,!0);if(f6(L)){const o=B6(L),l=(I=x.MYSTERY_ENCOUNTER_OLD_GATEAU().generateType(E.getParty(),[H6,o]))==null?void 0:I.withIdFromFunc(x.MYSTERY_ENCOUNTER_OLD_GATEAU),D=l==null?void 0:l.newModifier(L);D&&await E.addModifier(D,!1,!1,!1,!0)}L.calculateStats(),await L.updateInfo()}const R=E.getParty().filter(i=>!i.passive);if((R==null?void 0:R.length)>0){const i=R[le(R.length)];i.passive=!0,await i.updateInfo(!0)}s&&E.playSound("level_up_fanfare")}T(qk,"doNewTeamPostProcess");async function d6(E,A,s,R,I=!1){let i=!1;if(s.species.abilityHidden){const l=s.species.ability2?2:1;if(s.abilityIndex<l){const D=new Jt(256);E.applyModifiers(pn,!0,D),!le(D.value)&&(s.abilityIndex=l)}}s.ivs=s.ivs.map(l=>{const D=le(31);return D>l?D:l}),s.nature=[be.HARDY,be.DOCILE,be.BASHFUL,be.QUIRKY,be.SERIOUS][le(5)],!I&&(s.getSpeciesForm().getBaseStatTotal()<=Co||s.isShiny())&&(s.getSpeciesForm().abilityHidden&&s.abilityIndex===s.getSpeciesForm().getAbilityCount()-1&&E.validateAchv(At.HIDDEN_ABILITY),s.species.subLegendary&&E.validateAchv(At.CATCH_SUB_LEGENDARY),s.species.legendary&&E.validateAchv(At.CATCH_LEGENDARY),s.species.mythical&&E.validateAchv(At.CATCH_MYTHICAL),E.gameData.updateSpeciesDexIvs(s.species.getRootSpeciesId(!0),s.ivs),await E.gameData.setPokemonCaught(s,!0,!1,!1)&&(i=!0,await Kt(E,U.t("battle:addedAsAStarter",{pokemonName:Ke(R).getName()})))),s.pokerus=A.pokerus,s.luck=A.getLuck(),s.ivs=s.ivs.map((l,D)=>A.ivs[D]>l?A.ivs[D]:l),!I&&E.gameData.dexData[R].caughtAttr&&E.gameData.addStarterCandy(Ke(R),1),s.generateAndPopulateMoveset();const a=s.moveset;s.moveset=A.moveset.slice(0);const L=await AZ(E,s,R,I);EZ(s,a,L);const S=[s.getTypes()[0]];let o=le(18);for(;o===S[0];)o=le(18);return S.push(o),s.customPokemonData||(s.customPokemonData=new $E),s.customPokemonData.types=S,s.passive=A.passive,i}T(d6,"postProcessTransformedPokemon");function f6(E){return E.getSpeciesForm().getBaseStatTotal()<Co}T(f6,"shouldGetOldGateau");function B6(E){const A=[],s=E.getSpeciesForm().baseStats.slice(0);return A.push(s[B.HP]<s[B.SPD]?B.HP:B.SPD),A.push(s[B.ATK]<s[B.SPATK]?B.ATK:B.SPATK),A.push(s[B.DEF]<s[B.SPDEF]?B.DEF:B.SPDEF),A}T(B6,"getOldGateauBoostedStats");function jk(E,A,s,R,I){let i;for(;xe(i);){const a=E+A[1],L=Math.max(E+A[0],0);let S=MR.filter(o=>{const l=o.getBaseStatTotal(),D=l>=L&&l<=a,M=(!R||l<Co||l>tC)&&(!s||l<=tC);return D&&M&&!kk.includes(o.speciesId)});if((S==null?void 0:S.length)>20)for(S=AO(S),i=S.pop();xe(i)||I.includes(i);)i=S.pop();else A[0]-=10,A[1]+=10}return i}T(jk,"getTransformedSpecies");function zk(E){const A=E.add.container(0,-E.game.canvas.height/6);A.name="Dream Background";const s=E.add.rectangle(0,0,E.game.canvas.width/6,E.game.canvas.height/6,0);s.setName("Black Background"),s.setOrigin(0,0),A.add(s),s.setVisible(!0);const R=E.add.video(0,0,"evo_bg").stop();R.setLoop(!0),R.setOrigin(0,0),R.setScale(.4359673025),A.add(R),E.fieldUI.add(A),E.fieldUI.bringToTop(A),R.play(),A.setVisible(!0),A.alpha=0,E.tweens.add({targets:A,alpha:1,duration:3e3,ease:"Sine.easeInOut"})}T(zk,"doShowDreamBackground");function eZ(E){const A=E.fieldUI.getByName("Dream Background");E.tweens.add({targets:A,alpha:0,duration:3e3,ease:"Sine.easeInOut",onComplete:T(()=>{E.fieldUI.remove(A,!0)},"onComplete")})}T(eZ,"doHideDreamBackground");function tZ(E,A){return new Promise(s=>{const R=[];for(let a=0;a<3;a++){const L=a*4e3;E.time.delayedCall(L,()=>{const S=A[a],o=S.previousPokemon,l=S.newPokemon,D=a,M=Ac(E,o,l,D).then(()=>{if(A.length>a+3){const c=A[a+3],G=c.previousPokemon,P=c.newPokemon;R.push(Ac(E,G,P,D))}});R.push(M)})}const I=setInterval(i,500);async function i(){R.length===A.length&&(clearInterval(I),await Promise.all(R),s())}T(i,"checkAllPromisesExist")})}T(tZ,"doSideBySideTransformations");async function AZ(E,A,s,R=!1){var a;let I=null;const i=(a=A.getEggMoves())==null?void 0:a.slice(0);if(i){const L=AO([0,1,2,3]);let S=L.pop(),o=xe(S)?null:i[S],l=0;for(;l<3&&(!o||A.moveset.some(D=>(D==null?void 0:D.moveId)===o));)S=L.pop(),o=xe(S)?null:i[S],l++;o&&(A.moveset.some(D=>(D==null?void 0:D.moveId)===o)||(A.moveset.length<4?A.moveset.push(new ke(o)):(I=le(4),A.moveset[I]=new ke(o))),!R&&!xe(S)&&E.gameData.dexData[s].caughtAttr&&await E.gameData.setEggMoveUnlocked(Ke(s),S,!0))}return I}T(AZ,"addEggMoveToNewPokemonMoveset");function EZ(E,A,s){let R=null;for(const I of A)if((I==null?void 0:I.getMove().type)===E.getTypes()[0]&&!E.moveset.some(i=>(i==null?void 0:i.moveId)===(I==null?void 0:I.moveId))){R=I;break}if(!R){for(const I of A)if(!E.moveset.some(i=>(i==null?void 0:i.moveId)===(I==null?void 0:I.moveId))){R=I;break}}if(R)if(E.moveset.length<4)E.moveset.push(R);else{let I=le(4);for(;s!==null&&I===s;)I=le(4);E.moveset[I]=R}}T(EZ,"addFavoredMoveToNewPokemonMoveset");const Zg=class Zg extends LE{constructor(A){super(A)}start(){super.start(),this.scene.trainer.setVisible(!0),this.scene.trainer.setTexture(`trainer_${this.scene.gameData.gender===ct.FEMALE?"f":"m"}_back`),this.scene.tweens.add({targets:this.scene.trainer,x:106,duration:1e3,onComplete:T(()=>this.end(),"onComplete")})}};T(Zg,"ShowTrainerPhase");let AC=Zg;const XE="mysteryEncounters/theWinstrateChallenge",sZ=MA.withEncounterType(me.THE_WINSTRATE_CHALLENGE).withEncounterTier(Gt.ROGUE).withSceneWaveRangeRequirement(100,HA[1]).withIntroSpriteConfigs([{spriteKey:"vito",fileRoot:"trainer",hasShadow:!1,x:16,y:-4},{spriteKey:"vivi",fileRoot:"trainer",hasShadow:!1,x:-14,y:-4},{spriteKey:"victor",fileRoot:"trainer",hasShadow:!0,x:-32},{spriteKey:"victoria",fileRoot:"trainer",hasShadow:!0,x:40},{spriteKey:"vicky",fileRoot:"trainer",hasShadow:!0,x:3,y:5,yShadow:5}]).withIntroDialogue([{text:`${XE}:intro`},{speaker:`${XE}:speaker`,text:`${XE}:intro_dialogue`}]).withAutoHideIntroVisuals(!1).withOnInit(E=>{const A=E.currentBattle.mysteryEncounter;return A.enemyPartyConfigs.push(aZ(E)),A.enemyPartyConfigs.push(iZ(E)),A.enemyPartyConfigs.push(IZ(E)),A.enemyPartyConfigs.push(nZ(E)),A.enemyPartyConfigs.push(OZ(E)),!0}).setLocalizationKey(`${XE}`).withTitle(`${XE}:title`).withDescription(`${XE}:description`).withQuery(`${XE}:query`).withSimpleOption({buttonLabel:`${XE}:option.1.label`,buttonTooltip:`${XE}:option.1.tooltip`,selected:[{speaker:`${XE}:speaker`,text:`${XE}:option.1.selected`}]},async E=>{E.currentBattle.mysteryEncounter.doContinueEncounter=async A=>{await RZ(A)},await gA(E,!0,!1),await Ec(E)}).withSimpleOption({buttonLabel:`${XE}:option.2.label`,buttonTooltip:`${XE}:option.2.tooltip`,selected:[{speaker:`${XE}:speaker`,text:`${XE}:option.2.selected`}]},async E=>{E.unshiftPhase(new oL(E,!0)),ot(E,{guaranteedModifierTypeFuncs:[x.RARER_CANDY],fillRemaining:!1}),Lt(E)}).build();async function Ec(E){const A=E.currentBattle.mysteryEncounter,s=A.enemyPartyConfigs.pop();if(s)await mA(E,s);else{await gA(E,!1,!1),await en(E,`${XE}:victory`,`${XE}:speaker`);const R=x.VOUCHER_PREMIUM().newModifier();await E.addModifier(R),E.playSound("item_fanfare"),await Kt(E,U.t("battle:rewardGain",{modifierName:R==null?void 0:R.type.name})),await en(E,`${XE}:victory_2`,`${XE}:speaker`),E.ui.clearText();const I=VA(E,x.MYSTERY_ENCOUNTER_MACHO_BRACE);I.type.tier=W.MASTER,ot(E,{guaranteedModifierTypeOptions:[I],fillRemaining:!1}),A.doContinueEncounter=void 0,Lt(E,!1,sE.NO_BATTLE)}}T(Ec,"spawnNextTrainerOrEndEncounter");function RZ(E){return new Promise(async A=>{if(E.currentBattle.mysteryEncounter.enemyPartyConfigs.length===0){const s=E.currentBattle.trainer;s&&E.tweens.add({targets:s,x:"+=16",y:"-=16",alpha:0,ease:"Sine.easeInOut",duration:750,onComplete:T(()=>{E.field.remove(s,!0)},"onComplete")}),await Ec(E),A()}else{E.arena.resetArenaEffects(),E.getPlayerField().forEach((I,i)=>E.unshiftPhase(new LL(E,i)));for(const I of E.getParty())I.species.speciesId===e.EISCUE&&I.hasAbility(O.ICE_FACE)&&I.formIndex===1&&E.triggerPokemonFormChange(I,_t),I.resetBattleData(),eb(WL,I);E.unshiftPhase(new AC(E));const R=E.currentBattle.trainer;E.currentBattle.trainer=null,await Ec(E),R&&E.tweens.add({targets:R,x:"+=16",y:"-=16",alpha:0,ease:"Sine.easeInOut",duration:750,onComplete:T(()=>{E.field.remove(R,!0),A()},"onComplete")})}})}T(RZ,"endTrainerBattleAndShowDialogue");function OZ(E){return{trainerType:C.VICTOR,pokemonConfigs:[{species:Ke(e.SWELLOW),isBoss:!1,abilityIndex:0,nature:be.ADAMANT,moveSet:[t.FACADE,t.BRAVE_BIRD,t.PROTECT,t.QUICK_ATTACK],modifierConfigs:[{modifier:St(E,x.FLAME_ORB),isTransferable:!1},{modifier:St(E,x.FOCUS_BAND),stackCount:2,isTransferable:!1}]},{species:Ke(e.OBSTAGOON),isBoss:!1,abilityIndex:1,nature:be.ADAMANT,moveSet:[t.FACADE,t.OBSTRUCT,t.NIGHT_SLASH,t.FIRE_PUNCH],modifierConfigs:[{modifier:St(E,x.FLAME_ORB),isTransferable:!1},{modifier:St(E,x.LEFTOVERS),stackCount:2,isTransferable:!1}]}]}}T(OZ,"getVictorTrainerConfig");function nZ(E){return{trainerType:C.VICTORIA,pokemonConfigs:[{species:Ke(e.ROSERADE),isBoss:!1,abilityIndex:0,nature:be.CALM,moveSet:[t.SYNTHESIS,t.SLUDGE_BOMB,t.GIGA_DRAIN,t.SLEEP_POWDER],modifierConfigs:[{modifier:St(E,x.SOUL_DEW),isTransferable:!1},{modifier:St(E,x.QUICK_CLAW),stackCount:2,isTransferable:!1}]},{species:Ke(e.GARDEVOIR),isBoss:!1,formIndex:1,nature:be.TIMID,moveSet:[t.PSYSHOCK,t.MOONBLAST,t.SHADOW_BALL,t.WILL_O_WISP],modifierConfigs:[{modifier:St(E,x.ATTACK_TYPE_BOOSTER,[n.PSYCHIC]),stackCount:1,isTransferable:!1},{modifier:St(E,x.ATTACK_TYPE_BOOSTER,[n.FAIRY]),stackCount:1,isTransferable:!1}]}]}}T(nZ,"getVictoriaTrainerConfig");function IZ(E){return{trainerType:C.VIVI,pokemonConfigs:[{species:Ke(e.SEAKING),isBoss:!1,abilityIndex:3,nature:be.ADAMANT,moveSet:[t.WATERFALL,t.MEGAHORN,t.KNOCK_OFF,t.REST],modifierConfigs:[{modifier:St(E,x.BERRY,[nt.LUM]),stackCount:2,isTransferable:!1},{modifier:St(E,x.BASE_STAT_BOOSTER,[B.HP]),stackCount:4,isTransferable:!1}]},{species:Ke(e.BRELOOM),isBoss:!1,abilityIndex:1,nature:be.JOLLY,moveSet:[t.SPORE,t.SWORDS_DANCE,t.SEED_BOMB,t.DRAIN_PUNCH],modifierConfigs:[{modifier:St(E,x.BASE_STAT_BOOSTER,[B.HP]),stackCount:4,isTransferable:!1},{modifier:St(E,x.TOXIC_ORB),isTransferable:!1}]},{species:Ke(e.CAMERUPT),isBoss:!1,formIndex:1,nature:be.CALM,moveSet:[t.EARTH_POWER,t.FIRE_BLAST,t.YAWN,t.PROTECT],modifierConfigs:[{modifier:St(E,x.QUICK_CLAW),stackCount:3,isTransferable:!1}]}]}}T(IZ,"getViviTrainerConfig");function iZ(E){return{trainerType:C.VICKY,pokemonConfigs:[{species:Ke(e.MEDICHAM),isBoss:!1,formIndex:1,nature:be.IMPISH,moveSet:[t.AXE_KICK,t.ICE_PUNCH,t.ZEN_HEADBUTT,t.BULLET_PUNCH],modifierConfigs:[{modifier:St(E,x.SHELL_BELL),isTransferable:!1}]}]}}T(iZ,"getVickyTrainerConfig");function aZ(E){return{trainerType:C.VITO,pokemonConfigs:[{species:Ke(e.HISUI_ELECTRODE),isBoss:!1,abilityIndex:0,nature:be.MODEST,moveSet:[t.THUNDERBOLT,t.GIGA_DRAIN,t.FOUL_PLAY,t.THUNDER_WAVE],modifierConfigs:[{modifier:St(E,x.BASE_STAT_BOOSTER,[B.SPD]),stackCount:2,isTransferable:!1}]},{species:Ke(e.SWALOT),isBoss:!1,abilityIndex:2,nature:be.QUIET,moveSet:[t.SLUDGE_BOMB,t.GIGA_DRAIN,t.ICE_BEAM,t.EARTHQUAKE],modifierConfigs:[{modifier:St(E,x.BERRY,[nt.SITRUS]),stackCount:2},{modifier:St(E,x.BERRY,[nt.APICOT]),stackCount:2},{modifier:St(E,x.BERRY,[nt.GANLON]),stackCount:2},{modifier:St(E,x.BERRY,[nt.STARF]),stackCount:2},{modifier:St(E,x.BERRY,[nt.SALAC]),stackCount:2},{modifier:St(E,x.BERRY,[nt.LUM]),stackCount:2},{modifier:St(E,x.BERRY,[nt.LANSAT]),stackCount:2},{modifier:St(E,x.BERRY,[nt.LIECHI]),stackCount:2},{modifier:St(E,x.BERRY,[nt.PETAYA]),stackCount:2},{modifier:St(E,x.BERRY,[nt.ENIGMA]),stackCount:2},{modifier:St(E,x.BERRY,[nt.LEPPA]),stackCount:2}]},{species:Ke(e.DODRIO),isBoss:!1,abilityIndex:2,nature:be.JOLLY,moveSet:[t.DRILL_PECK,t.QUICK_ATTACK,t.THRASH,t.KNOCK_OFF],modifierConfigs:[{modifier:St(E,x.KINGS_ROCK),stackCount:2,isTransferable:!1}]},{species:Ke(e.ALAKAZAM),isBoss:!1,formIndex:1,nature:be.BOLD,moveSet:[t.PSYCHIC,t.SHADOW_BALL,t.FOCUS_BLAST,t.THUNDERBOLT],modifierConfigs:[{modifier:St(E,x.WIDE_LENS),stackCount:2,isTransferable:!1}]},{species:Ke(e.DARMANITAN),isBoss:!1,abilityIndex:0,nature:be.IMPISH,moveSet:[t.EARTHQUAKE,t.U_TURN,t.FLARE_BLITZ,t.ROCK_SLIDE],modifierConfigs:[{modifier:St(E,x.QUICK_CLAW),stackCount:2,isTransferable:!1}]}]}}T(aZ,"getVitoTrainerConfig");const ss="mysteryEncounters/teleportingHijinks",su=1.75,LZ=[r.SPACE,r.FAIRY_CAVE,r.LABORATORY,r.ISLAND,r.WASTELAND,r.DOJO],rZ=[n.ELECTRIC,n.STEEL],NZ=MA.withEncounterType(me.TELEPORTING_HIJINKS).withEncounterTier(Gt.COMMON).withSceneWaveRangeRequirement(...HA).withSceneRequirement(new $h([1,2,3],10)).withSceneRequirement(new yO(0,su)).withAutoHideIntroVisuals(!1).withCatchAllowed(!0).withFleeAllowed(!1).withIntroSpriteConfigs([{spriteKey:"teleporting_hijinks_teleporter",fileRoot:"mystery-encounters",hasShadow:!0,x:4,y:4,yShadow:1}]).withIntroDialogue([{text:`${ss}:intro`}]).setLocalizationKey(`${ss}`).withTitle(`${ss}:title`).withDescription(`${ss}:description`).withQuery(`${ss}:query`).withOnInit(E=>{const A=E.currentBattle.mysteryEncounter,s=E.getWaveMoneyAmount(su);return A.setDialogueToken("price",s.toString()),A.misc={price:s},!0}).withOption(Dt.newOptionWithMode(It.DISABLED_OR_DEFAULT).withSceneMoneyRequirement(0,su).withDialogue({buttonLabel:`${ss}:option.1.label`,buttonTooltip:`${ss}:option.1.tooltip`,selected:[{text:`${ss}:option.1.selected`}]}).withPreOptionPhase(async E=>{xR(E,-E.currentBattle.mysteryEncounter.misc.price,!0,!1)}).withOptionPhase(async E=>{const A=await _v(E);ot(E,{fillRemaining:!0}),await mA(E,A)}).build()).withOption(Dt.newOptionWithMode(It.DISABLED_OR_SPECIAL).withPokemonTypeRequirement(rZ,!0,1).withDialogue({buttonLabel:`${ss}:option.2.label`,buttonTooltip:`${ss}:option.2.tooltip`,disabledButtonTooltip:`${ss}:option.2.disabled_tooltip`,selected:[{text:`${ss}:option.2.selected`}]}).withOptionPhase(async E=>{const A=await _v(E);ot(E,{fillRemaining:!0}),ER(E,E.currentBattle.mysteryEncounter.selectedOption.primaryPokemon.id,100),await mA(E,A)}).build()).withSimpleOption({buttonLabel:`${ss}:option.3.label`,buttonTooltip:`${ss}:option.3.tooltip`,selected:[{text:`${ss}:option.3.selected`}]},async E=>{const A=E.currentBattle.mysteryEncounter,s=lo(E,oo),R=E.arena.randomSpecies(E.currentBattle.waveIndex,s,0,BI(E.getParty()),!0),I=new es(E,R,s,qe.NONE,!0);A.setDialogueToken("enemyPokemon",b(I));const i={pokemonConfigs:[{level:s,species:R,dataSource:new xs(I),isBoss:!0}]},a=VA(E,x.ATTACK_TYPE_BOOSTER,[n.STEEL]),L=VA(E,x.ATTACK_TYPE_BOOSTER,[n.ELECTRIC]);ot(E,{guaranteedModifierTypeOptions:[a,L],fillRemaining:!0}),await gA(E,!0,!0),await mA(E,i)}).build();async function _v(E){const A=E.currentBattle.mysteryEncounter,s=LZ.filter(o=>E.arena.biomeType!==o),R=s[le(s.length)];await Kt(E,`${ss}:transport`),await Promise.all([TZ(E,R),gA(E)]),E.playBgm(),await Kt(E,`${ss}:attacked`);const I=lo(E,oo),i=E.arena.randomSpecies(E.currentBattle.waveIndex,I,0,BI(E.getParty()),!0),a=new es(E,i,I,qe.NONE,!0);A.setDialogueToken("enemyPokemon",b(a));const L=E.currentBattle.waveIndex<50?[B.DEF,B.SPDEF,B.SPD]:[B.ATK,B.DEF,B.SPATK,B.SPDEF,B.SPD];return{pokemonConfigs:[{level:I,species:i,dataSource:new xs(a),isBoss:!0,tags:[Y.MYSTERY_ENCOUNTER_POST_SUMMON],mysteryEncounterBattleEffects:T(o=>{bA(o.scene,`${ss}:boss_enraged`),o.scene.unshiftPhase(new Ft(o.scene,o.getBattlerIndex(),!0,L,1))},"mysteryEncounterBattleEffects")}]}}T(_v,"doBiomeTransitionDialogueAndBattleInit");async function TZ(E,A){return new Promise(s=>{E.tweens.add({targets:[E.arenaEnemy,E.lastEnemyTrainer],x:"+=300",duration:2e3,onComplete:T(()=>{E.newArena(A);const I=`${Do(A)}_bg`;E.arenaBgTransition.setTexture(I),E.arenaBgTransition.setAlpha(0),E.arenaBgTransition.setVisible(!0),E.arenaPlayerTransition.setBiome(A),E.arenaPlayerTransition.setAlpha(0),E.arenaPlayerTransition.setVisible(!0),E.tweens.add({targets:[E.arenaPlayer,E.arenaBgTransition,E.arenaPlayerTransition],duration:1e3,ease:"Sine.easeInOut",alpha:T(i=>i===E.arenaPlayer?0:1,"alpha"),onComplete:T(()=>{E.arenaBg.setTexture(I),E.arenaPlayer.setBiome(A),E.arenaPlayer.setAlpha(1),E.arenaEnemy.setBiome(A),E.arenaEnemy.setAlpha(1),E.arenaNextEnemy.setBiome(A),E.arenaBgTransition.setVisible(!1),E.arenaPlayerTransition.setVisible(!1),E.lastEnemyTrainer&&E.lastEnemyTrainer.destroy(),s(),E.tweens.add({targets:E.arenaEnemy,x:"-=300"})},"onComplete")})},"onComplete")})})}T(TZ,"animateBiomeChange");const OA="mysteryEncounters/bugTypeSuperfan",Ru=[e.PARASECT,e.VENOMOTH,e.LEDIAN,e.ARIADOS,e.YANMA,e.BEAUTIFLY,e.DUSTOX,e.MASQUERAIN,e.NINJASK,e.VOLBEAT,e.ILLUMISE,e.ANORITH,e.KRICKETUNE,e.WORMADAM,e.MOTHIM,e.SKORUPI,e.JOLTIK,e.LARVESTA,e.VIVILLON,e.CHARJABUG,e.RIBOMBEE,e.SPIDOPS,e.LOKIX],$I=[e.SCYTHER,e.PINSIR,e.HERACROSS,e.FORRETRESS,e.SCIZOR,e.SHUCKLE,e.SHEDINJA,e.ARMALDO,e.VESPIQUEN,e.DRAPION,e.YANMEGA,e.LEAVANNY,e.SCOLIPEDE,e.CRUSTLE,e.ESCAVALIER,e.ACCELGOR,e.GALVANTULA,e.VIKAVOLT,e.ARAQUANID,e.ORBEETLE,e.CENTISKORCH,e.FROSMOTH,e.KLEAVOR],SZ=[{species:e.PINSIR,formIndex:1},{species:e.SCIZOR,formIndex:1},{species:e.HERACROSS,formIndex:1},{species:e.ORBEETLE,formIndex:1},{species:e.CENTISKORCH,formIndex:1},{species:e.DURANT},{species:e.VOLCARONA},{species:e.GOLISOPOD}],Hv=[e.GENESECT,e.SLITHER_WING,e.BUZZWOLE,e.PHEROMOSA],dv=[t.MEGAHORN,t.X_SCISSOR,t.ATTACK_ORDER,t.PIN_MISSILE,t.FIRST_IMPRESSION],fv=[t.SILVER_WIND,t.BUG_BUZZ,t.SIGNAL_BEAM,t.POLLEN_PUFF],Bv=[t.STRING_SHOT,t.STICKY_WEB,t.SILK_TRAP,t.RAGE_POWDER,t.HEAL_ORDER],gv=[t.BUG_BITE,t.LEECH_LIFE,t.DEFEND_ORDER,t.QUIVER_DANCE,t.TAIL_GLOW,t.INFESTATION,t.U_TURN],tI=[30,50,70,100,120,140,160],oZ=MA.withEncounterType(me.BUG_TYPE_SUPERFAN).withEncounterTier(Gt.GREAT).withPrimaryPokemonRequirement(Vi.Some(new MI(["BypassSpeedChanceModifier","ContactHeldItemTransferChanceModifier"],1),new jl(n.BUG,1),new SL(n.BUG,!1,1))).withMaxAllowedEncounters(1).withSceneWaveRangeRequirement(...HA).withIntroSpriteConfigs([]).withAutoHideIntroVisuals(!1).withIntroDialogue([{text:`${OA}:intro`},{speaker:`${OA}:speaker`,text:`${OA}:intro_dialogue`}]).withOnInit(E=>{const A=E.currentBattle.mysteryEncounter,s=lZ(E.currentBattle.waveIndex),R=s.getSpriteKey();A.enemyPartyConfigs.push({trainerConfig:s,female:!0});let I,i;E.currentBattle.waveIndex<tI[3]?(I=tn(e.BEEDRILL,!1),i=tn(e.BUTTERFREE,!1)):(I=tn(e.BEEDRILL,!1,1),i=tn(e.BUTTERFREE,!1,1)),A.spriteConfigs=[{spriteKey:I.spriteKey,fileRoot:I.fileRoot,hasShadow:!0,repeat:!0,isPokemon:!0,x:-30,tint:.15,y:-4,yShadow:-4},{spriteKey:i.spriteKey,fileRoot:i.fileRoot,hasShadow:!0,repeat:!0,isPokemon:!0,x:30,tint:.15,y:-4,yShadow:-4},{spriteKey:R,fileRoot:"trainer",hasShadow:!0,x:4,y:7,yShadow:7}];const L=[St(E,x.QUICK_CLAW),St(E,x.GRIP_CLAW),St(E,x.ATTACK_TYPE_BOOSTER,[n.BUG])].map(S=>(S==null?void 0:S.name)??"unknown").join("/");return A.setDialogueToken("requiredBugItems",L),!0}).setLocalizationKey(`${OA}`).withTitle(`${OA}:title`).withDescription(`${OA}:description`).withQuery(`${OA}:query`).withSimpleOption({buttonLabel:`${OA}:option.1.label`,buttonTooltip:`${OA}:option.1.tooltip`,selected:[{speaker:`${OA}:speaker`,text:`${OA}:option.1.selected`}]},async E=>{const A=E.currentBattle.mysteryEncounter,s=A.enemyPartyConfigs[0],R=[];R.push(new ke(dv[le(dv.length)])),R.push(new ke(fv[le(fv.length)])),R.push(new ke(Bv[le(Bv.length)])),R.push(new ke(gv[le(gv.length)])),A.misc={moveTutorOptions:R},A.onRewards=CZ,ot(E,{fillRemaining:!0}),await gA(E,!0,!0),await mA(E,s)}).withOption(Dt.newOptionWithMode(It.DISABLED_OR_DEFAULT).withPrimaryPokemonRequirement(new SL(n.BUG,!1,1)).withDialogue({buttonLabel:`${OA}:option.2.label`,buttonTooltip:`${OA}:option.2.tooltip`,disabledButtonTooltip:`${OA}:option.2.disabled_tooltip`}).withPreOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter,s=E.getParty().filter(I=>I.isOfType(n.BUG,!0)).length,R=U.t(`${OA}:numBugTypes`,{count:s});if(A.setDialogueToken("numBugTypes",R),s<2)ot(E,{guaranteedModifierTypeFuncs:[x.SUPER_LURE,x.GREAT_BALL],fillRemaining:!1}),A.selectedOption.dialogue.selected=[{speaker:`${OA}:speaker`,text:`${OA}:option.2.selected_0_to_1`}];else if(s<4)ot(E,{guaranteedModifierTypeFuncs:[x.QUICK_CLAW,x.MAX_LURE,x.ULTRA_BALL],fillRemaining:!1}),A.selectedOption.dialogue.selected=[{speaker:`${OA}:speaker`,text:`${OA}:option.2.selected_2_to_3`}];else if(s<6)ot(E,{guaranteedModifierTypeFuncs:[x.GRIP_CLAW,x.MAX_LURE,x.ROGUE_BALL],fillRemaining:!1}),A.selectedOption.dialogue.selected=[{speaker:`${OA}:speaker`,text:`${OA}:option.2.selected_4_to_5`}];else{const I=[VA(E,x.MASTER_BALL)],i=[];E.findModifier(l=>l instanceof PL)||I.push(VA(E,x.MEGA_BRACELET)),E.findModifier(l=>l instanceof _L)||I.push(VA(E,x.DYNAMAX_BAND));const a=VA(E,x.EVOLUTION_ITEM);a&&i.push(a);const L=VA(E,x.RARE_EVOLUTION_ITEM);L&&i.push(L);const S=VA(E,x.FORM_CHANGE_ITEM);S&&i.push(S);const o=VA(E,x.RARE_FORM_CHANGE_ITEM);o&&i.push(o),i.length>0&&I.push(i[le(i.length)]),ot(E,{guaranteedModifierTypeOptions:I,fillRemaining:!1}),A.selectedOption.dialogue.selected=[{speaker:`${OA}:speaker`,text:`${OA}:option.2.selected_6`}]}}).withOptionPhase(async E=>{Lt(E)}).build()).withOption(Dt.newOptionWithMode(It.DISABLED_OR_DEFAULT).withPrimaryPokemonRequirement(Vi.Some(new MI(["BypassSpeedChanceModifier","ContactHeldItemTransferChanceModifier"],1),new jl(n.BUG,1))).withDialogue({buttonLabel:`${OA}:option.3.label`,buttonTooltip:`${OA}:option.3.tooltip`,disabledButtonTooltip:`${OA}:option.3.disabled_tooltip`,selected:[{text:`${OA}:option.3.selected`},{speaker:`${OA}:speaker`,text:`${OA}:option.3.selected_dialogue`}],secondOptionPrompt:`${OA}:option.3.select_prompt`}).withPreOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter;return mE(E,T(I=>I.getHeldItems().filter(a=>(a instanceof Xi||a instanceof ta||a instanceof an&&a.type.moveType===n.BUG)&&a.isTransferable).map(a=>({label:a.type.name,handler:T(()=>(A.setDialogueToken("selectedItem",a.type.name),A.misc={chosenPokemon:I,chosenModifier:a},!0),"handler")})),"onPokemonSelected"),void 0,T(I=>I.getHeldItems().some(a=>a instanceof Xi||a instanceof ta||a instanceof an&&a.type.moveType===n.BUG)?null:UA(E,`${OA}:option.3.invalid_selection`)??null,"selectableFilter"))}).withOptionPhase(async E=>{const s=E.currentBattle.mysteryEncounter.misc.chosenModifier;s.stackCount-=1,s.stackCount===0&&E.removeModifier(s),E.updateModifiers(!0,!0);const R=VA(E,x.MYSTERY_ENCOUNTER_GOLDEN_BUG_NET);R.type.tier=W.ROGUE,ot(E,{guaranteedModifierTypeOptions:[R],guaranteedModifierTypeFuncs:[x.REVIVER_SEED],fillRemaining:!1}),Lt(E,!0)}).build()).withOutroDialogue([{text:`${OA}:outro`}]).build();function lZ(E){const A=BA[C.BUG_TYPE_SUPERFAN].clone();A.name=U.t("trainerNames:bug_type_superfan");let s=SZ.slice(0);s=AO(s);const R=s.pop();if(E<tI[0])A.setPartyMemberFunc(0,ne([e.BEEDRILL],qe.TRAINER,!0)).setPartyMemberFunc(1,ne([e.BUTTERFREE],qe.TRAINER,!0));else if(E<tI[1])A.setPartyTemplates(new We(3,Pe.AVERAGE)).setPartyMemberFunc(0,ne([e.BEEDRILL],qe.TRAINER,!0)).setPartyMemberFunc(1,ne([e.BUTTERFREE],qe.TRAINER,!0)).setPartyMemberFunc(2,ne(Ru,qe.TRAINER,!0));else if(E<tI[2])A.setPartyTemplates(new We(4,Pe.AVERAGE)).setPartyMemberFunc(0,ne([e.BEEDRILL],qe.TRAINER,!0)).setPartyMemberFunc(1,ne([e.BUTTERFREE],qe.TRAINER,!0)).setPartyMemberFunc(2,ne(Ru,qe.TRAINER,!0)).setPartyMemberFunc(3,ne($I,qe.TRAINER,!0));else if(E<tI[3])A.setPartyTemplates(new We(5,Pe.AVERAGE)).setPartyMemberFunc(0,ne([e.BEEDRILL],qe.TRAINER,!0)).setPartyMemberFunc(1,ne([e.BUTTERFREE],qe.TRAINER,!0)).setPartyMemberFunc(2,ne(Ru,qe.TRAINER,!0)).setPartyMemberFunc(3,ne($I,qe.TRAINER,!0)).setPartyMemberFunc(4,ne($I,qe.TRAINER,!0));else if(E<tI[4])A.setPartyTemplates(new We(5,Pe.AVERAGE)).setPartyMemberFunc(0,ne([e.BEEDRILL],qe.TRAINER,!0,I=>{I.formIndex=1,I.generateAndPopulateMoveset(),I.generateName()})).setPartyMemberFunc(1,ne([e.BUTTERFREE],qe.TRAINER,!0,I=>{I.formIndex=1,I.generateAndPopulateMoveset(),I.generateName()})).setPartyMemberFunc(2,ne($I,qe.TRAINER,!0)).setPartyMemberFunc(3,ne($I,qe.TRAINER,!0)).setPartyMemberFunc(4,ne([R.species],qe.TRAINER,!0,I=>{xe(R.formIndex)||(I.formIndex=R.formIndex,I.generateAndPopulateMoveset(),I.generateName())}));else if(E<tI[5]){s=AO(s);const I=s.pop();A.setPartyTemplates(new We(5,Pe.AVERAGE)).setPartyMemberFunc(0,ne([e.BEEDRILL],qe.TRAINER,!0,i=>{i.formIndex=1,i.generateAndPopulateMoveset(),i.generateName()})).setPartyMemberFunc(1,ne([e.BUTTERFREE],qe.TRAINER,!0,i=>{i.formIndex=1,i.generateAndPopulateMoveset(),i.generateName()})).setPartyMemberFunc(2,ne($I,qe.TRAINER,!0)).setPartyMemberFunc(3,ne([R.species],qe.TRAINER,!0,i=>{xe(R.formIndex)||(i.formIndex=R.formIndex,i.generateAndPopulateMoveset(),i.generateName())})).setPartyMemberFunc(4,ne([I.species],qe.TRAINER,!0,i=>{xe(I.formIndex)||(i.formIndex=I.formIndex,i.generateAndPopulateMoveset(),i.generateName())}))}else if(E<tI[6])A.setPartyTemplates(new PA(new We(4,Pe.AVERAGE),new We(1,Pe.STRONG))).setPartyMemberFunc(0,ne([e.BEEDRILL],qe.TRAINER,!0,I=>{I.formIndex=1,I.generateAndPopulateMoveset(),I.generateName()})).setPartyMemberFunc(1,ne([e.BUTTERFREE],qe.TRAINER,!0,I=>{I.formIndex=1,I.generateAndPopulateMoveset(),I.generateName()})).setPartyMemberFunc(2,ne($I,qe.TRAINER,!0)).setPartyMemberFunc(3,ne([R.species],qe.TRAINER,!0,I=>{xe(R.formIndex)||(I.formIndex=R.formIndex,I.generateAndPopulateMoveset(),I.generateName())})).setPartyMemberFunc(4,ne(Hv,qe.TRAINER,!0));else{s=AO(s);const I=s.pop();A.setPartyTemplates(new PA(new We(4,Pe.AVERAGE),new We(1,Pe.STRONG))).setPartyMemberFunc(0,ne([e.BEEDRILL],qe.TRAINER,!0,i=>{i.setBoss(!0,2),i.formIndex=1,i.generateAndPopulateMoveset(),i.generateName()})).setPartyMemberFunc(1,ne([e.BUTTERFREE],qe.TRAINER,!0,i=>{i.setBoss(!0,2),i.formIndex=1,i.generateAndPopulateMoveset(),i.generateName()})).setPartyMemberFunc(2,ne([R.species],qe.TRAINER,!0,i=>{xe(R.formIndex)||(i.formIndex=R.formIndex,i.generateAndPopulateMoveset(),i.generateName())})).setPartyMemberFunc(3,ne([I.species],qe.TRAINER,!0,i=>{xe(I.formIndex)||(i.formIndex=I.formIndex,i.generateAndPopulateMoveset(),i.generateName())})).setPartyMemberFunc(4,ne(Hv,qe.TRAINER,!0))}return A}T(lZ,"getTrainerConfigForWave");function CZ(E){return new Promise(async A=>{const s=E.currentBattle.mysteryEncounter.misc.moveTutorOptions;await en(E,`${OA}:battle_won`,`${OA}:speaker`);const R=1,I=new nO(E,{delayVisibility:!1,scale:R,onSide:!0,right:!0,x:1,y:-nO.getHeight(R,!0)-1,width:E.game.canvas.width/6-2});E.ui.add(I);const i=s.map(S=>({label:S.getName(),handler:T(()=>(I.active=!1,I.setVisible(!1),!0),"handler"),onHover:T(()=>{I.active=!0,I.show(He[S.moveId])},"onHover")})),a=T(()=>{I.active=!1,I.setVisible(!1)},"onHoverOverCancel"),L=await e9(E,i,`${OA}:teach_move_prompt`,void 0,a);L||(I.active=!1,I.setVisible(!1)),L&&L.selectedOptionIndex<s.length&&E.unshiftPhase(new Wn(E,L.selectedPokemonIndex,s[L.selectedOptionIndex].moveId)),A()})}T(CZ,"doBugTypeMoveTutor");const cE="mysteryEncounters/funAndGames",UZ=MA.withEncounterType(me.FUN_AND_GAMES).withEncounterTier(Gt.GREAT).withSceneWaveRangeRequirement(...HA).withSceneRequirement(new yO(0,1.5)).withAutoHideIntroVisuals(!1).withBattleAnimationsWithoutTargets(!0).withSkipEnemyBattleTurns(!0).withSkipToFightInput(!0).withFleeAllowed(!1).withIntroSpriteConfigs([{spriteKey:"fun_and_games_game",fileRoot:"mystery-encounters",hasShadow:!1,x:0,y:6},{spriteKey:"fun_and_games_wobbuffet",fileRoot:"mystery-encounters",hasShadow:!0,x:-28,y:6,yShadow:6},{spriteKey:"fun_and_games_man",fileRoot:"mystery-encounters",hasShadow:!0,x:40,y:6,yShadow:6}]).withIntroDialogue([{speaker:`${cE}:speaker`,text:`${cE}:intro_dialogue`}]).setLocalizationKey(`${cE}`).withTitle(`${cE}:title`).withDescription(`${cE}:description`).withQuery(`${cE}:query`).withOnInit(E=>{const A=E.currentBattle.mysteryEncounter;return E.loadBgm("mystery_encounter_fun_and_games","mystery_encounter_fun_and_games.mp3"),A.setDialogueToken("wobbuffetName",Ke(e.WOBBUFFET).getName()),!0}).withOnVisualsStart(E=>(E.fadeAndSwitchBgm("mystery_encounter_fun_and_games"),!0)).withOption(Dt.newOptionWithMode(It.DISABLED_OR_DEFAULT).withSceneRequirement(new yO(0,1.5)).withDialogue({buttonLabel:`${cE}:option.1.label`,buttonTooltip:`${cE}:option.1.tooltip`,selected:[{text:`${cE}:option.1.selected`}]}).withPreOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter;return mE(E,T(I=>{A.misc={playerPokemon:I}},"onPokemonSelected"),void 0,T(I=>Pi(I,E,`${cE}:invalid_selection`),"selectableFilter"))}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter;A.misc.turnsRemaining=3;const s=A.options[0].requirements[0].requiredMoney;return xR(E,-s,!0,!1),await Kt(E,U.t("mysteryEncounterMessages:paid_money",{amount:s})),A.onTurnStart=MZ,A.doContinueEncounter=g6,cZ(E),await DZ(E),await uZ(E),!0}).build()).withSimpleOption({buttonLabel:`${cE}:option.2.label`,buttonTooltip:`${cE}:option.2.tooltip`,selected:[{text:`${cE}:option.2.selected`}]},async E=>(await gA(E,!0,!0),Lt(E,!0),!0)).build();async function DZ(E){return new Promise(async A=>{const s=E.currentBattle.mysteryEncounter,R=s.misc.playerPokemon,I=E.getParty(),i=I.indexOf(R);if(i!==0){const D=I[0];I[0]=R,I[i]=D}let a;E.ui.showText(U.t("battle:playerGo",{pokemonName:b(R)})),E.pbTray.hide(),E.trainer.setTexture(`trainer_${E.gameData.gender===ct.FEMALE?"f":"m"}_back_pb`),E.time.delayedCall(562,()=>{E.trainer.setFrame("2"),E.time.delayedCall(64,()=>{E.trainer.setFrame("3")})}),E.tweens.add({targets:E.trainer,x:-36,duration:1e3,onComplete:T(()=>E.trainer.setVisible(!1),"onComplete")}),E.time.delayedCall(750,()=>{a=hZ(E,R)});const L=Ke(e.WOBBUFFET);E.currentBattle.enemyParty=[];const S=E.addEnemyPokemon(L,s.misc.playerPokemon.level,qe.NONE,!1);S.ivs=[0,0,0,0,0,0],S.setNature(be.MILD),S.setAlpha(0),S.setVisible(!1),S.calculateStats(),E.currentBattle.enemyParty[0]=S,E.gameData.setPokemonSeen(S,!0),await S.loadAssets();const o=setInterval(l,500);async function l(){a&&(clearInterval(o),await a,A())}T(l,"checkPlayerAnimationPromise")})}T(DZ,"summonPlayerPokemon");function g6(E){return new Promise(async A=>{const s=E.getEnemyPokemon();if(!s||s.isFainted(!0)||s.hp===0){s&&(s.hideInfo(),E.field.remove(s)),gA(E,!0,!0),E.currentBattle.enemyParty=[],E.currentBattle.mysteryEncounter.doContinueEncounter=void 0,Lt(E,!0),await Kt(E,`${cE}:ko`);const R=E.getWaveMoneyAmount(1.5);xR(E,-R,!0,!1)}A()})}T(g6,"handleLoseMinigame");function MZ(E){const A=E.currentBattle.mysteryEncounter,s=E.getEnemyPokemon();if(!s)return g6(E),!0;if(A.misc.turnsRemaining<=0){const R=s.hp/s.getMaxHp();let I,i=!1;return R<.03?(ot(E,{guaranteedModifierTypeFuncs:[x.MULTI_LENS],fillRemaining:!1}),I=`${cE}:best_result`):R<.15?(ot(E,{guaranteedModifierTypeFuncs:[x.SCOPE_LENS],fillRemaining:!1}),I=`${cE}:great_result`):R<.33?(ot(E,{guaranteedModifierTypeFuncs:[x.WIDE_LENS],fillRemaining:!1}),I=`${cE}:good_result`):(i=!0,I=`${cE}:bad_result`),s.hideInfo(),E.field.remove(s),E.currentBattle.enemyParty=[],E.currentBattle.mysteryEncounter.doContinueEncounter=void 0,Lt(E,i),bA(E,`${cE}:end_game`),bA(E,I),!0}else A.misc.turnsRemaining<3&&bA(E,`${cE}:charging_continue`),bA(E,`${cE}:turn_remaining_${A.misc.turnsRemaining}`),A.misc.turnsRemaining--;return!1}T(MZ,"handleNextTurn");async function uZ(E){const A=E.getEnemyPokemon();E.add.existing(A),E.field.add(A);const s=E.getPlayerPokemon();s!=null&&s.visible&&E.field.moveBelow(A,s),A.showInfo(),E.time.delayedCall(1e3,()=>{A.cry()}),A.resetSummonData(),E.currentBattle.mysteryEncounter.misc.wobbuffetHealth=A.hp}T(uZ,"showWobbuffetHealthBar");function hZ(E,A){return new Promise(s=>{const R=E.addFieldSprite(36,80,"pb",OO(A.pokeball));R.setVisible(!1),R.setOrigin(.5,.625),E.field.add(R),A.setFieldPosition(eR.CENTER,0);const I=A.getFieldPositionOffset();R.setVisible(!0),E.tweens.add({targets:R,duration:650,x:100+I[0]}),E.tweens.add({targets:R,duration:150,ease:"Cubic.easeOut",y:70+I[1],onComplete:T(()=>{E.tweens.add({targets:R,duration:500,ease:"Cubic.easeIn",angle:1440,y:132+I[1],onComplete:T(()=>{E.playSound("se/pb_rel"),R.destroy(),E.add.existing(A),E.field.add(A),yM(E,A.x,A.y-16,A.pokeball),E.updateModifiers(!0),E.updateFieldScale(),A.showInfo(),A.playAnim(),A.setVisible(!0),A.getSprite().setVisible(!0),A.setScale(.5),A.tint(FO(A.pokeball)),A.untint(250,"Sine.easeIn"),E.updateFieldScale(),E.tweens.add({targets:A,duration:250,ease:"Sine.easeIn",scale:A.getSpriteScale(),onComplete:T(()=>{A.cry(A.getHpRatio()>.25?void 0:{rate:.85}),A.getSprite().clearTint(),A.resetSummonData(),E.time.delayedCall(1e3,()=>{A.isShiny()&&E.unshiftPhase(new fT(E,A.getBattlerIndex())),A.resetTurnData(),E.triggerPokemonFormChange(A,Os,!0),E.pushPhase(new Wi(E,A.getBattlerIndex())),s()})},"onComplete")})},"onComplete")})},"onComplete")})})}T(hZ,"summonPlayerPokemonAnimation");function cZ(E){var I,i,a;const A=(I=E.currentBattle.mysteryEncounter.introVisuals)==null?void 0:I.getSpriteAtIndex(0)[0],s=(i=E.currentBattle.mysteryEncounter.introVisuals)==null?void 0:i.getSpriteAtIndex(1)[0],R=(a=E.currentBattle.mysteryEncounter.introVisuals)==null?void 0:a.getSpriteAtIndex(2)[0];E.tweens.add({targets:R,x:"+=16",y:"-=16",alpha:0,ease:"Sine.easeInOut",duration:750}),E.tweens.add({targets:[s,A],x:"+=16",ease:"Sine.easeInOut",duration:750})}T(cZ,"hideShowmanIntroSprite");const Ms="mysteryEncounters/uncommonBreed",GZ=MA.withEncounterType(me.UNCOMMON_BREED).withEncounterTier(Gt.COMMON).withSceneWaveRangeRequirement(...HA).withCatchAllowed(!0).withHideWildIntroMessage(!0).withFleeAllowed(!1).withIntroSpriteConfigs([]).withIntroDialogue([{text:`${Ms}:intro`}]).withOnInit(E=>{const A=E.currentBattle.mysteryEncounter,s=_1(E,!1,!0).level-2,R=E.arena.randomSpecies(E.currentBattle.waveIndex,s,0,BI(E.getParty()),!0),I=new es(E,R,s,qe.NONE,!0),i=I.getEggMoves();if(i){const l=le(4),D=i[l];A.misc={eggMove:D,pokemon:I},I.moveset.length<4?I.moveset.push(new ke(D)):I.moveset[0]=new ke(D)}else A.misc.pokemon=I;const a=E.currentBattle.waveIndex<50?[B.DEF,B.SPDEF,B.SPD]:[B.ATK,B.DEF,B.SPATK,B.SPDEF,B.SPD],L={pokemonConfigs:[{level:s,species:R,dataSource:new xs(I),isBoss:!1,tags:[Y.MYSTERY_ENCOUNTER_POST_SUMMON],mysteryEncounterBattleEffects:T(l=>{bA(l.scene,`${Ms}:option.1.stat_boost`),l.scene.unshiftPhase(new Ft(l.scene,l.getBattlerIndex(),!0,a,1))},"mysteryEncounterBattleEffects")}]};A.enemyPartyConfigs=[L];const{spriteKey:S,fileRoot:o}=wM(I);return A.spriteConfigs=[{spriteKey:S,fileRoot:o,hasShadow:!0,x:-5,repeat:!0,isPokemon:!0}],A.setDialogueToken("enemyPokemon",I.getNameToRender()),E.loadSe("PRSFX- Spotlight2","battle_anims","PRSFX- Spotlight2.wav"),!0}).withOnVisualsStart(E=>{const s=E.currentBattle.mysteryEncounter.introVisuals.getSprites();return E.tweens.add({targets:s,duration:300,ease:"Cubic.easeOut",yoyo:!0,y:"-=20",loop:1}),E.time.delayedCall(500,()=>E.playSound("battle_anims/PRSFX- Spotlight2")),!0}).setLocalizationKey(`${Ms}`).withTitle(`${Ms}:title`).withDescription(`${Ms}:description`).withQuery(`${Ms}:query`).withSimpleOption({buttonLabel:`${Ms}:option.1.label`,buttonTooltip:`${Ms}:option.1.tooltip`,selected:[{text:`${Ms}:option.1.selected`}]},async E=>{const A=E.currentBattle.mysteryEncounter,s=A.misc.eggMove;if(!xe(s)){const R=new ke(s),i=R.getMove()instanceof pe?Ct.ENEMY:Ct.PLAYER;A.startOfBattleEffects.push({sourceBattlerIndex:Ct.ENEMY,targets:[i],move:R,ignorePp:!0})}ot(E,{fillRemaining:!0}),await mA(E,A.enemyPartyConfigs[0])}).withOption(Dt.newOptionWithMode(It.DISABLED_OR_SPECIAL).withSceneRequirement(new $l("BerryModifier",4)).withDialogue({buttonLabel:`${Ms}:option.2.label`,buttonTooltip:`${Ms}:option.2.tooltip`,disabledButtonTooltip:`${Ms}:option.2.disabled_tooltip`,selected:[{text:`${Ms}:option.2.selected`}]}).withOptionPhase(async E=>{const A=E.findModifiers(I=>I instanceof _E);for(let I=0;I<4;I++){const i=le(A.length),a=A[i];a.stackCount--,a.stackCount===0&&(E.removeModifier(a),A.splice(i,1))}await E.updateModifiers(!0,!0);const s=E.currentBattle.mysteryEncounter,R=s.misc.pokemon;Kv(R,s.misc.eggMove),await TL(E,R,null,ge.POKEBALL,!1),ot(E,{fillRemaining:!0}),Lt(E)}).build()).withOption(Dt.newOptionWithMode(It.DISABLED_OR_SPECIAL).withPrimaryPokemonRequirement(new KI(c6,!0)).withDialogue({buttonLabel:`${Ms}:option.3.label`,buttonTooltip:`${Ms}:option.3.tooltip`,disabledButtonTooltip:`${Ms}:option.3.disabled_tooltip`,selected:[{text:`${Ms}:option.3.selected`}]}).withOptionPhase(async E=>{var R,I;const A=E.currentBattle.mysteryEncounter,s=A.misc.pokemon;Kv(s,A.misc.eggMove),s.ivs=s.ivs.map(i=>{const a=le(31);return a>i?a:i}),await TL(E,s,null,ge.POKEBALL,!1),(I=(R=A.selectedOption)==null?void 0:R.primaryPokemon)!=null&&I.id&&ER(E,A.selectedOption.primaryPokemon.id,s.getExpValue(),!1),ot(E,{fillRemaining:!0}),Lt(E)}).build()).build();function Kv(E,A){const s=E.getEggMoves();if(s){let R=s[le(4)];for(;R===A;)R=s[le(4)];E.moveset.length<4?E.moveset.push(new ke(R)):E.moveset[1]=new ke(R)}}T(Kv,"givePokemonExtraEggMove");const TE="mysteryEncounters/globalTradeSystem",PZ=512,_Z=4096,HZ={1:[e.RATTATA,e.PIDGEY,e.WEEDLE],2:[e.SENTRET,e.HOOTHOOT,e.LEDYBA],3:[e.POOCHYENA,e.ZIGZAGOON,e.TAILLOW],4:[e.BIDOOF,e.STARLY,e.KRICKETOT],5:[e.PATRAT,e.PURRLOIN,e.PIDOVE],6:[e.BUNNELBY,e.LITLEO,e.SCATTERBUG],7:[e.PIKIPEK,e.YUNGOOS,e.ROCKRUFF],8:[e.SKWOVET,e.WOOLOO,e.ROOKIDEE],9:[e.LECHONK,e.FIDOUGH,e.TAROUNTULA]},dZ=[e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.ROARING_MOON,e.WALKING_WAKE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.IRON_VALIANT,e.IRON_LEAVES,e.IRON_BOULDER,e.IRON_CROWN],fZ=MA.withEncounterType(me.GLOBAL_TRADE_SYSTEM).withEncounterTier(Gt.COMMON).withSceneWaveRangeRequirement(...HA).withAutoHideIntroVisuals(!1).withIntroSpriteConfigs([{spriteKey:"global_trade_system",fileRoot:"mystery-encounters",hasShadow:!0,disableAnimation:!0,x:3,y:5,yShadow:1}]).withIntroDialogue([{text:`${TE}:intro`}]).setLocalizationKey(`${TE}`).withTitle(`${TE}:title`).withDescription(`${TE}:description`).withQuery(`${TE}:query`).withOnInit(E=>{const A=E.currentBattle.mysteryEncounter;let s;E.musicPreference===0?(s="mystery_encounter_gen_5_gts",E.loadBgm(s,`${s}.mp3`)):(s="mystery_encounter_gen_6_gts",E.loadBgm(s,`${s}.mp3`));const R=BZ(E);return A.misc={tradeOptionsMap:R,bgmKey:s},!0}).withOnVisualsStart(E=>(E.fadeAndSwitchBgm(E.currentBattle.mysteryEncounter.misc.bgmKey),!0)).withOption(Dt.newOptionWithMode(It.DEFAULT).withHasDexProgress(!0).withDialogue({buttonLabel:`${TE}:option.1.label`,buttonTooltip:`${TE}:option.1.tooltip`,secondOptionPrompt:`${TE}:option.1.trade_options_prompt`}).withPreOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter;return mE(E,T(R=>{const i=A.misc.tradeOptionsMap.get(R.id);return i?i.map(a=>({label:a.getNameToRender(),handler:T(()=>(A.setDialogueToken("tradedPokemon",R.getNameToRender()),A.setDialogueToken("received",a.getNameToRender()),A.misc.tradedPokemon=R,A.misc.receivedPokemon=a,!0),"handler"),onHover:T(()=>{const S=a.species.forms&&a.species.forms.length>a.formIndex?a.species.forms[a.formIndex].formName:null,o=U.t("pokemonInfoContainer:ability")+" "+a.getAbility().name+(a.getGender()!==ye.GENDERLESS?"     |     "+U.t("pokemonInfoContainer:gender")+" "+$L(a.getGender()):""),l=U.t("pokemonInfoContainer:nature")+" "+WO(a.getNature())+(S?"     |     "+U.t("pokemonInfoContainer:form")+" "+S:"");Kt(E,`${o}
${l}`,0,0,!1)},"onHover")})):[]},"onPokemonSelected"))}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter,s=A.misc.tradedPokemon,R=A.misc.receivedPokemon,I=s.getHeldItems().filter(S=>!(S instanceof AR)&&!(S instanceof Zi)),i=Ou();A.setDialogueToken("tradeTrainerName",i.trim()),E.removePokemonFromPlayerParty(s,!1),R.passive=s.passive,R.pokeball=sA(4);const a=new xs(R),L=E.addPlayerPokemon(R.species,R.level,a.abilityIndex,a.formIndex,a.gender,a.shiny,a.variant,a.ivs,a.nature,a);E.getParty().push(L),await L.loadAssets();for(const S of I)S.pokemonId=L.id,E.addModifier(S,!0,!1,!1,!0);await Fv(E),await Wv(E,s,L),await Kt(E,`${TE}:trade_received`,null,0,!0,4e3),E.playBgm(A.misc.bgmKey),await Rv(E,L),await mv(E),s.destroy(),Lt(E,!0)}).build()).withOption(Dt.newOptionWithMode(It.DEFAULT).withHasDexProgress(!0).withDialogue({buttonLabel:`${TE}:option.2.label`,buttonTooltip:`${TE}:option.2.tooltip`}).withPreOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter;return mE(E,T(R=>{const I=K6(E.getParty().map(L=>L.species)),i=new es(E,I,R.level,qe.NONE,!1);if(!i.shiny){const L=new Jt(PZ);E.eventManager.isEventActive()&&(L.value*=E.eventManager.getShinyMultiplier()),E.applyModifiers(zi,!0,L);const S=Math.min(L.value,_Z);i.trySetShinySeed(S,!1)}const a=i.species.ability2?2:1;if(i.species.abilityHidden&&i.abilityIndex<a){const L=new Jt(64);E.applyModifiers(pn,!0,L),!le(L.value)&&(i.abilityIndex=a)}if(!i.shiny&&(!i.species.abilityHidden||i.abilityIndex<a)){const L=i.getEggMoves();if(L){const S=L[le(3)];if(!i.moveset.some(o=>(o==null?void 0:o.moveId)===S))if(i.moveset.length<4)i.moveset.push(new ke(S));else{const o=le(4);i.moveset[o]=new ke(S)}}}A.setDialogueToken("tradedPokemon",R.getNameToRender()),A.setDialogueToken("received",i.getNameToRender()),A.misc.tradedPokemon=R,A.misc.receivedPokemon=i},"onPokemonSelected"))}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter,s=A.misc.tradedPokemon,R=A.misc.receivedPokemon,I=s.getHeldItems().filter(S=>!(S instanceof AR)&&!(S instanceof Zi)),i=Ou();A.setDialogueToken("tradeTrainerName",i.trim()),E.removePokemonFromPlayerParty(s,!1),R.passive=s.passive,R.pokeball=sA(4);const a=new xs(R),L=E.addPlayerPokemon(R.species,R.level,a.abilityIndex,a.formIndex,a.gender,a.shiny,a.variant,a.ivs,a.nature,a);E.getParty().push(L),await L.loadAssets();for(const S of I)S.pokemonId=L.id,E.addModifier(S,!0,!1,!1,!0);await Fv(E),await Wv(E,s,L),await Kt(E,`${TE}:trade_received`,null,0,!0,4e3),E.playBgm(A.misc.bgmKey),await Rv(E,L),await mv(E),s.destroy(),Lt(E,!0)}).build()).withOption(Dt.newOptionWithMode(It.DEFAULT).withDialogue({buttonLabel:`${TE}:option.3.label`,buttonTooltip:`${TE}:option.3.tooltip`,secondOptionPrompt:`${TE}:option.3.trade_options_prompt`}).withPreOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter;return mE(E,T(I=>I.getHeldItems().filter(a=>a.isTransferable).map(a=>({label:a.type.name,handler:T(()=>(A.setDialogueToken("chosenItem",a.type.name),A.misc.chosenModifier=a,!0),"handler")})),"onPokemonSelected"),void 0,T(I=>I.getHeldItems().filter(a=>a.isTransferable).length>0?null:UA(E,`${TE}:option.3.invalid_selection`)??null,"selectableFilter"))}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter,s=A.misc.chosenModifier,R=s.type.withTierFromPool();let I=R.tier??W.GREAT;R.id==="WHITE_HERB"?I=W.GREAT:R.id==="LUCKY_EGG"?I=W.ULTRA:R.id==="GOLDEN_EGG"&&(I=W.ROGUE),I<W.MASTER&&I++,QI(E.getParty(),FE.PLAYER,0);let i=null;for(;!i||i.type.id.includes("TM_");)i=u1(1,E.getParty(),[],{guaranteedModifierTiers:[I],allowLuckUpgrades:!1})[0];A.setDialogueToken("itemName",i.type.name),ot(E,{guaranteedModifierTypeOptions:[i],fillRemaining:!1}),s.stackCount-=1,s.stackCount===0&&E.removeModifier(s),await E.updateModifiers(!0,!0);const a=Ou();A.setDialogueToken("tradeTrainerName",a.trim()),await Kt(E,`${TE}:item_trade_selected`),Lt(E)}).build()).withSimpleOption({buttonLabel:`${TE}:option.4.label`,buttonTooltip:`${TE}:option.4.tooltip`,selected:[{text:`${TE}:option.4.selected`}]},async E=>(Lt(E,!0),!0)).build();function BZ(E){const A=new Map,s=E.getParty().map(R=>R.species);return E.getParty().forEach(R=>{if(R.species.legendary||R.species.subLegendary||R.species.mythical){const I=R.species.generation,i=HZ[I].map(a=>{const L=Ke(a);return new es(E,L,5,qe.NONE,!1)});A.set(R.id,i)}else{const I=R.calculateBaseStats().reduce((a,L)=>a+L,0),i=[];for(let a=0;a<3;a++){const L=K6(s,I);s.push(L),i.push(L)}A.set(R.id,i.map(a=>new es(E,a,R.level,qe.NONE,!1)))}}),A}T(BZ,"getPokemonTradeOptions");function K6(E,A){let s,R=9999,I=0;for(A&&(R=A+100,I=A-100);xe(s);){let i=MR.filter(a=>{const L=a.legendary||a.subLegendary||a.mythical,S=a.getBaseStatTotal(),o=S>=I&&S<=R;return!L&&o&&!dZ.includes(a.speciesId)});if((i==null?void 0:i.length)>20)for(i=AO(i),s=i.pop();xe(s)||E.includes(s);)s=i.pop();else I-=10,R+=10}return s}T(K6,"generateTradeOption");function Fv(E){return new Promise(A=>{const s=E.add.container(0,-E.game.canvas.height/6);s.setName("Trade Background");const R=E.add.rectangle(0,0,E.game.canvas.width/6,E.game.canvas.height/6,0);R.setName("Black Background"),R.setOrigin(0,0),R.setVisible(!1),s.add(R);const I=E.add.image(0,0,"default_bg");I.setName("Trade Background Image"),I.setOrigin(0,0),s.add(I),E.fieldUI.add(s),E.fieldUI.bringToTop(s),s.setVisible(!0),s.alpha=0,E.tweens.add({targets:s,alpha:1,duration:500,ease:"Sine.easeInOut",onComplete:T(()=>{A()},"onComplete")})})}T(Fv,"showTradeBackground");function mv(E){return new Promise(A=>{const s=E.fieldUI.getByName("Trade Background");E.tweens.add({targets:s,alpha:0,duration:1e3,ease:"Sine.easeInOut",onComplete:T(()=>{E.fieldUI.remove(s,!0),A()},"onComplete")})})}T(mv,"hideTradeBackground");function Wv(E,A,s){return new Promise(R=>{const I=E.fieldUI.getByName("Trade Background"),i=I.getByName("Trade Background Image");let a,L,S,o;const l=T(()=>{const P=E.addPokemonSprite(A,i.displayWidth/2,i.displayHeight/2,"pkmn__sub");return P.setPipeline(E.spritePipeline,{tone:[0,0,0,0],ignoreTimeTint:!0}),P},"getPokemonSprite");I.add(a=l()),I.add(L=l()),I.add(S=l()),I.add(o=l()),a.setAlpha(0),L.setAlpha(0),L.setTintFill(FO(A.pokeball)),S.setVisible(!1),o.setVisible(!1),o.setTintFill(FO(s.pokeball)),[a,L].map(P=>{P.play(A.getSpriteKey(!0)),P.setPipeline(E.spritePipeline,{tone:[0,0,0,0],hasShadow:!1,teraColor:DR(A.getTeraType())}),P.setPipelineData("ignoreTimeTint",!0),P.setPipelineData("spriteKey",A.getSpriteKey()),P.setPipelineData("shiny",A.shiny),P.setPipelineData("variant",A.variant),["spriteColors","fusionSpriteColors"].map(_=>{var g;(g=A.summonData)!=null&&g.speciesForm&&(_+="Base"),P.pipelineData[_]=A.getSprite().pipelineData[_]})}),[S,o].map(P=>{P.play(s.getSpriteKey(!0)),P.setPipeline(E.spritePipeline,{tone:[0,0,0,0],hasShadow:!1,teraColor:DR(A.getTeraType())}),P.setPipelineData("ignoreTimeTint",!0),P.setPipelineData("spriteKey",s.getSpriteKey()),P.setPipelineData("shiny",s.shiny),P.setPipelineData("variant",s.variant),["spriteColors","fusionSpriteColors"].map(_=>{var g;(g=s.summonData)!=null&&g.speciesForm&&(_+="Base"),P.pipelineData[_]=s.getSprite().pipelineData[_]})});const D=OO(A.pokeball),M=E.add.sprite(i.displayWidth/2,i.displayHeight/2,"pb",D);M.setVisible(!1),I.add(M);const c=OO(s.pokeball),G=E.add.sprite(i.displayWidth/2,i.displayHeight/2,"pb",c);G.setVisible(!1),I.add(G),E.tweens.add({targets:a,alpha:1,ease:"Cubic.easeInOut",duration:500,onComplete:T(async()=>{E.fadeOutBgm(1e3,!1),await Kt(E,`${TE}:pokemon_trade_selected`),A.cry(),E.playBgm("evolution"),await Kt(E,`${TE}:pokemon_trade_goodbye`),M.setAlpha(0),M.setVisible(!0),E.tweens.add({targets:M,alpha:1,ease:"Cubic.easeInOut",duration:250,onComplete:T(()=>{M.setTexture("pb",`${D}_opening`),E.time.delayedCall(17,()=>M.setTexture("pb",`${D}_open`)),E.playSound("se/pb_rel"),L.setVisible(!0),E.tweens.add({targets:[L,a],duration:500,ease:"Sine.easeIn",scale:.25,onComplete:T(()=>{a.setVisible(!1),M.setTexture("pb",`${D}_opening`),L.setVisible(!1),E.playSound("se/pb_catch"),E.time.delayedCall(17,()=>M.setTexture("pb",`${D}`)),E.tweens.add({targets:M,y:"+=10",duration:200,delay:250,ease:"Cubic.easeIn",onComplete:T(()=>{E.playSound("se/pb_bounce_1"),E.tweens.add({targets:M,y:"-=100",duration:200,delay:1e3,ease:"Cubic.easeInOut",onStart:T(()=>{E.playSound("se/pb_throw")},"onStart"),onComplete:T(async()=>{await gZ(E,a,S),await KZ(E,s,S,o,G,c),R()},"onComplete")})},"onComplete")})},"onComplete")})},"onComplete")})},"onComplete")})})}T(Wv,"doPokemonTradeSequence");function gZ(E,A,s){return new Promise(R=>{const I=E.fieldUI.getByName("Trade Background"),i=I.getByName("Trade Background Image");I.getByName("Black Background").setVisible(!0),I.bringToTop(A),I.bringToTop(s),A.x=i.displayWidth/4,A.y=200,A.scale=1,A.setVisible(!0),s.x=i.displayWidth*3/4,s.y=-200,s.scale=1,s.setVisible(!0);const L=300,S=750,o=1e3;E.tweens.add({targets:i,alpha:0,ease:"Cubic.easeInOut",duration:L,onComplete:T(()=>{E.tweens.add({targets:[s,A],y:i.displayWidth/2-100,ease:"Cubic.easeInOut",duration:o*3,onComplete:T(()=>{E.tweens.add({targets:s,x:i.displayWidth/4,ease:"Cubic.easeInOut",duration:o/2,delay:S}),E.tweens.add({targets:A,x:i.displayWidth*3/4,ease:"Cubic.easeInOut",duration:o/2,delay:S,onComplete:T(()=>{E.tweens.add({targets:s,y:"+=200",ease:"Cubic.easeInOut",duration:o*2,delay:S}),E.tweens.add({targets:A,y:"-=200",ease:"Cubic.easeInOut",duration:o*2,delay:S,onComplete:T(()=>{E.tweens.add({targets:i,alpha:1,ease:"Cubic.easeInOut",duration:L,onComplete:T(()=>{R()},"onComplete")})},"onComplete")})},"onComplete")})},"onComplete")})},"onComplete")})})}T(gZ,"doPokemonTradeFlyBySequence");function KZ(E,A,s,R,I,i){return new Promise(a=>{const S=E.fieldUI.getByName("Trade Background").getByName("Trade Background Image");s.setVisible(!1),s.x=S.displayWidth/2,s.y=S.displayHeight/2,R.setVisible(!1),R.x=S.displayWidth/2,R.y=S.displayHeight/2,I.setVisible(!0),I.x=S.displayWidth/2,I.y=S.displayHeight/2-100;const o=1e3;E.playSound("se/pb_throw"),E.tweens.add({targets:I,y:"+=100",ease:"Cubic.easeInOut",duration:o,onComplete:T(()=>{E.playSound("se/pb_bounce_1"),E.time.delayedCall(100,()=>E.playSound("se/pb_bounce_1")),E.time.delayedCall(2e3,()=>{E.playSound("se/pb_rel"),E.fadeOutBgm(500,!1),A.cry(),R.scale=.25,R.alpha=1,s.setVisible(!0),s.scale=.25,R.alpha=1,R.setVisible(!0),I.setTexture("pb",`${i}_opening`),E.time.delayedCall(17,()=>I.setTexture("pb",`${i}_open`)),E.tweens.add({targets:s,duration:250,ease:"Sine.easeOut",scale:1}),E.tweens.add({targets:R,duration:250,ease:"Sine.easeOut",scale:1,alpha:0,onComplete:T(()=>{I.destroy(),E.time.delayedCall(2e3,()=>a())},"onComplete")})})},"onComplete")})})}T(KZ,"doTradeReceivedSequence");function Ou(){const E=Object.keys(or).length;let A=or[sA(E)+1];for(;!A;)A=or[sA(E)+1];const s=A[sA(A.length)],I=(s instanceof Array?s[sA(s.length)]:s).split(" & ");return I[sA(I.length)]}T(Ou,"generateRandomTraderName");const wt="mysteryEncounters/theExpertPokemonBreeder",UO="trainerNames:expert_pokemon_breeder",_O=45,DO=60,HO=75,FZ=20,Xg=class Xg{constructor(A,s){this.species=A,this.evolution=s}};T(Xg,"BreederSpeciesEvolution");let lA=Xg;const mZ=[[e.MUNCHLAX,new lA(e.SNORLAX,DO)],[e.HAPPINY,new lA(e.CHANSEY,_O),new lA(e.BLISSEY,HO)],[e.MAGBY,new lA(e.MAGMAR,_O),new lA(e.MAGMORTAR,HO)],[e.ELEKID,new lA(e.ELECTABUZZ,_O),new lA(e.ELECTIVIRE,HO)],[e.RIOLU,new lA(e.LUCARIO,DO)],[e.BUDEW,new lA(e.ROSELIA,_O),new lA(e.ROSERADE,HO)],[e.TOXEL,new lA(e.TOXTRICITY,DO)],[e.MIME_JR,new lA(e.GALAR_MR_MIME,_O),new lA(e.MR_RIME,HO)]],WZ=[[e.PICHU,new lA(e.PIKACHU,_O),new lA(e.RAICHU,HO)],[e.PICHU,new lA(e.PIKACHU,_O),new lA(e.ALOLA_RAICHU,HO)],[e.SMOOCHUM,new lA(e.JYNX,DO)],[e.TYROGUE,new lA(e.HITMONLEE,DO)],[e.TYROGUE,new lA(e.HITMONCHAN,DO)],[e.TYROGUE,new lA(e.HITMONTOP,DO)],[e.IGGLYBUFF,new lA(e.JIGGLYPUFF,_O),new lA(e.WIGGLYTUFF,HO)],[e.AZURILL,new lA(e.MARILL,_O),new lA(e.AZUMARILL,HO)],[e.WYNAUT,new lA(e.WOBBUFFET,DO)],[e.CHINGLING,new lA(e.CHIMECHO,DO)],[e.BONSLY,new lA(e.SUDOWOODO,DO)],[e.MANTYKE,new lA(e.MANTINE,DO)]],YZ=MA.withEncounterType(me.THE_EXPERT_POKEMON_BREEDER).withEncounterTier(Gt.ULTRA).withSceneWaveRangeRequirement(...HA).withScenePartySizeRequirement(4,6,!0).withIntroSpriteConfigs([]).withIntroDialogue([{text:`${wt}:intro`},{speaker:UO,text:`${wt}:intro_dialogue`}]).withOnInit(E=>{const A=E.currentBattle.mysteryEncounter,s=E.currentBattle.waveIndex;A.enemyPartyConfigs=[pZ(E)];const R=s<_O?e.CLEFFA:s<HO?e.CLEFAIRY:e.CLEFABLE;A.spriteConfigs=[{spriteKey:R.toString(),fileRoot:"pokemon",hasShadow:!0,repeat:!0,x:14,y:-2,yShadow:-2},{spriteKey:"expert_pokemon_breeder",fileRoot:"trainer",hasShadow:!0,x:-14,y:4,yShadow:2}];let I=E.getParty().slice(0);I=I.filter(g=>g.isAllowedInBattle()).sort((g,H)=>g.friendship-H.friendship);const i=I[0],a=I[1],L=I[2];A.setDialogueToken("pokemon1Name",i.getNameToRender()),A.setDialogueToken("pokemon2Name",a.getNameToRender()),A.setDialogueToken("pokemon3Name",L.getNameToRender());const[S,o]=nu(i);let l=UA(E,`${wt}:option.1.tooltip_base`);if(o>0){const g=U.t(`${wt}:numEggs`,{count:o,rarity:U.t("egg:greatTier")});l+=U.t(`${wt}:eggs_tooltip`,{eggs:g}),A.setDialogueToken("pokemon1RareEggs",g)}if(S>0){const g=U.t(`${wt}:numEggs`,{count:S,rarity:U.t("egg:defaultTier")});l+=U.t(`${wt}:eggs_tooltip`,{eggs:g}),A.setDialogueToken("pokemon1CommonEggs",g)}A.options[0].dialogue.buttonTooltip=l;const[D,M]=nu(a);let c=UA(E,`${wt}:option.2.tooltip_base`);if(M>0){const g=U.t(`${wt}:numEggs`,{count:M,rarity:U.t("egg:greatTier")});c+=U.t(`${wt}:eggs_tooltip`,{eggs:g}),A.setDialogueToken("pokemon2RareEggs",g)}if(D>0){const g=U.t(`${wt}:numEggs`,{count:D,rarity:U.t("egg:defaultTier")});c+=U.t(`${wt}:eggs_tooltip`,{eggs:g}),A.setDialogueToken("pokemon2CommonEggs",g)}A.options[1].dialogue.buttonTooltip=c;const[G,P]=nu(L);let _=UA(E,`${wt}:option.3.tooltip_base`);if(P>0){const g=U.t(`${wt}:numEggs`,{count:P,rarity:U.t("egg:greatTier")});_+=U.t(`${wt}:eggs_tooltip`,{eggs:g}),A.setDialogueToken("pokemon3RareEggs",g)}if(G>0){const g=U.t(`${wt}:numEggs`,{count:G,rarity:U.t("egg:defaultTier")});_+=U.t(`${wt}:eggs_tooltip`,{eggs:g}),A.setDialogueToken("pokemon3CommonEggs",g)}return A.options[2].dialogue.buttonTooltip=_,A.misc={pokemon1:i,pokemon1CommonEggs:S,pokemon1RareEggs:o,pokemon2:a,pokemon2CommonEggs:D,pokemon2RareEggs:M,pokemon3:L,pokemon3CommonEggs:G,pokemon3RareEggs:P},!0}).setLocalizationKey(`${wt}`).withTitle(`${wt}:title`).withDescription(`${wt}:description`).withQuery(`${wt}:query`).withOption(Dt.newOptionWithMode(It.DEFAULT).withDialogue({buttonLabel:`${wt}:option.1.label`,selected:[{speaker:UO,text:`${wt}:option.selected`}]}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter,s=A.enemyPartyConfigs[0],{pokemon1:R,pokemon1CommonEggs:I,pokemon1RareEggs:i}=A.misc;A.misc.chosenPokemon=R,A.setDialogueToken("chosenPokemon",R.getNameToRender());const a=Iu(E,I,i);ot(E,{guaranteedModifierTypeFuncs:[x.SOOTHE_BELL],fillRemaining:!0},a,()=>Lu(E)),iu(E,A,R),A.dialogue.outro=[{speaker:UO,text:`${wt}:outro`}],A.dialogueTokens.hasOwnProperty("pokemon1CommonEggs")&&A.dialogue.outro.push({text:U.t(`${wt}:gained_eggs`,{numEggs:A.dialogueTokens.pokemon1CommonEggs})}),A.dialogueTokens.hasOwnProperty("pokemon1RareEggs")&&A.dialogue.outro.push({text:U.t(`${wt}:gained_eggs`,{numEggs:A.dialogueTokens.pokemon1RareEggs})}),A.onGameOver=au,await mA(E,s)}).build()).withOption(Dt.newOptionWithMode(It.DEFAULT).withDialogue({buttonLabel:`${wt}:option.2.label`,selected:[{speaker:UO,text:`${wt}:option.selected`}]}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter,s=A.enemyPartyConfigs[0],{pokemon2:R,pokemon2CommonEggs:I,pokemon2RareEggs:i}=A.misc;A.misc.chosenPokemon=R,A.setDialogueToken("chosenPokemon",R.getNameToRender());const a=Iu(E,I,i);ot(E,{guaranteedModifierTypeFuncs:[x.SOOTHE_BELL],fillRemaining:!0},a,()=>Lu(E)),iu(E,A,R),A.dialogue.outro=[{speaker:UO,text:`${wt}:outro`}],A.dialogueTokens.hasOwnProperty("pokemon2CommonEggs")&&A.dialogue.outro.push({text:U.t(`${wt}:gained_eggs`,{numEggs:A.dialogueTokens.pokemon2CommonEggs})}),A.dialogueTokens.hasOwnProperty("pokemon2RareEggs")&&A.dialogue.outro.push({text:U.t(`${wt}:gained_eggs`,{numEggs:A.dialogueTokens.pokemon2RareEggs})}),A.onGameOver=au,await mA(E,s)}).build()).withOption(Dt.newOptionWithMode(It.DEFAULT).withDialogue({buttonLabel:`${wt}:option.3.label`,selected:[{speaker:UO,text:`${wt}:option.selected`}]}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter,s=A.enemyPartyConfigs[0],{pokemon3:R,pokemon3CommonEggs:I,pokemon3RareEggs:i}=A.misc;A.misc.chosenPokemon=R,A.setDialogueToken("chosenPokemon",R.getNameToRender());const a=Iu(E,I,i);ot(E,{guaranteedModifierTypeFuncs:[x.SOOTHE_BELL],fillRemaining:!0},a,()=>Lu(E)),iu(E,A,R),A.dialogue.outro=[{speaker:UO,text:`${wt}:outro`}],A.dialogueTokens.hasOwnProperty("pokemon3CommonEggs")&&A.dialogue.outro.push({text:U.t(`${wt}:gained_eggs`,{numEggs:A.dialogueTokens.pokemon3CommonEggs})}),A.dialogueTokens.hasOwnProperty("pokemon3RareEggs")&&A.dialogue.outro.push({text:U.t(`${wt}:gained_eggs`,{numEggs:A.dialogueTokens.pokemon3RareEggs})}),A.onGameOver=au,await mA(E,s)}).build()).withOutroDialogue([{speaker:UO,text:`${wt}:outro`}]).build();function pZ(E){const A=E.currentBattle.waveIndex,s=BA[C.EXPERT_POKEMON_BREEDER].clone();s.name=U.t(UO);const R=A<_O?e.CLEFFA:A<HO?e.CLEFAIRY:e.CLEFABLE,I={trainerType:C.EXPERT_POKEMON_BREEDER,pokemonConfigs:[{nickname:U.t(`${wt}:cleffa_1_nickname`,{speciesName:Ke(R).getName()}),species:Ke(R),isBoss:!1,abilityIndex:1,shiny:!1,nature:be.ADAMANT,moveSet:[t.METEOR_MASH,t.FIRE_PUNCH,t.ICE_PUNCH,t.THUNDER_PUNCH],ivs:[31,31,31,31,31,31],modifierConfigs:[{modifier:St(E,x.TERA_SHARD,[n.STEEL])}]}]};if(E.arena.biomeType===r.SPACE)I.pokemonConfigs.push({nickname:U.t(`${wt}:cleffa_2_nickname`,{speciesName:Ke(R).getName()}),species:Ke(R),isBoss:!1,abilityIndex:1,shiny:!0,variant:1,nature:be.MODEST,moveSet:[t.MOONBLAST,t.MYSTICAL_FIRE,t.ICE_BEAM,t.THUNDERBOLT],ivs:[31,31,31,31,31,31]},{nickname:U.t(`${wt}:cleffa_3_nickname`,{speciesName:Ke(R).getName()}),species:Ke(R),isBoss:!1,abilityIndex:2,shiny:!0,variant:2,nature:be.BOLD,moveSet:[t.TRI_ATTACK,t.STORED_POWER,t.TAKE_HEART,t.MOONLIGHT],ivs:[31,31,31,31,31,31]});else{const i=Yv(mZ,A),a=Yv(WZ,A);I.pokemonConfigs.push({species:Ke(i),isBoss:!1,ivs:[31,31,31,31,31,31]},{species:Ke(a),isBoss:!1,ivs:[31,31,31,31,31,31]})}return I}T(pZ,"getPartyConfig");function Yv(E,A){const R=AO(E.slice(0)).pop().slice(0);let I=R.pop();for(;I instanceof lA&&I.evolution>A;)I=R.pop();return I instanceof lA?I.species:I}T(Yv,"getSpeciesFromPool");function nu(E){const A=E.calculateBaseStats().reduce((S,o)=>S+o,0),s=Math.min(Math.max(Math.floor((680-A)/20),1),18),R=E.species.getRootSpeciesId();let I=0;if(CA.hasOwnProperty(R)){const S=CA[R];I=Math.min(Math.max(Math.floor(7-S)*2,0),12)}let i=Math.min(I+s,30),a=Math.min(i,5);i-=a;const L=Math.floor(i/4);return a+=i%4,[a,L]}T(nu,"calculateEggRewardsForPokemon");function Iu(E,A,s){const R=U.t(`${wt}:title`)+`:
`+U.t(UO),I=[];if(A>0)for(let i=0;i<A;i++)I.push({scene:E,pulled:!1,sourceType:hE.EVENT,eggDescriptor:R,tier:f.COMMON});if(s>0)for(let i=0;i<s;i++)I.push({scene:E,pulled:!1,sourceType:hE.EVENT,eggDescriptor:R,tier:f.RARE});return I}T(Iu,"getEggOptions");function iu(E,A,s){const R=E.getParty(),I=R.indexOf(s);R[I]=R[0],R[0]=s,A.misc.originalParty=E.getParty().slice(1),A.misc.originalPartyHeldItems=A.misc.originalParty.map(i=>i.getHeldItems()),E.party=[s]}T(iu,"removePokemonFromPartyAndStoreHeldItems");function yZ(E){E.arena.biomeType===r.SPACE&&E.validateAchv(At.BREEDERS_IN_SPACE)}T(yZ,"checkAchievement");function F6(E){const A=E.currentBattle.mysteryEncounter;E.getParty().push(...A.misc.originalParty),A.misc.originalPartyHeldItems.forEach(R=>{R.forEach(I=>{E.addModifier(I,!0,!1,!1,!0)})}),E.updateModifiers(!0)}T(F6,"restorePartyAndHeldItems");function au(E){const A=E.currentBattle.mysteryEncounter;A.dialogue.outro=[{speaker:UO,text:`${wt}:outro_failed`}],F6(E);const s=A.misc.chosenPokemon;s.friendship=0,A.doEncounterRewards=void 0,A.misc.encounterFailed=!0,E.playBgm(E.arena.bgm),E.clearPhaseQueue(),E.clearPhaseQueueSplice();const R=E.getEnemyPokemon();return R&&(E.playSound("se/pb_rel"),R.hideInfo(),R.tint(FO(R.pokeball),1,250,"Sine.easeIn"),E.tweens.add({targets:R,duration:250,ease:"Sine.easeIn",scale:.5,onComplete:T(()=>{E.field.remove(R,!0)},"onComplete")})),E.time.delayedCall(250,()=>{var a,L;const I=(a=E.currentBattle.trainer)==null?void 0:a.getSprites(),i=(L=E.currentBattle.trainer)==null?void 0:L.getTintSprites();if(I&&i)for(let S=0;S<I.length;S++)I[S].setVisible(!0),i[S].setVisible(!0),I[S].clearTint(),i[S].clearTint();E.tweens.add({targets:E.currentBattle.trainer,x:"-=16",y:"+=16",alpha:1,ease:"Sine.easeInOut",duration:750})}),t9(E,!0),!1}T(au,"onGameOver");function Lu(E){const A=E.currentBattle.mysteryEncounter;A.misc.encounterFailed||(yZ(E),A.misc.chosenPokemon.addFriendship(FZ),F6(E))}T(Lu,"doPostEncounterCleanup");const m6=3,ru=256,wZ=3,VZ=12,vZ=15,xZ=[r.SEA,r.SEABED,r.BADLANDS,r.DESERT,r.ICE_CAVE,r.VOLCANO,r.WASTELAND,r.ABYSS,r.SPACE,r.END],bZ=[r.TOWN,r.PLAINS,r.GRASS,r.TALL_GRASS,r.METROPOLIS,r.FOREST,r.SWAMP,r.BEACH,r.LAKE,r.MOUNTAIN,r.CAVE,r.MEADOW,r.POWER_PLANT,r.GRAVEYARD,r.DOJO,r.FACTORY,r.RUINS,r.CONSTRUCTION_SITE,r.JUNGLE,r.FAIRY_CAVE,r.TEMPLE,r.SLUM,r.SNOWY_FOREST,r.ISLAND,r.LABORATORY],kZ=[r.TOWN,r.PLAINS,r.GRASS,r.TALL_GRASS,r.METROPOLIS,r.FOREST,r.SWAMP,r.BEACH,r.LAKE,r.MOUNTAIN,r.BADLANDS,r.CAVE,r.DESERT,r.ICE_CAVE,r.MEADOW,r.POWER_PLANT,r.GRAVEYARD,r.DOJO,r.FACTORY,r.RUINS,r.CONSTRUCTION_SITE,r.JUNGLE,r.FAIRY_CAVE,r.TEMPLE,r.SLUM,r.SNOWY_FOREST,r.ISLAND,r.LABORATORY],ZZ=[r.TOWN,r.PLAINS,r.GRASS,r.TALL_GRASS,r.METROPOLIS,r.BEACH,r.LAKE,r.MEADOW,r.POWER_PLANT,r.GRAVEYARD,r.DOJO,r.FACTORY,r.CONSTRUCTION_SITE,r.SLUM,r.ISLAND],kt={},XZ=[],QZ=[me.FIELD_TRIP,me.DANCING_LESSONS],JZ=[me.MYSTERIOUS_CHALLENGERS,me.SHADY_VITAMIN_DEALER,me.THE_POKEMON_SALESMAN,me.AN_OFFER_YOU_CANT_REFUSE,me.THE_WINSTRATE_CHALLENGE,me.THE_EXPERT_POKEMON_BREEDER],$Z=[me.DEPARTMENT_STORE_SALE,me.PART_TIMER,me.FUN_AND_GAMES,me.GLOBAL_TRADE_SYSTEM],qZ=[me.FIGHT_OR_FLIGHT,me.DARK_DEAL,me.MYSTERIOUS_CHEST,me.TRAINING_SESSION,me.DELIBIRDY,me.A_TRAINERS_TEST,me.TRASH_TO_TREASURE,me.BERRIES_ABOUND,me.CLOWNING_AROUND,me.WEIRD_DREAM,me.TELEPORTING_HIJINKS,me.BUG_TYPE_SUPERFAN,me.UNCOMMON_BREED],ha=new Map([[r.TOWN,[]],[r.PLAINS,[me.SLUMBERING_SNORLAX,me.ABSOLUTE_AVARICE]],[r.GRASS,[me.SLUMBERING_SNORLAX,me.ABSOLUTE_AVARICE]],[r.TALL_GRASS,[me.ABSOLUTE_AVARICE]],[r.METROPOLIS,[]],[r.FOREST,[me.SAFARI_ZONE,me.ABSOLUTE_AVARICE]],[r.SEA,[me.LOST_AT_SEA]],[r.SWAMP,[me.SAFARI_ZONE]],[r.BEACH,[]],[r.LAKE,[]],[r.SEABED,[]],[r.MOUNTAIN,[]],[r.BADLANDS,[me.DANCING_LESSONS]],[r.CAVE,[me.THE_STRONG_STUFF]],[r.DESERT,[me.DANCING_LESSONS]],[r.ICE_CAVE,[]],[r.MEADOW,[]],[r.POWER_PLANT,[]],[r.VOLCANO,[me.FIERY_FALLOUT,me.DANCING_LESSONS]],[r.GRAVEYARD,[]],[r.DOJO,[]],[r.FACTORY,[]],[r.RUINS,[]],[r.WASTELAND,[me.DANCING_LESSONS]],[r.ABYSS,[me.DANCING_LESSONS]],[r.SPACE,[me.THE_EXPERT_POKEMON_BREEDER]],[r.CONSTRUCTION_SITE,[]],[r.JUNGLE,[me.SAFARI_ZONE]],[r.FAIRY_CAVE,[]],[r.TEMPLE,[]],[r.SLUM,[]],[r.SNOWY_FOREST,[]],[r.ISLAND,[]],[r.LABORATORY,[]]]);function jZ(){kt[me.MYSTERIOUS_CHALLENGERS]=z7,kt[me.MYSTERIOUS_CHEST]=ek,kt[me.DARK_DEAL]=k7,kt[me.FIGHT_OR_FLIGHT]=q7,kt[me.TRAINING_SESSION]=sk,kt[me.SLUMBERING_SNORLAX]=Ek,kt[me.DEPARTMENT_STORE_SALE]=Z7,kt[me.SHADY_VITAMIN_DEALER]=Ak,kt[me.FIELD_TRIP]=X7,kt[me.SAFARI_ZONE]=Rk,kt[me.LOST_AT_SEA]=j7,kt[me.FIERY_FALLOUT]=Lk,kt[me.THE_STRONG_STUFF]=rk,kt[me.THE_POKEMON_SALESMAN]=Tk,kt[me.AN_OFFER_YOU_CANT_REFUSE]=lk,kt[me.DELIBIRDY]=Ck,kt[me.ABSOLUTE_AVARICE]=Uk,kt[me.A_TRAINERS_TEST]=hk,kt[me.TRASH_TO_TREASURE]=ck,kt[me.BERRIES_ABOUND]=_k,kt[me.CLOWNING_AROUND]=Hk,kt[me.PART_TIMER]=Bk,kt[me.DANCING_LESSONS]=yk,kt[me.WEIRD_DREAM]=Jk,kt[me.THE_WINSTRATE_CHALLENGE]=sZ,kt[me.TELEPORTING_HIJINKS]=NZ,kt[me.BUG_TYPE_SUPERFAN]=oZ,kt[me.FUN_AND_GAMES]=UZ,kt[me.UNCOMMON_BREED]=GZ,kt[me.GLOBAL_TRADE_SYSTEM]=fZ,kt[me.THE_EXPERT_POKEMON_BREEDER]=YZ,XZ.forEach(A=>{xZ.forEach(s=>{const R=ha.get(s);R&&!R.includes(A)&&R.push(A)})}),QZ.forEach(A=>{bZ.forEach(s=>{const R=ha.get(s);R&&!R.includes(A)&&R.push(A)})}),JZ.forEach(A=>{kZ.forEach(s=>{const R=ha.get(s);R&&!R.includes(A)&&R.push(A)})}),$Z.forEach(A=>{ZZ.forEach(s=>{const R=ha.get(s);R&&!R.includes(A)&&R.push(A)})});let E="";ha.forEach((A,s)=>{qZ.forEach(R=>{A.includes(R)||A.push(R)}),E+=`${JL(s).toUpperCase()}: [${A.map(R=>me[R].toString().toLowerCase()).sort().join(", ")}]
`})}T(jZ,"initMysteryEncounters");const Qg=class Qg extends zE{constructor(A,s){super(A,s)}start(){const A=this.getPokemon();if(A!=null&&A.isActive(!0)&&A.status&&A.status.isPostTurn()){A.status.incrementTurn();const s=new je(!1);if(Et(rE,A,s),Et(LU,A,s),s.value)this.end();else{this.scene.queueMessage($x(A.status.effect,b(A)));const R=new $e(0);switch(A.status.effect){case J.POISON:R.value=Math.max(A.getMaxHp()>>3,1);break;case J.TOXIC:R.value=Math.max(Math.floor(A.getMaxHp()/16*A.status.toxicTurnCount),1);break;case J.BURN:R.value=Math.max(A.getMaxHp()>>4,1),Et(hU,A,null,!1,R);break}R.value&&(this.scene.damageNumberHandler.add(this.getPokemon(),A.damage(R.value,!1,!0)),A.updateInfo()),new bI(RA.POISON+(A.status.effect-1),A).play(this.scene,!1,()=>this.end())}}else this.end()}end(){this.scene.currentBattle.battleSpec===eE.FINAL_BOSS?this.scene.initFinalBossPhaseTwo(this.getPokemon()):super.end()}};T(Qg,"PostTurnStatusEffectPhase");let YT=Qg;const Jg=class Jg{constructor(A,s,R,I){this.type=A,this.tier=s,this.waveIndex=R,this.selectedOption=I??-1}};T(Jg,"SeenEncounterData");let sc=Jg;const $g=class $g{constructor(A){this.encounteredEvents=[],this.encounterSpawnChance=m6,this.queuedEncounters=[],xe(A)||Object.assign(this,A),this.encounteredEvents=this.encounteredEvents??[],this.queuedEncounters=this.queuedEncounters??[]}};T($g,"MysteryEncounterSaveData");let CL=$g;const qg=class qg extends kA{constructor(A,s){super(A),this.FIRST_DIALOGUE_PROMPT_DELAY=300,this.optionSelectSettings=s}start(){super.start(),this.scene.clearPhaseQueue(),this.scene.clearPhaseQueueSplice();const A=this.scene.currentBattle.mysteryEncounter;A.updateSeedOffset(this.scene),this.optionSelectSettings||this.scene.mysteryEncounterSaveData.encounteredEvents.push(new sc(A.encounterType,A.encounterTier,this.scene.currentBattle.waveIndex)),this.scene.ui.setMode($.MYSTERY_ENCOUNTER,this.optionSelectSettings)}handleOptionSelect(A,s){var R,I;if(this.scene.currentBattle.mysteryEncounter.selectedOption=A,!this.optionSelectSettings){const i=this.scene.mysteryEncounterSaveData.encounteredEvents[this.scene.mysteryEncounterSaveData.encounteredEvents.length-1];i.type===((R=this.scene.currentBattle.mysteryEncounter)==null?void 0:R.encounterType)&&(i.selectedOption=s)}return A.onOptionPhase?(this.scene.currentBattle.mysteryEncounter.populateDialogueTokensFromRequirements(this.scene),A.onPreOptionPhase?this.scene.executeWithSeedOffset(async()=>await A.onPreOptionPhase(this.scene).then(i=>{(xe(i)||i)&&this.continueEncounter()}),(I=this.scene.currentBattle.mysteryEncounter)==null?void 0:I.getSeedOffset()):this.continueEncounter(),!0):!1}continueEncounter(){var R,I,i;const A=T(()=>{this.scene.pushPhase(new Rc(this.scene)),this.end()},"endDialogueAndContinueEncounter"),s=(i=(I=(R=this.scene.currentBattle)==null?void 0:R.mysteryEncounter)==null?void 0:I.selectedOption)==null?void 0:i.dialogue;if(s!=null&&s.selected&&s.selected.length>0){this.scene.ui.setMode($.MESSAGE);const a=s.selected;let L=0;const S=T(()=>{const o=L===a.length-1?A:S,l=a[L];let D=null;const M=UA(this.scene,l.text);l.speaker&&(D=UA(this.scene,l.speaker)),L++,D?this.scene.ui.showDialogue(M??"",D,null,o,0,L===1?this.FIRST_DIALOGUE_PROMPT_DELAY:0):this.scene.ui.showText(M??"",null,o,L===1?this.FIRST_DIALOGUE_PROMPT_DELAY:0,!0)},"showNextDialogue");S()}else A()}end(){this.scene.ui.setMode($.MESSAGE).then(()=>super.end())}};T(qg,"MysteryEncounterPhase");let EC=qg;const jg=class jg extends kA{constructor(A){super(A),this.onOptionSelect=this.scene.currentBattle.mysteryEncounter.selectedOption.onOptionPhase}start(){var A,s;super.start(),(A=this.scene.currentBattle.mysteryEncounter)!=null&&A.autoHideIntroVisuals?gA(this.scene).then(()=>{var R;this.scene.executeWithSeedOffset(()=>{this.onOptionSelect(this.scene).finally(()=>{this.end()})},((R=this.scene.currentBattle.mysteryEncounter)==null?void 0:R.getSeedOffset())*500)}):this.scene.executeWithSeedOffset(()=>{this.onOptionSelect(this.scene).finally(()=>{this.end()})},((s=this.scene.currentBattle.mysteryEncounter)==null?void 0:s.getSeedOffset())*500)}};T(jg,"MysteryEncounterOptionSelectedPhase");let Rc=jg;const zg=class zg extends kA{constructor(A){super(A)}start(){super.start();const A=[Y.FLINCHED,Y.ENDURING];for(this.scene.getField(!0).filter(a=>a.summonData).forEach(a=>{const L=a.summonData.tags;L.filter(S=>A.includes(S.tagType)&&S.lapseTypes.includes(rs.TURN_END)&&!S.lapse(a,rs.TURN_END)).forEach(S=>{S.onRemove(a),L.splice(L.indexOf(S),1)})});this.scene.findPhase(a=>a instanceof YT);)this.scene.tryRemovePhase(a=>a instanceof YT);const R=this.scene.getParty().filter(a=>a.isAllowedInBattle()),I=R.filter(a=>!a.isActive(!0));if(!R.length)return this.scene.unshiftPhase(new iO(this.scene)),this.end();this.scene.getPlayerField().forEach((a,L)=>{!a.isAllowedInBattle()&&I.length>L&&this.scene.unshiftPhase(new pi(this.scene,xA.SWITCH,L,!0,!1))}),this.scene.currentBattle.double&&R.length===1&&I.length===0&&this.scene.unshiftPhase(new aO(this.scene,!0)),this.end()}};T(zg,"MysteryEncounterBattleStartCleanupPhase");let Oc=zg;const eK=class eK extends kA{constructor(A,s=!1){super(A),this.disableSwitch=s}start(){super.start(),this.doMysteryEncounterBattle(this.scene)}getBattleMessage(A){var I,i;const s=A.getEnemyField(),R=A.currentBattle.mysteryEncounter.encounterMode;return A.currentBattle.battleSpec===eE.FINAL_BOSS?U.t("battle:bossAppeared",{bossName:s[0].name}):R===sE.TRAINER_BATTLE?A.currentBattle.double?U.t("battle:trainerAppearedDouble",{trainerName:(I=A.currentBattle.trainer)==null?void 0:I.getName(qe.NONE,!0)}):U.t("battle:trainerAppeared",{trainerName:(i=A.currentBattle.trainer)==null?void 0:i.getName(qe.NONE,!0)}):s.length===1?U.t("battle:singleWildAppeared",{pokemonName:s[0].name}):U.t("battle:multiWildAppeared",{pokemonName1:s[0].name,pokemonName2:s[1].name})}doMysteryEncounterBattle(A){var R,I,i,a;const s=A.currentBattle.mysteryEncounter.encounterMode;if(s===sE.WILD_BATTLE||s===sE.BOSS_BATTLE){s===sE.BOSS_BATTLE&&A.playBgm(void 0);const L=A.getEnemyParty().filter(S=>!S.isFainted()).length;A.unshiftPhase(new KE(A,0,!1)),A.currentBattle.double&&L>1&&A.unshiftPhase(new KE(A,1,!1)),(R=A.currentBattle.mysteryEncounter)!=null&&R.hideBattleIntroMessage?this.endBattleSetup(A):A.ui.showText(this.getBattleMessage(A),null,()=>this.endBattleSetup(A),0)}else if(s===sE.TRAINER_BATTLE){this.showEnemyTrainer();const L=T(()=>{var l;A.currentBattle.started=!0,A.playBgm(void 0),A.pbTray.showPbTray(A.getParty()),A.pbTrayEnemy.showPbTray(A.getEnemyParty());const o=T(()=>{this.hideEnemyTrainer();const D=A.getEnemyParty().filter(M=>!M.isFainted()).length;A.unshiftPhase(new KE(A,0,!1)),A.currentBattle.double&&D>1&&A.unshiftPhase(new KE(A,1,!1)),this.endBattleSetup(A)},"doTrainerSummon");(l=A.currentBattle.mysteryEncounter)!=null&&l.hideBattleIntroMessage?o():A.ui.showText(this.getBattleMessage(A),null,o,1e3,!0)},"doSummon"),S=(I=A.currentBattle.trainer)==null?void 0:I.getEncounterMessages();if(!S||!S.length)L();else{const o=this.scene.currentBattle.trainer;let l;A.executeWithSeedOffset(()=>l=RE(S),(i=this.scene.currentBattle.mysteryEncounter)==null?void 0:i.getSeedOffset()),l=l;const D=T(()=>{A.ui.showDialogue(l,o==null?void 0:o.getName(qe.NONE,!0),null,()=>{A.charSprite.hide().then(()=>A.hideFieldOverlay(250).then(()=>L()))})},"showDialogueAndSummon");(a=this.scene.currentBattle.trainer)!=null&&a.config.hasCharSprite&&!this.scene.ui.shouldSkipDialogue(l)?this.scene.showFieldOverlay(500).then(()=>this.scene.charSprite.showCharacter(o==null?void 0:o.getKey(),WM(S[0])).then(()=>D())):D()}}}endBattleSetup(A){const s=A.getEnemyField(),R=A.currentBattle.mysteryEncounter.encounterMode;if(R!==sE.TRAINER_BATTLE){const i=this.scene.findModifier(a=>a instanceof Aa);i&&s.map(a=>this.scene.pushPhase(new BT(this.scene,a.getBattlerIndex(),Math.min(i.getStackCount()*2,6))))}const I=A.getParty().filter(i=>i.isAllowedInBattle());if(I[0].isOnField()||A.pushPhase(new KE(A,0)),A.currentBattle.double?I.length>1&&(A.pushPhase(new aO(A,!0)),I[1].isOnField()||A.pushPhase(new KE(A,1))):(I.length>1&&I[1].isOnField()&&A.pushPhase(new LL(A,1)),A.pushPhase(new aO(A,!1))),R!==sE.TRAINER_BATTLE&&!this.disableSwitch){const i=A.currentBattle.double?2:1;I.length>i&&(A.pushPhase(new Ln(A,0,A.currentBattle.double)),A.currentBattle.double&&A.pushPhase(new Ln(A,1,A.currentBattle.double)))}this.end()}showEnemyTrainer(){const A=this.scene.currentBattle.trainer;A&&(A.alpha=0,A.x+=16,A.y-=16,A.setVisible(!0),this.scene.tweens.add({targets:A,x:"-=16",y:"+=16",alpha:1,ease:"Sine.easeInOut",duration:750,onComplete:T(()=>{A.untint(100,"Sine.easeOut"),A.playAnim()},"onComplete")}))}hideEnemyTrainer(){this.scene.tweens.add({targets:this.scene.currentBattle.trainer,x:"+=16",y:"-=16",alpha:0,ease:"Sine.easeInOut",duration:750})}};T(eK,"MysteryEncounterBattlePhase");let nc=eK;const tK=class tK extends kA{constructor(A,s=!1){super(A),this.addHealPhase=s}start(){super.start();const A=this.scene.currentBattle.mysteryEncounter;A.doContinueEncounter?A.doContinueEncounter(this.scene).then(()=>{this.end()}):this.scene.executeWithSeedOffset(()=>{A.onRewards?A.onRewards(this.scene).then(()=>{this.doEncounterRewardsAndContinue()}):this.doEncounterRewardsAndContinue()},this.scene.currentBattle.waveIndex*1e3)}doEncounterRewardsAndContinue(){const A=this.scene.currentBattle.mysteryEncounter;A.doEncounterExp&&A.doEncounterExp(this.scene),A.doEncounterRewards?A.doEncounterRewards(this.scene):this.addHealPhase&&(this.scene.tryRemovePhase(s=>s instanceof IO),this.scene.unshiftPhase(new IO(this.scene,0,void 0,{fillRemaining:!1,rerollMultiplier:-1}))),this.scene.pushPhase(new Ic(this.scene)),this.end()}};T(tK,"MysteryEncounterRewardsPhase");let pT=tK;const AK=class AK extends kA{constructor(A){var s,R;super(A),this.FIRST_DIALOGUE_PROMPT_DELAY=750,this.onPostOptionSelect=(R=(s=this.scene.currentBattle.mysteryEncounter)==null?void 0:s.selectedOption)==null?void 0:R.onPostOptionPhase}start(){var A;super.start(),this.onPostOptionSelect?this.scene.executeWithSeedOffset(async()=>await this.onPostOptionSelect(this.scene).then(s=>{(xe(s)||s)&&this.continueEncounter()}),((A=this.scene.currentBattle.mysteryEncounter)==null?void 0:A.getSeedOffset())*2e3):this.continueEncounter()}continueEncounter(){var R,I,i;const A=T(()=>{this.scene.pushPhase(new rL(this.scene)),this.end()},"endPhase"),s=(i=(I=(R=this.scene.currentBattle)==null?void 0:R.mysteryEncounter)==null?void 0:I.dialogue)==null?void 0:i.outro;if(s&&s.length>0){let a=0;const L=T(()=>{const S=a===s.length-1?A:L,o=s[a];let l=null;const D=UA(this.scene,o.text);o.speaker&&(l=UA(this.scene,o.speaker)),a++,this.scene.ui.setMode($.MESSAGE),l?this.scene.ui.showDialogue(D??"",l,null,S,0,a===1?this.FIRST_DIALOGUE_PROMPT_DELAY:0):this.scene.ui.showText(D??"",null,S,a===1?this.FIRST_DIALOGUE_PROMPT_DELAY:0,!0)},"showNextDialogue");L()}else A()}};T(AK,"PostMysteryEncounterPhase");let Ic=AK;const EK=class EK extends zE{constructor(A,s){super(A,s)}start(){super.start();const A=this.getPokemon();A.isActive(!0)&&A.lapseTags(rs.AFTER_MOVE),this.scene.arena.setIgnoreAbilities(!1),this.end()}};T(EK,"MoveEndPhase");let vi=EK;const sK=class sK extends zE{constructor(A,s,R,I){super(A,s),this.move=I,this.targetIndex=R}start(){super.start();const A=this.getUserPokemon(),s=this.getTargetPokemon(),R=this.move.getMove();if(!s||!R.isChargingMove())return console.warn("Invalid parameters for MoveChargePhase"),super.end();new no(R.chargeAnim,R.id,A).play(this.scene,!1,()=>{R.showChargeText(A,s),yx(st,A,s,R).then(()=>{A.addTag(Y.CHARGING,1,R.id,A.id),this.end()})})}end(){const A=this.getUserPokemon(),s=this.move.getMove();if(s.isChargingMove()){const R=new je(!1);yx(lD,A,null,s,R),R.value?(this.scene.tryRemovePhase(I=>I instanceof vi&&I.getPokemon()===A),this.scene.unshiftPhase(new JA(this.scene,A,[this.targetIndex],this.move,!1))):A.getMoveQueue().push({move:s.id,targets:[this.targetIndex]}),A.pushMoveHistory({move:this.move.moveId,targets:[this.targetIndex],result:DA.OTHER})}super.end()}getUserPokemon(){return(this.player?this.scene.getPlayerField():this.scene.getEnemyField())[this.fieldIndex]}getTargetPokemon(){return this.scene.getField(!0).find(A=>this.targetIndex===A.getBattlerIndex())}};T(sK,"MoveChargePhase");let ic=sK;const RK=class RK extends LE{constructor(A,s,R,I,i=!1,a=!1){super(A),this.failed=!1,this.cancelled=!1,this.pokemon=s,this.targets=R,this.move=I,this.followUp=i,this.ignorePp=a}get pokemon(){return this._pokemon}set pokemon(A){this._pokemon=A}get move(){return this._move}set move(A){this._move=A}get targets(){return this._targets}set targets(A){this._targets=A}canMove(A=!1){return this.pokemon.isActive(!0)&&this.move.isUsable(this.pokemon,this.ignorePp,A)&&!!this.targets.length}fail(){this.failed=!0}cancel(){this.cancelled=!0}start(){if(super.start(),t[this.move.moveId],!this.canMove(!0))return this.pokemon.isActive(!0)&&this.move.ppUsed>=this.move.getMovePp()&&(this.fail(),this.showMoveText(),this.showFailedText()),this.end();this.pokemon.turnData.acted=!0,this.followUp&&(this.pokemon.turnData.hitsLeft=-1,this.pokemon.turnData.hitCount=0),this.followUp||this.move.getMove().checkFlag(pt.IGNORE_ABILITIES,this.pokemon,null)&&this.scene.arena.setIgnoreAbilities(!0,this.pokemon.getBattlerIndex()),this.resolveRedirectTarget(),this.resolveCounterAttackTarget(),this.resolvePreMoveStatusEffects(),this.lapsePreMoveAndMoveTags(),this.failed||this.cancelled||this.resolveFinalPreMoveCancellationChecks(),this.cancelled||this.failed?this.handlePreMoveFailures():this.move.getMove().isChargingMove()&&!this.pokemon.getTag(Y.CHARGING)?this.chargeMove():this.useMove(),this.end()}resolveFinalPreMoveCancellationChecks(){const A=this.getActiveTargetPokemon(),s=this.pokemon.getMoveQueue();(A.length===0||s.length&&s[0].move===t.NONE)&&(this.showMoveText(),this.showFailedText(),this.cancel())}getActiveTargetPokemon(){return this.scene.getField(!0).filter(A=>this.targets.includes(A.getBattlerIndex()))}resolvePreMoveStatusEffects(){if(!this.followUp&&this.pokemon.status&&!this.pokemon.status.isPostTurn()){this.pokemon.status.incrementTurn();let A=!1,s=!1;switch(this.pokemon.status.effect){case J.PARALYSIS:A=(!this.pokemon.randSeedInt(4)||Ge.STATUS_ACTIVATION_OVERRIDE===!0)&&Ge.STATUS_ACTIVATION_OVERRIDE!==!1;break;case J.SLEEP:eA(ao,this.pokemon,null,this.move.getMove());const R=new $e(this.pokemon.status.sleepTurnsRemaining??0);Et(dU,this.pokemon,null,!1,this.pokemon.status.effect,R),this.pokemon.status.sleepTurnsRemaining=R.value,s=this.pokemon.status.sleepTurnsRemaining<=0,A=!s&&!this.pokemon.getTag(Y.BYPASS_SLEEP);break;case J.FREEZE:s=!!this.move.getMove().findAttr(I=>I instanceof yA&&I.selfTarget&&I.isOfEffect(J.FREEZE))||!this.pokemon.randSeedInt(5)&&Ge.STATUS_ACTIVATION_OVERRIDE!==!0||Ge.STATUS_ACTIVATION_OVERRIDE===!1,A=!s;break}A?(this.cancel(),this.scene.queueMessage($x(this.pokemon.status.effect,b(this.pokemon))),this.scene.unshiftPhase(new Ts(this.scene,this.pokemon.getBattlerIndex(),void 0,RA.POISON+(this.pokemon.status.effect-1)))):s&&(this.scene.queueMessage(XI(this.pokemon.status.effect,b(this.pokemon))),this.pokemon.resetStatus(),this.pokemon.updateInfo())}}lapsePreMoveAndMoveTags(){this.pokemon.lapseTags(rs.PRE_MOVE),!this.followUp&&this.canMove()&&!this.cancelled&&this.pokemon.lapseTags(rs.MOVE)}useMove(){var S,o,l;const A=this.getActiveTargetPokemon(),s=this.pokemon.getMoveQueue();if(this.scene.triggerPokemonFormChange(this.pokemon,CT),this.showMoveText(),s.length>0&&(this.ignorePp=((S=s.shift())==null?void 0:S.ignorePP)??!1),((o=this.pokemon.getTag(Y.CHARGING))==null?void 0:o.sourceMove)===this.move.moveId&&this.pokemon.lapseTag(Y.CHARGING),!this.ignorePp){const D=1+this.getPpIncreaseFromPressure(A);this.move.usePp(D),this.scene.eventTarget.dispatchEvent(new rT((l=this.pokemon)==null?void 0:l.id,this.move.getMove(),this.move.ppUsed))}He[this.move.moveId].hasAttr(QL)||(this.scene.currentBattle.lastMove=this.move.moveId);const R=this.move.getMove(),I=R.applyConditions(this.pokemon,A[0],R),i=this.scene.arena.isMoveWeatherCancelled(this.pokemon,R),a=this.scene.arena.isMoveTerrainCancelled(this.pokemon,this.targets,R);if(I&&!i&&!a)gO(_i,this.pokemon,null,this.move.getMove()),this.scene.unshiftPhase(new sR(this.scene,this.pokemon.getBattlerIndex(),this.targets,this.move));else{[t.ROAR,t.WHIRLWIND,t.TRICK_OR_TREAT,t.FORESTS_CURSE].includes(this.move.moveId)&&gO(_i,this.pokemon,null,this.move.getMove()),this.pokemon.pushMoveHistory({move:this.move.moveId,targets:this.targets,result:DA.FAIL,virtual:this.move.virtual});let D;const M=R.getFailedText(this.pokemon,A[0],R,new je(!1));M?D=M:a&&(D=oQ(this.pokemon,this.scene.arena.getTerrainType())),this.showFailedText(D),this.pokemon.lapseTags(rs.MOVE_EFFECT)}this.move.getMove().hasFlag(pt.DANCE_MOVE)&&!this.followUp&&this.scene.getField(!0).forEach(D=>{fX(DU,D,this.move,this.pokemon,this.targets)})}chargeMove(){const A=this.move.getMove(),s=this.getActiveTargetPokemon();if(A.applyConditions(this.pokemon,s[0],A))gO(_i,this.pokemon,null,this.move.getMove()),this.showMoveText(),this.scene.unshiftPhase(new ic(this.scene,this.pokemon.getBattlerIndex(),this.targets[0],this.move));else{this.pokemon.pushMoveHistory({move:this.move.moveId,targets:this.targets,result:DA.FAIL,virtual:this.move.virtual});let R;const I=A.getFailedText(this.pokemon,s[0],A,new je(!1));I&&(R=I),this.showMoveText(),this.showFailedText(R),this.pokemon.lapseTags(rs.MOVE_EFFECT)}}end(){!this.followUp&&this.canMove()&&this.scene.unshiftPhase(new vi(this.scene,this.pokemon.getBattlerIndex())),super.end()}getPpIncreaseFromPressure(A){return this.pokemon.getOpponents().filter(R=>A.includes(R)&&R.isActive(!0)&&R.hasAbilityWithAttr(BU)).length}resolveRedirectTarget(){if(this.targets.length===1){const A=this.targets[0],s=new $e(A);this.scene.getField(!0).filter(I=>I!==this.pokemon).forEach(I=>Et(_U,I,null,!1,this.move.moveId,s));let R=A!==s.value;this.pokemon.getOpponents().forEach(I=>{const i=I.getTag(VU);i&&(!i.powder||!this.pokemon.isOfType(n.GRASS)&&!this.pokemon.hasAbility(O.OVERCOAT))&&(s.value=I.getBattlerIndex(),R=!1)}),A!==s.value&&(this.move.getMove().getAttrs(ui).forEach(i=>{(!i.abilitiesOnly||R)&&(s.value=A)}),this.pokemon.hasAbilityWithAttr(yL)&&(s.value=A,this.scene.unshiftPhase(new mn(this.scene,this.pokemon.getBattlerIndex(),this.pokemon.getPassiveAbility().hasAttr(yL)))),this.targets[0]=s.value)}}resolveCounterAttackTarget(){var A;if(this.targets.length===1&&this.targets[0]===Ct.ATTACKER){if(this.pokemon.turnData.attacksReceived.length&&(this.targets[0]=this.pokemon.turnData.attacksReceived[0].sourceBattlerIndex,this.scene.currentBattle.double&&this.move.getMove().hasFlag(pt.REDIRECT_COUNTER)&&this.scene.getField()[this.targets[0]].hp===0)){const s=this.pokemon.isPlayer()?this.scene.getEnemyField():this.scene.getPlayerField();this.targets[0]=((A=s.find(R=>R.hp>0))==null?void 0:A.getBattlerIndex())??Ct.ATTACKER}this.targets[0]===Ct.ATTACKER&&(this.fail(),this.showMoveText(),this.showFailedText())}}handlePreMoveFailures(){var A;if(this.cancelled||this.failed){if(this.failed){const s=this.ignorePp?0:1;s&&this.move.usePp(),this.scene.eventTarget.dispatchEvent(new rT((A=this.pokemon)==null?void 0:A.id,this.move.getMove(),s))}this.pokemon.pushMoveHistory({move:t.NONE,result:DA.FAIL}),this.pokemon.lapseTags(rs.MOVE_EFFECT),this.pokemon.lapseTags(rs.AFTER_MOVE),this.pokemon.getMoveQueue().shift()}}showMoveText(){this.move.moveId!==t.NONE&&(this.pokemon.getTag(Y.RECHARGING)||this.pokemon.getTag(Y.INTERRUPTED)||(this.scene.queueMessage(U.t("battle:useMove",{pokemonNameWithAffix:b(this.pokemon),moveName:this.move.getName()}),500),eA(eL,this.pokemon,this.pokemon.getOpponents()[0],this.move.getMove())))}showFailedText(A){this.scene.queueMessage(A??U.t("battle:attackFailed"))}};T(RK,"MovePhase");let JA=RK;const OK=class OK extends kA{constructor(A,s,R,I){super(A),this.expValue=s,this.useWaveIndexMultiplier=R,this.pokemonParticipantIds=I}start(){super.start(),this.scene.applyPartyExp(this.expValue,!1,this.useWaveIndexMultiplier,this.pokemonParticipantIds),this.end()}};T(OK,"PartyExpPhase");let ac=OK;function zZ(E){const A=E.add.sprite(0,0,"encounter_exclaim");A.setName("exclamation"),E.field.add(A),E.field.moveTo(A,E.field.getAll().length-1),A.setVisible(!0),A.setPosition(110,68),E.tweens.add({targets:A,y:"-=25",ease:"Cubic.easeOut",duration:300,yoyo:!0,onComplete:T(()=>{E.time.delayedCall(800,()=>{E.field.remove(A,!0)})},"onComplete")}),E.playSound("battle_anims/GEN8- Exclaim",{volume:.7})}T(zZ,"doTrainerExclamation");async function mA(E,A){var l,D;const s=[],R=E.currentBattle;let I=(A==null?void 0:A.doubleBattle)??!1;const i=A==null?void 0:A.trainerType,a=A==null?void 0:A.trainerConfig;let L;if(!xe(i)||a){E.currentBattle.mysteryEncounter.encounterMode=sE.TRAINER_BATTLE,E.currentBattle.trainer&&(E.currentBattle.trainer.setVisible(!1),E.currentBattle.trainer.destroy()),L=a||BA[i];const M=L.doubleOnly||L.hasDouble&&!!A.doubleBattle;I=M;const c=xe(A.female)?!!le(2):A.female,G=new is(E,L.trainerType,M?bt.DOUBLE:c?bt.FEMALE:bt.DEFAULT,void 0,void 0,void 0,L);G.x+=300,G.setVisible(!1),E.field.add(G),E.currentBattle.trainer=G,s.push(G.loadAssets().then(()=>G.initSprite())),R.enemyLevels=E.currentBattle.trainer.getPartyLevels(E.currentBattle.waveIndex)}else{E.currentBattle.mysteryEncounter.encounterMode=sE.WILD_BATTLE;const M=A!=null&&A.pokemonConfigs&&A.pokemonConfigs.length>0?(l=A==null?void 0:A.pokemonConfigs)==null?void 0:l.length:I?2:1;R.enemyLevels=new Array(M).fill(null).map(()=>E.currentBattle.getLevelForWave())}E.getEnemyParty().forEach(M=>{E.field.remove(M,!0)}),R.enemyParty=[],R.double=I;const S=xe(A.levelAdditiveModifier)?0:A.levelAdditiveModifier,o=Math.max(Math.round(E.currentBattle.waveIndex/10*S),0);R.enemyLevels=R.enemyLevels.map(M=>M+o),R.enemyLevels.forEach((M,c)=>{let G,P,_=!1;if((!xe(i)||L)&&R.trainer)if(A!=null&&A.pokemonConfigs&&c<A.pokemonConfigs.length){const H=A.pokemonConfigs[c];M=H.level?H.level:M,P=H.dataSource,G=H.species,_=H.isBoss,R.enemyParty[c]=E.addEnemyPokemon(G,M,qe.TRAINER,_,P)}else R.enemyParty[c]=R.trainer.genPartyMember(c);else{if(A!=null&&A.pokemonConfigs&&c<A.pokemonConfigs.length){const H=A.pokemonConfigs[c];M=H.level?H.level:M,P=H.dataSource,G=H.species,_=H.isBoss,_&&(E.currentBattle.mysteryEncounter.encounterMode=sE.BOSS_BATTLE)}else G=E.randomSpecies(R.waveIndex,M,!0);R.enemyParty[c]=E.addEnemyPokemon(G,M,qe.NONE,_,P)}const g=E.getEnemyParty()[c];if(g.hp=g.getMaxHp(),g.status=null,g.passive=!1,c<(I?2:1)&&(g.setX(-66+g.getFieldPositionOffset()[0]),g.resetSummonData()),(xe(A.countAsSeen)||A.countAsSeen)&&E.gameData.setPokemonSeen(g,!0,!!(i||L)),A!=null&&A.pokemonConfigs&&c<A.pokemonConfigs.length){const H=A.pokemonConfigs[c];if(xe(H.nickname)||(g.nickname=btoa(unescape(encodeURIComponent(H.nickname)))),H.dataSource&&(g.id=le(4294967296)),xe(H.formIndex)||(g.formIndex=H.formIndex),xe(H.shiny)||(g.shiny=H.shiny),g.shiny&&!xe(H.variant)&&(g.variant=H.variant),xe(H.customPokemonData)||(g.customPokemonData=H.customPokemonData),H.isBoss){let p=xe(H.bossSegments)?E.getEncounterBossSegments(E.currentBattle.waveIndex,M,G,!0):H.bossSegments;xe(H.bossSegmentModifier)||(p+=H.bossSegmentModifier),g.setBoss(!0,p)}H.passive&&(g.passive=!0),H.nature&&(g.nature=H.nature),H.ivs&&(g.ivs=H.ivs);const F=H.status;if(F){const p=Array.isArray(F)?F[0]:F,v=Array.isArray(F)?F[1]:F===J.SLEEP?3:void 0;g.status=new fi(p,0,v)}if(g.summonData||(g.summonData=new gS),xe(H.abilityIndex)||(g.abilityIndex=H.abilityIndex),xe(H.gender)||(g.gender=H.gender,g.summonData.gender=H.gender),xe(H.aiType)||(g.aiType=H.aiType),H!=null&&H.moveSet&&H.moveSet.length>0){const p=H.moveSet.map(v=>new ke(v));g.moveset=p,g.summonData.moveset=p}H.tags&&H.tags.length>0&&H.tags.forEach(v=>g.addTag(v)),H.mysteryEncounterBattleEffects&&(g.mysteryEncounterBattleEffects=H.mysteryEncounterBattleEffects),g.primeSummonData(g.summonData),g.isShiny()&&!g.shinySparkle&&g.initShinySparkle(),g.initBattleInfo(),g.getBattleInfo().initInfo(g),g.generateName()}s.push(g.loadAssets()),`${g.name}`,`${g.species.speciesId}`,`${g.stats}`,`${g.getAbility().name}`,`${g.getPassiveAbility().name}`}),E.pushPhase(new nc(E,A.disableSwitch)),await Promise.all(s),R.enemyParty.forEach((M,c)=>{c<(I?2:1)&&(M.setVisible(!1),R.double&&M.setFieldPosition(c?eR.RIGHT:eR.LEFT),M.x+=300)});{QI(E.getEnemyField(),R.battleType===Nt.TRAINER?FE.TRAINER:FE.WILD);const M=(D=A==null?void 0:A.pokemonConfigs)==null?void 0:D.filter(c=>c==null?void 0:c.modifierConfigs).map(c=>c.modifierConfigs);E.generateEnemyModifiers(M)}}T(mA,"initBattleWithEnemyConfig");function Uo(E,A){return A=Array.isArray(A)?A:[A],Promise.all(A.map(s=>jL(E,s))).then(()=>zL(E,A))}T(Uo,"loadCustomMovesForEncounter");function xR(E,A,s=!0,R=!0){E.money=Math.min(Math.max(E.money+A,0),Number.MAX_SAFE_INTEGER),E.updateMoneyText(),E.animateMoneyChanged(!1),s&&E.playSound("se/buy"),R&&(A<0?E.queueMessage(U.t("mysteryEncounterMessages:paid_money",{amount:-A}),null,!0):E.queueMessage(U.t("mysteryEncounterMessages:receive_money",{amount:A}),null,!0))}T(xR,"updatePlayerMoney");function St(E,A,s){const R=Object.keys(x).find(i=>x[i]===A);if(!R)return null;let I=x[R]();return I=I.withIdFromFunc(x[R]).withTierFromPool(),I instanceof iE?I.generateType(E.getParty(),s):I}T(St,"generateModifierType");function VA(E,A,s){const R=St(E,A,s);return R&&new QE(R,0)}T(VA,"generateModifierTypeOption");function mE(E,A,s,R){return new Promise(I=>{const i=E.ui.getMode();E.ui.setMode($.PARTY,as.SELECT,-1,(a,L)=>{a<E.getParty().length?E.ui.setMode(i).then(()=>{const S=E.getParty()[a],o=A(S);if(!o){E.currentBattle.mysteryEncounter.setDialogueToken("selectedPokemon",S.getNameToRender()),I(!0);return}E.ui.setMode($.MESSAGE).then(()=>{var M,c,G;const l=T(()=>{const P=o.map(g=>{const H=g.handler;return g.handler=()=>(H(),E.currentBattle.mysteryEncounter.setDialogueToken("selectedPokemon",S.getNameToRender()),I(!0),!0),g}).concat({label:U.t("menu:cancel"),handler:T(()=>(E.ui.clearText(),E.ui.setMode(i),I(!1),!0),"handler"),onHover:T(()=>{Kt(E,U.t("mysteryEncounterMessages:cancel_option"),0,0,!1)},"onHover")}),_={options:P,maxOptions:7,yOffset:0,supportHover:!0};P[0].onHover&&P[0].onHover(),E.ui.setModeWithoutClear($.OPTION_SELECT,_,null,!0)},"displayOptions"),D=(G=(c=(M=E.currentBattle.mysteryEncounter)==null?void 0:M.selectedOption)==null?void 0:c.dialogue)==null?void 0:G.secondOptionPrompt;D?Kt(E,D).then(()=>l()):l()})}):E.ui.setMode(i).then(()=>{s&&s(),I(!1)})},R)})}T(mE,"selectPokemonForOption");function e9(E,A,s,R,I){return new Promise(i=>{const a=E.ui.getMode(),L=T(D=>{E.ui.setMode($.MESSAGE).then(()=>{s?Kt(E,s).then(()=>{o[0].onHover&&o[0].onHover(),E.ui.setMode($.OPTION_SELECT,D)}):(o[0].onHover&&o[0].onHover(),E.ui.setMode($.OPTION_SELECT,D))})},"displayOptions"),S=T(D=>{E.ui.setMode($.PARTY,as.SELECT,-1,(M,c)=>{M<E.getParty().length?E.ui.setMode(a).then(()=>{i({selectedPokemonIndex:M,selectedOptionIndex:D})}):L(l)},R)},"selectPokemonAfterOption"),o=A.map((D,M)=>{const c=D.handler;return D.handler=()=>(c(),S(M),!0),D}).concat({label:U.t("menu:cancel"),handler:T(()=>(E.ui.clearText(),E.ui.setMode(a),i(null),!0),"handler"),onHover:T(()=>{I&&I(),Kt(E,U.t("mysteryEncounterMessages:cancel_option"),0,0,!1)},"onHover")}),l={options:o,maxOptions:7,yOffset:0,supportHover:!0};L(l)})}T(e9,"selectOptionThenPokemon");function ot(E,A,s,R){E.currentBattle.mysteryEncounter.doEncounterRewards=I=>(R&&R(),A?I.unshiftPhase(new IO(I,0,void 0,A)):I.tryRemovePhase(i=>i instanceof IO),s&&s.forEach(i=>{new PI(i).addEggToGameData(I)}),!0)}T(ot,"setEncounterRewards");function ER(E,A,s,R=!0){const I=Array.isArray(A)?A:[A];E.currentBattle.mysteryEncounter.doEncounterExp=i=>(i.unshiftPhase(new ac(i,s,R,new Set(I))),!0)}T(ER,"setEncounterExp");function yT(E,A){E.pushPhase(new EC(E,A))}T(yT,"initSubsequentOptionSelect");function Lt(E,A=!1,s=sE.NO_BATTLE){E.currentBattle.mysteryEncounter.encounterMode=s,E.clearPhaseQueue(),E.clearPhaseQueueSplice(),W6(E,A)}T(Lt,"leaveEncounterWithoutBattle");function W6(E,A=!1,s=!1){if(E.getParty().filter(i=>i.isAllowedInBattle()).length===0){E.clearPhaseQueue(),E.unshiftPhase(new iO(E));return}const I=E.currentBattle.mysteryEncounter;I.continuousEncounter||s||(I.encounterMode===sE.NO_BATTLE?(E.pushPhase(new pT(E,A)),E.pushPhase(new NL(E))):E.getEnemyParty().find(i=>I.encounterMode!==sE.TRAINER_BATTLE?i.isOnField():!(i!=null&&i.isFainted(!0)))||(E.pushPhase(new yi(E)),I.encounterMode===sE.TRAINER_BATTLE&&E.pushPhase(new Ql(E)),(E.gameMode.isEndless||!E.gameMode.isWaveFinal(E.currentBattle.waveIndex))&&(E.pushPhase(new pT(E,A)),I.doContinueEncounter||E.pushPhase(new NL(E)))))}T(W6,"handleMysteryEncounterVictory");function t9(E,A=!1,s=!1){if(E.getParty().filter(i=>i.isAllowedInBattle()).length===0){E.clearPhaseQueue(),E.unshiftPhase(new iO(E));return}const I=E.currentBattle.mysteryEncounter;I.continuousEncounter||s||(I.encounterMode!==sE.NO_BATTLE&&E.pushPhase(new yi(E,!1)),E.pushPhase(new pT(E,A)),I.doContinueEncounter||E.pushPhase(new NL(E)))}T(t9,"handleMysteryEncounterBattleFailed");function gA(E,A=!0,s=!0,R=750){return new Promise(I=>{const i=E.currentBattle.mysteryEncounter.introVisuals,a=E.getEnemyField();a&&(E.currentBattle.enemyParty=[]),i?(A||(i.setVisible(!0),i.x=244,i.y=60,i.alpha=0),E.tweens.add({targets:[i,a],x:`${A?"+":"-"}=16`,y:`${A?"-":"+"}=16`,alpha:A?0:1,ease:"Sine.easeInOut",duration:R,onComplete:T(()=>{A&&s&&(E.field.remove(i,!0),a.forEach(L=>{E.field.remove(L,!0)}),E.currentBattle.mysteryEncounter.introVisuals=void 0),I(!0)},"onComplete")})):I(!0)})}T(gA,"transitionMysteryEncounterIntroVisuals");function A9(E){const A=E.currentBattle.mysteryEncounter;E.currentBattle.isBattleMysteryEncounter()&&A&&A.encounterMode!==sE.NO_BATTLE&&!A.startOfBattleEffectsComplete&&(A.startOfBattleEffects.forEach(R=>{let I;R.sourcePokemon?I=R.sourcePokemon:xe(R.sourceBattlerIndex)||R.sourceBattlerIndex===Ct.ATTACKER||R.sourceBattlerIndex===Ct.ENEMY?I=E.getEnemyField()[0]:R.sourceBattlerIndex===Ct.ENEMY_2?I=E.getEnemyField()[1]:R.sourceBattlerIndex===Ct.PLAYER?I=E.getPlayerField()[0]:R.sourceBattlerIndex===Ct.PLAYER_2&&(I=E.getPlayerField()[1]),E.pushPhase(new JA(E,I,R.targets,R.move,R.followUp,R.ignorePp))}),E.pushPhase(new Oc(E)),A.startOfBattleEffectsComplete=!0)}T(A9,"handleMysteryEncounterBattleStartEffects");function E9(E){const A=E.currentBattle.mysteryEncounter;return E.currentBattle.isBattleMysteryEncounter()&&A&&A.onTurnStart?A.onTurnStart(E):!1}T(E9,"handleMysteryEncounterTurnStartEffects");const nK=class nK extends LE{constructor(A,s){super(A),this.loaded=!!s}start(){var i,a,L,S;super.start(),this.scene.updateGameInfo(),this.scene.initSession(),this.scene.eventTarget.dispatchEvent(new l0),this.scene.gameMode.isClassic&&this.scene.currentBattle.waveIndex>200&&this.scene.unshiftPhase(new iO(this.scene));const A=[],s=this.scene.currentBattle;s.isBattleMysteryEncounter()&&!s.mysteryEncounter&&this.scene.executeWithSeedOffset(()=>{const o=s.mysteryEncounterType;s.mysteryEncounter=this.scene.getMysteryEncounter(o)},s.waveIndex*16);const R=s.mysteryEncounter;R&&(this.scene.executeWithSeedOffset(()=>{R.onInit&&R.onInit(this.scene),R.populateDialogueTokensFromRequirements(this.scene)},s.waveIndex),R.encounterAnimations&&R.encounterAnimations.length>0&&A.push(QX(this.scene,R.encounterAnimations).then(()=>qX(this.scene,!0))),R.initIntroVisuals(this.scene),this.scene.field.add(R.introVisuals));let I=0;if((i=s.enemyLevels)==null||i.every((o,l)=>{var M,c;if(s.isBattleMysteryEncounter())return!1;if(!this.loaded)if(s.battleType===Nt.TRAINER)s.enemyParty[l]=(M=s.trainer)==null?void 0:M.genPartyMember(l);else{let G=this.scene.randomSpecies(s.waveIndex,o,!0);this.scene.findModifier(P=>P instanceof cS)&&!this.scene.gameMode.isBoss(s.waveIndex)&&this.scene.arena.biomeType!==r.END&&le(10)===0&&(G=V7(o)),s.enemyParty[l]=this.scene.addEnemyPokemon(G,o,qe.NONE,!!this.scene.getEncounterBossSegments(s.waveIndex,o,G)),this.scene.currentBattle.battleSpec===eE.FINAL_BOSS&&(s.enemyParty[l].ivs=new Array(6).fill(31)),this.scene.getParty().slice(0,s.double?2:1).reverse().forEach(P=>{Et(gU,P,null,!1,s.enemyParty[l])})}const D=this.scene.getEnemyParty()[l];if(l<(s.double?2:1)&&(D.setX(-66+D.getFieldPositionOffset()[0]),D.resetSummonData()),this.loaded||this.scene.gameData.setPokemonSeen(D,!0,s.battleType===Nt.TRAINER||((c=s==null?void 0:s.mysteryEncounter)==null?void 0:c.encounterMode)===sE.TRAINER_BATTLE),D.species.speciesId===e.ETERNATUS){if(this.scene.gameMode.isClassic&&(s.battleSpec===eE.FINAL_BOSS||this.scene.gameMode.isWaveFinal(s.waveIndex)))s.battleSpec!==eE.FINAL_BOSS&&(D.formIndex=1,D.updateScale()),D.setBoss();else if(!(s.waveIndex%1e3)){D.formIndex=1,D.updateScale();const G=this.scene.findModifier(P=>P instanceof ea&&P.pokemonId===D.id,!1);this.scene.removeModifier(G),G==null||G.setTransferrableFalse(),this.scene.addEnemyModifier(G)}}return I+=D.getSpeciesForm().baseTotal,A.push(D.loadAssets()),`${b(D)}`,`${D.species.speciesId}`,`${D.stats}`,`${D.getAbility().name}`,`${D.getPassiveAbility().name}`,!0}),this.scene.getParty().filter(o=>o.isShiny()).length===6&&this.scene.validateAchv(At.SHINY_PARTY),s.battleType===Nt.TRAINER)A.push((a=s.trainer)==null?void 0:a.loadAssets().then(()=>{var o;return(o=s.trainer)==null?void 0:o.initSprite()}));else if(s.isBattleMysteryEncounter())(L=s.mysteryEncounter)!=null&&L.introVisuals&&A.push(s.mysteryEncounter.introVisuals.loadAssets().then(()=>s.mysteryEncounter.introVisuals.initSprite())),(S=s.mysteryEncounter)!=null&&S.loadAssets&&s.mysteryEncounter.loadAssets.length>0&&A.push(...s.mysteryEncounter.loadAssets),A.push(new Promise(o=>{this.scene.loadSe("GEN8- Exclaim","battle_anims","GEN8- Exclaim.wav"),this.scene.loadImage("encounter_exclaim","mystery-encounters"),this.scene.load.once(Phaser.Loader.Events.COMPLETE,()=>o()),this.scene.load.isLoading()||this.scene.load.start()}));else if(!(Ge.OPP_HEALTH_SEGMENTS_OVERRIDE>1)&&s.enemyParty.filter(l=>l.isBoss()).length>1)for(const l of s.enemyParty)l.isBoss()&&!l.isPopulatedFromDataSource&&(l.setBoss(!0,Math.ceil(l.bossSegments*(l.getSpeciesForm().baseTotal/I))),l.initBattleInfo());Promise.all(A).then(()=>{s.enemyParty.every((o,l)=>{var D;if(s.isBattleMysteryEncounter())return!1;if(l<(s.double?2:1)){if(s.battleType===Nt.WILD){this.scene.field.add(o),s.seenEnemyPartyMemberIds.add(o.id);const M=this.scene.getPlayerPokemon();M!=null&&M.visible&&this.scene.field.moveBelow(o,M),o.tint(0,.5)}else s.battleType===Nt.TRAINER&&(o.setVisible(!1),(D=this.scene.currentBattle.trainer)==null||D.tint(0,.5));s.double&&o.setFieldPosition(l?eR.RIGHT:eR.LEFT)}return!0}),!this.loaded&&s.battleType!==Nt.MYSTERY_ENCOUNTER&&(QI(this.scene.getEnemyField(),s.battleType===Nt.TRAINER?FE.TRAINER:FE.WILD),this.scene.generateEnemyModifiers()),this.scene.ui.setMode($.MESSAGE).then(()=>{this.loaded?(this.doEncounter(),this.scene.resetSeed()):(this.trySetWeatherIfNewBiome(),this.scene.gameData.saveAll(this.scene,!0,s.waveIndex%10===1||(this.scene.lastSavePlayTime??0)>=300).then(o=>{if(this.scene.disableMenu=!1,!o)return this.scene.reset(!0);this.doEncounter(),this.scene.resetSeed()}))})})}doEncounter(){var i,a;this.scene.playBgm(void 0,!0),this.scene.updateModifiers(!1),this.scene.setFieldScale(1);const{battleType:A,waveIndex:s}=this.scene.currentBattle;this.scene.isMysteryEncounterValidForWave(A,s)&&!this.scene.currentBattle.isBattleMysteryEncounter()&&(this.scene.mysteryEncounterSaveData.encounterSpawnChance+=wZ);for(const L of this.scene.getParty())L&&L.resetBattleData();const R=this.scene.getEnemyField();this.scene.tweens.add({targets:[this.scene.arenaEnemy,this.scene.currentBattle.trainer,R,this.scene.arenaPlayer,this.scene.trainer].flat(),x:T((L,S,o,l)=>l<2+R.length?o+300:o-300,"x"),duration:2e3,onComplete:T(()=>{this.tryOverrideForBattleSpec()||this.doEncounterCommon()},"onComplete")});const I=(a=(i=this.scene.currentBattle)==null?void 0:i.mysteryEncounter)==null?void 0:a.introVisuals;if(I){const L=I.enterFromRight;L&&(I.x+=500),this.scene.tweens.add({targets:I,x:L?"-=200":"+=300",duration:2e3})}}getEncounterMessage(){var s,R;const A=this.scene.getEnemyField();return this.scene.currentBattle.battleSpec===eE.FINAL_BOSS?U.t("battle:bossAppeared",{bossName:b(A[0])}):this.scene.currentBattle.battleType===Nt.TRAINER?this.scene.currentBattle.double?U.t("battle:trainerAppearedDouble",{trainerName:(s=this.scene.currentBattle.trainer)==null?void 0:s.getName(qe.NONE,!0)}):U.t("battle:trainerAppeared",{trainerName:(R=this.scene.currentBattle.trainer)==null?void 0:R.getName(qe.NONE,!0)}):A.length===1?U.t("battle:singleWildAppeared",{pokemonName:A[0].getNameToRender()}):U.t("battle:multiWildAppeared",{pokemonName1:A[0].getNameToRender(),pokemonName2:A[1].getNameToRender()})}doEncounterCommon(A=!0){var R,I;const s=this.scene.getEnemyField();if(this.scene.currentBattle.battleType===Nt.WILD)s.forEach(i=>{i.untint(100,"Sine.easeOut"),i.cry(),i.showInfo(),i.isShiny()&&this.scene.validateAchv(At.SEE_SHINY)}),this.scene.updateFieldScale(),A?this.scene.ui.showText(this.getEncounterMessage(),null,()=>this.end(),1500):this.end();else if(this.scene.currentBattle.battleType===Nt.TRAINER){const i=this.scene.currentBattle.trainer;i==null||i.untint(100,"Sine.easeOut"),i==null||i.playAnim();const a=T(()=>{this.scene.currentBattle.started=!0,this.scene.playBgm(void 0),this.scene.pbTray.showPbTray(this.scene.getParty()),this.scene.pbTrayEnemy.showPbTray(this.scene.getEnemyParty());const S=T(()=>{this.hideEnemyTrainer();const o=this.scene.getEnemyParty().filter(l=>!l.isFainted()).length;this.scene.unshiftPhase(new KE(this.scene,0,!1)),this.scene.currentBattle.double&&o>1&&this.scene.unshiftPhase(new KE(this.scene,1,!1)),this.end()},"doTrainerSummon");A?this.scene.ui.showText(this.getEncounterMessage(),null,S,1500,!0):S()},"doSummon"),L=(R=this.scene.currentBattle.trainer)==null?void 0:R.getEncounterMessages();if(!(L!=null&&L.length))a();else{let S;this.scene.executeWithSeedOffset(()=>S=RE(L),this.scene.currentBattle.waveIndex),S=S;const o=T(()=>{this.scene.ui.showDialogue(S,i==null?void 0:i.getName(qe.NONE,!0),null,()=>{this.scene.charSprite.hide().then(()=>this.scene.hideFieldOverlay(250).then(()=>a()))})},"showDialogueAndSummon");(I=this.scene.currentBattle.trainer)!=null&&I.config.hasCharSprite&&!this.scene.ui.shouldSkipDialogue(S)?this.scene.showFieldOverlay(500).then(()=>this.scene.charSprite.showCharacter(i==null?void 0:i.getKey(),WM(L[0])).then(()=>o())):o()}}else if(this.scene.currentBattle.isBattleMysteryEncounter()&&this.scene.currentBattle.mysteryEncounter){const i=this.scene.currentBattle.mysteryEncounter,a=i.introVisuals;a==null||a.playAnim(),i.onVisualsStart&&i.onVisualsStart(this.scene);const L=T(()=>{const o=T(()=>{this.scene.ui.clearText(),this.scene.ui.getMessageHandler().hideNameText(),this.scene.unshiftPhase(new EC(this.scene)),this.end()},"doShowEncounterOptions");if(A){const l=i.dialogue.intro;if(!l)o();else{let M=0;const c=T(()=>{const G=M===l.length-1?o:c,P=l[M],_=UA(this.scene,P==null?void 0:P.speaker),g=UA(this.scene,P.text);M++,_?this.scene.ui.showDialogue(g,_,null,G,0,M===1?750:0):this.scene.ui.showText(g,null,G,M===1?750:0,!0)},"showNextDialogue");l.length>0&&c()}}else o()},"doEncounter"),S=U.t("battle:mysteryEncounterAppeared");S?(zZ(this.scene),this.scene.ui.showDialogue(S,"???",null,()=>{this.scene.charSprite.hide().then(()=>this.scene.hideFieldOverlay(250).then(()=>L()))})):L()}}end(){const A=this.scene.getEnemyField();if(A.forEach((s,R)=>{s.isShiny()&&this.scene.unshiftPhase(new fT(this.scene,Ct.ENEMY+R))}),![Nt.TRAINER,Nt.MYSTERY_ENCOUNTER].includes(this.scene.currentBattle.battleType)){A.map(R=>this.scene.pushConditionalPhase(new Wi(this.scene,R.getBattlerIndex()),()=>{var a;if(!((a=this.scene.getParty())!=null&&a.length))return!1;const I=this.scene.getParty().filter(L=>L.isOnField()).length,i=Math.min(this.scene.getParty().filter(L=>!L.isFainted()).length,2);return this.scene.currentBattle.double?I===i:I===1}));const s=this.scene.findModifier(R=>R instanceof Aa);s&&A.map(R=>this.scene.pushPhase(new BT(this.scene,R.getBattlerIndex(),Math.min(s.getStackCount()*2,6))))}if(!this.loaded){const s=this.scene.getParty().filter(R=>R.isAllowedInBattle());if(s[0].isOnField()||this.scene.pushPhase(new KE(this.scene,0)),this.scene.currentBattle.double?s.length>1&&(this.scene.pushPhase(new aO(this.scene,!0)),s[1].isOnField()||this.scene.pushPhase(new KE(this.scene,1))):(s.length>1&&s[1].isOnField()&&this.scene.pushPhase(new LL(this.scene,1)),this.scene.pushPhase(new aO(this.scene,!1))),this.scene.currentBattle.battleType!==Nt.TRAINER&&(this.scene.currentBattle.waveIndex>1||!this.scene.gameMode.isDaily)){const R=this.scene.currentBattle.double?2:1;s.length>R&&(this.scene.pushPhase(new Ln(this.scene,0,this.scene.currentBattle.double)),this.scene.currentBattle.double&&this.scene.pushPhase(new Ln(this.scene,1,this.scene.currentBattle.double)))}}fI(this.scene,yR.Access_Menu).then(()=>super.end())}tryOverrideForBattleSpec(){switch(this.scene.currentBattle.battleSpec){case eE.FINAL_BOSS:const A=this.scene.getEnemyPokemon();return this.scene.ui.showText(this.getEncounterMessage(),null,()=>{const s="battleSpecDialogue:encounter";if(this.scene.ui.shouldSkipDialogue(s))this.doEncounterCommon(!1);else{const R=5643853+this.scene.gameData.gameStats.classicSessionsPlayed,I=!U.exists(s,{fallbackLng:[]})||U.resolvedLanguage==="en"?U.t("battleSpecDialogue:key",{count:R,ordinal:!0}):"",i=R.toLocaleString()+I,a=this.scene.gameData.gender??ct.UNSET,L=ct[a].toLowerCase(),S=U.t(s,{context:L,cycleCount:i});this.scene.gameData.getSeenDialogues()[s]||this.scene.gameData.saveSeenDialogue(s),this.scene.ui.showDialogue(S,A==null?void 0:A.species.name,null,()=>{this.doEncounterCommon(!1)})}},1500,!0),!0}return!1}trySetWeatherIfNewBiome(){this.loaded||this.scene.arena.trySetWeather(Lb(this.scene.arena),!1)}};T(nK,"EncounterPhase");let UL=nK;const pv={en:{starterInfoTextSize:"56px",instructionTextSize:"38px"},de:{starterInfoTextSize:"48px",instructionTextSize:"35px",starterInfoXPos:33},es:{starterInfoTextSize:"56px",instructionTextSize:"35px"},fr:{starterInfoTextSize:"54px",instructionTextSize:"38px"},it:{starterInfoTextSize:"56px",instructionTextSize:"38px"},pt_BR:{starterInfoTextSize:"47px",instructionTextSize:"38px",starterInfoXPos:33},zh:{starterInfoTextSize:"47px",instructionTextSize:"38px",starterInfoYOffset:1,starterInfoXPos:24},pt:{starterInfoTextSize:"48px",instructionTextSize:"42px",starterInfoXPos:33},ko:{starterInfoTextSize:"52px",instructionTextSize:"38px"},ja:{starterInfoTextSize:"51px",instructionTextSize:"38px"},"ca-ES":{starterInfoTextSize:"56px",instructionTextSize:"38px"}},yv=2,Nu=17,Fo=109,qI=285,Lc=18,Tu=34,wT=132;function rc(E,A=0){const I=E%9*18,i=13+(Math.floor(E/9)-A)*17;return{x:I,y:i}}T(rc,"calcStarterPosition");function f1(E){const A=wT/7,s=Lc+A/2;return Math.round(s+A*E)}T(f1,"calcStarterIconY");function wv(E,A=6){let s=wT,R=0;for(let I=0;I<A;I++){const i=Math.abs(E-(f1(I)-13));i<s&&(R=I,s=i)}return R}T(wv,"findClosestStarterIndex");function Vv(E,A){const s=f1(E)-13;let R=wT,I=0;for(let i=0;i<A;i++){const a=Math.abs(s-rc(i*9).y);a<R&&(I=i,R=a)}return I}T(Vv,"findClosestStarterRow");const IK=class IK extends vs{constructor(A){super(A,$.STARTER_SELECT),this.starterContainers=[],this.filteredStarterContainers=[],this.validStarterContainers=[],this.starterIconsCursorXOffset=-3,this.starterIconsCursorYOffset=1,this.dexAttrCursor=0n,this.abilityCursor=-1,this.natureCursor=-1,this.filterBarCursor=0,this.allSpecies=[],this.speciesLoaded=new Map,this.starterSpecies=[],this.pokerusSpecies=[],this.starterAttr=[],this.starterAbilityIndexes=[],this.starterNatures=[],this.starterMovesets=[],this.value=0,this.instructionRowX=0,this.instructionRowY=0,this.instructionRowTextOffset=9,this.filterInstructionRowX=0,this.filterInstructionRowY=0,this.blockInput=!1,this.updateStarters=()=>{this.scrollCursor=0,this.filteredStarterContainers=[],this.validStarterContainers=[],this.pokerusCursorObjs.forEach(R=>R.setVisible(!1)),this.starterCursorObjs.forEach(R=>R.setVisible(!1)),this.filterBar.updateFilterLabels(),this.scene.gameMode.modeId===tA.CHALLENGE?this.starterContainers.forEach(R=>{var a;const I=R.species;let i=!1;if(((a=I.forms)==null?void 0:a.length)>0)for(let L=0;L<I.forms.length;L++){const S=BigInt(Math.pow(2,L))*Fe.DEFAULT_FORM,o=new je(!0);Is(this.scene.gameMode,JE.STARTER_CHOICE,R.species,o,this.scene.gameData.getSpeciesDexAttrProps(I,S),!0),i=i||o.value}else{const L=new je(!0);Is(this.scene.gameMode,JE.STARTER_CHOICE,R.species,L,this.scene.gameData.getSpeciesDexAttrProps(I,this.scene.gameData.getSpeciesDefaultDexAttr(R.species,!1,!0)),!0),i=L.value}i?this.validStarterContainers.push(R):R.setVisible(!1)}):this.validStarterContainers=this.starterContainers;for(let R=0;R<this.validStarterContainers.length;R++){const I=this.validStarterContainers[R],i=I.icon,a=this.getCurrentDexProps(I.species.speciesId),L=this.scene.gameData.getSpeciesDexAttrProps(I.species,a);i.setTexture(I.species.getIconAtlasKey(L.formIndex,L.shiny,L.variant),I.species.getIconId(L.female,L.formIndex,L.shiny,L.variant)),I.checkIconId(L.female,L.formIndex,L.shiny,L.variant)}this.validStarterContainers.forEach(R=>{var fe,Ye;R.setVisible(!1),R.cost=this.scene.gameData.getSpeciesStarterValue(R.species.speciesId);const I=((fe=this.scene.gameData.dexData[R.species.speciesId])==null?void 0:fe.caughtAttr)||BigInt(0),i=this.scene.gameData.starterData[R.species.speciesId],a=oE.hasOwnProperty(R.species.speciesId),L=this.filterBar.getVals(bE.GEN).includes(R.species.generation),S=this.filterBar.getVals(bE.TYPES).some(Re=>R.species.isOfType(Re-1)),o=!!(I&Fe.NON_SHINY),l=!!(I&Fe.SHINY),D=l&&!!(I&Fe.DEFAULT_VARIANT),M=l&&!!(I&Fe.VARIANT_2),c=l&&!!(I&Fe.VARIANT_3),G=!o&&!D&&!M&&!c,P=this.filterBar.getVals(bE.CAUGHT).some(Re=>{if(Re==="SHINY3")return c;if(Re==="SHINY2")return M&&!c;if(Re==="SHINY")return D&&!M&&!c;if(Re==="NORMAL")return o&&!D&&!M&&!c;if(Re==="UNCAUGHT")return G}),_=i.passiveAttr>0,g=this.isPassiveAvailable(R.species.speciesId)&&!_,H=this.filterBar.getVals(bE.UNLOCKS).some(Re=>{if(Re.val==="PASSIVE"&&Re.state===mt.ON)return _;if(Re.val==="PASSIVE"&&Re.state===mt.EXCLUDE)return a&&!_;if(Re.val==="PASSIVE"&&Re.state===mt.UNLOCKABLE)return g;if(Re.val==="PASSIVE"&&Re.state===mt.OFF)return!0}),F=i.valueReduction>0,p=this.isValueReductionAvailable(R.species.speciesId),v=this.filterBar.getVals(bE.UNLOCKS).some(Re=>{if(Re.val==="COST_REDUCTION"&&Re.state===mt.ON)return F;if(Re.val==="COST_REDUCTION"&&Re.state===mt.EXCLUDE)return a&&!F;if(Re.val==="COST_REDUCTION"&&Re.state===mt.UNLOCKABLE)return p;if(Re.val==="COST_REDUCTION"&&Re.state===mt.OFF)return!0}),k=((Ye=this.starterPreferences[R.species.speciesId])==null?void 0:Ye.favorite)??!1,j=this.filterBar.getVals(bE.MISC).some(Re=>{if(Re.val==="FAVORITE"&&Re.state===mt.ON)return k;if(Re.val==="FAVORITE"&&Re.state===mt.EXCLUDE)return!k;if(Re.val==="FAVORITE"&&Re.state===mt.OFF)return!0}),q=i.classicWinCount>0,ie=i.classicWinCount===0,z=i.classicWinCount===void 0,Oe=this.filterBar.getVals(bE.MISC).some(Re=>{if(Re.val==="WIN"&&Re.state===mt.ON)return q;if(Re.val==="WIN"&&Re.state===mt.EXCLUDE)return ie||z;if(Re.val==="WIN"&&Re.state===mt.OFF)return!0}),ae=R.species.abilityHidden!==R.species.ability1&&R.species.abilityHidden!==O.NONE,Le=i.abilityAttr&ns.ABILITY_HIDDEN,Ne=this.filterBar.getVals(bE.MISC).some(Re=>{if(Re.val==="HIDDEN_ABILITY"&&Re.state===mt.ON)return Le;if(Re.val==="HIDDEN_ABILITY"&&Re.state===mt.EXCLUDE)return ae&&!Le;if(Re.val==="HIDDEN_ABILITY"&&Re.state===mt.OFF)return!0}),De=this.isSameSpeciesEggAvailable(R.species.speciesId),Be=this.filterBar.getVals(bE.MISC).some(Re=>{if(Re.val==="EGG"&&Re.state===mt.ON)return De;if(Re.val==="EGG"&&Re.state===mt.EXCLUDE)return a&&!De;if(Re.val==="EGG"&&Re.state===mt.OFF)return!0}),de=this.filterBar.getVals(bE.MISC).some(Re=>{if(Re.val==="POKERUS"&&Re.state===mt.ON)return this.pokerusSpecies.includes(R.species);if(Re.val==="POKERUS"&&Re.state===mt.EXCLUDE)return!this.pokerusSpecies.includes(R.species);if(Re.val==="POKERUS"&&Re.state===mt.OFF)return!0});L&&S&&P&&H&&v&&j&&Oe&&Ne&&Be&&de&&this.filteredStarterContainers.push(R)}),this.starterSelectScrollBar.setTotalRows(Math.max(Math.ceil(this.filteredStarterContainers.length/9),1)),this.starterSelectScrollBar.setScrollCursor(0);const s=this.filterBar.getVals(bE.SORT)[0];this.filteredStarterContainers.sort((R,I)=>{switch(s.val){default:break;case oO.NUMBER:return(R.species.speciesId-I.species.speciesId)*-s.dir;case oO.COST:return(R.cost-I.cost)*-s.dir;case oO.CANDY:const i=this.scene.gameData.starterData[R.species.speciesId].candyCount,a=this.scene.gameData.starterData[I.species.speciesId].candyCount;return(i-a)*-s.dir;case oO.IV:const L=this.scene.gameData.dexData[R.species.speciesId].ivs.reduce((o,l)=>o+l,0)/this.scene.gameData.dexData[R.species.speciesId].ivs.length,S=this.scene.gameData.dexData[I.species.speciesId].ivs.reduce((o,l)=>o+l,0)/this.scene.gameData.dexData[I.species.speciesId].ivs.length;return(L-S)*-s.dir;case oO.NAME:return R.species.name.localeCompare(I.species.name)*-s.dir}return 0}),this.updateScroll()},this.updateScroll=()=>{const I=this.scrollCursor*9,i=Math.min(this.filteredStarterContainers.length-1,I+9*9-1);this.starterSelectScrollBar.setScrollCursor(this.scrollCursor);let a=0;this.filteredStarterContainers.forEach((L,S)=>{var l;const o=rc(S,this.scrollCursor);if(L.setPosition(o.x,o.y),S<I||S>i){L.setVisible(!1),this.pokerusSpecies.includes(L.species)&&(this.pokerusCursorObjs[a].setPosition(o.x-1,o.y+1),this.pokerusCursorObjs[a].setVisible(!1),a++),this.starterSpecies.includes(L.species)&&(this.starterCursorObjs[this.starterSpecies.indexOf(L.species)].setPosition(o.x-1,o.y+1),this.starterCursorObjs[this.starterSpecies.indexOf(L.species)].setVisible(!1));return}else{L.setVisible(!0),this.pokerusSpecies.includes(L.species)&&(this.pokerusCursorObjs[a].setPosition(o.x-1,o.y+1),this.pokerusCursorObjs[a].setVisible(!0),a++),this.starterSpecies.includes(L.species)&&(this.starterCursorObjs[this.starterSpecies.indexOf(L.species)].setPosition(o.x-1,o.y+1),this.starterCursorObjs[this.starterSpecies.indexOf(L.species)].setVisible(!0));const D=L.species.speciesId;this.updateStarterValueLabel(L),L.label.setVisible(!0);const M=D&&this.scene.gameData.dexData[D].caughtAttr&Fe.SHINY?[Fe.DEFAULT_VARIANT,Fe.VARIANT_2,Fe.VARIANT_3].filter(c=>!!(this.scene.gameData.dexData[D].caughtAttr&c)):[];for(let c=0;c<3;c++){const G=M.length>c;L.shinyIcons[c].setVisible(G),G&&L.shinyIcons[c].setTint(GE(M[c]===Fe.DEFAULT_VARIANT?0:M[c]===Fe.VARIANT_2?1:2))}L.starterPassiveBgs.setVisible(!!this.scene.gameData.starterData[D].passiveAttr),L.hiddenAbilityIcon.setVisible(!!this.scene.gameData.dexData[D].caughtAttr&&!!(this.scene.gameData.starterData[D].abilityAttr&4)),L.classicWinIcon.setVisible(this.scene.gameData.starterData[D].classicWinCount>0),L.favoriteIcon.setVisible(((l=this.starterPreferences[D])==null?void 0:l.favorite)??!1),this.scene.candyUpgradeDisplay===0?(js[D]||(js[D]=["ffffff","ffffff"]),L.candyUpgradeIcon.setTint(ps(Ns(js[D][0]))),L.candyUpgradeOverlayIcon.setTint(ps(Ns(js[D][1]))),this.setUpgradeIcon(L)):this.scene.candyUpgradeDisplay===1&&(L.candyUpgradeIcon.setVisible(!1),L.candyUpgradeOverlayIcon.setVisible(!1))}})}}setup(){const A=this.getUi(),s=U.resolvedLanguage??"en",R=Object.keys(pv).find(Ie=>s.includes(Ie))??"en",I=pv[R];this.starterSelectContainer=this.scene.add.container(0,-this.scene.game.canvas.height/6),this.starterSelectContainer.setVisible(!1),A.add(this.starterSelectContainer);const i=this.scene.add.rectangle(0,0,this.scene.game.canvas.width/6,this.scene.game.canvas.height/6,26720);i.setOrigin(0,0),this.starterSelectContainer.add(i);const a=this.scene.add.image(0,0,"starter_select_bg");a.setOrigin(0,0),this.starterSelectContainer.add(a),this.shinyOverlay=this.scene.add.image(6,6,"summary_overlay_shiny"),this.shinyOverlay.setOrigin(0,0),this.shinyOverlay.setVisible(!1),this.starterSelectContainer.add(this.shinyOverlay);const L=it(this.scene,Fo,Nu+1,175,161),S=this.scene.add.image(Fo+1,Nu+2,"starter_container_bg");S.setOrigin(0,0),this.starterSelectContainer.add(S),this.starterSelectContainer.add(it(this.scene,qI,Lc,Tu,wT)),this.starterSelectContainer.add(it(this.scene,qI,Lc+wT-5,Tu,Tu,!0)),this.starterSelectContainer.add(L),this.filterBarContainer=this.scene.add.container(0,0),this.filterBar=new Yh(this.scene,Math.min(Fo,qI),1,210,Nu);const o=[new dA(this.scene,1,new Yt(U.t("starterSelectUiHandler:gen1"))),new dA(this.scene,2,new Yt(U.t("starterSelectUiHandler:gen2"))),new dA(this.scene,3,new Yt(U.t("starterSelectUiHandler:gen3"))),new dA(this.scene,4,new Yt(U.t("starterSelectUiHandler:gen4"))),new dA(this.scene,5,new Yt(U.t("starterSelectUiHandler:gen5"))),new dA(this.scene,6,new Yt(U.t("starterSelectUiHandler:gen6"))),new dA(this.scene,7,new Yt(U.t("starterSelectUiHandler:gen7"))),new dA(this.scene,8,new Yt(U.t("starterSelectUiHandler:gen8"))),new dA(this.scene,9,new Yt(U.t("starterSelectUiHandler:gen9")))],l=new RI(this.scene,0,0,o,this.updateStarters,sI.HYBRID);this.filterBar.addFilter(bE.GEN,U.t("filterBar:genFilter"),l);const D=Object.keys(n).filter(Ie=>isNaN(Number(Ie))),M=[];D.forEach((Ie,oe)=>{if(oe===0||oe===19)return;const Te=this.scene.add.sprite(0,0,UR("types"));Te.setScale(.5),Te.setFrame(Ie.toLowerCase()),M.push(new dA(this.scene,oe,new Yt("",Te)))}),this.filterBar.addFilter(bE.TYPES,U.t("filterBar:typeFilter"),new RI(this.scene,0,0,M,this.updateStarters,sI.HYBRID,.5));const c=this.scene.add.sprite(0,0,"shiny_icons");c.setOrigin(.15,.2),c.setScale(.6),c.setFrame(Qn(0)),c.setTint(GE(0));const G=this.scene.add.sprite(0,0,"shiny_icons");G.setOrigin(.15,.2),G.setScale(.6),G.setFrame(Qn(1)),G.setTint(GE(1));const P=this.scene.add.sprite(0,0,"shiny_icons");P.setOrigin(.15,.2),P.setScale(.6),P.setFrame(Qn(2)),P.setTint(GE(2));const _=[new dA(this.scene,"SHINY3",new Yt("",P)),new dA(this.scene,"SHINY2",new Yt("",G)),new dA(this.scene,"SHINY",new Yt("",c)),new dA(this.scene,"NORMAL",new Yt(U.t("filterBar:normal"))),new dA(this.scene,"UNCAUGHT",new Yt(U.t("filterBar:uncaught")))];this.filterBar.addFilter(bE.CAUGHT,U.t("filterBar:caughtFilter"),new RI(this.scene,0,0,_,this.updateStarters,sI.HYBRID));const g=[new Yt(U.t("filterBar:passive"),void 0,mt.OFF),new Yt(U.t("filterBar:passiveUnlocked"),void 0,mt.ON),new Yt(U.t("filterBar:passiveUnlockable"),void 0,mt.UNLOCKABLE),new Yt(U.t("filterBar:passiveLocked"),void 0,mt.EXCLUDE)],H=[new Yt(U.t("filterBar:costReduction"),void 0,mt.OFF),new Yt(U.t("filterBar:costReductionUnlocked"),void 0,mt.ON),new Yt(U.t("filterBar:costReductionUnlockable"),void 0,mt.UNLOCKABLE),new Yt(U.t("filterBar:costReductionLocked"),void 0,mt.EXCLUDE)],F=[new dA(this.scene,"PASSIVE",g),new dA(this.scene,"COST_REDUCTION",H)];this.filterBar.addFilter(bE.UNLOCKS,U.t("filterBar:unlocksFilter"),new RI(this.scene,0,0,F,this.updateStarters,sI.RADIAL));const p=[new Yt(U.t("filterBar:favorite"),void 0,mt.OFF),new Yt(U.t("filterBar:isFavorite"),void 0,mt.ON),new Yt(U.t("filterBar:notFavorite"),void 0,mt.EXCLUDE)],v=[new Yt(U.t("filterBar:ribbon"),void 0,mt.OFF),new Yt(U.t("filterBar:hasWon"),void 0,mt.ON),new Yt(U.t("filterBar:hasNotWon"),void 0,mt.EXCLUDE)],k=[new Yt(U.t("filterBar:hiddenAbility"),void 0,mt.OFF),new Yt(U.t("filterBar:hasHiddenAbility"),void 0,mt.ON),new Yt(U.t("filterBar:noHiddenAbility"),void 0,mt.EXCLUDE)],j=[new Yt(U.t("filterBar:egg"),void 0,mt.OFF),new Yt(U.t("filterBar:eggPurchasable"),void 0,mt.ON)],q=[new Yt(U.t("filterBar:pokerus"),void 0,mt.OFF),new Yt(U.t("filterBar:hasPokerus"),void 0,mt.ON)],ie=[new dA(this.scene,"FAVORITE",p),new dA(this.scene,"WIN",v),new dA(this.scene,"HIDDEN_ABILITY",k),new dA(this.scene,"EGG",j),new dA(this.scene,"POKERUS",q)];this.filterBar.addFilter(bE.MISC,U.t("filterBar:miscFilter"),new RI(this.scene,0,0,ie,this.updateStarters,sI.RADIAL));const z=[new dA(this.scene,oO.NUMBER,new Yt(U.t("filterBar:sortByNumber"),void 0,mt.ON)),new dA(this.scene,oO.COST,new Yt(U.t("filterBar:sortByCost"))),new dA(this.scene,oO.CANDY,new Yt(U.t("filterBar:sortByCandies"))),new dA(this.scene,oO.IV,new Yt(U.t("filterBar:sortByIVs"))),new dA(this.scene,oO.NAME,new Yt(U.t("filterBar:sortByName")))];this.filterBar.addFilter(bE.SORT,U.t("filterBar:sortFilter"),new RI(this.scene,0,0,z,this.updateStarters,sI.SINGLE)),this.filterBarContainer.add(this.filterBar),this.starterSelectContainer.add(this.filterBarContainer),this.filterBar.offsetHybridFilters(),this.scene.uiTheme||L.setVisible(!1),this.iconAnimHandler=new IL,this.iconAnimHandler.setup(this.scene),this.pokemonNumberText=se(this.scene,17,1,"0000",V.SUMMARY),this.pokemonNumberText.setOrigin(0,0),this.starterSelectContainer.add(this.pokemonNumberText),this.pokemonNameText=se(this.scene,6,112,"",V.SUMMARY),this.pokemonNameText.setOrigin(0,0),this.starterSelectContainer.add(this.pokemonNameText),this.pokemonGrowthRateLabelText=se(this.scene,8,106,U.t("starterSelectUiHandler:growthRate"),V.SUMMARY_ALT,{fontSize:"36px"}),this.pokemonGrowthRateLabelText.setOrigin(0,0),this.pokemonGrowthRateLabelText.setVisible(!1),this.starterSelectContainer.add(this.pokemonGrowthRateLabelText),this.pokemonGrowthRateText=se(this.scene,34,106,"",V.SUMMARY_PINK,{fontSize:"36px"}),this.pokemonGrowthRateText.setOrigin(0,0),this.starterSelectContainer.add(this.pokemonGrowthRateText),this.pokemonGenderText=se(this.scene,96,112,"",V.SUMMARY_ALT),this.pokemonGenderText.setOrigin(0,0),this.starterSelectContainer.add(this.pokemonGenderText),this.pokemonUncaughtText=se(this.scene,6,127,U.t("starterSelectUiHandler:uncaught"),V.SUMMARY_ALT,{fontSize:"56px"}),this.pokemonUncaughtText.setOrigin(0,0),this.starterSelectContainer.add(this.pokemonUncaughtText);const Oe=(I==null?void 0:I.starterInfoXPos)||31,ae=(I==null?void 0:I.starterInfoYOffset)||0,Le=(I==null?void 0:I.starterInfoTextSize)||56;this.pokemonAbilityLabelText=se(this.scene,6,127+ae,U.t("starterSelectUiHandler:ability"),V.SUMMARY_ALT,{fontSize:Le}),this.pokemonAbilityLabelText.setOrigin(0,0),this.pokemonAbilityLabelText.setVisible(!1),this.starterSelectContainer.add(this.pokemonAbilityLabelText),this.pokemonAbilityText=se(this.scene,Oe,127+ae,"",V.SUMMARY_ALT,{fontSize:Le}),this.pokemonAbilityText.setOrigin(0,0),this.pokemonAbilityText.setInteractive(new Phaser.Geom.Rectangle(0,0,250,55),Phaser.Geom.Rectangle.Contains),this.starterSelectContainer.add(this.pokemonAbilityText),this.pokemonPassiveLabelText=se(this.scene,6,136+ae,U.t("starterSelectUiHandler:passive"),V.SUMMARY_ALT,{fontSize:Le}),this.pokemonPassiveLabelText.setOrigin(0,0),this.pokemonPassiveLabelText.setVisible(!1),this.starterSelectContainer.add(this.pokemonPassiveLabelText),this.pokemonPassiveText=se(this.scene,Oe,136+ae,"",V.SUMMARY_ALT,{fontSize:Le}),this.pokemonPassiveText.setOrigin(0,0),this.pokemonPassiveText.setInteractive(new Phaser.Geom.Rectangle(0,0,250,55),Phaser.Geom.Rectangle.Contains),this.starterSelectContainer.add(this.pokemonPassiveText),this.pokemonPassiveDisabledIcon=this.scene.add.sprite(Oe,137+ae,"icon_stop"),this.pokemonPassiveDisabledIcon.setOrigin(0,.5),this.pokemonPassiveDisabledIcon.setScale(.35),this.pokemonPassiveDisabledIcon.setVisible(!1),this.starterSelectContainer.add(this.pokemonPassiveDisabledIcon),this.pokemonPassiveLockedIcon=this.scene.add.sprite(Oe,137+ae,"icon_lock"),this.pokemonPassiveLockedIcon.setOrigin(0,.5),this.pokemonPassiveLockedIcon.setScale(.42,.38),this.pokemonPassiveLockedIcon.setVisible(!1),this.starterSelectContainer.add(this.pokemonPassiveLockedIcon),this.pokemonNatureLabelText=se(this.scene,6,145+ae,U.t("starterSelectUiHandler:nature"),V.SUMMARY_ALT,{fontSize:Le}),this.pokemonNatureLabelText.setOrigin(0,0),this.pokemonNatureLabelText.setVisible(!1),this.starterSelectContainer.add(this.pokemonNatureLabelText),this.pokemonNatureText=PE(this.scene,Oe,145+ae,"",V.SUMMARY_ALT,{fontSize:Le}),this.pokemonNatureText.setOrigin(0,0),this.starterSelectContainer.add(this.pokemonNatureText),this.pokemonMoveContainers=[],this.pokemonMoveBgs=[],this.pokemonMoveLabels=[],this.pokemonEggMoveContainers=[],this.pokemonEggMoveBgs=[],this.pokemonEggMoveLabels=[],this.valueLimitLabel=se(this.scene,qI+17,150,"0/10",V.TOOLTIP_CONTENT),this.valueLimitLabel.setOrigin(.5,0),this.starterSelectContainer.add(this.valueLimitLabel);const Ne=se(this.scene,qI+17,162,U.t("common:start"),V.TOOLTIP_CONTENT);Ne.setOrigin(.5,0),this.starterSelectContainer.add(Ne),this.startCursorObj=this.scene.add.nineslice(qI+4,160,"select_cursor",void 0,26,15,6,6,6,6),this.startCursorObj.setVisible(!1),this.startCursorObj.setOrigin(0,0),this.starterSelectContainer.add(this.startCursorObj);const De=[],Be=this.scene.add.container(Fo+6,9);this.starterSelectScrollBar=new gI(this.scene,161,12,5,L.height-6,9),Be.add(this.starterSelectScrollBar),this.pokerusCursorObjs=new Array(E6).fill(null).map(()=>{const Ie=this.scene.add.image(0,0,"select_cursor_pokerus");return Ie.setVisible(!1),Ie.setOrigin(0,0),Be.add(Ie),Ie}),this.starterCursorObjs=new Array(6).fill(null).map(()=>{const Ie=this.scene.add.image(0,0,"select_cursor_highlight");return Ie.setVisible(!1),Ie.setOrigin(0,0),Be.add(Ie),Ie}),this.cursorObj=this.scene.add.image(0,0,"select_cursor"),this.cursorObj.setOrigin(0,0),this.starterIconsCursorObj=this.scene.add.image(289,64,"select_gen_cursor"),this.starterIconsCursorObj.setName("starter-icons-cursor"),this.starterIconsCursorObj.setVisible(!1),this.starterIconsCursorObj.setOrigin(0,0),this.starterSelectContainer.add(this.starterIconsCursorObj),Be.add(this.cursorObj);for(const Ie of MR){if(!CA.hasOwnProperty(Ie.speciesId)||!Ie.isObtainable())continue;De.push(Ie.speciesId),this.speciesLoaded.set(Ie.speciesId,!1),this.allSpecies.push(Ie);const oe=new Wh(this.scene,Ie).setVisible(!1);this.iconAnimHandler.addOrUpdate(oe.icon,ys.NONE),this.starterContainers.push(oe),Be.add(oe)}this.starterSelectContainer.add(Be),this.starterIcons=new Array(6).fill(null).map((Ie,oe)=>{const Te=this.scene.add.sprite(qI+7,f1(oe),"pokemon_icons_0");return Te.setScale(.5),Te.setOrigin(0,0),Te.setFrame("unknown"),this.starterSelectContainer.add(Te),this.iconAnimHandler.addOrUpdate(Te,ys.PASSIVE),Te}),this.pokemonSprite=this.scene.add.sprite(53,63,"pkmn__sub"),this.pokemonSprite.setPipeline(this.scene.spritePipeline,{tone:[0,0,0,0],ignoreTimeTint:!0}),this.starterSelectContainer.add(this.pokemonSprite),this.type1Icon=this.scene.add.sprite(8,98,UR("types")),this.type1Icon.setScale(.5),this.type1Icon.setOrigin(0,0),this.starterSelectContainer.add(this.type1Icon),this.type2Icon=this.scene.add.sprite(26,98,UR("types")),this.type2Icon.setScale(.5),this.type2Icon.setOrigin(0,0),this.starterSelectContainer.add(this.type2Icon),this.pokemonLuckLabelText=se(this.scene,8,89,U.t("common:luckIndicator"),V.WINDOW_ALT,{fontSize:"56px"}),this.pokemonLuckLabelText.setOrigin(0,0),this.starterSelectContainer.add(this.pokemonLuckLabelText),this.pokemonLuckText=se(this.scene,8+this.pokemonLuckLabelText.displayWidth+2,89,"0",V.WINDOW,{fontSize:"56px"}),this.pokemonLuckText.setOrigin(0,0),this.starterSelectContainer.add(this.pokemonLuckText),this.pokemonCandyIcon=this.scene.add.sprite(4.5,18,"candy"),this.pokemonCandyIcon.setScale(.5),this.pokemonCandyIcon.setOrigin(0,0),this.starterSelectContainer.add(this.pokemonCandyIcon),this.pokemonFormText=se(this.scene,6,42,"Form",V.WINDOW_ALT,{fontSize:"42px"}),this.pokemonFormText.setOrigin(0,0),this.starterSelectContainer.add(this.pokemonFormText),this.pokemonCandyOverlayIcon=this.scene.add.sprite(4.5,18,"candy_overlay"),this.pokemonCandyOverlayIcon.setScale(.5),this.pokemonCandyOverlayIcon.setOrigin(0,0),this.starterSelectContainer.add(this.pokemonCandyOverlayIcon),this.pokemonCandyDarknessOverlay=this.scene.add.sprite(4.5,18,"candy"),this.pokemonCandyDarknessOverlay.setScale(.5),this.pokemonCandyDarknessOverlay.setOrigin(0,0),this.pokemonCandyDarknessOverlay.setTint(0),this.pokemonCandyDarknessOverlay.setAlpha(.5),this.pokemonCandyDarknessOverlay.setInteractive(new Phaser.Geom.Rectangle(0,0,16,16),Phaser.Geom.Rectangle.Contains),this.starterSelectContainer.add(this.pokemonCandyDarknessOverlay),this.pokemonCandyCountText=se(this.scene,14,18,"x0",V.WINDOW_ALT,{fontSize:"56px"}),this.pokemonCandyCountText.setOrigin(0,0),this.starterSelectContainer.add(this.pokemonCandyCountText),this.pokemonCaughtHatchedContainer=this.scene.add.container(2,25),this.pokemonCaughtHatchedContainer.setScale(.5),this.starterSelectContainer.add(this.pokemonCaughtHatchedContainer);const de=this.scene.add.sprite(1,0,"items","pb");de.setOrigin(0,0),de.setScale(.75),this.pokemonCaughtHatchedContainer.add(de),this.pokemonCaughtCountText=se(this.scene,24,4,"0",V.SUMMARY_ALT),this.pokemonCaughtCountText.setOrigin(0,0),this.pokemonCaughtHatchedContainer.add(this.pokemonCaughtCountText),this.pokemonHatchedIcon=this.scene.add.sprite(1,14,"egg_icons"),this.pokemonHatchedIcon.setOrigin(.15,.2),this.pokemonHatchedIcon.setScale(.8),this.pokemonCaughtHatchedContainer.add(this.pokemonHatchedIcon),this.pokemonShinyIcon=this.scene.add.sprite(14,76,"shiny_icons"),this.pokemonShinyIcon.setOrigin(.15,.2),this.pokemonShinyIcon.setScale(1),this.pokemonCaughtHatchedContainer.add(this.pokemonShinyIcon),this.pokemonHatchedCountText=se(this.scene,24,19,"0",V.SUMMARY_ALT),this.pokemonHatchedCountText.setOrigin(0,0),this.pokemonCaughtHatchedContainer.add(this.pokemonHatchedCountText),this.pokemonMovesContainer=this.scene.add.container(102,16),this.pokemonMovesContainer.setScale(.375);for(let Ie=0;Ie<4;Ie++){const oe=this.scene.add.container(0,14*Ie),Te=this.scene.add.nineslice(0,0,"type_bgs","unknown",92,14,2,2,2,2);Te.setOrigin(1,0);const he=se(this.scene,-Te.width/2,0,"-",V.PARTY);he.setOrigin(.5,0),this.pokemonMoveBgs.push(Te),this.pokemonMoveLabels.push(he),oe.add(Te),oe.add(he),this.pokemonMoveContainers.push(oe),this.pokemonMovesContainer.add(oe)}this.pokemonAdditionalMoveCountLabel=se(this.scene,-this.pokemonMoveBgs[0].width/2,56,"(+0)",V.PARTY),this.pokemonAdditionalMoveCountLabel.setOrigin(.5,0),this.pokemonMovesContainer.add(this.pokemonAdditionalMoveCountLabel),this.starterSelectContainer.add(this.pokemonMovesContainer),this.pokemonEggMovesContainer=this.scene.add.container(102,85),this.pokemonEggMovesContainer.setScale(.375);const fe=se(this.scene,-46,0,U.t("starterSelectUiHandler:eggMoves"),V.WINDOW_ALT);fe.setOrigin(.5,0),this.pokemonEggMovesContainer.add(fe);for(let Ie=0;Ie<4;Ie++){const oe=this.scene.add.container(0,16+14*Ie),Te=this.scene.add.nineslice(0,0,"type_bgs","unknown",92,14,2,2,2,2);Te.setOrigin(1,0);const he=se(this.scene,-Te.width/2,0,"???",V.PARTY);he.setOrigin(.5,0),this.pokemonEggMoveBgs.push(Te),this.pokemonEggMoveLabels.push(he),oe.add(Te),oe.add(he),this.pokemonEggMoveContainers.push(oe),this.pokemonEggMovesContainer.add(oe)}this.starterSelectContainer.add(this.pokemonEggMovesContainer);const Ye=I.instructionTextSize;this.instructionsContainer=this.scene.add.container(4,156),this.instructionsContainer.setVisible(!0),this.starterSelectContainer.add(this.instructionsContainer),this.shinyIconElement=new Phaser.GameObjects.Sprite(this.scene,this.instructionRowX,this.instructionRowY,"keyboard","R.png"),this.shinyIconElement.setName("sprite-shiny-icon-element"),this.shinyIconElement.setScale(.675),this.shinyIconElement.setOrigin(0,0),this.shinyLabel=se(this.scene,this.instructionRowX+this.instructionRowTextOffset,this.instructionRowY,U.t("starterSelectUiHandler:cycleShiny"),V.PARTY,{fontSize:Ye}),this.shinyLabel.setName("text-shiny-label"),this.formIconElement=new Phaser.GameObjects.Sprite(this.scene,this.instructionRowX,this.instructionRowY,"keyboard","F.png"),this.formIconElement.setName("sprite-form-icon-element"),this.formIconElement.setScale(.675),this.formIconElement.setOrigin(0,0),this.formLabel=se(this.scene,this.instructionRowX+this.instructionRowTextOffset,this.instructionRowY,U.t("starterSelectUiHandler:cycleForm"),V.PARTY,{fontSize:Ye}),this.formLabel.setName("text-form-label"),this.genderIconElement=new Phaser.GameObjects.Sprite(this.scene,this.instructionRowX,this.instructionRowY,"keyboard","G.png"),this.genderIconElement.setName("sprite-gender-icon-element"),this.genderIconElement.setScale(.675),this.genderIconElement.setOrigin(0,0),this.genderLabel=se(this.scene,this.instructionRowX+this.instructionRowTextOffset,this.instructionRowY,U.t("starterSelectUiHandler:cycleGender"),V.PARTY,{fontSize:Ye}),this.genderLabel.setName("text-gender-label"),this.abilityIconElement=new Phaser.GameObjects.Sprite(this.scene,this.instructionRowX,this.instructionRowY,"keyboard","E.png"),this.abilityIconElement.setName("sprite-ability-icon-element"),this.abilityIconElement.setScale(.675),this.abilityIconElement.setOrigin(0,0),this.abilityLabel=se(this.scene,this.instructionRowX+this.instructionRowTextOffset,this.instructionRowY,U.t("starterSelectUiHandler:cycleAbility"),V.PARTY,{fontSize:Ye}),this.abilityLabel.setName("text-ability-label"),this.natureIconElement=new Phaser.GameObjects.Sprite(this.scene,this.instructionRowX,this.instructionRowY,"keyboard","N.png"),this.natureIconElement.setName("sprite-nature-icon-element"),this.natureIconElement.setScale(.675),this.natureIconElement.setOrigin(0,0),this.natureLabel=se(this.scene,this.instructionRowX+this.instructionRowTextOffset,this.instructionRowY,U.t("starterSelectUiHandler:cycleNature"),V.PARTY,{fontSize:Ye}),this.natureLabel.setName("text-nature-label"),this.variantIconElement=new Phaser.GameObjects.Sprite(this.scene,this.instructionRowX,this.instructionRowY,"keyboard","V.png"),this.variantIconElement.setName("sprite-variant-icon-element"),this.variantIconElement.setScale(.675),this.variantIconElement.setOrigin(0,0),this.variantLabel=se(this.scene,this.instructionRowX+this.instructionRowTextOffset,this.instructionRowY,U.t("starterSelectUiHandler:cycleVariant"),V.PARTY,{fontSize:Ye}),this.variantLabel.setName("text-variant-label"),this.goFilterIconElement=new Phaser.GameObjects.Sprite(this.scene,this.filterInstructionRowX,this.filterInstructionRowY,"keyboard","C.png"),this.goFilterIconElement.setName("sprite-goFilter-icon-element"),this.goFilterIconElement.setScale(.675),this.goFilterIconElement.setOrigin(0,0),this.goFilterLabel=se(this.scene,this.filterInstructionRowX+this.instructionRowTextOffset,this.filterInstructionRowY,U.t("starterSelectUiHandler:goFilter"),V.PARTY,{fontSize:Ye}),this.goFilterLabel.setName("text-goFilter-label"),this.hideInstructions(),this.filterInstructionsContainer=this.scene.add.container(50,5),this.filterInstructionsContainer.setVisible(!0),this.starterSelectContainer.add(this.filterInstructionsContainer),this.starterSelectMessageBoxContainer=this.scene.add.container(0,this.scene.game.canvas.height/6),this.starterSelectMessageBoxContainer.setVisible(!1),this.starterSelectContainer.add(this.starterSelectMessageBoxContainer),this.starterSelectMessageBox=it(this.scene,1,-1,318,28),this.starterSelectMessageBox.setOrigin(0,1),this.starterSelectMessageBoxContainer.add(this.starterSelectMessageBox),this.message=se(this.scene,8,8,"",V.WINDOW,{maxLines:2}),this.message.setOrigin(0,0),this.starterSelectMessageBoxContainer.add(this.message),this.initPromptSprite(this.starterSelectMessageBoxContainer),this.statsContainer=new Yl(this.scene,6,16),this.scene.add.existing(this.statsContainer),this.statsContainer.setVisible(!1),this.starterSelectContainer.add(this.statsContainer);const Re=1;this.moveInfoOverlay=new nO(this.scene,{scale:Re,top:!0,x:1,y:this.scene.game.canvas.height/6-nO.getHeight(Re)-29}),this.starterSelectContainer.add(this.moveInfoOverlay),this.starterSelectContainer.bringToTop(this.filterBarContainer),this.initTutorialOverlay(this.starterSelectContainer),this.starterSelectContainer.bringToTop(this.starterSelectMessageBoxContainer),this.scene.eventTarget.addEventListener(dO.CANDY_UPGRADE_NOTIFICATION_CHANGED,Ie=>this.onCandyUpgradeDisplayChanged(Ie)),this.updateInstructions()}show(A){return this.starterPreferences||(this.starterPreferences=cC.load()),this.moveInfoOverlay.clear(),this.pokerusSpecies=P8(this.scene),A.length>=1&&A[0]instanceof Function?(super.show(A),this.starterSelectCallback=A[0],this.starterSelectContainer.setVisible(!0),this.allSpecies.forEach((s,R)=>{const I=this.starterContainers[R].icon,i=this.scene.gameData.dexData[s.speciesId];this.starterPreferences[s.speciesId]=this.initStarterPrefs(s),i.caughtAttr?I.clearTint():i.seenAttr&&I.setTint(8421504),this.setUpgradeAnimation(I,s)}),this.resetFilters(),this.updateStarters(),this.setFilterMode(!1),this.filterBarCursor=0,this.setCursor(0),this.tryUpdateValue(0),fI(this.scene,yR.Starter_Select),!0):!1}initStarterPrefs(A){var o;const s=this.starterPreferences[A.speciesId],R=this.scene.gameData.dexData[A.speciesId],I=this.scene.gameData.starterData[A.speciesId];if(!s||!R.caughtAttr)return{};const i=R.caughtAttr,a=i&Fe.SHINY,L=i&Fe.NON_SHINY;if(s.shiny&&!a?(delete s.shiny,delete s.variant):s.shiny===!1&&!L&&delete s.shiny,s.variant!==void 0){const l=[a&&i&Fe.DEFAULT_VARIANT,a&&i&Fe.VARIANT_2,a&&i&Fe.VARIANT_3];(isNaN(s.variant)||s.variant<0||!l[s.variant])&&delete s.variant}if(s.female!==void 0&&((s.female?i&Fe.FEMALE:i&Fe.MALE)||delete s.female),s.ability!==void 0){const l=A.ability2===A.ability1,D=I.abilityAttr,M=D&ns.ABILITY_1,c=D&ns.ABILITY_2,G=D&ns.ABILITY_HIDDEN;[M,l?c&&!M:c,G][s.ability]||delete s.ability}const S=s.form;return S!==void 0&&(!((o=A.forms[S])!=null&&o.isStarterSelectable)||!(i&this.scene.gameData.getFormAttr(S)))&&delete s.form,s.nature!==void 0&&this.scene.gameData.getNaturesForAttr(R.natureAttr).indexOf(s.nature)<0&&delete s.nature,s}resetFilters(){const A=this.filterBar.getFilter(bE.CAUGHT);this.filterBar.setValsToDefault();for(let s=0;s<A.options.length;s++)A.options[s].val!=="ALL"&&A.options[s].val!=="UNCAUGHT"&&A.toggleOptionState(s)}showText(A,s,R,I,i,a){super.showText(A,s,R,I,i,a),(A==null?void 0:A.indexOf(`
`))===-1?(this.starterSelectMessageBox.setSize(318,28),this.message.setY(-22)):(this.starterSelectMessageBox.setSize(318,42),this.message.setY(-37)),this.starterSelectMessageBoxContainer.setVisible(!!(A!=null&&A.length))}isUpgradeIconEnabled(){return this.scene.candyUpgradeNotification!==0&&this.scene.candyUpgradeDisplay===0}isUpgradeAnimationEnabled(){return this.scene.candyUpgradeNotification!==0&&this.scene.candyUpgradeDisplay===1}isPassiveAvailable(A){const s=this.scene.gameData.starterData[A];return s.candyCount>=YV(CA[A])&&!(s.passiveAttr&dR.UNLOCKED)}isValueReductionAvailable(A){const s=this.scene.gameData.starterData[A];return s.candyCount>=pV(CA[A])[s.valueReduction]&&s.valueReduction<yv}isSameSpeciesEggAvailable(A){return this.scene.gameData.starterData[A].candyCount>=yV(CA[A])}setUpgradeAnimation(A,s,R=!1){if(this.scene.tweens.killTweensOf(A),this.scene.candyUpgradeDisplay===0||s.speciesId!==s.getRootSpeciesId(!1))return;A.y=2;const I={targets:A,loop:-1,delay:vx(0,50)*5,loopDelay:1e3,tweens:[{targets:A,y:-3,duration:Ve(125),ease:"Cubic.easeOut",yoyo:!0},{targets:A,y:-1,duration:Ve(150),ease:"Cubic.easeOut",yoyo:!0}]},i=this.isPassiveAvailable(s.speciesId),a=this.isValueReductionAvailable(s.speciesId),L=this.isSameSpeciesEggAvailable(s.speciesId);this.scene.candyUpgradeNotification===1?i&&(this.scene.tweens.chain(I).paused=R):this.scene.candyUpgradeNotification===2&&(i||a||L)&&(this.scene.tweens.chain(I).paused=R)}setUpgradeIcon(A){const s=A.species,R=!!(s!=null&&s.speciesId);if(!s||this.scene.candyUpgradeNotification===0||s.speciesId!==s.getRootSpeciesId(!1)){A.candyUpgradeIcon.setVisible(!1),A.candyUpgradeOverlayIcon.setVisible(!1);return}const I=this.isPassiveAvailable(s.speciesId),i=this.isValueReductionAvailable(s.speciesId),a=this.isSameSpeciesEggAvailable(s.speciesId);this.scene.candyUpgradeNotification===1?(A.candyUpgradeIcon.setVisible(R&&I),A.candyUpgradeOverlayIcon.setVisible(R&&A.candyUpgradeIcon.visible)):this.scene.candyUpgradeNotification===2&&(A.candyUpgradeIcon.setVisible(R&&(I||i||a)),A.candyUpgradeOverlayIcon.setVisible(R&&A.candyUpgradeIcon.visible))}updateCandyUpgradeDisplay(A){this.isUpgradeIconEnabled()&&this.setUpgradeIcon(A),this.isUpgradeAnimationEnabled()&&this.setUpgradeAnimation(A.icon,this.lastSpecies,!0)}onCandyUpgradeDisplayChanged(A){if(A){if(this.scene.candyUpgradeDisplay===0){this.filteredStarterContainers.forEach(R=>{this.setUpgradeIcon(R)});return}this.filteredStarterContainers.forEach((R,I)=>{const i=this.filteredStarterContainers[I].icon;this.setUpgradeAnimation(i,R.species)})}}processInput(A){var P,_;if(this.blockInput)return!1;const s=9,R=9,I=this.filteredStarterContainers.length,i=Math.ceil(I/s),a=Math.floor(this.cursor/s),L=this.scrollCursor*s,S=Math.min(this.filteredStarterContainers.length-1,L+R*s-1),o=S-L+1,l=Math.ceil(o/s),D=Math.floor((this.cursor-L)/s),M=this.getUi();let c=!1,G=!1;if(A===y.SUBMIT)this.tryStart(!0)?c=!0:G=!0;else if(A===y.CANCEL)this.filterMode&&this.filterBar.openDropDown?(this.filterBar.toggleDropDown(this.filterBarCursor),I>0&&(this.setFilterMode(!1),this.scrollCursor=0,this.updateScroll(),this.setCursor(0)),c=!0):this.statsMode?(this.toggleStatsMode(!1),c=!0):this.starterSpecies.length?(this.popStarter(this.starterSpecies.length-1),c=!0,this.updateInstructions()):(this.tryExit(),c=!0);else if(A===y.STATS)this.filterMode||(this.startCursorObj.setVisible(!1),this.starterIconsCursorObj.setVisible(!1),this.setSpecies(null),this.filterBarCursor=0,this.setFilterMode(!0),this.filterBar.toggleDropDown(this.filterBarCursor));else if(this.startCursorObj.visible)switch(A){case y.ACTION:this.tryStart(!0)?c=!0:G=!0;break;case y.UP:this.startCursorObj.setVisible(!1),this.starterSpecies.length>0?(this.starterIconsCursorIndex=this.starterSpecies.length-1,this.moveStarterIconsCursor(this.starterIconsCursorIndex)):(this.startCursorObj.setVisible(!1),this.filterBarCursor=Math.max(1,this.filterBar.numFilters-1),this.setFilterMode(!0)),c=!0;break;case y.DOWN:this.startCursorObj.setVisible(!1),this.filterBarCursor=Math.max(1,this.filterBar.numFilters-1),this.setFilterMode(!0),c=!0;break;case y.LEFT:I>0&&(this.startCursorObj.setVisible(!1),this.cursorObj.setVisible(!0),this.setCursor(L+(l-1)*9+8),c=!0);break;case y.RIGHT:I>0&&(this.startCursorObj.setVisible(!1),this.cursorObj.setVisible(!0),this.setCursor(L+(l-1)*9),c=!0);break}else if(this.filterMode)switch(A){case y.LEFT:this.filterBarCursor>0?c=this.setCursor(this.filterBarCursor-1):c=this.setCursor(this.filterBar.numFilters-1);break;case y.RIGHT:this.filterBarCursor<this.filterBar.numFilters-1?c=this.setCursor(this.filterBarCursor+1):c=this.setCursor(0);break;case y.UP:if(this.filterBar.openDropDown)c=this.filterBar.decDropDownCursor();else if(this.filterBarCursor===this.filterBar.numFilters-1&&this.starterSpecies.length>0)this.setFilterMode(!1),this.cursorObj.setVisible(!1),this.startCursorObj.setVisible(!0),c=!0;else if(I>0){this.setFilterMode(!1),this.scrollCursor=Math.max(0,i-9),this.updateScroll();const g=(this.filterBarCursor+.5)/this.filterBar.numFilters,H=Math.min(8,Math.floor(g*11));I%9>H?this.setCursor(I-I%9+H):this.setCursor(Math.max(I-I%9+H-9,0)),c=!0}break;case y.DOWN:if(this.filterBar.openDropDown)c=this.filterBar.incDropDownCursor();else if(this.filterBarCursor===this.filterBar.numFilters-1&&this.starterSpecies.length>0)this.setFilterMode(!1),this.cursorObj.setVisible(!1),this.starterIconsCursorIndex=0,this.moveStarterIconsCursor(this.starterIconsCursorIndex),c=!0;else if(I>0){this.setFilterMode(!1),this.scrollCursor=0,this.updateScroll();const g=this.filterBarCursor/Math.max(1,this.filterBar.numFilters-1),H=Math.min(8,Math.floor(g*11));this.setCursor(Math.min(H,I)),c=!0}break;case y.ACTION:this.filterBar.openDropDown?this.filterBar.toggleOptionState():this.filterBar.toggleDropDown(this.filterBarCursor),c=!0;break}else{let g;const H=this.scene.gameData.starterData[this.lastSpecies.speciesId];let F=this.starterPreferences[this.lastSpecies.speciesId];if(this.starterIconsCursorObj.visible?g=this.filteredStarterContainers[this.filteredStarterContainers.findIndex(p=>p.species===this.lastSpecies)]:g=this.filteredStarterContainers[this.cursor],A===y.ACTION){if(!((P=this.speciesStarterDexEntry)!=null&&P.caughtAttr))G=!0;else if(this.starterSpecies.length<=6){const p=this.getUi();let v=[];const[k,j]=this.isInParty(this.lastSpecies),q=this.isPartyValid(),ie=new je(!0);Is(this.scene.gameMode,JE.STARTER_CHOICE,this.lastSpecies,ie,this.scene.gameData.getSpeciesDexAttrProps(this.lastSpecies,this.getCurrentDexProps(this.lastSpecies.speciesId)),q);const z=this.starterSpecies.map(Be=>Be.generation).reduce((Be,de,fe)=>Be+=this.scene.gameData.getSpeciesStarterValue(this.starterSpecies[fe].speciesId),0),Oe=this.scene.gameData.getSpeciesStarterValue(this.lastSpecies.speciesId);if(!k&&ie.value&&z+Oe<=this.getValueLimit()&&this.starterSpecies.length<6?v=[{label:U.t("starterSelectUiHandler:addToParty"),handler:T(()=>{var de;p.setMode($.STARTER_SELECT);const Be=this.tryUpdateValue(this.scene.gameData.getSpeciesStarterValue(this.lastSpecies.speciesId),!0);if(!k&&ie.value&&Be){const fe=this.starterCursorObjs[this.starterSpecies.length];fe.setVisible(!0),fe.setPosition(this.cursorObj.x,this.cursorObj.y),this.addToParty(this.lastSpecies,this.dexAttrCursor,this.abilityCursor,this.natureCursor,(de=this.starterMoveset)==null?void 0:de.slice(0)),p.playSelect()}else p.playError();return!0},"handler"),overrideSound:!0}]:k&&(v=[{label:U.t("starterSelectUiHandler:removeFromParty"),handler:T(()=>(this.popStarter(j),p.setMode($.STARTER_SELECT),!0),"handler")}]),v.push({label:U.t("starterSelectUiHandler:toggleIVs"),handler:T(()=>(this.toggleStatsMode(),p.setMode($.STARTER_SELECT),!0),"handler")}),this.speciesStarterMoves.length>1){const Be=T(de=>{this.blockInput=!0,p.setMode($.STARTER_SELECT).then(()=>{p.showText(U.t("starterSelectUiHandler:selectMoveSwapOut"),null,()=>{this.moveInfoOverlay.show(He[de[0]]),p.setModeWithoutClear($.OPTION_SELECT,{options:de.map((fe,Ye)=>({label:He[fe].name,handler:T(()=>(this.blockInput=!0,p.setMode($.STARTER_SELECT).then(()=>{p.showText(`${U.t("starterSelectUiHandler:selectMoveSwapWith")} ${He[fe].name}.`,null,()=>{const Ie=this.speciesStarterMoves.filter(oe=>oe!==fe);this.moveInfoOverlay.show(He[Ie[0]]),p.setModeWithoutClear($.OPTION_SELECT,{options:Ie.map(oe=>({label:He[oe].name,handler:T(()=>(this.switchMoveHandler(Ye,oe,fe),Be(this.starterMoveset),!0),"handler"),onHover:T(()=>{this.moveInfoOverlay.show(He[oe])},"onHover")})).concat({label:U.t("menu:cancel"),handler:T(()=>(Be(this.starterMoveset),!0),"handler"),onHover:T(()=>{this.moveInfoOverlay.clear()},"onHover")}),supportHover:!0,maxOptions:8,yOffset:19}),this.blockInput=!1})}),!0),"handler"),onHover:T(()=>{this.moveInfoOverlay.show(He[fe])},"onHover")})).concat({label:U.t("menu:cancel"),handler:T(()=>(this.moveInfoOverlay.clear(),this.clearText(),p.setMode($.STARTER_SELECT),!0),"handler"),onHover:T(()=>{this.moveInfoOverlay.clear()},"onHover")}),supportHover:!0,maxOptions:8,yOffset:19}),this.blockInput=!1})})},"showSwapOptions");v.push({label:U.t("starterSelectUiHandler:manageMoves"),handler:T(()=>(Be(this.starterMoveset),!0),"handler")})}if(this.canCycleNature){const Be=T(()=>{this.blockInput=!0,p.setMode($.STARTER_SELECT).then(()=>{p.showText(U.t("starterSelectUiHandler:selectNature"),null,()=>{var fe;const de=this.scene.gameData.getNaturesForAttr((fe=this.speciesStarterDexEntry)==null?void 0:fe.natureAttr);p.setModeWithoutClear($.OPTION_SELECT,{options:de.map((Ye,Re)=>({label:WO(Ye,!0,!0,!0,this.scene.uiTheme),handler:T(()=>(F||(F=this.starterPreferences[this.lastSpecies.speciesId]={}),F.nature=Ye,this.clearText(),p.setMode($.STARTER_SELECT),this.setSpeciesDetails(this.lastSpecies,void 0,void 0,void 0,void 0,void 0,Ye,void 0),this.blockInput=!1,!0),"handler")})).concat({label:U.t("menu:cancel"),handler:T(()=>(this.clearText(),p.setMode($.STARTER_SELECT),this.blockInput=!1,!0),"handler")}),maxOptions:8,yOffset:19})})})},"showNatureOptions");v.push({label:U.t("starterSelectUiHandler:manageNature"),handler:T(()=>(Be(),!0),"handler")})}const ae=H.passiveAttr;ae&dR.UNLOCKED&&(ae&dR.ENABLED?v.push({label:U.t("starterSelectUiHandler:disablePassive"),handler:T(()=>(H.passiveAttr^=dR.ENABLED,p.setMode($.STARTER_SELECT),this.setSpeciesDetails(this.lastSpecies,void 0,void 0,void 0,void 0,void 0,void 0),!0),"handler")}):v.push({label:U.t("starterSelectUiHandler:enablePassive"),handler:T(()=>(H.passiveAttr|=dR.ENABLED,p.setMode($.STARTER_SELECT),this.setSpeciesDetails(this.lastSpecies,void 0,void 0,void 0,void 0,void 0,void 0),!0),"handler")})),(F==null?void 0:F.favorite)??!1?v.push({label:U.t("starterSelectUiHandler:removeFromFavorites"),handler:T(()=>(F.favorite=!1,g&&g.favoriteIcon.setVisible(F.favorite),p.setMode($.STARTER_SELECT),!0),"handler")}):v.push({label:U.t("starterSelectUiHandler:addToFavorites"),handler:T(()=>(F.favorite=!0,g&&g.favoriteIcon.setVisible(F.favorite),p.setMode($.STARTER_SELECT),!0),"handler")}),v.push({label:U.t("menu:rename"),handler:T(()=>{p.playSelect();let Be=F.nickname?String(F.nickname):"";return Be=decodeURIComponent(escape(atob(Be))),p.setModeWithoutClear($.RENAME_POKEMON,{buttonActions:[de=>{p.playSelect(),F.nickname=de;const fe=decodeURIComponent(escape(atob(F.nickname)));fe.length>0?this.pokemonNameText.setText(fe):this.pokemonNameText.setText(this.lastSpecies.name),p.setMode($.STARTER_SELECT)},()=>{p.setMode($.STARTER_SELECT)}]},Be),!0},"handler")});const Ne=H.candyCount,De=T(()=>{const Be=[];if(!(ae&dR.UNLOCKED)){const Ye=YV(CA[this.lastSpecies.speciesId]);Be.push({label:`x${Ye} ${U.t("starterSelectUiHandler:unlockPassive")} (${jA[W0[this.lastSpecies.speciesId]].name})`,handler:T(()=>Ge.FREE_CANDY_UPGRADE_OVERRIDE||Ne>=Ye?(H.passiveAttr|=dR.UNLOCKED|dR.ENABLED,Ge.FREE_CANDY_UPGRADE_OVERRIDE||(H.candyCount-=Ye),this.pokemonCandyCountText.setText(`x${H.candyCount}`),this.scene.gameData.saveSystem().then(Re=>{if(!Re)return this.scene.reset(!0)}),p.setMode($.STARTER_SELECT),this.setSpeciesDetails(this.lastSpecies),this.scene.playSound("se/buy"),g&&(this.updateCandyUpgradeDisplay(g),g.starterPassiveBgs.setVisible(!!this.scene.gameData.starterData[this.lastSpecies.speciesId].passiveAttr)),!0):!1,"handler"),item:"candy",itemArgs:js[this.lastSpecies.speciesId]})}const de=H.valueReduction;if(de<yv){const Ye=pV(CA[this.lastSpecies.speciesId])[de];Be.push({label:`x${Ye} ${U.t("starterSelectUiHandler:reduceCost")}`,handler:T(()=>Ge.FREE_CANDY_UPGRADE_OVERRIDE||Ne>=Ye?(H.valueReduction++,Ge.FREE_CANDY_UPGRADE_OVERRIDE||(H.candyCount-=Ye),this.pokemonCandyCountText.setText(`x${H.candyCount}`),this.scene.gameData.saveSystem().then(Re=>{if(!Re)return this.scene.reset(!0)}),this.tryUpdateValue(0),p.setMode($.STARTER_SELECT),this.scene.playSound("se/buy"),g&&(this.updateStarterValueLabel(g),this.updateCandyUpgradeDisplay(g)),!0):!1,"handler"),item:"candy",itemArgs:js[this.lastSpecies.speciesId]})}const fe=yV(CA[this.lastSpecies.speciesId]);Be.push({label:`x${fe} ${U.t("starterSelectUiHandler:sameSpeciesEgg")}`,handler:T(()=>(this.scene.gameData.eggs.length<99||Ge.UNLIMITED_EGG_COUNT_OVERRIDE)&&(Ge.FREE_CANDY_UPGRADE_OVERRIDE||Ne>=fe)?(Ge.FREE_CANDY_UPGRADE_OVERRIDE||(H.candyCount-=fe),this.pokemonCandyCountText.setText(`x${H.candyCount}`),new PI({scene:this.scene,species:this.lastSpecies.speciesId,sourceType:hE.SAME_SPECIES_EGG}).addEggToGameData(this.scene),this.scene.gameData.saveSystem().then(Re=>{if(!Re)return this.scene.reset(!0)}),p.setMode($.STARTER_SELECT),this.scene.playSound("se/buy"),g&&this.updateCandyUpgradeDisplay(g),!0):!1,"handler"),item:"candy",itemArgs:js[this.lastSpecies.speciesId]}),Be.push({label:U.t("menu:cancel"),handler:T(()=>(p.setMode($.STARTER_SELECT),!0),"handler")}),p.setModeWithoutClear($.OPTION_SELECT,{options:Be,yOffset:47})},"showUseCandies");KA.hasOwnProperty(this.lastSpecies.speciesId)||v.push({label:U.t("starterSelectUiHandler:useCandies"),handler:T(()=>(p.setMode($.STARTER_SELECT).then(()=>De()),!0),"handler")}),v.push({label:U.t("menu:cancel"),handler:T(()=>(p.setMode($.STARTER_SELECT),!0),"handler")}),p.setModeWithoutClear($.OPTION_SELECT,{options:v,yOffset:47}),c=!0}}else{const p=this.scene.gameData.getSpeciesDexAttrProps(this.lastSpecies,this.getCurrentDexProps(this.lastSpecies.speciesId));switch(A){case y.CYCLE_SHINY:if(this.canCycleShiny)if(F.shiny=F.shiny!==void 0?!F.shiny:!1,F.shiny){const v=this.scene.gameData.getSpeciesDexAttrProps(this.lastSpecies,this.getCurrentDexProps(this.lastSpecies.speciesId)),k=F.variant?F.variant:v.variant;this.setSpeciesDetails(this.lastSpecies,!0,void 0,void 0,k,void 0,void 0),this.scene.playSound("se/sparkle");const j=GE(k);this.pokemonShinyIcon.setFrame(Qn(k)),this.pokemonShinyIcon.setTint(j),this.pokemonShinyIcon.setVisible(!0)}else this.setSpeciesDetails(this.lastSpecies,!1,void 0,void 0,0,void 0,void 0),this.pokemonShinyIcon.setVisible(!1),c=!0;break;case y.CYCLE_FORM:if(this.canCycleForm){const v=this.lastSpecies.forms.length;let k=p.formIndex;do if(k=(k+1)%v,this.lastSpecies.forms[k].isStarterSelectable&&this.speciesStarterDexEntry.caughtAttr&this.scene.gameData.getFormAttr(k))break;while(k!==p.formIndex);F.form=k,this.setSpeciesDetails(this.lastSpecies,void 0,k,void 0,void 0,void 0,void 0),c=!0}break;case y.CYCLE_GENDER:this.canCycleGender&&(F.female=!p.female,this.setSpeciesDetails(this.lastSpecies,void 0,void 0,!p.female,void 0,void 0,void 0),c=!0);break;case y.CYCLE_ABILITY:if(this.canCycleAbility){const v=this.lastSpecies.getAbilityCount(),k=this.scene.gameData.starterData[this.lastSpecies.speciesId].abilityAttr,j=k&ns.ABILITY_1;let q=this.abilityCursor;do if(q=(q+1)%v,q===0){if(j)break}else if(q===1){this.lastSpecies.ability1===this.lastSpecies.ability2&&j&&(q=(q+1)%v);break}else if(k&ns.ABILITY_HIDDEN)break;while(q!==this.abilityCursor);F.ability=q;const{visible:ie}=this.scene.ui.getTooltip();if(ie&&this.activeTooltip==="ABILITY"){const z=jA[this.lastSpecies.getAbility(q)];this.scene.ui.editTooltip(`${z.name}`,`${z.description}`)}this.setSpeciesDetails(this.lastSpecies,void 0,void 0,void 0,void 0,q,void 0),c=!0}break;case y.CYCLE_NATURE:if(this.canCycleNature){const v=this.scene.gameData.getNaturesForAttr((_=this.speciesStarterDexEntry)==null?void 0:_.natureAttr),k=v.indexOf(this.natureCursor),j=v[k<v.length-1?k+1:0];F.nature=j,this.setSpeciesDetails(this.lastSpecies,void 0,void 0,void 0,void 0,void 0,j,void 0),c=!0}break;case y.V:if(this.canCycleVariant){let v=p.variant;do if(v=(v+1)%3,v){if(v===1){if(this.speciesStarterDexEntry.caughtAttr&Fe.VARIANT_2)break}else if(this.speciesStarterDexEntry.caughtAttr&Fe.VARIANT_3)break}else if(this.speciesStarterDexEntry.caughtAttr&Fe.DEFAULT_VARIANT)break;while(v!==p.variant);F.variant=v,this.setSpeciesDetails(this.lastSpecies,void 0,void 0,void 0,v,void 0,void 0);const k=GE(v);this.pokemonShinyIcon.setFrame(Qn(v)),this.pokemonShinyIcon.setTint(k),c=!0}break;case y.UP:this.starterIconsCursorObj.visible?(this.starterIconsCursorIndex===0?(this.starterIconsCursorObj.setVisible(!1),this.setSpecies(null),this.filterBarCursor=Math.max(1,this.filterBar.numFilters-1),this.setFilterMode(!0)):(this.starterIconsCursorIndex--,this.moveStarterIconsCursor(this.starterIconsCursorIndex)),c=!0):a>0?(this.scrollCursor>0&&a-this.scrollCursor===0&&(this.scrollCursor--,this.updateScroll()),c=this.setCursor(this.cursor-9)):(this.filterBarCursor=this.filterBar.getNearestFilter(this.filteredStarterContainers[this.cursor]),this.setFilterMode(!0),c=!0);break;case y.DOWN:this.starterIconsCursorObj.visible?(this.starterIconsCursorIndex<=this.starterSpecies.length-2?(this.starterIconsCursorIndex++,this.moveStarterIconsCursor(this.starterIconsCursorIndex)):(this.starterIconsCursorObj.setVisible(!1),this.setSpecies(null),this.startCursorObj.setVisible(!0)),c=!0):a<i-1?(a-this.scrollCursor===8&&this.scrollCursor++,c=this.setCursor(this.cursor+9),this.updateScroll()):i>1?(this.scrollCursor=0,this.updateScroll(),c=this.setCursor(this.cursor%9)):(this.filterBarCursor=this.filterBar.getNearestFilter(this.filteredStarterContainers[this.cursor]),this.setFilterMode(!0),c=!0);break;case y.LEFT:if(!this.starterIconsCursorObj.visible)this.cursor%9!==0?c=this.setCursor(this.cursor-1):(this.starterSpecies.length===0?c=this.setCursor(this.cursor+Math.min(8,I-this.cursor)):D<7?(this.cursorObj.setVisible(!1),this.starterIconsCursorIndex=wv(this.cursorObj.y-1,this.starterSpecies.length),this.moveStarterIconsCursor(this.starterIconsCursorIndex)):(this.cursorObj.setVisible(!1),this.setSpecies(null),this.startCursorObj.setVisible(!0)),c=!0);else if(I>0){const v=Vv(this.starterIconsCursorIndex,l);this.starterIconsCursorObj.setVisible(!1),this.cursorObj.setVisible(!0),this.setCursor(Math.min(L+v*9+8,S)),c=!0}else c=!1;break;case y.RIGHT:if(!this.starterIconsCursorObj.visible)this.cursor%9<(a<i-1?8:(I-1)%9)?c=this.setCursor(this.cursor+1):(this.starterSpecies.length===0?c=this.setCursor(this.cursor-Math.min(8,this.cursor%9)):D<7?(this.cursorObj.setVisible(!1),this.starterIconsCursorIndex=wv(this.cursorObj.y-1,this.starterSpecies.length),this.moveStarterIconsCursor(this.starterIconsCursorIndex)):(this.cursorObj.setVisible(!1),this.setSpecies(null),this.startCursorObj.setVisible(!0)),c=!0);else if(I>0){const v=Vv(this.starterIconsCursorIndex,l);this.starterIconsCursorObj.setVisible(!1),this.cursorObj.setVisible(!0),this.setCursor(Math.min(L+v*9,S-S%9)),c=!0}else c=!1;break}}}return c?M.playSelect():G&&M.playError(),c||G}isInParty(A){let s=0,R=!1;for(let I=0;I<this.starterSpecies.length;I++)if(this.starterSpecies[I]===A){R=!0,s=I;break}return[R,s]}addToParty(A,s,R,I,i){const a=this.scene.gameData.getSpeciesDexAttrProps(A,s);this.starterIcons[this.starterSpecies.length].setTexture(A.getIconAtlasKey(a.formIndex,a.shiny,a.variant)),this.starterIcons[this.starterSpecies.length].setFrame(A.getIconId(a.female,a.formIndex,a.shiny,a.variant)),this.checkIconId(this.starterIcons[this.starterSpecies.length],A,a.female,a.formIndex,a.shiny,a.variant),this.starterSpecies.push(A),this.starterAttr.push(s),this.starterAbilityIndexes.push(R),this.starterNatures.push(I),this.starterMovesets.push(i),this.speciesLoaded.get(A.speciesId)&&GI(A.speciesId,a.formIndex).cry(this.scene),this.updateInstructions()}updatePartyIcon(A,s){const R=this.scene.gameData.getSpeciesDexAttrProps(A,this.getCurrentDexProps(A.speciesId));this.starterIcons[s].setTexture(A.getIconAtlasKey(R.formIndex,R.shiny,R.variant)),this.starterIcons[s].setFrame(A.getIconId(R.female,R.formIndex,R.shiny,R.variant)),this.checkIconId(this.starterIcons[s],A,R.female,R.formIndex,R.shiny,R.variant)}switchMoveHandler(A,s,R){var L,S,o,l,D;const I=this.lastSpecies.speciesId,i=(L=this.starterMoveset)==null?void 0:L.indexOf(s);this.starterMoveset[A]=s,i>-1&&(this.starterMoveset[i]=R);const a=this.scene.gameData.getSpeciesDexAttrProps(this.lastSpecies,this.dexAttrCursor);if(JO.hasOwnProperty(I)){(!this.scene.gameData.starterData[I].moveset||Array.isArray(this.scene.gameData.starterData[I].moveset))&&(this.scene.gameData.starterData[I].moveset={[a.formIndex]:(S=this.starterMoveset)==null?void 0:S.slice(0)});const M=this.scene.gameData.starterData[I].moveset;M.hasOwnProperty(a.formIndex)||(this.scene.gameData.starterData[I].moveset[a.formIndex]=(o=this.starterMoveset)==null?void 0:o.slice(0)),M.hasOwnProperty(a.formIndex)&&M[a.formIndex][i]!==s&&(this.scene.gameData.starterData[I].moveset[a.formIndex]=(l=this.starterMoveset)==null?void 0:l.slice(0))}else this.scene.gameData.starterData[I].moveset=(D=this.starterMoveset)==null?void 0:D.slice(0);this.setSpeciesDetails(this.lastSpecies,void 0,void 0,void 0,void 0,void 0,void 0,!1),this.starterMovesets.length&&Array.from({length:this.starterSpecies.length},(M,c)=>{this.starterSpecies[c].speciesId===I&&(this.starterMovesets[c]=this.starterMoveset)})}updateButtonIcon(A,s,R,I){var a;let i;if(s==="touch")switch(s="keyboard",A){case Je.Button_Cycle_Shiny:i="R.png";break;case Je.Button_Cycle_Form:i="F.png";break;case Je.Button_Cycle_Gender:i="G.png";break;case Je.Button_Cycle_Ability:i="E.png";break;case Je.Button_Cycle_Nature:i="N.png";break;case Je.Button_Cycle_Variant:i="V.png";break;case Je.Button_Stats:i="C.png";break}else i=(a=this.scene.inputController)==null?void 0:a.getIconForLatestInputRecorded(A);R.setTexture(s,i),R.setPosition(this.instructionRowX,this.instructionRowY),I.setPosition(this.instructionRowX+this.instructionRowTextOffset,this.instructionRowY),R.setVisible(!0),I.setVisible(!0),this.instructionsContainer.add([R,I]),this.instructionRowY+=8,this.instructionRowY>=24&&(this.instructionRowY=0,this.instructionRowX+=50)}updateFilterButtonIcon(A,s,R,I){var a;let i;s==="touch"?(s="keyboard",i="C.png"):i=(a=this.scene.inputController)==null?void 0:a.getIconForLatestInputRecorded(A),R.setTexture(s,i),R.setPosition(this.filterInstructionRowX,this.filterInstructionRowY),I.setPosition(this.filterInstructionRowX+this.instructionRowTextOffset,this.filterInstructionRowY),R.setVisible(!0),I.setVisible(!0),this.filterInstructionsContainer.add([R,I]),this.filterInstructionRowY+=8,this.filterInstructionRowY>=24&&(this.filterInstructionRowY=0,this.filterInstructionRowX+=50)}updateInstructions(){var s;this.instructionRowX=0,this.instructionRowY=0,this.filterInstructionRowX=0,this.filterInstructionRowY=0,this.hideInstructions(),this.instructionsContainer.removeAll(),this.filterInstructionsContainer.removeAll();let A;this.scene.inputMethod==="gamepad"?A=this.scene.inputController.getConfig(this.scene.inputController.selectedDevice[Zt.GAMEPAD]).padType:A=this.scene.inputMethod,A&&((s=this.speciesStarterDexEntry)!=null&&s.caughtAttr&&(this.canCycleShiny&&this.updateButtonIcon(Je.Button_Cycle_Shiny,A,this.shinyIconElement,this.shinyLabel),this.canCycleForm&&this.updateButtonIcon(Je.Button_Cycle_Form,A,this.formIconElement,this.formLabel),this.canCycleGender&&this.updateButtonIcon(Je.Button_Cycle_Gender,A,this.genderIconElement,this.genderLabel),this.canCycleAbility&&this.updateButtonIcon(Je.Button_Cycle_Ability,A,this.abilityIconElement,this.abilityLabel),this.canCycleNature&&this.updateButtonIcon(Je.Button_Cycle_Nature,A,this.natureIconElement,this.natureLabel),this.canCycleVariant&&this.updateButtonIcon(Je.Button_Cycle_Variant,A,this.variantIconElement,this.variantLabel)),this.filterMode||this.updateFilterButtonIcon(Je.Button_Stats,A,this.goFilterIconElement,this.goFilterLabel))}getValueLimit(){const A=new Jt(0);switch(this.scene.gameMode.modeId){case tA.ENDLESS:case tA.SPLICED_ENDLESS:A.value=15;break;default:A.value=10}return Is(this.scene.gameMode,JE.STARTER_POINTS,A),A.value}setCursor(A){var R,I;let s=!1;if(this.filterMode)s=this.filterBarCursor!==A,this.filterBarCursor=A,this.filterBar.setCursor(A);else{A=Math.max(Math.min(this.filteredStarterContainers.length-1,A),0),s=super.setCursor(A);const i=rc(A,this.scrollCursor);this.cursorObj.setPosition(i.x-1,i.y+1);const a=(R=this.filteredStarterContainers[A])==null?void 0:R.species;if(a){const L=this.getCurrentDexProps(a.speciesId),S=this.scene.gameData.getSpeciesDexAttrProps(a,L),o=(I=this.starterPreferences[a.speciesId])!=null&&I.variant?this.starterPreferences[a.speciesId].variant:S.variant,l=GE(o);this.pokemonShinyIcon.setFrame(Qn(o)),this.pokemonShinyIcon.setTint(l),this.setSpecies(a),this.updateInstructions()}}return s}setFilterMode(A){return this.cursorObj.setVisible(!A),this.filterBar.cursorObj.setVisible(A),A!==this.filterMode?(this.filterMode=A,this.setCursor(A?this.filterBarCursor:this.cursor),A&&(this.setSpecies(null),this.updateInstructions()),!0):!1}moveStarterIconsCursor(A){this.starterIconsCursorObj.x=this.starterIcons[A].x+this.starterIconsCursorXOffset,this.starterIconsCursorObj.y=this.starterIcons[A].y+this.starterIconsCursorYOffset,this.starterSpecies.length>0?(this.starterIconsCursorObj.setVisible(!0),this.setSpecies(this.starterSpecies[A])):(this.starterIconsCursorObj.setVisible(!1),this.setSpecies(null))}getFriendship(A){let s=this.scene.gameData.starterData[A].friendship;(!s||s===void 0)&&(s=0);const R=D1(CA[A]);return{currentFriendship:s,friendshipCap:R}}setSpecies(A){var R,I,i,a;this.speciesStarterDexEntry=A?this.scene.gameData.dexData[A.speciesId]:null,this.dexAttrCursor=A?this.getCurrentDexProps(A.speciesId):0n,this.abilityCursor=A?this.scene.gameData.getStarterSpeciesDefaultAbilityIndex(A):0,this.natureCursor=A?this.scene.gameData.getSpeciesDefaultNature(A):0,!A&&this.scene.ui.getTooltip().visible&&this.scene.ui.hideTooltip(),this.pokemonAbilityText.off("pointerover"),this.pokemonPassiveText.off("pointerover");const s=A?{...this.starterPreferences[A.speciesId]}:null;if(s!=null&&s.nature&&(this.natureCursor=s.nature),s!=null&&s.ability&&!isNaN(s.ability)&&(this.abilityCursor=s.ability),this.statsMode&&((R=this.speciesStarterDexEntry)!=null&&R.caughtAttr?(this.statsContainer.setVisible(!0),this.showStats()):(this.statsContainer.setVisible(!1),this.statsContainer.updateIvs(null))),this.lastSpecies){const L=this.getCurrentDexProps(this.lastSpecies.speciesId),S=this.scene.gameData.getSpeciesDexAttrProps(this.lastSpecies,L),o=this.allSpecies.indexOf(this.lastSpecies),l=this.starterContainers[o].icon;this.checkIconId(l,this.lastSpecies,S.female,S.formIndex,S.shiny,S.variant),this.iconAnimHandler.addOrUpdate(l,ys.NONE);const D=this.starterContainers[o].icon;this.scene.tweens.getTweensOf(D).forEach(M=>M.resume())}if(this.lastSpecies=A,A&&((I=this.speciesStarterDexEntry)!=null&&I.seenAttr||(i=this.speciesStarterDexEntry)!=null&&i.caughtAttr)){if(this.pokemonNumberText.setText(An(A.speciesId,4)),s!=null&&s.nickname){const L=decodeURIComponent(escape(atob(s.nickname)));this.pokemonNameText.setText(L)}else this.pokemonNameText.setText(A.name);if((a=this.speciesStarterDexEntry)!=null&&a.caughtAttr){const L=js[A.speciesId],S=this.scene.gameData.getDexAttrLuck(this.speciesStarterDexEntry.caughtAttr);this.pokemonLuckText.setVisible(!!S),this.pokemonLuckText.setText(S.toString()),this.pokemonLuckText.setTint(GE(Math.min(S-1,2))),this.pokemonLuckLabelText.setVisible(this.pokemonLuckText.visible);let o=Bn(h[A.growthRate]);const l=o.replace(" ","_");U.exists("growth:"+l)&&(o=U.t("growth:"+l)),this.pokemonGrowthRateText.setText(o),this.pokemonGrowthRateText.setColor(gV(A.growthRate)),this.pokemonGrowthRateText.setShadowColor(gV(A.growthRate,!0)),this.pokemonGrowthRateLabelText.setVisible(!0),this.pokemonUncaughtText.setVisible(!1),this.pokemonAbilityLabelText.setVisible(!0),this.pokemonPassiveLabelText.setVisible(!0),this.pokemonNatureLabelText.setVisible(!0),this.pokemonCaughtCountText.setText(`${this.speciesStarterDexEntry.caughtCount}`),A.speciesId===e.MANAPHY||A.speciesId===e.PHIONE?this.pokemonHatchedIcon.setFrame("manaphy"):this.pokemonHatchedIcon.setFrame(da(A)),this.pokemonHatchedCountText.setText(`${this.speciesStarterDexEntry.hatchedCount}`);const D=this.getCurrentDexProps(A.speciesId),M=this.scene.gameData.getSpeciesDexAttrProps(A,D),c=M.variant,G=GE(c);if(this.pokemonShinyIcon.setFrame(Qn(c)),this.pokemonShinyIcon.setTint(G),this.pokemonShinyIcon.setVisible(M.shiny),this.pokemonCaughtHatchedContainer.setVisible(!0),this.pokemonFormText.setVisible(!0),KA.hasOwnProperty(A.speciesId))this.pokemonCaughtHatchedContainer.setY(16),this.pokemonShinyIcon.setY(135),this.pokemonShinyIcon.setFrame(Qn(c)),[this.pokemonCandyIcon,this.pokemonCandyOverlayIcon,this.pokemonCandyDarknessOverlay,this.pokemonCandyCountText,this.pokemonHatchedIcon,this.pokemonHatchedCountText].map(p=>p.setVisible(!1)),this.pokemonFormText.setY(25);else{this.pokemonCaughtHatchedContainer.setY(25),this.pokemonShinyIcon.setY(117),this.pokemonCandyIcon.setTint(ps(Ns(L[0]))),this.pokemonCandyIcon.setVisible(!0),this.pokemonCandyOverlayIcon.setTint(ps(Ns(L[1]))),this.pokemonCandyOverlayIcon.setVisible(!0),this.pokemonCandyDarknessOverlay.setVisible(!0),this.pokemonCandyCountText.setText(`x${this.scene.gameData.starterData[A.speciesId].candyCount}`),this.pokemonCandyCountText.setVisible(!0),this.pokemonFormText.setY(42),this.pokemonHatchedIcon.setVisible(!0),this.pokemonHatchedCountText.setVisible(!0);const{currentFriendship:p,friendshipCap:v}=this.getFriendship(this.lastSpecies.speciesId),k=16-16*(p/v);this.pokemonCandyDarknessOverlay.visible&&(this.pokemonCandyDarknessOverlay.on("pointerover",()=>{this.scene.ui.showTooltip("",`${p}/${v}`,!0),this.activeTooltip="CANDY"}),this.pokemonCandyDarknessOverlay.on("pointerout",()=>{this.scene.ui.hideTooltip(),this.activeTooltip=void 0})),this.pokemonCandyDarknessOverlay.setCrop(0,0,16,k)}const P=this.allSpecies.indexOf(A),_=this.starterContainers[P].icon;this.isUpgradeAnimationEnabled()&&(this.scene.tweens.getTweensOf(_).forEach(p=>p.pause()),_.x=-2,_.y=2),this.iconAnimHandler.addOrUpdate(_,ys.PASSIVE);const g=this.starterSpecies.indexOf(A);let H;if(g>-1)H=this.scene.gameData.getSpeciesDexAttrProps(A,this.starterAttr[g]),this.setSpeciesDetails(A,H.shiny,H.formIndex,H.female,H.variant,this.starterAbilityIndexes[g],this.starterNatures[g]);else{const p=this.getCurrentDexProps(A.speciesId),v=(s==null?void 0:s.ability)??this.scene.gameData.getStarterSpeciesDefaultAbilityIndex(A),k=(s==null?void 0:s.nature)||this.scene.gameData.getSpeciesDefaultNature(A);H=this.scene.gameData.getSpeciesDexAttrProps(A,p),s!=null&&s.variant&&!isNaN(s.variant)&&H.shiny&&(H.variant=s.variant),H.formIndex=(s==null?void 0:s.form)??H.formIndex,H.female=(s==null?void 0:s.female)??H.female,this.setSpeciesDetails(A,H.shiny,H.formIndex,H.female,H.variant,v,k)}const F=GI(A.speciesId,H.formIndex);this.setTypeIcons(F.type1,F.type2),this.pokemonSprite.clearTint(),this.pokerusSpecies.includes(A)&&fI(this.scene,yR.Pokerus)}else{this.pokemonGrowthRateText.setText(""),this.pokemonGrowthRateLabelText.setVisible(!1),this.type1Icon.setVisible(!1),this.type2Icon.setVisible(!1),this.pokemonLuckLabelText.setVisible(!1),this.pokemonLuckText.setVisible(!1),this.pokemonShinyIcon.setVisible(!1),this.pokemonUncaughtText.setVisible(!0),this.pokemonAbilityLabelText.setVisible(!1),this.pokemonPassiveLabelText.setVisible(!1),this.pokemonNatureLabelText.setVisible(!1),this.pokemonCaughtHatchedContainer.setVisible(!1),this.pokemonCandyIcon.setVisible(!1),this.pokemonCandyOverlayIcon.setVisible(!1),this.pokemonCandyDarknessOverlay.setVisible(!1),this.pokemonCandyCountText.setVisible(!1),this.pokemonFormText.setVisible(!1);const L=this.scene.gameData.getSpeciesDefaultDexAttr(A,!0,!0),S=this.scene.gameData.getStarterSpeciesDefaultAbilityIndex(A),o=this.scene.gameData.getSpeciesDefaultNature(A),l=this.scene.gameData.getSpeciesDexAttrProps(A,L);this.setSpeciesDetails(A,l.shiny,l.formIndex,l.female,l.variant,S,o,!0),this.pokemonSprite.setTint(8421504)}}else this.pokemonNumberText.setText(An(0,4)),this.pokemonNameText.setText(A?"???":""),this.pokemonGrowthRateText.setText(""),this.pokemonGrowthRateLabelText.setVisible(!1),this.type1Icon.setVisible(!1),this.type2Icon.setVisible(!1),this.pokemonLuckLabelText.setVisible(!1),this.pokemonLuckText.setVisible(!1),this.pokemonShinyIcon.setVisible(!1),this.pokemonUncaughtText.setVisible(!!A),this.pokemonAbilityLabelText.setVisible(!1),this.pokemonPassiveLabelText.setVisible(!1),this.pokemonNatureLabelText.setVisible(!1),this.pokemonCaughtHatchedContainer.setVisible(!1),this.pokemonCandyIcon.setVisible(!1),this.pokemonCandyOverlayIcon.setVisible(!1),this.pokemonCandyDarknessOverlay.setVisible(!1),this.pokemonCandyCountText.setVisible(!1),this.pokemonFormText.setVisible(!1),this.setSpeciesDetails(A,!1,0,!1,0,0,0),this.pokemonSprite.clearTint()}setSpeciesDetails(A,s,R,I,i,a,L,S=!1){var c,G,P,_,g,H;const o=A?this.scene.gameData.getSpeciesDexAttrProps(A,this.dexAttrCursor):null,l=this.abilityCursor>-1?this.abilityCursor:this.scene.gameData.getStarterSpeciesDefaultAbilityIndex(A),D=this.natureCursor>-1?this.natureCursor:this.scene.gameData.getSpeciesDefaultNature(A);if(this.dexAttrCursor=0n,this.abilityCursor=-1,this.natureCursor=-1,this.activeTooltip==="CANDY")if(this.lastSpecies){const{currentFriendship:F,friendshipCap:p}=this.getFriendship(this.lastSpecies.speciesId);this.scene.ui.editTooltip("",`${F}/${p}`)}else this.scene.ui.hideTooltip();if((c=A==null?void 0:A.forms)!=null&&c.find(F=>F.formKey==="female")&&(I!==void 0?R=I?1:0:R!==void 0&&(I=R===1)),A){this.dexAttrCursor|=(s!==void 0?!s:!(s=o==null?void 0:o.shiny))?Fe.NON_SHINY:Fe.SHINY,this.dexAttrCursor|=(I!==void 0?!I:!(I=o==null?void 0:o.female))?Fe.MALE:Fe.FEMALE,this.dexAttrCursor|=(i!==void 0?!i:!(i=o==null?void 0:o.variant))?Fe.DEFAULT_VARIANT:i===1?Fe.VARIANT_2:Fe.VARIANT_3,this.dexAttrCursor|=this.scene.gameData.getFormAttr(R!==void 0?R:R=o.formIndex),this.abilityCursor=a!==void 0?a:a=l,this.natureCursor=L!==void 0?L:L=D;const[F,p]=this.isInParty(A);F&&this.updatePartyIcon(A,p)}if(this.pokemonSprite.setVisible(!1),this.pokemonPassiveLabelText.setVisible(!1),this.pokemonPassiveText.setVisible(!1),this.pokemonPassiveDisabledIcon.setVisible(!1),this.pokemonPassiveLockedIcon.setVisible(!1),this.assetLoadCancelled&&(this.assetLoadCancelled.value=!0,this.assetLoadCancelled=null),this.starterMoveset=null,this.speciesStarterMoves=[],A){const F=this.scene.gameData.dexData[A.speciesId],p=this.scene.gameData.starterData[A.speciesId].abilityAttr,v=((G=this.scene.gameData.dexData[A.speciesId])==null?void 0:G.caughtAttr)||BigInt(0);if(!F.caughtAttr){const k=this.scene.gameData.getSpeciesDexAttrProps(A,this.getCurrentDexProps(A.speciesId)),j=this.scene.gameData.getStarterSpeciesDefaultAbilityIndex(A),q=this.scene.gameData.getSpeciesDefaultNature(A);(s===void 0||s!==k.shiny)&&(s=k.shiny),(R===void 0||R!==k.formIndex)&&(R=k.formIndex),(I===void 0||I!==k.female)&&(I=k.female),(i===void 0||i!==k.variant)&&(i=k.variant),(a===void 0||a!==j)&&(a=j),(L===void 0||L!==q)&&(L=q)}if(this.shinyOverlay.setVisible(s??!1),this.pokemonNumberText.setColor(this.getTextColor(s?V.SUMMARY_GOLD:V.SUMMARY,!1)),this.pokemonNumberText.setShadowColor(this.getTextColor(s?V.SUMMARY_GOLD:V.SUMMARY,!0)),S?(P=this.speciesStarterDexEntry)!=null&&P.seenAttr:(_=this.speciesStarterDexEntry)!=null&&_.caughtAttr){const k=this.starterSpecies.indexOf(A);k>-1&&(this.starterAttr[k]=this.dexAttrCursor,this.starterAbilityIndexes[k]=this.abilityCursor,this.starterNatures[k]=this.natureCursor);const j=new je(!1);this.assetLoadCancelled=j,A.loadAssets(this.scene,I,R,s,i,!0).then(()=>{j.value||(this.assetLoadCancelled=null,this.speciesLoaded.set(A.speciesId,!0),this.pokemonSprite.play(A.getSpriteKey(I,R,s,i)),this.pokemonSprite.setPipelineData("shiny",s),this.pokemonSprite.setPipelineData("variant",i),this.pokemonSprite.setPipelineData("spriteKey",A.getSpriteKey(I,R,s,i)),this.pokemonSprite.setVisible(!this.statsMode))});const q=new je(!0);Is(this.scene.gameMode,JE.STARTER_CHOICE,A,q,this.scene.gameData.getSpeciesDexAttrProps(A,this.dexAttrCursor),!!this.starterSpecies.length);const ie=this.filteredStarterContainers.find(Re=>Re.species.speciesId===A.speciesId);ie&&(ie.icon.setTexture(A.getIconAtlasKey(R,s,i),A.getIconId(I,R,s,i)),ie.checkIconId(I,R,s,i));const z=!!(v&Fe.NON_SHINY),Oe=!!(v&Fe.SHINY),ae=Oe&&!!(v&Fe.DEFAULT_VARIANT),Le=Oe&&!!(v&Fe.VARIANT_2),Ne=Oe&&!!(v&Fe.VARIANT_3);this.canCycleShiny=z&&Oe,this.canCycleVariant=!!s&&[ae,Le,Ne].filter(Re=>Re).length>1;const De=!!(v&Fe.MALE),Be=!!(v&Fe.FEMALE);this.canCycleGender=De&&Be;const de=p&ns.ABILITY_1;let fe=p&ns.ABILITY_2;const Ye=p&ns.ABILITY_HIDDEN;de&&fe&&A.ability1===A.ability2&&(fe=0),this.canCycleAbility=[de,fe,Ye].filter(Re=>Re).length>1,this.canCycleForm=A.forms.filter(Re=>{var Ie;return Re.isStarterSelectable||!((Ie=mO[A.speciesId])!=null&&Ie.find(oe=>oe.formKey))}).map((Re,Ie)=>F.caughtAttr&this.scene.gameData.getFormAttr(Ie)).filter(Re=>Re).length>1,this.canCycleNature=this.scene.gameData.getNaturesForAttr(F.natureAttr).length>1}if(F.caughtAttr&&A.malePercent!==null){const k=I?ye.FEMALE:ye.MALE;this.pokemonGenderText.setText($L(k)),this.pokemonGenderText.setColor(gn(k)),this.pokemonGenderText.setShadowColor(gn(k,!0))}else this.pokemonGenderText.setText("");if(F.caughtAttr){const k=jA[this.lastSpecies.getAbility(a)];this.pokemonAbilityText.setText(k.name);const j=a===(this.lastSpecies.ability2?2:1);this.pokemonAbilityText.setColor(this.getTextColor(j?V.SUMMARY_GOLD:V.SUMMARY_ALT)),this.pokemonAbilityText.setShadowColor(this.getTextColor(j?V.SUMMARY_GOLD:V.SUMMARY_ALT,!0));const q=this.scene.gameData.starterData[A.speciesId].passiveAttr,ie=jA[W0[this.lastSpecies.speciesId]];if(this.pokemonAbilityText.visible&&(this.activeTooltip==="ABILITY"&&this.scene.ui.editTooltip(`${k.name}`,`${k.description}`),this.pokemonAbilityText.on("pointerover",()=>{this.scene.ui.showTooltip(`${k.name}`,`${k.description}`,!0),this.activeTooltip="ABILITY"}),this.pokemonAbilityText.on("pointerout",()=>{this.scene.ui.hideTooltip(),this.activeTooltip=void 0})),ie){const de=!!(q&dR.UNLOCKED),fe=!!(q&dR.ENABLED),Ye=de&&fe?V.SUMMARY_ALT:V.SUMMARY_GRAY,Re=de&&fe?1:.5;this.pokemonPassiveLabelText.setVisible(!0),this.pokemonPassiveLabelText.setColor(this.getTextColor(V.SUMMARY_ALT)),this.pokemonPassiveLabelText.setShadowColor(this.getTextColor(V.SUMMARY_ALT,!0)),this.pokemonPassiveText.setVisible(!0),this.pokemonPassiveText.setText(ie.name),this.pokemonPassiveText.setColor(this.getTextColor(Ye)),this.pokemonPassiveText.setAlpha(Re),this.pokemonPassiveText.setShadowColor(this.getTextColor(Ye,!0)),this.activeTooltip==="PASSIVE"&&this.scene.ui.editTooltip(`${ie.name}`,`${ie.description}`),this.pokemonPassiveText.visible&&(this.pokemonPassiveText.on("pointerover",()=>{this.scene.ui.showTooltip(`${ie.name}`,`${ie.description}`,!0),this.activeTooltip="PASSIVE"}),this.pokemonPassiveText.on("pointerout",()=>{this.scene.ui.hideTooltip(),this.activeTooltip=void 0}));const Ie={x:this.pokemonPassiveText.x+this.pokemonPassiveText.displayWidth+1,y:this.pokemonPassiveText.y+this.pokemonPassiveText.displayHeight/2};this.pokemonPassiveDisabledIcon.setVisible(de&&!fe),this.pokemonPassiveDisabledIcon.setPosition(Ie.x,Ie.y),this.pokemonPassiveLockedIcon.setVisible(!de),this.pokemonPassiveLockedIcon.setPosition(Ie.x,Ie.y)}this.pokemonNatureText.setText(WO(L,!0,!0,!1,this.scene.uiTheme));let z;if(JO.hasOwnProperty(A.speciesId)&&R&&JO[A.speciesId].hasOwnProperty(R)?z=JO[A.speciesId][R]:z=m0[A.speciesId],this.speciesStarterMoves.push(...z.filter(de=>de[0]>0&&de[0]<=5).map(de=>de[1])),oE.hasOwnProperty(A.speciesId))for(let de=0;de<4;de++)this.scene.gameData.starterData[A.speciesId].eggMoves&1<<de&&this.speciesStarterMoves.push(oE[A.speciesId][de]);const Oe=this.scene.gameData.starterData[A.speciesId].moveset,ae=Oe?Array.isArray(Oe)?Oe:Oe[R]:null,Le=this.speciesStarterMoves.concat(oE.hasOwnProperty(A.speciesId)?oE[A.speciesId].filter((de,fe)=>this.scene.gameData.starterData[A.speciesId].eggMoves&1<<fe):[]);this.starterMoveset=(ae||this.speciesStarterMoves.slice(0,4)).filter(de=>Le.find(fe=>fe===de)),this.starterMoveset.length<4&&this.starterMoveset.length<Le.length&&this.starterMoveset.push(...Le.filter(de=>{var fe;return((fe=this.starterMoveset)==null?void 0:fe.indexOf(de))===-1}).slice(0,4-this.starterMoveset.length)),this.starterMoveset=this.starterMoveset.filter((de,fe)=>{var Ye;return((Ye=this.starterMoveset)==null?void 0:Ye.indexOf(de))===fe});const Ne=GI(A.speciesId,R),De=qo((g=A==null?void 0:A.forms[R])==null?void 0:g.formKey,"-",!1,!1),Be=qo(e[A.speciesId],"_",!0,!1);A.speciesId===e.ARCEUS?this.pokemonFormText.setText(U.t(`pokemonInfo:Type.${De==null?void 0:De.toUpperCase()}`)):this.pokemonFormText.setText(De?U.t(`pokemonForm:${Be}${De}`):""),this.setTypeIcons(Ne.type1,Ne.type2)}else this.pokemonAbilityText.setText(""),this.pokemonPassiveText.setText(""),this.pokemonNatureText.setText(""),this.setTypeIcons(null,null)}else this.shinyOverlay.setVisible(!1),this.pokemonNumberText.setColor(this.getTextColor(V.SUMMARY)),this.pokemonNumberText.setShadowColor(this.getTextColor(V.SUMMARY,!0)),this.pokemonGenderText.setText(""),this.pokemonAbilityText.setText(""),this.pokemonPassiveText.setText(""),this.pokemonNatureText.setText(""),this.setTypeIcons(null,null);this.starterMoveset||(this.starterMoveset=this.speciesStarterMoves.slice(0,4));for(let F=0;F<4;F++){const p=F<this.starterMoveset.length?He[this.starterMoveset[F]]:null;this.pokemonMoveBgs[F].setFrame(n[p?p.type:n.UNKNOWN].toString().toLowerCase()),this.pokemonMoveLabels[F].setText(p?p.name:"-"),this.pokemonMoveContainers[F].setVisible(!!p)}const M=A&&oE.hasOwnProperty(A.speciesId);for(let F=0;F<4;F++){const p=M?He[oE[A.speciesId][F]]:null,v=p&&this.scene.gameData.starterData[A.speciesId].eggMoves&1<<F;this.pokemonEggMoveBgs[F].setFrame(n[p?p.type:n.UNKNOWN].toString().toLowerCase()),this.pokemonEggMoveLabels[F].setText(p&&v?p.name:"???")}this.pokemonEggMovesContainer.setVisible(!!((H=this.speciesStarterDexEntry)!=null&&H.caughtAttr)&&M),this.pokemonAdditionalMoveCountLabel.setText(`(+${Math.max(this.speciesStarterMoves.length-4,0)})`),this.pokemonAdditionalMoveCountLabel.setVisible(this.speciesStarterMoves.length>4),this.tryUpdateValue(),this.updateInstructions()}setTypeIcons(A,s){A!==null?(this.type1Icon.setVisible(!0),this.type1Icon.setFrame(n[A].toLowerCase())):this.type1Icon.setVisible(!1),s!==null?(this.type2Icon.setVisible(!0),this.type2Icon.setFrame(n[s].toLowerCase())):this.type2Icon.setVisible(!1)}popStarter(A){this.starterSpecies.splice(A,1),this.starterAttr.splice(A,1),this.starterAbilityIndexes.splice(A,1),this.starterNatures.splice(A,1),this.starterMovesets.splice(A,1);for(let s=0;s<this.starterSpecies.length;s++){const R=this.starterSpecies[s],I=this.getCurrentDexProps(R.speciesId),i=this.scene.gameData.getSpeciesDexAttrProps(R,I);this.starterIcons[s].setTexture(R.getIconAtlasKey(i.formIndex,i.shiny,i.variant)),this.starterIcons[s].setFrame(R.getIconId(i.female,i.formIndex,i.shiny,i.variant)),this.checkIconId(this.starterIcons[s],R,i.female,i.formIndex,i.shiny,i.variant),s>=A&&(this.starterCursorObjs[s].setPosition(this.starterCursorObjs[s+1].x,this.starterCursorObjs[s+1].y),this.starterCursorObjs[s].setVisible(this.starterCursorObjs[s+1].visible))}this.starterCursorObjs[this.starterSpecies.length].setVisible(!1),this.starterIcons[this.starterSpecies.length].setTexture("pokemon_icons_0"),this.starterIcons[this.starterSpecies.length].setFrame("unknown"),this.starterIconsCursorObj.visible?(this.starterIconsCursorIndex===this.starterSpecies.length&&(this.starterSpecies.length>0?this.starterIconsCursorIndex--:(this.starterIconsCursorObj.setVisible(!1),this.setSpecies(null),this.filterBarCursor=Math.max(1,this.filterBar.numFilters-1),this.setFilterMode(!0))),this.moveStarterIconsCursor(this.starterIconsCursorIndex)):this.startCursorObj.visible&&this.starterSpecies.length===0&&(this.startCursorObj.setVisible(!1),this.filteredStarterContainers.length>0?(this.cursorObj.setVisible(!0),this.setCursor(0+this.scrollCursor*9)):(this.filterBarCursor=Math.max(1,this.filterBar.numFilters-1),this.setFilterMode(!0))),this.tryUpdateValue()}updateStarterValueLabel(A){const s=A.species.speciesId,R=CA[s],I=this.scene.gameData.getSpeciesStarterValue(s);A.cost=I;let i=I.toString();i.startsWith("0.")&&(i=i.slice(1)),A.label.setText(i);let a;switch(R-I){case 0:a=V.WINDOW;break;case 1:case .5:a=V.SUMMARY_BLUE;break;default:a=V.SUMMARY_GOLD;break}R-I>0&&(A.label.setColor(this.getTextColor(a)),A.label.setShadowColor(this.getTextColor(a,!0)))}tryUpdateValue(A,s){const I=this.starterSpecies.map(l=>l.generation).reduce((l,D,M)=>l+=this.scene.gameData.getSpeciesStarterValue(this.starterSpecies[M].speciesId),0)+(A||0),i=this.getValueLimit(),a=I>i;let L=I.toString();if(L.startsWith("0.")&&(L=L.slice(1)),this.valueLimitLabel.setText(`${L}/${i}`),this.valueLimitLabel.setColor(this.getTextColor(a?V.SUMMARY_PINK:V.TOOLTIP_CONTENT)),this.valueLimitLabel.setShadowColor(this.getTextColor(a?V.SUMMARY_PINK:V.TOOLTIP_CONTENT,!0)),a)return this.scene.time.delayedCall(Ve(500),()=>this.tryUpdateValue()),!1;let S=this.isPartyValid();if(s){const l=new je(!0),D=this.filteredStarterContainers[this.cursor].species;Is(this.scene.gameMode,JE.STARTER_CHOICE,D,l,this.scene.gameData.getSpeciesDexAttrProps(D,this.getCurrentDexProps(D.speciesId)),!1),S=S||l.value}this.canAddParty=!1;const o=i-I;for(let l=0;l<this.allSpecies.length;l++){const D=this.scene.gameData.getSpeciesStarterValue(this.allSpecies[l].speciesId),M=this.scene.gameData.dexData[this.allSpecies[l].speciesId],c=this.starterContainers[l].icon,G=new je(!0);Is(this.scene.gameMode,JE.STARTER_CHOICE,this.allSpecies[l],G,this.scene.gameData.getSpeciesDexAttrProps(this.allSpecies[l],this.getCurrentDexProps(this.allSpecies[l].speciesId)),S);const P=o>=D&&G.value,_=this.isInParty(this.allSpecies[l])[0];P||_&&o>=D?(c.setAlpha(1),M!=null&&M.caughtAttr&&(this.canAddParty=!0)):c.setAlpha(.375)}return this.value=I,!0}tryExit(){this.blockInput=!0;const A=this.getUi(),s=T(()=>{A.setMode($.STARTER_SELECT),this.clearText(),this.blockInput=!1},"cancel");return A.showText(U.t("starterSelectUiHandler:confirmExit"),null,()=>{A.setModeWithoutClear($.CONFIRM,()=>{var R;A.setMode($.STARTER_SELECT),this.scene.clearPhaseQueue(),this.scene.gameMode.isChallenge?(this.scene.pushPhase(new pl(this.scene)),this.scene.pushPhase(new UL(this.scene,!1))):this.scene.pushPhase(new Yi(this.scene)),this.clearText(),(R=this.scene.getCurrentPhase())==null||R.end()},s,null,null,19)}),!0}tryStart(A=!1){if(!this.starterSpecies.length)return!1;const s=this.getUi(),R=T(()=>{s.setMode($.STARTER_SELECT),A||this.popStarter(this.starterSpecies.length-1),this.clearText()},"cancel");if(this.isPartyValid())s.showText(U.t("starterSelectUiHandler:confirmStartTeam"),null,()=>{s.setModeWithoutClear($.CONFIRM,()=>{T(()=>{this.scene.money=this.scene.gameMode.getStartingMoney(),s.setMode($.STARTER_SELECT);const a=this,L=this.starterSelectCallback;this.starterSelectCallback=null,L&&L(new Array(this.starterSpecies.length).fill(0).map(function(S,o){var D;const l=a.starterSpecies[o];return{species:l,dexAttr:a.starterAttr[o],abilityIndex:a.starterAbilityIndexes[o],passive:!(a.scene.gameData.starterData[l.speciesId].passiveAttr^(dR.ENABLED|dR.UNLOCKED)),nature:a.starterNatures[o],moveset:a.starterMovesets[o],pokerus:a.pokerusSpecies.includes(l),nickname:(D=a.starterPreferences[l.speciesId])==null?void 0:D.nickname}}))},"startRun")()},R,null,null,19)});else{const i=this.scene.ui.getHandler();i.tutorialActive=!0,this.scene.ui.showText(U.t("starterSelectUiHandler:invalidParty"),null,()=>this.scene.ui.showText("",0,()=>i.tutorialActive=!1),null,!0)}return!0}isPartyValid(){let A=!1;for(let s=0;s<this.starterSpecies.length;s++){const R=new je(!0),I=this.starterSpecies[s];Is(this.scene.gameMode,JE.STARTER_CHOICE,I,R,this.scene.gameData.getSpeciesDexAttrProps(I,this.getCurrentDexProps(I.speciesId)),!1),A=A||R.value}return A}getCurrentDexProps(A){var I,i,a,L,S,o,l;let s=0n;const R=this.scene.gameData.dexData[A].caughtAttr;return(I=this.starterPreferences[A])!=null&&I.female||(R&Fe.FEMALE)>0n&&(R&Fe.MALE)===0n?s+=Fe.FEMALE:s+=Fe.MALE,(i=this.starterPreferences[A])!=null&&i.shiny||(R&Fe.SHINY)>0n&&((a=this.starterPreferences[A])==null?void 0:a.shiny)!==!1?(s+=Fe.SHINY,((L=this.starterPreferences[A])==null?void 0:L.variant)!==void 0?s+=BigInt(Math.pow(2,(S=this.starterPreferences[A])==null?void 0:S.variant))*Fe.DEFAULT_VARIANT:(R&Fe.VARIANT_3)>0?s+=Fe.VARIANT_3:(R&Fe.VARIANT_2)>0?s+=Fe.VARIANT_2:s+=Fe.DEFAULT_VARIANT):(s+=Fe.NON_SHINY,s+=Fe.DEFAULT_VARIANT),(o=this.starterPreferences[A])!=null&&o.form?s+=BigInt(Math.pow(2,(l=this.starterPreferences[A])==null?void 0:l.form))*Fe.DEFAULT_FORM:s+=this.scene.gameData.getFormAttr(this.scene.gameData.getFormIndex(R)),s}toggleStatsMode(A){var s;A===void 0&&(A=!this.statsMode),A?(this.showStats(),this.statsMode=!0,this.pokemonSprite.setVisible(!1)):(this.statsMode=!1,this.statsContainer.setVisible(!1),this.pokemonSprite.setVisible(!!((s=this.speciesStarterDexEntry)!=null&&s.caughtAttr)),this.statsContainer.updateIvs(null))}showStats(){this.speciesStarterDexEntry&&(this.statsContainer.setVisible(!0),this.statsContainer.updateIvs(this.speciesStarterDexEntry.ivs))}clearText(){this.starterSelectMessageBoxContainer.setVisible(!1),super.clearText()}hideInstructions(){this.shinyIconElement.setVisible(!1),this.shinyLabel.setVisible(!1),this.formIconElement.setVisible(!1),this.formLabel.setVisible(!1),this.genderIconElement.setVisible(!1),this.genderLabel.setVisible(!1),this.abilityIconElement.setVisible(!1),this.abilityLabel.setVisible(!1),this.natureIconElement.setVisible(!1),this.natureLabel.setVisible(!1),this.variantIconElement.setVisible(!1),this.variantLabel.setVisible(!1),this.goFilterIconElement.setVisible(!1),this.goFilterLabel.setVisible(!1)}clear(){for(super.clear(),cC.save(this.starterPreferences),this.cursor=-1,this.hideInstructions(),this.activeTooltip=void 0,this.scene.ui.hideTooltip(),this.starterSelectContainer.setVisible(!1),this.blockInput=!1;this.starterSpecies.length;)this.popStarter(this.starterSpecies.length-1);this.statsMode&&this.toggleStatsMode(!1)}checkIconId(A,s,R,I,i,a){A.frame.name!==s.getIconId(R,I,i,a)&&(`${s.name}${A.frame.name}${R}${I}${i}${a}`,A.setTexture(s.getIconAtlasKey(I,!1,a)),A.setFrame(s.getIconId(R,I,!1,a)))}};T(IK,"StarterSelectUiHandler");let VT=IK;const iK=class iK extends os{constructor(A){super(A,$.TARGET_SELECT),this.isMultipleTargets=!1,this.targetBattleInfoMoveTween=[],this.cursor=-1}setup(){}show(A){if(A.length<3)return!1;super.show(A),this.fieldIndex=A[0],this.move=A[1],this.targetSelectCallback=A[2];const s=xn(this.scene.getPlayerField()[this.fieldIndex],this.move);return this.targets=s.targets,this.isMultipleTargets=s.multiple??!1,this.targets.length?(this.enemyModifiers=this.scene.getModifierBar(!0),this.setCursor(this.targets.includes(this.cursor)?this.cursor:this.targets[0]),!0):!1}processInput(A){const s=this.getUi();let R=!1;if(A===y.ACTION||A===y.CANCEL){const I=this.isMultipleTargets?this.targets:[this.cursor];this.targetSelectCallback(A===y.ACTION?I:[]),R=!0}else if(this.isMultipleTargets)R=!1;else switch(A){case y.UP:this.cursor<Ct.ENEMY&&this.targets.findIndex(I=>I>=Ct.ENEMY)>-1&&(R=this.setCursor(this.targets.find(I=>I>=Ct.ENEMY)));break;case y.DOWN:this.cursor>=Ct.ENEMY&&this.targets.findIndex(I=>I<Ct.ENEMY)>-1&&(R=this.setCursor(this.targets.find(I=>I<Ct.ENEMY)));break;case y.LEFT:this.cursor%2&&this.targets.findIndex(I=>I===this.cursor-1)>-1&&(R=this.setCursor(this.cursor-1));break;case y.RIGHT:!(this.cursor%2)&&this.targets.findIndex(I=>I===this.cursor+1)>-1&&(R=this.setCursor(this.cursor+1));break}return R&&s.playSelect(),R}setCursor(A){const s=this.scene.getField()[A],R=this.targets.map(a=>this.scene.getField()[a]);this.targetsHighlighted=this.isMultipleTargets?R:[s];const I=super.setCursor(A);if(this.targetFlashTween){this.targetFlashTween.stop();for(const a of R)a.setAlpha(a.getTag(lE)?.5:1),this.highlightItems(a.id,1)}if(this.targetFlashTween=this.scene.tweens.add({targets:this.targetsHighlighted,key:{start:1,to:.25},loop:-1,loopDelay:150,duration:Ve(450),ease:"Sine.easeInOut",yoyo:!0,onUpdate:T(a=>{for(const L of this.targetsHighlighted)L.setAlpha(a.getValue()),this.highlightItems(L.id,a.getValue())},"onUpdate")}),this.targetBattleInfoMoveTween.length>=1){this.targetBattleInfoMoveTween.filter(a=>a!==void 0).forEach(a=>a.stop());for(const a of R)a.getBattleInfo().resetY()}return this.targetsHighlighted.map(a=>a.getBattleInfo()).map(a=>{this.targetBattleInfoMoveTween.push(this.scene.tweens.add({targets:[a],y:{start:a.getBaseY(),to:a.getBaseY()+1},loop:-1,duration:Ve(250),ease:"Linear",yoyo:!0}))}),I}eraseCursor(){this.targetFlashTween&&(this.targetFlashTween.stop(),this.targetFlashTween=null);for(const A of this.targetsHighlighted)A.setAlpha(A.getTag(lE)?.5:1),this.highlightItems(A.id,1);this.targetBattleInfoMoveTween.length>=1&&(this.targetBattleInfoMoveTween.filter(A=>A!==void 0).forEach(A=>A.stop()),this.targetBattleInfoMoveTween=[]);for(const A of this.targetsHighlighted)A.getBattleInfo().resetY()}highlightItems(A,s){const R=this.enemyModifiers.getAll("name",A.toString());for(const I of R)I.setAlpha(s)}clear(){super.clear(),this.eraseCursor()}};T(iK,"TargetSelectUiHandler");let Nc=iK;var vT=(E=>(E[E.NONE=0]="NONE",E.LINEAR="Linear",E.QUADRATIC="Quad",E.CUBIC="Cubic",E.QUARTIC="Quart",E.QUINTIC="Quint",E.SINUSOIDAL="Sine",E.EXPONENTIAL="Expo",E.CIRCULAR="Circ",E.ELASTIC="Elastic",E.BACK="Back",E.BOUNCE="Bounce",E.STEPPED="Stepped",E))(vT||{});function s9(E){return aR()||LR(),U.t(E)}T(s9,"getTranslation");const Ir=new Array(11).fill(null).map((E,A)=>A?{value:(A*10).toString(),label:(A*10).toString()}:{value:"Mute",label:s9("settings:mute")}),R9=new Array(9).fill(null).map((E,A)=>{const s=((A+1)*10).toString();return{value:s,label:s}}),HR=[{value:"Off",label:U.t("settings:off")},{value:"On",label:U.t("settings:on")}],vv=[{value:"Auto",label:U.t("settings:auto")},{value:"Disabled",label:U.t("settings:disabled")}],Y6=[{value:"Rewards",label:U.t("settings:rewards")},{value:"Shop",label:U.t("settings:shop")},{value:"Reroll",label:U.t("settings:reroll")},{value:"Check Team",label:U.t("settings:checkTeam")}],O9=Y6.map(E=>{switch(E.value){case"Rewards":return _n.REWARDS;case"Shop":return _n.SHOP;case"Reroll":return _n.REROLL;case"Check Team":return _n.CHECK_TEAM;default:throw new Error(`Unknown value: ${E.value}`)}});var VM=(E=>(E[E.GENERAL=0]="GENERAL",E[E.DISPLAY=1]="DISPLAY",E[E.AUDIO=2]="AUDIO",E))(VM||{});const Qe={Game_Speed:"GAME_SPEED",HP_Bar_Speed:"HP_BAR_SPEED",EXP_Gains_Speed:"EXP_GAINS_SPEED",EXP_Party_Display:"EXP_PARTY_DISPLAY",Skip_Seen_Dialogues:"SKIP_SEEN_DIALOGUES",Egg_Skip:"EGG_SKIP",Battle_Style:"BATTLE_STYLE",Enable_Retries:"ENABLE_RETRIES",Hide_IVs:"HIDE_IVS",Tutorials:"TUTORIALS",Touch_Controls:"TOUCH_CONTROLS",Vibration:"VIBRATION",Language:"LANGUAGE",UI_Theme:"UI_THEME",Window_Type:"WINDOW_TYPE",Money_Format:"MONEY_FORMAT",Damage_Numbers:"DAMAGE_NUMBERS",Move_Animations:"MOVE_ANIMATIONS",Show_Stats_on_Level_Up:"SHOW_LEVEL_UP_STATS",Shop_Cursor_Target:"SHOP_CURSOR_TARGET",Candy_Upgrade_Notification:"CANDY_UPGRADE_NOTIFICATION",Candy_Upgrade_Display:"CANDY_UPGRADE_DISPLAY",Move_Info:"MOVE_INFO",Show_Moveset_Flyout:"SHOW_MOVESET_FLYOUT",Show_Arena_Flyout:"SHOW_ARENA_FLYOUT",Show_Time_Of_Day_Widget:"SHOW_TIME_OF_DAY_WIDGET",Time_Of_Day_Animation:"TIME_OF_DAY_ANIMATION",Sprite_Set:"SPRITE_SET",Fusion_Palette_Swaps:"FUSION_PALETTE_SWAPS",Player_Gender:"PLAYER_GENDER",Type_Hints:"TYPE_HINTS",Master_Volume:"MASTER_VOLUME",BGM_Volume:"BGM_VOLUME",Field_Volume:"FIELD_VOLUME",SE_Volume:"SE_VOLUME",UI_Volume:"UI_SOUND_EFFECTS",Music_Preference:"MUSIC_PREFERENCE",Show_BGM_Bar:"SHOW_BGM_BAR",Move_Touch_Controls:"MOVE_TOUCH_CONTROLS",Shop_Overlay_Opacity:"SHOP_OVERLAY_OPACITY"},GA=[{key:Qe.Game_Speed,label:U.t("settings:gameSpeed"),options:[{value:"1",label:"1x"},{value:"1.25",label:"1.25x"},{value:"1.5",label:"1.5x"},{value:"2",label:"2x"},{value:"2.5",label:"2.5x"},{value:"3",label:"3x"},{value:"4",label:"4x"},{value:"5",label:"5x"}],default:3,type:0},{key:Qe.HP_Bar_Speed,label:U.t("settings:hpBarSpeed"),options:[{value:"Normal",label:U.t("settings:normal")},{value:"Fast",label:U.t("settings:fast")},{value:"Faster",label:U.t("settings:faster")},{value:"Skip",label:U.t("settings:skip")}],default:0,type:0},{key:Qe.EXP_Gains_Speed,label:U.t("settings:expGainsSpeed"),options:[{value:"Normal",label:U.t("settings:normal")},{value:"Fast",label:U.t("settings:fast")},{value:"Faster",label:U.t("settings:faster")},{value:"Skip",label:U.t("settings:skip")}],default:0,type:0},{key:Qe.EXP_Party_Display,label:U.t("settings:expPartyDisplay"),options:[{value:"Normal",label:U.t("settings:normal")},{value:"Level Up Notification",label:U.t("settings:levelUpNotifications")},{value:"Skip",label:U.t("settings:skip")}],default:0,type:0},{key:Qe.Skip_Seen_Dialogues,label:U.t("settings:skipSeenDialogues"),options:HR,default:0,type:0},{key:Qe.Egg_Skip,label:U.t("settings:eggSkip"),options:[{value:"Never",label:U.t("settings:never")},{value:"Ask",label:U.t("settings:ask")},{value:"Always",label:U.t("settings:always")}],default:1,type:0},{key:Qe.Battle_Style,label:U.t("settings:battleStyle"),options:[{value:"Switch",label:U.t("settings:switch")},{value:"Set",label:U.t("settings:set")}],default:0,type:0},{key:Qe.Enable_Retries,label:U.t("settings:enableRetries"),options:HR,default:0,type:0},{key:Qe.Hide_IVs,label:U.t("settings:hideIvs"),options:HR,default:0,type:0},{key:Qe.Tutorials,label:U.t("settings:tutorials"),options:HR,default:1,type:0},{key:Qe.Touch_Controls,label:U.t("settings:touchControls"),options:vv,default:0,type:0},{key:Qe.Vibration,label:U.t("settings:vibrations"),options:vv,default:0,type:0},{key:Qe.Language,label:U.t("settings:language"),options:[{value:"English",label:"English"},{value:"Change",label:U.t("settings:change")}],default:0,type:1,requireReload:!0},{key:Qe.UI_Theme,label:U.t("settings:uiTheme"),options:[{value:"Default",label:U.t("settings:default")},{value:"Legacy",label:U.t("settings:legacy")}],default:0,type:1,requireReload:!0},{key:Qe.Window_Type,label:U.t("settings:windowType"),options:new Array(5).fill(null).map((E,A)=>{const s=(A+1).toString();return{value:s,label:s}}),default:0,type:1},{key:Qe.Money_Format,label:U.t("settings:moneyFormat"),options:[{value:"Normal",label:U.t("settings:normal")},{value:"Abbreviated",label:U.t("settings:abbreviated")}],default:0,type:1},{key:Qe.Damage_Numbers,label:U.t("settings:damageNumbers"),options:[{value:"Off",label:U.t("settings:off")},{value:"Simple",label:U.t("settings:simple")},{value:"Fancy",label:U.t("settings:fancy")}],default:0,type:1},{key:Qe.Move_Animations,label:U.t("settings:moveAnimations"),options:HR,default:1,type:1},{key:Qe.Show_Stats_on_Level_Up,label:U.t("settings:showStatsOnLevelUp"),options:HR,default:1,type:1},{key:Qe.Candy_Upgrade_Notification,label:U.t("settings:candyUpgradeNotification"),options:[{value:"Off",label:U.t("settings:off")},{value:"Passives Only",label:U.t("settings:passivesOnly")},{value:"On",label:U.t("settings:on")}],default:0,type:1},{key:Qe.Candy_Upgrade_Display,label:U.t("settings:candyUpgradeDisplay"),options:[{value:"Icon",label:U.t("settings:icon")},{value:"Animation",label:U.t("settings:animation")}],default:0,type:1,requireReload:!0},{key:Qe.Move_Info,label:U.t("settings:moveInfo"),options:HR,default:1,type:1},{key:Qe.Show_Moveset_Flyout,label:U.t("settings:showMovesetFlyout"),options:HR,default:1,type:1},{key:Qe.Show_Arena_Flyout,label:U.t("settings:showArenaFlyout"),options:HR,default:1,type:1},{key:Qe.Show_Time_Of_Day_Widget,label:U.t("settings:showTimeOfDayWidget"),options:HR,default:1,type:1,requireReload:!0},{key:Qe.Time_Of_Day_Animation,label:U.t("settings:timeOfDayAnimation"),options:[{value:"Bounce",label:U.t("settings:bounce")},{value:"Back",label:U.t("settings:timeOfDay_back")}],default:0,type:1},{key:Qe.Sprite_Set,label:U.t("settings:spriteSet"),options:[{value:"Consistent",label:U.t("settings:consistent")},{value:"Mixed Animated",label:U.t("settings:mixedAnimated")}],default:0,type:1,requireReload:!0},{key:Qe.Fusion_Palette_Swaps,label:U.t("settings:fusionPaletteSwaps"),options:HR,default:1,type:1},{key:Qe.Player_Gender,label:U.t("settings:playerGender"),options:[{value:"Boy",label:U.t("settings:boy")},{value:"Girl",label:U.t("settings:girl")}],default:0,type:1},{key:Qe.Type_Hints,label:U.t("settings:typeHints"),options:HR,default:0,type:1},{key:Qe.Show_BGM_Bar,label:U.t("settings:showBgmBar"),options:HR,default:1,type:1},{key:Qe.Master_Volume,label:U.t("settings:masterVolume"),options:Ir,default:5,type:2},{key:Qe.BGM_Volume,label:U.t("settings:bgmVolume"),options:Ir,default:10,type:2},{key:Qe.Field_Volume,label:U.t("settings:fieldVolume"),options:Ir,default:10,type:2},{key:Qe.SE_Volume,label:U.t("settings:seVolume"),options:Ir,default:10,type:2},{key:Qe.UI_Volume,label:U.t("settings:uiVolume"),options:Ir,default:10,type:2},{key:Qe.Music_Preference,label:U.t("settings:musicPreference"),options:[{value:"Consistent",label:U.t("settings:consistent")},{value:"Mixed",label:U.t("settings:mixed")}],default:0,type:2,requireReload:!0},{key:Qe.Move_Touch_Controls,label:U.t("settings:moveTouchControls"),options:[{value:"Configure",label:U.t("settings:change")}],default:0,type:0,activatable:!0,isHidden:T(()=>!jo(),"isHidden")},{key:Qe.Shop_Cursor_Target,label:U.t("settings:shopCursorTarget"),options:Y6,default:0,type:1},{key:Qe.Shop_Overlay_Opacity,label:U.t("settings:shopOverlayOpacity"),options:R9,default:7,type:1,requireReload:!1}];function p6(E){return GA.findIndex(A=>A.key===E)}T(p6,"settingIndex");function n9(E){GA.forEach(A=>Tc(E,A.key,A.default))}T(n9,"resetSettings");function Tc(E,A,s){const R=p6(A);if(R===-1)return!1;switch(GA[R].key){case Qe.Game_Speed:E.gameSpeed=parseFloat(GA[R].options[s].value.replace("x",""));break;case Qe.Master_Volume:E.masterVolume=s?parseInt(GA[R].options[s].value)*.01:0,E.updateSoundVolume();break;case Qe.BGM_Volume:E.bgmVolume=s?parseInt(GA[R].options[s].value)*.01:0,E.updateSoundVolume();break;case Qe.Field_Volume:E.fieldVolume=s?parseInt(GA[R].options[s].value)*.01:0,E.updateSoundVolume();break;case Qe.SE_Volume:E.seVolume=s?parseInt(GA[R].options[s].value)*.01:0,E.updateSoundVolume();break;case Qe.UI_Volume:E.uiVolume=s?parseInt(GA[R].options[s].value)*.01:0;break;case Qe.Music_Preference:E.musicPreference=s;break;case Qe.Damage_Numbers:E.damageNumbersMode=s;break;case Qe.UI_Theme:E.uiTheme=s;break;case Qe.Window_Type:O8(E,parseInt(GA[R].options[s].value));break;case Qe.Tutorials:E.enableTutorials=GA[R].options[s].value==="On";break;case Qe.Move_Info:E.enableMoveInfo=GA[R].options[s].value==="On";break;case Qe.Enable_Retries:E.enableRetries=GA[R].options[s].value==="On";break;case Qe.Hide_IVs:E.hideIvs=GA[R].options[s].value==="On";break;case Qe.Skip_Seen_Dialogues:E.skipSeenDialogues=GA[R].options[s].value==="On";break;case Qe.Egg_Skip:E.eggSkipPreference=s;break;case Qe.Battle_Style:E.battleStyle=s;break;case Qe.Show_BGM_Bar:E.showBgmBar=GA[R].options[s].value==="On";break;case Qe.Candy_Upgrade_Notification:if(E.candyUpgradeNotification===s)break;E.candyUpgradeNotification=s,E.eventTarget.dispatchEvent(new S0(s));break;case Qe.Candy_Upgrade_Display:E.candyUpgradeDisplay=s;case Qe.Money_Format:switch(GA[R].options[s].value){case"Normal":E.moneyFormat=N0.NORMAL;break;case"Abbreviated":E.moneyFormat=N0.ABBREVIATED;break}E.updateMoneyText(!1);break;case Qe.Sprite_Set:E.experimentalSprites=!!s,s&&E.initExpSprites();break;case Qe.Move_Animations:E.moveAnimations=GA[R].options[s].value==="On";break;case Qe.Show_Moveset_Flyout:E.showMovesetFlyout=GA[R].options[s].value==="On";break;case Qe.Show_Arena_Flyout:E.showArenaFlyout=GA[R].options[s].value==="On";break;case Qe.Show_Time_Of_Day_Widget:E.showTimeOfDayWidget=GA[R].options[s].value==="On";break;case Qe.Time_Of_Day_Animation:E.timeOfDayAnimation=GA[R].options[s].value==="Bounce"?vT.BOUNCE:vT.BACK;break;case Qe.Show_Stats_on_Level_Up:E.showLevelUpStats=GA[R].options[s].value==="On";break;case Qe.Shop_Cursor_Target:const I=O9[s];E.shopCursorTarget=I;break;case Qe.EXP_Gains_Speed:E.expGainsSpeed=s;break;case Qe.EXP_Party_Display:E.expParty=s;break;case Qe.HP_Bar_Speed:E.hpBarSpeed=s;break;case Qe.Fusion_Palette_Swaps:E.fusionPaletteSwaps=!!s;break;case Qe.Player_Gender:if(E.gameData){const a=GA[R].options[s].value==="Girl";E.gameData.gender=a?ct.FEMALE:ct.MALE,E.trainer.setTexture(E.trainer.texture.key.replace(a?"m":"f",a?"f":"m"))}else return!1;break;case Qe.Touch_Controls:E.enableTouchControls=GA[R].options[s].value!=="Disabled"&&jo();const i=document.getElementById("touchControls");i&&i.classList.toggle("visible",E.enableTouchControls);break;case Qe.Vibration:E.enableVibration=GA[R].options[s].value!=="Disabled"&&jo();break;case Qe.Type_Hints:E.typeHints=GA[R].options[s].value==="On";break;case Qe.Language:if(s&&E.ui){const a=T(()=>{E.ui.revertMode(),E.ui.getHandler().setOptionCursor(0,0,!0)},"cancelHandler"),L=T(S=>{try{return U.changeLanguage(S),localStorage.setItem("prLang",S),a(),window.location.reload(),!0}catch(o){return console.error("Error changing locale:",o),!1}},"changeLocaleHandler");return E.ui.setOverlayMode($.OPTION_SELECT,{options:[{label:"English",handler:T(()=>L("en"),"handler")},{label:"Español",handler:T(()=>L("es"),"handler")},{label:"Italiano",handler:T(()=>L("it"),"handler")},{label:"Français",handler:T(()=>L("fr"),"handler")},{label:"Deutsch",handler:T(()=>L("de"),"handler")},{label:"Português (BR)",handler:T(()=>L("pt-BR"),"handler")},{label:"简体中文",handler:T(()=>L("zh-CN"),"handler")},{label:"繁體中文",handler:T(()=>L("zh-TW"),"handler")},{label:"한국어",handler:T(()=>L("ko"),"handler")},{label:"日本語",handler:T(()=>L("ja"),"handler")},{label:U.t("settings:back"),handler:T(()=>a(),"handler")}],maxOptions:7}),!1}break;case Qe.Shop_Overlay_Opacity:E.updateShopOverlayOpacity(parseInt(GA[R].options[s].value)*.01);break}return!0}T(Tc,"setSetting");const Sc="LEFT",y6="RIGHT",ni=class ni{constructor(){this.selectedMode=$.SETTINGS,this.navigationMenus=new Array,this.modes=[$.SETTINGS,$.SETTINGS_DISPLAY,$.SETTINGS_AUDIO,$.SETTINGS_GAMEPAD,$.SETTINGS_KEYBOARD],this.labels=[U.t("settings:general"),U.t("settings:display"),U.t("settings:audio"),U.t("settings:gamepad"),U.t("settings:keyboard")]}reset(){this.selectedMode=$.SETTINGS,this.updateNavigationMenus()}static getInstance(){return ni.instance||(ni.instance=new ni),ni.instance}navigate(A,s){const R=this.modes.indexOf(this.selectedMode),I=this.modes.length-1,i=s===Sc?-1:1;R===0&&s===Sc?this.selectedMode=this.modes[I]:R===I&&s===y6?this.selectedMode=this.modes[0]:this.selectedMode=this.modes[R+i],A.ui.setMode(this.selectedMode),this.updateNavigationMenus()}updateNavigationMenus(){for(const A of this.navigationMenus)A.update()}updateIcons(){for(const A of this.navigationMenus)A.updateIcons()}};T(ni,"NavigationManager");let sO=ni;const aK=class aK extends Phaser.GameObjects.Container{constructor(A,s,R){super(A,s,R),this.headerTitles=new Array,this.scene=A,this.setup()}setup(){const A=sO.getInstance(),s=it(this.scene,0,0,this.scene.game.canvas.width/6-2,24);s.setOrigin(0,0),this.add(s),this.width=s.width,this.height=s.height,this.navigationIcons={};const R=this.scene.add.sprite(8,4,"keyboard");R.setOrigin(0,-.1),R.setPositionRelative(s,8,4),this.navigationIcons.BUTTON_CYCLE_FORM=R;const I=this.scene.add.sprite(0,0,"keyboard");I.setOrigin(0,-.1),I.setPositionRelative(s,s.width-20,4),this.navigationIcons.BUTTON_CYCLE_SHINY=I;let i=R,a=R.width*6;for(const L of A.labels){const S=se(this.scene,0,0,L,V.SETTINGS_LABEL);S.setOrigin(0,0),S.setPositionRelative(i,6+a/6,0),this.add(S),this.headerTitles.push(S),i=S,a=S.width}this.add(R),this.add(I),A.navigationMenus.push(this),A.updateNavigationMenus()}update(){const A=sO.getInstance(),s=A.modes.indexOf(A.selectedMode);for(const[R,I]of this.headerTitles.entries())jb(I,this.scene,R===s?V.SETTINGS_SELECTED:V.SETTINGS_LABEL)}updateIcons(){var s,R;const A={BUTTON_HOME:"HOME.png",BUTTON_DELETE:"DEL.png"};for(const I of Object.keys(this.navigationIcons)){if(Object.keys(A).includes(I)){this.navigationIcons[I].setTexture("keyboard"),this.navigationIcons[I].setFrame(A[I]),this.navigationIcons[I].alpha=1;continue}const i=(s=this.scene.inputController)==null?void 0:s.getIconForLatestInputRecorded(I);if(i){const a=(R=this.scene.inputController)==null?void 0:R.getLastSourceType();this.navigationIcons[I].setTexture(a),this.navigationIcons[I].setFrame(i),this.navigationIcons[I].alpha=1}else this.navigationIcons[I].alpha=0}}navigate(A){const s=sO.getInstance();switch(A){case y.CYCLE_FORM:return s.navigate(this.scene,Sc),!0;case y.CYCLE_SHINY:return s.navigate(this.scene,y6),!0}return!1}};T(aK,"NavigationMenu");let sC=aK;const LK=class LK extends os{constructor(A,s,R=null){super(A,R),this.settings=GA.filter(I=>{var i;return I.type===s&&!((i=I==null?void 0:I.isHidden)!=null&&i.call(I))}),this.reloadRequired=!1,this.rowsToDisplay=8}setup(){const A=this.getUi();this.settingsContainer=this.scene.add.container(1,-(this.scene.game.canvas.height/6)+1),this.settingsContainer.setName(`settings-${this.title}`),this.settingsContainer.setInteractive(new Phaser.Geom.Rectangle(0,0,this.scene.game.canvas.width/6,this.scene.game.canvas.height/6-20),Phaser.Geom.Rectangle.Contains),this.navigationIcons={},this.navigationContainer=new sC(this.scene,0,0),this.optionsBg=it(this.scene,0,this.navigationContainer.height,this.scene.game.canvas.width/6-2,this.scene.game.canvas.height/6-16-this.navigationContainer.height-2),this.optionsBg.setName("window-options-bg"),this.optionsBg.setOrigin(0,0);const s=it(this.scene,0,this.scene.game.canvas.height/6-this.navigationContainer.height,this.scene.game.canvas.width/6-2,22);s.setOrigin(0,0);const R=this.scene.add.sprite(0,0,"keyboard");R.setOrigin(0,-.1),R.setPositionRelative(s,this.navigationContainer.width-32,4),this.navigationIcons.BUTTON_ACTION=R;const I=se(this.scene,0,0,U.t("settings:action"),V.SETTINGS_LABEL);I.setOrigin(0,.15),I.setPositionRelative(R,-I.width/6-2,0);const i=this.scene.add.sprite(0,0,"keyboard");i.setOrigin(0,-.1),i.setPositionRelative(s,this.navigationContainer.width-100,4),this.navigationIcons.BUTTON_CANCEL=i;const a=se(this.scene,0,0,U.t("settings:back"),V.SETTINGS_LABEL);a.setOrigin(0,.15),a.setPositionRelative(i,-a.width/6-2,0),this.optionsContainer=this.scene.add.container(0,0),this.settingLabels=[],this.optionValueLabels=[],this.reloadSettings=this.settings.filter(L=>L==null?void 0:L.requireReload),this.settings.forEach((L,S)=>{let o=L.label;L!=null&&L.requireReload&&(o+=` (${U.t("settings:requireReload")})`),this.settingLabels[S]=se(this.scene,8,28+S*16,o,V.SETTINGS_LABEL),this.settingLabels[S].setOrigin(0,0),this.optionsContainer.add(this.settingLabels[S]),this.optionValueLabels.push(L.options.map((P,_)=>{const g=se(this.scene,0,0,P.label,L.default===_?V.SETTINGS_SELECTED:V.SETTINGS_VALUE);return g.setOrigin(0,0),this.optionsContainer.add(g),g}));const l=this.optionValueLabels[S].map(P=>P.width).reduce((P,_)=>P+=_,0),D=Math.max(78,this.settingLabels[S].displayWidth+8),M=297-D-l/6,c=Math.floor(M/(this.optionValueLabels[S].length-1));let G=0;for(const P of this.optionValueLabels[S])P.setPositionRelative(this.settingLabels[S],D+G,0),G+=P.width/6+c}),this.optionCursors=this.settings.map(L=>L.default),this.scrollBar=new gI(this.scene,this.optionsBg.width-9,this.optionsBg.y+5,4,this.optionsBg.height-11,this.rowsToDisplay),this.scrollBar.setTotalRows(this.settings.length),this.settingsContainer.add(this.optionsBg),this.settingsContainer.add(this.scrollBar),this.settingsContainer.add(this.navigationContainer),this.settingsContainer.add(s),this.settingsContainer.add(this.optionsContainer),this.settingsContainer.add(R),this.settingsContainer.add(i),this.settingsContainer.add(I),this.settingsContainer.add(a),A.add(this.settingsContainer),this.setCursor(0),this.setScrollCursor(0),this.settingsContainer.setVisible(!1)}updateBindings(){var A,s;for(const R of Object.keys(this.navigationIcons)){if(R==="BUTTON_HOME"){this.navigationIcons[R].setTexture("keyboard"),this.navigationIcons[R].setFrame("HOME.png"),this.navigationIcons[R].alpha=1;continue}const I=(A=this.scene.inputController)==null?void 0:A.getIconForLatestInputRecorded(R);if(I){const i=(s=this.scene.inputController)==null?void 0:s.getLastSourceType();this.navigationIcons[R].setTexture(i),this.navigationIcons[R].setFrame(I),this.navigationIcons[R].alpha=1}else this.navigationIcons[R].alpha=0}sO.getInstance().updateIcons()}show(A){super.show(A),this.updateBindings();const s=localStorage.hasOwnProperty(this.localStorageKey)?JSON.parse(localStorage.getItem(this.localStorageKey)):{};return this.settings.forEach((R,I)=>this.setOptionCursor(I,s.hasOwnProperty(R.key)?s[R.key]:this.settings[I].default)),this.settingsContainer.setVisible(!0),this.setCursor(0),this.setScrollCursor(0),this.getUi().moveTo(this.settingsContainer,this.getUi().length-1),this.getUi().hideTooltip(),!0}processInput(A){const s=this.getUi();let R=!1;if(A===y.CANCEL)R=!0,sO.getInstance().reset(),this.scene.ui.revertMode();else{const I=this.cursor+this.scrollCursor;switch(A){case y.UP:if(I)this.cursor?R=this.setCursor(this.cursor-1):R=this.setScrollCursor(this.scrollCursor-1);else{const a=this.setCursor(this.rowsToDisplay-1),L=this.setScrollCursor(this.optionValueLabels.length-this.rowsToDisplay);R=a&&L}break;case y.DOWN:if(I<this.optionValueLabels.length-1)this.cursor<this.rowsToDisplay-1?R=this.setCursor(this.cursor+1):this.scrollCursor<this.optionValueLabels.length-this.rowsToDisplay&&(R=this.setScrollCursor(this.scrollCursor+1));else{const a=this.setCursor(0),L=this.setScrollCursor(0);R=a&&L}break;case y.LEFT:this.optionCursors[I]&&(R=this.setOptionCursor(I,this.optionCursors[I]-1,!0));break;case y.RIGHT:this.optionCursors[I]<this.optionValueLabels[I].length-1&&(R=this.setOptionCursor(I,this.optionCursors[I]+1,!0));break;case y.CYCLE_FORM:case y.CYCLE_SHINY:R=this.navigationContainer.navigate(A);break;case y.ACTION:const i=this.settings[I];i!=null&&i.activatable&&(R=this.activateSetting(i));break}}return R&&s.playSelect(),R}activateSetting(A){switch(A.key){case Qe.Move_Touch_Controls:return this.scene.inputController.moveTouchControlsHandler.enableConfigurationMode(this.getUi(),this.scene),!0}return!1}setCursor(A){const s=super.setCursor(A);if(!this.cursorObj){const R=this.scene.game.canvas.width/6-(this.scrollBar.visible?16:10);this.cursorObj=this.scene.add.nineslice(0,0,"summary_moves_cursor",void 0,R,16,1,1,1,1),this.cursorObj.setOrigin(0,0),this.optionsContainer.add(this.cursorObj)}return this.cursorObj.setPositionRelative(this.optionsBg,4,4+(this.cursor+this.scrollCursor)*16),s}setOptionCursor(A,s,R){const I=this.settings[A];if(I.key===Qe.Touch_Controls&&s&&jo()&&xx())return this.getUi().playError(),!1;const i=this.optionCursors[A],a=this.optionValueLabels[A][i];a.setColor(this.getTextColor(V.SETTINGS_VALUE)),a.setShadowColor(this.getTextColor(V.SETTINGS_VALUE,!0)),this.optionCursors[A]=s;const L=this.optionValueLabels[A][s];return L.setColor(this.getTextColor(V.SETTINGS_SELECTED)),L.setShadowColor(this.getTextColor(V.SETTINGS_SELECTED,!0)),R&&(this.scene.gameData.saveSetting(I.key,s),this.reloadSettings.includes(I)&&(this.reloadRequired=!0)),!0}setScrollCursor(A){return A===this.scrollCursor?!1:(this.scrollCursor=A,this.scrollBar.setScrollCursor(this.scrollCursor),this.updateSettingsScroll(),this.setCursor(this.cursor),!0)}updateSettingsScroll(){this.optionsContainer.setY(-16*this.scrollCursor);for(let A=0;A<this.settingLabels.length;A++){const s=A>=this.scrollCursor&&A<this.scrollCursor+this.rowsToDisplay;this.settingLabels[A].setVisible(s);for(const R of this.optionValueLabels[A])R.setVisible(s)}}clear(){super.clear(),this.settingsContainer.setVisible(!1),this.setScrollCursor(0),this.eraseCursor(),this.getUi().bgmBar.toggleBgmBar(this.scene.showBgmBar),this.reloadRequired&&(this.reloadRequired=!1,this.scene.reset(!0,!1,!0))}eraseCursor(){this.cursorObj&&this.cursorObj.destroy(),this.cursorObj=null}};T(LK,"AbstractSettingsUiHandler");let xT=LK;const rK=class rK extends xT{constructor(A,s=null){super(A,VM.GENERAL,s),this.title="General",this.localStorageKey="settings"}};T(rK,"SettingsUiHandler");let RC=rK;var Ue=(E=>(E.Controller="CONTROLLER",E.Gamepad_Support="GAMEPAD_SUPPORT",E.Button_Up="BUTTON_UP",E.Button_Down="BUTTON_DOWN",E.Button_Left="BUTTON_LEFT",E.Button_Right="BUTTON_RIGHT",E.Button_Action="BUTTON_ACTION",E.Button_Cancel="BUTTON_CANCEL",E.Button_Menu="BUTTON_MENU",E.Button_Stats="BUTTON_STATS",E.Button_Cycle_Form="BUTTON_CYCLE_FORM",E.Button_Cycle_Shiny="BUTTON_CYCLE_SHINY",E.Button_Cycle_Gender="BUTTON_CYCLE_GENDER",E.Button_Cycle_Ability="BUTTON_CYCLE_ABILITY",E.Button_Cycle_Nature="BUTTON_CYCLE_NATURE",E.Button_Cycle_Variant="BUTTON_CYCLE_VARIANT",E.Button_Speed_Up="BUTTON_SPEED_UP",E.Button_Slow_Down="BUTTON_SLOW_DOWN",E.Button_Submit="BUTTON_SUBMIT",E))(Ue||{});const us="Press action to assign",w6={CONTROLLER:["Default","Change"],GAMEPAD_SUPPORT:["Auto","Disabled"],BUTTON_UP:[`KEY ${y.UP.toString()}`,us],BUTTON_DOWN:[`KEY ${y.DOWN.toString()}`,us],BUTTON_LEFT:[`KEY ${y.LEFT.toString()}`,us],BUTTON_RIGHT:[`KEY ${y.RIGHT.toString()}`,us],BUTTON_ACTION:[`KEY ${y.ACTION.toString()}`,us],BUTTON_CANCEL:[`KEY ${y.CANCEL.toString()}`,us],BUTTON_MENU:[`KEY ${y.MENU.toString()}`,us],BUTTON_STATS:[`KEY ${y.STATS.toString()}`,us],BUTTON_CYCLE_FORM:[`KEY ${y.CYCLE_FORM.toString()}`,us],BUTTON_CYCLE_SHINY:[`KEY ${y.CYCLE_SHINY.toString()}`,us],BUTTON_CYCLE_GENDER:[`KEY ${y.CYCLE_GENDER.toString()}`,us],BUTTON_CYCLE_ABILITY:[`KEY ${y.CYCLE_ABILITY.toString()}`,us],BUTTON_CYCLE_NATURE:[`KEY ${y.CYCLE_NATURE.toString()}`,us],BUTTON_CYCLE_VARIANT:[`KEY ${y.V.toString()}`,us],BUTTON_SPEED_UP:[`KEY ${y.SPEED_UP.toString()}`,us],BUTTON_SLOW_DOWN:[`KEY ${y.SLOW_DOWN.toString()}`,us],BUTTON_SUBMIT:[`KEY ${y.SUBMIT.toString()}`,us]},V6={CONTROLLER:0,GAMEPAD_SUPPORT:0,BUTTON_UP:0,BUTTON_DOWN:0,BUTTON_LEFT:0,BUTTON_RIGHT:0,BUTTON_ACTION:0,BUTTON_CANCEL:0,BUTTON_MENU:0,BUTTON_STATS:0,BUTTON_CYCLE_FORM:0,BUTTON_CYCLE_SHINY:0,BUTTON_CYCLE_GENDER:0,BUTTON_CYCLE_ABILITY:0,BUTTON_CYCLE_NATURE:0,BUTTON_CYCLE_VARIANT:0,BUTTON_SPEED_UP:0,BUTTON_SLOW_DOWN:0,BUTTON_SUBMIT:0},I9=[Je.Button_Up,Je.Button_Down,Je.Button_Left,Je.Button_Right];function Jo(E,A,s){switch(A){case"GAMEPAD_SUPPORT":E.inputController.setGamepadSupport(w6[A][s]!=="Disabled");break;case"BUTTON_ACTION":case"BUTTON_CANCEL":case"BUTTON_MENU":case"BUTTON_STATS":case"BUTTON_CYCLE_SHINY":case"BUTTON_CYCLE_FORM":case"BUTTON_CYCLE_GENDER":case"BUTTON_CYCLE_ABILITY":case"BUTTON_CYCLE_NATURE":case"BUTTON_CYCLE_VARIANT":case"BUTTON_SPEED_UP":case"BUTTON_SLOW_DOWN":case"BUTTON_SUBMIT":if(s&&E.ui){const R=T((I=!1)=>(E.ui.revertMode(),E.ui.getHandler().updateBindings(),I),"cancelHandler");E.ui.setOverlayMode($.GAMEPAD_BINDING,{target:A,cancelHandler:R})}break;case"CONTROLLER":if(s){const R=E.inputController.getGamepadsName();if(E.ui&&R){const I=T(()=>(E.ui.revertMode(),E.ui.getHandler().setOptionCursor(Object.values(Ue).indexOf("CONTROLLER"),0,!0),E.ui.getHandler().updateBindings(),!1),"cancelHandler"),i=T(a=>(E.inputController.setChosenGamepad(a),I(),!0),"changeGamepadHandler");return E.ui.setOverlayMode($.OPTION_SELECT,{options:[...R.map(a=>({label:S1(a,30),handler:T(()=>i(a),"handler")})),{label:"Cancel",handler:I}]}),!1}}break}return!0}T(Jo,"setSettingGamepad");const v6={padID:"Xbox 360 controller (XInput STANDARD GAMEPAD)",padType:"xbox",deviceMapping:{RC_S:0,RC_E:1,RC_W:2,RC_N:3,START:9,SELECT:8,LB:4,RB:5,LT:6,RT:7,LS:10,RS:11,LC_N:12,LC_S:13,LC_W:14,LC_E:15},icons:{RC_S:"XB_Letter_A_OL.png",RC_E:"XB_Letter_B_OL.png",RC_W:"XB_Letter_X_OL.png",RC_N:"XB_Letter_Y_OL.png",START:"START.png",SELECT:"SELECT.png",LB:"Bumper_L.png",RB:"Bumper_R.png",LT:"Trigger_L.png",RT:"Trigger_R.png",LS:"LS.png",RS:"RS.png",LC_N:"UP.png",LC_S:"DOWN.png",LC_W:"LEFT.png",LC_E:"RIGHT.png"},settings:{[Ue.Button_Up]:y.UP,[Ue.Button_Down]:y.DOWN,[Ue.Button_Left]:y.LEFT,[Ue.Button_Right]:y.RIGHT,[Ue.Button_Action]:y.ACTION,[Ue.Button_Cancel]:y.CANCEL,[Ue.Button_Cycle_Nature]:y.CYCLE_NATURE,[Ue.Button_Cycle_Variant]:y.V,[Ue.Button_Menu]:y.MENU,[Ue.Button_Stats]:y.STATS,[Ue.Button_Cycle_Form]:y.CYCLE_FORM,[Ue.Button_Cycle_Shiny]:y.CYCLE_SHINY,[Ue.Button_Cycle_Gender]:y.CYCLE_GENDER,[Ue.Button_Cycle_Ability]:y.CYCLE_ABILITY,[Ue.Button_Speed_Up]:y.SPEED_UP,[Ue.Button_Slow_Down]:y.SLOW_DOWN},default:{LC_N:Ue.Button_Up,LC_S:Ue.Button_Down,LC_W:Ue.Button_Left,LC_E:Ue.Button_Right,RC_S:Ue.Button_Action,RC_E:Ue.Button_Cancel,RC_W:Ue.Button_Cycle_Nature,RC_N:Ue.Button_Cycle_Variant,START:Ue.Button_Menu,SELECT:Ue.Button_Stats,LB:Ue.Button_Cycle_Form,RB:Ue.Button_Cycle_Shiny,LT:Ue.Button_Cycle_Gender,RT:Ue.Button_Cycle_Ability,LS:Ue.Button_Speed_Up,RS:Ue.Button_Slow_Down}},x6={padID:"Dualshock",padType:"dualshock",deviceMapping:{RC_S:0,RC_E:1,RC_W:2,RC_N:3,START:9,SELECT:8,LB:4,RB:5,LT:6,RT:7,LS:10,RS:11,LC_N:12,LC_S:13,LC_W:14,LC_E:15,TOUCH:17},icons:{RC_S:"CROSS.png",RC_E:"CIRCLE.png",RC_W:"SQUARE.png",RC_N:"TRIANGLE.png",START:"START.png",SELECT:"SELECT.png",LB:"L1.png",RB:"R1.png",LT:"L2.png",RT:"R2.png",LS:"L3.png",RS:"R3.png",LC_N:"UP.png",LC_S:"DOWN.png",LC_W:"LEFT.png",LC_E:"RIGHT.png",TOUCH:"TOUCH.png"},settings:{[Ue.Button_Up]:y.UP,[Ue.Button_Down]:y.DOWN,[Ue.Button_Left]:y.LEFT,[Ue.Button_Right]:y.RIGHT,[Ue.Button_Action]:y.ACTION,[Ue.Button_Cancel]:y.CANCEL,[Ue.Button_Cycle_Nature]:y.CYCLE_NATURE,[Ue.Button_Cycle_Variant]:y.V,[Ue.Button_Menu]:y.MENU,[Ue.Button_Stats]:y.STATS,[Ue.Button_Cycle_Form]:y.CYCLE_FORM,[Ue.Button_Cycle_Shiny]:y.CYCLE_SHINY,[Ue.Button_Cycle_Gender]:y.CYCLE_GENDER,[Ue.Button_Cycle_Ability]:y.CYCLE_ABILITY,[Ue.Button_Speed_Up]:y.SPEED_UP,[Ue.Button_Slow_Down]:y.SLOW_DOWN,[Ue.Button_Submit]:y.SUBMIT},default:{LC_N:Ue.Button_Up,LC_S:Ue.Button_Down,LC_W:Ue.Button_Left,LC_E:Ue.Button_Right,RC_S:Ue.Button_Action,RC_E:Ue.Button_Cancel,RC_W:Ue.Button_Cycle_Nature,RC_N:Ue.Button_Cycle_Variant,START:Ue.Button_Menu,SELECT:Ue.Button_Stats,LB:Ue.Button_Cycle_Form,RB:Ue.Button_Cycle_Shiny,LT:Ue.Button_Cycle_Gender,RT:Ue.Button_Cycle_Ability,LS:Ue.Button_Speed_Up,RS:Ue.Button_Slow_Down,TOUCH:Ue.Button_Submit}},b6={padID:"081f-e401",padType:"xbox",deviceMapping:{RC_S:2,RC_E:1,RC_W:3,RC_N:0,START:9,SELECT:8,LB:4,RB:5,LC_N:12,LC_S:13,LC_W:14,LC_E:15},icons:{RC_S:"XB_Letter_A_OL.png",RC_E:"XB_Letter_B_OL.png",RC_W:"XB_Letter_X_OL.png",RC_N:"XB_Letter_Y_OL.png",START:"START.png",SELECT:"SELECT.png",LB:"Bumper_L.png",RB:"Bumper_R.png",LC_N:"UP.png",LC_S:"DOWN.png",LC_W:"LEFT.png",LC_E:"RIGHT.png"},settings:{[Ue.Button_Up]:y.UP,[Ue.Button_Down]:y.DOWN,[Ue.Button_Left]:y.LEFT,[Ue.Button_Right]:y.RIGHT,[Ue.Button_Action]:y.ACTION,[Ue.Button_Cancel]:y.CANCEL,[Ue.Button_Cycle_Nature]:y.CYCLE_NATURE,[Ue.Button_Cycle_Variant]:y.V,[Ue.Button_Menu]:y.MENU,[Ue.Button_Stats]:y.STATS,[Ue.Button_Cycle_Form]:y.CYCLE_FORM,[Ue.Button_Cycle_Shiny]:y.CYCLE_SHINY,[Ue.Button_Cycle_Gender]:y.CYCLE_GENDER,[Ue.Button_Cycle_Ability]:y.CYCLE_ABILITY,[Ue.Button_Speed_Up]:y.SPEED_UP,[Ue.Button_Slow_Down]:y.SLOW_DOWN},default:{LC_N:Ue.Button_Up,LC_S:Ue.Button_Down,LC_W:Ue.Button_Left,LC_E:Ue.Button_Right,RC_S:Ue.Button_Action,RC_E:Ue.Button_Cancel,RC_W:Ue.Button_Cycle_Nature,RC_N:Ue.Button_Cycle_Variant,START:Ue.Button_Menu,SELECT:Ue.Button_Stats,LB:Ue.Button_Cycle_Form,RB:Ue.Button_Cycle_Shiny,LT:-1,RT:-1,LS:-1,RS:-1}};function DL(E,A){return Object.keys(E.deviceMapping).find(s=>E.deviceMapping[s]===A)}T(DL,"getKeyWithKeycode");function k6(E,A){const s=DL(E,A);return s?E.custom[s]:null}T(k6,"getSettingNameWithKeycode");function mo(E,A){const s=k6(E,A);return E.settings[s]}T(mo,"getButtonWithKeycode");function ML(E,A){return Object.keys(E.custom).find(s=>E.custom[s]===A)}T(ML,"getKeyWithSettingName");function oc(E,A){return E.custom[A]}T(oc,"getSettingNameWithKey");function i9(E,A){return E.icons[A]}T(i9,"getIconWithKey");function OC(E,A){const s=ML(E,A);return i9(E,s)}T(OC,"getIconWithSettingName");function a9(E,A,s,R){let I;A==="gamepad"?I=E[s[Zt.GAMEPAD]]:I=E[s[Zt.KEYBOARD]];const i=OC(I,R);if(!i){const a=R.includes("ALT_");let L;return a?L=R.split("ALT_").splice(1)[0]:L=`ALT_${R}`,OC(I,L)}return i}T(a9,"getIconForLatestInput");function L9(E,A,s){if(!T9(E,DL(E,s))||!S9(E,A))return!1;const R=k6(E,s);if(R){const a=ML(E,R);a&&(E.custom[a]=-1)}const I=ML(E,A);I&&(E.custom[I]=-1);const i=DL(E,s);return i&&(E.custom[i]=A),!0}T(L9,"assign");function r9(E,A,s){if(E.padType==="keyboard")return!1;const R=ML(E,A),I=oc(E,R),i=DL(E,s),a=oc(E,i);return R&&(E.custom[R]=a),i&&(E.custom[i]=I),!0}T(r9,"swap");function N9(E,A){const s=ML(E,A);return E.blacklist.includes(s)?!1:(s&&(E.custom[s]=-1),!0)}T(N9,"deleteBind");function T9(E,A){var R;const s=oc(E,A);return!((R=E.blacklist)!=null&&R.includes(A))}T(T9,"canIAssignThisKey");function S9(E,A){var R;const s=ML(E,A);return!((R=E.blacklist)!=null&&R.includes(s))}T(S9,"canIOverrideThisSetting");const NK=class NK extends os{constructor(A,s=null){super(A,s),this.layout=new Map,this.rowsToDisplay=8}getLocalStorageSetting(){return localStorage.hasOwnProperty(this.localStoragePropertyName)?JSON.parse(localStorage.getItem(this.localStoragePropertyName)):{}}camelize(A){return A.replace(/(?:^\w|[A-Z]|\b\w)/g,function(s,R){return R===0?s.toLowerCase():s.toUpperCase()}).replace(/\s+/g,"")}setup(){const A=this.getUi();this.navigationIcons={},this.settingsContainer=this.scene.add.container(1,-(this.scene.game.canvas.height/6)+1),this.settingsContainer.setName(`settings-${this.titleSelected}`),this.settingsContainer.setInteractive(new Phaser.Geom.Rectangle(0,0,this.scene.game.canvas.width/6,this.scene.game.canvas.height/6),Phaser.Geom.Rectangle.Contains),this.navigationContainer=new sC(this.scene,0,0),this.optionsBg=it(this.scene,0,this.navigationContainer.height,this.scene.game.canvas.width/6-2,this.scene.game.canvas.height/6-16-this.navigationContainer.height-2),this.optionsBg.setOrigin(0,0),this.actionsBg=it(this.scene,0,this.scene.game.canvas.height/6-this.navigationContainer.height,this.scene.game.canvas.width/6-2,22),this.actionsBg.setOrigin(0,0);const s=this.scene.add.sprite(0,0,"keyboard");s.setOrigin(0,-.1),s.setPositionRelative(this.actionsBg,this.navigationContainer.width-32,4),this.navigationIcons.BUTTON_ACTION=s;const R=se(this.scene,0,0,U.t("settings:action"),V.SETTINGS_LABEL);R.setOrigin(0,.15),R.setPositionRelative(s,-R.width/6-2,0);const I=this.scene.add.sprite(0,0,"keyboard");I.setOrigin(0,-.1),I.setPositionRelative(this.actionsBg,this.navigationContainer.width-100,4),this.navigationIcons.BUTTON_CANCEL=I;const i=se(this.scene,0,0,U.t("settings:back"),V.SETTINGS_LABEL);i.setOrigin(0,.15),i.setPositionRelative(I,-i.width/6-2,0);const a=this.scene.add.sprite(0,0,"keyboard");a.setOrigin(0,-.1),a.setPositionRelative(this.actionsBg,this.navigationContainer.width-180,4),this.navigationIcons.BUTTON_HOME=a;const L=se(this.scene,0,0,U.t("settings:reset"),V.SETTINGS_LABEL);L.setOrigin(0,.15),L.setPositionRelative(a,-L.width/6-2,0),this.settingsContainer.add(this.optionsBg),this.settingsContainer.add(this.actionsBg),this.settingsContainer.add(this.navigationContainer),this.settingsContainer.add(s),this.settingsContainer.add(I),this.settingsContainer.add(a),this.settingsContainer.add(R),this.settingsContainer.add(i),this.settingsContainer.add(L);for(const S of this.configs){this.layout[S.padType]=new Map;const o=this.scene.add.container(0,0);o.setVisible(!1);const l=Object.keys(S.settings),D=[],M=[],c={},P=[...Object.keys(this.setting).slice(0,this.commonSettingsCount).map(H=>this.setting[H]),...Object.keys(S.settings)],_=Object.values(Object.keys(this.settingDeviceDefaults).filter(H=>P.includes(H)).map(H=>this.settingDeviceDefaults[H]));Object.keys(this.setting).filter(H=>P.includes(this.setting[H])).forEach((H,F)=>{const p=H.replace(/\_/g," "),v=this.settingBlacklisted.includes(this.setting[H]),k=v?V.SETTINGS_LOCKED:V.SETTINGS_LABEL;let j;const q=this.camelize(p.replace("Alt ",""));p.toLowerCase().includes("alt")?j=`${U.t(`settings:${q}`)}${U.t("settings:alt")}`:j=U.t(`settings:${q}`),D[F]=se(this.scene,8,28+F*16,j,k),D[F].setOrigin(0,0),o.add(D[F]);const ie=[];for(const[De,Be]of this.settingDeviceOptions[this.setting[H]].entries()){if(l.includes(this.setting[H])){if(De){const Ye=se(this.scene,0,0,v?"":Be,V.WINDOW);Ye.setOrigin(0,0),o.add(Ye),ie.push(Ye);continue}const fe=this.scene.add.sprite(0,0,this.textureOverride?this.textureOverride:S.padType);fe.setOrigin(0,-.15),c[this.setting[H]]=fe,o.add(fe),ie.push(fe);continue}const de=se(this.scene,0,0,Be,this.settingDeviceDefaults[this.setting[H]]===De?V.SETTINGS_SELECTED:V.WINDOW);de.setOrigin(0,0),o.add(de),ie.push(de)}M.push(ie);const z=M[F].map(De=>De.width).reduce((De,Be)=>De+=Be,0),Oe=Math.max(130,D[F].displayWidth+8),ae=297-Oe-z/6,Le=Math.floor(ae/(M[F].length-1));let Ne=0;for(const De of M[F])De.setPositionRelative(D[F],Oe+Ne,0),Ne+=De.width/6+Le}),this.layout[S.padType].optionsContainer=o,this.layout[S.padType].inputsIcons=c,this.layout[S.padType].settingLabels=D,this.layout[S.padType].optionValueLabels=M,this.layout[S.padType].optionCursors=_,this.layout[S.padType].keys=P,this.layout[S.padType].bindingSettings=l,this.settingsContainer.add(o)}this.scrollBar=new gI(this.scene,this.optionsBg.width-9,this.optionsBg.y+5,4,this.optionsBg.height-11,this.rowsToDisplay),this.settingsContainer.add(this.scrollBar),A.add(this.settingsContainer),this.settingsContainer.setVisible(!1)}getActiveConfig(){return this.scene.inputController.getActiveConfig(this.device)}updateBindings(){Object.keys(this.layout).forEach(R=>this.layout[R].optionsContainer.setVisible(!1));const A=this.getActiveConfig();if(!this.setLayout(A))return;const s=this.getLocalStorageSetting();if(this.keys.forEach((R,I)=>{this.setOptionCursor(I,s.hasOwnProperty(R)?s[R]:this.optionCursors[I])}),!!A.custom){for(const R of this.bindingSettings){const I=OC(A,R);I?(this.inputsIcons[R].setFrame(I),this.inputsIcons[R].alpha=1):this.inputsIcons[R].alpha=0}this.setCursor(this.cursor),this.setScrollCursor(this.scrollCursor)}}updateNavigationDisplay(){var s,R;const A={BUTTON_HOME:"HOME.png",BUTTON_DELETE:"DEL.png"};for(const I of Object.keys(this.navigationIcons)){if(Object.keys(A).includes(I)){this.navigationIcons[I].setTexture("keyboard"),this.navigationIcons[I].setFrame(A[I]),this.navigationIcons[I].alpha=1;continue}const i=(s=this.scene.inputController)==null?void 0:s.getIconForLatestInputRecorded(I);if(i){const a=(R=this.scene.inputController)==null?void 0:R.getLastSourceType();this.navigationIcons[I].setTexture(a),this.navigationIcons[I].setFrame(i),this.navigationIcons[I].alpha=1}else this.navigationIcons[I].alpha=0}}show(A){return super.show(A),this.updateNavigationDisplay(),sO.getInstance().updateIcons(),this.updateBindings(),this.settingsContainer.setVisible(!0),this.resetScroll(),this.getUi().moveTo(this.settingsContainer,this.getUi().length-1),this.getUi().hideTooltip(),!0}setLayout(A){if(!A)return this.layout.noGamepads.optionsContainer.setVisible(!0),!1;const s=A.padType,R=this.layout[s];return this.keys=R.keys,this.optionsContainer=R.optionsContainer,this.optionsContainer.setVisible(!0),this.settingLabels=R.settingLabels,this.optionValueLabels=R.optionValueLabels,this.optionCursors=R.optionCursors,this.inputsIcons=R.inputsIcons,this.bindingSettings=R.bindingSettings,this.scrollBar.setTotalRows(R.settingLabels.length),this.scrollBar.setScrollCursor(0),!0}processInput(A){const s=this.getUi();let R=!1;if(this.updateNavigationDisplay(),A===y.CANCEL)R=!0,sO.getInstance().reset(),this.scene.ui.revertMode();else{const I=this.cursor+this.scrollCursor,i=this.setting[Object.keys(this.setting)[I]];switch(A){case y.ACTION:if(!this.optionCursors||!this.optionValueLabels)return!1;this.settingBlacklisted.includes(i)||!i.includes("BUTTON_")?R=!1:R=this.setSetting(this.scene,i,1);break;case y.UP:if(!this.optionValueLabels)return!1;if(I)this.cursor?R=this.setCursor(this.cursor-1):R=this.setScrollCursor(this.scrollCursor-1);else{const a=this.setCursor(this.rowsToDisplay-1),L=this.setScrollCursor(this.optionValueLabels.length-this.rowsToDisplay);R=a&&L}break;case y.DOWN:if(!this.optionValueLabels)return!1;if(I<this.optionValueLabels.length-1)this.cursor<this.rowsToDisplay-1?R=this.setCursor(this.cursor+1):this.scrollCursor<this.optionValueLabels.length-this.rowsToDisplay&&(R=this.setScrollCursor(this.scrollCursor+1));else{const a=this.setCursor(0),L=this.setScrollCursor(0);R=a&&L}break;case y.LEFT:if(!this.optionCursors||!this.optionValueLabels)return!1;this.settingBlacklisted.includes(i)||i.includes("BUTTON_")?R=!1:this.optionCursors[I]&&(R=this.setOptionCursor(I,this.optionCursors[I]-1,!0));break;case y.RIGHT:if(!this.optionCursors||!this.optionValueLabels)return!1;this.settingBlacklisted.includes(i)||i.includes("BUTTON_")?R=!1:this.optionCursors[I]<this.optionValueLabels[I].length-1&&(R=this.setOptionCursor(I,this.optionCursors[I]+1,!0));break;case y.CYCLE_FORM:case y.CYCLE_SHINY:R=this.navigationContainer.navigate(A);break}}return R&&s.playSelect(),R}resetScroll(){var A;(A=this.cursorObj)==null||A.destroy(),this.cursorObj=null,this.cursor=0,this.setCursor(0),this.setScrollCursor(0),this.updateSettingsScroll()}setCursor(A){const s=super.setCursor(A);if(!this.optionsContainer)return s;if(!this.cursorObj){const R=this.scene.game.canvas.width/6-(this.scrollBar.visible?16:10);this.cursorObj=this.scene.add.nineslice(0,0,"summary_moves_cursor",void 0,R,16,1,1,1,1),this.cursorObj.setOrigin(0,0),this.optionsContainer.add(this.cursorObj)}return this.cursorObj.setPositionRelative(this.optionsBg,4,4+(this.cursor+this.scrollCursor)*16),s}setScrollCursor(A){return A===this.scrollCursor?!1:(this.scrollCursor=A,this.scrollBar.setScrollCursor(this.scrollCursor),this.updateSettingsScroll(),this.setCursor(this.cursor),!0)}setOptionCursor(A,s,R){const I=this.setting[Object.keys(this.setting)[A]],i=this.optionCursors[A];if(!this.bindingSettings.includes(I)&&!I.includes("BUTTON_")){const a=this.optionValueLabels[A][i];a.setColor(this.getTextColor(V.WINDOW)),a.setShadowColor(this.getTextColor(V.WINDOW,!0)),this.optionCursors[A]=s;const L=this.optionValueLabels[A][s];L.setColor(this.getTextColor(V.SETTINGS_SELECTED)),L.setShadowColor(this.getTextColor(V.SETTINGS_SELECTED,!0))}return R&&this.saveSettingToLocalStorage(I,s),!0}updateSettingsScroll(){if(this.optionsContainer){this.optionsContainer.setY(-16*this.scrollCursor);for(let A=0;A<this.settingLabels.length;A++){const s=A>=this.scrollCursor&&A<this.scrollCursor+this.rowsToDisplay;this.settingLabels[A].setVisible(s);for(const R of this.optionValueLabels[A])R.setVisible(s)}}}clear(){super.clear(),this.settingsContainer.setVisible(!1),this.eraseCursor()}eraseCursor(){this.cursorObj&&this.cursorObj.destroy(),this.cursorObj=null}};T(NK,"AbstractControlSettingsUiHandler");let nC=NK;const TK=class TK extends nC{constructor(A,s=null){super(A,s),this.setSetting=Jo,this.titleSelected="Gamepad",this.setting=Ue,this.settingDeviceDefaults=V6,this.settingDeviceOptions=w6,this.configs=[v6,x6,b6],this.commonSettingsCount=2,this.localStoragePropertyName="settingsGamepad",this.settingBlacklisted=I9,this.device=Zt.GAMEPAD}setup(){super.setup(),this.layout.noGamepads=new Map;const A=this.scene.add.container(0,0);A.setVisible(!1);const s=se(this.scene,8,28,U.t("settings:gamepadPleasePlug"),V.SETTINGS_LABEL);s.setOrigin(0,0),A.add(s),this.settingsContainer.add(A),this.layout.noGamepads.optionsContainer=A,this.layout.noGamepads.label=s}setLayout(A){return A?super.setLayout(A):(this.layout.noGamepads.optionsContainer.setVisible(!0),!1)}updateChosenGamepadDisplay(){this.updateBindings(),this.resetScroll();for(const[A,s]of Object.keys(this.setting).entries())if(this.setting[s]===this.setting.Controller)for(const I of Object.keys(this.layout))I!=="noGamepads"&&this.layout[I].optionValueLabels[A][0].setText(S1(this.scene.inputController.selectedDevice[Zt.GAMEPAD],20))}saveSettingToLocalStorage(A,s){this.setting[A]!==this.setting.Controller&&this.scene.gameData.saveControlSetting(this.device,this.localStoragePropertyName,A,this.settingDeviceDefaults,s)}};T(TK,"SettingsGamepadUiHandler");let IC=TK;const SK=class SK extends os{constructor(A,s=null){super(A,s),this.leftArrowGap=90,this.arrowSpacing=3}setup(){const A=this.getUi();this.widestTextBox=0,this.challengesContainer=this.scene.add.container(1,-(this.scene.game.canvas.height/6)+1),this.challengesContainer.setName("challenges"),this.challengesContainer.setInteractive(new Phaser.Geom.Rectangle(0,0,this.scene.game.canvas.width/6,this.scene.game.canvas.height/6),Phaser.Geom.Rectangle.Contains);const s=this.scene.add.rectangle(-1,-1,this.scene.scaledCanvas.width,this.scene.scaledCanvas.height,4342338,.8);s.setName("rect-challenge-overlay"),s.setOrigin(0,0),this.challengesContainer.add(s);const R=it(this.scene,0,0,this.scene.game.canvas.width/6,24);R.setName("window-header-bg"),R.setOrigin(0,0);const I=se(this.scene,0,0,U.t("challenges:title"),V.SETTINGS_LABEL);I.setName("text-header"),I.setOrigin(0,0),I.setPositionRelative(R,8,4),this.optionsWidth=this.scene.scaledCanvas.width*.6,this.optionsBg=it(this.scene,0,R.height,this.optionsWidth,this.scene.scaledCanvas.height-R.height-2),this.optionsBg.setName("window-options-bg"),this.optionsBg.setOrigin(0,0);const i=it(this.scene,0,R.height,this.scene.scaledCanvas.width-this.optionsWidth,this.scene.scaledCanvas.height-R.height-26);i.setName("window-desc-bg"),i.setOrigin(0,0),i.setPositionRelative(this.optionsBg,this.optionsBg.width,0),this.descriptionText=new Vx(this.scene,i.x+6,i.y+4,"",{fontFamily:"emerald",fontSize:84,color:Vl.ORANGE,padding:{bottom:6},wrap:{mode:"word",width:(i.width-12)*6}}),this.descriptionText.setName("text-desc"),this.scene.add.existing(this.descriptionText),this.descriptionText.setScale(1/6),this.descriptionText.setShadow(4,5,vl.ORANGE),this.descriptionText.setOrigin(0,0),this.startBg=it(this.scene,0,0,i.width,24),this.startBg.setName("window-start-bg"),this.startBg.setOrigin(0,0),this.startBg.setPositionRelative(i,0,i.height),this.startText=se(this.scene,0,0,U.t("challenges:noneSelected"),V.SETTINGS_LABEL),this.startText.setName("text-start"),this.startText.setOrigin(0,0),this.startText.setPositionRelative(this.startBg,(this.startBg.width-this.startText.displayWidth)/2,4),this.startCursor=this.scene.add.nineslice(0,0,"summary_moves_cursor",void 0,i.width-8,16,1,1,1,1),this.startCursor.setName("9s-start-cursor"),this.startCursor.setOrigin(0,0),this.startCursor.setPositionRelative(this.startBg,4,3),this.startCursor.setVisible(!1),this.valuesContainer=this.scene.add.container(0,0),this.valuesContainer.setName("values"),this.challengeLabels=[];for(let a=0;a<9;a++){const L=se(this.scene,8,28+a*16,"",V.SETTINGS_LABEL);L.setName(`text-challenge-label-${a}`),L.setOrigin(0,0),this.valuesContainer.add(L);const S=this.scene.add.image(0,0,"cursor_reverse");S.setName(`challenge-left-arrow-${a}`),S.setOrigin(0,0),S.setVisible(!1),S.setScale(.75),this.valuesContainer.add(S);const o=this.scene.add.image(0,0,"cursor");o.setName(`challenge-right-arrow-${a}`),o.setOrigin(0,0),o.setScale(.75),o.setVisible(!1),this.valuesContainer.add(o);const l=se(this.scene,0,28+a*16,"",V.SETTINGS_LABEL);l.setName(`challenge-value-text-${a}`),l.setPositionRelative(L,100,0),this.valuesContainer.add(l),this.challengeLabels[a]={label:L,value:l,leftArrow:S,rightArrow:o}}this.monoTypeValue=this.scene.add.sprite(8,98,UR("types")),this.monoTypeValue.setName("challenge-value-monotype-sprite"),this.monoTypeValue.setScale(.86),this.monoTypeValue.setVisible(!1),this.valuesContainer.add(this.monoTypeValue),this.challengesContainer.add(R),this.challengesContainer.add(I),this.challengesContainer.add(this.optionsBg),this.challengesContainer.add(i),this.challengesContainer.add(this.descriptionText),this.challengesContainer.add(this.startBg),this.challengesContainer.add(this.startText),this.challengesContainer.add(this.startCursor),this.challengesContainer.add(this.valuesContainer),A.add(this.challengesContainer),this.setCursor(0),this.setScrollCursor(0),this.challengesContainer.setVisible(!1)}setDescription(A){this.descriptionText.setText(`[color=${Vl.ORANGE}][shadow=${vl.ORANGE}]${A}`)}initLabels(){this.setDescription(this.scene.gameMode.challenges[0].getDescription()),this.widestTextBox=0;for(let A=0;A<9;A++)if(A<this.scene.gameMode.challenges.length){this.challengeLabels[A].label.setVisible(!0),this.challengeLabels[A].value.setVisible(!0),this.challengeLabels[A].leftArrow.setVisible(!0),this.challengeLabels[A].rightArrow.setVisible(!0);const s=se(this.scene,0,0,"",V.SETTINGS_LABEL);for(let R=0;R<=this.scene.gameMode.challenges[A].maxValue;R++)this.scene.gameMode.challenges[A].id!==ht.SINGLE_TYPE&&(s.setText(this.scene.gameMode.challenges[A].getValue(R)),s.displayWidth>this.widestTextBox&&(this.widestTextBox=s.displayWidth));s.destroy()}}updateText(){this.setDescription(this.getActiveChallenge().getDescription());let A=!1;for(let s=0;s<Math.min(9,this.scene.gameMode.challenges.length);s++){const R=this.scene.gameMode.challenges[this.scrollCursor+s],I=this.challengeLabels[s];I.label.setText(R.getName()),I.leftArrow.setPositionRelative(I.label,this.leftArrowGap,4.5),I.leftArrow.setVisible(R.value!==0),I.rightArrow.setPositionRelative(I.leftArrow,Math.max(this.monoTypeValue.width,this.widestTextBox)+I.leftArrow.displayWidth+2*this.arrowSpacing,0),I.rightArrow.setVisible(R.value!==R.maxValue),I.rightArrow.x+I.rightArrow.width+this.optionsBg.rightWidth+this.arrowSpacing>this.optionsWidth&&I.rightArrow.setX(this.optionsWidth-this.arrowSpacing-this.optionsBg.rightWidth);const i=Math.round((I.leftArrow.x+I.rightArrow.x+I.leftArrow.displayWidth)/2);R.id===ht.SINGLE_TYPE?(this.monoTypeValue.setX(i),this.monoTypeValue.setY(I.label.y+8),this.monoTypeValue.setFrame(R.getValue()),this.monoTypeValue.setVisible(!0),I.value.setVisible(!1),A=!0):(I.value.setText(R.getValue()),I.value.setX(i),I.value.setOrigin(.5,0),I.value.setVisible(!0))}A||this.monoTypeValue.setVisible(!1),this.hasSelectedChallenge=this.scene.gameMode.challenges.some(s=>s.value!==0),this.hasSelectedChallenge?(this.startText.setText(U.t("common:start")),this.startText.setAlpha(1),this.startText.setPositionRelative(this.startBg,(this.startBg.width-this.startText.displayWidth)/2,4)):(this.startText.setText(U.t("challenges:noneSelected")),this.startText.setAlpha(.5),this.startText.setPositionRelative(this.startBg,(this.startBg.width-this.startText.displayWidth)/2,4)),this.challengesContainer.update()}show(A){return super.show(A),this.startCursor.setVisible(!1),this.updateChallengeArrows(!1),this.challengesContainer.setVisible(!0),this.hasSelectedChallenge=this.scene.gameMode.challenges.some(s=>s.value!==0),this.setCursor(0),this.initLabels(),this.updateText(),this.getUi().moveTo(this.challengesContainer,this.getUi().length-1),this.getUi().hideTooltip(),!0}updateChallengeArrows(A){for(let s=0;s<Math.min(9,this.scene.gameMode.challenges.length);s++){const R=this.challengeLabels[s];A?(R.leftArrow.setTint(8421504),R.rightArrow.setTint(8421504)):(R.leftArrow.clearTint(),R.rightArrow.clearTint())}}processInput(A){var i,a,L,S,o;const s=this.getUi(),R=9;let I=!1;if(A===y.CANCEL)this.startCursor.visible?(this.startCursor.setVisible(!1),(i=this.cursorObj)==null||i.setVisible(!0),this.updateChallengeArrows(this.startCursor.visible)):(this.scene.clearPhaseQueue(),this.scene.pushPhase(new Yi(this.scene)),(a=this.scene.getCurrentPhase())==null||a.end()),I=!0;else if(A===y.SUBMIT||A===y.ACTION)this.hasSelectedChallenge?(this.startCursor.visible?(this.scene.unshiftPhase(new kl(this.scene)),(L=this.scene.getCurrentPhase())==null||L.end()):(this.startCursor.setVisible(!0),(S=this.cursorObj)==null||S.setVisible(!1),this.updateChallengeArrows(this.startCursor.visible)),I=!0):I=!1;else if((o=this.cursorObj)!=null&&o.visible&&!this.startCursor.visible)switch(A){case y.UP:if(this.cursor===0)if(this.scrollCursor===0)if(this.scene.gameMode.challenges.length>R){const l=this.setCursor(R-1),D=this.setScrollCursor(this.scene.gameMode.challenges.length-R);I=l&&D}else I=this.setCursor(this.scene.gameMode.challenges.length-1);else I=this.setScrollCursor(this.scrollCursor-1);else I=this.setCursor(this.cursor-1);I&&this.updateText();break;case y.DOWN:if(this.cursor===R-1)if(this.scrollCursor<this.scene.gameMode.challenges.length-R)I=this.setScrollCursor(this.scrollCursor+1);else{const l=this.setCursor(0),D=this.setScrollCursor(0);I=l&&D}else this.scene.gameMode.challenges.length<R&&this.cursor===this.scene.gameMode.challenges.length-1?I=this.setCursor(0):I=this.setCursor(this.cursor+1);I&&this.updateText();break;case y.LEFT:I=this.getActiveChallenge().decreaseValue(),I&&this.updateText();break;case y.RIGHT:I=this.getActiveChallenge().increaseValue(),I&&this.updateText();break}return I&&s.playSelect(),I}setCursor(A){let s=super.setCursor(A);return this.cursorObj||(this.cursorObj=this.scene.add.nineslice(0,0,"summary_moves_cursor",void 0,this.optionsWidth-8,16,1,1,1,1),this.cursorObj.setOrigin(0,0),this.valuesContainer.add(this.cursorObj)),s||(s=!this.cursorObj.visible),this.cursorObj.setVisible(!0),this.cursorObj.setPositionRelative(this.optionsBg,4,4+(this.cursor+this.scrollCursor)*16),s}setScrollCursor(A){return A===this.scrollCursor?!1:(this.scrollCursor=A,this.setCursor(this.cursor),!0)}getActiveChallenge(){return this.scene.gameMode.challenges[this.cursor+this.scrollCursor]}clear(){super.clear(),this.challengesContainer.setVisible(!1),this.eraseCursor()}eraseCursor(){this.cursorObj&&this.cursorObj.destroy(),this.cursorObj=null}};T(SK,"GameChallengesUiHandler");let lc=SK;const oK=class oK extends Phaser.GameObjects.Container{constructor(A){super(A,A.game.canvas.width/6,0),this.queue=[],this.playerGender=A.gameData.gender}setup(){this.defaultWidth=200,this.defaultHeight=40,this.bg=this.scene.add.nineslice(0,0,"achv_bar",void 0,this.defaultWidth,this.defaultHeight,41,6,16,4),this.bg.setOrigin(0,0),this.add(this.bg),this.icon=this.scene.add.sprite(4,4,"items"),this.icon.setOrigin(0,0),this.add(this.icon),this.titleText=se(this.scene,40,3,"",V.MESSAGE,{fontSize:"72px"}),this.titleText.setOrigin(0,0),this.add(this.titleText),this.scoreText=se(this.scene,150,3,"",V.MESSAGE,{fontSize:"72px"}),this.scoreText.setOrigin(1,0),this.add(this.scoreText),this.descriptionText=se(this.scene,43,16,"",V.WINDOW_ALT,{fontSize:"72px"}),this.descriptionText.setOrigin(0,0),this.add(this.descriptionText),this.descriptionText.setWordWrapWidth(664),this.descriptionText.setLineSpacing(-5),this.setScale(.5),this.shown=!1}showAchv(A){if(this.shown){this.queue.push(A);return}const s=A.getTier();this.bg.setTexture(`achv_bar${s?`_${s+1}`:""}`),this.icon.setFrame(A.getIconImage()),this.titleText.setText(A.getName(this.playerGender)),this.scoreText.setVisible(A instanceof oA),A instanceof oA?this.descriptionText.setText(F1(A.localizationKey)):A instanceof MT&&this.descriptionText.setText(A.description),A instanceof oA&&this.scoreText.setText(`+${A.score}pt`),this.bg.width=Math.max(this.defaultWidth,this.icon.displayWidth+this.titleText.displayWidth+this.scoreText.displayWidth+16),this.scoreText.x=this.bg.width-2,this.descriptionText.width=this.bg.width-this.icon.displayWidth-16,this.descriptionText.setWordWrapWidth(this.descriptionText.width*6),this.bg.height=Math.max(this.defaultHeight,this.titleText.displayHeight+this.descriptionText.displayHeight+8),this.icon.y=this.bg.height/2-this.icon.height/2,this.scene.playSound("se/achv"),this.scene.tweens.add({targets:this,x:this.scene.game.canvas.width/6-this.bg.width/2,duration:500,ease:"Sine.easeOut"}),this.scene.time.delayedCall(1e4,()=>this.hide(this.playerGender)),this.setVisible(!0),this.shown=!0}hide(A){this.shown&&this.scene.tweens.add({targets:this,x:this.scene.game.canvas.width/6,duration:500,ease:"Sine.easeIn",onComplete:T(()=>{if(this.shown=!1,this.setVisible(!1),this.queue.length){const s=this.queue.shift();s&&this.showAchv(s)}},"onComplete")})}};T(oK,"AchvBar");let Cc=oK;var fA=(E=>(E[E.SYSTEM=0]="SYSTEM",E[E.SESSION=1]="SESSION",E[E.SETTINGS=2]="SETTINGS",E[E.TUTORIALS=3]="TUTORIALS",E[E.SEEN_DIALOGUES=4]="SEEN_DIALOGUES",E[E.RUN_HISTORY=5]="RUN_HISTORY",E))(fA||{});const xv=-150,o9=0,bv=0,lK=class lK extends Phaser.GameObjects.Container{constructor(A){super(A,xv,bv)}setup(){this.defaultWidth=230,this.defaultHeight=100,this.bg=this.scene.add.nineslice(-5,-5,"bgm_bar",void 0,this.defaultWidth,this.defaultHeight,0,0,10,10),this.bg.setOrigin(0,0),this.add(this.bg),this.musicText=se(this.scene,5,5,"",V.BGM_BAR),this.musicText.setOrigin(0,0),this.musicText.setWordWrapWidth(650,!0),this.add(this.musicText),this.setVisible(!1),this.shown=!1}setBgmToBgmBar(A){this.musicText.setText(`${U.t("bgmName:music")}${this.getRealBgmName(A)}`),this.musicText.width=this.bg.width-20,this.musicText.setWordWrapWidth(this.defaultWidth*4),this.bg.width=Math.min(this.defaultWidth,this.musicText.displayWidth+23),this.bg.height=Math.min(this.defaultHeight,this.musicText.displayHeight+20),this.scene.fieldUI.bringToTop(this),this.y=bv}toggleBgmBar(A){if(this.musicText.text===""){this.setVisible(!1);return}if(!this.scene.showBgmBar){this.setVisible(!1);return}this.scene.tweens.add({targets:this,x:A?o9:xv,duration:500,ease:"Sine.easeInOut",onComplete:T(()=>{this.setVisible(!0)},"onComplete")})}getRealBgmName(A){return U.t([`bgmName:${A}`,"bgmName:missing_entries"],{name:zo(A)})}};T(lK,"BgmBar");let Uc=lK;const CK=class CK extends os{constructor(A,s=null){super(A,s),this.buttonContainers=[],this.buttonBgs=[],this.buttonLabels=[]}getButtonTopMargin(){return 0}setup(){const A=this.getUi();this.modalContainer=this.scene.add.container(0,0),this.modalContainer.setInteractive(new Phaser.Geom.Rectangle(0,0,this.scene.game.canvas.width/6,this.scene.game.canvas.height/6),Phaser.Geom.Rectangle.Contains),this.modalBg=it(this.scene,0,0,0,0),this.modalContainer.add(this.modalBg),this.titleText=se(this.scene,0,4,"",V.SETTINGS_LABEL),this.titleText.setOrigin(.5,0),this.modalContainer.add(this.titleText),A.add(this.modalContainer);const s=this.getButtonLabels();for(const R of s)this.addButton(R);this.modalContainer.setVisible(!1)}addButton(A){const s=this.getButtonTopMargin(),R=se(this.scene,0,8,A,V.TOOLTIP_CONTENT);R.setOrigin(.5,.5);const I=it(this.scene,0,0,R.getBounds().width+8,16,!1,!1,0,0,vR.THIN);I.setOrigin(.5,0),I.setInteractive(new Phaser.Geom.Rectangle(0,0,I.width,I.height),Phaser.Geom.Rectangle.Contains);const i=this.scene.add.container(0,s);this.buttonLabels.push(R),this.buttonBgs.push(I),this.buttonContainers.push(i),i.add(I),i.add(R),this.addInteractionHoverEffect(I),this.modalContainer.add(i)}show(A){if(A.length>=1&&"buttonActions"in A[0]){if(super.show(A),A[0].hasOwnProperty("fadeOut")&&typeof A[0].fadeOut=="function"){const[R,I,i,a]=this.getMargin(),L=this.scene.add.rectangle((this.getWidth()+a+I)/2,(this.getHeight()+R+i)/2,this.scene.game.canvas.width/6,this.scene.game.canvas.height/6,0);L.setOrigin(.5,.5),L.setName("rect-ui-overlay-modal"),L.setAlpha(0),this.modalContainer.add(L),this.modalContainer.moveTo(L,0),this.scene.tweens.add({targets:L,alpha:1,duration:250,ease:"Sine.easeOut",onComplete:A[0].fadeOut})}const s=A[0];this.updateContainer(s),this.modalContainer.setVisible(!0),this.getUi().moveTo(this.modalContainer,this.getUi().length-1);for(let R=0;R<this.buttonBgs.length;R++)R<this.buttonBgs.length&&this.buttonBgs[R].on("pointerdown",I=>s.buttonActions[R]());return!0}return!1}updateContainer(A){const[s,R,I,i]=this.getMargin(A),[a,L]=[this.getWidth(A),this.getHeight(A)];this.modalContainer.setPosition((this.scene.game.canvas.width/6-(a+(R-i)))/2,(-this.scene.game.canvas.height/6-(L+(I-s)))/2),this.modalBg.setSize(a,L);const S=this.getModalTitle(A);this.titleText.setText(S),this.titleText.setX(a/2),this.titleText.setVisible(!!S);for(let o=0;o<this.buttonContainers.length;o++){const l=a/(this.buttonContainers.length+1);this.buttonContainers[o].setPosition(l*(o+1),this.modalBg.height-(this.buttonBgs[o].height+8))}}processInput(A){return!1}clear(){super.clear(),this.modalContainer.setVisible(!1),this.buttonBgs.map(A=>A.off("pointerdown"))}addInteractionHoverEffect(A){A.on("pointerover",()=>{this.setMouseCursorStyle("pointer"),A.setTint(12303291)}),A.on("pointerout",()=>{this.setMouseCursorStyle("default"),A.clearTint()})}};T(CK,"ModalUiHandler");let uL=CK;const UK=class UK extends uL{constructor(A,s=null){super(A,s),this.editing=!1,this.inputContainers=[],this.inputs=[],this.formLabels=[]}getHeight(A){return 20*this.getInputFieldConfigs().length+(this.getModalTitle()?26:0)+(A!=null&&A.errorMessage?12:0)+this.getButtonTopMargin()+28}getReadableErrorMessage(A){return(A==null?void 0:A.indexOf("connection refused"))>-1?"Could not connect to the server":A}setup(){super.setup();const A=this.getInputFieldConfigs(),s=!!this.getModalTitle();A.length>=1&&this.updateFields(A,s),this.errorMessage=se(this.scene,10,(s?31:5)+20*(A.length-1)+16+this.getButtonTopMargin(),"",V.TOOLTIP_CONTENT),this.errorMessage.setColor(this.getTextColor(V.SUMMARY_PINK)),this.errorMessage.setShadowColor(this.getTextColor(V.SUMMARY_PINK,!0)),this.errorMessage.setVisible(!1),this.modalContainer.add(this.errorMessage)}updateFields(A,s){this.inputContainers=[],this.inputs=[],this.formLabels=[],A.forEach((R,I)=>{const i=se(this.scene,10,(s?31:5)+20*I,R.label,V.TOOLTIP_CONTENT);i.name="formLabel"+I,this.formLabels.push(i),this.modalContainer.add(this.formLabels[this.formLabels.length-1]);const a=this.scene.add.container(70,(s?28:2)+20*I);a.setVisible(!1);const L=it(this.scene,0,0,80,16,!1,!1,0,0,vR.XTHIN),S=R==null?void 0:R.isPassword,o=R==null?void 0:R.isReadOnly,l=zb(this.scene,4,-2,440,116,V.TOOLTIP_CONTENT,{type:S?"password":"text",maxLength:S?64:20,readOnly:o});l.setOrigin(0,0),a.add(L),a.add(l),this.inputContainers.push(a),this.modalContainer.add(a),this.inputs.push(l)})}show(A){if(super.show(A)){this.inputContainers.map(R=>R.setVisible(!0));const s=A[0];return this.submitAction=s.buttonActions.length?s.buttonActions[0]:null,this.buttonBgs.length&&(this.buttonBgs[0].off("pointerdown"),this.buttonBgs[0].on("pointerdown",()=>{this.submitAction&&this.submitAction()})),this.modalContainer.y+=24,this.modalContainer.setAlpha(0),this.tween=this.scene.tweens.add({targets:this.modalContainer,duration:Ve(1e3),ease:"Sine.easeInOut",y:"-=24",alpha:1}),!0}return!1}processInput(A){return A===y.SUBMIT&&this.submitAction?(this.submitAction(),!0):!1}sanitizeInputs(){for(const A of this.inputs)A.text=A.text.trim()}updateContainer(A){super.updateContainer(A),this.errorMessage.setText(this.getReadableErrorMessage((A==null?void 0:A.errorMessage)||"")),this.errorMessage.setVisible(!!this.errorMessage.text)}clear(){super.clear(),this.modalContainer.setVisible(!1),this.inputContainers.map(A=>A.setVisible(!1)),this.submitAction=null,this.tween&&this.tween.remove()}};T(UK,"FormModalUiHandler");let xi=UK;const DK=class DK extends xi{constructor(A,s=null){super(A,s),this.buttonGap=10,this.httpUserNotFoundErrorCode=404,this.ERR_REQUIRED_FIELD=R=>R==="username"?`${zo(R)} is required`:`${zo(R)} Id is required`,this.SUCCESS_SERVICE_MODE=(R,I)=>`Username and ${R} successfully ${I.toLowerCase()}ed`,this.ERR_USERNAME_NOT_FOUND="Username not found!",this.ERR_GENERIC_ERROR="There was an error"}getModalTitle(){return"Admin panel"}getWidth(){return this.adminMode===2?180:160}getMargin(){return[0,0,0,0]}getButtonLabels(){switch(this.adminMode){case 0:return["Link Account","Cancel"];case 1:return["Find account","Cancel"];case 2:return["Back to search","Cancel"];default:return["Activate ADMIN","Cancel"]}}getInputFieldConfigs(){const A=[];switch(this.adminMode){case 0:A.push({label:"Username"}),A.push({label:"Discord ID"});break;case 1:A.push({label:"Username"});break;case 2:const s=this.adminResult??{username:"",discordId:"",googleId:"",lastLoggedIn:"",registered:""};A.push({label:"Username",isReadOnly:!0}),A.push({label:"Discord ID",isReadOnly:s.discordId!==""}),A.push({label:"Google ID",isReadOnly:s.googleId!==""}),A.push({label:"Last played",isReadOnly:!0}),A.push({label:"Registered",isReadOnly:!0});break}return A}processInput(A){return A===y.SUBMIT&&this.submitAction?(this.submitAction(),!0):!1}show(A){this.config=A[0],this.adminMode=A[1],this.adminResult=A[2]??{username:"",discordId:"",googleId:"",lastLoggedIn:"",registered:""};const s=A[3],R=this.getInputFieldConfigs(),I=!!this.getModalTitle();this.updateFields(R,I),this.updateContainer(this.config);const i=this.getButtonLabels();for(let a=0;a<i.length;a++)this.buttonLabels[a].setText(i[a]);if(this.errorMessage.setPosition(10,(I?31:5)+20*(R.length-1)+16+this.getButtonTopMargin()),s?(this.errorMessage.setColor(this.getTextColor(V.SUMMARY_PINK)),this.errorMessage.setShadowColor(this.getTextColor(V.SUMMARY_PINK,!0))):(this.errorMessage.setColor(this.getTextColor(V.SUMMARY_GREEN)),this.errorMessage.setShadowColor(this.getTextColor(V.SUMMARY_GREEN,!0))),super.show(A)){this.populateFields(this.adminMode,this.adminResult);const a=this.submitAction;return this.submitAction=L=>{this.submitAction=a;const S=this.convertInputsToAdmin(),o=this.areFieldsValid(this.adminMode);return o.error?(this.scene.ui.setMode($.LOADING,{buttonActions:[]}),this.showMessage(o.errorMessage??"",S,!0)):(this.scene.ui.setMode($.LOADING,{buttonActions:[]}),this.adminMode===0?this.adminLinkUnlink(S,"discord","Link").then(l=>l.error?this.showMessage(l.errorType,S,!0):this.showMessage(this.SUCCESS_SERVICE_MODE("discord","link"),S,!1)):this.adminMode===1?this.adminSearch(S).then(l=>{if(l.error)return this.showMessage(l.errorType,S,!0);this.updateAdminPanelInfo(l.adminSearchResult??S)}):this.adminMode===2&&this.updateAdminPanelInfo(S,1),!1)},!0}return!1}showMessage(A,s,R){this.scene.ui.setMode($.ADMIN,Object.assign(this.config,{errorMessage:A==null?void 0:A.trim()}),this.adminMode,s,R),R?this.scene.ui.playError():this.scene.ui.playSelect()}populateFields(A,s){switch(A){case 0:this.inputs[0].setText(s.username),this.inputs[1].setText(s.discordId);break;case 1:this.inputs[0].setText(s.username);break;case 2:Object.keys(s).forEach((R,I)=>{if(this.inputs[I].setText(s[R]),R==="discordId"||R==="googleId"){const i=this.inputContainers[I].list.find(L=>L.type==="NineSlice"),a=this.scene.add.image(this.inputContainers[I].x+i.width+this.buttonGap,this.inputContainers[I].y+Math.floor(i.height/2),s[R]===""?"link_icon":"unlink_icon");a.setName(`adminBtn_${R}`),a.setOrigin(.5,.5),a.setInteractive(),a.on("pointerdown",()=>{const L=R.toLowerCase().replace("id",""),S=s[R]===""?"Link":"Unlink",o=this.areFieldsValid(this.adminMode,L);if(o.error)return this.scene.ui.setMode($.LOADING,{buttonActions:[]}),this.showMessage(o.errorMessage??"",s,!0);this.adminLinkUnlink(this.convertInputsToAdmin(),L,S).then(l=>{if(l.error)return this.scene.ui.setMode($.LOADING,{buttonActions:[]}),this.showMessage(l.errorType,s,!0);this.scene.ui.setMode($.LOADING,{buttonActions:[]}),this.adminSearch(s).then(D=>D.error?this.showMessage(D.errorType,s,!0):this.showMessage(this.SUCCESS_SERVICE_MODE(L,S),D.adminSearchResult??s,!1))})}),this.addInteractionHoverEffect(a),this.modalContainer.add(a)}});break}}areFieldsValid(A,s){switch(A){case 0:if(!this.inputs[0].text)return{error:!0,errorMessage:this.ERR_REQUIRED_FIELD("username")};if(!this.inputs[1].text)return{error:!0,errorMessage:this.ERR_REQUIRED_FIELD("discord")};break;case 1:if(!this.inputs[0].text)return{error:!0,errorMessage:this.ERR_REQUIRED_FIELD("username")};break;case 2:if(!this.inputs[1].text&&s==="discord")return{error:!0,errorMessage:this.ERR_REQUIRED_FIELD(s)};if(!this.inputs[2].text&&s==="google")return{error:!0,errorMessage:this.ERR_REQUIRED_FIELD(s)};break}return{error:!1}}convertInputsToAdmin(){var A,s,R,I,i,a,L,S,o;return{username:(A=this.inputs[0])!=null&&A.node?this.inputs[0].text:"",discordId:(s=this.inputs[1])!=null&&s.node?(R=this.inputs[1])==null?void 0:R.text:"",googleId:(I=this.inputs[2])!=null&&I.node?(i=this.inputs[2])==null?void 0:i.text:"",lastLoggedIn:(a=this.inputs[3])!=null&&a.node?(L=this.inputs[3])==null?void 0:L.text:"",registered:(S=this.inputs[4])!=null&&S.node?(o=this.inputs[4])==null?void 0:o.text:""}}async adminSearch(A){try{const s=await GO(`admin/account/adminSearch?username=${encodeURIComponent(A.username)}`,!0);return s.ok?{adminSearchResult:await s.json(),error:!1}:{adminSearchResult:A,error:!0,errorType:s.status===this.httpUserNotFoundErrorCode?this.ERR_USERNAME_NOT_FOUND:this.ERR_GENERIC_ERROR}}catch(s){return console.error(s),{error:!0,errorType:s}}}async adminLinkUnlink(A,s,R){try{const I=await En(`admin/account/${s}${R}`,`username=${encodeURIComponent(A.username)}&${s}Id=${encodeURIComponent(s==="discord"?A.discordId:A.googleId)}`,"application/x-www-form-urlencoded",!0);return I.ok?{adminSearchResult:A,error:!1}:{adminSearchResult:A,error:!0,errorType:I.status===this.httpUserNotFoundErrorCode?this.ERR_USERNAME_NOT_FOUND:this.ERR_GENERIC_ERROR}}catch(I){return console.error(I),{error:!0,errorType:I}}}updateAdminPanelInfo(A,s){s=s??2,this.scene.ui.setMode($.ADMIN,{buttonActions:[()=>{this.scene.ui.revertMode(),this.scene.ui.revertMode()},()=>{this.scene.ui.revertMode(),this.scene.ui.revertMode()}]},s,A)}clear(){super.clear();const A=["formLabel","adminBtn"],s=[],R=this.modalContainer.list;for(let I=R.length-1;I>=0;I--)(A.some(i=>R[I].name.includes(i))||R[I].type==="Container"&&R[I].list.find(i=>i.type==="rexInputText"))&&s.push(R[I]);for(;s.length>0;)this.modalContainer.remove(s.pop(),!0)}};T(DK,"AdminUiHandler");let Dc=DK;var Mc=(E=>(E[E.LINK=0]="LINK",E[E.SEARCH=1]="SEARCH",E[E.ADMIN=2]="ADMIN",E))(Mc||{});function l9(E){switch(E){case 0:return"Link";case 1:return"Search";default:return""}}T(l9,"getAdminModeName");var AI=(E=>(E[E.GAME_SETTINGS=0]="GAME_SETTINGS",E[E.ACHIEVEMENTS=1]="ACHIEVEMENTS",E[E.STATS=2]="STATS",E[E.RUN_HISTORY=3]="RUN_HISTORY",E[E.EGG_LIST=4]="EGG_LIST",E[E.EGG_GACHA=5]="EGG_GACHA",E[E.MANAGE_DATA=6]="MANAGE_DATA",E[E.COMMUNITY=7]="COMMUNITY",E[E.SAVE_AND_QUIT=8]="SAVE_AND_QUIT",E[E.LOG_OUT=9]="LOG_OUT",E))(AI||{});let kv="https://wiki.pokerogue.net/start";const C9="https://discord.gg/uWpTfdKG49",U9="https://github.com/pagefaultgames/pokerogue",D9="https://www.reddit.com/r/pokerogue",M9="https://github.com/sponsors/patapancakes",MK=class MK extends vs{constructor(A,s=null){super(A,s),this.textPadding=8,this.defaultMessageBoxWidth=220,this.defaultWordWrapWidth=1224,this.scale=.1666666667,this.excludedMenus=()=>[{condition:[$.COMMAND,$.TITLE].includes(s??$.TITLE),options:[5,4]},{condition:_s,options:[9]}],this.menuOptions=tO(AI).map(R=>parseInt(AI[R])).filter(R=>!this.excludedMenus().some(I=>I.condition&&I.options.includes(R)))}setup(){var R;const A=this.getUi(),s=(R=U.resolvedLanguage)==null?void 0:R.substring(0,2);["de","fr","ko","zh"].includes(s)&&(kv=`https://wiki.pokerogue.net/${s}:start`),this.bgmBar=new Uc(this.scene),this.bgmBar.setup(),A.bgmBar=this.bgmBar,this.menuContainer=this.scene.add.container(1,-(this.scene.game.canvas.height/6)+1),this.menuContainer.setName("menu"),this.menuContainer.setInteractive(new Phaser.Geom.Rectangle(0,0,this.scene.game.canvas.width/6,this.scene.game.canvas.height/6),Phaser.Geom.Rectangle.Contains),this.menuOverlay=new Phaser.GameObjects.Rectangle(this.scene,-1,-1,this.scene.scaledCanvas.width,this.scene.scaledCanvas.height,16777215,.3),this.menuOverlay.setName("menu-overlay"),this.menuOverlay.setOrigin(0,0),this.menuContainer.add(this.menuOverlay),this.menuContainer.add(this.bgmBar),this.menuContainer.setVisible(!1)}render(){const A=this.getUi();this.excludedMenus=()=>[{condition:this.scene.getCurrentPhase()instanceof IO,options:[5,4]},{condition:_s,options:[9]}],this.menuOptions=tO(AI).map(a=>parseInt(AI[a])).filter(a=>!this.excludedMenus().some(L=>L.condition&&L.options.includes(a))),this.optionSelectText=se(this.scene,0,0,this.menuOptions.map(a=>`${U.t(`menuUiHandler:${AI[a]}`)}`).join(`
`),V.WINDOW,{maxLines:this.menuOptions.length}),this.optionSelectText.setLineSpacing(12),this.scale=Sn(V.WINDOW,this.scene.uiTheme).scale,this.menuBg=it(this.scene,this.scene.game.canvas.width/6-(this.optionSelectText.displayWidth+25),0,this.optionSelectText.displayWidth+19+24*this.scale,this.scene.game.canvas.height/6-2),this.menuBg.setOrigin(0,0),this.optionSelectText.setPositionRelative(this.menuBg,10+24*this.scale,6),this.menuContainer.add(this.menuBg),this.menuContainer.add(this.optionSelectText),A.add(this.menuContainer),this.menuMessageBoxContainer=this.scene.add.container(0,130),this.menuMessageBoxContainer.setName("menu-message-box"),this.menuMessageBoxContainer.setVisible(!1),this.menuMessageBox=it(this.scene,0,0,this.defaultMessageBoxWidth,48),this.menuMessageBox.setOrigin(0,0),this.menuMessageBoxContainer.add(this.menuMessageBox),this.dialogueMessageBox=it(this.scene,-this.textPadding,0,this.scene.game.canvas.width/6+this.textPadding*2,49,!1,!1,0,0,vR.THIN),this.dialogueMessageBox.setOrigin(0,0),this.menuMessageBoxContainer.add(this.dialogueMessageBox);const s=se(this.scene,this.textPadding,this.textPadding,"",V.WINDOW,{maxLines:2});s.setName("menu-message"),s.setOrigin(0,0),this.menuMessageBoxContainer.add(s),this.initTutorialOverlay(this.menuContainer),this.initPromptSprite(this.menuMessageBoxContainer),this.message=s,this.setDialogTestMode(!1),this.menuContainer.add(this.menuMessageBoxContainer);const R=[],I=T((a,L,S)=>{A.revertMode(),A.showText(a,null,()=>{const o={options:new Array(5).fill(null).map((l,D)=>D).filter(L).map(l=>({label:U.t("menuUiHandler:slot",{slotNumber:l+1}),handler:T(()=>(S(l),A.revertMode(),A.showText("",0),!0),"handler")})).concat([{label:U.t("menuUiHandler:cancel"),handler:T(()=>(A.revertMode(),A.showText("",0),!0),"handler")}]),xOffset:98};A.setOverlayMode($.MENU_OPTION_SELECT,o)})},"confirmSlot");R.push({label:U.t("menuUiHandler:importSession"),handler:T(()=>(I(U.t("menuUiHandler:importSlotSelect"),()=>!0,a=>this.scene.gameData.importData(fA.SESSION,a)),!0),"handler"),keepOpen:!0}),R.push({label:U.t("menuUiHandler:exportSession"),handler:T(()=>{const a=[];return Promise.all(new Array(5).fill(null).map((L,S)=>{const o=S;return this.scene.gameData.getSession(o).then(l=>{l&&a.push(o)})})).then(()=>{I(U.t("menuUiHandler:exportSlotSelect"),L=>a.indexOf(L)>-1,L=>this.scene.gameData.tryExportData(fA.SESSION,L))}),!0},"handler"),keepOpen:!0}),R.push({label:U.t("menuUiHandler:importRunHistory"),handler:T(()=>(this.scene.gameData.importData(fA.RUN_HISTORY),!0),"handler"),keepOpen:!0}),R.push({label:U.t("menuUiHandler:exportRunHistory"),handler:T(()=>(this.scene.gameData.tryExportData(fA.RUN_HISTORY),!0),"handler"),keepOpen:!0}),R.push({label:U.t("menuUiHandler:importData"),handler:T(()=>(A.revertMode(),this.scene.gameData.importData(fA.SYSTEM),!0),"handler"),keepOpen:!0}),R.push({label:U.t("menuUiHandler:exportData"),handler:T(()=>(this.scene.gameData.tryExportData(fA.SYSTEM),!0),"handler"),keepOpen:!0},{label:U.t("menuUiHandler:consentPreferences"),handler:T(()=>{const a=document.querySelector(".termly-display-preferences"),L=new MouseEvent("click",{view:window,bubbles:!0,cancelable:!0});return a.dispatchEvent(L),a.focus(),!0},"handler"),keepOpen:!0}),(gM||Kb)&&R.push({label:"Test Dialogue",handler:T(()=>{A.playSelect();const a="",L={};return L.buttonActions=[S=>{A.revertMode(),A.playSelect();const l=decodeURIComponent(escape(atob(S))),D=A.getHandler();D.tutorialActive=!0;const M={},c=l.split(" "),G=c[0],P=RegExp("\\{\\{(\\w*)\\}\\}","g"),_=U.t(G).match(P)??[];if(_.length>0)for(let g=0;g<_.length;g++)typeof c[g+1]<"u"&&(M[_[g].replace(/\W/g,"")]=U.t(c[g+1]));this.setDialogTestMode(!0),A.showText(String(U.t(G,M)),null,()=>this.scene.ui.showText("",0,()=>{D.tutorialActive=!1,this.setDialogTestMode(!1)}),null,!0)},()=>{A.revertMode()}],A.setMode($.TEST_DIALOGUE,L,a),!0},"handler"),keepOpen:!0}),R.push({label:U.t("menuUiHandler:cancel"),handler:T(()=>(this.scene.ui.revertMode(),!0),"handler"),keepOpen:!0}),this.manageDataConfig={xOffset:98,options:R,maxOptions:7};const i=[{label:"Wiki",handler:T(()=>{var a;return(a=window.open(kv,"_blank"))==null||a.focus(),!0},"handler"),keepOpen:!0},{label:"Discord",handler:T(()=>{var a;return(a=window.open(C9,"_blank"))==null||a.focus(),!0},"handler"),keepOpen:!0},{label:"GitHub",handler:T(()=>{var a;return(a=window.open(U9,"_blank"))==null||a.focus(),!0},"handler"),keepOpen:!0},{label:"Reddit",handler:T(()=>{var a;return(a=window.open(D9,"_blank"))==null||a.focus(),!0},"handler"),keepOpen:!0},{label:U.t("menuUiHandler:donate"),handler:T(()=>{var a;return(a=window.open(M9,"_blank"))==null||a.focus(),!0},"handler"),keepOpen:!0}];we!=null&&we.hasAdminRole&&i.push({label:"Admin",handler:T(()=>{const a=[Mc.ADMIN],L=[];return Object.values(Mc).filter(S=>!isNaN(Number(S))&&!a.includes(S)).forEach(S=>{L.push({label:l9(S),handler:T(()=>(A.playSelect(),A.setOverlayMode($.ADMIN,{buttonActions:[()=>{A.revertMode(),A.revertMode()},()=>{A.revertMode(),A.revertMode()}]},S),!0),"handler")})}),L.push({label:"Cancel",handler:T(()=>(A.revertMode(),!0),"handler")}),this.scene.ui.setOverlayMode($.OPTION_SELECT,{options:L,delay:0}),!0},"handler"),keepOpen:!0}),i.push({label:U.t("menuUiHandler:cancel"),handler:T(()=>(this.scene.ui.revertMode(),!0),"handler")}),this.communityConfig={xOffset:98,options:i},this.setCursor(0)}show(A){return this.render(),super.show(A),this.menuOptions=tO(AI).map(s=>parseInt(AI[s])).filter(s=>!this.excludedMenus().some(R=>R.condition&&R.options.includes(s))),this.menuContainer.setVisible(!0),this.setCursor(0),this.getUi().moveTo(this.menuContainer,this.getUi().length-1),this.getUi().hideTooltip(),this.scene.playSound("ui/menu_open"),this.menuContainer.bringToTop(this.tutorialOverlay),this.menuContainer.bringToTop(this.menuMessageBoxContainer),fI(this.scene,yR.Menu),this.bgmBar.toggleBgmBar(!0),!0}processInput(A){const s=this.getUi();let R=!1,I=!1;if(A===y.ACTION){let i=this.cursor;const a=this.excludedMenus().find(L=>L.condition);if(a!==void 0&&a.options!==void 0&&a.options.length>0){const L=a.options.sort();for(const S of L)if(i>=S)i++;else break}switch(this.showText("",0),i){case 0:s.setOverlayMode($.SETTINGS),R=!0;break;case 1:s.setOverlayMode($.ACHIEVEMENTS),R=!0;break;case 2:s.setOverlayMode($.GAME_STATS),R=!0;break;case 3:s.setOverlayMode($.RUN_HISTORY),R=!0;break;case 4:this.scene.gameData.eggs.length?(s.revertMode(),s.setOverlayMode($.EGG_LIST),R=!0):(s.showText(U.t("menuUiHandler:noEggs"),null,()=>s.showText(""),Ve(1500)),I=!0);break;case 5:s.revertMode(),s.setOverlayMode($.EGG_GACHA),R=!0;break;case 6:this.manageDataConfig.options.some(S=>S.label===U.t("menuUiHandler:linkDiscord")||S.label===U.t("menuUiHandler:unlinkDiscord"))||this.manageDataConfig.options.splice(this.manageDataConfig.options.length-1,0,{label:(we==null?void 0:we.discordId)===""?U.t("menuUiHandler:linkDiscord"):U.t("menuUiHandler:unlinkDiscord"),handler:T(()=>{if((we==null?void 0:we.discordId)===""){const S=T0(sn),D=`https://discord.com/api/oauth2/authorize?client_id=1248062921129459756&redirect_uri=${encodeURIComponent("https://api.pokerogue.net/auth/discord/callback")}&response_type=code&scope=identify&state=${S}&prompt=none`;return window.open(D,"_self"),!0}else return En("/auth/discord/logout",void 0,void 0,!0).then(S=>{S.ok||console.error(`Unlink failed (${S.status}: ${S.statusText})`),BO().then(()=>this.scene.reset(!0,!0))}),!0},"handler")},{label:(we==null?void 0:we.googleId)===""?U.t("menuUiHandler:linkGoogle"):U.t("menuUiHandler:unlinkGoogle"),handler:T(()=>{if((we==null?void 0:we.googleId)===""){const S=T0(sn),D=`https://accounts.google.com/o/oauth2/auth?client_id=955345393540-2k6lfftf0fdnb0krqmpthjnqavfvvf73.apps.googleusercontent.com&response_type=code&redirect_uri=${encodeURIComponent("https://api.pokerogue.net/auth/google/callback")}&scope=openid&state=${S}`;return window.open(D,"_self"),!0}else return En("/auth/google/logout",void 0,void 0,!0).then(S=>{S.ok||console.error(`Unlink failed (${S.status}: ${S.statusText})`),BO().then(()=>this.scene.reset(!0,!0))}),!0},"handler")}),s.setOverlayMode($.MENU_OPTION_SELECT,this.manageDataConfig),R=!0;break;case 7:s.setOverlayMode($.MENU_OPTION_SELECT,this.communityConfig),R=!0;break;case 8:if(this.scene.currentBattle){R=!0;const S=T(()=>{s.setMode($.LOADING,{buttonActions:[],fadeOut:T(()=>this.scene.gameData.saveAll(this.scene,!0,!0,!0,!0).then(()=>{this.scene.reset(!0)}),"fadeOut")})},"doSaveQuit");this.scene.currentBattle.turn>1?s.showText(U.t("menuUiHandler:losingProgressionWarning"),null,()=>{if(!this.active){this.showText("",0);return}s.setOverlayMode($.CONFIRM,S,()=>{s.revertMode(),this.showText("",0)},!1,-98)}):S()}else I=!0;break;case 9:R=!0;const L=T(()=>{s.setMode($.LOADING,{buttonActions:[],fadeOut:T(()=>GO("account/logout",!0).then(S=>{S.ok||console.error(`Log out failed (${S.status}: ${S.statusText})`),rr(sn),BO().then(()=>this.scene.reset(!0,!0))}),"fadeOut")})},"doLogout");this.scene.currentBattle?s.showText(U.t("menuUiHandler:losingProgressionWarning"),null,()=>{if(!this.active){this.showText("",0);return}s.setOverlayMode($.CONFIRM,L,()=>{s.revertMode(),this.showText("",0)},!1,-98)}):L();break}}else if(A===y.CANCEL)R=!0,s.revertMode().then(i=>{i||s.setMode($.MESSAGE)});else switch(A){case y.UP:this.cursor?R=this.setCursor(this.cursor-1):R=this.setCursor(this.menuOptions.length-1);break;case y.DOWN:this.cursor+1<this.menuOptions.length?R=this.setCursor(this.cursor+1):R=this.setCursor(0);break}return R?s.playSelect():I&&s.playError(),R||I}setDialogTestMode(A){this.menuMessageBox.setVisible(!A),this.dialogueMessageBox.setVisible(A),this.message.setWordWrapWidth(A?this.scene.ui.getMessageHandler().wordWrapWidth:this.defaultWordWrapWidth),this.message.setX(A?this.textPadding+1:this.textPadding),this.message.setY(A?this.textPadding+.4:this.textPadding)}showText(A,s,R,I,i,a){this.menuMessageBoxContainer.setVisible(!!A),super.showText(A,s,R,I,i,a)}setCursor(A){const s=super.setCursor(A);return this.cursorObj||(this.cursorObj=this.scene.add.image(0,0,"cursor"),this.cursorObj.setOrigin(0,0),this.menuContainer.add(this.cursorObj)),this.cursorObj.setScale(this.scale*6),this.cursorObj.setPositionRelative(this.menuBg,7,6+(18+this.cursor*96)*this.scale),s}clear(){super.clear(),this.menuContainer.setVisible(!1),this.bgmBar.toggleBgmBar(!1),this.eraseCursor()}eraseCursor(){this.cursorObj&&this.cursorObj.destroy(),this.cursorObj=null}};T(MK,"MenuUiHandler");let uc=MK;const u9={de:{TextSize:"80px"}},uK=class uK extends vs{constructor(A,s=null){super(A,s),this.ROWS=4,this.COLS=17,this.achvsTotal=Object.keys(At).length,this.vouchersTotal=Object.keys(Ls).length,this.scrollCursor=0}setup(){var c;const A=this.getUi();this.mainContainer=this.scene.add.container(1,-(this.scene.game.canvas.height/6)+1),this.mainContainer.setInteractive(new Phaser.Geom.Rectangle(0,0,this.scene.game.canvas.width/6,this.scene.game.canvas.height/6),Phaser.Geom.Rectangle.Contains),this.headerBg=it(this.scene,0,0,this.scene.game.canvas.width/6-2,24),this.headerBg.setOrigin(0,0),this.headerText=se(this.scene,0,0,"",V.SETTINGS_LABEL),this.headerText.setOrigin(0,0),this.headerText.setPositionRelative(this.headerBg,8,4),this.headerActionButton=new Phaser.GameObjects.Sprite(this.scene,0,0,"keyboard","ACTION.png"),this.headerActionButton.setOrigin(0,0),this.headerActionButton.setPositionRelative(this.headerBg,236,6),this.headerActionText=se(this.scene,0,0,"",V.WINDOW,{fontSize:"60px"}),this.headerActionText.setOrigin(0,0),this.headerActionText.setPositionRelative(this.headerBg,264,8);const s=this.scene.gameData.gender??ct.MALE,R=ct[s].toLowerCase();this.achvsName=U.t("achv:Achievements.name",{context:R}),this.vouchersName=U.t("voucher:vouchers"),this.iconsBg=it(this.scene,0,this.headerBg.height,this.scene.game.canvas.width/6-2,this.scene.game.canvas.height/6-this.headerBg.height-68),this.iconsBg.setOrigin(0,0);const I=6;this.scrollBar=new gI(this.scene,this.iconsBg.width-9,this.iconsBg.y+I,4,this.iconsBg.height-I*2,this.ROWS),this.iconsContainer=this.scene.add.container(5,this.headerBg.height+8),this.icons=[];for(let G=0;G<this.ROWS*this.COLS;G++){const P=G%this.COLS*18,_=Math.floor(G/this.COLS)*18,g=this.scene.add.sprite(P,_,"items","unknown");g.setOrigin(0,0),g.setScale(.5),this.icons.push(g),this.iconsContainer.add(g)}const i=it(this.scene,0,this.headerBg.height+this.iconsBg.height,174,24);i.setOrigin(0,0),this.titleBg=i,this.titleText=se(this.scene,0,0,"",V.WINDOW);const a=((c=u9[U.language])==null?void 0:c.TextSize)??this.titleText.style.fontSize;this.titleText.setFontSize(a);const L=i.x+i.width/2,S=i.y+i.height/2;this.titleText.setOrigin(.5,.5),this.titleText.setPosition(L,S),this.scoreContainer=this.scene.add.container(i.x+i.width,i.y);const o=it(this.scene,0,0,46,24);o.setOrigin(0,0),this.scoreContainer.add(o),this.scoreText=se(this.scene,o.width/2,o.height/2,"",V.WINDOW),this.scoreText.setOrigin(.5,.5),this.scoreContainer.add(this.scoreText);const l=it(this.scene,this.scoreContainer.x+o.width,i.y,98,24);l.setOrigin(0,0),this.unlockText=se(this.scene,0,0,"",V.WINDOW),this.unlockText.setOrigin(.5,.5),this.unlockText.setPositionRelative(l,l.width/2,l.height/2);const D=it(this.scene,0,i.y+i.height,this.scene.game.canvas.width/6-2,42);D.setOrigin(0,0);const M=se(this.scene,0,0,"",V.WINDOW,{maxLines:2});M.setWordWrapWidth(1870),M.setOrigin(0,0),M.setPositionRelative(D,8,4),this.message=M,this.mainContainer.add(this.headerBg),this.mainContainer.add(this.headerActionButton),this.mainContainer.add(this.headerText),this.mainContainer.add(this.headerActionText),this.mainContainer.add(this.iconsBg),this.mainContainer.add(this.scrollBar),this.mainContainer.add(this.iconsContainer),this.mainContainer.add(i),this.mainContainer.add(this.titleText),this.mainContainer.add(this.scoreContainer),this.mainContainer.add(l),this.mainContainer.add(this.unlockText),this.mainContainer.add(D),this.mainContainer.add(M),A.add(this.mainContainer),this.currentPage=0,this.mainContainer.setVisible(!1)}show(A){return super.show(A),this.headerBgX=this.headerBg.getTopRight().x,this.updateAchvIcons(),this.mainContainer.setVisible(!0),this.setCursor(0),this.setScrollCursor(0),this.scrollBar.setTotalRows(Math.ceil(this.currentTotal/this.COLS)),this.scrollBar.setScrollCursor(0),this.getUi().moveTo(this.mainContainer,this.getUi().length-1),this.getUi().hideTooltip(),!0}showAchv(A){const s=this.scene.gameData.gender??ct.MALE,R=ct[s].toLowerCase();A.name=U.t(`achv:${A.localizationKey}.name`,{context:R}),A.description=F1(A.localizationKey);const I=this.scene.gameData.achvUnlocks,i=I.hasOwnProperty(A.id),a=!i&&A.secret&&(!A.parentId||!I.hasOwnProperty(A.parentId));this.titleText.setText(i?A.name:"???"),this.showText(a?"":A.description),this.scoreText.setText(`${A.score}pt`),this.unlockText.setText(i?new Date(I[A.id]).toLocaleDateString():U.t("achv:Locked.name"))}showVoucher(A){const s=this.scene.gameData.voucherUnlocks,R=s.hasOwnProperty(A.id);this.titleText.setText(Sl(A.voucherType)),this.showText(A.description),this.unlockText.setText(R?new Date(s[A.id]).toLocaleDateString():U.t("voucher:locked"))}processInput(A){const s=this.getUi();let R=!1;if(A===y.ACTION&&(R=!0,this.setScrollCursor(0),this.currentPage===0?(this.currentPage=1,this.updateVoucherIcons()):this.currentPage===1&&(this.currentPage=0,this.updateAchvIcons()),this.setCursor(0,!0),this.scrollBar.setTotalRows(Math.ceil(this.currentTotal/this.COLS)),this.scrollBar.setScrollCursor(0),this.mainContainer.update()),A===y.CANCEL)R=!0,this.scene.ui.revertMode();else{const I=Math.floor(this.cursor/this.COLS),i=this.scrollCursor*this.COLS;switch(A){case y.UP:if(this.cursor<this.COLS)if(this.scrollCursor)R=this.setScrollCursor(this.scrollCursor-1);else{R=this.setScrollCursor(Math.ceil(this.currentTotal/this.COLS)-this.ROWS);let L=this.cursor+(this.ROWS-1)*this.COLS;L>this.currentTotal-this.scrollCursor*this.COLS-1&&(L-=this.COLS),R=R&&this.setCursor(L)}else R=this.setCursor(this.cursor-this.COLS);break;case y.DOWN:const a=i+1<this.currentTotal;I>=this.ROWS-1?this.scrollCursor<Math.ceil(this.currentTotal/this.COLS)-this.ROWS&&a?R=this.setScrollCursor(this.scrollCursor+1):R=this.setScrollCursor(0)&&this.setCursor(this.cursor%this.COLS):a&&(R=this.setCursor(Math.min(this.cursor+this.COLS,this.currentTotal-i-1)));break;case y.LEFT:this.cursor%this.COLS===0?R=this.setCursor(Math.min(this.cursor+this.COLS-1,this.currentTotal-i-1)):R=this.setCursor(this.cursor-1);break;case y.RIGHT:(this.cursor+1)%this.COLS===0||this.cursor+i===this.currentTotal-1?R=this.setCursor(this.cursor-this.cursor%this.COLS):R=this.setCursor(this.cursor+1);break}}return R&&s.playSelect(),R}setCursor(A,s){const R=super.setCursor(A);let I=R;if(this.cursorObj||(this.cursorObj=this.scene.add.nineslice(0,0,"select_cursor_highlight",void 0,16,16,1,1,1,1),this.cursorObj.setOrigin(0,0),this.iconsContainer.add(this.cursorObj),I=!0),this.cursorObj.setPositionRelative(this.icons[this.cursor],0,0),I||s)switch(this.currentPage){case 0:s&&(this.titleBg.width=174,this.titleText.x=this.titleBg.width/2,this.scoreContainer.setVisible(!0)),this.showAchv(At[Object.keys(At)[A+this.scrollCursor*this.COLS]]);break;case 1:s&&(this.titleBg.width=220,this.titleText.x=this.titleBg.width/2,this.scoreContainer.setVisible(!1)),this.showVoucher(Ls[Object.keys(Ls)[A+this.scrollCursor*this.COLS]]);break}return R}setScrollCursor(A){if(A===this.scrollCursor)return!1;this.scrollCursor=A,this.scrollBar.setScrollCursor(this.scrollCursor);const s=Math.min(this.cursor,this.currentTotal-this.scrollCursor*this.COLS-1);switch(s!==this.cursor&&this.setCursor(s),this.currentPage){case 0:this.updateAchvIcons(),this.showAchv(At[Object.keys(At)[this.cursor+this.scrollCursor*this.COLS]]);break;case 1:this.updateVoucherIcons(),this.showVoucher(Ls[Object.keys(Ls)[this.cursor+this.scrollCursor*this.COLS]]);break}return!0}updateAchvIcons(){this.headerText.text=this.achvsName,this.headerActionText.text=this.vouchersName;const A=this.headerBgX-this.headerActionText.displayWidth-8;this.headerActionText.setX(A),this.headerActionButton.setX(A-this.headerActionButton.displayWidth-4);const s=this.scene.gameData.achvUnlocks,R=this.scrollCursor*this.COLS,I=this.ROWS*this.COLS,i=Object.values(At).slice(R,I+R);i.forEach((a,L)=>{const S=this.icons[L],o=s.hasOwnProperty(a.id),l=!o&&a.secret&&(!a.parentId||!s.hasOwnProperty(a.parentId)),D=!l&&!o;S.setFrame(l?"unknown":a.iconImage),S.setVisible(!0),D?S.setTintFill(0):S.clearTint()}),i.length<this.icons.length&&this.icons.slice(i.length).map(a=>a.setVisible(!1)),this.currentTotal=this.achvsTotal}updateVoucherIcons(){this.headerText.text=this.vouchersName,this.headerActionText.text=this.achvsName;const A=this.headerBgX-this.headerActionText.displayWidth-8;this.headerActionText.setX(A),this.headerActionButton.setX(A-this.headerActionButton.displayWidth-4);const s=this.scene.gameData.voucherUnlocks,R=this.scrollCursor*this.COLS,I=this.ROWS*this.COLS,i=Object.values(Ls).slice(R,I+R);i.forEach((a,L)=>{const S=this.icons[L],o=s.hasOwnProperty(a.id);S.setFrame(cn(a.voucherType)),S.setVisible(!0),o?S.clearTint():S.setTintFill(0)}),i.length<this.icons.length&&this.icons.slice(i.length).map(a=>a.setVisible(!1)),this.currentTotal=this.vouchersTotal}clear(){super.clear(),this.currentPage=0,this.mainContainer.setVisible(!1),this.setScrollCursor(0),this.setCursor(0,!0),this.eraseCursor()}eraseCursor(){this.cursorObj&&this.cursorObj.destroy(),this.cursorObj=null}};T(uK,"AchvsUiHandler");let hc=uK;const hK=class hK extends dT{constructor(A,s=$.OPTION_SELECT){super(A,s)}getWindowWidth(){return 64}};T(hK,"OptionSelectUiHandler");let bT=hK;const cK=class cK extends os{constructor(A){super(A,$.EGG_HATCH_SCENE),this.eventTarget=new EventTarget}setup(){this.eggHatchContainer=this.scene.add.container(0,-this.scene.game.canvas.height/6),this.scene.fieldUI.add(this.eggHatchContainer);const A=this.scene.anims.generateFrameNames("egg_lightrays",{start:0,end:3});this.scene.anims.exists("egg_lightrays")||this.scene.anims.create({key:"egg_lightrays",frames:A,frameRate:32})}show(A){return super.show(A),this.getUi().showText("",0),this.scene.setModifiersVisible(!1),!0}processInput(A){if(A===y.ACTION||A===y.CANCEL){const s=this.scene.getCurrentPhase();if(s instanceof Zl&&s.trySkip())return!0}return this.scene.ui.getMessageHandler().processInput(A)}setCursor(A){return!1}clear(){super.clear(),this.eggHatchContainer.removeAll(!0),this.getUi().hideTooltip()}};T(cK,"EggHatchSceneHandler");let cc=cK;const GK=class GK{constructor(A,s,R){this.handler=A,this.ROWS=s,this.COLUMNS=R,this.scrollCursor=0,this.cursor=0,this.totalElements=s*R}withScrollBar(A){return this.scrollBar=A,this.scrollBar.setTotalRows(Math.ceil(this.totalElements/this.COLUMNS)),this}withUpdateGridCallBack(A){return this.updateGridCallback=A,this}withUpdateSingleElementCallback(A){return this.updateDetailsCallback=A,this}setTotalElements(A){this.totalElements=A,this.scrollBar&&this.scrollBar.setTotalRows(Math.ceil(this.totalElements/this.COLUMNS)),this.setScrollCursor(0)}getItemOffset(){return this.scrollCursor*this.COLUMNS}processInput(A){let s=!1;const R=Math.min(this.ROWS,Math.ceil(this.totalElements/this.COLUMNS)),I=Math.max(0,Math.ceil(this.totalElements/this.COLUMNS)-R),i=Math.floor(this.cursor/this.COLUMNS),a=this.cursor%this.COLUMNS,L=this.scrollCursor*this.COLUMNS,S=Math.min(this.totalElements-1,this.totalElements-I*this.COLUMNS-1);switch(A){case y.UP:if(i>0)s=this.setCursor(this.cursor-this.COLUMNS);else if(this.scrollCursor>0)s=this.setScrollCursor(this.scrollCursor-1);else{let o=this.cursor+(R-1)*this.COLUMNS;o>S&&(o-=this.COLUMNS),s=this.setScrollCursor(I,o)}break;case y.DOWN:i<R-1?s=this.setCursor(Math.min(this.cursor+this.COLUMNS,this.totalElements-L-1)):this.scrollCursor<I?s=this.setScrollCursor(this.scrollCursor+1):s=this.setScrollCursor(0,this.cursor%this.COLUMNS);break;case y.LEFT:a>0?s=this.setCursor(this.cursor-1):this.scrollCursor===I&&i===R-1?s=this.setCursor(S):s=this.setCursor(this.cursor+this.COLUMNS-1);break;case y.RIGHT:a<this.COLUMNS-1&&this.cursor+L<this.totalElements-1?s=this.setCursor(this.cursor+1):s=this.setCursor(this.cursor-a);break}return s}reset(){this.setScrollCursor(0),this.setCursor(0)}setCursor(A){return this.cursor=A,this.handler.setCursor(A)}setScrollCursor(A,s){const R=A!==this.scrollCursor;R&&(this.scrollCursor=A,this.scrollBar&&this.scrollBar.setScrollCursor(A),this.updateGridCallback&&this.updateGridCallback());let I=!1;const i=this.cursor+this.scrollCursor*this.COLUMNS;return s!==void 0?I=this.setCursor(s):i>=this.totalElements?I=this.setCursor(this.totalElements-this.scrollCursor*this.COLUMNS-1):R&&this.updateDetailsCallback&&this.updateDetailsCallback(i),R||I}};T(GK,"ScrollableGridUiHandler");let iC=GK;const PK=class PK extends vs{constructor(A){super(A,$.EGG_LIST),this.ROWS=9,this.COLUMNS=11}setup(){const A=this.getUi();this.eggListContainer=this.scene.add.container(0,-this.scene.game.canvas.height/6),this.eggListContainer.setVisible(!1),A.add(this.eggListContainer);const s=this.scene.add.rectangle(0,0,this.scene.game.canvas.width/6,this.scene.game.canvas.height/6,26720);s.setOrigin(0,0),this.eggListContainer.add(s);const R=this.scene.add.image(0,0,"egg_list_bg");R.setOrigin(0,0),this.eggListContainer.add(R),this.eggListContainer.add(it(this.scene,1,85,106,22)),this.eggListContainer.add(it(this.scene,1,102,106,50,!0)),this.eggListContainer.add(it(this.scene,1,147,106,32,!0)),this.eggListContainer.add(it(this.scene,107,1,212,178)),this.iconAnimHandler=new IL,this.iconAnimHandler.setup(this.scene),this.eggNameText=se(this.scene,8,68,"",V.SUMMARY),this.eggNameText.setOrigin(0,0),this.eggListContainer.add(this.eggNameText),this.eggDateText=se(this.scene,8,91,"",V.TOOLTIP_CONTENT),this.eggListContainer.add(this.eggDateText),this.eggHatchWavesText=se(this.scene,8,108,"",V.TOOLTIP_CONTENT),this.eggHatchWavesText.setWordWrapWidth(540),this.eggListContainer.add(this.eggHatchWavesText),this.eggGachaInfoText=se(this.scene,8,152,"",V.TOOLTIP_CONTENT),this.eggGachaInfoText.setWordWrapWidth(540),this.eggListContainer.add(this.eggGachaInfoText),this.eggListIconContainer=this.scene.add.container(113,5),this.eggListContainer.add(this.eggListIconContainer),this.cursorObj=this.scene.add.image(0,0,"select_cursor"),this.cursorObj.setOrigin(0,0),this.eggListContainer.add(this.cursorObj),this.eggSprite=this.scene.add.sprite(54,37,"egg"),this.eggListContainer.add(this.eggSprite);const I=new gI(this.scene,310,5,4,170,this.ROWS);this.eggListContainer.add(I),this.scrollGridHandler=new iC(this,this.ROWS,this.COLUMNS).withScrollBar(I).withUpdateGridCallBack(()=>this.updateEggIcons()).withUpdateSingleElementCallback(a=>this.setEggDetails(a)),this.eggListMessageBoxContainer=this.scene.add.container(0,this.scene.game.canvas.height/6),this.eggListMessageBoxContainer.setVisible(!1),this.eggListContainer.add(this.eggListMessageBoxContainer);const i=it(this.scene,1,-1,318,28);i.setOrigin(0,1),this.eggListMessageBoxContainer.add(i),this.message=se(this.scene,8,-8,"",V.WINDOW,{maxLines:1}),this.message.setOrigin(0,1),this.eggListMessageBoxContainer.add(this.message),this.cursor=-1}show(A){return super.show(A),this.initEggIcons(),this.getUi().bringToTop(this.eggListContainer),this.eggListContainer.setVisible(!0),this.scrollGridHandler.setTotalElements(this.scene.gameData.eggs.length),this.updateEggIcons(),this.setCursor(0),!0}initEggIcons(){this.eggIcons=[];for(let A=0;A<Math.min(this.ROWS*this.COLUMNS,this.scene.gameData.eggs.length);A++){const s=A%this.COLUMNS*18,R=Math.floor(A/this.COLUMNS)*18,I=this.scene.add.sprite(s-2,R+2,"egg_icons");I.setScale(.5),I.setOrigin(0,0),this.eggListIconContainer.add(I),this.eggIcons.push(I)}}updateEggIcons(){const A=this.scrollGridHandler.getItemOffset(),s=Math.min(this.eggIcons.length,this.scene.gameData.eggs.length-A);this.eggIcons.forEach((R,I)=>{if(I!==this.cursor&&this.iconAnimHandler.addOrUpdate(R,ys.NONE),I<s){const i=this.scene.gameData.eggs[I+A];R.setFrame(i.getKey()),R.setVisible(!0)}else R.setVisible(!1)})}setEggDetails(A){const s=this.scene.gameData.eggs[A];this.eggSprite.setFrame(`egg_${s.getKey()}`),this.eggNameText.setText(`${U.t("egg:egg")} (${s.getEggDescriptor()})`),this.eggDateText.setText(new Date(s.timestamp).toLocaleString(void 0,{weekday:"short",year:"numeric",month:"2-digit",day:"numeric"})),this.eggHatchWavesText.setText(s.getEggHatchWavesMessage()),this.eggGachaInfoText.setText(s.getEggTypeDescriptor(this.scene))}processInput(A){const s=this.getUi();let R=!1;const I=!1;return A===y.CANCEL?(s.revertMode(),R=!0):R=this.scrollGridHandler.processInput(A),R&&s.playSelect(),R||I}setCursor(A){let s=!1;const R=this.cursor;if(s=super.setCursor(A),s){const I=this.eggIcons[A];this.cursorObj.setPositionRelative(I,114,5),R>-1&&this.iconAnimHandler.addOrUpdate(this.eggIcons[R],ys.NONE),this.iconAnimHandler.addOrUpdate(I,ys.ACTIVE),this.setEggDetails(A+this.scrollGridHandler.getItemOffset())}return s}clear(){super.clear(),this.scrollGridHandler.reset(),this.cursor=-1,this.eggListContainer.setVisible(!1),this.iconAnimHandler.removeAll(),this.eggListIconContainer.removeAll(!0),this.eggIcons=[]}};T(PK,"EggListUiHandler");let Gc=PK;const _K=class _K extends vs{constructor(A){super(A,$.EGG_GACHA),this.scale=.1666666667,this.gachaContainers=[],this.gachaKnobs=[],this.gachaHatches=[],this.gachaInfoContainers=[],this.voucherCountLabels=[],this.defaultText=U.t("egg:selectMachine")}setup(){this.gachaCursor=0,this.scale=Sn(V.WINDOW,this.scene.uiTheme).scale;const A=this.getUi();this.eggGachaContainer=this.scene.add.container(0,-this.scene.game.canvas.height/6),this.eggGachaContainer.setVisible(!1),A.add(this.eggGachaContainer);const s=this.scene.add.nineslice(0,0,"default_bg",void 0,320,180,0,0,16,0);s.setOrigin(0,0),this.eggGachaContainer.add(s);const R=this.scene.anims.generateFrameNames("gacha_hatch",{suffix:".png",start:1,end:4});this.scene.anims.exists("open")||this.scene.anims.create({key:"open",frames:R,frameRate:12}),this.scene.anims.exists("close")||this.scene.anims.create({key:"close",frames:R.reverse(),frameRate:12}),IE(Un).forEach((c,G)=>{const P=Un[c].toString().toLowerCase(),_=this.scene.add.container(180*G,18),g=this.scene.add.sprite(0,0,`gacha_${P}`);g.setOrigin(0,0);const H=this.scene.add.sprite(115,80,`gacha_underlay_${P}`);H.setOrigin(0,0);const F=this.scene.add.sprite(0,0,"gacha_eggs");F.setOrigin(0,0);const p=this.scene.add.sprite(0,0,"gacha_glass");p.setOrigin(0,0);const v=this.scene.add.container(160,46),k=U.resolvedLanguage??"en";let j=V.WINDOW_ALT,q=4,ie=0,z=-20,Oe=6;["de","es","fr","ko","pt-BR"].includes(k)&&(j=V.SMALLER_WINDOW_ALT,q=2,ie=2);let ae=q,Le=ie;["de","es"].includes(k)&&(z=-25,Oe=10,ae=-6,Le=0);const Ne=se(this.scene,q,ie,U.t("egg:legendaryUPGacha"),j);switch(Ne.setOrigin(0,0),v.add(Ne),c){case Un.LEGENDARY:["de","es"].includes(k)&&(Ne.setAlign("center"),Ne.setY(0)),["pt-BR"].includes(k)?Ne.setX(ae-2):Ne.setX(ae),Ne.setY(Le);const de=this.scene.add.sprite(z,Oe,"pokemon_icons_0");["pt-BR"].includes(k)&&de.setX(z-2),de.setScale(.5),de.setOrigin(0,.5),v.add(de);break;case Un.MOVE:["de","es","fr","pt-BR"].includes(k)&&(Ne.setAlign("center"),Ne.setY(0)),Ne.setText(U.t("egg:moveUPGacha")),Ne.setX(0),Ne.setOrigin(.5,0);break;case Un.SHINY:["de","fr","ko"].includes(k)&&(Ne.setAlign("center"),Ne.setY(0)),Ne.setText(U.t("egg:shinyUPGacha")),Ne.setX(0),Ne.setOrigin(.5,0);break}const De=this.scene.add.sprite(191,89,"gacha_knob"),Be=this.scene.add.sprite(115,73,"gacha_hatch");Be.setOrigin(0,0),_.add(F),_.add(H),_.add(g),_.add(p),_.add(De),_.add(Be),_.add(v),p.setAlpha(.5),Be.setAlpha(.9),Be.on("animationupdate",(de,fe)=>H.setFrame(fe.textureFrame==="4.png"?"open_hatch":"default")),this.gachaContainers.push(_),this.gachaKnobs.push(De),this.gachaHatches.push(Be),this.gachaInfoContainers.push(v),this.eggGachaContainer.add(_),this.updateGachaInfo(G)}),this.eggGachaOptionsContainer=this.scene.add.container(),this.eggGachaOptionsContainer=this.scene.add.container(this.scene.game.canvas.width/6,148),this.eggGachaContainer.add(this.eggGachaOptionsContainer),this.eggGachaOptionSelectBg=it(this.scene,0,0,96,16+576*this.scale),this.eggGachaOptionSelectBg.setOrigin(1,1),this.eggGachaOptionsContainer.add(this.eggGachaOptionSelectBg);const I="x1",a=[{multiplier:I,description:`1 ${U.t("egg:pull")}`,icon:cn($A.REGULAR)},{multiplier:"x10",description:`10 ${U.t("egg:pulls")}`,icon:cn($A.REGULAR)},{multiplier:I,description:`5 ${U.t("egg:pulls")}`,icon:cn($A.PLUS)},{multiplier:I,description:`10 ${U.t("egg:pulls")}`,icon:cn($A.PREMIUM)},{multiplier:I,description:`25 ${U.t("egg:pulls")}`,icon:cn($A.GOLDEN)}],L=U.resolvedLanguage??"en",S=a.map(c=>{const G=c.description.split(" ");return G[0].length<2&&(G[0]+=["zh","ko"].includes(L.substring(0,2))?" ":"  "),c.multiplier===I&&(G[0]=" "+G[0]),`     ${c.multiplier.padEnd(5)}${G.join(" ")}`}).join(`
`),o=se(this.scene,0,0,`${S}
${U.t("menu:cancel")}`,V.WINDOW);o.setLineSpacing(28),o.setFontSize("80px"),this.eggGachaOptionsContainer.add(o),o.setPositionRelative(this.eggGachaOptionSelectBg,16,9),a.forEach((c,G)=>{const P=this.scene.add.sprite(0,0,"items",c.icon);P.setScale(3*this.scale),P.setPositionRelative(this.eggGachaOptionSelectBg,20,9+(48+G*96)*this.scale),this.eggGachaOptionsContainer.add(P)}),this.eggGachaContainer.add(this.eggGachaOptionsContainer),new Array(tO($A).length).fill(null).map((c,G)=>{const P=this.scene.add.container(this.scene.game.canvas.width/6-56*G,0),_=it(this.scene,0,0,56,22);_.setOrigin(1,0),P.add(_);const g=se(this.scene,-48,3,"0",V.WINDOW);g.setOrigin(0,0),P.add(g),this.voucherCountLabels.push(g);const H=cn(G),F=this.scene.add.sprite(-19,2,"items",H);F.setOrigin(0,0),F.setScale(.5),P.add(F),this.eggGachaContainer.add(P)}),this.eggGachaOverlay=this.scene.add.rectangle(0,0,s.displayWidth,s.displayHeight,0),this.eggGachaOverlay.setOrigin(0,0),this.eggGachaOverlay.setAlpha(0),this.eggGachaContainer.add(this.eggGachaOverlay),this.eggGachaSummaryContainer=this.scene.add.container(0,0),this.eggGachaSummaryContainer.setVisible(!1),this.eggGachaContainer.add(this.eggGachaSummaryContainer);const l=this.scene.add.container(0,148),D=it(this.scene,0,0,320,32);D.setOrigin(0,0),l.add(D),this.eggGachaMessageBox=D;const M=se(this.scene,8,8,"",V.WINDOW,{maxLines:2});M.setOrigin(0,0),l.add(M),this.message=M,this.initTutorialOverlay(this.eggGachaContainer),this.eggGachaContainer.add(l),this.initPromptSprite(l),this.setCursor(0)}show(A){super.show(A),this.getUi().showText(this.defaultText,0),this.setGachaCursor(1);for(let s=0;s<this.gachaContainers.length;s++)this.updateGachaInfo(s);return this.updateVoucherCounts(),this.getUi().bringToTop(this.eggGachaContainer),this.eggGachaContainer.setVisible(!0),fI(this.scene,yR.Egg_Gacha),!0}getDelayValue(A){return this.transitioning&&this.transitionCancelled&&(A=Math.ceil(A/5)),Ve(A)}pull(A=0,s=0,R){Ge.EGG_GACHA_PULL_COUNT_OVERRIDE&&!s&&(A=Ge.EGG_GACHA_PULL_COUNT_OVERRIDE),this.eggGachaOptionsContainer.setVisible(!1),this.setTransitioning(!0);const I=T(()=>{if(this.transitionCancelled)return this.showSummary(R);const i=this.scene.add.sprite(127,75,"egg",`egg_${R[s].getKey()}`);i.setScale(.5),this.gachaContainers[this.gachaCursor].add(i),this.gachaContainers[this.gachaCursor].moveTo(i,2);const a=T(()=>{this.scene.playSound("se/gacha_running",{loop:!0}),this.scene.time.delayedCall(this.getDelayValue(s?500:1250),()=>{this.scene.playSound("se/gacha_dispense"),this.scene.time.delayedCall(this.getDelayValue(750),()=>{this.scene.sound.stopByKey("se/gacha_running"),this.scene.tweens.add({targets:i,duration:this.getDelayValue(350),y:95,ease:"Bounce.easeOut",onComplete:T(()=>{this.scene.time.delayedCall(this.getDelayValue(125),()=>{this.scene.playSound("se/pb_catch"),this.gachaHatches[this.gachaCursor].play("open"),this.scene.tweens.add({targets:i,duration:this.getDelayValue(350),scale:.75,ease:"Sine.easeIn"}),this.scene.tweens.add({targets:i,y:110,duration:this.getDelayValue(350),ease:"Back.easeOut",onComplete:T(()=>{this.gachaHatches[this.gachaCursor].play("close"),this.scene.tweens.add({targets:i,y:200,duration:this.getDelayValue(350),ease:"Cubic.easeIn",onComplete:T(()=>{++s<A?this.pull(A,s,R):this.showSummary(R)},"onComplete")})},"onComplete")})})},"onComplete")})})})},"doPullAnim");s?a():(this.scene.playSound("se/gacha_dial"),this.scene.tweens.add({targets:this.gachaKnobs[this.gachaCursor],duration:this.getDelayValue(350),angle:90,ease:"Cubic.easeInOut",onComplete:T(()=>{this.scene.tweens.add({targets:this.gachaKnobs[this.gachaCursor],duration:this.getDelayValue(350),angle:0,ease:"Sine.easeInOut"}),this.scene.time.delayedCall(this.getDelayValue(350),a)},"onComplete")}))},"doPull");if(A||(A=1),s||(s=0),!R){R=[];for(let i=1;i<=A;i++){const a={scene:this.scene,pulled:!0,sourceType:this.gachaCursor};if(i===A){const S=this.getGuaranteedEggTierFromPullCount(A);!R.some(o=>o.tier>=S)&&S!==f.COMMON&&(a.tier=S)}const L=new PI(a);R.push(L)}R=AO(R),(this.scene.currentBattle?this.scene.gameData.saveAll(this.scene,!0,!0,!0):this.scene.gameData.saveSystem()).then(i=>{if(!i)return this.scene.reset(!0);I()});return}I()}getGuaranteedEggTierFromPullCount(A){switch(A){case 10:return f.RARE;case 25:return f.EPIC;default:return f.COMMON}}showSummary(A){const s=this.getDelayValue(750);this.summaryFinished=!1,this.transitionCancelled=!1,this.setTransitioning(!0),this.eggGachaSummaryContainer.setVisible(!0);const R=A.length<20?1:.5;this.scene.tweens.add({targets:this.eggGachaOverlay,alpha:.5,ease:"Sine.easeOut",duration:s,onComplete:T(()=>{const i=Math.ceil(A.length/5),a=Math.min(A.length,5),L=this.eggGachaOverlay.displayHeight-this.eggGachaMessageBox.displayHeight;A.map((o,l)=>{const D=l%5,M=Math.floor(l/5),c=this.eggGachaOverlay.displayWidth/(a+2),G=L/(i+2),P=G/2*(M/Math.max(i-1,1))+G/4,_=this.scene.add.container(c*(D+1)+c*.5,G*(M+1)+P);_.setScale(1e-4);const g=this.scene.add.sprite(0,0,"egg",`egg_${o.getKey()}`);_.add(g);const H=se(this.scene,0,14,o.getEggDescriptor(),V.PARTY,{align:"center"});return H.setOrigin(.5,0),H.setTint(t8(o.isManaphyEgg()?f.EPIC:o.tier)),_.add(H),this.eggGachaSummaryContainer.addAt(_,0),_}).forEach((o,l)=>{const D=this.transitionCancelled?0:this.getDelayValue(l*100);this.scene.time.delayedCall(D,()=>this.scene.tweens.add({targets:o,duration:this.getDelayValue(350),scale:R,ease:"Sine.easeOut",onComplete:T(()=>{l===A.length-1&&(this.setTransitioning(!1),this.summaryFinished=!0)},"onComplete")}))})},"onComplete")})}hideSummary(){this.setTransitioning(!0),this.scene.tweens.add({targets:[this.eggGachaOverlay,this.eggGachaSummaryContainer],alpha:0,duration:this.getDelayValue(250),ease:"Cubic.easeIn",onComplete:T(()=>{this.eggGachaSummaryContainer.setVisible(!1),this.eggGachaSummaryContainer.setAlpha(1),this.eggGachaSummaryContainer.removeAll(!0),this.setTransitioning(!1),this.summaryFinished=!1,this.eggGachaOptionsContainer.setVisible(!0)},"onComplete")})}updateGachaInfo(A){const s=this.gachaInfoContainers[A];switch(A){case Un.LEGENDARY:const R=Ke(mh(this.scene,new Date().getTime()));s.getAt(1).setTexture(R.getIconAtlasKey(),R.getIconId(!1));break}}consumeVouchers(A,s){this.scene.gameData.voucherCounts[A]=Math.max(this.scene.gameData.voucherCounts[A]-s,0),this.updateVoucherCounts()}updateVoucherCounts(){this.voucherCountLabels.forEach((A,s)=>{A.setText(this.scene.gameData.voucherCounts[s].toString())})}showText(A,s,R,I,i,a){A||(A=this.defaultText),(A==null?void 0:A.indexOf(`
`))===-1?(this.eggGachaMessageBox.setSize(320,32),this.eggGachaMessageBox.setY(0),this.message.setY(8)):(this.eggGachaMessageBox.setSize(320,46),this.eggGachaMessageBox.setY(-14),this.message.setY(-6)),super.showText(A,s,R,I,i,a)}showError(A){this.showText(A,void 0,()=>this.showText(this.defaultText),Ve(1500))}setTransitioning(A){this.transitioning!==A&&(this.transitioning=A,this.transitionCancelled=!1)}processInput(A){const s=this.getUi();let R=!1,I=!1;if(this.transitioning)if(!this.transitionCancelled&&(A===y.ACTION||A===y.CANCEL))this.transitionCancelled=!0,R=!0;else return!1;else if(this.eggGachaSummaryContainer.visible)this.summaryFinished&&(A===y.ACTION||A===y.CANCEL)&&(this.hideSummary(),R=!0);else switch(A){case y.ACTION:switch(this.cursor){case 0:!this.scene.gameData.voucherCounts[$A.REGULAR]&&!Ge.EGG_FREE_GACHA_PULLS_OVERRIDE?(I=!0,this.showError(U.t("egg:notEnoughVouchers"))):this.scene.gameData.eggs.length<99||Ge.UNLIMITED_EGG_COUNT_OVERRIDE?(Ge.EGG_FREE_GACHA_PULLS_OVERRIDE||this.consumeVouchers($A.REGULAR,1),this.pull(),R=!0):(I=!0,this.showError(U.t("egg:tooManyEggs")));break;case 2:!this.scene.gameData.voucherCounts[$A.PLUS]&&!Ge.EGG_FREE_GACHA_PULLS_OVERRIDE?(I=!0,this.showError(U.t("egg:notEnoughVouchers"))):this.scene.gameData.eggs.length<95||Ge.UNLIMITED_EGG_COUNT_OVERRIDE?(Ge.EGG_FREE_GACHA_PULLS_OVERRIDE||this.consumeVouchers($A.PLUS,1),this.pull(5),R=!0):(I=!0,this.showError(U.t("egg:tooManyEggs")));break;case 1:case 3:this.cursor===1&&this.scene.gameData.voucherCounts[$A.REGULAR]<10&&!Ge.EGG_FREE_GACHA_PULLS_OVERRIDE||this.cursor===3&&!this.scene.gameData.voucherCounts[$A.PREMIUM]&&!Ge.EGG_FREE_GACHA_PULLS_OVERRIDE?(I=!0,this.showError(U.t("egg:notEnoughVouchers"))):this.scene.gameData.eggs.length<90||Ge.UNLIMITED_EGG_COUNT_OVERRIDE?(this.cursor===3?Ge.EGG_FREE_GACHA_PULLS_OVERRIDE||this.consumeVouchers($A.PREMIUM,1):Ge.EGG_FREE_GACHA_PULLS_OVERRIDE||this.consumeVouchers($A.REGULAR,10),this.pull(10),R=!0):(I=!0,this.showError(U.t("egg:tooManyEggs")));break;case 4:!this.scene.gameData.voucherCounts[$A.GOLDEN]&&!Ge.EGG_FREE_GACHA_PULLS_OVERRIDE?(I=!0,this.showError(U.t("egg:notEnoughVouchers"))):this.scene.gameData.eggs.length<75||Ge.UNLIMITED_EGG_COUNT_OVERRIDE?(Ge.EGG_FREE_GACHA_PULLS_OVERRIDE||this.consumeVouchers($A.GOLDEN,1),this.pull(25),R=!0):(I=!0,this.showError(U.t("egg:tooManyEggs")));break;case 5:s.revertMode(),R=!0;break}break;case y.CANCEL:this.getUi().revertMode(),R=!0;break;case y.UP:this.cursor&&(R=this.setCursor(this.cursor-1));break;case y.DOWN:this.cursor<5&&(R=this.setCursor(this.cursor+1));break;case y.LEFT:this.gachaCursor&&(R=this.setGachaCursor(this.gachaCursor-1));break;case y.RIGHT:this.gachaCursor<tO(Un).length-1&&(R=this.setGachaCursor(this.gachaCursor+1));break}return R?s.playSelect():I&&s.playError(),R||I}setCursor(A){const s=super.setCursor(A);return this.cursorObj||(this.cursorObj=this.scene.add.image(0,0,"cursor"),this.eggGachaOptionsContainer.add(this.cursorObj)),this.cursorObj.setScale(this.scale*6),this.cursorObj.setPositionRelative(this.eggGachaOptionSelectBg,10,9+(48+this.cursor*96)*this.scale),s}setGachaCursor(A){const R=this.gachaCursor!==A;return R&&(this.gachaCursor=A,this.setTransitioning(!0),this.scene.tweens.add({targets:this.gachaContainers,duration:this.eggGachaContainer.visible?500:0,x:T((I,i,a,L)=>180*(L-A),"x"),ease:"Cubic.easeInOut",onComplete:T(()=>this.setTransitioning(!1),"onComplete")})),R}clear(){super.clear(),this.setGachaCursor(-1),this.eggGachaContainer.setVisible(!1)}};T(_K,"EggGachaUiHandler");let Pc=_K;const HK=class HK extends xi{constructor(A,s=null){super(A,s),this.ERR_USERNAME="invalid username",this.ERR_PASSWORD="invalid password",this.ERR_ACCOUNT_EXIST="account doesn't exist",this.ERR_PASSWORD_MATCH="password doesn't match",this.ERR_NO_SAVES="No save files found",this.ERR_TOO_MANY_SAVES="Too many save files found"}setup(){super.setup(),this.buildExternalPartyContainer(),this.infoContainer=this.scene.add.container(0,0),this.usernameInfoImage=this.buildInteractableImage("settings_icon","username-info-icon",{x:20,scale:.5}),this.infoContainer.add(this.usernameInfoImage),this.getUi().add(this.infoContainer),this.infoContainer.setVisible(!1),this.infoContainer.disableInteractive()}buildExternalPartyContainer(){this.externalPartyContainer=this.scene.add.container(0,0),this.externalPartyContainer.setInteractive(new Phaser.Geom.Rectangle(0,0,this.scene.game.canvas.width/12,this.scene.game.canvas.height/12),Phaser.Geom.Rectangle.Contains),this.externalPartyTitle=se(this.scene,0,4,"",V.SETTINGS_LABEL),this.externalPartyTitle.setOrigin(.5,0),this.externalPartyBg=it(this.scene,0,0,0,0),this.externalPartyContainer.add(this.externalPartyBg),this.externalPartyContainer.add(this.externalPartyTitle),this.googleImage=this.buildInteractableImage("google","google-icon"),this.discordImage=this.buildInteractableImage("discord","discord-icon"),this.externalPartyContainer.add(this.googleImage),this.externalPartyContainer.add(this.discordImage),this.getUi().add(this.externalPartyContainer),this.externalPartyContainer.add(this.googleImage),this.externalPartyContainer.add(this.discordImage),this.externalPartyContainer.setVisible(!1)}getModalTitle(A){return U.t("menu:login")}getWidth(A){return 160}getMargin(A){return[0,0,48,0]}getButtonLabels(A){return[U.t("menu:login"),U.t("menu:register")]}getReadableErrorMessage(A){const s=A==null?void 0:A.indexOf(":");switch(s>0&&(A=A.slice(0,s)),A){case this.ERR_USERNAME:return U.t("menu:invalidLoginUsername");case this.ERR_PASSWORD:return U.t("menu:invalidLoginPassword");case this.ERR_ACCOUNT_EXIST:return U.t("menu:accountNonExistent");case this.ERR_PASSWORD_MATCH:return U.t("menu:unmatchingPassword");case this.ERR_NO_SAVES:return"P01: "+U.t("menu:noSaves");case this.ERR_TOO_MANY_SAVES:return"P02: "+U.t("menu:tooManySaves")}return super.getReadableErrorMessage(A)}getInputFieldConfigs(){const A=[];return A.push({label:U.t("menu:username")}),A.push({label:U.t("menu:password"),isPassword:!0}),A}show(A){if(super.show(A)){const s=A[0];this.processExternalProvider(s);const R=this.submitAction;return this.submitAction=I=>{this.submitAction=R,this.sanitizeInputs(),this.scene.ui.setMode($.LOADING,{buttonActions:[]});const i=T(a=>{this.scene.ui.setMode($.LOGIN_FORM,Object.assign(s,{errorMessage:a==null?void 0:a.trim()})),this.scene.ui.playError()},"onFail");if(!this.inputs[0].text)return i(U.t("menu:emptyUsername"));En("account/login",`username=${encodeURIComponent(this.inputs[0].text)}&password=${encodeURIComponent(this.inputs[1].text)}`,"application/x-www-form-urlencoded").then(a=>a.ok?a.json():a.text()).then(a=>{a.hasOwnProperty("token")?(bx(sn,a.token),R&&R()):i(a)})},!0}return!1}clear(){super.clear(),this.externalPartyContainer.setVisible(!1),this.infoContainer.setVisible(!1),this.setMouseCursorStyle("default"),[this.discordImage,this.googleImage,this.usernameInfoImage].forEach(A=>A.off("pointerdown"))}processExternalProvider(A){this.externalPartyTitle.setText(U.t("menu:orUse")??""),this.externalPartyTitle.setX(20+this.externalPartyTitle.text.length),this.externalPartyTitle.setVisible(!0),this.externalPartyContainer.setPositionRelative(this.modalContainer,175,0),this.externalPartyContainer.setVisible(!0),this.externalPartyBg.setSize(this.externalPartyTitle.text.length+50,this.modalBg.height),this.getUi().moveTo(this.externalPartyContainer,this.getUi().length-1),this.googleImage.setPosition(this.externalPartyBg.width/3.1,this.externalPartyBg.height-60),this.discordImage.setPosition(this.externalPartyBg.width/3.1,this.externalPartyBg.height-40),this.infoContainer.setPosition(5,-76),this.infoContainer.setVisible(!0),this.getUi().moveTo(this.infoContainer,this.getUi().length-1),this.usernameInfoImage.setPositionRelative(this.infoContainer,0,0),this.discordImage.on("pointerdown",()=>{const i=`https://discord.com/api/oauth2/authorize?client_id=1248062921129459756&redirect_uri=${encodeURIComponent("https://api.pokerogue.net/auth/discord/callback")}&response_type=code&scope=identify&prompt=none`;window.open(i,"_self")}),this.googleImage.on("pointerdown",()=>{const i=`https://accounts.google.com/o/oauth2/auth?client_id=955345393540-2k6lfftf0fdnb0krqmpthjnqavfvvf73.apps.googleusercontent.com&redirect_uri=${encodeURIComponent("https://api.pokerogue.net/auth/google/callback")}&response_type=code&scope=openid`;window.open(i,"_self")});const s=T(R=>{this.scene.ui.setMode($.LOADING,{buttonActions:[]}),this.scene.ui.setModeForceTransition($.LOGIN_FORM,Object.assign(A,{errorMessage:R==null?void 0:R.trim()})),this.scene.ui.playError()},"onFail");this.usernameInfoImage.on("pointerdown",()=>{const R=Object.keys(localStorage),I="data_",i=R.filter(a=>a.indexOf(I)>=0);if(i.length>0&&i.length<=2){const a=[];for(let L=0;L<i.length;L++)a.push({label:i[L].replace(I,""),handler:T(()=>(this.scene.ui.revertMode(),this.infoContainer.disableInteractive(),!0),"handler")});this.scene.ui.setOverlayMode($.OPTION_SELECT,{options:a,delay:1e3}),this.infoContainer.setInteractive(new Phaser.Geom.Rectangle(0,0,this.scene.game.canvas.width,this.scene.game.canvas.height),Phaser.Geom.Rectangle.Contains)}else return i.length>2?s(this.ERR_TOO_MANY_SAVES):s(this.ERR_NO_SAVES)}),this.externalPartyContainer.setAlpha(0),this.scene.tweens.add({targets:this.externalPartyContainer,duration:Ve(1e3),ease:"Sine.easeInOut",y:"-=24",alpha:1}),this.infoContainer.setAlpha(0),this.scene.tweens.add({targets:this.infoContainer,duration:Ve(1e3),ease:"Sine.easeInOut",y:"-=24",alpha:1})}buildInteractableImage(A,s,R={}){const{scale:I=.07,x:i=0,y:a=0,origin:L={x:0,y:0}}=R,S=this.scene.add.image(i,a,A);return S.setName(s),S.setOrigin(L.x,L.y),S.setScale(I),S.setInteractive(),this.addInteractionHoverEffect(S),S}};T(HK,"LoginFormUiHandler");let _c=HK;const Su={es:{inputFieldFontSize:"50px",errorMessageFontSize:"40px"}},dK=class dK extends xi{getModalTitle(A){return U.t("menu:register")}getWidth(A){return 160}getMargin(A){return[0,0,48,0]}getButtonTopMargin(){return 8}getButtonLabels(A){return[U.t("menu:register"),U.t("menu:backToLogin")]}getReadableErrorMessage(A){const s=A==null?void 0:A.indexOf(":");switch(s>0&&(A=A.slice(0,s)),A){case"invalid username":return U.t("menu:invalidRegisterUsername");case"invalid password":return U.t("menu:invalidRegisterPassword");case"failed to add account record":return U.t("menu:usernameAlreadyUsed")}return super.getReadableErrorMessage(A)}getInputFieldConfigs(){const A=[];return A.push({label:U.t("menu:username")}),A.push({label:U.t("menu:password"),isPassword:!0}),A.push({label:U.t("menu:confirmPassword"),isPassword:!0}),A}setup(){var R;super.setup(),this.modalContainer.list.forEach(I=>{var i;if(I instanceof Phaser.GameObjects.Text&&I!==this.titleText){const a=(i=Su[U.resolvedLanguage])==null?void 0:i.inputFieldFontSize;a&&I.setFontSize(a)}});const A=((R=Su[U.resolvedLanguage])==null?void 0:R.warningMessageFontSize)??"42px",s=se(this.scene,10,87,U.t("menu:registrationAgeWarning"),V.TOOLTIP_CONTENT,{fontSize:A});this.modalContainer.add(s)}show(A){if(super.show(A)){const s=A[0],R=this.submitAction;return this.submitAction=I=>{this.submitAction=R,this.sanitizeInputs(),this.scene.ui.setMode($.LOADING,{buttonActions:[]});const i=T(a=>{var S;this.scene.ui.setMode($.REGISTRATION_FORM,Object.assign(s,{errorMessage:a==null?void 0:a.trim()})),this.scene.ui.playError();const L=(S=Su[U.resolvedLanguage])==null?void 0:S.errorMessageFontSize;L&&this.errorMessage.setFontSize(L)},"onFail");if(!this.inputs[0].text)return i(U.t("menu:emptyUsername"));if(!this.inputs[1].text)return i(this.getReadableErrorMessage("invalid password"));if(this.inputs[1].text!==this.inputs[2].text)return i(U.t("menu:passwordNotMatchingConfirmPassword"));En("account/register",`username=${encodeURIComponent(this.inputs[0].text)}&password=${encodeURIComponent(this.inputs[1].text)}`,"application/x-www-form-urlencoded").then(a=>a.text()).then(a=>{a?i(a):En("account/login",`username=${encodeURIComponent(this.inputs[0].text)}&password=${encodeURIComponent(this.inputs[1].text)}`,"application/x-www-form-urlencoded").then(L=>L.ok?L.json():L.text()).then(L=>{L.hasOwnProperty("token")?(bx(sn,L.token),R&&R()):i(L)})})},!0}return!1}};T(dK,"RegistrationFormUiHandler");let Hc=dK;const fK=class fK extends uL{constructor(A,s=null){super(A,s)}getModalTitle(){return""}getWidth(){return 80}getHeight(){return 32}getMargin(){return[0,0,48,0]}getButtonLabels(){return[]}setup(){super.setup();const A=se(this.scene,this.getWidth()/2,this.getHeight()/2,U.t("menu:loading"),V.WINDOW);A.setOrigin(.5,.5),this.modalContainer.add(A)}};T(fK,"LoadingModalUiHandler");let dc=fK;const $R={playTime:{label_key:"playTime",sourceFunc:T(E=>T1(E.gameStats.playTime),"sourceFunc")},battles:{label_key:"totalBattles",sourceFunc:T(E=>E.gameStats.battles.toString(),"sourceFunc")},startersUnlocked:{label_key:"starters",sourceFunc:T(E=>{const A=E.getStarterCount(s=>!!s.caughtAttr);return`${A} (${Math.floor(A/Object.keys(CA).length*1e3)/10}%)`},"sourceFunc")},shinyStartersUnlocked:{label_key:"shinyStarters",sourceFunc:T(E=>{const A=E.getStarterCount(s=>!!(s.caughtAttr&Fe.SHINY));return`${A} (${Math.floor(A/Object.keys(CA).length*1e3)/10}%)`},"sourceFunc")},dexSeen:{label_key:"speciesSeen",sourceFunc:T(E=>{const A=E.getSpeciesCount(s=>!!s.seenAttr);return`${A} (${Math.floor(A/Object.keys(E.dexData).length*1e3)/10}%)`},"sourceFunc")},dexCaught:{label_key:"speciesCaught",sourceFunc:T(E=>{const A=E.getSpeciesCount(s=>!!s.caughtAttr);return`${A} (${Math.floor(A/Object.keys(E.dexData).length*1e3)/10}%)`},"sourceFunc")},ribbonsOwned:{label_key:"ribbonsOwned",sourceFunc:T(E=>E.gameStats.ribbonsOwned.toString(),"sourceFunc")},classicSessionsPlayed:{label_key:"classicRuns",sourceFunc:T(E=>E.gameStats.classicSessionsPlayed.toString(),"sourceFunc")},sessionsWon:{label_key:"classicWins",sourceFunc:T(E=>E.gameStats.sessionsWon.toString(),"sourceFunc")},dailyRunSessionsPlayed:{label_key:"dailyRunAttempts",sourceFunc:T(E=>E.gameStats.dailyRunSessionsPlayed.toString(),"sourceFunc")},dailyRunSessionsWon:{label_key:"dailyRunWins",sourceFunc:T(E=>E.gameStats.dailyRunSessionsWon.toString(),"sourceFunc")},endlessSessionsPlayed:{label_key:"endlessRuns",sourceFunc:T(E=>E.gameStats.endlessSessionsPlayed.toString(),"sourceFunc"),hidden:!0},highestEndlessWave:{label_key:"highestWaveEndless",sourceFunc:T(E=>E.gameStats.highestEndlessWave.toString(),"sourceFunc"),hidden:!0},highestMoney:{label_key:"highestMoney",sourceFunc:T(E=>r0(E.gameStats.highestMoney),"sourceFunc")},highestDamage:{label_key:"highestDamage",sourceFunc:T(E=>E.gameStats.highestDamage.toString(),"sourceFunc")},highestHeal:{label_key:"highestHPHealed",sourceFunc:T(E=>E.gameStats.highestHeal.toString(),"sourceFunc")},pokemonSeen:{label_key:"pokemonEncountered",sourceFunc:T(E=>E.gameStats.pokemonSeen.toString(),"sourceFunc")},pokemonDefeated:{label_key:"pokemonDefeated",sourceFunc:T(E=>E.gameStats.pokemonDefeated.toString(),"sourceFunc")},pokemonCaught:{label_key:"pokemonCaught",sourceFunc:T(E=>E.gameStats.pokemonCaught.toString(),"sourceFunc")},pokemonHatched:{label_key:"eggsHatched",sourceFunc:T(E=>E.gameStats.pokemonHatched.toString(),"sourceFunc")},subLegendaryPokemonSeen:{label_key:"subLegendsSeen",sourceFunc:T(E=>E.gameStats.subLegendaryPokemonSeen.toString(),"sourceFunc"),hidden:!0},subLegendaryPokemonCaught:{label_key:"subLegendsCaught",sourceFunc:T(E=>E.gameStats.subLegendaryPokemonCaught.toString(),"sourceFunc"),hidden:!0},subLegendaryPokemonHatched:{label_key:"subLegendsHatched",sourceFunc:T(E=>E.gameStats.subLegendaryPokemonHatched.toString(),"sourceFunc"),hidden:!0},legendaryPokemonSeen:{label_key:"legendsSeen",sourceFunc:T(E=>E.gameStats.legendaryPokemonSeen.toString(),"sourceFunc"),hidden:!0},legendaryPokemonCaught:{label_key:"legendsCaught",sourceFunc:T(E=>E.gameStats.legendaryPokemonCaught.toString(),"sourceFunc"),hidden:!0},legendaryPokemonHatched:{label_key:"legendsHatched",sourceFunc:T(E=>E.gameStats.legendaryPokemonHatched.toString(),"sourceFunc"),hidden:!0},mythicalPokemonSeen:{label_key:"mythicalsSeen",sourceFunc:T(E=>E.gameStats.mythicalPokemonSeen.toString(),"sourceFunc"),hidden:!0},mythicalPokemonCaught:{label_key:"mythicalsCaught",sourceFunc:T(E=>E.gameStats.mythicalPokemonCaught.toString(),"sourceFunc"),hidden:!0},mythicalPokemonHatched:{label_key:"mythicalsHatched",sourceFunc:T(E=>E.gameStats.mythicalPokemonHatched.toString(),"sourceFunc"),hidden:!0},shinyPokemonSeen:{label_key:"shiniesSeen",sourceFunc:T(E=>E.gameStats.shinyPokemonSeen.toString(),"sourceFunc"),hidden:!0},shinyPokemonCaught:{label_key:"shiniesCaught",sourceFunc:T(E=>E.gameStats.shinyPokemonCaught.toString(),"sourceFunc"),hidden:!0},shinyPokemonHatched:{label_key:"shiniesHatched",sourceFunc:T(E=>E.gameStats.shinyPokemonHatched.toString(),"sourceFunc"),hidden:!0},pokemonFused:{label_key:"pokemonFused",sourceFunc:T(E=>E.gameStats.pokemonFused.toString(),"sourceFunc"),hidden:!0},trainersDefeated:{label_key:"trainersDefeated",sourceFunc:T(E=>E.gameStats.trainersDefeated.toString(),"sourceFunc")},eggsPulled:{label_key:"eggsPulled",sourceFunc:T(E=>E.gameStats.eggsPulled.toString(),"sourceFunc"),hidden:!0},rareEggsPulled:{label_key:"rareEggsPulled",sourceFunc:T(E=>E.gameStats.rareEggsPulled.toString(),"sourceFunc"),hidden:!0},epicEggsPulled:{label_key:"epicEggsPulled",sourceFunc:T(E=>E.gameStats.epicEggsPulled.toString(),"sourceFunc"),hidden:!0},legendaryEggsPulled:{label_key:"legendaryEggsPulled",sourceFunc:T(E=>E.gameStats.legendaryEggsPulled.toString(),"sourceFunc"),hidden:!0},manaphyEggsPulled:{label_key:"manaphyEggsPulled",sourceFunc:T(E=>E.gameStats.manaphyEggsPulled.toString(),"sourceFunc"),hidden:!0}},BK=class BK extends os{constructor(A,s=null){super(A,s),this.statLabels=[],this.statValues=[]}setup(){const A=this.getUi();this.gameStatsContainer=this.scene.add.container(1,-(this.scene.game.canvas.height/6)+1),this.gameStatsContainer.setInteractive(new vA.Geom.Rectangle(0,0,this.scene.game.canvas.width/6,this.scene.game.canvas.height/6),vA.Geom.Rectangle.Contains);const s=it(this.scene,0,0,this.scene.game.canvas.width/6-2,24);s.setOrigin(0,0);const R=se(this.scene,0,0,U.t("gameStatsUiHandler:stats"),V.SETTINGS_LABEL);R.setOrigin(0,0),R.setPositionRelative(s,8,4);const I=(this.scene.game.canvas.width/6-2)/2,[i,a]=new Array(2).fill(null).map((S,o)=>{const l=I+2,D=Math.floor(this.scene.game.canvas.height/6-s.height-2),M=it(this.scene,(I-2)*o,s.height,l,D,!1,!1,o>0?-3:0,1);return M.setOrigin(0,0),M});this.statsContainer=this.scene.add.container(0,0),new Array(18).fill(null).map((S,o)=>{const l=se(this.scene,8+(o%2===1?I:0),28+Math.floor(o/2)*16,"",V.STATS_LABEL);l.setOrigin(0,0),this.statsContainer.add(l),this.statLabels.push(l);const D=se(this.scene,I*(o%2+1)-8,l.y,"",V.STATS_VALUE);D.setOrigin(1,0),this.statsContainer.add(D),this.statValues.push(D)}),this.gameStatsContainer.add(s),this.gameStatsContainer.add(R),this.gameStatsContainer.add(i),this.gameStatsContainer.add(a),this.gameStatsContainer.add(this.statsContainer);const L=this.scene.uiTheme===bR.LEGACY;this.arrowDown=this.scene.add.sprite(I,this.scene.game.canvas.height/6-(L?9:5),"prompt"),this.gameStatsContainer.add(this.arrowDown),this.arrowUp=this.scene.add.sprite(I,s.height+(L?7:3),"prompt"),this.arrowUp.flipY=!0,this.gameStatsContainer.add(this.arrowUp),A.add(this.gameStatsContainer),this.setCursor(0),this.gameStatsContainer.setVisible(!1)}show(A){return super.show(A),this.setCursor(0),this.updateStats(),this.arrowUp.play("prompt"),this.arrowDown.play("prompt"),this.scene.uiTheme===bR.LEGACY&&(this.arrowUp.setTint(4737096),this.arrowDown.setTint(4737096)),this.updateArrows(),this.gameStatsContainer.setVisible(!0),this.getUi().moveTo(this.gameStatsContainer,this.getUi().length-1),this.getUi().hideTooltip(),!0}updateStats(){const A=Object.keys($R).slice(this.cursor*2,this.cursor*2+18);if(A.forEach((s,R)=>{const I=$R[s],i=I.sourceFunc(this.scene.gameData);this.statLabels[R].setText(!I.hidden||isNaN(parseInt(i))||parseInt(i)?U.t(`gameStatsUiHandler:${I.label_key}`):"???"),this.statValues[R].setText(i)}),A.length<18)for(let s=A.length;s<18;s++)this.statLabels[s].setText(""),this.statValues[s].setText("")}updateArrows(){const A=this.cursor>0;this.arrowUp.setVisible(A);const s=this.cursor<Math.ceil((Object.keys($R).length-18)/2);this.arrowDown.setVisible(s)}processInput(A){const s=this.getUi();let R=!1;if(A===y.CANCEL)R=!0,this.scene.ui.revertMode();else switch(A){case y.UP:this.cursor&&(R=this.setCursor(this.cursor-1));break;case y.DOWN:this.cursor<Math.ceil((Object.keys($R).length-18)/2)&&(R=this.setCursor(this.cursor+1));break}return R&&s.playSelect(),R}setCursor(A){const s=super.setCursor(A);return s&&(this.updateStats(),this.updateArrows()),s}clear(){super.clear(),this.gameStatsContainer.setVisible(!1)}};T(BK,"GameStatsUiHandler");let fc=BK;function h9(){const E=Object.keys($R);for(const A of E){if(typeof $R[A]=="string"){let s=$R[A],R=!1;s.endsWith("?")&&(s=s.slice(0,-1),R=!0),$R[A]={label_key:s,sourceFunc:T(I=>I.gameStats[A].toString(),"sourceFunc"),hidden:R}}else $R[A]===null&&($R[A]={sourceFunc:T(s=>s.gameStats[A].toString(),"sourceFunc")});if(!$R[A].label_key){const s=A.replace(/([a-z]{2,})([A-Z]{1}(?:[^A-Z]|$))/g,"$1_$2");$R[A].label_key=Bn(`${s[0].toUpperCase()}${s.slice(1)}`)}}}T(h9,"initStatsKeys");const Zv=6,c9=10,G9=[...Array(c9).fill("battlesWon"),"joinTheDiscord","infiniteLevels","everythingIsStackable","optionalSaveScumming","biomes","openSource","playWithSpeed","liveBugTesting","heavyInfluence","pokemonRiskAndPokemonRain","nowWithMoreSalt","infiniteFusionAtHome","brokenEggMoves","magnificent","doPeopleReadThis","thatsCrazy","gottaCatchEmAll","questionableBalancing","coolShaders","aiFree","suddenDifficultySpikes","basedOnAnUnfinishedFlashGame","moreAddictiveThanIntended","mostlyConsistentSeeds","achievementPointsDontDoAnything","nothingBeatsAJellyFilledDonut","dontTalkAboutTheTinkatonIncident","alsoTryPokengine","alsoTryEmeraldRogue","alsoTryRadicalRed","eeveeExpo","checkOutYnoproject","breedersInSpace","alsoTryPokemonUnbound","tryTheJohtoDragonChallenge","basicReadingAbilityRecommended","shoutoutsToTheArtists","gamblingNotEncouraged","dontForgetToTakeABreak","wEvent","ifItsNotAccurateItsAccurate","everyLossIsProgressMade","liveWoChienReaction","itsAFeatureNotABug","theEggsAreNotForEating","7.8outOf10TooManyWaterBiomes","butNothingHappened","thePowerOfScienceIsAmazing","freeToPlay","theresATimeAndPlaceForEverything","nowWithShinierShinies","smilesGoForMiles","certainlyNotDragonFree","haveANiceDay","redacted","hi","transRights","shinyOddsHigherThanYouThink","noFalseTrades","notForProfit","timeForYourDailyRun","moreEggsThanADaycare","disclaimerHarshSunDoesNotGiveVitaminD","whoNeedsAMap","luxrayIsNotADarkType","selfDestructiveEncounters","mostOptionsAreViable","pokerogueMorse","smiley","beAwareOfPassives","asSeenOnTheWorldWideWeb","vaultinVeluzas","tooManyStarters","checkTheWiki","winWithYourFavorites","alsoTryPokerogueWait","theWayISeeItKyogreIsSurrounded","tryOutHoneyGather","notForTheFaintOfHeart","p","flipYourDeviceToEvolveInkay","inArceusWeTrust","whyDidTheTorchicCrossTheRoad","goodLuck","fuseWisely","compensation","prepareForTroubleAndMakeItDouble","anEggForYourTroubles","regirock","hereForAGoodTime","getGoodOrDont","checkTheSubreddit","betterNerfGreninja","inCaseOfUpdateClearYourCache","insertTextHere","endingEndlessNotFound","iLikeMyEggsVouchered","YOU","noAddedSugar","notSponsored","notRated","justOneMoreWaveMom","saltCured","onlyOnPokerogueNet","pixelPerfection","openSource","probablyGood","itsAMonsterHouse","dontForgetYourPassword","tripleTripleTripleAxel","questionExclamation","clownEncounters","fullOfBerries","limitsAreMeantToBeBrokenSometimes","keepItCasual","serversProbablyWorking","mew","makeItRainAndYourProblemsGoAway","customMusicTracks","youAreValid","number591IsLookingOff","timeForYourDeliDelivery","goodFirstImpression","iPreferRarerCandies"];function P9(){return[...G9].map(A=>`splashMessages:${A}`)}T(P9,"getSplashMessages");const Ua=[{name:"Halloween Update",eventType:0,shinyMultiplier:2,friendshipMultiplier:2,startDate:new Date(Date.UTC(2024,9,27,0)),endDate:new Date(Date.UTC(2024,10,4,0)),bannerKey:"halloween2024-event-",scale:.21,availableLangs:["en","de","it","fr","ja","ko","es","pt-BR","zh-CN"]}],gK=class gK{constructor(){}isActive(A){return A.startDate<new Date&&new Date<A.endDate}activeEvent(){return Ua.find(A=>this.isActive(A))}isEventActive(){return Ua.some(A=>this.isActive(A))}activeEventHasBanner(){return Ua.filter(s=>this.isActive(s)&&s.hasOwnProperty("bannerFilename")).length>0}getFriendshipMultiplier(){let A=1;return Ua.filter(R=>this.isActive(R)).forEach(R=>{A*=R.friendshipMultiplier??1}),A}getShinyMultiplier(){let A=1;return Ua.filter(R=>R.eventType===0&&this.isActive(R)).forEach(R=>{A*=R.shinyMultiplier??1}),A}getEventBannerFilename(){var A;return((A=Ua.find(s=>this.isActive(s)))==null?void 0:A.bannerKey)??""}};T(gK,"TimedEventManager");let Bc=gK;const KK=class KK extends Phaser.GameObjects.Container{constructor(A,s,R,I){super(A,s,R),this.availableWidth=A.scaledCanvas.width,this.event=I,this.setVisible(!1)}setWidth(A){var s;if(A!==this.availableWidth){this.availableWidth=A;const R=this.availableWidth/2+(((s=this.event)==null?void 0:s.xOffset)??0);this.banner&&(this.banner.x=R),this.eventTimerText&&(this.eventTimerText.x=R)}}setup(){const A=U.resolvedLanguage;if(this.event&&this.event.bannerKey){let s=this.event.bannerKey;A&&this.event.availableLangs&&this.event.availableLangs.length>0&&(this.event.availableLangs.includes(A)?s+=A:s+="en"),this.event.bannerKey;const R=5,I=this.event.eventType!==1,i=this.scene.game.canvas.height/6-R-(I?10:0)-(this.event.yOffset??0);this.banner=new Phaser.GameObjects.Image(this.scene,this.availableWidth/2,i-R,s),this.banner.setName("img-event-banner"),this.banner.setOrigin(.5,1),this.banner.setScale(this.event.scale??.18),I&&(this.eventTimerText=se(this.scene,this.banner.x,this.banner.y+2,this.timeToGo(this.event.endDate),V.WINDOW),this.eventTimerText.setName("text-event-timer"),this.eventTimerText.setScale(.15),this.eventTimerText.setOrigin(.5,0),this.add(this.eventTimerText)),this.add(this.banner)}}show(){this.setVisible(!0),this.updateCountdown(),this.eventTimer=setInterval(()=>{this.updateCountdown()},1e3)}clear(){this.setVisible(!1),this.eventTimer&&clearInterval(this.eventTimer),this.eventTimer=null}timeToGo(A){function s(o){return(o<10?"0":"")+o}T(s,"z");const R=new Date;let I=Math.abs(A.getTime()-R.getTime());I=Math.abs(I);const i=I/864e5|0,a=I%864e5/36e5|0,L=I%36e5/6e4|0,S=Math.round(I%6e4/1e3);return"Event Ends in : "+s(i)+"d "+s(a)+"h "+s(L)+"m "+s(S)+"s"}updateCountdown(){this.event&&this.event.eventType!==1&&this.eventTimerText.setText(this.timeToGo(this.event.endDate))}};T(KK,"TimedEventDisplay");let gc=KK;const IN=class IN extends bT{constructor(A,s=$.TITLE){super(A,s)}setup(){super.setup();const A=this.getUi();this.titleContainer=this.scene.add.container(0,-(this.scene.game.canvas.height/6)),this.titleContainer.setName("title"),this.titleContainer.setAlpha(0),A.add(this.titleContainer);const s=this.scene.add.image(this.scene.game.canvas.width/6/2,8,"logo");s.setOrigin(.5,0),this.titleContainer.add(s),this.scene.eventManager.isEventActive()&&(this.eventDisplay=new gc(this.scene,0,0,this.scene.eventManager.activeEvent()),this.eventDisplay.setup(),this.titleContainer.add(this.eventDisplay)),this.playerCountLabel=se(this.scene,this.scene.game.canvas.width/6-2,this.scene.game.canvas.height/6-13-576*Sn(V.WINDOW,this.scene.uiTheme).scale,`? ${U.t("menu:playersOnline")}`,V.MESSAGE,{fontSize:"54px"}),this.playerCountLabel.setOrigin(1,0),this.titleContainer.add(this.playerCountLabel),this.splashMessageText=se(this.scene,s.x+64,s.y+s.displayHeight-8,"",V.MONEY,{fontSize:"54px"}),this.splashMessageText.setOrigin(.5,.5),this.splashMessageText.setAngle(-20),this.titleContainer.add(this.splashMessageText);const R=this.splashMessageText.scale;this.scene.tweens.add({targets:this.splashMessageText,duration:Ve(350),scale:R*1.25,loop:-1,yoyo:!0}),this.appVersionText=se(this.scene,s.x-60,s.y+s.displayHeight+4,"",V.MONEY,{fontSize:"54px"}),this.appVersionText.setOrigin(.5,.5),this.appVersionText.setAngle(0),this.titleContainer.add(this.appVersionText)}updateTitleStats(){GO("game/titlestats").then(A=>A.json()).then(A=>{this.playerCountLabel.setText(`${A.playerCount} ${U.t("menu:playersOnline")}`),this.splashMessage==="splashMessages:battlesWon"&&this.splashMessageText.setText(U.t(this.splashMessage,{count:A.battleCount}))}).catch(A=>{console.error(`Failed to fetch title stats:
`,A)})}show(A){const s=super.show(A);if(s){this.splashMessage=Fb(P9()),this.splashMessageText.setText(U.t(this.splashMessage,{count:IN.BATTLES_WON_FALLBACK})),this.appVersionText.setText("v"+kx);const R=this.getUi();this.scene.eventManager.isEventActive()&&(this.eventDisplay.setWidth(this.scene.scaledCanvas.width-this.optionSelectBg.width-this.optionSelectBg.x),this.eventDisplay.show()),this.updateTitleStats(),this.titleStatsTimer=setInterval(()=>{this.updateTitleStats()},6e4),this.scene.tweens.add({targets:[this.titleContainer,R.getMessageHandler().bg],duration:Ve(325),alpha:T(I=>I===this.titleContainer?1:0,"alpha"),ease:"Sine.easeInOut"})}return s}clear(){var s;super.clear();const A=this.getUi();(s=this.eventDisplay)==null||s.clear(),this.titleStatsTimer&&clearInterval(this.titleStatsTimer),this.titleStatsTimer=null,this.scene.tweens.add({targets:[this.titleContainer,A.getMessageHandler().bg],duration:Ve(325),alpha:T(R=>R===this.titleContainer?0:1,"alpha"),ease:"Sine.easeInOut"})}};T(IN,"TitleUiHandler"),IN.BATTLES_WON_FALLBACK=-99999999;let Kc=IN;const FK=class FK extends Phaser.GameObjects.Container{constructor(A){super(A,A.game.canvas.width/6-4,A.game.canvas.height/6-4)}setup(){this.icon=this.scene.add.sprite(0,0,"saving_icon"),this.icon.setOrigin(1,1),this.add(this.icon),this.animActive=!1,this.shown=!1,this.setAlpha(0),this.setVisible(!1)}show(){this.shown=!0,!this.animActive&&(this.animActive=!0,this.scene.tweens.add({targets:this,alpha:1,duration:Ve(250),ease:"Sine.easeInOut",onComplete:T(()=>{this.scene.time.delayedCall(Ve(500),()=>{this.animActive=!1,this.shown||this.hide()})},"onComplete")}),this.setVisible(!0),this.shown=!0)}hide(){this.shown=!1,!this.animActive&&(this.animActive=!0,this.scene.tweens.add({targets:this,alpha:0,duration:Ve(250),ease:"Sine.easeInOut",onComplete:T(()=>{this.animActive=!1,this.setVisible(!1),this.shown&&this.show()},"onComplete")}),this.shown=!1)}};T(FK,"SavingIconHandler");let Fc=FK;const mK=class mK extends uL{constructor(A,s=null){super(A,s),this.minTime=1e3*5,this.maxTime=1e3*60*5,this.randVarianceTime=1e3*10,this.reconnectDuration=this.minTime}getModalTitle(){return""}getWidth(){return 160}getHeight(){return 64}getMargin(){return[0,0,48,0]}getButtonLabels(){return[]}setup(){super.setup();const A=se(this.scene,this.getWidth()/2,this.getHeight()/2,U.t("menu:errorServerDown"),V.WINDOW,{fontSize:"48px",align:"center"});A.setOrigin(.5,.5),this.modalContainer.add(A)}tryReconnect(){BO().then(A=>{A[0]||[200,400].includes(A[1])?(this.reconnectTimer=null,this.reconnectDuration=this.minTime,this.scene.playSound("se/pb_bounce_1"),this.reconnectCallback()):A[1]===401?(rr(sn),this.scene.reset(!0,!0)):(this.reconnectDuration=Math.min(this.reconnectDuration*2,this.maxTime),this.reconnectTimer=setTimeout(()=>this.tryReconnect(),this.reconnectDuration+Math.random()*this.randVarianceTime))})}show(A){if(A.length>=1&&A[0]instanceof Function){const s={buttonActions:[]};return this.reconnectCallback=A[0],this.reconnectDuration=this.minTime,this.reconnectTimer=setTimeout(()=>this.tryReconnect(),this.reconnectDuration),super.show([s])}return!1}};T(mK,"UnavailableModalUiHandler");let mc=mK;const WK=class WK extends uL{constructor(A,s=null){super(A,s)}getModalTitle(){return""}getWidth(){return 160}getHeight(){return 32}getMargin(){return[0,0,48,0]}getButtonLabels(){return[]}setup(){super.setup();const A=se(this.scene,this.getWidth()/2,this.getHeight()/2,`Your session is out of date.
Your data will be reloaded…`,V.WINDOW,{fontSize:"48px",align:"center"});A.setOrigin(.5,.5),this.modalContainer.add(A)}show(A){const s={buttonActions:[]};return super.show([s])}};T(WK,"SessionReloadModalUiHandler");let Wc=WK;const YK=class YK extends os{constructor(A,s=null){super(A,s),this.listening=!1,this.buttonPressed=null,this.timeLeftAutoClose=5}setup(){const A=this.getUi();this.optionSelectContainer=this.scene.add.container(0,0),this.actionsContainer=this.scene.add.container(0,0),this.optionSelectContainer.setVisible(!1),this.actionsContainer.setVisible(!1),A.add(this.optionSelectContainer),A.add(this.actionsContainer),this.titleBg=it(this.scene,this.scene.game.canvas.width/6-this.getWindowWidth(),-(this.scene.game.canvas.height/6)+28+21,this.getWindowWidth(),24),this.titleBg.setOrigin(.5),this.optionSelectContainer.add(this.titleBg),this.actionBg=it(this.scene,this.scene.game.canvas.width/6-this.getWindowWidth(),-(this.scene.game.canvas.height/6)+this.getWindowHeight()+28+21+21,this.getWindowWidth(),24),this.actionBg.setOrigin(.5),this.actionsContainer.add(this.actionBg),this.unlockText=se(this.scene,0,0,U.t("settings:pressButton"),V.WINDOW),this.unlockText.setOrigin(0,0),this.unlockText.setPositionRelative(this.titleBg,36,4),this.optionSelectContainer.add(this.unlockText),this.timerText=se(this.scene,0,0,"(5)",V.WINDOW),this.timerText.setOrigin(0,0),this.timerText.setPositionRelative(this.unlockText,this.unlockText.width/6+5,0),this.optionSelectContainer.add(this.timerText),this.optionSelectBg=it(this.scene,this.scene.game.canvas.width/6-this.getWindowWidth(),-(this.scene.game.canvas.height/6)+this.getWindowHeight()+28,this.getWindowWidth(),this.getWindowHeight()),this.optionSelectBg.setOrigin(.5),this.optionSelectContainer.add(this.optionSelectBg),this.cancelLabel=se(this.scene,0,0,U.t("settings:back"),V.SETTINGS_LABEL),this.cancelLabel.setOrigin(0,.5),this.cancelLabel.setPositionRelative(this.actionBg,10,this.actionBg.height/2),this.actionsContainer.add(this.cancelLabel)}manageAutoCloseTimer(){clearTimeout(this.countdownTimer),this.countdownTimer=setTimeout(()=>{this.timeLeftAutoClose-=1,this.timerText.setText(`(${this.timeLeftAutoClose})`),this.timeLeftAutoClose>=0?this.manageAutoCloseTimer():this.cancelFn&&this.cancelFn()},1e3)}show(A){return super.show(A),this.buttonPressed=null,this.timeLeftAutoClose=5,this.cancelFn=A[0].cancelHandler,this.target=A[0].target,this.getUi().bringToTop(this.optionSelectContainer),this.getUi().bringToTop(this.actionsContainer),this.optionSelectContainer.setVisible(!0),setTimeout(()=>{this.listening=!0,this.manageAutoCloseTimer()},100),!0}getWindowWidth(){return 160}getWindowHeight(){return 64}processInput(A){if(this.buttonPressed===null)return!1;const s=this.getUi();let R=!1;switch(A){case y.LEFT:case y.RIGHT:const I=this.cursor?0:1;R=this.setCursor(I);break;case y.ACTION:this.cursor===0?this.cancelFn&&this.cancelFn():(R=this.swapAction(),sO.getInstance().updateIcons(),this.cancelFn&&this.cancelFn(R));break}return R?s.playSelect():s.playError(),R}setCursor(A){return this.cursor=A,A===1?(this.actionLabel.setColor(this.getTextColor(V.SETTINGS_SELECTED)),this.actionLabel.setShadowColor(this.getTextColor(V.SETTINGS_SELECTED,!0)),this.cancelLabel.setColor(this.getTextColor(V.WINDOW)),this.cancelLabel.setShadowColor(this.getTextColor(V.WINDOW,!0)),!0):(this.actionLabel.setColor(this.getTextColor(V.WINDOW)),this.actionLabel.setShadowColor(this.getTextColor(V.WINDOW,!0)),this.cancelLabel.setColor(this.getTextColor(V.SETTINGS_SELECTED)),this.cancelLabel.setShadowColor(this.getTextColor(V.SETTINGS_SELECTED,!0)),!0)}clear(){super.clear(),clearTimeout(this.countdownTimer),this.timerText.setText("(5)"),this.timeLeftAutoClose=5,this.listening=!1,this.target=null,this.cancelFn=null,this.optionSelectContainer.setVisible(!1),this.actionsContainer.setVisible(!1),this.newButtonIcon.setVisible(!1),this.buttonPressed=null}onInputDown(A,s,R){clearTimeout(this.countdownTimer),this.timerText.setText(""),this.newButtonIcon.setTexture(R),this.newButtonIcon.setFrame(A),s&&(this.targetButtonIcon.setTexture(R),this.targetButtonIcon.setFrame(s),this.targetButtonIcon.setVisible(!0),this.swapText.setVisible(!0)),this.newButtonIcon.setVisible(!0),this.setCursor(0),this.actionsContainer.setVisible(!0)}};T(YK,"AbstractBindingUiHandler");let aC=YK;const pK=class pK extends aC{constructor(A,s=null){var R;super(A,s),(R=this.scene.input.gamepad)==null||R.on("down",this.gamepadButtonDown,this)}setup(){super.setup(),this.newButtonIcon=this.scene.add.sprite(0,0,"xbox"),this.newButtonIcon.setPositionRelative(this.optionSelectBg,78,16),this.newButtonIcon.setOrigin(.5),this.newButtonIcon.setVisible(!1),this.swapText=se(this.scene,0,0,"will swap with",V.WINDOW),this.swapText.setOrigin(.5),this.swapText.setPositionRelative(this.optionSelectBg,this.optionSelectBg.width/2-2,this.optionSelectBg.height/2-2),this.swapText.setVisible(!1),this.targetButtonIcon=this.scene.add.sprite(0,0,"xbox"),this.targetButtonIcon.setPositionRelative(this.optionSelectBg,78,48),this.targetButtonIcon.setOrigin(.5),this.targetButtonIcon.setVisible(!1),this.actionLabel=se(this.scene,0,0,"Confirm swap",V.SETTINGS_LABEL),this.actionLabel.setOrigin(0,.5),this.actionLabel.setPositionRelative(this.actionBg,this.actionBg.width-75,this.actionBg.height/2),this.actionsContainer.add(this.actionLabel),this.optionSelectContainer.add(this.newButtonIcon),this.optionSelectContainer.add(this.swapText),this.optionSelectContainer.add(this.targetButtonIcon)}getSelectedDevice(){var A;return(A=this.scene.inputController)==null?void 0:A.selectedDevice[Zt.GAMEPAD]}gamepadButtonDown(A,s,R){const I=[12,13,14,15];if(!this.listening||A.id.toLowerCase()!==this.getSelectedDevice()||I.includes(s.index)||this.buttonPressed!==null)return;const i=this.scene.inputController.getActiveConfig(Zt.GAMEPAD),a=i.padType,L=DL(i,s.index),S=i.icons[L];if(!S)return;this.buttonPressed=s.index;const o=OC(i,this.target);this.onInputDown(S,o,a)}swapAction(){const A=this.scene.inputController.getActiveConfig(Zt.GAMEPAD);return this.scene.inputController.assignBinding(A,this.target,this.buttonPressed)?(this.scene.gameData.saveMappingConfigs(this.getSelectedDevice(),A),!0):!1}clear(){super.clear(),this.targetButtonIcon.setVisible(!1),this.swapText.setVisible(!1)}};T(pK,"GamepadBindingUiHandler");let Yc=pK;const pc={padID:"default",padType:"keyboard",deviceMapping:{KEY_A:Phaser.Input.Keyboard.KeyCodes.A,KEY_B:Phaser.Input.Keyboard.KeyCodes.B,KEY_C:Phaser.Input.Keyboard.KeyCodes.C,KEY_D:Phaser.Input.Keyboard.KeyCodes.D,KEY_E:Phaser.Input.Keyboard.KeyCodes.E,KEY_F:Phaser.Input.Keyboard.KeyCodes.F,KEY_G:Phaser.Input.Keyboard.KeyCodes.G,KEY_H:Phaser.Input.Keyboard.KeyCodes.H,KEY_I:Phaser.Input.Keyboard.KeyCodes.I,KEY_J:Phaser.Input.Keyboard.KeyCodes.J,KEY_K:Phaser.Input.Keyboard.KeyCodes.K,KEY_L:Phaser.Input.Keyboard.KeyCodes.L,KEY_M:Phaser.Input.Keyboard.KeyCodes.M,KEY_N:Phaser.Input.Keyboard.KeyCodes.N,KEY_O:Phaser.Input.Keyboard.KeyCodes.O,KEY_P:Phaser.Input.Keyboard.KeyCodes.P,KEY_Q:Phaser.Input.Keyboard.KeyCodes.Q,KEY_R:Phaser.Input.Keyboard.KeyCodes.R,KEY_S:Phaser.Input.Keyboard.KeyCodes.S,KEY_T:Phaser.Input.Keyboard.KeyCodes.T,KEY_U:Phaser.Input.Keyboard.KeyCodes.U,KEY_V:Phaser.Input.Keyboard.KeyCodes.V,KEY_W:Phaser.Input.Keyboard.KeyCodes.W,KEY_X:Phaser.Input.Keyboard.KeyCodes.X,KEY_Y:Phaser.Input.Keyboard.KeyCodes.Y,KEY_Z:Phaser.Input.Keyboard.KeyCodes.Z,KEY_0:Phaser.Input.Keyboard.KeyCodes.ZERO,KEY_1:Phaser.Input.Keyboard.KeyCodes.ONE,KEY_2:Phaser.Input.Keyboard.KeyCodes.TWO,KEY_3:Phaser.Input.Keyboard.KeyCodes.THREE,KEY_4:Phaser.Input.Keyboard.KeyCodes.FOUR,KEY_5:Phaser.Input.Keyboard.KeyCodes.FIVE,KEY_6:Phaser.Input.Keyboard.KeyCodes.SIX,KEY_7:Phaser.Input.Keyboard.KeyCodes.SEVEN,KEY_8:Phaser.Input.Keyboard.KeyCodes.EIGHT,KEY_9:Phaser.Input.Keyboard.KeyCodes.NINE,KEY_CTRL:Phaser.Input.Keyboard.KeyCodes.CTRL,KEY_DEL:Phaser.Input.Keyboard.KeyCodes.DELETE,KEY_END:Phaser.Input.Keyboard.KeyCodes.END,KEY_ENTER:Phaser.Input.Keyboard.KeyCodes.ENTER,KEY_ESC:Phaser.Input.Keyboard.KeyCodes.ESC,KEY_F1:Phaser.Input.Keyboard.KeyCodes.F1,KEY_F2:Phaser.Input.Keyboard.KeyCodes.F2,KEY_F3:Phaser.Input.Keyboard.KeyCodes.F3,KEY_F4:Phaser.Input.Keyboard.KeyCodes.F4,KEY_F5:Phaser.Input.Keyboard.KeyCodes.F5,KEY_F6:Phaser.Input.Keyboard.KeyCodes.F6,KEY_F7:Phaser.Input.Keyboard.KeyCodes.F7,KEY_F8:Phaser.Input.Keyboard.KeyCodes.F8,KEY_F9:Phaser.Input.Keyboard.KeyCodes.F9,KEY_F10:Phaser.Input.Keyboard.KeyCodes.F10,KEY_F11:Phaser.Input.Keyboard.KeyCodes.F11,KEY_F12:Phaser.Input.Keyboard.KeyCodes.F12,KEY_HOME:Phaser.Input.Keyboard.KeyCodes.HOME,KEY_INSERT:Phaser.Input.Keyboard.KeyCodes.INSERT,KEY_PAGE_DOWN:Phaser.Input.Keyboard.KeyCodes.PAGE_DOWN,KEY_PAGE_UP:Phaser.Input.Keyboard.KeyCodes.PAGE_UP,KEY_PLUS:Phaser.Input.Keyboard.KeyCodes.NUMPAD_ADD,KEY_MINUS:Phaser.Input.Keyboard.KeyCodes.NUMPAD_SUBTRACT,KEY_QUOTATION:Phaser.Input.Keyboard.KeyCodes.QUOTES,KEY_SHIFT:Phaser.Input.Keyboard.KeyCodes.SHIFT,KEY_SPACE:Phaser.Input.Keyboard.KeyCodes.SPACE,KEY_TAB:Phaser.Input.Keyboard.KeyCodes.TAB,KEY_TILDE:Phaser.Input.Keyboard.KeyCodes.BACKTICK,KEY_ARROW_UP:Phaser.Input.Keyboard.KeyCodes.UP,KEY_ARROW_DOWN:Phaser.Input.Keyboard.KeyCodes.DOWN,KEY_ARROW_LEFT:Phaser.Input.Keyboard.KeyCodes.LEFT,KEY_ARROW_RIGHT:Phaser.Input.Keyboard.KeyCodes.RIGHT,KEY_LEFT_BRACKET:Phaser.Input.Keyboard.KeyCodes.OPEN_BRACKET,KEY_RIGHT_BRACKET:Phaser.Input.Keyboard.KeyCodes.CLOSED_BRACKET,KEY_SEMICOLON:Phaser.Input.Keyboard.KeyCodes.SEMICOLON,KEY_BACKSPACE:Phaser.Input.Keyboard.KeyCodes.BACKSPACE,KEY_ALT:Phaser.Input.Keyboard.KeyCodes.ALT},icons:{KEY_A:"A.png",KEY_B:"B.png",KEY_C:"C.png",KEY_D:"D.png",KEY_E:"E.png",KEY_F:"F.png",KEY_G:"G.png",KEY_H:"H.png",KEY_I:"I.png",KEY_J:"J.png",KEY_K:"K.png",KEY_L:"L.png",KEY_M:"M.png",KEY_N:"N.png",KEY_O:"O.png",KEY_P:"P.png",KEY_Q:"Q.png",KEY_R:"R.png",KEY_S:"S.png",KEY_T:"T.png",KEY_U:"U.png",KEY_V:"V.png",KEY_W:"W.png",KEY_X:"X.png",KEY_Y:"Y.png",KEY_Z:"Z.png",KEY_0:"0.png",KEY_1:"1.png",KEY_2:"2.png",KEY_3:"3.png",KEY_4:"4.png",KEY_5:"5.png",KEY_6:"6.png",KEY_7:"7.png",KEY_8:"8.png",KEY_9:"9.png",KEY_F1:"F1.png",KEY_F2:"F2.png",KEY_F3:"F3.png",KEY_F4:"F4.png",KEY_F5:"F5.png",KEY_F6:"F6.png",KEY_F7:"F7.png",KEY_F8:"F8.png",KEY_F9:"F9.png",KEY_F10:"F10.png",KEY_F11:"F11.png",KEY_F12:"F12.png",KEY_PAGE_DOWN:"PAGE_DOWN.png",KEY_PAGE_UP:"PAGE_UP.png",KEY_CTRL:"CTRL.png",KEY_DEL:"DEL.png",KEY_END:"END.png",KEY_ENTER:"ENTER.png",KEY_ESC:"ESC.png",KEY_HOME:"HOME.png",KEY_INSERT:"INS.png",KEY_PLUS:"PLUS.png",KEY_MINUS:"MINUS.png",KEY_QUOTATION:"QUOTE.png",KEY_SHIFT:"SHIFT.png",KEY_SPACE:"SPACE.png",KEY_TAB:"TAB.png",KEY_TILDE:"TILDE.png",KEY_ARROW_UP:"KEY_ARROW_UP.png",KEY_ARROW_DOWN:"KEY_ARROW_DOWN.png",KEY_ARROW_LEFT:"KEY_ARROW_LEFT.png",KEY_ARROW_RIGHT:"KEY_ARROW_RIGHT.png",KEY_LEFT_BRACKET:"LEFT_BRACKET.png",KEY_RIGHT_BRACKET:"RIGHT_BRACKET.png",KEY_SEMICOLON:"SEMICOLON.png",KEY_BACKSPACE:"BACK.png",KEY_ALT:"ALT.png"},settings:{[Je.Button_Up]:y.UP,[Je.Button_Down]:y.DOWN,[Je.Button_Left]:y.LEFT,[Je.Button_Right]:y.RIGHT,[Je.Button_Submit]:y.SUBMIT,[Je.Button_Action]:y.ACTION,[Je.Button_Cancel]:y.CANCEL,[Je.Button_Menu]:y.MENU,[Je.Button_Stats]:y.STATS,[Je.Button_Cycle_Shiny]:y.CYCLE_SHINY,[Je.Button_Cycle_Form]:y.CYCLE_FORM,[Je.Button_Cycle_Gender]:y.CYCLE_GENDER,[Je.Button_Cycle_Ability]:y.CYCLE_ABILITY,[Je.Button_Cycle_Nature]:y.CYCLE_NATURE,[Je.Button_Cycle_Variant]:y.V,[Je.Button_Speed_Up]:y.SPEED_UP,[Je.Button_Slow_Down]:y.SLOW_DOWN,[Je.Alt_Button_Up]:y.UP,[Je.Alt_Button_Down]:y.DOWN,[Je.Alt_Button_Left]:y.LEFT,[Je.Alt_Button_Right]:y.RIGHT,[Je.Alt_Button_Submit]:y.SUBMIT,[Je.Alt_Button_Action]:y.ACTION,[Je.Alt_Button_Cancel]:y.CANCEL,[Je.Alt_Button_Menu]:y.MENU,[Je.Alt_Button_Stats]:y.STATS,[Je.Alt_Button_Cycle_Shiny]:y.CYCLE_SHINY,[Je.Alt_Button_Cycle_Form]:y.CYCLE_FORM,[Je.Alt_Button_Cycle_Gender]:y.CYCLE_GENDER,[Je.Alt_Button_Cycle_Ability]:y.CYCLE_ABILITY,[Je.Alt_Button_Cycle_Nature]:y.CYCLE_NATURE,[Je.Alt_Button_Cycle_Variant]:y.V,[Je.Alt_Button_Speed_Up]:y.SPEED_UP,[Je.Alt_Button_Slow_Down]:y.SLOW_DOWN},default:{KEY_ARROW_UP:Je.Button_Up,KEY_ARROW_DOWN:Je.Button_Down,KEY_ARROW_LEFT:Je.Button_Left,KEY_ARROW_RIGHT:Je.Button_Right,KEY_ENTER:Je.Button_Submit,KEY_SPACE:Je.Button_Action,KEY_BACKSPACE:Je.Button_Cancel,KEY_ESC:Je.Button_Menu,KEY_C:Je.Button_Stats,KEY_R:Je.Button_Cycle_Shiny,KEY_F:Je.Button_Cycle_Form,KEY_G:Je.Button_Cycle_Gender,KEY_E:Je.Button_Cycle_Ability,KEY_N:Je.Button_Cycle_Nature,KEY_V:Je.Button_Cycle_Variant,KEY_PLUS:-1,KEY_MINUS:-1,KEY_A:Je.Alt_Button_Left,KEY_B:-1,KEY_D:Je.Alt_Button_Right,KEY_H:-1,KEY_I:-1,KEY_J:-1,KEY_K:-1,KEY_L:-1,KEY_M:Je.Alt_Button_Menu,KEY_O:-1,KEY_P:-1,KEY_Q:-1,KEY_S:Je.Alt_Button_Down,KEY_T:Je.Alt_Button_Cycle_Form,KEY_U:-1,KEY_W:Je.Alt_Button_Up,KEY_X:Je.Alt_Button_Cancel,KEY_Y:Je.Alt_Button_Cycle_Shiny,KEY_Z:Je.Alt_Button_Action,KEY_0:-1,KEY_1:-1,KEY_2:-1,KEY_3:-1,KEY_4:-1,KEY_5:-1,KEY_6:-1,KEY_7:-1,KEY_8:-1,KEY_9:-1,KEY_CTRL:-1,KEY_DEL:-1,KEY_END:-1,KEY_F1:-1,KEY_F2:-1,KEY_F3:-1,KEY_F4:-1,KEY_F5:-1,KEY_F6:-1,KEY_F7:-1,KEY_F8:-1,KEY_F9:-1,KEY_F10:-1,KEY_F11:-1,KEY_F12:-1,KEY_HOME:-1,KEY_INSERT:-1,KEY_PAGE_DOWN:Je.Button_Slow_Down,KEY_PAGE_UP:Je.Button_Speed_Up,KEY_QUOTATION:-1,KEY_SHIFT:Je.Alt_Button_Stats,KEY_TAB:-1,KEY_TILDE:-1,KEY_LEFT_BRACKET:-1,KEY_RIGHT_BRACKET:-1,KEY_SEMICOLON:-1,KEY_ALT:-1},blacklist:["KEY_ENTER","KEY_ESC","KEY_SPACE","KEY_BACKSPACE","KEY_ARROW_UP","KEY_ARROW_DOWN","KEY_ARROW_LEFT","KEY_ARROW_RIGHT","KEY_DEL","KEY_HOME"]},yK=class yK extends nC{constructor(A,s=null){var i,a;super(A,s),this.setSetting=o6,this.titleSelected="Keyboard",this.setting=Je,this.settingDeviceDefaults=H7,this.settingDeviceOptions=_7,this.configs=[pc],this.commonSettingsCount=0,this.textureOverride="keyboard",this.localStoragePropertyName="settingsKeyboard",this.settingBlacklisted=d7,this.device=Zt.KEYBOARD;const R=(i=A.input.keyboard)==null?void 0:i.addKey(Phaser.Input.Keyboard.KeyCodes.DELETE),I=(a=A.input.keyboard)==null?void 0:a.addKey(Phaser.Input.Keyboard.KeyCodes.HOME);R&&R.on("up",this.onDeleteDown,this),I&&I.on("up",this.onHomeDown,this)}setup(){super.setup(),this.layout.noKeyboard=new Map;const A=this.scene.add.container(0,0);A.setVisible(!1);const s=se(this.scene,8,28,U.t("settings:keyboardPleasePress"),V.SETTINGS_LABEL);s.setOrigin(0,0),A.add(s),this.settingsContainer.add(A);const R=this.scene.add.sprite(0,0,"keyboard");R.setOrigin(0,-.1),R.setPositionRelative(this.actionsBg,this.navigationContainer.width-260,4),this.navigationIcons.BUTTON_DELETE=R;const I=se(this.scene,0,0,U.t("settings:delete"),V.SETTINGS_LABEL);I.setOrigin(0,.15),I.setPositionRelative(R,-I.width/6-2,0),this.settingsContainer.add(R),this.settingsContainer.add(I),this.layout.noKeyboard.optionsContainer=A,this.layout.noKeyboard.label=s}onHomeDown(){[$.SETTINGS_KEYBOARD,$.SETTINGS_GAMEPAD].includes(this.scene.ui.getMode())&&(this.scene.gameData.resetMappingToFactory(),sO.getInstance().updateIcons())}onDeleteDown(){if(this.scene.ui.getMode()!==$.SETTINGS_KEYBOARD)return;const A=this.cursor+this.scrollCursor,s=this.settingLabels[A].text,R=mb(s),I=Je[R],i=this.getActiveConfig();N9(this.getActiveConfig(),I)&&(this.saveCustomKeyboardMappingToLocalStorage(i),this.updateBindings(),sO.getInstance().updateIcons())}setLayout(A){return A?super.setLayout(A):(this.layout.noKeyboard.optionsContainer.setVisible(!0),!1)}updateChosenKeyboardDisplay(){this.updateBindings();for(const[A,s]of Object.keys(this.setting).entries())if(this.setting[s]===this.setting.Default_Layout)for(const I of Object.keys(this.layout))I!=="noKeyboard"&&this.layout[I].optionValueLabels[A][0].setText(S1(this.scene.inputController.selectedDevice[Zt.KEYBOARD],22))}saveCustomKeyboardMappingToLocalStorage(A){var s;this.scene.gameData.saveMappingConfigs((s=this.scene.inputController)==null?void 0:s.selectedDevice[Zt.KEYBOARD],A)}saveSettingToLocalStorage(A,s){this.setting[A]!==this.setting.Default_Layout&&this.scene.gameData.saveControlSetting(this.device,this.localStoragePropertyName,A,this.settingDeviceDefaults,s)}};T(yK,"SettingsKeyboardUiHandler");let LC=yK;const wK=class wK extends aC{constructor(A,s=null){var R;super(A,s),(R=A.input.keyboard)==null||R.on("keydown",this.onKeyDown,this)}setup(){super.setup(),this.newButtonIcon=this.scene.add.sprite(0,0,"keyboard"),this.newButtonIcon.setPositionRelative(this.optionSelectBg,78,32),this.newButtonIcon.setOrigin(.5),this.newButtonIcon.setVisible(!1),this.actionLabel=se(this.scene,0,0,"Assign button",V.SETTINGS_LABEL),this.actionLabel.setOrigin(0,.5),this.actionLabel.setPositionRelative(this.actionBg,this.actionBg.width-80,this.actionBg.height/2),this.actionsContainer.add(this.actionLabel),this.optionSelectContainer.add(this.newButtonIcon)}getSelectedDevice(){var A;return(A=this.scene.inputController)==null?void 0:A.selectedDevice[Zt.KEYBOARD]}onKeyDown(A){const s=[Phaser.Input.Keyboard.KeyCodes.UP,Phaser.Input.Keyboard.KeyCodes.DOWN,Phaser.Input.Keyboard.KeyCodes.LEFT,Phaser.Input.Keyboard.KeyCodes.RIGHT,Phaser.Input.Keyboard.KeyCodes.HOME,Phaser.Input.Keyboard.KeyCodes.ENTER,Phaser.Input.Keyboard.KeyCodes.ESC,Phaser.Input.Keyboard.KeyCodes.DELETE],R=A.keyCode;if(!this.listening||this.buttonPressed!==null||s.includes(R))return;const I=this.scene.inputController.getActiveConfig(Zt.KEYBOARD),i=DL(I,R),a=I.icons[i];a&&(this.buttonPressed=R,this.onInputDown(a,null,"keyboard"))}swapAction(){const A=this.scene.inputController.getActiveConfig(Zt.KEYBOARD);return this.scene.inputController.assignBinding(A,this.target,this.buttonPressed)?(this.scene.gameData.saveMappingConfigs(this.getSelectedDevice(),A),!0):!1}};T(wK,"KeyboardBindingUiHandler");let yc=wK;const VK=class VK extends xT{constructor(A,s=null){super(A,VM.DISPLAY,s),this.title="Display";const R=this.settings.findIndex(I=>I.key===Qe.Language);if(R>=0)switch(localStorage.getItem("prLang")){case"en":this.settings[R].options[0]={value:"English",label:"English"};break;case"es":this.settings[R].options[0]={value:"Español",label:"Español"};break;case"it":this.settings[R].options[0]={value:"Italiano",label:"Italiano"};break;case"fr":this.settings[R].options[0]={value:"Français",label:"Français"};break;case"de":this.settings[R].options[0]={value:"Deutsch",label:"Deutsch"};break;case"pt-BR":this.settings[R].options[0]={value:"Português (BR)",label:"Português (BR)"};break;case"zh-CN":this.settings[R].options[0]={value:"简体中文",label:"简体中文"};break;case"zh-TW":this.settings[R].options[0]={value:"繁體中文",label:"繁體中文"};break;case"ko":case"ko-KR":this.settings[R].options[0]={value:"한국어",label:"한국어"};break;case"ja":this.settings[R].options[0]={value:"日本語",label:"日本語"};break;case"ca-ES":this.settings[R].options[0]={value:"Català",label:"Català"};break;default:this.settings[R].options[0]={value:"English",label:"English"};break}this.localStorageKey="settings"}};T(VK,"SettingsDisplayUiHandler");let rC=VK;const vK=class vK extends xT{constructor(A,s=null){super(A,VM.AUDIO,s),this.title="Audio",this.localStorageKey="settings",this.rowsToDisplay=6}};T(vK,"SettingsAudioUiHandler");let NC=vK;const xK=class xK extends xi{getModalTitle(A){return U.t("menu:renamePokemon")}getWidth(A){return 160}getMargin(A){return[0,0,48,0]}getButtonLabels(A){return[U.t("menu:rename"),U.t("menu:cancel")]}getReadableErrorMessage(A){const s=A==null?void 0:A.indexOf(":");return s>0&&(A=A.slice(0,s)),super.getReadableErrorMessage(A)}getInputFieldConfigs(){return[{label:U.t("menu:nickname")}]}show(A){if(super.show(A)){const s=A[0];return A[1]&&typeof A[1].getNameToRender=="function"?this.inputs[0].text=A[1].getNameToRender():this.inputs[0].text=A[1],this.submitAction=R=>{this.sanitizeInputs();const I=btoa(unescape(encodeURIComponent(this.inputs[0].text)));return s.buttonActions[0](I),!0},!0}return!1}};T(xK,"RenameFormUiHandler");let wc=xK;const _9=25,bK=class bK extends vs{constructor(A){super(A,$.RUN_HISTORY),this.maxRows=3,this.scrollCursor=0}setup(){const A=this.getUi();this.runSelectContainer=this.scene.add.container(0,0),this.runSelectContainer.setVisible(!1),A.add(this.runSelectContainer);const s=this.scene.add.rectangle(0,0,this.scene.game.canvas.width/6,-this.scene.game.canvas.height/6,26720);s.setOrigin(0,0),this.runSelectContainer.add(s),this.runContainerInitialY=-this.scene.game.canvas.height/6+8,this.runsContainer=this.scene.add.container(8,this.runContainerInitialY),this.runSelectContainer.add(this.runsContainer),this.runs=[],this.scene.loadImage("hall_of_fame_red","ui"),this.scene.loadImage("hall_of_fame_blue","ui"),this.scene.loadAtlas("rival_f","trainer"),this.scene.loadAtlas("rival_m","trainer")}show(A){return super.show(A),this.getUi().bringToTop(this.runSelectContainer),this.runSelectContainer.setVisible(!0),this.populateRuns(this.scene).then(()=>{this.setScrollCursor(0),this.setCursor(0),this.runs.length===0&&this.clearCursor()}),!0}processInput(A){const s=this.getUi();let R=!1;const I=!1;if([y.ACTION,y.CANCEL].includes(A))if(A===y.ACTION){const i=this.cursor+this.scrollCursor;if(this.runs[i])this.scene.ui.setOverlayMode($.RUN_INFO,this.runs[i].entryData,P1.RUN_HISTORY,!0);else return!1;return R=!0,R}else this.runSelectCallback=null,R=!0,this.scene.ui.revertMode();else if(this.runs.length>0)switch(A){case y.UP:this.cursor?R=this.setCursor(this.cursor-1):this.scrollCursor?R=this.setScrollCursor(this.scrollCursor-1):this.runs.length>1&&(R=this.setCursor(Math.min(this.runs.length-1,this.maxRows-1)),R=this.setScrollCursor(Math.max(0,this.runs.length-this.maxRows))||R);break;case y.DOWN:this.cursor<Math.min(this.maxRows-1,this.runs.length-this.scrollCursor-1)?R=this.setCursor(this.cursor+1):this.scrollCursor<this.runs.length-this.maxRows?R=this.setScrollCursor(this.scrollCursor+1):this.runs.length>1&&(R=this.setCursor(0),R=this.setScrollCursor(0)||R);break}return R&&s.playSelect(),R||I}async populateRuns(A){const s=await this.scene.gameData.getRunHistoryData(this.scene),R=Object.keys(s);if(R.length===0){this.showEmpty();return}const I=R.map(Number);R.length>1&&I.sort((a,L)=>L-a);const i=R.length;for(let a=0;a<i;a++){const L=new vc(this.scene,s[I[a]],a);this.scene.add.existing(L),this.runsContainer.add(L),this.runs.push(L)}this.cursorObj&&R.length>0&&this.runsContainer.bringToTop(this.cursorObj)}async showEmpty(){const A=it(this.scene,0,0,304,165);this.runsContainer.add(A);const s=A.getCenter(),R=se(this.scene,0,0,U.t("saveSlotSelectUiHandler:empty"),V.WINDOW,{fontSize:"128px"});R.setPosition(s.x-18,s.y-15),this.runsContainer.add(R)}setCursor(A){const s=super.setCursor(A);return this.cursorObj||(this.cursorObj=this.scene.add.nineslice(0,0,"select_cursor_highlight_thick",void 0,296,46,6,6,6,6),this.cursorObj.setOrigin(0,0),this.runsContainer.add(this.cursorObj)),this.cursorObj.setPosition(4,4+(A+this.scrollCursor)*56),s}setScrollCursor(A){const s=A!==this.scrollCursor;return s&&(this.scrollCursor=A,this.setCursor(this.cursor),this.scene.tweens.add({targets:this.runsContainer,y:this.runContainerInitialY-56*A,duration:Ve(325),ease:"Sine.easeInOut"})),s}clear(){super.clear(),this.runSelectContainer.setVisible(!1),this.setScrollCursor(0),this.clearCursor(),this.runSelectCallback=null,this.clearRuns()}clearCursor(){this.cursorObj&&this.cursorObj.destroy(),this.cursorObj=null}clearRuns(){this.runs.splice(0,this.runs.length),this.runsContainer.removeAll(!0)}};T(bK,"RunHistoryUiHandler");let Vc=bK;const kK=class kK extends Phaser.GameObjects.Container{constructor(A,s,R){super(A,0,R*56),this.slotId=R,this.entryData=s,this.setup(this.entryData)}setup(A){const s=A.isVictory,R=this.scene.gameData.parseSessionData(JSON.stringify(A.entry)),I=it(this.scene,0,0,304,52);if(this.add(I),s){const o=se(this.scene,8,5,`${U.t("runHistory:victory")}`,V.WINDOW);this.add(o)}else{const o=this.scene.gameData.gender??ct.UNSET,l=ct[o].toLowerCase();if(R.battleType===Nt.WILD||R.battleType===Nt.MYSTERY_ENCOUNTER&&!R.trainer){const D=this.scene.add.container(8,5),M=se(this.scene,0,0,`${U.t("runHistory:defeatedWild",{context:l})}`,V.WINDOW);D.add(M),R.enemyParty.forEach((c,G)=>{const P=this.scene.add.container(65+G*25,-8);P.setScale(.75),c.boss=!1,c.player=!0;const _=c.toPokemon(this.scene),g=this.scene.addPokemonIcon(_,0,0,0,0),H=se(this.scene,32,20,`${U.t("saveSlotSelectUiHandler:lv")}${va(_.level,1e3)}`,V.PARTY,{fontSize:"54px",color:"#f8f8f8"});H.setShadow(0,0,void 0),H.setStroke("#424242",14),H.setOrigin(1,0),P.add(g),P.add(H),D.add(P),_.destroy()}),this.add(D)}else if(R.battleType===Nt.TRAINER||R.battleType===Nt.MYSTERY_ENCOUNTER&&R.trainer){const D=R.trainer.toTrainer(this.scene);if(R.trainer.trainerType>=375){const c=D.variant===bt.FEMALE?"trainerNames:rival_female":"trainerNames:rival",G=se(this.scene,8,5,`${U.t("runHistory:defeatedRival",{context:l})} ${U.t(c)}`,V.WINDOW);this.add(G)}else{const c=se(this.scene,8,5,`${U.t("runHistory:defeatedTrainer",{context:l})}${D.getName(0,!0)}`,V.WINDOW);this.add(c)}}}const i=se(this.scene,8,19,"",V.WINDOW);let a="";switch(R.gameMode){case tA.DAILY:a=U.t("gameMode:dailyRun");break;case tA.SPLICED_ENDLESS:case tA.ENDLESS:a=U.t("gameMode:endless");break;case tA.CLASSIC:a=U.t("gameMode:classic");break;case tA.CHALLENGE:a=U.t("gameMode:challenge");break}if(i.appendText(a,!1),R.gameMode===tA.SPLICED_ENDLESS){const o=this.scene.add.image(0,0,"icon_spliced");o.setScale(.75);const l=i.getTopRight();o.setPosition(l.x+5,27),this.add(o),i.appendText("    - ",!1)}else i.appendText(" - ",!1);i.appendText(U.t("saveSlotSelectUiHandler:wave")+" "+R.waveIndex,!1),this.add(i);const L=se(this.scene,8,33,new Date(R.timestamp).toLocaleString(),V.WINDOW);this.add(L);const S=this.scene.add.container(140,17);R.party.forEach((o,l)=>{const D=this.scene.add.container(26*l,0);D.setScale(.75);const M=o.toPokemon(this.scene),c=this.scene.addPokemonIcon(M,0,0,0,0),G=se(this.scene,32,20,`${U.t("saveSlotSelectUiHandler:lv")}${va(M.level,1e3)}`,V.PARTY,{fontSize:"54px",color:"#f8f8f8"});G.setShadow(0,0,void 0),G.setStroke("#424242",14),G.setOrigin(1,0),D.add(c),D.add(G),S.add(D),M.destroy()}),this.add(S)}};T(kK,"RunEntryContainer");let vc=kK;const ZK=class ZK extends gT{constructor(A,s,R=115,I=9){super(A,R,I),this.pokemonListContainer=s}setup(){super.setup(),super.changeToEggSummaryLayout(),this.currentPokemonSprite=this.scene.add.sprite(54,80,"pkmn__sub"),this.currentPokemonSprite.setScale(.8),this.currentPokemonSprite.setPipeline(this.scene.spritePipeline,{tone:[0,0,0,0],ignoreTimeTint:!0}),this.pokemonListContainer.add(this.currentPokemonSprite),this.pokemonNumberText=se(this.scene,80,107.5,"0000",V.SUMMARY,{fontSize:74}),this.pokemonNumberText.setOrigin(0,0),this.pokemonListContainer.add(this.pokemonNumberText),this.pokemonNameText=se(this.scene,7,107.5,"",V.SUMMARY,{fontSize:74}),this.pokemonNameText.setOrigin(0,0),this.pokemonListContainer.add(this.pokemonNameText),this.pokemonHatchedIcon=this.scene.add.sprite(-5,90,"egg_icons"),this.pokemonHatchedIcon.setOrigin(0,.2),this.pokemonHatchedIcon.setScale(.8),this.pokemonListContainer.add(this.pokemonHatchedIcon),this.pokemonCandyIcon=this.scene.add.sprite(4.5,40,"candy"),this.pokemonCandyIcon.setScale(.5),this.pokemonCandyIcon.setOrigin(0,0),this.pokemonListContainer.add(this.pokemonCandyIcon),this.pokemonCandyOverlayIcon=this.scene.add.sprite(4.5,40,"candy_overlay"),this.pokemonCandyOverlayIcon.setScale(.5),this.pokemonCandyOverlayIcon.setOrigin(0,0),this.pokemonListContainer.add(this.pokemonCandyOverlayIcon),this.pokemonCandyCountText=se(this.scene,14,40,"x0",V.SUMMARY,{fontSize:"56px"}),this.pokemonCandyCountText.setOrigin(0,0),this.pokemonListContainer.add(this.pokemonCandyCountText),this.pokemonEggMoveContainers=[],this.pokemonEggMoveBgs=[],this.pokemonEggMoveLabels=[],this.pokemonEggMovesContainer=this.scene.add.container(0,200),this.pokemonEggMovesContainer.setVisible(!1),this.pokemonEggMovesContainer.setScale(.5);for(let A=0;A<4;A++){const s=this.scene.add.container(0,0+6*A),R=this.scene.add.nineslice(70,0,"type_bgs","unknown",92,14,2,2,2,2);R.setOrigin(1,0);const I=se(this.scene,70-R.width/2,0,"???",V.PARTY);I.setOrigin(.5,0),this.pokemonEggMoveBgs.push(R),this.pokemonEggMoveLabels.push(I),s.add(R),s.add(I),s.setScale(.44),this.pokemonEggMoveContainers.push(s),this.pokemonEggMovesContainer.add(s)}super.add(this.pokemonEggMoveContainers)}hideDisplayPokemon(){this.currentPokemonSprite.setVisible(!1)}displayPokemon(A){const s=A.species,R=A.gender===ye.FEMALE,I=A.formIndex,i=A.shiny,a=A.variant;this.currentPokemonSprite.setVisible(!1),s.loadAssets(this.scene,R,I,i,a,!0).then(()=>{GI(s.speciesId,A.formIndex).cry(this.scene),this.currentPokemonSprite.play(s.getSpriteKey(R,I,i,a)),this.currentPokemonSprite.setPipelineData("shiny",i),this.currentPokemonSprite.setPipelineData("variant",a),this.currentPokemonSprite.setPipelineData("spriteKey",s.getSpriteKey(R,I,i,a)),this.currentPokemonSprite.setVisible(!0)})}showHatchInfo(A){this.pokemonEggMovesContainer.setVisible(!0);const s=A.pokemon,R=s.species;this.displayPokemon(s),super.show(s,!1,1,A.getDex(),A.getStarterEntry(),!0);const I=js[R.speciesId];this.pokemonCandyIcon.setTint(ps(Ns(I[0]))),this.pokemonCandyIcon.setVisible(!0),this.pokemonCandyOverlayIcon.setTint(ps(Ns(I[1]))),this.pokemonCandyOverlayIcon.setVisible(!0),this.pokemonCandyCountText.setText(`x${this.scene.gameData.starterData[R.speciesId].candyCount}`),this.pokemonCandyCountText.setVisible(!0),this.pokemonNumberText.setText(An(R.speciesId,4)),this.pokemonNameText.setText(R.name);const i=R&&oE.hasOwnProperty(R.speciesId);for(let a=0;a<4;a++){const L=i?He[oE[R.speciesId][a]]:null,S=L&&this.scene.gameData.starterData[R.speciesId].eggMoves&Math.pow(2,a);this.pokemonEggMoveBgs[a].setFrame(n[L?L.type:n.UNKNOWN].toString().toLowerCase()),this.pokemonEggMoveLabels[a].setText(L&&S?L.name:"???"),!(L&&A.starterDataEntryBeforeUpdate.eggMoves&Math.pow(2,a))&&S&&this.pokemonEggMoveLabels[a].setText("(+) "+L.name)}this.pokemonEggMovesContainer.setVisible(!0),R.speciesId===e.MANAPHY||R.speciesId===e.PHIONE?this.pokemonHatchedIcon.setFrame("manaphy"):this.pokemonHatchedIcon.setFrame(da(R))}};T(ZK,"PokemonHatchInfoContainer");let xc=ZK;const XK=class XK extends Phaser.GameObjects.Container{constructor(A,s,R,I){super(A,s,R);const i=I.pokemon;this.species=i.species;const a=2,L=12,S=i.species,o=i.gender===ye.FEMALE,l=i.formIndex,D=i.variant,M=i.shiny,c=this.scene.add.sprite(-a,a,S.getIconAtlasKey(l,M,D));c.setScale(.5),c.setOrigin(0,0),c.setFrame(S.getIconId(o,l,M,D)),this.icon=c,this.checkIconId(o,l,M,D),this.add(this.icon),this.shinyIcon=this.scene.add.image(L,a,"shiny_star_small"),this.shinyIcon.setOrigin(0,0),this.shinyIcon.setScale(.5),this.add(this.shinyIcon);const G=this.scene.add.image(L,a*4,"ha_capsule");G.setOrigin(0,0),G.setScale(.5),this.hiddenAbilityIcon=G,this.add(this.hiddenAbilityIcon);const P=this.scene.add.image(L,a*7,"icon_owned");P.setOrigin(0,0),P.setScale(.5),this.pokeballIcon=P,this.add(this.pokeballIcon);const _=this.scene.add.image(0,a,"icon_egg_move");_.setOrigin(0,0),_.setScale(.5),this.eggMoveIcon=_,this.add(this.eggMoveIcon)}updateAndAnimate(A,s){const R=A.pokemon;this.species=R.species;const i=A.dexEntryBeforeUpdate.caughtAttr,a=BigInt(1<<(R.shiny?1:0)),L=BigInt(1<<R.variant+4),S=(a&i)===BigInt(0)||(L&i)===BigInt(0),o=(BigInt(1<<R.formIndex)*Fe.DEFAULT_FORM&i)===BigInt(0),l=R.gender===ye.FEMALE,D=R.formIndex,M=R.variant,c=R.shiny;this.icon.setTexture(this.species.getIconAtlasKey(D,c,M)),this.icon.setFrame(this.species.getIconId(l,D,c,M)),this.checkIconId(l,D,c,M),this.shinyIcon.setVisible(R.shiny),this.shinyIcon.setTint(GE(R.variant)),this.eggMoveIcon.setVisible(A.eggMoveUnlocked),this.hiddenAbilityIcon.setVisible(R.abilityIndex===2),this.pokeballIcon.setVisible(!i||o),!i||S||o?s.addOrUpdate(this.icon,ys.PASSIVE):s.addOrUpdate(this.icon,ys.NONE)}checkIconId(A,s,R,I){this.icon.frame.name!==this.species.getIconId(A,s,R,I)&&(`${this.species.name}`,this.icon.setTexture(this.species.getIconAtlasKey(s,!1,I)),this.icon.setFrame(this.species.getIconId(A,s,!1,I)))}};T(XK,"HatchedPokemonContainer");let bc=XK;const ou=112,lu=9,Wo=9,qn=11,ir=18,QK=class QK extends vs{constructor(A){super(A,$.EGG_HATCH_SUMMARY),this.eventTarget=new EventTarget}setup(){const A=this.getUi();this.summaryContainer=this.scene.add.container(0,-this.scene.game.canvas.height/6),this.summaryContainer.setVisible(!1),A.add(this.summaryContainer),this.eggHatchContainer=this.scene.add.container(0,-this.scene.game.canvas.height/6),this.eggHatchContainer.setVisible(!1),A.add(this.eggHatchContainer),this.iconAnimHandler=new IL,this.iconAnimHandler.setup(this.scene),this.eggHatchBg=this.scene.add.image(0,0,"egg_summary_bg"),this.eggHatchBg.setOrigin(0,0),this.eggHatchContainer.add(this.eggHatchBg),this.cursorObj=this.scene.add.image(0,0,"select_cursor"),this.cursorObj.setOrigin(0,0),this.summaryContainer.add(this.cursorObj),this.pokemonContainers=[],this.pokemonIconsContainer=this.scene.add.container(ou,lu),this.summaryContainer.add(this.pokemonIconsContainer),this.infoContainer=new xc(this.scene,this.summaryContainer),this.infoContainer.setup(),this.infoContainer.changeToEggSummaryLayout(),this.infoContainer.setVisible(!0),this.summaryContainer.add(this.infoContainer);const s=new gI(this.scene,ou+qn*ir,lu+3,4,this.scene.game.canvas.height/6-20,Wo);this.summaryContainer.add(s),this.scrollGridHandler=new iC(this,Wo,qn).withScrollBar(s).withUpdateGridCallBack(()=>this.updatePokemonIcons()).withUpdateSingleElementCallback(R=>this.infoContainer.showHatchInfo(this.eggHatchData[R])),this.cursor=-1}clear(){super.clear(),this.scrollGridHandler.reset(),this.cursor=-1,this.summaryContainer.setVisible(!1),this.pokemonIconsContainer.removeAll(!0),this.pokemonContainers=[],this.eggHatchBg.setVisible(!1),this.getUi().hideTooltip();const A=this.scene.getActiveKeys();Object.keys(this.scene.anims.anims.entries).forEach(I=>{I.startsWith("pkmn__")&&!A.includes(I)&&this.scene.anims.remove(I)}),Object.keys(this.scene.cache.audio.entries.entries).forEach(I=>{I.startsWith("cry/")&&!A.includes(I)&&delete this.scene.cache.audio.entries.entries[I]}),this.eggHatchData.length=0,this.iconAnimHandler.removeAll()}show(A){super.show(A),A.length>=1&&(this.eggHatchData=A[0].sort(T(function(I,i){const a=I.pokemon.species,L=i.pokemon.species;return da(a)<da(L)?-1:da(a)>da(L)?1:a.speciesId<L.speciesId?-1:a.speciesId>L.speciesId?1:0},"sortHatchData"))),this.getUi().bringToTop(this.summaryContainer),this.summaryContainer.setVisible(!0),this.eggHatchContainer.setVisible(!0),this.eggHatchBg.setVisible(!0),this.infoContainer.hideDisplayPokemon(),this.scrollGridHandler.setTotalElements(this.eggHatchData.length),this.updatePokemonIcons(),this.setCursor(0),this.scene.playSoundWithoutBgm("evolution_fanfare");const s=this.scene.eggSkipPreference===2?2e3:1e3;return this.blockExit=!0,this.scene.time.delayedCall(s,()=>this.blockExit=!1),!0}updatePokemonIcons(){const A=this.scrollGridHandler.getItemOffset(),s=Math.min(Wo*qn,this.eggHatchData.length-A);for(let R=0;R<Wo*qn;R++){const I=this.eggHatchData[R+A];let i=this.pokemonContainers[R];if(R<s){if(!i){const a=R%qn*ir,L=Math.floor(R/qn)*ir;i=new bc(this.scene,a,L,I).setVisible(!1),this.pokemonContainers.push(i),this.pokemonIconsContainer.add(i)}i.setVisible(!0),i.updateAndAnimate(I,this.iconAnimHandler)}else i&&(i.setVisible(!1),this.iconAnimHandler.addOrUpdate(i.icon,ys.NONE))}}processInput(A){const s=this.getUi();let R=!1,I=!1;if(A===y.CANCEL)if(this.blockExit)I=!0;else{const i=this.scene.getCurrentPhase();i instanceof Xl&&i.end(),R=!0}else this.scrollGridHandler.processInput(A);return R?s.playSelect():I&&s.playError(),R||I}setCursor(A){let s=!1;const R=this.cursor;return s=super.setCursor(A),s&&(this.cursorObj.setPosition(ou-1+ir*(A%qn),lu+1+ir*Math.floor(A/qn)),R>-1&&this.iconAnimHandler.addOrUpdate(this.pokemonContainers[R].icon,ys.NONE),this.iconAnimHandler.addOrUpdate(this.pokemonContainers[A].icon,ys.ACTIVE),this.infoContainer.showHatchInfo(this.eggHatchData[A+this.scrollGridHandler.getItemOffset()])),s}};T(QK,"EggSummaryUiHandler");let kc=QK;const JK=class JK extends xi{constructor(A,s){super(A,s)}setup(){super.setup();const A=T((I,i,a)=>Object.keys(I??{}).map((L,S)=>{const o=Object.values(I)[S];if(typeof o=="object"&&!xe(o))return A(o,i??L,i?a?[...a,L]:[L]:void 0).filter(l=>l.length>0);if(typeof o=="string"||xe(o))return a?`${i}:${a.map(l=>l).join(".")}.${L}`:`${i}:${L}`}).filter(L=>L),"flattenKeys"),R=A(U.getDataByLanguage(String(U.resolvedLanguage))).filter(I=>I.length>0).flat(1/0).map(String);this.keys=R}getModalTitle(A){return"Test Dialogue"}getWidth(A){return 300}getMargin(A){return[0,0,48,0]}getButtonLabels(A){return["Check","Cancel"]}getReadableErrorMessage(A){const s=A==null?void 0:A.indexOf(":");return s>0&&(A=A.slice(0,s)),super.getReadableErrorMessage(A)}getInputFieldConfigs(){return[{label:"Dialogue"}]}show(A){const s=this.getUi(),R=!!this.getModalTitle();this.updateFields(this.getInputFieldConfigs(),R),this.updateContainer(A[0]);const I=this.inputs[0];if(I.setMaxLength(255),I.on("keydown",(i,a)=>{["escape","space"].some(L=>L===a.key.toLowerCase()||L===a.code.toLowerCase())&&s.getMode()===$.AUTO_COMPLETE&&(i.on("blur",()=>i.node.focus(),{once:!0}),s.revertMode())}),I.on("textchange",(i,a)=>{s.getMode()===$.AUTO_COMPLETE&&s.revertMode();let L=[];const S=i.text.split(" "),o=this.keys.filter(l=>l.toLowerCase().includes(S[S.length-1].toLowerCase()));if(i.text!==""&&o.length>0&&(L=o.slice(0).map(l=>({label:l,handler:T(()=>{var D;if(!xe(a.data)||((D=a.inputType)==null?void 0:D.toLowerCase())==="deletecontentbackward"){const M=i.text.split(" ");M[M.length-1]=l,i.setText(M.join(" "))}return s.revertMode(),!0},"handler")}))),L.length>0){const l={options:L,maxOptions:5,modalContainer:this.modalContainer};s.setOverlayMode($.AUTO_COMPLETE,l)}}),super.show(A)){const i=A[0];return this.inputs[0].resize(1150,116),this.inputContainers[0].list[0].width=200,A[1]&&typeof A[1].getNameToRender=="function"?this.inputs[0].text=A[1].getNameToRender():this.inputs[0].text=A[1],this.submitAction=a=>{if(s.getMode()===$.TEST_DIALOGUE){this.sanitizeInputs();const L=btoa(unescape(encodeURIComponent(this.inputs[0].text)));return i.buttonActions[0](L),!0}return!1},!0}return!1}};T(JK,"TestDialogueUiHandler");let Zc=JK;const $K=class $K extends dT{constructor(A,s=$.OPTION_SELECT){super(A,s)}getWindowWidth(){return 64}show(A){if(A[0].modalContainer){const{modalContainer:s}=A[0],R=super.show(A);return this.modalContainer=s,this.setupOptions(),R}return!1}setupOptions(){super.setupOptions(),this.modalContainer&&(this.optionSelectContainer.setSize(this.optionSelectContainer.height,Math.max(this.optionSelectText.displayWidth+24,this.getWindowWidth())),this.optionSelectContainer.setPositionRelative(this.modalContainer,this.optionSelectBg.width,this.optionSelectBg.height+50))}processInput(A){return A!==y.CANCEL&&A!==y.ACTION?super.processInput(A):!1}};T($K,"AutoCompleteUiHandler");let Xc=$K;const qK=class qK extends os{constructor(A){super(A,$.MYSTERY_ENCOUNTER),this.optionScrollTweens=new Array(4).fill(null),this.showDexProgress=!1,this.encounterOptions=[],this.viewPartyIndex=0,this.viewPartyXPosition=0,this.blockInput=!0}setup(){const A=this.getUi();this.cursorContainer=this.scene.add.container(18,-38.7),this.cursorContainer.setVisible(!1),A.add(this.cursorContainer),this.optionsContainer=this.scene.add.container(12,-38.7),this.optionsContainer.setVisible(!1),A.add(this.optionsContainer),this.dexProgressContainer=this.scene.add.container(214,-43),this.dexProgressContainer.setVisible(!1),A.add(this.dexProgressContainer),this.descriptionContainer=this.scene.add.container(0,-152),this.descriptionContainer.setVisible(!1),A.add(this.descriptionContainer),this.tooltipContainer=this.scene.add.container(210,-48),this.tooltipContainer.setVisible(!1),A.add(this.tooltipContainer),this.setCursor(this.getCursor()),this.descriptionWindow=it(this.scene,0,0,150,105,!1,!1,0,0,vR.THIN),this.descriptionContainer.add(this.descriptionWindow),this.tooltipWindow=it(this.scene,0,0,110,48,!1,!1,0,0,vR.THIN),this.tooltipContainer.add(this.tooltipWindow),this.dexProgressWindow=it(this.scene,0,0,24,28,!1,!1,0,0,vR.THIN),this.dexProgressContainer.add(this.dexProgressWindow),this.rarityBall=this.scene.add.sprite(141,9,"pb"),this.rarityBall.setScale(.75),this.descriptionContainer.add(this.rarityBall);const s=this.scene.add.sprite(12,10,"encounter_radar");s.setScale(.8),this.dexProgressContainer.add(s),this.dexProgressContainer.setInteractive(new Phaser.Geom.Rectangle(0,0,24,28),Phaser.Geom.Rectangle.Contains)}show(A){var a,L,S,o;super.show(A),this.overrideSettings=A[0]??{};const s=xe((a=this.overrideSettings)==null?void 0:a.hideDescription)?!0:!this.overrideSettings.hideDescription,R=xe((L=this.overrideSettings)==null?void 0:L.slideInDescription)?!0:this.overrideSettings.slideInDescription,I=((S=this.overrideSettings)==null?void 0:S.startingCursorIndex)??0;this.cursorContainer.setVisible(!0),this.descriptionContainer.setVisible(s),this.optionsContainer.setVisible(!0),this.dexProgressContainer.setVisible(!0),this.displayEncounterOptions(R);const i=this.getCursor();return i===(((o=this.optionsContainer)==null?void 0:o.length)||0)-1?this.setCursor(i):this.setCursor(I),this.blockInput&&setTimeout(()=>{this.unblockInput()},1e3),this.displayOptionTooltip(),!0}processInput(A){var i;const s=this.getUi();let R=!1;const I=this.getCursor();if(A===y.CANCEL||A===y.ACTION){if(A===y.ACTION){const a=this.encounterOptions[I];if(I===this.viewPartyIndex){R=!0;const L={...this.overrideSettings,slideInDescription:!1};this.scene.ui.setMode($.PARTY,as.CHECK,-1,()=>{this.scene.ui.setMode($.MYSTERY_ENCOUNTER,L),setTimeout(()=>{this.setCursor(this.viewPartyIndex),this.unblockInput()},300)})}else this.blockInput||!this.optionsMeetsReqs[I]&&(a.optionMode===It.DISABLED_OR_DEFAULT||a.optionMode===It.DISABLED_OR_SPECIAL)?R=!1:this.scene.getCurrentPhase().handleOptionSelect(a,I)?R=!0:s.playError()}}else{switch((i=this.optionsContainer.getAll())==null?void 0:i.length){default:case 3:R=this.handleTwoOptionMoveInput(A);break;case 4:R=this.handleThreeOptionMoveInput(A);break;case 5:R=this.handleFourOptionMoveInput(A);break}this.displayOptionTooltip()}return R&&s.playSelect(),R}handleTwoOptionMoveInput(A){let s=!1;const R=this.getCursor();switch(A){case y.UP:R<this.viewPartyIndex&&(s=this.setCursor(this.viewPartyIndex));break;case y.DOWN:R===this.viewPartyIndex&&(s=this.setCursor(1));break;case y.LEFT:R>0&&(s=this.setCursor(R-1));break;case y.RIGHT:R<this.viewPartyIndex&&(s=this.setCursor(R+1));break}return s}handleThreeOptionMoveInput(A){let s=!1;const R=this.getCursor();switch(A){case y.UP:R===2?s=this.setCursor(R-2):s=this.setCursor(this.viewPartyIndex);break;case y.DOWN:R===this.viewPartyIndex?s=this.setCursor(1):s=this.setCursor(2);break;case y.LEFT:R===this.viewPartyIndex?s=this.setCursor(1):R===1&&(s=this.setCursor(R-1));break;case y.RIGHT:R===1?s=this.setCursor(this.viewPartyIndex):R<1&&(s=this.setCursor(R+1));break}return s}handleFourOptionMoveInput(A){let s=!1;const R=this.getCursor();switch(A){case y.UP:R>=2&&R!==this.viewPartyIndex?s=this.setCursor(R-2):s=this.setCursor(this.viewPartyIndex);break;case y.DOWN:R<=1?s=this.setCursor(R+2):R===this.viewPartyIndex&&(s=this.setCursor(1));break;case y.LEFT:R===this.viewPartyIndex?s=this.setCursor(1):R%2===1&&(s=this.setCursor(R-1));break;case y.RIGHT:R===1?s=this.setCursor(this.viewPartyIndex):R%2===0&&R!==this.viewPartyIndex&&(s=this.setCursor(R+1));break}return s}unblockInput(){if(this.blockInput){this.blockInput=!1;for(let A=0;A<this.optionsContainer.length-1;A++){const s=this.encounterOptions[A].optionMode;!this.optionsMeetsReqs[A]&&(s===It.DISABLED_OR_DEFAULT||s===It.DISABLED_OR_SPECIAL)||this.optionsContainer.getAt(A).setAlpha(1)}}}getCursor(){return this.cursor?this.cursor:0}setCursor(A){var I,i,a,L;const R=this.getCursor()!==A;return R&&(this.cursor=A),this.viewPartyIndex=((I=this.optionsContainer.getAll())==null?void 0:I.length)-1,this.cursorObj||(this.cursorObj=this.scene.add.image(0,0,"cursor"),this.cursorContainer.add(this.cursorObj)),A===this.viewPartyIndex?this.cursorObj.setPosition(this.viewPartyXPosition,-17):((i=this.optionsContainer.getAll())==null?void 0:i.length)===3?this.cursorObj.setPosition(-10.5+(A%2===1?100:0),15):((a=this.optionsContainer.getAll())==null?void 0:a.length)===4?this.cursorObj.setPosition(-10.5+(A%2===1?100:0),7+(A>1?16:0)):((L=this.optionsContainer.getAll())==null?void 0:L.length)===5&&this.cursorObj.setPosition(-10.5+(A%2===1?100:0),7+(A>1?16:0)),R}displayEncounterOptions(A=!0){var P,_,g,H;this.getUi().clearText();const s=this.scene.currentBattle.mysteryEncounter;this.encounterOptions=((P=this.overrideSettings)==null?void 0:P.overrideOptions)??s.options,this.optionsMeetsReqs=[];const R=UA(this.scene,(_=s.dialogue.encounterOptionsDialogue)==null?void 0:_.title,V.TOOLTIP_TITLE),I=UA(this.scene,(g=s.dialogue.encounterOptionsDialogue)==null?void 0:g.description,V.TOOLTIP_CONTENT),i=UA(this.scene,(H=s.dialogue.encounterOptionsDialogue)==null?void 0:H.query,V.TOOLTIP_CONTENT);this.optionsContainer.removeAll(!0);for(let F=0;F<this.encounterOptions.length;F++){const p=this.encounterOptions[F];let v;switch(this.encounterOptions.length){default:case 2:v=PE(this.scene,F%2===0?0:100,8,"-",V.WINDOW,{fontSize:"80px",lineSpacing:-8});break;case 3:v=PE(this.scene,F%2===0?0:100,F<2?0:16,"-",V.WINDOW,{fontSize:"80px",lineSpacing:-8});break;case 4:v=PE(this.scene,F%2===0?0:100,F<2?0:16,"-",V.WINDOW,{fontSize:"80px",lineSpacing:-8});break}this.optionsMeetsReqs.push(p.meetsRequirements(this.scene));const k=p.dialogue,j=!this.optionsMeetsReqs[F]&&k.disabledButtonLabel?k.disabledButtonLabel:k.buttonLabel;let q;p.hasRequirements()&&this.optionsMeetsReqs[F]&&(p.optionMode===It.DEFAULT_OR_SPECIAL||p.optionMode===It.DISABLED_OR_SPECIAL)?q=UA(this.scene,j,V.SUMMARY_GREEN):q=UA(this.scene,j,k.style?k.style:V.WINDOW),q&&v.setText(q),!this.optionsMeetsReqs[F]&&(p.optionMode===It.DISABLED_OR_DEFAULT||p.optionMode===It.DISABLED_OR_SPECIAL)&&v.setAlpha(.5),this.blockInput&&v.setAlpha(.5);const ie=90,z=this.scene.make.graphics({});z.setScale(6),z.fillStyle(16777215),z.beginPath(),z.fillRect(v.x+11,v.y+140,ie,18);const Oe=z.createGeometryMask();v.setMask(Oe);const ae=v.displayWidth,Le=this.optionScrollTweens[F];Le&&(Le.remove(),this.optionScrollTweens[F]=null),ae>ie&&(this.optionScrollTweens[F]=this.scene.tweens.add({targets:v,delay:Ve(2e3),loop:-1,hold:Ve(2e3),duration:Ve((ae-ie)/15*2e3),x:`-=${ae-ie}`})),this.optionsContainer.add(v)}const a=PE(this.scene,this.scene.game.canvas.width/6,-24,jR(U.t("mysteryEncounterMessages:view_party_button"),V.PARTY),V.PARTY);this.optionsContainer.add(a),a.x-=a.displayWidth+16,this.viewPartyXPosition=a.x-10;const L=PE(this.scene,0,0,R??"",V.TOOLTIP_TITLE,{wordWrap:{width:750},align:"center",lineSpacing:-8});this.descriptionContainer.add(L),L.setPosition(72-L.displayWidth/2,5.5);const S=s.encounterTier===Gt.COMMON?0:s.encounterTier===Gt.GREAT?1:s.encounterTier===Gt.ULTRA?2:s.encounterTier===Gt.ROGUE?3:4,o=OO(S);this.rarityBall.setTexture("pb",o);const l=PE(this.scene,6,25,I??"",V.TOOLTIP_CONTENT,{wordWrap:{width:830}}),D=this.scene.make.graphics({});D.setScale(6),D.fillStyle(16777215),D.beginPath(),D.fillRect(6,53,206,57);const M=D.createGeometryMask();l.setMask(M);const c=Math.floor(l.displayHeight/10);this.descriptionScrollTween&&(this.descriptionScrollTween.remove(),this.descriptionScrollTween=void 0),c>6&&(this.descriptionScrollTween=this.scene.tweens.add({targets:l,delay:Ve(2e3),loop:-1,hold:Ve(2e3),duration:Ve((c-6)*2e3),y:`-=${10*(c-6)}`})),this.descriptionContainer.add(l);const G=PE(this.scene,0,0,i??"",V.TOOLTIP_CONTENT,{wordWrap:{width:830}});this.descriptionContainer.add(G),G.setPosition(75-G.displayWidth/2,90),A&&(this.descriptionContainer.x-=150,this.scene.tweens.add({targets:this.descriptionContainer,x:"+=150",ease:"Sine.easeInOut",duration:1e3}))}displayOptionTooltip(){const A=this.getCursor();if(this.tooltipContainer.length>1&&this.tooltipContainer.removeBetween(1,this.tooltipContainer.length,!0),this.tooltipContainer.setVisible(!0),xe(A)||A>this.optionsContainer.length-2){this.showHideDexProgress(!1);return}let s;const R=this.encounterOptions[A],I=R.dialogue;if(!this.optionsMeetsReqs[A]&&(R.optionMode===It.DISABLED_OR_DEFAULT||R.optionMode===It.DISABLED_OR_SPECIAL)&&I.disabledButtonTooltip?s=UA(this.scene,I.disabledButtonTooltip,V.TOOLTIP_CONTENT):s=UA(this.scene,I.buttonTooltip,V.TOOLTIP_CONTENT),s){const i=[...s.match(new RegExp(/\[color=[^\[]*\]\[shadow=[^\[]*\]/i))][0];s=s.replace(/(\(\+\)[^\(\[]*)/gi,a=>"[/color][/shadow]"+jR(a,V.SUMMARY_GREEN)+"[/color][/shadow]"+i),s=s.replace(/(\(\-\)[^\(\[]*)/gi,a=>"[/color][/shadow]"+jR(a,V.SUMMARY_BLUE)+"[/color][/shadow]"+i)}if(s){const i=PE(this.scene,6,7,s,V.TOOLTIP_CONTENT,{wordWrap:{width:600},fontSize:"72px"});this.tooltipContainer.add(i);const a=this.scene.make.graphics({});a.setScale(6),a.fillStyle(16777215),a.beginPath(),a.fillRect(this.tooltipContainer.x,this.tooltipContainer.y+188.5,150,32);const L=a.createGeometryMask();i.setMask(L);const S=Math.floor(i.displayHeight/11.2);this.tooltipScrollTween&&(this.tooltipScrollTween.remove(),this.tooltipScrollTween=void 0),S>3&&(this.tooltipScrollTween=this.scene.tweens.add({targets:i,delay:Ve(1200),loop:-1,hold:Ve(1200),duration:Ve((S-3)*1200),y:`-=${11.2*(S-3)}`}))}R.hasDexProgress&&!this.showDexProgress?this.showHideDexProgress(!0):R.hasDexProgress||this.showHideDexProgress(!1)}clear(){super.clear(),this.overrideSettings=void 0,this.optionsContainer.setVisible(!1),this.optionsContainer.removeAll(!0),this.dexProgressContainer.setVisible(!1),this.descriptionContainer.setVisible(!1),this.tooltipContainer.setVisible(!1),this.descriptionContainer.removeBetween(2,this.descriptionContainer.length,!0),this.getUi().getMessageHandler().clearText(),this.eraseCursor()}eraseCursor(){this.cursorObj&&this.cursorObj.destroy(),this.cursorObj=void 0}showHideDexProgress(A){A&&!this.showDexProgress?(this.showDexProgress=!0,this.scene.tweens.killTweensOf(this.dexProgressContainer),this.scene.tweens.add({targets:this.dexProgressContainer,y:-63,ease:"Sine.easeInOut",duration:750,onComplete:T(()=>{this.dexProgressContainer.on("pointerover",()=>{this.scene.ui.showTooltip("",U.t("mysteryEncounterMessages:affects_pokedex"),!0)}),this.dexProgressContainer.on("pointerout",()=>{this.scene.ui.hideTooltip()})},"onComplete")})):!A&&this.showDexProgress&&(this.showDexProgress=!1,this.scene.tweens.killTweensOf(this.dexProgressContainer),this.scene.tweens.add({targets:this.dexProgressContainer,y:-43,ease:"Sine.easeInOut",duration:750,onComplete:T(()=>{this.dexProgressContainer.off("pointerover"),this.dexProgressContainer.off("pointerout")},"onComplete")}))}};T(qK,"MysteryEncounterUiHandler");let Qc=qK;var $=(E=>(E[E.MESSAGE=0]="MESSAGE",E[E.TITLE=1]="TITLE",E[E.COMMAND=2]="COMMAND",E[E.FIGHT=3]="FIGHT",E[E.BALL=4]="BALL",E[E.TARGET_SELECT=5]="TARGET_SELECT",E[E.MODIFIER_SELECT=6]="MODIFIER_SELECT",E[E.SAVE_SLOT=7]="SAVE_SLOT",E[E.PARTY=8]="PARTY",E[E.SUMMARY=9]="SUMMARY",E[E.STARTER_SELECT=10]="STARTER_SELECT",E[E.EVOLUTION_SCENE=11]="EVOLUTION_SCENE",E[E.EGG_HATCH_SCENE=12]="EGG_HATCH_SCENE",E[E.EGG_HATCH_SUMMARY=13]="EGG_HATCH_SUMMARY",E[E.CONFIRM=14]="CONFIRM",E[E.OPTION_SELECT=15]="OPTION_SELECT",E[E.MENU=16]="MENU",E[E.MENU_OPTION_SELECT=17]="MENU_OPTION_SELECT",E[E.SETTINGS=18]="SETTINGS",E[E.SETTINGS_DISPLAY=19]="SETTINGS_DISPLAY",E[E.SETTINGS_AUDIO=20]="SETTINGS_AUDIO",E[E.SETTINGS_GAMEPAD=21]="SETTINGS_GAMEPAD",E[E.GAMEPAD_BINDING=22]="GAMEPAD_BINDING",E[E.SETTINGS_KEYBOARD=23]="SETTINGS_KEYBOARD",E[E.KEYBOARD_BINDING=24]="KEYBOARD_BINDING",E[E.ACHIEVEMENTS=25]="ACHIEVEMENTS",E[E.GAME_STATS=26]="GAME_STATS",E[E.EGG_LIST=27]="EGG_LIST",E[E.EGG_GACHA=28]="EGG_GACHA",E[E.LOGIN_FORM=29]="LOGIN_FORM",E[E.REGISTRATION_FORM=30]="REGISTRATION_FORM",E[E.LOADING=31]="LOADING",E[E.SESSION_RELOAD=32]="SESSION_RELOAD",E[E.UNAVAILABLE=33]="UNAVAILABLE",E[E.CHALLENGE_SELECT=34]="CHALLENGE_SELECT",E[E.RENAME_POKEMON=35]="RENAME_POKEMON",E[E.RUN_HISTORY=36]="RUN_HISTORY",E[E.RUN_INFO=37]="RUN_INFO",E[E.TEST_DIALOGUE=38]="TEST_DIALOGUE",E[E.AUTO_COMPLETE=39]="AUTO_COMPLETE",E[E.ADMIN=40]="ADMIN",E[E.MYSTERY_ENCOUNTER=41]="MYSTERY_ENCOUNTER",E))($||{});const Xv=[7,8,9,10,11,12,27,28,34,36],Yo=[1,14,15,16,17,22,24,18,20,19,21,23,25,26,29,30,31,32,33,35,38,39,40,41,37],jK=class jK extends Phaser.GameObjects.Container{constructor(A){super(A,0,A.game.canvas.height/6),this.mode=0,this.modeChain=[],this.handlers=[new Y0(A),new Kc(A),new fh(A),new Bh(A),new gh(A),new Nc(A),new _h(A),new yh(A),new HE(A),new Fh(A),new VT(A),new eC(A),new cc(A),new kc(A),new Wl(A),new bT(A),new uc(A),new bT(A,17),new RC(A),new rC(A),new NC(A),new IC(A),new Yc(A),new LC(A),new yc(A),new hc(A),new fc(A),new Gc(A),new Pc(A),new _c(A),new Hc(A),new dc(A),new Wc(A),new mc(A),new lc(A),new wc(A),new Vc(A),new xl(A),new Zc(A,38),new Xc(A),new Dc(A),new Qc(A)]}setup(){this.setName(`ui-${$[this.mode]}`);for(const A of this.handlers)A.setup();this.overlay=this.scene.add.rectangle(0,0,this.scene.game.canvas.width/6,this.scene.game.canvas.height/6,0),this.overlay.setName("rect-ui-overlay"),this.overlay.setOrigin(0,0),this.scene.uiContainer.add(this.overlay),this.overlay.setVisible(!1),this.setupTooltip(),this.achvBar=new Cc(this.scene),this.achvBar.setup(),this.scene.uiContainer.add(this.achvBar),this.savingIcon=new Fc(this.scene),this.savingIcon.setup(),this.scene.uiContainer.add(this.savingIcon)}setupTooltip(){this.tooltipContainer=this.scene.add.container(0,0),this.tooltipContainer.setName("tooltip"),this.tooltipContainer.setVisible(!1),this.tooltipBg=it(this.scene,0,0,128,31),this.tooltipBg.setName("window-tooltip-bg"),this.tooltipBg.setOrigin(0,0),this.tooltipTitle=se(this.scene,64,4,"",V.TOOLTIP_TITLE),this.tooltipTitle.setName("text-tooltip-title"),this.tooltipTitle.setOrigin(.5,0),this.tooltipContent=se(this.scene,6,16,"",V.TOOLTIP_CONTENT),this.tooltipContent.setName("text-tooltip-content"),this.tooltipContent.setWordWrapWidth(850),this.tooltipContainer.add(this.tooltipBg),this.tooltipContainer.add(this.tooltipTitle),this.tooltipContainer.add(this.tooltipContent),this.scene.uiContainer.add(this.tooltipContainer)}getHandler(){return this.handlers[this.mode]}getMessageHandler(){return this.handlers[0]}processInfoButton(A){if(this.overlayActive)return!1;const s=this.scene;return[14,2,3,0].includes(this.mode)?(s==null||s.processInfoButton(A),!0):(s==null||s.processInfoButton(!1),!0)}processInput(A){if(this.overlayActive)return!1;const s=this.getHandler();return s instanceof Fn&&s.tutorialActive?s.processTutorialInput(A):s.processInput(A)}showTextPromise(A,s=0,R=!0,I){return new Promise(i=>{this.showText(A??"",null,()=>i(),s,R,I)})}showText(A,s,R,I,i,a){if(i&&A.indexOf("$")>-1){const L=A.split(/\$/g).map(o=>o.trim());let S=T(()=>R&&R(),"showMessageAndCallback");for(let o=L.length-1;o>=0;o--){const l=S;S=T(()=>this.showText(L[o],null,l,null,!0),"showMessageAndCallback")}S()}else{const L=this.getHandler();L instanceof vs?L.showText(A,s,R,I,i,a):this.getMessageHandler().showText(A,s,R,I,i,a)}}showDialogue(A,s,R=0,I,i,a){const L=this.scene;let S=!1,o=A;const l=L.gameData.gender??ct.UNSET,D=ct[l].toLowerCase();if(U.exists(A)){const c=A;if(S=!0,o=U.t(c,{context:D}),this.shouldSkipDialogue(c)){I();return}}let M=T(()=>{S&&L.gameData.saveSeenDialogue(A),I()},"showMessageAndCallback");if(o.indexOf("$")>-1){const c=o.split(/\$/g).map(G=>G.trim());for(let G=c.length-1;G>=0;G--){const P=M;M=T(()=>this.showDialogue(c[G],s,null,P),"showMessageAndCallback")}M()}else{const c=this.getHandler();c instanceof vs?c.showDialogue(o,s,R,M,i,!0,a):this.getMessageHandler().showDialogue(o,s,R,M,i,!0,a)}}shouldSkipDialogue(A){const s=this.scene;return!!(U.exists(A)&&s.skipSeenDialogues&&s.gameData.getSeenDialogues()[A]===!0)}getTooltip(){return{visible:this.tooltipContainer.visible,title:this.tooltipTitle.text,content:this.tooltipContent.text}}showTooltip(A,s,R){this.tooltipContainer.setVisible(!0),this.editTooltip(A,s),R?this.scene.uiContainer.moveAbove(this.tooltipContainer,this):this.scene.uiContainer.moveBelow(this.tooltipContainer,this)}editTooltip(A,s){this.tooltipTitle.setText(A||"");const R=this.tooltipContent.runWordWrap(s);this.tooltipContent.setText(R),this.tooltipContent.y=A?16:4,this.tooltipBg.width=Math.min(Math.max(this.tooltipTitle.displayWidth,this.tooltipContent.displayWidth)+12,838),this.tooltipBg.height=(A?31:19)+10.5*(R.split(`
`).length-1)}hideTooltip(){this.tooltipContainer.setVisible(!1),this.tooltipTitle.clearTint()}update(){if(this.tooltipContainer.visible){const A=this.scene.game.input.mousePointer&&this.scene.game.input.mousePointer.x>=this.scene.game.canvas.width-this.tooltipBg.width*6-12,s=this.scene.game.input.mousePointer&&this.scene.game.input.mousePointer.y>=this.scene.game.canvas.height-this.tooltipBg.height*6-12;this.tooltipContainer.setPosition(A?this.scene.game.input.mousePointer.x/6-this.tooltipBg.width-2:this.scene.game.input.mousePointer.x/6+2,s?this.scene.game.input.mousePointer.y/6-this.tooltipBg.height-2:this.scene.game.input.mousePointer.y/6+2)}}clearText(){const A=this.getHandler();A instanceof vs?A.clearText():this.getMessageHandler().clearText()}setCursor(A){const s=this.getHandler().setCursor(A);return s&&this.playSelect(),s}playSelect(){this.scene.playSound("ui/select")}playError(){this.scene.playSound("ui/error")}fadeOut(A){return new Promise(s=>{if(this.overlayActive)return s();this.overlayActive=!0,this.overlay.setAlpha(0),this.overlay.setVisible(!0),this.scene.tweens.add({targets:this.overlay,alpha:1,duration:A,ease:"Sine.easeOut",onComplete:T(()=>s(),"onComplete")})})}fadeIn(A){return new Promise(s=>{if(!this.overlayActive)return s();this.scene.tweens.add({targets:this.overlay,alpha:0,duration:A,ease:"Sine.easeIn",onComplete:T(()=>{this.overlay.setVisible(!1),s()},"onComplete")}),this.overlayActive=!1})}setModeInternal(A,s,R,I,i){return new Promise(a=>{if(this.mode===A&&!R){a();return}const L=T(()=>{if(this.mode!==A){s&&this.getHandler().clear(),I&&this.mode&&!s&&(this.modeChain.push(this.mode),this.scene.updateGameInfo()),this.mode=A;const S=document==null?void 0:document.getElementById("touchControls");S&&(S.dataset.uiMode=$[A]),this.getHandler().show(i)}a()},"doSetMode");!I&&(Xv.indexOf(this.mode)>-1||Xv.indexOf(A)>-1)&&Yo.indexOf(this.mode)===-1&&Yo.indexOf(A)===-1||I&&Yo.indexOf(A)===-1?this.fadeOut(250).then(()=>{this.scene.time.delayedCall(100,()=>{L(),this.fadeIn(250)})}):L()})}getMode(){return this.mode}setMode(A,...s){return this.setModeInternal(A,!0,!1,!1,s)}setModeForceTransition(A,...s){return this.setModeInternal(A,!0,!0,!1,s)}setModeWithoutClear(A,...s){return this.setModeInternal(A,!1,!1,!1,s)}setOverlayMode(A,...s){return this.setModeInternal(A,!1,!1,!0,s)}resetModeChain(){this.modeChain=[],this.scene.updateGameInfo()}revertMode(){return new Promise(A=>{var I;if(!((I=this==null?void 0:this.modeChain)!=null&&I.length))return A(!1);const s=this.mode,R=T(()=>{this.getHandler().clear(),this.mode=this.modeChain.pop(),this.scene.updateGameInfo();const i=document.getElementById("touchControls");i&&(i.dataset.uiMode=$[this.mode]),A(!0)},"doRevertMode");Yo.indexOf(s)===-1?this.fadeOut(250).then(()=>{this.scene.time.delayedCall(100,()=>{R(),this.fadeIn(250)})}):R()})}revertModes(){return new Promise(A=>{var s;if(!((s=this==null?void 0:this.modeChain)!=null&&s.length))return A();this.revertMode().then(R=>OL(R,this.revertModes).then(()=>A()))})}getModeChain(){return this.modeChain}getGamepadType(){const A=this.scene;return A.inputMethod==="gamepad"?A.inputController.getConfig(A.inputController.selectedDevice[Zt.GAMEPAD]).padType:A.inputMethod}};T(jK,"UI");let Jc=jK;function H9(){const E=this,A=T(S=>S instanceof Wb?S.value:E.gameSpeed===1?S:Math.ceil(S/=E.gameSpeed),"transformValue"),s=this.time.addEvent;this.time.addEvent=function(S){return!(S instanceof Phaser.Time.TimerEvent)&&S.delay&&(S.delay=A(S.delay)),s.apply(this,[S])};const R=this.tweens.add;this.tweens.add=function(S){return S.loopDelay&&(S.loopDelay=A(S.loopDelay)),S instanceof Phaser.Tweens.TweenChain||(S.duration&&(S.duration=A(S.duration)),S instanceof Phaser.Tweens.Tween||(S.delay&&(S.delay=A(S.delay)),S.repeatDelay&&(S.repeatDelay=A(S.repeatDelay)),S.hold&&(S.hold=A(S.hold)))),R.apply(this,[S])};const I=this.tweens.chain;this.tweens.chain=function(S){return S.tweens&&S.tweens.forEach(o=>{o.duration&&(o.duration=A(o.duration)),o.delay&&(o.delay=A(o.delay)),o.repeatDelay&&(o.repeatDelay=A(o.repeatDelay)),o.loopDelay&&(o.loopDelay=A(o.loopDelay)),o.hold&&(o.hold=A(o.hold))}),I.apply(this,[S])};const i=this.tweens.addCounter;this.tweens.addCounter=function(S){return S.duration&&(S.duration=A(S.duration)),S.delay&&(S.delay=A(S.delay)),S.repeatDelay&&(S.repeatDelay=A(S.repeatDelay)),S.loopDelay&&(S.loopDelay=A(S.loopDelay)),S.hold&&(S.hold=A(S.hold)),i.apply(this,[S])};const a=wR.fadeOut;wR.fadeOut=(S,o,l,D)=>a(S,o,A(l),D);const L=wR.fadeIn;wR.fadeIn=(S,o,l,D,M)=>L(S,o,A(l),D,M)}T(H9,"initGameSpeed");const d9=-118,f9=0,Qv=-116,zK=class zK extends Phaser.GameObjects.Container{constructor(A){super(A,d9,Qv)}setup(){this.bg=this.scene.add.image(0,0,"ability_bar_left"),this.bg.setOrigin(0,0),this.add(this.bg),this.abilityBarText=se(this.scene,15,3,"",V.MESSAGE,{fontSize:"72px"}),this.abilityBarText.setOrigin(0,0),this.abilityBarText.setWordWrapWidth(600,!0),this.add(this.abilityBarText),this.setVisible(!1),this.shown=!1}showAbility(A,s=!1){this.abilityBarText.setText(`${U.t("fightUiHandler:abilityFlyInText",{pokemonName:b(A),passive:s?U.t("fightUiHandler:passive"):"",abilityName:s?A.getPassiveAbility().name:A.getAbility().name})}`),!this.shown&&(this.scene.fieldUI.bringToTop(this),this.y=Qv+(this.scene.currentBattle.double?14:0),this.tween=this.scene.tweens.add({targets:this,x:f9,duration:500,ease:"Sine.easeOut",onComplete:T(()=>{this.tween=null,this.resetAutoHideTimer()},"onComplete")}),this.setVisible(!0),this.shown=!0)}hide(){this.shown&&(this.autoHideTimer&&clearInterval(this.autoHideTimer),this.tween&&this.tween.stop(),this.tween=this.scene.tweens.add({targets:this,x:-91,duration:500,ease:"Sine.easeIn",onComplete:T(()=>{this.tween=null,this.setVisible(!1)},"onComplete")}),this.shown=!1)}resetAutoHideTimer(){this.autoHideTimer&&clearInterval(this.autoHideTimer),this.autoHideTimer=setTimeout(()=>{this.hide(),this.autoHideTimer=null},2500)}};T(zK,"AbilityBar");let $c=zK;var Rt=(E=>(E[E.NONE=0]="NONE",E[E.MISTY=1]="MISTY",E[E.ELECTRIC=2]="ELECTRIC",E[E.GRASSY=3]="GRASSY",E[E.PSYCHIC=4]="PSYCHIC",E))(Rt||{});const eF=class eF{constructor(A,s){this.terrainType=A,this.turnsLeft=s||0}lapse(){return this.turnsLeft?!!--this.turnsLeft:!0}getAttackTypeMultiplier(A){switch(this.terrainType){case 2:if(A===n.ELECTRIC)return 1.3;break;case 3:if(A===n.GRASS)return 1.3;break;case 4:if(A===n.PSYCHIC)return 1.3;break}return 1}isMoveTerrainCancelled(A,s,R){switch(this.terrainType){case 4:if(!R.hasAttr(gR)){const I=new Jt(R.priority);return Et(zR,A,null,!1,R,I),I.value>0&&A.getOpponents().some(i=>s.includes(i.getBattlerIndex())&&i.isGrounded())}}return!1}};T(eF,"Terrain");let TC=eF;function B9(E){switch(E){case 1:return U.t("terrain:misty");case 2:return U.t("terrain:electric");case 3:return U.t("terrain:grassy");case 4:return U.t("terrain:psychic")}return""}T(B9,"getTerrainName");function g9(E){switch(E){case 1:return[232,136,200];case 2:return[248,248,120];case 3:return[120,200,80];case 4:return[160,64,160]}return[0,0,0]}T(g9,"getTerrainColor");const K9=`
#ifdef GL_FRAGMENT_PRECISION_HIGH
precision highp float;
#else
precision mediump float;
#endif

uniform sampler2D uMainSampler[%count%];

varying vec2 outTexCoord;
varying float outTexId;
varying float outTintEffect;
varying vec4 outTint;

uniform float time;
uniform int ignoreTimeTint;
uniform int isOutside;
uniform vec3 dayTint;
uniform vec3 duskTint;
uniform vec3 nightTint;
uniform vec3 terrainColor;
uniform float terrainColorRatio;

float blendOverlay(float base, float blend) {
	return base<0.5?(2.0*base*blend):(1.0-2.0*(1.0-base)*(1.0-blend));
}

vec3 blendOverlay(vec3 base, vec3 blend) {
	return vec3(blendOverlay(base.r,blend.r),blendOverlay(base.g,blend.g),blendOverlay(base.b,blend.b));
}

vec3 blendHardLight(vec3 base, vec3 blend) {
	return blendOverlay(blend, base);
}

float hue2rgb(float f1, float f2, float hue) {
	if (hue < 0.0)
		hue += 1.0;
	else if (hue > 1.0)
		hue -= 1.0;
	float res;
	if ((6.0 * hue) < 1.0)
		res = f1 + (f2 - f1) * 6.0 * hue;
	else if ((2.0 * hue) < 1.0)
		res = f2;
	else if ((3.0 * hue) < 2.0)
		res = f1 + (f2 - f1) * ((2.0 / 3.0) - hue) * 6.0;
	else
		res = f1;
	return res;
}

vec3 rgb2hsl(vec3 color) {
	vec3 hsl;
	
	float fmin = min(min(color.r, color.g), color.b);
	float fmax = max(max(color.r, color.g), color.b);
	float delta = fmax - fmin;

	hsl.z = (fmax + fmin) / 2.0;

	if (delta == 0.0) {
		hsl.x = 0.0;
		hsl.y = 0.0;
	} else {
		if (hsl.z < 0.5)
			hsl.y = delta / (fmax + fmin);
		else
			hsl.y = delta / (2.0 - fmax - fmin);
		
		float deltaR = (((fmax - color.r) / 6.0) + (delta / 2.0)) / delta;
		float deltaG = (((fmax - color.g) / 6.0) + (delta / 2.0)) / delta;
		float deltaB = (((fmax - color.b) / 6.0) + (delta / 2.0)) / delta;

		if (color.r == fmax )
			hsl.x = deltaB - deltaG;
		else if (color.g == fmax)
			hsl.x = (1.0 / 3.0) + deltaR - deltaB;
		else if (color.b == fmax)
			hsl.x = (2.0 / 3.0) + deltaG - deltaR;

		if (hsl.x < 0.0)
			hsl.x += 1.0;
		else if (hsl.x > 1.0)
			hsl.x -= 1.0;
	}

	return hsl;
}

vec3 hsl2rgb(vec3 hsl) {
	vec3 rgb;
	
	if (hsl.y == 0.0)
		rgb = vec3(hsl.z);
	else {
		float f2;
		
		if (hsl.z < 0.5)
			f2 = hsl.z * (1.0 + hsl.y);
		else
			f2 = (hsl.z + hsl.y) - (hsl.y * hsl.z);
			
		float f1 = 2.0 * hsl.z - f2;
		
		rgb.r = hue2rgb(f1, f2, hsl.x + (1.0/3.0));
		rgb.g = hue2rgb(f1, f2, hsl.x);
		rgb.b = hue2rgb(f1, f2, hsl.x - (1.0/3.0));
	}
	
	return rgb;
}

vec3 blendHue(vec3 base, vec3 blend) {
	vec3 baseHSL = rgb2hsl(base);
	return hsl2rgb(vec3(rgb2hsl(blend).r, baseHSL.g, baseHSL.b));
}

void main() {
    vec4 texture;

    %forloop%

    vec4 texel = vec4(outTint.bgr * outTint.a, outTint.a);

    //  Multiply texture tint
    vec4 color = texture * texel;

    if (outTintEffect == 1.0) {
        //  Solid color + texture alpha
        color.rgb = mix(texture.rgb, outTint.bgr * outTint.a, texture.a);
    } else if (outTintEffect == 2.0) {
        //  Solid color, no texture
        color = texel;
    }

    /* Apply day/night tint */
    if (color.a > 0.0 && ignoreTimeTint == 0) {
        vec3 dayNightTint;

        if (time < 0.25) {
            dayNightTint = dayTint;
        } else if (isOutside == 0 && time < 0.5) {
            dayNightTint = mix(dayTint, nightTint, (time - 0.25) / 0.25);
        } else if (time < 0.375) {
            dayNightTint = mix(dayTint, duskTint, (time - 0.25) / 0.125);
        } else if (time < 0.5) {
            dayNightTint = mix(duskTint, nightTint, (time - 0.375) / 0.125);
        } else if (time < 0.75) {
            dayNightTint = nightTint;
        } else if (isOutside == 0) {
            dayNightTint = mix(nightTint, dayTint, (time - 0.75) / 0.25);
        } else if (time < 0.875) {
            dayNightTint = mix(nightTint, duskTint, (time - 0.75) / 0.125);
        } else {
            dayNightTint = mix(duskTint, dayTint, (time - 0.875) / 0.125);
        }

        color = vec4(blendHardLight(color.rgb, dayNightTint), color.a);
    }

    if (terrainColorRatio > 0.0 && (1.0 - terrainColorRatio) < outTexCoord.y) {
        if (color.a > 0.0 && (terrainColor.r > 0.0 || terrainColor.g > 0.0 || terrainColor.b > 0.0)) {
            color.rgb = mix(color.rgb, blendHue(color.rgb, terrainColor), 1.0);
        }
    }

    gl_FragColor = color;
}
`,F9=`
precision mediump float;

uniform mat4 uProjectionMatrix;
uniform int uRoundPixels;
uniform vec2 uResolution;

attribute vec2 inPosition;
attribute vec2 inTexCoord;
attribute float inTexId;
attribute float inTintEffect;
attribute vec4 inTint;

varying vec2 outTexCoord;
varying float outTexId;
varying vec2 outPosition;
varying float outTintEffect;
varying vec4 outTint;

void main() {
    gl_Position = uProjectionMatrix * vec4(inPosition, 1.0, 1.0);
    if (uRoundPixels == 1)
    {
        gl_Position.xy = floor(((gl_Position.xy + 1.0) * 0.5 * uResolution) + 0.5) / uResolution * 2.0 - 1.0;
    }
    outTexCoord = inTexCoord;
    outTexId = inTexId;
    outPosition = inPosition;
    outTint = inTint;
    outTintEffect = inTintEffect;
}
`,tF=class tF extends Phaser.Renderer.WebGL.Pipelines.MultiPipeline{constructor(A,s){super(s||{game:A,name:"field-sprite",fragShader:K9,vertShader:F9})}onPreRender(){this.set1f("time",0),this.set1i("ignoreTimeTint",0),this.set1f("terrainColorRatio",0),this.set3fv("terrainColor",[0,0,0])}onBind(A){var S,o;super.onBind();const s=A,R=s.scene,I=s.pipelineData,i=I.ignoreTimeTint,a=I.terrainColorRatio||0,L=(S=R.currentBattle)!=null&&S.waveIndex?(R.currentBattle.waveIndex+R.waveCycleOffset)%40/40:Yb();this.set1f("time",L),this.set1i("ignoreTimeTint",i?1:0),this.set1i("isOutside",R.arena.isOutside()?1:0),this.set3fv("dayTint",R.arena.getDayTint().map(l=>l/255)),this.set3fv("duskTint",R.arena.getDuskTint().map(l=>l/255)),this.set3fv("nightTint",R.arena.getNightTint().map(l=>l/255)),this.set3fv("terrainColor",g9(((o=R.arena.terrain)==null?void 0:o.terrainType)||Rt.NONE).map(l=>l/255)),this.set1f("terrainColorRatio",a)}onBatch(A){A&&this.flush()}};T(tF,"FieldSpritePipeline");let SC=tF;const m9=`
#ifdef GL_FRAGMENT_PRECISION_HIGH
precision highp float;
#else
precision mediump float;
#endif

uniform sampler2D uMainSampler[%count%];

varying vec2 outTexCoord;
varying float outTexId;
varying vec2 outPosition;
varying float outTintEffect;
varying vec4 outTint;

uniform float time;
uniform int ignoreTimeTint;
uniform int isOutside;
uniform vec3 dayTint;
uniform vec3 duskTint;
uniform vec3 nightTint;
uniform float teraTime;
uniform vec3 teraColor;
uniform int hasShadow;
uniform int yCenter;
uniform float fieldScale;
uniform float vCutoff;
uniform vec2 relPosition;
uniform vec2 texFrameUv;
uniform vec2 size;
uniform vec2 texSize;
uniform float yOffset;
uniform float yShadowOffset;
uniform vec4 tone;
uniform ivec4 baseVariantColors[32];
uniform vec4 variantColors[32];
uniform ivec4 spriteColors[32];
uniform ivec4 fusionSpriteColors[32];

const vec3 lumaF = vec3(.299, .587, .114);

float blendOverlay(float base, float blend) {
	return base<0.5?(2.0*base*blend):(1.0-2.0*(1.0-base)*(1.0-blend));
}

vec3 blendOverlay(vec3 base, vec3 blend) {
	return vec3(blendOverlay(base.r,blend.r),blendOverlay(base.g,blend.g),blendOverlay(base.b,blend.b));
}

vec3 blendHardLight(vec3 base, vec3 blend) {
	return blendOverlay(blend, base);
}

float hue2rgb(float f1, float f2, float hue) {
	if (hue < 0.0)
		hue += 1.0;
	else if (hue > 1.0)
		hue -= 1.0;
	float res;
	if ((6.0 * hue) < 1.0)
		res = f1 + (f2 - f1) * 6.0 * hue;
	else if ((2.0 * hue) < 1.0)
		res = f2;
	else if ((3.0 * hue) < 2.0)
		res = f1 + (f2 - f1) * ((2.0 / 3.0) - hue) * 6.0;
	else
		res = f1;
	return res;
}

vec3 rgb2hsl(vec3 color) {
	vec3 hsl;
	
	float fmin = min(min(color.r, color.g), color.b);
	float fmax = max(max(color.r, color.g), color.b);
	float delta = fmax - fmin;

	hsl.z = (fmax + fmin) / 2.0;

	if (delta == 0.0) {
		hsl.x = 0.0;
		hsl.y = 0.0;
	} else {
		if (hsl.z < 0.5)
			hsl.y = delta / (fmax + fmin);
		else
			hsl.y = delta / (2.0 - fmax - fmin);
		
		float deltaR = (((fmax - color.r) / 6.0) + (delta / 2.0)) / delta;
		float deltaG = (((fmax - color.g) / 6.0) + (delta / 2.0)) / delta;
		float deltaB = (((fmax - color.b) / 6.0) + (delta / 2.0)) / delta;

		if (color.r == fmax )
			hsl.x = deltaB - deltaG;
		else if (color.g == fmax)
			hsl.x = (1.0 / 3.0) + deltaR - deltaB;
		else if (color.b == fmax)
			hsl.x = (2.0 / 3.0) + deltaG - deltaR;

		if (hsl.x < 0.0)
			hsl.x += 1.0;
		else if (hsl.x > 1.0)
			hsl.x -= 1.0;
	}

	return hsl;
}

vec3 hsl2rgb(vec3 hsl) {
	vec3 rgb;
	
	if (hsl.y == 0.0)
		rgb = vec3(hsl.z);
	else {
		float f2;
		
		if (hsl.z < 0.5)
			f2 = hsl.z * (1.0 + hsl.y);
		else
			f2 = (hsl.z + hsl.y) - (hsl.y * hsl.z);
			
		float f1 = 2.0 * hsl.z - f2;
		
		rgb.r = hue2rgb(f1, f2, hsl.x + (1.0/3.0));
		rgb.g = hue2rgb(f1, f2, hsl.x);
		rgb.b= hue2rgb(f1, f2, hsl.x - (1.0/3.0));
	}
	
	return rgb;
}

vec3 blendHue(vec3 base, vec3 blend) {
	vec3 baseHSL = rgb2hsl(base);
	return hsl2rgb(vec3(rgb2hsl(blend).r, baseHSL.g, baseHSL.b));
}

vec3 rgb2hsv(vec3 c) {
    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));
    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));

    float d = q.x - min(q.w, q.y);
    float e = 1.0e-10;
    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);
}

vec3 hsv2rgb(vec3 c) {
    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);
}

void main() {
    vec4 texture = texture2D(uMainSampler[0], outTexCoord);

    ivec4 colorInt = ivec4(int(texture.r * 255.0), int(texture.g * 255.0), int(texture.b * 255.0), int(texture.a * 255.0));

    for (int i = 0; i < 32; i++) {
        if (baseVariantColors[i][3] == 0)
            break;
        if (texture.a > 0.0 && colorInt.r == baseVariantColors[i].r && colorInt.g == baseVariantColors[i].g && colorInt.b == baseVariantColors[i].b) {
            texture.rgb = variantColors[i].rgb;
            break;
        }
    }

    for (int i = 0; i < 32; i++) {
        if (spriteColors[i][3] == 0)
            break;
        if (texture.a > 0.0 && colorInt.r == spriteColors[i].r && colorInt.g == spriteColors[i].g && colorInt.b == spriteColors[i].b) {
            vec3 fusionColor = vec3(float(fusionSpriteColors[i].r) / 255.0, float(fusionSpriteColors[i].g) / 255.0, float(fusionSpriteColors[i].b) / 255.0);
            vec3 bg = vec3(float(spriteColors[i].r) / 255.0, float(spriteColors[i].g) / 255.0, float(spriteColors[i].b) / 255.0);
            float gray = (bg.r + bg.g + bg.b) / 3.0;
            bg = vec3(gray, gray, gray);
            vec3 fg = fusionColor;
            texture.rgb = mix(1.0 - 2.0 * (1.0 - bg) * (1.0 - fg), 2.0 * bg * fg, step(bg, vec3(0.5)));
            break;
        }
    }

    vec4 texel = vec4(outTint.bgr * outTint.a, outTint.a);

    //  Multiply texture tint
    vec4 color = texture * texel;

    if (color.a > 0.0 && teraColor.r > 0.0 && teraColor.g > 0.0 && teraColor.b > 0.0) {
        vec2 relUv = vec2((outTexCoord.x - texFrameUv.x) / (size.x / texSize.x), (outTexCoord.y - texFrameUv.y) / (size.y / texSize.y));
        vec2 teraTexCoord = vec2(relUv.x * (size.x / 200.0), relUv.y * (size.y / 120.0));
        vec4 teraCol = texture2D(uMainSampler[1], teraTexCoord);
        float floorValue = 86.0 / 255.0;
        vec3 teraPatternHsv = rgb2hsv(teraCol.rgb);
        teraCol.rgb = hsv2rgb(vec3((teraPatternHsv.b - floorValue) * 4.0 + teraTexCoord.x * fieldScale / 2.0 + teraTexCoord.y * fieldScale / 2.0 + teraTime * 255.0, teraPatternHsv.b, teraPatternHsv.b));

        color.rgb = mix(color.rgb, blendHue(color.rgb, teraColor), 0.625);
        teraCol.rgb = mix(teraCol.rgb, teraColor, 0.5);
        color.rgb = blendOverlay(color.rgb, teraCol.rgb);

        if (teraColor.r < 1.0 || teraColor.g < 1.0 || teraColor.b < 1.0) {
            vec3 teraColHsv = rgb2hsv(teraColor);
            color.rgb = mix(color.rgb, teraColor, (1.0 - teraColHsv.g) / 2.0);
        }
    }

    if (outTintEffect == 1.0) {
        //  Solid color + texture alpha
        color.rgb = mix(texture.rgb, outTint.bgr * outTint.a, texture.a);
    } else if (outTintEffect == 2.0) {
        //  Solid color, no texture
        color = texel;
    }

    /* Apply gray */
    float luma = dot(color.rgb, lumaF);
    color.rgb = mix(color.rgb, vec3(luma), tone.w);

    /* Apply tone */
    color.rgb += tone.rgb * (color.a / 255.0);

    /* Apply day/night tint */
    if (color.a > 0.0 && ignoreTimeTint == 0) {
        vec3 dayNightTint;

        if (time < 0.25) {
            dayNightTint = dayTint;
        } else if (isOutside == 0 && time < 0.5) {
            dayNightTint = mix(dayTint, nightTint, (time - 0.25) / 0.25);
        } else if (time < 0.375) {
            dayNightTint = mix(dayTint, duskTint, (time - 0.25) / 0.125);
        } else if (time < 0.5) {
            dayNightTint = mix(duskTint, nightTint, (time - 0.375) / 0.125);
        } else if (time < 0.75) {
            dayNightTint = nightTint;
        } else if (isOutside == 0) {
            dayNightTint = mix(nightTint, dayTint, (time - 0.75) / 0.25);
        } else if (time < 0.875) {
            dayNightTint = mix(nightTint, duskTint, (time - 0.75) / 0.125);
        } else {
            dayNightTint = mix(duskTint, dayTint, (time - 0.875) / 0.125);
        }

        color.rgb = blendHardLight(color.rgb, dayNightTint);
    }

    if (hasShadow == 1) {
        float width = size.x - (yOffset / 2.0);

        float spriteX = ((floor(outPosition.x / fieldScale) - relPosition.x) / width) + 0.5;
        float spriteY = ((floor(outPosition.y / fieldScale) - relPosition.y - yShadowOffset) / size.y);

        if (yCenter == 1) {
            spriteY += 0.5;
        } else {
            spriteY += 1.0;
        }

        bool yOverflow = outTexCoord.y >= vCutoff;

        if ((spriteY >= 0.9 && (color.a == 0.0 || yOverflow))) {
            float shadowSpriteY = (spriteY - 0.9) * (1.0 / 0.15);
            if (distance(vec2(spriteX, shadowSpriteY), vec2(0.5, 0.5)) < 0.5) {
                color = vec4(vec3(0.0, 0.0, 0.0), 0.5);
            } else if (yOverflow) {
                discard;
            }
        } else if (yOverflow) {
            discard;
        }
    }

    gl_FragColor = color;
}
`,W9=`
precision mediump float;

uniform mat4 uProjectionMatrix;
uniform int uRoundPixels;
uniform vec2 uResolution;

attribute vec2 inPosition;
attribute vec2 inTexCoord;
attribute float inTexId;
attribute float inTintEffect;
attribute vec4 inTint;

varying vec2 outTexCoord;
varying vec2 outtexFrameUv;
varying float outTexId;
varying vec2 outPosition;
varying float outTintEffect;
varying vec4 outTint;

void main()
{
    gl_Position = uProjectionMatrix * vec4(inPosition, 1.0, 1.0);
    if (uRoundPixels == 1)
    {
        gl_Position.xy = floor(((gl_Position.xy + 1.0) * 0.5 * uResolution) + 0.5) / uResolution * 2.0 - 1.0;
    }
    outTexCoord = inTexCoord;
    outTexId = inTexId;
    outPosition = inPosition;
    outTint = inTint;
    outTintEffect = inTintEffect;
}
`,AF=class AF extends SC{constructor(A){super(A,{game:A,name:"sprite",fragShader:m9,vertShader:W9}),this._tone=[0,0,0,0]}onPreRender(){super.onPreRender(),this.set1f("teraTime",0),this.set3fv("teraColor",[0,0,0]),this.set1i("hasShadow",0),this.set1i("yCenter",0),this.set2f("relPosition",0,0),this.set2f("texFrameUv",0,0),this.set2f("size",0,0),this.set2f("texSize",0,0),this.set1f("yOffset",0),this.set1f("yShadowOffset",0),this.set4fv("tone",this._tone)}onBind(A){super.onBind(A);const s=A,R=s.pipelineData,I=R.tone,i=R.teraColor??[0,0,0],a=R.hasShadow,L=R.yShadowOffset,S=R.ignoreFieldPos,o=R.ignoreOverride,l=s.parentContainer instanceof pR||s.parentContainer instanceof is||s.parentContainer instanceof FT,D=l?s.parentContainer.parentContainer:s.parentContainer,M=l?[s.parentContainer.x,s.parentContainer.y]:[s.x,s.y];if(D&&(M[0]+=D.x/D.scale,M[1]+=D.y/D.scale),M[0]+=-(s.width-s.frame.width)/2+s.frame.x+(S?0:s.x-D.x),s.originY===.5&&(M[1]+=s.height/2*((l?s.parentContainer:s).scale-1)+(S?0:s.y-D.y)),this.set1f("teraTime",this.game.getTime()%5e5/5e5),this.set3fv("teraColor",i.map(c=>c/255)),this.set1i("hasShadow",a?1:0),this.set1i("yCenter",s.originY===.5?1:0),this.set1f("fieldScale",(D==null?void 0:D.scale)||1),this.set2f("relPosition",M[0],M[1]),this.set2f("texFrameUv",s.frame.u0,s.frame.v0),this.set2f("size",s.frame.width,s.height),this.set2f("texSize",s.texture.source[0].width,s.texture.source[0].height),this.set1f("yOffset",s.height-s.frame.height*(l?s.parentContainer.scale:s.scale)),this.set1f("yShadowOffset",L??0),this.set4fv("tone",I),this.bindTexture(this.game.textures.get("tera").source[0].glTexture,1),A.scene.fusionPaletteSwaps){const c=o&&R.spriteColorsBase||R.spriteColors||[],G=o&&R.fusionSpriteColorsBase||R.fusionSpriteColors||[],P=[0,0,0,0],_=[],g=[];for(let H=0;H<32;H++)_.splice(_.length,0,...H<c.length?c[H]:P),g.splice(g.length,0,...H<G.length?G[H]:P);this.set4iv("spriteColors",_.flat()),this.set4iv("fusionSpriteColors",g.flat())}}onBatch(A){if(A){const s=A,R=s.pipelineData,I=R.hasOwnProperty("variant")?R.variant:s.parentContainer instanceof pR?s.parentContainer.variant:0;let i;const a=[0,0,0,0],L=[],S=[];if((s.parentContainer instanceof pR?s.parentContainer.shiny:R.shiny)&&(i=ii[s.parentContainer instanceof pR?s.parentContainer.getSprite().texture.key:R.spriteKey])&&i.hasOwnProperty(I)){const o=Object.keys(i[I]);for(let l=0;l<32;l++)if(l<o.length){const D=Array.from(Object.values(Ns(o[l]))),M=Array.from(Object.values(Ns(i[I][o[l]])));L.splice(L.length,0,...D),S.splice(S.length,0,...M.map(c=>c/255))}else L.splice(L.length,0,...a),S.splice(S.length,0,...a)}else for(let o=0;o<32;o++)L.splice(L.length,0,...a),S.splice(S.length,0,...a);this.set4iv("baseVariantColors",L.flat()),this.set4fv("variantColors",S.flat())}super.onBatch(A)}batchQuad(A,s,R,I,i,a,L,S,o,l,D,M,c,G,P,_,g,H,F,p){const v=A;this.set1f("vCutoff",c);const k=v.pipelineData.hasShadow,j=v.pipelineData.yShadowOffset??0;if(k){const q=v.parentContainer instanceof pR||v.parentContainer instanceof is||v.parentContainer instanceof FT,ie=q?v.parentContainer.parentContainer:v.parentContainer,z=ie.scale/6,Oe=(q?v.parentContainer.y:v.y+v.height)*6/z,ae=Math.ceil(v.height*.05+Math.max(j,0))*6/z,Le=(Oe-i)/ie.scale;L=i=Oe+ae;const Ne=(c-D)/(v.frame.height*(q?v.parentContainer.scale:v.scale));c+=(Le+ae/ie.scale)*Ne}return super.batchQuad(A,s,R,I,i,a,L,S,o,l,D,M,c,G,P,_,g,H,F,p)}get tone(){return this._tone}set tone(A){this._tone=A}};T(AF,"SpritePipeline");let qc=AF;const EF=class EF extends Phaser.GameObjects.Container{constructor(A){super(A,A.game.canvas.width/6,-(A.game.canvas.height/6)+15)}setup(){this.bg=this.scene.add.nineslice(0,0,"party_exp_bar",void 0,8,18,21,5,6,4),this.bg.setOrigin(0,0),this.add(this.bg),this.expText=se(this.scene,22,4,"",V.BATTLE_INFO),this.expText.setOrigin(0,0),this.add(this.expText),this.setVisible(!1),this.shown=!1}showPokemonExp(A,s,R,I){return new Promise(i=>{if(this.shown)return i();this.pokemonIcon=this.scene.addPokemonIcon(A,-8,15,0,.5),this.pokemonIcon.setScale(.5),this.add(this.pokemonIcon),R?I>200?this.expText.setText("Lv. UP"):this.expText.setText(`Lv. UP: ${I.toString()}`):this.expText.setText(`+${s.toString()}`),this.bg.width=this.expText.displayWidth+28,this.scene.fieldUI.bringToTop(this),this.tween&&this.tween.stop(),this.tween=this.scene.tweens.add({targets:this,x:this.scene.game.canvas.width/6-(this.bg.width-5),duration:500/Math.pow(2,A.scene.expGainsSpeed),ease:"Sine.easeOut",onComplete:T(()=>{this.tween=null,i()},"onComplete")}),this.setVisible(!0),this.shown=!0})}hide(){return new Promise(A=>{if(!this.shown)return A();this.tween&&this.tween.stop(),this.tween=this.scene.tweens.add({targets:this,x:this.scene.game.canvas.width/6,duration:500,ease:"Sine.easeIn",onComplete:T(()=>{var s;this.tween=null,this.shown=!1,this.setVisible(!1),(s=this.pokemonIcon)==null||s.destroy(),A()},"onComplete")})})}};T(EF,"PartyExpBar");let jc=EF;const sF=class sF extends Phaser.GameObjects.Container{constructor(A,s){super(A,s?A.game.canvas.width/6:0,s?-72:-144),this.player=s}setup(){this.bg=this.scene.add.nineslice(0,0,`pb_tray_overlay_${this.player?"player":"enemy"}`,void 0,104,4,48,8,0,0),this.bg.setOrigin(this.player?1:0,0),this.add(this.bg),this.balls=new Array(6).fill(null).map((A,s)=>this.scene.add.sprite((this.player?-83:76)+this.scene.game.canvas.width/6*(this.player?-1:1)+10*s*(this.player?1:-1),-8,"pb_tray_ball","empty"));for(const A of this.balls)A.setOrigin(0,0),this.add(A);this.setVisible(!1),this.shown=!1}showPbTray(A){return new Promise(s=>{if(this.shown)return s();this.scene.fieldUI.bringToTop(this),this.x+=104*(this.player?1:-1),this.bg.width=104,this.bg.alpha=1,this.balls.forEach((R,I)=>{R.x+=(this.scene.game.canvas.width/6+104)*(this.player?1:-1);let i="ball";I>=A.length?i="empty":A[I].hp?A[I].status&&(i="status"):i="faint",R.setFrame(i)}),this.scene.playSound("se/pb_tray_enter"),this.scene.tweens.add({targets:this,x:`${this.player?"-":"+"}=104`,duration:500,ease:"Sine.easeIn",onComplete:T(()=>{this.balls.forEach((R,I)=>{this.scene.tweens.add({targets:R,x:`${this.player?"-":"+"}=104`,duration:I*100,ease:"Sine.easeIn",onComplete:T(()=>this.scene.playSound(`se/${I<A.length?"pb_tray_ball":"pb_tray_empty"}`),"onComplete")})})},"onComplete")}),this.setVisible(!0),this.shown=!0,this.scene.time.delayedCall(1100,()=>s())})}hide(){return new Promise(A=>{if(!this.shown)return A();this.balls.forEach((s,R)=>{this.scene.tweens.add({targets:s,x:`${this.player?"-":"+"}=${this.scene.game.canvas.width/6}`,duration:250,delay:R*100,ease:"Sine.easeIn"})}),this.scene.tweens.add({targets:this.bg,width:144,alpha:0,duration:500,ease:"Sine.easeIn"}),this.scene.time.delayedCall(850,()=>{this.setVisible(!1),A()}),this.shown=!1})}};T(sF,"PokeballTray");let oC=sF;const RF=class RF extends kA{constructor(A){super(A)}start(){super.start(),this.scene.ui.setModeForceTransition($.MESSAGE).then(()=>this.end())}};T(RF,"EndEvolutionPhase");let kT=RF;const OF=class OF extends kA{constructor(A,s,R,I){super(A),this.pokemon=s,this.evolution=R,this.lastLevel=I}validate(){return!!this.evolution}setMode(){return this.scene.ui.setModeForceTransition($.EVOLUTION_SCENE)}start(){super.start(),this.setMode().then(()=>{if(!this.validate())return this.end();this.scene.fadeOutBgm(void 0,!1);const A=this.scene.ui.getHandler();this.evolutionContainer=A.evolutionContainer,this.evolutionBaseBg=this.scene.add.image(0,0,"default_bg"),this.evolutionBaseBg.setOrigin(0,0),this.evolutionContainer.add(this.evolutionBaseBg),this.evolutionBg=this.scene.add.video(0,0,"evo_bg").stop(),this.evolutionBg.setOrigin(0,0),this.evolutionBg.setScale(.4359673025),this.evolutionBg.setVisible(!1),this.evolutionContainer.add(this.evolutionBg),this.evolutionBgOverlay=this.scene.add.rectangle(0,0,this.scene.game.canvas.width/6,this.scene.game.canvas.height/6,2500134),this.evolutionBgOverlay.setOrigin(0,0),this.evolutionBgOverlay.setAlpha(0),this.evolutionContainer.add(this.evolutionBgOverlay);const s=T(()=>{const R=this.scene.addPokemonSprite(this.pokemon,this.evolutionBaseBg.displayWidth/2,this.evolutionBaseBg.displayHeight/2,"pkmn__sub");return R.setPipeline(this.scene.spritePipeline,{tone:[0,0,0,0],ignoreTimeTint:!0}),R},"getPokemonSprite");this.evolutionContainer.add(this.pokemonSprite=s()),this.evolutionContainer.add(this.pokemonTintSprite=s()),this.evolutionContainer.add(this.pokemonEvoSprite=s()),this.evolutionContainer.add(this.pokemonEvoTintSprite=s()),this.pokemonTintSprite.setAlpha(0),this.pokemonTintSprite.setTintFill(16777215),this.pokemonEvoSprite.setVisible(!1),this.pokemonEvoTintSprite.setVisible(!1),this.pokemonEvoTintSprite.setTintFill(16777215),this.evolutionOverlay=this.scene.add.rectangle(0,-this.scene.game.canvas.height/6,this.scene.game.canvas.width/6,this.scene.game.canvas.height/6-48,16777215),this.evolutionOverlay.setOrigin(0,0),this.evolutionOverlay.setAlpha(0),this.scene.ui.add(this.evolutionOverlay),[this.pokemonSprite,this.pokemonTintSprite,this.pokemonEvoSprite,this.pokemonEvoTintSprite].map(R=>{R.play(this.pokemon.getSpriteKey(!0)),R.setPipeline(this.scene.spritePipeline,{tone:[0,0,0,0],hasShadow:!1,teraColor:DR(this.pokemon.getTeraType())}),R.setPipelineData("ignoreTimeTint",!0),R.setPipelineData("spriteKey",this.pokemon.getSpriteKey()),R.setPipelineData("shiny",this.pokemon.shiny),R.setPipelineData("variant",this.pokemon.variant),["spriteColors","fusionSpriteColors"].map(I=>{var i;(i=this.pokemon.summonData)!=null&&i.speciesForm&&(I+="Base"),R.pipelineData[I]=this.pokemon.getSprite().pipelineData[I]})}),this.doEvolution()})}doEvolution(){const A=this.scene.ui.getHandler(),s=b(this.pokemon);this.scene.ui.showText(U.t("menu:evolving",{pokemonName:s}),null,()=>{this.pokemon.cry(),this.pokemon.getPossibleEvolution(this.evolution).then(R=>{[this.pokemonEvoSprite,this.pokemonEvoTintSprite].map(I=>{I.play(R.getSpriteKey(!0)),I.setPipelineData("ignoreTimeTint",!0),I.setPipelineData("spriteKey",R.getSpriteKey()),I.setPipelineData("shiny",R.shiny),I.setPipelineData("variant",R.variant),["spriteColors","fusionSpriteColors"].map(i=>{var a;(a=R.summonData)!=null&&a.speciesForm&&(i+="Base"),I.pipelineData[i]=R.getSprite().pipelineData[i]})}),this.scene.time.delayedCall(1e3,()=>{const I=this.scene.playSoundWithoutBgm("evolution");this.scene.tweens.add({targets:this.evolutionBgOverlay,alpha:1,delay:500,duration:1500,ease:"Sine.easeOut",onComplete:T(()=>{this.scene.time.delayedCall(1e3,()=>{this.scene.tweens.add({targets:this.evolutionBgOverlay,alpha:0,duration:250}),this.evolutionBg.setVisible(!0),this.evolutionBg.play()}),this.scene.playSound("se/charge"),this.doSpiralUpward(),this.scene.tweens.addCounter({from:0,to:1,duration:2e3,onUpdate:T(i=>{this.pokemonTintSprite.setAlpha(i.getValue())},"onUpdate"),onComplete:T(()=>{this.pokemonSprite.setVisible(!1),this.scene.time.delayedCall(1100,()=>{this.scene.playSound("se/beam"),this.doArcDownward(),this.scene.time.delayedCall(1500,()=>{this.pokemonEvoTintSprite.setScale(.25),this.pokemonEvoTintSprite.setVisible(!0),A.canCancel=!0,this.doCycle(1).then(i=>{if(!i){this.pokemonSprite.setVisible(!0),this.pokemonTintSprite.setScale(1),this.scene.tweens.add({targets:[this.evolutionBg,this.pokemonTintSprite,this.pokemonEvoSprite,this.pokemonEvoTintSprite],alpha:0,duration:250,onComplete:T(()=>{this.evolutionBg.setVisible(!1)},"onComplete")}),wR.fadeOut(this.scene,I,100),this.scene.unshiftPhase(new kT(this.scene)),this.scene.ui.showText(U.t("menu:stoppedEvolving",{pokemonName:s}),null,()=>{this.scene.ui.showText(U.t("menu:pauseEvolutionsQuestion",{pokemonName:s}),null,()=>{const a=T(()=>{this.scene.ui.showText("",0),this.scene.playBgm(),R.destroy(),this.end()},"end");this.scene.ui.setOverlayMode($.CONFIRM,()=>{this.scene.ui.revertMode(),this.pokemon.pauseEvolutions=!0,this.scene.ui.showText(U.t("menu:evolutionsPaused",{pokemonName:s}),null,a,3e3)},()=>{this.scene.ui.revertMode(),this.scene.time.delayedCall(3e3,a)})})},null,!0);return}this.scene.playSound("se/sparkle"),this.pokemonEvoSprite.setVisible(!0),this.doCircleInward(),this.scene.time.delayedCall(900,()=>{A.canCancel=!1,this.pokemon.evolve(this.evolution,this.pokemon.species).then(()=>{const a=this.pokemon.getLevelMoves(this.lastLevel+1,!0);for(const L of a)this.scene.unshiftPhase(new Wn(this.scene,this.scene.getParty().indexOf(this.pokemon),L[1]));this.scene.unshiftPhase(new kT(this.scene)),this.scene.playSound("se/shine"),this.doSpray(),this.scene.tweens.add({targets:this.evolutionOverlay,alpha:1,duration:250,easing:"Sine.easeIn",onComplete:T(()=>{this.evolutionBgOverlay.setAlpha(1),this.evolutionBg.setVisible(!1),this.scene.tweens.add({targets:[this.evolutionOverlay,this.pokemonEvoTintSprite],alpha:0,duration:2e3,delay:150,easing:"Sine.easeIn",onComplete:T(()=>{this.scene.tweens.add({targets:this.evolutionBgOverlay,alpha:0,duration:250,onComplete:T(()=>{wR.fadeOut(this.scene,I,100),this.scene.time.delayedCall(250,()=>{this.pokemon.cry(),this.scene.time.delayedCall(1250,()=>{this.scene.playSoundWithoutBgm("evolution_fanfare"),R.destroy(),this.scene.ui.showText(U.t("menu:evolutionDone",{pokemonName:s,evolvedPokemonName:this.pokemon.name}),null,()=>this.end(),null,!0,Ve(4e3)),this.scene.time.delayedCall(Ve(4250),()=>this.scene.playBgm())})})},"onComplete")})},"onComplete")})},"onComplete")})})})})})})},"onComplete")})},"onComplete")})})})},1e3)}doSpiralUpward(){let A=0;this.scene.tweens.addCounter({repeat:64,duration:zA(1),onRepeat:T(()=>{if(A<64){if(!(A&7))for(let s=0;s<4;s++)this.doSpiralUpwardParticle((A&120)*2+s*64);A++}},"onRepeat")})}doArcDownward(){let A=0;this.scene.tweens.addCounter({repeat:96,duration:zA(1),onRepeat:T(()=>{if(A<96){if(A<6)for(let s=0;s<9;s++)this.doArcDownParticle(s*16);A++}},"onRepeat")})}doCycle(A,s=15){return new Promise(R=>{const I=this.scene.ui.getHandler(),i=A===s;this.scene.tweens.add({targets:this.pokemonTintSprite,scale:.25,ease:"Cubic.easeInOut",duration:500/A,yoyo:!i}),this.scene.tweens.add({targets:this.pokemonEvoTintSprite,scale:1,ease:"Cubic.easeInOut",duration:500/A,yoyo:!i,onComplete:T(()=>{if(I.cancelled)return R(!1);A<s?this.doCycle(A+.5,s).then(a=>R(a)):(this.pokemonTintSprite.setVisible(!1),R(!0))},"onComplete")})})}doCircleInward(){let A=0;this.scene.tweens.addCounter({repeat:48,duration:zA(1),onRepeat:T(()=>{if(A){if(A===32)for(let s=0;s<16;s++)this.doCircleInwardParticle(s*16,8)}else for(let s=0;s<16;s++)this.doCircleInwardParticle(s*16,4);A++},"onRepeat")})}doSpray(){let A=0;this.scene.tweens.addCounter({repeat:48,duration:zA(1),onRepeat:T(()=>{if(A)A<50&&this.doSprayParticle(sA(8));else for(let s=0;s<8;s++)this.doSprayParticle(s);A++},"onRepeat")})}doSpiralUpwardParticle(A){const s=this.evolutionBaseBg.displayWidth/2,R=this.scene.add.image(s,0,"evo_sparkle");this.evolutionContainer.add(R);let I=0,i=48;const a=this.scene.tweens.addCounter({repeat:-1,duration:zA(1),onRepeat:T(()=>{L()},"onRepeat")}),L=T(()=>{!I||R.y>8?(R.setPosition(s,88-I*I/80),R.y+=zO(A,i)/4,R.x+=Gi(A,i),R.setScale(1-I/80),A+=4,I&1&&i--,I++):(R.destroy(),a.remove())},"updateParticle");L()}doArcDownParticle(A){const s=this.evolutionBaseBg.displayWidth/2,R=this.scene.add.image(s,0,"evo_sparkle");R.setScale(.5),this.evolutionContainer.add(R);let I=0,i=8;const a=this.scene.tweens.addCounter({repeat:-1,duration:zA(1),onRepeat:T(()=>{L()},"onRepeat")}),L=T(()=>{!I||R.y<88?(R.setPosition(s,8+I*I/5),R.y+=zO(A,i)/4,R.x+=Gi(A,i),i=8+zO(I*4,40),I++):(R.destroy(),a.remove())},"updateParticle");L()}doCircleInwardParticle(A,s){const R=this.evolutionBaseBg.displayWidth/2,I=this.evolutionBaseBg.displayHeight/2,i=this.scene.add.image(R,I,"evo_sparkle");this.evolutionContainer.add(i);let a=120;const L=this.scene.tweens.addCounter({repeat:-1,duration:zA(1),onRepeat:T(()=>{S()},"onRepeat")}),S=T(()=>{a>8?(i.setPosition(R,I),i.y+=zO(A,a),i.x+=Gi(A,a),a-=s,A+=4):(i.destroy(),L.remove())},"updateParticle");S()}doSprayParticle(A){const s=this.evolutionBaseBg.displayWidth/2,R=this.evolutionBaseBg.displayHeight/2,I=this.scene.add.image(s,R,"evo_sparkle");this.evolutionContainer.add(I);let i=0,a=0;const L=3-sA(8),S=48+sA(64),o=this.scene.tweens.addCounter({repeat:-1,duration:zA(1),onRepeat:T(()=>{l()},"onRepeat")}),l=T(()=>{i&3||a++,A<128?(I.setPosition(s+L*i/3,R+a),I.y+=-zO(A,S),i>108&&I.setScale(1-(i-108)/20),A++,i++):(I.destroy(),o.remove())},"updateParticle");l()}};T(OF,"EvolutionPhase");let ZT=OF;const nF=class nF extends ZT{constructor(A,s,R,I){super(A,s,null,0),this.formChange=R,this.modal=I}validate(){return!!this.formChange}setMode(){return this.modal?this.scene.ui.setOverlayMode($.EVOLUTION_SCENE):super.setMode()}doEvolution(){const A=b(this.pokemon);this.pokemon.getPossibleForm(this.formChange).then(s=>{[this.pokemonEvoSprite,this.pokemonEvoTintSprite].map(R=>{R.play(s.getSpriteKey(!0)),R.setPipelineData("ignoreTimeTint",!0),R.setPipelineData("spriteKey",s.getSpriteKey()),R.setPipelineData("shiny",s.shiny),R.setPipelineData("variant",s.variant),["spriteColors","fusionSpriteColors"].map(I=>{var i;(i=s.summonData)!=null&&i.speciesForm&&(I+="Base"),R.pipelineData[I]=s.getSprite().pipelineData[I]})}),this.scene.time.delayedCall(250,()=>{this.scene.tweens.add({targets:this.evolutionBgOverlay,alpha:1,delay:500,duration:1500,ease:"Sine.easeOut",onComplete:T(()=>{this.scene.time.delayedCall(1e3,()=>{this.scene.tweens.add({targets:this.evolutionBgOverlay,alpha:0,duration:250}),this.evolutionBg.setVisible(!0),this.evolutionBg.play()}),this.scene.playSound("se/charge"),this.doSpiralUpward(),this.scene.tweens.addCounter({from:0,to:1,duration:2e3,onUpdate:T(R=>{this.pokemonTintSprite.setAlpha(R.getValue())},"onUpdate"),onComplete:T(()=>{this.pokemonSprite.setVisible(!1),this.scene.time.delayedCall(1100,()=>{this.scene.playSound("se/beam"),this.doArcDownward(),this.scene.time.delayedCall(1e3,()=>{this.pokemonEvoTintSprite.setScale(.25),this.pokemonEvoTintSprite.setVisible(!0),this.doCycle(1,1).then(R=>{this.scene.playSound("se/sparkle"),this.pokemonEvoSprite.setVisible(!0),this.doCircleInward(),this.scene.time.delayedCall(900,()=>{this.pokemon.changeForm(this.formChange).then(()=>{this.modal||this.scene.unshiftPhase(new kT(this.scene)),this.scene.playSound("se/shine"),this.doSpray(),this.scene.tweens.add({targets:this.evolutionOverlay,alpha:1,duration:250,easing:"Sine.easeIn",onComplete:T(()=>{this.evolutionBgOverlay.setAlpha(1),this.evolutionBg.setVisible(!1),this.scene.tweens.add({targets:[this.evolutionOverlay,this.pokemonEvoTintSprite],alpha:0,duration:2e3,delay:150,easing:"Sine.easeIn",onComplete:T(()=>{this.scene.tweens.add({targets:this.evolutionBgOverlay,alpha:0,duration:250,onComplete:T(()=>{this.scene.time.delayedCall(250,()=>{this.pokemon.cry(),this.scene.time.delayedCall(1250,()=>{let I=!1;this.formChange.formKey.indexOf(Ee.MEGA)>-1?(this.scene.validateAchv(At.MEGA_EVOLVE),I=!0):(this.formChange.formKey.indexOf(Ee.GIGANTAMAX)>-1||this.formChange.formKey.indexOf(Ee.ETERNAMAX)>-1)&&(this.scene.validateAchv(At.GIGANTAMAX),I=!0);const i=I?4e3:1750;this.scene.playSoundWithoutBgm(I?"evolution_fanfare":"minor_fanfare"),s.destroy(),this.scene.ui.showText(w0(this.pokemon,this.formChange,A),null,()=>this.end(),null,!0,Ve(i)),this.scene.time.delayedCall(Ve(i+250),()=>this.scene.playBgm())})})},"onComplete")})},"onComplete")})},"onComplete")})})})})})})},"onComplete")})},"onComplete")})})})}end(){this.pokemon.findAndRemoveTags(A=>A.tagType===Y.AUTOTOMIZED),this.modal?this.scene.ui.revertMode().then(()=>{if(this.scene.ui.getMode()===$.PARTY){const A=this.scene.ui.getHandler();A.clearPartySlots(),A.populatePartySlots()}super.end()}):super.end()}};T(nF,"FormChangePhase");let zc=nF;const IF=class IF{setup(A){this.sprites=new Set,A.tweens.addCounter({duration:Ve(200),from:0,to:1,yoyo:!0,repeat:-1,onRepeat:T(()=>this.onLapse(),"onRepeat")})}onLapse(){Array.from(this.sprites.values()).filter(A=>!A.scene).map(A=>this.sprites.delete(A));for(const A of this.sprites.values()){if(!A.pipelineData.teraColor||!A.pipelineData.teraColor.find(M=>M)||!A.visible||A.parentContainer instanceof pR&&!A.parentContainer.parentContainer)continue;const s=A.parentContainer instanceof pR?A.parentContainer:null,R=(s||A).parentContainer,I=A.texture,[i,a]=[I.source[0].width,I.source[0].height],[L,S]=[sA(i),sA(a)],o=A.width/i,l=A.height/a,D=I.manager.getPixel(L,S,I.key,"__BASE");if(D!=null&&D.alpha){const[M,c]=[-A.originX*A.width,-A.originY*A.height],G=A.scene.addFieldSprite(((s==null?void 0:s.x)||0)+A.x+L*o+M,((s==null?void 0:s.y)||0)+A.y+S*l+c,"tera_sparkle");G.pipelineData.ignoreTimeTint=A.pipelineData.ignoreTimeTint,G.setName("sprite-tera-sparkle"),G.play("tera_sparkle"),R.add(G),A.scene.time.delayedCall(Ve(Math.floor(1e3/12*13)),()=>G.destroy())}}}add(A){Array.isArray(A)||(A=[A]);for(const s of A)this.sprites.has(s)||this.sprites.add(s)}remove(A){Array.isArray(A)||(A=[A]);for(const s of A)this.sprites.delete(s)}removeAll(){for(const A of this.sprites.values())this.sprites.delete(A)}};T(IF,"PokemonSpriteSparkleHandler");let eG=IF;const iF=class iF extends Phaser.GameObjects.Container{constructor(A){super(A,A.game.canvas.width/6+32,-42)}setup(){[this.sprite,this.transitionSprite]=new Array(2).fill(null).map(()=>{const A=this.scene.add.sprite(0,0,"","");return A.setOrigin(.5,1),this.add(A),A}),this.transitionSprite.setVisible(!1),this.setVisible(!1),this.shown=!1}showCharacter(A,s){return new Promise(R=>{if(A.startsWith("c_")||(A=`c_${A}`),this.shown){if(A===this.key&&s===this.variant)return R();if(A!==this.key)return this.hide().then(()=>this.showCharacter(A,s));this.setVariant(s).then(()=>R());return}this.sprite.setTexture(A,s),this.scene.fieldUI.bringToTop(this),this.scene.tweens.add({targets:this,x:this.scene.game.canvas.width/6-102,duration:750,ease:"Cubic.easeOut",onComplete:T(()=>{R()},"onComplete")}),this.setVisible(this.scene.textures.get(A).key!==pb),this.shown=!0,this.key=A,this.variant=s})}setVariant(A){return new Promise(s=>{this.scene.fieldUI.bringToTop(this),this.transitionSprite.setTexture(this.key,A),this.transitionSprite.setAlpha(0),this.transitionSprite.setVisible(!0),this.scene.tweens.add({targets:this.transitionSprite,alpha:1,duration:250,ease:"Sine.easeIn",onComplete:T(()=>{this.sprite.setTexture(this.key,A),this.transitionSprite.setVisible(!1),s()},"onComplete")}),this.variant=A})}hide(){return new Promise(A=>{if(!this.shown)return A();this.scene.tweens.add({targets:this,x:this.scene.game.canvas.width/6+32,duration:750,ease:"Cubic.easeIn",onComplete:T(()=>{this.shown||this.setVisible(!1),A()},"onComplete")}),this.shown=!1})}};T(iF,"CharSprite");let tG=iF;const aF=class aF{constructor(){this.damageNumbers=new Map}add(A,s,R=Pt.EFFECTIVE,I=!1){const i=A.scene;if(!(i!=null&&i.damageNumbersMode))return;const a=A.getBattlerIndex(),L=A.getSpriteScale()/6,S=se(i,A.x,-(i.game.canvas.height/6)+A.y-A.getSprite().height/2,ko(s,!0),V.SUMMARY);S.setName("text-damage-number"),S.setOrigin(.5,1),S.setScale(L);let[o,l]=[null,null];switch(R){case Pt.SUPER_EFFECTIVE:[o,l]=["#f8d030","#b8a038"];break;case Pt.NOT_VERY_EFFECTIVE:[o,l]=["#f08030","#c03028"];break;case Pt.ONE_HIT_KO:[o,l]=["#a040a0","#483850"];break;case Pt.HEAL:[o,l]=["#78c850","#588040"];break;default:[o,l]=["#ffffff","#636363"];break}o&&S.setColor(o),l&&(I?(S.setShadowOffset(0,0),S.setStroke(l,12)):S.setShadowColor(l)),i.fieldUI.add(S),this.damageNumbers.has(a)||this.damageNumbers.set(a,[]);const D=this.damageNumbers.get(a).length*-10;if(D&&(S.y+=D),this.damageNumbers.get(a).push(S),i.damageNumbersMode===1){i.tweens.add({targets:S,duration:Ve(750),alpha:1,y:"-=32"}),i.tweens.add({delay:375,targets:S,duration:Ve(625),alpha:0,ease:"Sine.easeIn",onComplete:T(()=>{this.damageNumbers.get(a).splice(this.damageNumbers.get(a).indexOf(S),1),S.destroy(!0)},"onComplete")});return}S.setAlpha(0),i.tweens.chain({targets:S,tweens:[{duration:Ve(250),alpha:1,scaleX:.75*L,scaleY:1.25*L,y:"-=16",ease:"Cubic.easeOut"},{duration:Ve(175),alpha:1,scaleX:.875*L,scaleY:1.125*L,y:"+=16",ease:"Cubic.easeIn"},{duration:Ve(100),scaleX:1.25*L,scaleY:.75*L,ease:"Cubic.easeOut"},{duration:Ve(175),scaleX:.875*L,scaleY:1.125*L,y:"-=8",ease:"Cubic.easeOut"},{duration:Ve(50),scaleX:.925*L,scaleY:1.075*L,y:"+=8",ease:"Cubic.easeIn"},{duration:Ve(100),scaleX:1.125*L,scaleY:.875*L,ease:"Cubic.easeOut"},{duration:Ve(175),scaleX:.925*L,scaleY:1.075*L,y:"-=4",ease:"Cubic.easeOut"},{duration:Ve(50),scaleX:.975*L,scaleY:1.025*L,y:"+=4",ease:"Cubic.easeIn"},{duration:Ve(100),scaleX:1.075*L,scaleY:.925*L,ease:"Cubic.easeOut"},{duration:Ve(25),scaleX:L,scaleY:L,ease:"Cubic.easeOut"},{delay:Ve(500),alpha:0,onComplete:T(()=>{this.damageNumbers.get(a).splice(this.damageNumbers.get(a).indexOf(S),1),S.destroy(!0)},"onComplete")}]})}};T(aF,"DamageNumberHandler");let AG=aF;const LF=class LF extends Phaser.GameObjects.Container{constructor(A){super(A,A.game.canvas.width/6,-(A.game.canvas.height/6)+15)}setup(){this.bg=this.scene.add.nineslice(0,0,"party_exp_bar",void 0,8,18,21,5,6,4),this.bg.setOrigin(0,0),this.add(this.bg),this.candyIcon=this.scene.add.sprite(14,0,"items","candy"),this.candyIcon.setOrigin(.5,0),this.candyIcon.setScale(.5),this.add(this.candyIcon),this.candyOverlayIcon=this.scene.add.sprite(14,0,"items","candy_overlay"),this.candyOverlayIcon.setOrigin(.5,0),this.candyOverlayIcon.setScale(.5),this.add(this.candyOverlayIcon),this.countText=se(this.scene,22,4,"",V.BATTLE_INFO),this.countText.setOrigin(0,0),this.add(this.countText),this.setVisible(!1),this.shown=!1}showStarterSpeciesCandy(A,s){return new Promise(R=>{if(this.shown)return this.speciesId===A?R():this.hide().then(()=>this.showStarterSpeciesCandy(A,s)).then(()=>R());const I=js[A];this.candyIcon.setTint(ps(Ns(I[0]))),this.candyOverlayIcon.setTint(ps(Ns(I[1]))),this.countText.setText(`${this.scene.gameData.starterData[A].candyCount+s} (+${s.toString()})`),this.bg.width=this.countText.displayWidth+28,this.scene.fieldUI.bringToTop(this),this.tween&&this.tween.stop(),this.scene.playSound("se/shing"),this.tween=this.scene.tweens.add({targets:this,x:this.scene.game.canvas.width/6-(this.bg.width-5),duration:500,ease:"Sine.easeOut",onComplete:T(()=>{this.tween=null,this.resetAutoHideTimer(),R()},"onComplete")}),this.setVisible(!0),this.shown=!0})}hide(){return new Promise(A=>{if(!this.shown)return A();this.autoHideTimer&&clearInterval(this.autoHideTimer),this.tween&&this.tween.stop(),this.tween=this.scene.tweens.add({targets:this,x:this.scene.game.canvas.width/6,duration:500,ease:"Sine.easeIn",onComplete:T(()=>{this.tween=null,this.shown=!1,this.setVisible(!1),A()},"onComplete")})})}resetAutoHideTimer(){this.autoHideTimer&&clearInterval(this.autoHideTimer),this.autoHideTimer=setTimeout(()=>{this.hide(),this.autoHideTimer=null},2500)}};T(LF,"CandyBar");let EG=LF;const Y9={padID:"Generic",padType:"xbox",deviceMapping:{RC_S:0,RC_E:1,RC_W:2,RC_N:3,START:9,SELECT:8,LB:4,RB:5,LT:6,RT:7,LS:10,RS:11,LC_N:12,LC_S:13,LC_W:14,LC_E:15},icons:{RC_S:"XB_Letter_A_OL.png",RC_E:"XB_Letter_B_OL.png",RC_W:"XB_Letter_X_OL.png",RC_N:"XB_Letter_Y_OL.png",START:"START.png",SELECT:"SELECT.png",LB:"Bumper_L.png",RB:"Bumper_R.png",LT:"Trigger_L.png",RT:"Trigger_R.png",LS:"LS.png",RS:"RS.png",LC_N:"UP.png",LC_S:"DOWN.png",LC_W:"LEFT.png",LC_E:"RIGHT.png"},settings:{[Ue.Button_Up]:y.UP,[Ue.Button_Down]:y.DOWN,[Ue.Button_Left]:y.LEFT,[Ue.Button_Right]:y.RIGHT,[Ue.Button_Action]:y.ACTION,[Ue.Button_Cancel]:y.CANCEL,[Ue.Button_Cycle_Nature]:y.CYCLE_NATURE,[Ue.Button_Cycle_Variant]:y.V,[Ue.Button_Menu]:y.MENU,[Ue.Button_Stats]:y.STATS,[Ue.Button_Cycle_Form]:y.CYCLE_FORM,[Ue.Button_Cycle_Shiny]:y.CYCLE_SHINY,[Ue.Button_Cycle_Gender]:y.CYCLE_GENDER,[Ue.Button_Cycle_Ability]:y.CYCLE_ABILITY,[Ue.Button_Speed_Up]:y.SPEED_UP,[Ue.Button_Slow_Down]:y.SLOW_DOWN},default:{LC_N:Ue.Button_Up,LC_S:Ue.Button_Down,LC_W:Ue.Button_Left,LC_E:Ue.Button_Right,RC_S:Ue.Button_Action,RC_E:Ue.Button_Cancel,RC_W:Ue.Button_Cycle_Nature,RC_N:Ue.Button_Cycle_Variant,START:Ue.Button_Menu,SELECT:Ue.Button_Stats,LB:Ue.Button_Cycle_Form,RB:Ue.Button_Cycle_Shiny,LT:Ue.Button_Cycle_Gender,RT:Ue.Button_Cycle_Ability,LS:Ue.Button_Speed_Up,RS:Ue.Button_Slow_Down},blacklist:["LC_N","LC_S","LC_W","LC_E"]},p9={padID:"Pro Controller",padType:"xbox",deviceMapping:{RC_S:1,RC_E:0,RC_W:3,RC_N:2,START:9,SELECT:8,LB:4,RB:5,LT:6,RT:7,LS:10,RS:11,LC_N:12,LC_S:13,LC_W:14,LC_E:15,MENU:16},icons:{RC_S:"XB_Letter_B_OL.png",RC_E:"XB_Letter_A_OL.png",RC_W:"XB_Letter_Y_OL.png",RC_N:"XB_Letter_X_OL.png",START:"START.png",SELECT:"SELECT.png",LB:"Bumper_L.png",RB:"Bumper_R.png",LT:"Trigger_L.png",RT:"Trigger_R.png",LS:"LS.png",RS:"RS.png",LC_N:"UP.png",LC_S:"DOWN.png",LC_W:"LEFT.png",LC_E:"RIGHT.png"},settings:{[Ue.Button_Up]:y.UP,[Ue.Button_Down]:y.DOWN,[Ue.Button_Left]:y.LEFT,[Ue.Button_Right]:y.RIGHT,[Ue.Button_Action]:y.ACTION,[Ue.Button_Cancel]:y.CANCEL,[Ue.Button_Cycle_Nature]:y.CYCLE_NATURE,[Ue.Button_Cycle_Variant]:y.V,[Ue.Button_Menu]:y.MENU,[Ue.Button_Stats]:y.STATS,[Ue.Button_Cycle_Form]:y.CYCLE_FORM,[Ue.Button_Cycle_Shiny]:y.CYCLE_SHINY,[Ue.Button_Cycle_Gender]:y.CYCLE_GENDER,[Ue.Button_Cycle_Ability]:y.CYCLE_ABILITY,[Ue.Button_Speed_Up]:y.SPEED_UP,[Ue.Button_Slow_Down]:y.SLOW_DOWN},default:{LC_N:Ue.Button_Up,LC_S:Ue.Button_Down,LC_W:Ue.Button_Left,LC_E:Ue.Button_Right,RC_S:Ue.Button_Action,RC_E:Ue.Button_Cancel,RC_W:Ue.Button_Cycle_Nature,RC_N:Ue.Button_Cycle_Variant,START:Ue.Button_Menu,SELECT:Ue.Button_Stats,LB:Ue.Button_Cycle_Form,RB:Ue.Button_Cycle_Shiny,LT:Ue.Button_Cycle_Gender,RT:Ue.Button_Cycle_Ability,LS:Ue.Button_Speed_Up,RS:Ue.Button_Slow_Down}},y9="touchControlPositionsLandscape",w9="touchControlPositionsPortrait",rF=class rF{constructor(A){this.draggingElement=null,this.configurationEventListeners={touchstart:[],touchmove:[],touchend:[]},this.isLandscapeMode=this.getScreenSize().width>this.getScreenSize().height,this.isLeft=s=>{var R;return(R=document.querySelector("#touchControls .left"))==null?void 0:R.contains(s)},this.startDrag=s=>{this.draggingElement=s},this.drag=s=>{if(!this.draggingElement)return;const R=this.draggingElement.getBoundingClientRect(),I=this.isLeft(this.draggingElement)?s.clientX-R.width/2:window.innerWidth-s.clientX-R.width/2,i=window.innerHeight-s.clientY-R.height/2;this.setPosition(this.draggingElement,I,i)},this.stopDrag=()=>{this.draggingElement=null},this.touchControls=A,this.inConfigurationMode=!1,this.setPositions(this.getSavedPositionsOfCurrentOrientation()??[]),window.addEventListener("resize",s=>{const R=this.getScreenSize();R.width>R.height!==this.isLandscapeMode&&this.changeOrientation(R.width>R.height)})}async changeOrientation(A){if(this.isLandscapeMode=A,this.inConfigurationMode){const R=document.querySelector("#touchControls #orientation");R&&(R.textContent=this.isLandscapeMode?"Landscape":"Portrait")}const s=this.getSavedPositionsOfCurrentOrientation()??[];this.setPositions(s)}getScreenSize(){return{width:window.screen.width,height:window.screen.height}}createToolbarElement(){const A=document.createElement("div");return A.id="configToolbar",A.innerHTML=`
      <div class="column">
        <div class="button-row">
          <div id="resetButton" class="button">Reset</div>
          <div id="saveButton" class="button">Save & close</div>
          <div id="cancelButton" class="button">Cancel</div>
        </div>
        <div class="info-row">
          <div class="orientation-label"> 
            Orientation: <span id="orientation">${this.isLandscapeMode?"Landscape":"Portrait"}</span>
          </div>
        </div>
      </div>
    `,A}createToolbar(){var i;(i=document.querySelector("#touchControls"))==null||i.prepend(this.createToolbarElement());const A=this.getConfigToolbarRefs();if(!A)return;const{saveButton:s,resetButton:R,cancelButton:I}=A;s.addEventListener("click",()=>{this.saveCurrentPositions(),this.disableConfigurationMode()}),R.addEventListener("click",()=>{this.resetPositions()}),I.addEventListener("click",()=>{const a=this.getSavedPositionsOfCurrentOrientation();this.setPositions(a),this.disableConfigurationMode()})}getConfigToolbarRefs(){const A=document.querySelector("#touchControls #configToolbar");if(A)return{toolbar:A,saveButton:A.querySelector("#saveButton"),resetButton:A.querySelector("#resetButton"),cancelButton:A.querySelector("#cancelButton")}}getModifiedCurrentPositions(){return this.getControlGroupElements().filter(A=>A.style.right||A.style.left).map(A=>({id:A.id,x:parseFloat(this.isLeft(A)?A.style.left:A.style.right),y:parseFloat(A.style.bottom)}))}getLocalStorageKey(){return this.isLandscapeMode?y9:w9}getSavedPositionsOfCurrentOrientation(){const A=localStorage.getItem(this.getLocalStorageKey());return A?JSON.parse(A):[]}saveCurrentPositions(){const A=this.getModifiedCurrentPositions();localStorage.setItem(this.getLocalStorageKey(),JSON.stringify(A))}setPositions(A){return this.resetPositions(),A.forEach(s=>{const R=document.querySelector(`#${s.id}`);this.setPosition(R,s.x,s.y)})}setPosition(A,s,R){const I=A.getBoundingClientRect(),i=T((S,o,l)=>Math.min(Math.max(S,o),l),"checkBound"),{height:a,width:L}=this.getScreenSize();s=i(s,0,L-I.width),R=i(R,0,a-I.height),this.isLeft(A)?A.style.left=`${s}px`:A.style.right=`${s}px`,A.style.bottom=`${R}px`}resetPositions(){this.getControlGroupElements().forEach(A=>{A.style.removeProperty("left"),A.style.removeProperty("right"),A.style.removeProperty("bottom")})}getControlGroupElements(){return[...document.querySelectorAll("#touchControls .control-group")]}createConfigurationEventListeners(A){return{touchstart:A.map(s=>{const R=T(()=>this.startDrag(s),"startDrag");return s.addEventListener("touchstart",R,{passive:!0}),R}),touchmove:A.map(()=>{const s=T(R=>this.drag(R.touches[0]),"drag");return window.addEventListener("touchmove",s,{passive:!0}),s}),touchend:A.map(()=>{const s=T(()=>this.stopDrag(),"stopDrag");return window.addEventListener("touchend",s,{passive:!0}),s})}}createOverlay(A,s){var i;const R=new Phaser.GameObjects.Container(s,0,0),I=new Phaser.GameObjects.Rectangle(s,0,0,s.game.canvas.width,s.game.canvas.height,0,.5);I.setInteractive(),R.add(I),A.add(R),this.overlay=R,(i=document.querySelector("#touchControls"))==null||i.classList.add("config-mode")}enableConfigurationMode(A,s){this.inConfigurationMode||(this.inConfigurationMode=!0,this.touchControls.disable(),this.createOverlay(A,s),this.createToolbar(),setTimeout(()=>{this.configurationEventListeners=this.createConfigurationEventListeners(this.getControlGroupElements())},500))}disableConfigurationMode(){var i,a;this.inConfigurationMode=!1,this.draggingElement=null;const{touchstart:A,touchmove:s,touchend:R}=this.configurationEventListeners;this.getControlGroupElements().forEach((L,S)=>L.removeEventListener("touchstart",A[S])),s.forEach(L=>window.removeEventListener("touchmove",L)),R.forEach(L=>window.removeEventListener("touchend",L));const I=document.querySelector("#touchControls #configToolbar");I==null||I.remove(),(i=this.overlay)==null||i.destroy(),(a=document.querySelector("#touchControls"))==null||a.classList.remove("config-mode"),this.touchControls.enable()}};T(rF,"MoveTouchControlsHandler");let sG=rF;const Jv=250,NF=class NF{constructor(A){this.gamepads=new Array,this.buttonLock=new Array,this.interactions=new Map,this.configs=new Map,this.gamepadSupport=!0,this.disconnectedGamepads=new Array,this.lastSource="keyboard",this.inputInterval=new Array,this.scene=A,this.selectedDevice={[Zt.GAMEPAD]:null,[Zt.KEYBOARD]:"default"};for(const s of IE(y))this.interactions[s]={pressTime:!1,isPressed:!1,source:null};delete this.interactions[y.MENU],delete this.interactions[y.STATS],this.init()}init(){var A,s,R,I,i,a,L,S;if(this.events=this.scene.game.events,this.scene.game.events.on(vA.Core.Events.BLUR,()=>{this.loseFocus()}),typeof this.scene.input.gamepad<"u"){if((A=this.scene.input.gamepad)==null||A.on("connected",function(o){o&&(this.refreshGamepads(),this.setupGamepad(o),this.onReconnect(o))},this),(s=this.scene.input.gamepad)==null||s.on("disconnected",function(o){this.onDisconnect(o)},this),(R=this.scene.input.gamepad)==null||R.refreshPads(),(I=this.scene.input.gamepad)!=null&&I.total){this.refreshGamepads();for(const o of this.gamepads)this.scene.input.gamepad.emit("connected",o)}(i=this.scene.input.gamepad)==null||i.on("down",this.gamepadButtonDown,this),(a=this.scene.input.gamepad)==null||a.on("up",this.gamepadButtonUp,this),(L=this.scene.input.keyboard)==null||L.on("keydown",this.keyboardKeyDown,this),(S=this.scene.input.keyboard)==null||S.on("keyup",this.keyboardKeyUp,this)}this.touchControls=new yb(this.scene),this.moveTouchControlsHandler=new sG(this.touchControls)}loseFocus(){this.deactivatePressedKey(),this.touchControls.deactivatePressedKey()}setGamepadSupport(A){A?this.gamepadSupport=!0:(this.gamepadSupport=!1,this.deactivatePressedKey())}setChosenGamepad(A){this.deactivatePressedKey(),this.initChosenGamepad(A)}setChosenKeyboardLayout(A){this.deactivatePressedKey(),this.initChosenLayoutKeyboard(A)}getGamepadsName(){return this.gamepads.filter(A=>!this.disconnectedGamepads.includes(A.id)).map(A=>A.id)}initChosenGamepad(A){var R;A&&(this.selectedDevice[Zt.GAMEPAD]=A.toLowerCase());const s=(R=this.scene.ui)==null?void 0:R.handlers[$.SETTINGS_GAMEPAD];s&&s.updateChosenGamepadDisplay()}initChosenLayoutKeyboard(A){var R;A&&(this.selectedDevice[Zt.KEYBOARD]=A.toLowerCase());const s=(R=this.scene.ui)==null?void 0:R.handlers[$.SETTINGS_KEYBOARD];s&&s.updateChosenKeyboardDisplay()}onDisconnect(A){this.disconnectedGamepads.push(A.id)}onReconnect(A){this.disconnectedGamepads=this.disconnectedGamepads.filter(s=>s!==A.id)}setupGamepad(A){var I,i,a;const s=this.getGamepadsName();for(const L of s){const S=L.toLowerCase();this.selectedDevice[Zt.GAMEPAD]||this.setChosenGamepad(S);const o=fV(this.getConfig(S));o.custom=((I=this.configs[S])==null?void 0:I.custom)||{...o.default},this.configs[S]=o,(i=this.scene.gameData)==null||i.saveMappingConfigs(S,this.configs[S])}this.lastSource="gamepad";const R=(a=this.scene.ui)==null?void 0:a.handlers[$.SETTINGS_GAMEPAD];R&&R.updateChosenGamepadDisplay()}setupKeyboard(){var A,s;for(const R of["default"]){const I=fV(this.getConfigKeyboard(R));I.custom=((A=this.configs[R])==null?void 0:A.custom)||{...I.default},this.configs[R]=I,(s=this.scene.gameData)==null||s.saveMappingConfigs(this.selectedDevice[Zt.KEYBOARD],this.configs[R])}this.initChosenLayoutKeyboard(this.selectedDevice[Zt.KEYBOARD])}refreshGamepads(){var A;this.gamepads=((A=this.scene.input.gamepad)==null?void 0:A.gamepads.filter(function(s){return s!==null}))??[];for(const[s,R]of this.gamepads.entries())R.index=s}ensureKeyboardIsInit(){var A;(A=this.getActiveConfig(Zt.KEYBOARD))!=null&&A.padID||this.setupKeyboard()}keyboardKeyDown(A){this.lastSource="keyboard",this.ensureKeyboardIsInit();const s=mo(this.getActiveConfig(Zt.KEYBOARD),A.keyCode);if(s!==void 0){if(this.buttonLock.includes(s))return;this.events.emit("input_down",{controller_type:"keyboard",button:s}),clearInterval(this.inputInterval[s]),this.inputInterval[s]=setInterval(()=>{this.events.emit("input_down",{controller_type:"keyboard",button:s})},Jv),this.buttonLock.push(s)}}keyboardKeyUp(A){this.lastSource="keyboard";const s=mo(this.getActiveConfig(Zt.KEYBOARD),A.keyCode);if(s!==void 0){this.events.emit("input_up",{controller_type:"keyboard",button:s});const R=this.buttonLock.indexOf(s);this.buttonLock.splice(R,1),clearInterval(this.inputInterval[s])}}gamepadButtonDown(A,s,R){var a;if((a=this.configs[this.selectedDevice[Zt.KEYBOARD]])!=null&&a.padID||this.setupKeyboard(),!A||(this.lastSource="gamepad",(!this.selectedDevice[Zt.GAMEPAD]||this.scene.ui.getMode()!==$.GAMEPAD_BINDING&&this.selectedDevice[Zt.GAMEPAD]!==A.id.toLowerCase())&&this.setChosenGamepad(A.id),!this.gamepadSupport||A.id.toLowerCase()!==this.selectedDevice[Zt.GAMEPAD].toLowerCase()))return;const I=this.getActiveConfig(Zt.GAMEPAD),i=I&&mo(I,s.index);if(i!==void 0){if(this.buttonLock.includes(i))return;this.events.emit("input_down",{controller_type:"gamepad",button:i}),clearInterval(this.inputInterval[i]),this.inputInterval[i]=setInterval(()=>{if(!this.buttonLock.includes(i)){clearInterval(this.inputInterval[i]);return}this.events.emit("input_down",{controller_type:"gamepad",button:i})},Jv),this.buttonLock.push(i)}}gamepadButtonUp(A,s,R){if(!A||(this.lastSource="gamepad",!this.gamepadSupport||A.id.toLowerCase()!==this.selectedDevice[Zt.GAMEPAD]))return;const I=mo(this.getActiveConfig(Zt.GAMEPAD),s.index);if(I!==void 0){this.events.emit("input_up",{controller_type:"gamepad",button:I});const i=this.buttonLock.indexOf(I);this.buttonLock.splice(i,1),clearInterval(this.inputInterval[I])}}getConfig(A){return A=A.toLowerCase(),A.includes("081f")&&A.includes("e401")?b6:A.includes("xbox")&&A.includes("360")?v6:A.includes("054c")?x6:A.includes("057e")&&A.includes("2009")?p9:Y9}getConfigKeyboard(A){return pc}deactivatePressedKey(){for(const A of Object.keys(this.inputInterval))clearInterval(this.inputInterval[A]);this.buttonLock=[]}getActiveConfig(A){var s;return(s=this.configs[this.selectedDevice[A]])!=null&&s.padID?this.configs[this.selectedDevice[A]]:null}getIconForLatestInputRecorded(A){return this.lastSource==="keyboard"&&this.ensureKeyboardIsInit(),a9(this.configs,this.lastSource,this.selectedDevice,A)}getLastSourceDevice(){return this.lastSource==="gamepad"?Zt.GAMEPAD:Zt.KEYBOARD}getLastSourceConfig(){const A=this.getLastSourceDevice();return A===Zt.KEYBOARD&&this.ensureKeyboardIsInit(),this.getActiveConfig(A)}getLastSourceType(){const A=this.getLastSourceConfig();return A==null?void 0:A.padType}injectConfig(A,s){this.configs[A]||(this.configs[A]={}),this.configs[A].custom=s.custom}resetConfigs(){var A;this.configs=new Map,(A=this.getGamepadsName())!=null&&A.length&&this.setupGamepad(this.selectedDevice[Zt.GAMEPAD]),this.setupKeyboard()}assignBinding(A,s,R){return this.deactivatePressedKey(),A.padType==="keyboard"?L9(A,s,R):r9(A,s,R)}};T(NF,"InputsController");let RG=NF;const TF=class TF{constructor(A,s){this.scene=A,this.inputsController=s,this.init()}init(){this.events=this.inputsController.events,this.listenInputs()}detectInputMethod(A){A.controller_type==="keyboard"?A.hasOwnProperty("isTouch")&&A.isTouch?this.scene.inputMethod="touch":this.scene.inputMethod="keyboard":A.controller_type==="gamepad"&&(this.scene.inputMethod="gamepad")}listenInputs(){this.events.on("input_down",A=>{this.detectInputMethod(A);const s=this.getActionsKeyDown();s.hasOwnProperty(A.button)&&s[A.button]()},this),this.events.on("input_up",A=>{const s=this.getActionsKeyUp();s.hasOwnProperty(A.button)&&s[A.button]()},this)}doVibration(A,s){A&&this.scene.enableVibration&&typeof navigator.vibrate<"u"&&navigator.vibrate(s)}getActionsKeyDown(){return{[y.UP]:()=>this.buttonDirection(y.UP),[y.DOWN]:()=>this.buttonDirection(y.DOWN),[y.LEFT]:()=>this.buttonDirection(y.LEFT),[y.RIGHT]:()=>this.buttonDirection(y.RIGHT),[y.SUBMIT]:()=>this.buttonTouch(),[y.ACTION]:()=>this.buttonAb(y.ACTION),[y.CANCEL]:()=>this.buttonAb(y.CANCEL),[y.MENU]:()=>this.buttonMenu(),[y.STATS]:()=>this.buttonGoToFilter(y.STATS),[y.CYCLE_SHINY]:()=>this.buttonCycleOption(y.CYCLE_SHINY),[y.CYCLE_FORM]:()=>this.buttonCycleOption(y.CYCLE_FORM),[y.CYCLE_GENDER]:()=>this.buttonCycleOption(y.CYCLE_GENDER),[y.CYCLE_ABILITY]:()=>this.buttonCycleOption(y.CYCLE_ABILITY),[y.CYCLE_NATURE]:()=>this.buttonCycleOption(y.CYCLE_NATURE),[y.V]:()=>this.buttonCycleOption(y.V),[y.SPEED_UP]:()=>this.buttonSpeedChange(),[y.SLOW_DOWN]:()=>this.buttonSpeedChange(!1)}}getActionsKeyUp(){return{[y.UP]:()=>{},[y.DOWN]:()=>{},[y.LEFT]:()=>{},[y.RIGHT]:()=>{},[y.SUBMIT]:()=>{},[y.ACTION]:()=>{},[y.CANCEL]:()=>{},[y.MENU]:()=>{},[y.STATS]:()=>this.buttonStats(!1),[y.CYCLE_SHINY]:()=>{},[y.CYCLE_FORM]:()=>{},[y.CYCLE_GENDER]:()=>{},[y.CYCLE_ABILITY]:()=>{},[y.CYCLE_NATURE]:()=>{},[y.V]:()=>this.buttonInfo(!1),[y.SPEED_UP]:()=>{},[y.SLOW_DOWN]:()=>{}}}buttonDirection(A){const s=this.scene.ui.processInput(A);this.doVibration(s,5)}buttonAb(A){this.scene.ui.processInput(A)}buttonTouch(){this.scene.ui.processInput(y.SUBMIT)||this.scene.ui.processInput(y.ACTION)}buttonStats(A=!0){for(const s of this.scene.getInfoToggles(!0))s.toggleInfo(A);for(const s of this.scene.getField().filter(R=>R==null?void 0:R.isActive(!0)))s.toggleStats(A)}buttonGoToFilter(A){var I;const s=[VT],R=(I=this.scene.ui)==null?void 0:I.getHandler();s.some(i=>R instanceof i)?this.scene.ui.processInput(A):this.buttonStats(!0)}buttonInfo(A=!0){if(this.scene.showMovesetFlyout)for(const s of this.scene.getField().filter(R=>R==null?void 0:R.isActive(!0)))s.toggleFlyout(A);this.scene.showArenaFlyout&&this.scene.ui.processInfoButton(A)}buttonMenu(){var A;if(!this.scene.disableMenu)switch((A=this.scene.ui)==null?void 0:A.getMode()){case $.MESSAGE:const s=this.scene.ui.getHandler();if(!s.pendingPrompt||s.isTextAnimationInProgress())return;case $.TITLE:case $.COMMAND:case $.MODIFIER_SELECT:case $.MYSTERY_ENCOUNTER:this.scene.ui.setOverlayMode($.MENU);break;case $.STARTER_SELECT:this.buttonTouch();break;case $.MENU:this.scene.ui.revertMode(),this.scene.playSound("ui/select");break;default:return}}buttonCycleOption(A){var I;const s=[VT,RC,xl,rC,NC,IC,LC],R=(I=this.scene.ui)==null?void 0:I.getHandler();s.some(i=>R instanceof i)?this.scene.ui.processInput(A):A===y.V&&this.buttonInfo(!0)}buttonSpeedChange(A=!0){var R,I;const s=p6(Qe.Game_Speed);A&&this.scene.gameSpeed<5?(this.scene.gameData.saveSetting(Qe.Game_Speed,GA[s].options.findIndex(i=>i.label===`${this.scene.gameSpeed}x`)+1),((R=this.scene.ui)==null?void 0:R.getMode())===$.SETTINGS&&this.scene.ui.getHandler().show([])):!A&&this.scene.gameSpeed>1&&(this.scene.gameData.saveSetting(Qe.Game_Speed,Math.max(GA[s].options.findIndex(i=>i.label===`${this.scene.gameSpeed}x`)-1,0)),((I=this.scene.ui)==null?void 0:I.getMode())===$.SETTINGS&&this.scene.ui.getHandler().show([]))}};T(TF,"UiInputs");let OG=TF;var Cn=(E=>(E.WEATHER_CHANGED="onWeatherChanged",E.TERRAIN_CHANGED="onTerrainChanged",E.TAG_ADDED="onTagAdded",E.TAG_REMOVED="onTagRemoved",E))(Cn||{});const SF=class SF extends Event{constructor(A,s){super(A),this.duration=s}};T(SF,"ArenaEvent");let hL=SF;const oF=class oF extends hL{constructor(A,s,R){super("onWeatherChanged",R),this.oldWeatherType=A,this.newWeatherType=s}};T(oF,"WeatherChangedEvent");let uI=oF;const lF=class lF extends hL{constructor(A,s,R){super("onTerrainChanged",R),this.oldTerrainType=A,this.newTerrainType=s}};T(lF,"TerrainChangedEvent");let XT=lF;const CF=class CF extends hL{constructor(A,s,R,I,i){super("onTagAdded",R),this.arenaTagType=A,this.arenaTagSide=s,this.arenaTagLayers=I,this.arenaTagMaxLayers=i}};T(CF,"TagAddedEvent");let bi=CF;const UF=class UF extends hL{constructor(A,s,R){super("onTagRemoved",R),this.arenaTagType=A,this.arenaTagSide=s}};T(UF,"TagRemovedEvent");let Li=UF;const DF=class DF extends Phaser.GameObjects.Container{constructor(A,s=0,R=0){super(A,s,R),this.timeOfDayIconFgs=new Array(2),this.timeOfDayIconMgs=new Array(2),this.timeOfDayIconBgs=new Array(2),this.timeOfDayIconPairs=new Map([["bg",this.timeOfDayIconBgs],["mg",this.timeOfDayIconMgs],["fg",this.timeOfDayIconFgs]]),this.currentTime=N.ALL,this.previousTime=N.ALL,this.onEncounterPhaseEvent=I=>this.onEncounterPhase(I),this.battleScene=this.scene,this.setVisible(this.battleScene.showTimeOfDayWidget),this.battleScene.showTimeOfDayWidget&&(this.timeOfDayIconPairs.forEach((I,i)=>{for(let a=0;a<I.length;a++)I[a]=this.scene.add.sprite(0,0,"dawn_icon_"+i).setOrigin()}),this.timeOfDayIcons=[this.timeOfDayIconBgs,this.timeOfDayIconMgs,this.timeOfDayIconFgs].flat(),this.add(this.timeOfDayIcons),this.battleScene.eventTarget.addEventListener(dO.ENCOUNTER_PHASE,this.onEncounterPhaseEvent))}get parentVisible(){return this._parentVisible}set parentVisible(A){var s;A&&!this._parentVisible&&((s=this.timeOfDayIcons)==null||s.forEach(R=>this.scene.tweens.getTweensOf(R).forEach(I=>I.resume()))),this._parentVisible=A}getBackTween(){const A={targets:[this.timeOfDayIconMgs[0],this.timeOfDayIconMgs[1]],angle:"+=90",duration:Ve(1500),ease:"Back.easeOut",paused:!this.parentVisible},s={targets:[this.timeOfDayIconBgs[1],this.timeOfDayIconMgs[1],this.timeOfDayIconFgs[1]],alpha:0,duration:Ve(500),ease:"Linear",paused:!this.parentVisible};return[A,s]}getBounceTween(){const A={targets:[this.timeOfDayIconMgs[0],this.timeOfDayIconMgs[1]],angle:"+=90",duration:Ve(2e3),ease:"Bounce.easeOut",paused:!this.parentVisible},s={targets:[this.timeOfDayIconBgs[1],this.timeOfDayIconMgs[1],this.timeOfDayIconFgs[1]],alpha:0,duration:Ve(800),ease:"Linear",paused:!this.parentVisible};return[A,s]}resetIcons(){this.moveBelow(this.timeOfDayIconBgs[0],this.timeOfDayIconBgs[1]),this.moveBelow(this.timeOfDayIconMgs[0],this.timeOfDayIconBgs[1]),this.moveBelow(this.timeOfDayIconFgs[0],this.timeOfDayIconFgs[1]),this.timeOfDayIconPairs.forEach((A,s)=>{A[0].setTexture(N[this.currentTime].toLowerCase()+"_icon_"+s),A[1].setTexture(N[this.previousTime].toLowerCase()+"_icon_"+s)}),this.timeOfDayIconMgs[0].setRotation(-90*(3.14/180)),this.timeOfDayIcons.forEach(A=>A.setAlpha(1))}tweenTimeOfDayIcon(){this.scene.tweens.killTweensOf(this.timeOfDayIcons),this.resetIcons(),(this.battleScene.timeOfDayAnimation===vT.BACK?this.getBackTween():this.getBounceTween()).forEach(A=>this.scene.tweens.add(A)),this.timeOfDayIconPairs.forEach(A=>{const s=A.shift();s&&A.push(s)})}onEncounterPhase(A){const s=this.battleScene.arena.getTimeOfDay();this.currentTime!==s&&(this.currentTime=s,this.previousTime=this.currentTime-1,this.previousTime<N.DAWN&&(this.previousTime=N.NIGHT),this.tweenTimeOfDayIcon())}};T(DF,"TimeOfDayWidget");let nG=DF;function Cu(E){if(!E||E===Me.NONE)return E;const s=`arenaFlyout:${wb(E)}`,R=U.t(s);return!R||R===s?zo(E):R}T(Cu,"getFieldEffectText");const MF=class MF extends Phaser.GameObjects.Container{constructor(A){super(A,0,0),this.flyoutWidth=170,this.flyoutHeight=51,this.fieldEffectInfo=[],this.onNewArenaEvent=s=>this.onNewArena(s),this.onTurnEndEvent=s=>this.onTurnEnd(s),this.onFieldEffectChangedEvent=s=>this.onFieldEffectChanged(s),this.setName("arena-flyout"),this.battleScene=this.scene,this.translationX=this.flyoutWidth,this.anchorX=0,this.anchorY=-98,this.flyoutParent=this.scene.add.container(this.anchorX-this.translationX,this.anchorY),this.flyoutParent.setAlpha(0),this.add(this.flyoutParent),this.flyoutContainer=this.scene.add.container(0,0),this.flyoutParent.add(this.flyoutContainer),this.flyoutWindow=it(this.scene,0,0,this.flyoutWidth,this.flyoutHeight,!1,!1,0,0,vR.THIN),this.flyoutContainer.add(this.flyoutWindow),this.flyoutWindowHeader=it(this.scene,this.flyoutWidth/2,0,this.flyoutWidth/2,14,!1,!1,0,0,vR.XTHIN),this.flyoutWindowHeader.setOrigin(),this.flyoutContainer.add(this.flyoutWindowHeader),this.flyoutTextHeader=se(this.scene,this.flyoutWidth/2,0,U.t("arenaFlyout:activeBattleEffects"),V.BATTLE_INFO),this.flyoutTextHeader.setFontSize(54),this.flyoutTextHeader.setAlign("center"),this.flyoutTextHeader.setOrigin(),this.flyoutContainer.add(this.flyoutTextHeader),this.timeOfDayWidget=new nG(this.scene,this.flyoutWidth/2+this.flyoutWindowHeader.displayWidth/2),this.flyoutContainer.add(this.timeOfDayWidget),this.flyoutTextHeaderPlayer=se(this.scene,6,5,U.t("arenaFlyout:player"),V.SUMMARY_BLUE),this.flyoutTextHeaderPlayer.setFontSize(54),this.flyoutTextHeaderPlayer.setAlign("left"),this.flyoutTextHeaderPlayer.setOrigin(0,0),this.flyoutContainer.add(this.flyoutTextHeaderPlayer),this.flyoutTextHeaderField=se(this.scene,this.flyoutWidth/2,5,U.t("arenaFlyout:neutral"),V.SUMMARY_GREEN),this.flyoutTextHeaderField.setFontSize(54),this.flyoutTextHeaderField.setAlign("center"),this.flyoutTextHeaderField.setOrigin(.5,0),this.flyoutContainer.add(this.flyoutTextHeaderField),this.flyoutTextHeaderEnemy=se(this.scene,this.flyoutWidth-6,5,U.t("arenaFlyout:enemy"),V.SUMMARY_RED),this.flyoutTextHeaderEnemy.setFontSize(54),this.flyoutTextHeaderEnemy.setAlign("right"),this.flyoutTextHeaderEnemy.setOrigin(1,0),this.flyoutContainer.add(this.flyoutTextHeaderEnemy),this.flyoutTextPlayer=se(this.scene,6,13,"",V.BATTLE_INFO),this.flyoutTextPlayer.setLineSpacing(-1),this.flyoutTextPlayer.setFontSize(48),this.flyoutTextPlayer.setAlign("left"),this.flyoutTextPlayer.setOrigin(0,0),this.flyoutContainer.add(this.flyoutTextPlayer),this.flyoutTextField=se(this.scene,this.flyoutWidth/2,13,"",V.BATTLE_INFO),this.flyoutTextField.setLineSpacing(-1),this.flyoutTextField.setFontSize(48),this.flyoutTextField.setAlign("center"),this.flyoutTextField.setOrigin(.5,0),this.flyoutContainer.add(this.flyoutTextField),this.flyoutTextEnemy=se(this.scene,this.flyoutWidth-6,13,"",V.BATTLE_INFO),this.flyoutTextEnemy.setLineSpacing(-1),this.flyoutTextEnemy.setFontSize(48),this.flyoutTextEnemy.setAlign("right"),this.flyoutTextEnemy.setOrigin(1,0),this.flyoutContainer.add(this.flyoutTextEnemy),this.name="Fight Flyout",this.flyoutParent.name="Fight Flyout Parent",this.battleScene.eventTarget.addEventListener(dO.NEW_ARENA,this.onNewArenaEvent),this.battleScene.eventTarget.addEventListener(dO.TURN_END,this.onTurnEndEvent)}onNewArena(A){this.fieldEffectInfo.length=0,this.battleScene.arena.eventTarget.addEventListener(Cn.WEATHER_CHANGED,this.onFieldEffectChangedEvent),this.battleScene.arena.eventTarget.addEventListener(Cn.TERRAIN_CHANGED,this.onFieldEffectChangedEvent),this.battleScene.arena.eventTarget.addEventListener(Cn.TAG_ADDED,this.onFieldEffectChangedEvent),this.battleScene.arena.eventTarget.addEventListener(Cn.TAG_REMOVED,this.onFieldEffectChangedEvent)}clearText(){this.flyoutTextPlayer.text="",this.flyoutTextField.text="",this.flyoutTextEnemy.text=""}updateFieldText(){this.clearText(),this.fieldEffectInfo.sort((A,s)=>A.duration-s.duration);for(let A=0;A<this.fieldEffectInfo.length;A++){const s=this.fieldEffectInfo[A];let R;switch(s.effecType){case 0:R=this.flyoutTextPlayer;break;case 1:case 2:case 3:R=this.flyoutTextField;break;case 4:R=this.flyoutTextEnemy;break}R.text+=s.name,s.maxDuration!==0&&(R.text+="  "+s.duration+"/"+s.maxDuration),R.text+=`
`}}onFieldEffectChanged(A){const s=A;if(!s)return;let R;switch(s.constructor){case bi:const I=s,i=this.battleScene.arena.getTag(I.arenaTagType)instanceof kR;let a;I.arenaTagSide===et.BOTH?a=3:I.arenaTagSide===et.PLAYER?a=0:a=4;const L=i?this.fieldEffectInfo.findIndex(c=>I.arenaTagType===c.tagType&&a===c.effecType):-1;let S=Cu(Me[I.arenaTagType]);if(i)if(L!==-1){const c=I.arenaTagMaxLayers>1?` (${I.arenaTagLayers})`:"";this.fieldEffectInfo[L].name=`${S}${c}`;break}else I.arenaTagMaxLayers>1&&(S=`${S} (${I.arenaTagLayers})`);this.fieldEffectInfo.push({name:S,effecType:a,maxDuration:I.duration,duration:I.duration,tagType:I.arenaTagType});break;case Li:const o=s;R=this.fieldEffectInfo.findIndex(c=>c.tagType===o.arenaTagType),R!==-1&&this.fieldEffectInfo.splice(R,1);break;case uI:case XT:const l=s,D=Cu(l instanceof uI?Q[l.oldWeatherType]:Rt[l.oldTerrainType]),M={name:Cu(l instanceof uI?Q[l.newWeatherType]:Rt[l.newTerrainType]),effecType:l instanceof uI?1:2,maxDuration:l.duration,duration:l.duration};R=this.fieldEffectInfo.findIndex(c=>[M.name,D].includes(c.name)),R===-1?M.name!==void 0&&this.fieldEffectInfo.push(M):M.name?this.fieldEffectInfo[R]=M:this.fieldEffectInfo.splice(R,1);break}this.updateFieldText()}onTurnEnd(A){if(!A)return;const R=[];this.fieldEffectInfo.forEach(I=>R.push(I));for(let I=0;I<R.length;I++){const i=R[I];i.maxDuration!==0&&(--i.duration,i.duration<=0&&this.fieldEffectInfo.splice(this.fieldEffectInfo.indexOf(i),1))}this.updateFieldText()}toggleFlyout(A){this.scene.tweens.add({targets:this.flyoutParent,x:A?this.anchorX:this.anchorX-this.translationX,duration:Ve(125),ease:"Sine.easeInOut",alpha:A?1:0,onComplete:T(()=>this.timeOfDayWidget.parentVisible=A,"onComplete")})}destroy(A){this.battleScene.eventTarget.removeEventListener(dO.NEW_ARENA,this.onNewArenaEvent),this.battleScene.eventTarget.removeEventListener(dO.TURN_END,this.onTurnEndEvent),this.battleScene.arena.eventTarget.removeEventListener(Cn.WEATHER_CHANGED,this.onFieldEffectChangedEvent),this.battleScene.arena.eventTarget.removeEventListener(Cn.TERRAIN_CHANGED,this.onFieldEffectChangedEvent),this.battleScene.arena.eventTarget.removeEventListener(Cn.TAG_ADDED,this.onFieldEffectChangedEvent),this.battleScene.arena.eventTarget.removeEventListener(Cn.TAG_REMOVED,this.onFieldEffectChangedEvent),super.destroy(A)}};T(MF,"ArenaFlyout");let IG=MF;const uF=class uF extends YO{constructor(A){super(A)}start(){super.start(),this.scene.ui.setMode($.MESSAGE).then(()=>{this.scene.playSound("level_up_fanfare"),this.scene.ui.showText(U.t("battle:levelCapUp",{levelCap:this.scene.getMaxExpLevel()}),null,()=>this.end(),null,!0),this.executeForAll(A=>A.updateInfo(!0))})}};T(uF,"LevelCapPhase");let iG=uF;const hF=class hF extends kA{constructor(A){super(A)}start(){super.start(),this.scene.ui.showText(U.t("menu:boyOrGirl"),null,()=>{this.scene.ui.setMode($.OPTION_SELECT,{options:[{label:U.t("settings:boy"),handler:T(()=>(this.scene.gameData.gender=ct.MALE,this.scene.gameData.saveSetting(Qe.Player_Gender,0),this.scene.gameData.saveSystem().then(()=>this.end()),!0),"handler")},{label:U.t("settings:girl"),handler:T(()=>(this.scene.gameData.gender=ct.FEMALE,this.scene.gameData.saveSetting(Qe.Player_Gender,1),this.scene.gameData.saveSystem().then(()=>this.end()),!0),"handler")}]})})}end(){this.scene.ui.setMode($.MESSAGE),super.end()}};T(hF,"SelectGenderPhase");let aG=hF;const cF=class cF extends kA{constructor(A){super(A)}start(){this.scene.ui.setMode($.UNAVAILABLE,()=>{this.scene.unshiftPhase(new lC(this.scene,!0)),this.end()})}};T(cF,"UnavailablePhase");let LG=cF;const LM=class LM extends kA{constructor(A,s){super(A),this.showText=s===void 0||!!s}start(){super.start();const A=!!T0(sn);this.scene.ui.setMode($.LOADING,{buttonActions:[]}),OL(A,BO).then(s=>{const R=s?s[0]:!1,I=s?s[1]:null;if(R)this.scene.gameData.loadSystem().then(i=>{i||_s?this.end():(this.scene.ui.setMode($.MESSAGE),this.scene.ui.showText(Vb("menu:failedToLoadSaveData")))});else{if(!I||I===400){this.showText&&this.scene.ui.showText(U.t("menu:logInOrCreateAccount")),this.scene.playSound("menu_open");const i=T(()=>{BO().then(a=>{if(!a[0]){rr(sn),this.scene.reset(!0,!0);return}this.scene.gameData.loadSystem().then(()=>this.end())})},"loadData");this.scene.ui.setMode($.LOGIN_FORM,{buttonActions:[()=>{this.scene.ui.playSelect(),i()},()=>{this.scene.playSound("menu_open"),this.scene.ui.setMode($.REGISTRATION_FORM,{buttonActions:[()=>{this.scene.ui.playSelect(),BO().then(a=>{if(!a[0]){rr(sn),this.scene.reset(!0,!0);return}this.end()})},()=>{this.scene.unshiftPhase(new LM(this.scene,!1)),this.end()}]})},()=>{const S=`https://discord.com/api/oauth2/authorize?client_id=1248062921129459756&redirect_uri=${encodeURIComponent("https://api.pokerogue.net/auth/discord/callback")}&response_type=code&scope=identify&prompt=none`;window.open(S,"_self")},()=>{const S=`https://accounts.google.com/o/oauth2/auth?client_id=955345393540-2k6lfftf0fdnb0krqmpthjnqavfvvf73.apps.googleusercontent.com&redirect_uri=${encodeURIComponent("https://api.pokerogue.net/auth/google/callback")}&response_type=code&scope=openid`;window.open(S,"_self")}]})}else I===401?(rr(sn),this.scene.reset(!0,!0)):(this.scene.unshiftPhase(new LG(this.scene)),super.end());return null}})}end(){this.scene.ui.setMode($.MESSAGE),this.scene.gameData.gender||this.scene.unshiftPhase(new aG(this.scene)),fI(this.scene,yR.Intro).then(()=>super.end())}};T(LM,"LoginPhase");let lC=LM;const rM=class rM extends kA{constructor(A,s,R,I,i,a){super(A),this.text=s,this.callbackDelay=R,this.prompt=I,this.promptDelay=i,this.speaker=a}start(){if(super.start(),this.text.indexOf("$")>-1){const A=this.text.indexOf("$");this.scene.unshiftPhase(new rM(this.scene,this.text.slice(A+1),this.callbackDelay,this.prompt,this.promptDelay,this.speaker)),this.text=this.text.slice(0,A).trim()}this.speaker?this.scene.ui.showDialogue(this.text,this.speaker,null,()=>this.end(),this.callbackDelay||(this.prompt?0:1500),this.promptDelay??0):this.scene.ui.showText(this.text,null,()=>this.end(),this.callbackDelay||(this.prompt?0:1500),this.prompt,this.promptDelay)}end(){this.scene.abilityBar.shown&&this.scene.abilityBar.hide(),super.end()}};T(rM,"MessagePhase");let rG=rM;const GF=class GF extends UL{constructor(A){super(A)}start(){super.start()}doEncounter(){var i,a;this.scene.playBgm(void 0,!0);for(const L of this.scene.getParty())L&&L.resetBattleData();this.scene.arenaNextEnemy.setBiome(this.scene.arena.biomeType),this.scene.arenaNextEnemy.setVisible(!0);const A=this.scene.getEnemyField(),s=[this.scene.arenaEnemy,this.scene.arenaNextEnemy,this.scene.currentBattle.trainer,A,this.scene.lastEnemyTrainer],R=(i=this.scene.lastMysteryEncounter)==null?void 0:i.introVisuals;R&&s.push(R);const I=(a=this.scene.currentBattle.mysteryEncounter)==null?void 0:a.introVisuals;I&&(I.enterFromRight?(I.x+=500,this.scene.tweens.add({targets:I,x:"-=200",duration:2e3})):s.push(I)),this.scene.tweens.add({targets:s.flat(),x:"+=300",duration:2e3,onComplete:T(()=>{this.scene.arenaEnemy.setBiome(this.scene.arena.biomeType),this.scene.arenaEnemy.setX(this.scene.arenaNextEnemy.x),this.scene.arenaEnemy.setAlpha(1),this.scene.arenaNextEnemy.setX(this.scene.arenaNextEnemy.x-300),this.scene.arenaNextEnemy.setVisible(!1),this.scene.lastEnemyTrainer&&this.scene.lastEnemyTrainer.destroy(),R&&(this.scene.field.remove(R,!0),this.scene.lastMysteryEncounter.introVisuals=void 0),this.tryOverrideForBattleSpec()||this.doEncounterCommon()},"onComplete")})}trySetWeatherIfNewBiome(){}};T(GF,"NextEncounterPhase");let CC=GF;const PF=class PF extends CC{constructor(A){super(A)}doEncounter(){var I,i;this.scene.playBgm(void 0,!0);for(const a of this.scene.getParty())a&&a.resetBattleData();for(const a of this.scene.getParty().filter(L=>L.isOnField()))Et(ZS,a,null);const A=this.scene.getEnemyField(),s=[this.scene.arenaEnemy,A],R=(i=(I=this.scene.currentBattle)==null?void 0:I.mysteryEncounter)==null?void 0:i.introVisuals;R&&s.push(R),this.scene.tweens.add({targets:s.flat(),x:"+=300",duration:2e3,onComplete:T(()=>{this.tryOverrideForBattleSpec()||this.doEncounterCommon()},"onComplete")})}trySetWeatherIfNewBiome(){this.scene.arena.trySetWeather(Lb(this.scene.arena),!1)}};T(PF,"NewBiomeEncounterPhase");let NG=PF;var On=(E=>(E[E.SUBSTITUTE_ADD=0]="SUBSTITUTE_ADD",E[E.SUBSTITUTE_PRE_MOVE=1]="SUBSTITUTE_PRE_MOVE",E[E.SUBSTITUTE_POST_MOVE=2]="SUBSTITUTE_POST_MOVE",E[E.SUBSTITUTE_REMOVE=3]="SUBSTITUTE_REMOVE",E))(On||{});const _F=class _F extends LE{constructor(A,s,R,I){super(A),this.key=s,this.pokemon=R,this.fieldAssets=I??[]}start(){switch(super.start(),this.key){case On.SUBSTITUTE_ADD:this.doSubstituteAddAnim();break;case On.SUBSTITUTE_PRE_MOVE:this.doSubstitutePreMoveAnim();break;case On.SUBSTITUTE_POST_MOVE:this.doSubstitutePostMoveAnim();break;case On.SUBSTITUTE_REMOVE:this.doSubstituteRemoveAnim();break;default:this.end()}}doSubstituteAddAnim(){const A=this.pokemon.getTag(lE);if(A===null)return this.end();const s=T(()=>{const a=this.scene.addFieldSprite(this.pokemon.x+this.pokemon.getSprite().x,this.pokemon.y+this.pokemon.getSprite().y,`pkmn${this.pokemon.isPlayer()?"__back":""}__sub`);return a.setOrigin(.5,1),this.scene.field.add(a),a},"getSprite"),[R,I]=[s(),s()],i=this.pokemon.getSpriteScale()*(this.pokemon.isPlayer()?.5:1);R.setVisible(!1),R.setScale(i),I.setTintFill(16777215),I.setScale(.01),this.pokemon.isPlayer()&&this.scene.field.bringToTop(this.pokemon),this.scene.playSound("PRSFX- Transform"),this.scene.tweens.add({targets:this.pokemon,duration:500,x:this.pokemon.x+this.pokemon.getSubstituteOffset()[0],y:this.pokemon.y+this.pokemon.getSubstituteOffset()[1],alpha:.5,ease:"Sine.easeIn"}),this.scene.tweens.add({targets:I,delay:250,scale:i,ease:"Cubic.easeInOut",duration:500,onComplete:T(()=>{R.setVisible(!0),this.pokemon.scene.tweens.add({targets:I,delay:250,alpha:0,ease:"Cubic.easeOut",duration:1e3,onComplete:T(()=>{I.destroy(),A.sprite=R,this.end()},"onComplete")})},"onComplete")})}doSubstitutePreMoveAnim(){if(this.fieldAssets.length!==1)return this.end();const A=this.fieldAssets[0];if(A===void 0)return this.end();this.scene.tweens.add({targets:A,alpha:0,ease:"Sine.easeInOut",duration:500}),this.scene.tweens.add({targets:this.pokemon,x:A.x,y:A.y,alpha:1,ease:"Sine.easeInOut",delay:250,duration:500,onComplete:T(()=>this.end(),"onComplete")})}doSubstitutePostMoveAnim(){if(this.fieldAssets.length!==1)return this.end();const A=this.fieldAssets[0];if(A===void 0)return this.end();this.scene.tweens.add({targets:this.pokemon,x:A.x+this.pokemon.getSubstituteOffset()[0],y:A.y+this.pokemon.getSubstituteOffset()[1],alpha:.5,ease:"Sine.easeInOut",duration:500}),this.scene.tweens.add({targets:A,alpha:1,ease:"Sine.easeInOut",delay:250,duration:500,onComplete:T(()=>this.end(),"onComplete")})}doSubstituteRemoveAnim(){if(this.fieldAssets.length!==1)return this.end();const A=this.fieldAssets[0];if(A===void 0)return this.end();const R=T(()=>{const i=this.scene.addFieldSprite(A.x,A.y,`pkmn${this.pokemon.isPlayer()?"__back":""}__sub`);return i.setOrigin(.5,1),this.scene.field.add(i),i},"getSprite")(),I=this.pokemon.getSpriteScale()*(this.pokemon.isPlayer()?.5:1);R.setAlpha(0),R.setTintFill(16777215),R.setScale(I),this.scene.tweens.add({targets:R,alpha:1,ease:"Sine.easeInOut",duration:500,onComplete:T(()=>{A.destroy();const i=this.scene.time.addEvent({delay:100,repeat:7,startAt:200,callback:T(()=>{this.scene.playSound("PRSFX- Substitute2.wav"),R.setVisible(i.repeatCount%2===0),i.repeatCount||(this.scene.tweens.add({targets:R,scale:.01,ease:"Sine.cubicEaseIn",duration:500}),this.scene.tweens.add({targets:this.pokemon,x:this.pokemon.x-this.pokemon.getSubstituteOffset()[0],y:this.pokemon.y-this.pokemon.getSubstituteOffset()[1],alpha:1,ease:"Sine.easeInOut",delay:250,duration:500,onComplete:T(()=>{R.destroy(),this.end()},"onComplete")}))},"callback")})},"onComplete")})}};T(_F,"PokemonAnimPhase");let TG=_F;const HF=class HF extends LE{constructor(A,s,R){super(A),this.pokemon=s,this.formChange=R}start(){if(super.start(),this.pokemon.formIndex===this.pokemon.species.forms.findIndex(i=>i.formKey===this.formChange.formKey))return this.end();const A=b(this.pokemon);if(!this.pokemon.isOnField()||this.pokemon.getTag(In)){this.pokemon.changeForm(this.formChange).then(()=>{this.scene.ui.showText(w0(this.pokemon,this.formChange,A),null,()=>this.end(),1500)});return}const s=T(()=>{const i=this.scene.addPokemonSprite(this.pokemon,this.pokemon.x+this.pokemon.getSprite().x,this.pokemon.y+this.pokemon.getSprite().y,"pkmn__sub");return i.setOrigin(.5,1),i.play(this.pokemon.getBattleSpriteKey()).stop(),i.setPipeline(this.scene.spritePipeline,{tone:[0,0,0,0],hasShadow:!1,teraColor:DR(this.pokemon.getTeraType())}),["spriteColors","fusionSpriteColors"].map(a=>{var L;(L=this.pokemon.summonData)!=null&&L.speciesForm&&(a+="Base"),i.pipelineData[a]=this.pokemon.getSprite().pipelineData[a]}),this.scene.field.add(i),i},"getPokemonSprite"),[R,I]=[s(),s()];this.pokemon.getSprite().on("animationupdate",(i,a)=>{a.textureKey===R.texture.key?R.setFrame(a.textureFrame):I.setFrame(a.textureFrame)}),R.setAlpha(0),R.setTintFill(16777215),I.setVisible(!1),I.setTintFill(16777215),this.scene.playSound("battle_anims/PRSFX- Transform"),this.scene.tweens.add({targets:R,alpha:1,duration:1e3,ease:"Cubic.easeIn",onComplete:T(()=>{this.pokemon.setVisible(!1),this.pokemon.changeForm(this.formChange).then(()=>{I.setScale(.01),I.play(this.pokemon.getBattleSpriteKey()).stop(),I.setVisible(!0),this.scene.tweens.add({targets:R,delay:250,scale:.01,ease:"Cubic.easeInOut",duration:500,onComplete:T(()=>R.destroy(),"onComplete")}),this.scene.tweens.add({targets:I,delay:250,scale:this.pokemon.getSpriteScale(),ease:"Cubic.easeInOut",duration:500,onComplete:T(()=>{this.pokemon.setVisible(!0),this.scene.tweens.add({targets:I,delay:250,alpha:0,ease:"Cubic.easeOut",duration:1e3,onComplete:T(()=>{R.setVisible(!1),this.scene.ui.showText(w0(this.pokemon,this.formChange,A),null,()=>this.end(),1500)},"onComplete")})},"onComplete")})})},"onComplete")})}end(){var A;if(this.pokemon.findAndRemoveTags(s=>s.tagType===Y.AUTOTOMIZED),((A=this.pokemon.scene)==null?void 0:A.currentBattle.battleSpec)===eE.FINAL_BOSS&&this.pokemon instanceof es){this.scene.playBgm(),this.scene.unshiftPhase(new CE(this.scene,this.pokemon.getBattlerIndex(),this.pokemon.getMaxHp(),null,!1,!1,!1,!0)),this.pokemon.findAndRemoveTags(()=>!0),this.pokemon.bossSegments=5,this.pokemon.bossSegmentIndex=4,this.pokemon.initBattleInfo(),this.pokemon.cry();const s=this.scene.findPhase(R=>R instanceof JA&&R.pokemon===this.pokemon);s&&s.cancel()}super.end()}};T(HF,"QuietFormChangePhase");let SG=HF;const dF=class dF extends LE{constructor(A,s){super(A),this.nextBiome=s}start(){if(super.start(),this.nextBiome===void 0)return this.end();this.scene.tweens.add({targets:[this.scene.arenaEnemy,this.scene.lastEnemyTrainer],x:"+=300",duration:2e3,onComplete:T(()=>{this.scene.arenaEnemy.setX(this.scene.arenaEnemy.x-600),this.scene.newArena(this.nextBiome);const s=`${Do(this.nextBiome)}_bg`;this.scene.arenaBgTransition.setTexture(s),this.scene.arenaBgTransition.setAlpha(0),this.scene.arenaBgTransition.setVisible(!0),this.scene.arenaPlayerTransition.setBiome(this.nextBiome),this.scene.arenaPlayerTransition.setAlpha(0),this.scene.arenaPlayerTransition.setVisible(!0),this.scene.tweens.add({targets:[this.scene.arenaPlayer,this.scene.arenaBgTransition,this.scene.arenaPlayerTransition],duration:1e3,delay:1e3,ease:"Sine.easeInOut",alpha:T(R=>R===this.scene.arenaPlayer?0:1,"alpha"),onComplete:T(()=>{this.scene.arenaBg.setTexture(s),this.scene.arenaPlayer.setBiome(this.nextBiome),this.scene.arenaPlayer.setAlpha(1),this.scene.arenaEnemy.setBiome(this.nextBiome),this.scene.arenaEnemy.setAlpha(1),this.scene.arenaNextEnemy.setBiome(this.nextBiome),this.scene.arenaBgTransition.setVisible(!1),this.scene.arenaPlayerTransition.setVisible(!1),this.scene.lastEnemyTrainer&&this.scene.lastEnemyTrainer.destroy(),this.end()},"onComplete")})},"onComplete")})}};T(dF,"SwitchBiomePhase");let oG=dF;const fF=class fF extends LE{constructor(A){super(A)}start(){super.start();const A=this.scene.arena.biomeType,s=T(R=>{this.scene.currentBattle.waveIndex%10===1&&(this.scene.applyModifiers(uS,!0,this.scene),this.scene.unshiftPhase(new oL(this.scene,!1))),this.scene.unshiftPhase(new oG(this.scene,R)),this.end()},"setNextBiome");if(this.scene.gameMode.isClassic&&this.scene.gameMode.isWaveFinal(this.scene.currentBattle.waveIndex+9)||this.scene.gameMode.isDaily&&this.scene.gameMode.isWaveFinal(this.scene.currentBattle.waveIndex)||this.scene.gameMode.hasShortBiomes&&!(this.scene.currentBattle.waveIndex%50))s(r.END);else if(this.scene.gameMode.hasRandomBiomes)s(this.generateNextBiome());else if(Array.isArray(QO[A])){let R=[];if(this.scene.executeWithSeedOffset(()=>{R=QO[A].filter(I=>!Array.isArray(I)||!le(I[1])).map(I=>Array.isArray(I)?I[0]:I)},this.scene.currentBattle.waveIndex),R.length>1&&this.scene.findModifier(I=>I instanceof AS)){let I=[];this.scene.executeWithSeedOffset(()=>{I=(Array.isArray(QO[A])?QO[A]:[QO[A]]).filter((a,L)=>!Array.isArray(a)||!le(a[1])).map(a=>Array.isArray(a)?a[0]:a)},this.scene.currentBattle.waveIndex);const i=I.map(a=>({label:JL(a),handler:T(()=>(this.scene.ui.setMode($.MESSAGE),s(a),!0),"handler")}));this.scene.ui.setMode($.OPTION_SELECT,{options:i,delay:1e3})}else s(R[le(R.length)])}else QO.hasOwnProperty(A)?s(QO[A]):s(this.generateNextBiome())}generateNextBiome(){return this.scene.currentBattle.waveIndex%50?this.scene.generateRandomBiome(this.scene.currentBattle.waveIndex):r.END}};T(fF,"SelectBiomePhase");let lG=fF;const BF=class BF extends YO{constructor(A,s){var R;super(A),this.skipTurn=!1,this.fieldIndex=s,(R=this.scene.currentBattle.mysteryEncounter)!=null&&R.skipEnemyBattleTurns&&(this.skipTurn=!0)}start(){super.start();const A=this.scene.getEnemyField()[this.fieldIndex],s=this.scene.currentBattle,R=s.trainer;if(R&&!A.getMoveQueue().length){const i=A.getOpponents();if(!A.isTrapped()){const a=R.getPartyMemberMatchupScores(A.trainerSlot,!0);if(a.length){const L=i.map(D=>A.getMatchupScore(D)),S=L.reduce((D,M)=>D+=M,0)/L.length,o=R.getSortedPartyMemberMatchupScores(a),l=1-(s.enemySwitchCounter?Math.pow(.1,1/s.enemySwitchCounter):0);if(o[0][1]*l>=S*(R.config.isBoss?2:3)){const D=R.getNextSummonIndex(A.trainerSlot,a);return s.turnCommands[this.fieldIndex+Ct.ENEMY]={command:vt.POKEMON,cursor:D,args:[!1],skip:this.skipTurn},s.enemySwitchCounter++,this.end()}}}}const I=A.getNextMove();this.scene.currentBattle.turnCommands[this.fieldIndex+Ct.ENEMY]={command:vt.FIGHT,move:I,skip:this.skipTurn},this.scene.currentBattle.enemySwitchCounter=Math.max(this.scene.currentBattle.enemySwitchCounter-1,0),this.end()}getFieldIndex(){return this.fieldIndex}};T(BF,"EnemyCommandPhase");let CG=BF;const gF=class gF extends zE{constructor(A,s,R){super(A,Ct.ENEMY+s),this.pokeballType=R}start(){super.start();const A=this.getPokemon();if(!(A!=null&&A.hp))return this.end();const s=A.getTag(lE);s&&s.sprite.setVisible(!1),this.scene.pokeballCounts[this.pokeballType]--,this.originalY=A.y;const R=3*A.getMaxHp(),I=2*A.hp,i=A.species.catchRate,a=El(this.pokeballType),L=A.status?jx(A.status.effect):1,S=Math.round((R-I)*i*a/R*L),o=Math.round(65536/Math.sqrt(Math.sqrt(255/S))),l=A.getFieldPositionOffset(),D=OO(this.pokeballType);this.pokeball=this.scene.addFieldSprite(16,80,"pb",D),this.pokeball.setOrigin(.5,.625),this.scene.field.add(this.pokeball),this.scene.playSound("se/pb_throw"),this.scene.time.delayedCall(300,()=>{this.scene.field.moveBelow(this.pokeball,A)}),this.scene.tweens.add({targets:this.pokeball,x:{value:236+l[0],ease:"Linear"},y:{value:16+l[1],ease:"Cubic.easeOut"},duration:500,onComplete:T(()=>{this.pokeball.setTexture("pb",`${D}_opening`),this.scene.time.delayedCall(17,()=>this.pokeball.setTexture("pb",`${D}_open`)),this.scene.playSound("se/pb_rel"),A.tint(FO(this.pokeballType)),yM(this.scene,this.pokeball.x,this.pokeball.y,this.pokeballType),this.scene.tweens.add({targets:A,duration:500,ease:"Sine.easeIn",scale:.25,y:20,onComplete:T(()=>{this.pokeball.setTexture("pb",`${D}_opening`),A.setVisible(!1),this.scene.playSound("se/pb_catch"),this.scene.time.delayedCall(17,()=>this.pokeball.setTexture("pb",`${D}`));const M=T(()=>{let c=0;const G=this.pokeball.x,P=this.scene.tweens.addCounter({from:0,to:1,repeat:4,yoyo:!0,ease:"Cubic.easeOut",duration:250,repeatDelay:500,onUpdate:T(_=>{if(c&&c<4){const g=_.getValue(),H=c%2===1?1:-1;this.pokeball.setX(G+g*4*H),this.pokeball.setAngle(g*27.5*H)}},"onUpdate"),onRepeat:T(()=>{if(!A.species.isObtainable())P.stop(),this.failCatch(c);else if(c++<3)a===-1||A.randSeedInt(65536)<o?this.scene.playSound("se/pb_move"):(P.stop(),this.failCatch(c));else{this.scene.playSound("se/pb_lock"),C6(this.scene,this.pokeball);const _=this.scene.add.sprite(this.pokeball.x,this.pokeball.y,"pb","pb");_.setOrigin(this.pokeball.originX,this.pokeball.originY),_.setTintFill(0),_.setAlpha(0),this.scene.field.add(_),this.scene.tweens.add({targets:_,alpha:.375,duration:200,easing:"Sine.easeOut",onComplete:T(()=>{this.scene.tweens.add({targets:_,alpha:0,duration:200,easing:"Sine.easeIn",onComplete:T(()=>_.destroy(),"onComplete")})},"onComplete")})}},"onRepeat"),onComplete:T(()=>{this.catch()},"onComplete")})},"doShake");this.scene.time.delayedCall(250,()=>Qx(this.scene,this.pokeball,16,72,350,M))},"onComplete")})},"onComplete")})}failCatch(A){var i;const s=this.getPokemon();this.scene.playSound("se/pb_rel"),s.setY(this.originalY),((i=s.status)==null?void 0:i.effect)!==J.SLEEP&&s.cry(s.getHpRatio()>.25?void 0:{rate:.85}),s.tint(FO(this.pokeballType)),s.setVisible(!0),s.untint(250,"Sine.easeOut");const R=s.getTag(lE);R&&R.sprite.setVisible(!0);const I=OO(this.pokeballType);this.pokeball.setTexture("pb",`${I}_opening`),this.scene.time.delayedCall(17,()=>this.pokeball.setTexture("pb",`${I}_open`)),this.scene.tweens.add({targets:s,duration:250,ease:"Sine.easeOut",scale:1}),this.scene.currentBattle.lastUsedPokeball=this.pokeballType,this.removePb(),this.end()}catch(){const A=this.getPokemon(),s=A.fusionSpecies?A.getFusionSpeciesForm():A.getSpeciesForm();s.abilityHidden&&(A.fusionSpecies?A.fusionAbilityIndex:A.abilityIndex)===s.getAbilityCount()-1&&this.scene.validateAchv(At.HIDDEN_ABILITY),A.species.subLegendary&&this.scene.validateAchv(At.CATCH_SUB_LEGENDARY),A.species.legendary&&this.scene.validateAchv(At.CATCH_LEGENDARY),A.species.mythical&&this.scene.validateAchv(At.CATCH_MYTHICAL),this.scene.pokemonInfoContainer.show(A,!0),this.scene.gameData.updateSpeciesDexIvs(A.species.getRootSpeciesId(!0),A.ivs),this.scene.ui.showText(U.t("battle:pokemonCaught",{pokemonName:b(A)}),null,()=>{const R=T(()=>{this.scene.unshiftPhase(new KT(this.scene,this.battlerIndex)),this.scene.pokemonInfoContainer.hide(),this.removePb(),this.end()},"end"),I=T(()=>{this.scene.addFaintedEnemyScore(A),this.scene.getPlayerField().filter(a=>a.isActive(!0)).forEach(a=>a.removeTagsBySourceId(A.id)),A.hp=0,A.trySetStatus(J.FAINT),this.scene.clearEnemyHeldItemModifiers(),this.scene.field.remove(A,!0)},"removePokemon"),i=T(a=>{const L=A.addToParty(this.pokeballType,a),S=this.scene.findModifiers(o=>o instanceof at,!1);this.scene.getParty().filter(o=>o.isShiny()).length===6&&this.scene.validateAchv(At.SHINY_PARTY),Promise.all(S.map(o=>this.scene.addModifier(o,!0))).then(()=>{this.scene.updateModifiers(!0),I(),L?L.loadAssets().then(R):R()})},"addToParty");Promise.all([A.hideInfo(),this.scene.gameData.setPokemonCaught(A)]).then(()=>{if(this.scene.getParty().length===6){const a=T(()=>{this.scene.ui.showText(U.t("battle:partyFull",{pokemonName:A.getNameToRender()}),null,()=>{this.scene.pokemonInfoContainer.makeRoomForConfirmUi(1,!0),this.scene.ui.setMode($.CONFIRM,()=>{const L=this.scene.addPlayerPokemon(A.species,A.level,A.abilityIndex,A.formIndex,A.gender,A.shiny,A.variant,A.ivs,A.nature,A);this.scene.ui.setMode($.SUMMARY,L,0,pM.DEFAULT,()=>{this.scene.ui.setMode($.MESSAGE).then(()=>{a()})},!1)},()=>{this.scene.ui.setMode($.PARTY,as.RELEASE,this.fieldIndex,(L,S)=>{this.scene.ui.setMode($.MESSAGE).then(()=>{L<6?i(L):a()})})},()=>{this.scene.ui.setMode($.MESSAGE).then(()=>{I(),R()})},"fullParty")})},"promptRelease");a()}else i()})},0,!0)}removePb(){this.scene.tweens.add({targets:this.pokeball,duration:250,delay:250,ease:"Sine.easeIn",alpha:0,onComplete:T(()=>this.pokeball.destroy(),"onComplete")})}};T(gF,"AttemptCapturePhase");let UG=gF;const KF=class KF extends zE{constructor(A,s){super(A,s)}start(){super.start();const A=this.scene.getPlayerField(),s=this.scene.getEnemyField(),R=this.getPokemon(),I=new $e(0);this.attemptRunAway(A,s,I),Et(cU,R,null,!1,I),R.randSeedInt(100)<I.value?(this.scene.playSound("se/flee"),this.scene.queueMessage(U.t("battle:runAwaySuccess"),null,!0,500),this.scene.tweens.add({targets:[this.scene.arenaEnemy,s].flat(),alpha:0,duration:250,ease:"Sine.easeIn",onComplete:T(()=>s.forEach(i=>i.destroy()),"onComplete")}),this.scene.clearEnemyHeldItemModifiers(),s.forEach(i=>{i.hideInfo().then(()=>i.destroy()),i.hp=0,i.trySetStatus(J.FAINT)}),this.scene.pushPhase(new yi(this.scene)),this.scene.pushPhase(new rL(this.scene))):this.scene.queueMessage(U.t("battle:runAwayCannotEscape"),null,!0,500),this.end()}attemptRunAway(A,s,R){const I=s.reduce((c,G)=>c+G.getStat(B.SPD),0),i=A.reduce((c,G)=>c+G.getStat(B.SPD),0);let a=!1;for(let c=0;c<s.length;c++)a=a||s[c].isBoss();const L=i/I,S=a?6:4,o=5,l=a?25:95,D=a?2:10,M=(l-o)/S;R.value=Phaser.Math.Clamp(Math.round(M*L+o+D*this.scene.currentBattle.escapeAttempts++),o,l)}};T(KF,"AttemptRunPhase");let DG=KF;const FF=class FF extends YO{start(){super.start(),this.executeForAll(A=>{if(!!this.scene.findModifier(R=>R instanceof _E&&R.shouldApply(A),A.isPlayer())){const R=new je(!1);if(A.getOpponents().map(I=>Et(za,I,R)),R.value)A.scene.queueMessage(U.t("abilityTriggers:preventBerryUse",{pokemonNameWithAffix:b(A)}));else{this.scene.unshiftPhase(new Ts(this.scene,A.getBattlerIndex(),A.getBattlerIndex(),RA.USE_ITEM));for(const I of this.scene.applyModifiers(_E,A.isPlayer(),A))I.consumed&&(--I.stackCount?I.consumed=!1:this.scene.removeModifier(I)),this.scene.eventTarget.dispatchEvent(new o0(I));this.scene.updateModifiers(A.isPlayer()),Et(QS,A,new je(!1))}}}),this.end()}};T(FF,"BerryPhase");let MG=FF;const mF=class mF extends LE{constructor(A,s,R){super(A),this.pokemon=s,this.move=R}canMove(){return this.pokemon.isActive(!0)&&this.move.isUsable(this.pokemon)}start(){super.start(),this.canMove()?eA(ZL,this.pokemon,null,this.move.getMove()).then(()=>this.end()):this.end()}};T(mF,"MoveHeaderPhase");let uG=mF;const WF=class WF extends YO{constructor(A){super(A)}start(){super.start(),this.scene.currentBattle.incrementTurn(this.scene),this.scene.eventTarget.dispatchEvent(new U0(this.scene.currentBattle.turn));const A=T(s=>{var R;s.lapseTags(rs.TURN_END),this.scene.applyModifiers(Qi,s.isPlayer(),s),((R=this.scene.arena.terrain)==null?void 0:R.terrainType)===Rt.GRASSY&&s.isGrounded()&&this.scene.unshiftPhase(new CE(this.scene,s.getBattlerIndex(),Math.max(s.getMaxHp()>>4,1),U.t("battle:turnEndHpRestore",{pokemonName:b(s)}),!0)),s.isPlayer()||(this.scene.applyModifiers(HS,!1,s),this.scene.applyModifier(dS,!1,s)),yX(wO,s),this.scene.applyModifiers(nn,s.isPlayer(),s),this.scene.applyModifiers(ea,s.isPlayer(),s),s.battleSummonData.turnCount++,s.battleSummonData.waveTurnCount++},"handlePokemon");this.executeForAll(A),this.scene.arena.lapseTags(),this.scene.arena.weather&&!this.scene.arena.weather.lapse()&&(this.scene.arena.trySetWeather(Q.NONE,!1),this.scene.arena.triggerWeatherBasedFormChangesToNormal()),this.scene.arena.terrain&&!this.scene.arena.terrain.lapse()&&this.scene.arena.trySetTerrain(Rt.NONE,!1),this.end()}};T(WF,"TurnEndPhase");let hG=WF;const YF=class YF extends Ts{constructor(A){var s,R,I;super(A,void 0,void 0,RA.SUNNY+((((R=(s=A==null?void 0:A.arena)==null?void 0:s.weather)==null?void 0:R.weatherType)||Q.NONE)-1)),this.weather=(I=A==null?void 0:A.arena)==null?void 0:I.weather}start(){var A,s;if(this.weather=(s=(A=this.scene)==null?void 0:A.arena)==null?void 0:s.weather,!this.weather){this.end();return}if(this.setAnimation(RA.SUNNY+(this.weather.weatherType-1)),this.weather.isDamaging()){const R=new je(!1);if(this.executeForAll(I=>Kx(Ra,I,this.weather,R)),!R.value){const I=T(i=>{var S;const a=new je(!1);if(Kx(SU,i,this.weather,a),Et(rE,i,a),a.value||i.getTag(Y.UNDERGROUND)||i.getTag(Y.UNDERWATER))return;const L=gt(i.getMaxHp()/16);this.scene.queueMessage(rQ((S=this.weather)==null?void 0:S.weatherType,i)),i.damageAndUpdate(L,Pt.EFFECTIVE,!1,!1,!0)},"inflictDamage");this.executeForAll(i=>{!i||!!i.getTypes(!0,!0).filter(L=>{var S;return(S=this.weather)==null?void 0:S.isTypeDamageImmune(L)}).length||I(i)})}}this.scene.ui.showText(LQ(this.weather.weatherType),null,()=>{this.executeForAll(R=>VX(kS,R,this.weather)),super.start()})}};T(YF,"WeatherEffectPhase");let cG=YF;const pF=class pF extends kA{constructor(A,s){super(A),this.scene=A,this.order=s}start(){const A=this.scene.getField();for(const s of this.order)A[s].status&&A[s].status.isPostTurn()&&this.scene.unshiftPhase(new YT(this.scene,s));this.end()}};T(pF,"CheckStatusEffectPhase");let GG=pF;const yF=class yF extends YO{constructor(A){super(A)}getSpeedOrder(){const A=this.scene.getPlayerField().filter(i=>i.isActive()),s=this.scene.getEnemyField().filter(i=>i.isActive());let R=A.concat(s);this.scene.executeWithSeedOffset(()=>{R=AO(R)},this.scene.currentBattle.turn,this.scene.waveSeed);const I=new je(!1);return this.scene.arena.applyTags(Nl,!1,I),R.sort((i,a)=>{const L=(i==null?void 0:i.getEffectiveStat(B.SPD))??0,S=(a==null?void 0:a.getEffectiveStat(B.SPD))??0;return I.value?L-S:S-L}),R.map(i=>i.getFieldIndex()+(i.isPlayer()?Ct.PLAYER:Ct.ENEMY))}getCommandOrder(){let A=this.getSpeedOrder();const s={};return this.scene.getField(!0).filter(R=>R.summonData).map(R=>{const I=new je(!1),i=new je(!0);Et(WU,R,null,!1,I),Et(YU,R,null,!1,I,i),i.value&&this.scene.applyModifiers(Xi,R.isPlayer(),R,I),s[R.getBattlerIndex()]=I}),A=A.slice(0),A.sort((R,I)=>{const i=this.scene.currentBattle.turnCommands[R],a=this.scene.currentBattle.turnCommands[I];if((i==null?void 0:i.command)!==(a==null?void 0:a.command)){if((i==null?void 0:i.command)===vt.FIGHT)return 1;if((a==null?void 0:a.command)===vt.FIGHT)return-1}else if((i==null?void 0:i.command)===vt.FIGHT){const o=He[i.move.move],l=He[a.move.move],D=new Jt(o.priority),M=new Jt(l.priority);eA(Ia,this.scene.getField().find(G=>(G==null?void 0:G.isActive())&&G.getBattlerIndex()===R),null,o,D),eA(Ia,this.scene.getField().find(G=>(G==null?void 0:G.isActive())&&G.getBattlerIndex()===I),null,l,M),Et(zR,this.scene.getField().find(G=>(G==null?void 0:G.isActive())&&G.getBattlerIndex()===R),null,!1,o,D),Et(zR,this.scene.getField().find(G=>(G==null?void 0:G.isActive())&&G.getBattlerIndex()===I),null,!1,l,M);const c=Math.ceil(D.value)-Math.ceil(M.value)===0;if(D.value!==M.value)return c&&s[R].value!==s[I].value?s[R].value?-1:1:D.value<M.value?1:-1}if(s[R].value!==s[I].value)return s[R].value?-1:1;const L=A.indexOf(R),S=A.indexOf(I);return L<S?-1:L>S?1:0}),A}start(){var I;super.start();const A=this.scene.getField(),s=this.getCommandOrder();let R=0;for(const i of s){const a=A[i],L=this.scene.currentBattle.turnCommands[i];if(!(L!=null&&L.skip))switch(L==null?void 0:L.command){case vt.FIGHT:const S=L.move;if(a.turnData.order=R++,!S)continue;const o=a.getMoveset().find(M=>(M==null?void 0:M.moveId)===S.move&&(M==null?void 0:M.ppUsed)<(M==null?void 0:M.getMovePp()))||new ke(S.move);if(o.getMove().hasAttr(ZL)&&this.scene.unshiftPhase(new uG(this.scene,a,o)),a.isPlayer())if(L.cursor===-1)this.scene.pushPhase(new JA(this.scene,a,L.targets||L.move.targets,o));else{const M=new JA(this.scene,a,L.targets||L.move.targets,o,!1,S.ignorePP);this.scene.pushPhase(M)}else this.scene.pushPhase(new JA(this.scene,a,L.targets||L.move.targets,o,!1,S.ignorePP));break;case vt.BALL:this.scene.unshiftPhase(new UG(this.scene,L.targets[0]%2,L.cursor));break;case vt.POKEMON:const l=(I=L.args)!=null&&I[0]?xA.BATON_PASS:xA.SWITCH;this.scene.unshiftPhase(new EO(this.scene,l,a.getFieldIndex(),L.cursor,!0,a.isPlayer()));break;case vt.RUN:let D=a;if(this.scene.currentBattle.double){const M=A.filter(c=>{if(c)return c.isPlayer()&&c.isActive()});if(M.length>1){const c=M[0].getStat(B.SPD)>M[1].getStat(B.SPD)?M[0]:M[1],G=M.find(P=>P.hasAbility(O.RUN_AWAY));D=G!==void 0?G:c}}this.scene.unshiftPhase(new DG(this.scene,D.getFieldIndex()));break}}this.scene.pushPhase(new cG(this.scene)),this.scene.pushPhase(new MG(this.scene)),this.scene.pushPhase(new GG(this.scene,s)),this.scene.pushPhase(new hG(this.scene)),this.end()}};T(yF,"TurnStartPhase");let PG=yF;const wF=class wF extends YO{constructor(A){super(A)}start(){if(super.start(),this.scene.getPlayerField().forEach(A=>{if(A.isOnField()&&!A.isAllowedInBattle()){this.scene.queueMessage(U.t("challenges:illegalEvolution",{pokemon:A.name}),null,!0);const s=this.scene.getParty().filter(R=>R.isAllowedInBattle());s.length?s.length>=this.scene.currentBattle.getBattlerCount()||this.scene.currentBattle.double&&!s[0].isActive(!0)?A.switchOut():A.leaveField():(this.scene.clearPhaseQueue(),this.scene.unshiftPhase(new iO(this.scene))),s.length===1&&this.scene.currentBattle.double&&this.scene.unshiftPhase(new aO(this.scene,!0))}}),this.scene.eventTarget.dispatchEvent(new C0),A9(this.scene),E9(this.scene)){this.end();return}this.scene.getField().forEach((A,s)=>{A!=null&&A.isActive()&&(A.isPlayer()&&this.scene.currentBattle.addParticipant(A),A.resetTurnData(),this.scene.pushPhase(A.isPlayer()?new HT(this.scene,s):new CG(this.scene,s-Ct.ENEMY)))}),this.scene.pushPhase(new PG(this.scene)),this.end()}};T(wF,"TurnInitPhase");let _G=wF;var Xa=(E=>(E[E.DEFAULT=0]="DEFAULT",E[E.ONLY_LEVEL_UP=1]="ONLY_LEVEL_UP",E[E.SKIP=2]="SKIP",E))(Xa||{});const VF=class VF extends lL{constructor(A,s,R,I){super(A,s),this.lastLevel=R,this.level=I,this.scene=A}start(){super.start(),this.level>this.scene.gameData.gameStats.highestLevel&&(this.scene.gameData.gameStats.highestLevel=this.level),this.scene.validateAchvs(Qa,new $e(this.level));const A=this.getPokemon(),s=A.stats.slice(0);if(A.calculateStats(),A.updateInfo(),this.scene.expParty===Xa.DEFAULT?(this.scene.playSound("level_up_fanfare"),this.scene.ui.showText(U.t("battle:levelUp",{pokemonName:b(this.getPokemon()),level:this.level}),null,()=>this.scene.ui.getMessageHandler().promptLevelUpStats(this.partyMemberIndex,s,!1).then(()=>this.end()),null,!0)):this.scene.expParty===Xa.SKIP?this.end():this.scene.ui.getMessageHandler().promptLevelUpStats(this.partyMemberIndex,s,!1).then(()=>this.end()),this.lastLevel<100){const R=this.getPokemon().getLevelMoves(this.lastLevel+1);for(const I of R)this.scene.unshiftPhase(new Wn(this.scene,this.partyMemberIndex,I[1]))}if(!A.pauseEvolutions){const R=A.getEvolution();R&&this.scene.unshiftPhase(new ZT(this.scene,A,R,this.lastLevel))}}};T(VF,"LevelUpPhase");let QT=VF;const vF=class vF extends lL{constructor(A,s,R){super(A,s),this.expValue=R}start(){super.start();const A=this.getPokemon(),s=new $e(this.expValue);this.scene.applyModifiers(KL,!0,s),s.value=Math.floor(s.value),this.scene.ui.showText(U.t("battle:expGain",{pokemonName:b(A),exp:s.value}),null,()=>{const R=A.level;A.addExp(s.value);const I=A.level;I>R&&this.scene.unshiftPhase(new QT(this.scene,this.partyMemberIndex,R,I)),A.updateInfo().then(()=>this.end())},null,!0)}};T(vF,"ExpPhase");let HG=vF;const xF=class xF extends LE{constructor(A){super(A)}start(){super.start(),this.scene.partyExpBar.hide().then(()=>this.end())}};T(xF,"HidePartyExpBarPhase");let dG=xF;const bF=class bF extends lL{constructor(A,s,R){super(A,s),this.expValue=R}start(){super.start();const A=this.getPokemon(),s=new $e(this.expValue);this.scene.applyModifiers(KL,!0,s),s.value=Math.floor(s.value);const R=A.level;A.addExp(s.value);const I=A.level;I>R&&this.scene.unshiftPhase(new QT(this.scene,this.partyMemberIndex,R,I)),this.scene.unshiftPhase(new dG(this.scene)),A.updateInfo(),this.scene.expParty===Xa.SKIP?this.end():this.scene.expParty===Xa.ONLY_LEVEL_UP?I>R?this.scene.partyExpBar.showPokemonExp(A,s.value,this.scene.expParty===Xa.ONLY_LEVEL_UP,I).then(()=>{setTimeout(()=>this.end(),800/Math.pow(2,this.scene.expGainsSpeed))}):this.end():this.scene.expGainsSpeed<ba.SKIP?this.scene.partyExpBar.showPokemonExp(A,s.value,!1,I).then(()=>{setTimeout(()=>this.end(),500/Math.pow(2,this.scene.expGainsSpeed))}):this.end()}};T(bF,"ShowPartyExpBarPhase");let fG=bF;const _s=!1,$v=(Array.isArray(Ge.OPP_IVS_OVERRIDE)?Ge.OPP_IVS_OVERRIDE:new Array(6).fill(Ge.OPP_IVS_OVERRIDE)).map(E=>isNaN(E)||E===null||E>31?-1:E),Gr=Ge.STARTING_WAVE_OVERRIDE||1,Uu=[];let js;const kF=class kF extends sl{constructor(){super("battle"),this.sessionPlayTime=null,this.lastSavePlayTime=null,this.masterVolume=.5,this.bgmVolume=1,this.fieldVolume=1,this.seVolume=1,this.uiVolume=1,this.gameSpeed=1,this.damageNumbersMode=0,this.reroll=!1,this.shopCursorTarget=_n.REWARDS,this.showMovesetFlyout=!0,this.showArenaFlyout=!0,this.showTimeOfDayWidget=!0,this.timeOfDayAnimation=vT.NONE,this.showLevelUpStats=!0,this.enableTutorials=!1,this.enableMoveInfo=!0,this.enableRetries=!1,this.hideIvs=!1,this.candyUpgradeNotification=0,this.candyUpgradeDisplay=0,this.moneyFormat=N0.NORMAL,this.uiTheme=bR.DEFAULT,this.windowType=0,this.experimentalSprites=!1,this.musicPreference=0,this.moveAnimations=!0,this.expGainsSpeed=ba.DEFAULT,this.skipSeenDialogues=!1,this.eggSkipPreference=0,this.expParty=0,this.hpBarSpeed=0,this.fusionPaletteSwaps=!0,this.enableTouchControls=!1,this.enableVibration=!1,this.showBgmBar=!0,this.battleStyle=h1.SWITCH,this.typeHints=!1,this.disableMenu=!1,this.mysteryEncounterSaveData=new CL,this.shopOverlayShown=!1,this.shopOverlayOpacity=.8,this.bgmCache=new Set,this.rngCounter=0,this.rngSeedOverride="",this.rngOffset=0,this.infoToggles=[],this.eventTarget=new EventTarget,this.phaseQueue=[],this.phaseQueuePrepend=[],this.conditionalQueue=[],this.phaseQueuePrependSpliceIndex=-1,this.nextCommandPhaseQueue=[],this.updateGameInfo()}loadPokemonAtlas(A,s,R){R===void 0&&(R=this.experimentalSprites);const I=s.includes("variant/")||/_[0-3]$/.test(s);R&&(R=this.hasExpSprite(A)),I&&(s=s.replace("variant/","")),this.load.atlas(A,`images/pokemon/${I?"variant/":""}${R?"exp/":""}${s}.png`,`images/pokemon/${I?"variant/":""}${R?"exp/":""}${s}.json`)}async preload(){AQ(),await this.initVariantData()}create(){this.scene.remove(eM.KEY),H9.apply(this),this.inputController=new RG(this),this.uiInputs=new OG(this,this.inputController),this.gameData=new GC(this),n8(this),this.load.setBaseURL(),this.spritePipeline=new qc(this.game),this.renderer.pipelines.add("Sprite",this.spritePipeline),this.fieldSpritePipeline=new SC(this.game),this.renderer.pipelines.add("FieldSprite",this.fieldSpritePipeline),this.eventManager=new Bc,this.launchBattle()}update(){var A;(A=this.ui)==null||A.update()}launchBattle(){this.arenaBg=this.add.sprite(0,0,"plains_bg"),this.arenaBg.setName("sprite-arena-bg"),this.arenaBgTransition=this.add.sprite(0,0,"plains_bg"),this.arenaBgTransition.setName("sprite-arena-bg-transition"),[this.arenaBgTransition,this.arenaBg].forEach(D=>{D.setPipeline(this.fieldSpritePipeline),D.setScale(6),D.setOrigin(0),D.setSize(320,240)});const A=this.add.container(0,0);A.setName("field"),A.setScale(6),this.field=A;const s=this.add.container(0,this.game.canvas.height);s.setName("field-ui"),s.setDepth(1),s.setScale(6),this.fieldUI=s;const R=this.make.rexTransitionImagePack({x:0,y:0,scale:6,key:"loading_bg",origin:{x:0,y:0}},!0);R.transit({mode:"blinds",ease:"Cubic.easeInOut",duration:1250}),R.once("complete",()=>{R.destroy()}),this.add.existing(R);const I=this.add.container(0,0);I.setName("ui"),I.setDepth(2),I.setScale(6),this.uiContainer=I;const i=this.game.canvas.width/6,a=this.game.canvas.height/6-48;this.fieldOverlay=this.add.rectangle(0,a*-1-48,i,a,4342338),this.fieldOverlay.setName("rect-field-overlay"),this.fieldOverlay.setOrigin(0,0),this.fieldOverlay.setAlpha(0),this.fieldUI.add(this.fieldOverlay),this.shopOverlay=this.add.rectangle(0,a*-1-48,i,a,460551),this.shopOverlay.setName("rect-shop-overlay"),this.shopOverlay.setOrigin(0,0),this.shopOverlay.setAlpha(0),this.fieldUI.add(this.shopOverlay),this.modifiers=[],this.enemyModifiers=[],this.modifierBar=new zT(this),this.modifierBar.setName("modifier-bar"),this.add.existing(this.modifierBar),I.add(this.modifierBar),this.enemyModifierBar=new zT(this,!0),this.enemyModifierBar.setName("enemy-modifier-bar"),this.add.existing(this.enemyModifierBar),I.add(this.enemyModifierBar),this.charSprite=new tG(this),this.charSprite.setName("sprite-char"),this.charSprite.setup(),this.fieldUI.add(this.charSprite),this.pbTray=new oC(this,!0),this.pbTray.setName("pb-tray"),this.pbTray.setup(),this.pbTrayEnemy=new oC(this,!1),this.pbTrayEnemy.setName("enemy-pb-tray"),this.pbTrayEnemy.setup(),this.fieldUI.add(this.pbTray),this.fieldUI.add(this.pbTrayEnemy),this.abilityBar=new $c(this),this.abilityBar.setName("ability-bar"),this.abilityBar.setup(),this.fieldUI.add(this.abilityBar),this.partyExpBar=new jc(this),this.partyExpBar.setName("party-exp-bar"),this.partyExpBar.setup(),this.fieldUI.add(this.partyExpBar),this.candyBar=new EG(this),this.candyBar.setName("candy-bar"),this.candyBar.setup(),this.fieldUI.add(this.candyBar),this.biomeWaveText=se(this,this.game.canvas.width/6-2,0,Gr.toString(),V.BATTLE_INFO),this.biomeWaveText.setName("text-biome-wave"),this.biomeWaveText.setOrigin(1,.5),this.fieldUI.add(this.biomeWaveText),this.moneyText=se(this,this.game.canvas.width/6-2,0,"",V.MONEY),this.moneyText.setName("text-money"),this.moneyText.setOrigin(1,.5),this.fieldUI.add(this.moneyText),this.scoreText=se(this,this.game.canvas.width/6-2,0,"",V.PARTY,{fontSize:"54px"}),this.scoreText.setName("text-score"),this.scoreText.setOrigin(1,.5),this.fieldUI.add(this.scoreText),this.luckText=se(this,this.game.canvas.width/6-2,0,"",V.PARTY,{fontSize:"54px"}),this.luckText.setName("text-luck"),this.luckText.setOrigin(1,.5),this.luckText.setVisible(!1),this.fieldUI.add(this.luckText),this.luckLabelText=se(this,this.game.canvas.width/6-2,0,U.t("common:luckIndicator"),V.PARTY,{fontSize:"54px"}),this.luckLabelText.setName("text-luck-label"),this.luckLabelText.setOrigin(1,.5),this.luckLabelText.setVisible(!1),this.fieldUI.add(this.luckLabelText),this.arenaFlyout=new IG(this),this.fieldUI.add(this.arenaFlyout),this.fieldUI.moveBelow(this.arenaFlyout,this.fieldOverlay),this.updateUIPositions(),this.damageNumberHandler=new AG,this.spriteSparkleHandler=new eG,this.spriteSparkleHandler.setup(this),this.pokemonInfoContainer=new gT(this,this.game.canvas.width/6+52,-(this.game.canvas.height/6)+66),this.pokemonInfoContainer.setup(),this.fieldUI.add(this.pokemonInfoContainer),this.party=[];const L=[];this.arenaPlayer=new wa(this,!0),this.arenaPlayer.setName("arena-player"),this.arenaPlayerTransition=new wa(this,!0),this.arenaPlayerTransition.setName("arena-player-transition"),this.arenaEnemy=new wa(this,!1),this.arenaEnemy.setName("arena-enemy"),this.arenaNextEnemy=new wa(this,!1),this.arenaNextEnemy.setName("arena-next-enemy"),this.arenaBgTransition.setVisible(!1),this.arenaPlayerTransition.setVisible(!1),this.arenaNextEnemy.setVisible(!1),[this.arenaPlayer,this.arenaPlayerTransition,this.arenaEnemy,this.arenaNextEnemy].forEach(D=>{D instanceof vA.GameObjects.Sprite&&D.setOrigin(0,0),A.add(D)});const S=this.addFieldSprite(0,0,`trainer_${this.gameData.gender===ct.FEMALE?"f":"m"}_back`);S.setOrigin(.5,1),S.setName("sprite-trainer"),A.add(S),this.trainer=S,this.anims.create({key:"prompt",frames:this.anims.generateFrameNumbers("prompt",{start:1,end:4}),frameRate:6,repeat:-1,showOnStart:!0}),this.anims.create({key:"tera_sparkle",frames:this.anims.generateFrameNumbers("tera_sparkle",{start:0,end:12}),frameRate:18,repeat:0,showOnStart:!0,hideOnComplete:!0}),this.reset(!1,!1,!0);const o=new Jc(this);this.uiContainer.add(o),this.ui=o,o.setup();const l=[t.TACKLE,t.TAIL_WHIP,t.FOCUS_ENERGY,t.STRUGGLE];Promise.all([Promise.all(L),XX(this).then(()=>$X(this,!0)),Promise.all([t.TACKLE,t.TAIL_WHIP,t.FOCUS_ENERGY,t.STRUGGLE].map(D=>jL(this,D))).then(()=>zL(this,l,!0)),this.initStarterColors()]).then(()=>{this.pushPhase(new lC(this)),this.pushPhase(new Yi(this)),this.shiftPhase()})}initSession(){this.sessionPlayTime===null&&(this.sessionPlayTime=0),this.lastSavePlayTime===null&&(this.lastSavePlayTime=0),this.playTimeTimer&&this.playTimeTimer.destroy(),this.playTimeTimer=this.time.addEvent({delay:Ve(1e3),repeat:-1,callback:T(()=>{this.gameData&&this.gameData.gameStats.playTime++,this.sessionPlayTime!==null&&this.sessionPlayTime++,this.lastSavePlayTime!==null&&this.lastSavePlayTime++},"callback")}),this.updateBiomeWaveText(),this.updateMoneyText(),this.updateScoreText()}async initExpSprites(){Uu.length||this.cachedFetch("./exp-sprites.json").then(A=>A.json()).then(A=>{Array.isArray(A)&&Uu.push(...A),Promise.resolve()})}async initVariantData(){Object.keys(Ys).forEach(A=>delete Ys[A]),await this.cachedFetch("./images/pokemon/variant/_masterlist.json").then(A=>A.json()).then(A=>{if(Object.keys(A).forEach(s=>Ys[s]=A[s]),this.experimentalSprites){const s=Ys.exp,R=T(I=>{let i=Ys,a=s;I.map((L,S)=>{S<I.length-1?(i=i[L],a=a[L]):i.hasOwnProperty(L)&&a.hasOwnProperty(L)&&(["back","female"].includes(L)?R(I.concat(L)):i[L]=a[L])})},"traverseVariantData");Object.keys(s).forEach(I=>R([I]))}Promise.resolve()})}cachedFetch(A,s){const R=this.game.manifest;if(R){const I=R[`/${A.replace("./","")}`];I&&(A+=`?t=${I}`)}return fetch(A,s)}initStarterColors(){return new Promise(A=>{if(js)return A();this.cachedFetch("./starter-colors.json").then(s=>s.json()).then(s=>{js={},Object.keys(s).forEach(R=>{js[R]=s[R]}),A()})})}hasExpSprite(A){const s=/^pkmn__?(back__)?(shiny__)?(female__)?(\d+)(\-.*?)?(?:_[1-3])?$/g.exec(A);if(!s)return!1;let R=s[4];return s[2]&&(R+="s"),s[1]&&(R+="b"),s[3]&&(R+="f"),s[5]&&(R+=s[5]),!!Uu.includes(R)}getParty(){return this.party}getPlayerPokemon(){return this.getPlayerField().find(A=>A.isActive())}getNonSwitchedPlayerPokemon(){return this.getPlayerField().find(A=>A.isActive()&&A.switchOutStatus===!1)}getPlayerField(){var s;const A=this.getParty();return A.slice(0,Math.min(A.length,(s=this.currentBattle)!=null&&s.double?2:1))}getEnemyParty(){var A;return((A=this.currentBattle)==null?void 0:A.enemyParty)??[]}getEnemyPokemon(){return this.getEnemyField().find(A=>A.isActive())}getNonSwitchedEnemyPokemon(){return this.getEnemyField().find(A=>A.isActive()&&A.switchOutStatus===!1)}getEnemyField(){var s;const A=this.getEnemyParty();return A.slice(0,Math.min(A.length,(s=this.currentBattle)!=null&&s.double?2:1))}getField(A=!1){const s=new Array(4).fill(null),R=this.getPlayerField(),I=this.getEnemyField();return s.splice(0,R.length,...R),s.splice(2,I.length,...I),A?s.filter(i=>i==null?void 0:i.isActive()):s}redirectPokemonMoves(A,s){if(this.currentBattle.double!==!1&&s!=null&&s.isActive(!0)){let R;do R=this.findPhase(I=>I instanceof JA&&I.targets.length===1&&I.targets[0]===A.getBattlerIndex()&&I.pokemon.isPlayer()!==s.isPlayer()),R&&R.targets[0]!==s.getBattlerIndex()&&(R.targets[0]=s.getBattlerIndex());while(R)}}getModifierBar(A){return A?this.enemyModifierBar:this.modifierBar}addInfoToggle(A){this.infoToggles.push(A)}getInfoToggles(A=!1){return A?this.infoToggles.filter(s=>s==null?void 0:s.isActive()):this.infoToggles}getPokemonById(A){const s=T(R=>R.find(I=>I.id===A),"findInParty");return(s(this.getParty())||s(this.getEnemyParty()))??null}addPlayerPokemon(A,s,R,I,i,a,L,S,o,l,D){const M=new Ss(this,A,s,R,I,i,a,L,S,o,l);return D&&D(M),M.init(),M}addEnemyPokemon(A,s,R,I=!1,i,a){Ge.OPP_LEVEL_OVERRIDE>0&&(s=Ge.OPP_LEVEL_OVERRIDE),Ge.OPP_SPECIES_OVERRIDE&&(A=Ke(Ge.OPP_SPECIES_OVERRIDE),I=this.getEncounterBossSegments(this.currentBattle.waveIndex,s,A)>1);const L=new es(this,A,s,R,I,i);if(Ge.OPP_FUSION_OVERRIDE&&L.generateFusionSpecies(),m1(this,!1),W1(this,L,!1),I&&!i){const S=N1(le(4294967296));for(let o=0;o<L.ivs.length;o++)L.ivs[o]=Math.round(vA.Math.Linear(Math.min(L.ivs[o],S[o]),Math.max(L.ivs[o],S[o]),.75))}a&&a(L);for(let S=0;S<L.ivs.length;S++)$v[S]>-1&&(L.ivs[S]=$v[S]);return L.init(),L}removePokemonFromPlayerParty(A,s=!0){if(!A)return;const R=this.party.indexOf(A);this.party.splice(R,1),s&&(this.field.remove(A,!0),A.destroy()),this.updateModifiers(!0)}addPokemonIcon(A,s,R,I=.5,i=.5,a=!1){const L=this.add.container(s,R);L.setName(`${A.name}-icon`);const S=this.add.sprite(0,0,A.getIconAtlasKey(a));if(S.setName(`sprite-${A.name}-icon`),S.setFrame(A.getIconId(!0)),S.frame.name!==A.getIconId(!0)){`${A.name}`;const o=A.shiny;A.shiny=!1,S.setTexture(A.getIconAtlasKey(a)),S.setFrame(A.getIconId(!0)),A.shiny=o}if(S.setOrigin(.5,0),L.add(S),A.isFusion()){const o=this.add.sprite(0,0,A.getFusionIconAtlasKey(a));o.setName("sprite-fusion-icon"),o.setOrigin(.5,0),o.setFrame(A.getFusionIconId(!0));const l=S.width,D=S.height,M=S.frame,c=(S.frame.cutHeight<=o.frame.cutHeight?Math.ceil:Math.floor)((S.frame.cutHeight+o.frame.cutHeight)/4),G=`${S.frame.name}f${o.frame.name}`;S.frame.texture.has(G)||S.frame.texture.add(G,S.frame.sourceIndex,S.frame.cutX,S.frame.cutY,S.frame.cutWidth,c),S.setFrame(G),o.y=S.frame.cutHeight;const P=o.frame,_=o.frame.cutY+S.frame.cutHeight,g=o.frame.cutHeight-S.frame.cutHeight,H=`${o.frame.name}f${S.frame.name}`;o.frame.texture.has(H)||o.frame.texture.add(H,o.frame.sourceIndex,o.frame.cutX,_,o.frame.cutWidth,g),o.setFrame(H);const F=(M.y+P.y)/2;S.frame.y=o.frame.y=F,L.add(o),I!==.5&&(L.x-=l*(I-.5)),i!==0&&(L.y-=D*i)}else I!==.5&&(L.x-=S.width*(I-.5)),i!==0&&(L.y-=S.height*i);return L}setSeed(A){this.seed=A,this.rngCounter=0,this.waveCycleOffset=this.getGeneratedWaveCycleOffset(),this.offsetGym=this.gameMode.isClassic&&this.getGeneratedOffsetGym()}randBattleSeedInt(A,s=0){var R;return(R=this.currentBattle)==null?void 0:R.randSeedInt(this,A,s)}reset(A=!1,s=!1,R=!1){var I,i,a;s&&(this.gameData=new GC(this)),this.gameMode=Tl(tA.CLASSIC),this.disableMenu=!1,this.score=0,this.money=0,this.lockModifierTiers=!1,this.pokeballCounts=Object.fromEntries(IE(ge).filter(L=>L<=ge.MASTER_BALL).map(L=>[L,0])),this.pokeballCounts[ge.POKEBALL]+=5,Ge.POKEBALL_OVERRIDE.active&&(this.pokeballCounts=Ge.POKEBALL_OVERRIDE.pokeballs),this.modifiers=[],this.enemyModifiers=[],this.modifierBar.removeAll(!0),this.enemyModifierBar.removeAll(!0);for(const L of this.getParty())L.destroy();this.party=[];for(const L of this.getEnemyParty())L.destroy();if((i=(I=this.currentBattle)==null?void 0:I.mysteryEncounter)!=null&&i.introVisuals&&this.field.remove((a=this.currentBattle.mysteryEncounter)==null?void 0:a.introVisuals,!0),this.currentBattle=null,this.setSeed(Ge.SEED_OVERRIDE||BM(24)),this.seed,this.resetSeed(),this.biomeWaveText.setText(Gr.toString()),this.biomeWaveText.setVisible(!1),this.updateMoneyText(),this.moneyText.setVisible(!1),this.updateScoreText(),this.scoreText.setVisible(!1),[this.luckLabelText,this.luckText].map(L=>L.setVisible(!1)),this.newArena(Ge.STARTING_BIOME_OVERRIDE||r.TOWN),this.field.setVisible(!0),this.arenaBgTransition.setPosition(0,0),this.arenaPlayer.setPosition(300,0),this.arenaPlayerTransition.setPosition(0,0),[this.arenaEnemy,this.arenaNextEnemy].forEach(L=>L.setPosition(-280,0)),this.arenaNextEnemy.setVisible(!1),this.arena.init(),this.trainer.setTexture(`trainer_${this.gameData.gender===ct.FEMALE?"f":"m"}_back`),this.trainer.setPosition(406,186),this.trainer.setVisible(!0),this.mysteryEncounterSaveData=new CL,this.updateGameInfo(),R){const L=[...MR,...He,...jA,...IE(FE).map(S=>PT(S)).map(S=>Object.values(S).flat().map(o=>o.modifierType).filter(o=>"localize"in o).map(o=>o)).flat()];for(const S of L)S.localize()}A&&(this.initVariantData(),this.fadeOutBgm(250,!1),this.tweens.add({targets:[this.uiContainer],alpha:0,duration:250,ease:"Sine.easeInOut",onComplete:T(()=>{this.clearPhaseQueue(),this.children.removeAll(!0),this.game.domContainer.innerHTML="",this.launchBattle()},"onComplete")}))}getDoubleBattleChance(A,s){const R=new Jt(A%10===0?32:8);return this.applyModifiers(cL,!0,R),s.forEach(I=>Et(Ja,I,null,!1,R)),Math.max(R.value,1)}newBattle(A,s,R,I,i){var P;const a=Ge.STARTING_WAVE_OVERRIDE||Gr,L=A||(((P=this.currentBattle)==null?void 0:P.waveIndex)||a-1)+1;let S,o,l,D=null;this.resetSeed(L);const M=this.getPlayerField();if(this.gameMode.isFixedBattle(L)&&R===void 0)D=this.gameMode.getFixedBattle(L),S=D.double,o=D.battleType,this.executeWithSeedOffset(()=>l=D==null?void 0:D.getTrainer(this),(D.seedOffsetWaveIndex||L)<<8),l&&this.field.add(l);else{if(this.gameMode.hasTrainers?s===void 0?o=this.gameMode.isWaveTrainer(L,this.arena)?Nt.TRAINER:Nt.WILD:o=s:o=Nt.WILD,o===Nt.TRAINER){const _=this.arena.randomTrainerType(L);let g=!1;BA[_].doubleOnly?g=!0:BA[_].hasDouble&&(g=!le(this.getDoubleBattleChance(L,M)),BA[_].trainerTypeDouble&&![C.TATE,C.LIZA].includes(_)&&(g=!1));const H=g?bt.DOUBLE:le(2)?bt.FEMALE:bt.DEFAULT;l=R!==void 0?R.toTrainer(this):new is(this,_,H),this.field.add(l)}(this.isWaveMysteryEncounter(o,L)||o===Nt.MYSTERY_ENCOUNTER)&&(o=Nt.MYSTERY_ENCOUNTER,this.mysteryEncounterSaveData.encounterSpawnChance=m6)}I===void 0&&L>1?o===Nt.WILD&&!this.gameMode.isWaveFinal(L)?S=!le(this.getDoubleBattleChance(L,M)):o===Nt.TRAINER&&(S=(l==null?void 0:l.variant)===bt.DOUBLE):D||(S=!!I),Ge.BATTLE_TYPE_OVERRIDE==="double"&&(S=!0),o!==Nt.TRAINER&&Ge.BATTLE_TYPE_OVERRIDE==="single"&&(S=!1);const c=this.currentBattle;c!=null&&c.double&&!S&&this.tryRemovePhase(_=>_ instanceof pi);const G=this.getMaxExpLevel();if(this.lastEnemyTrainer=(c==null?void 0:c.trainer)??null,this.lastMysteryEncounter=c==null?void 0:c.mysteryEncounter,this.executeWithSeedOffset(()=>{this.currentBattle=new rh(this.gameMode,L,o,l,S)},L<<3,this.waveSeed),this.currentBattle.incrementTurn(this),o===Nt.MYSTERY_ENCOUNTER&&(this.currentBattle.double=!1,this.currentBattle.mysteryEncounterType=i),!A&&c){const _=!(c.waveIndex%10),g=this.gameMode.hasShortBiomes||this.gameMode.isDaily,H=this.gameMode.hasShortBiomes&&c.waveIndex%5===0,F=c.waveIndex%50===49,p=_||H||g&&F,v=p||[Nt.TRAINER,Nt.MYSTERY_ENCOUNTER].includes(this.currentBattle.battleType)||this.currentBattle.battleSpec===eE.FINAL_BOSS;if(this.getEnemyParty().forEach(k=>k.destroy()),this.trySpreadPokerus(),!p&&L%10===5&&this.arena.updatePoolsForTimeOfDay(),v){this.arena.resetArenaEffects(),M.forEach((k,j)=>{k.isOnField()&&this.pushPhase(new LL(this,j))});for(const k of this.getParty())k.resetBattleData(),eb(WL,k);this.trainer.visible||this.pushPhase(new AC(this))}for(const k of this.getParty())this.triggerPokemonFormChange(k,p0);!this.gameMode.hasRandomBiomes&&!p?this.pushPhase(new CC(this)):(this.pushPhase(new lG(this)),this.pushPhase(new NG(this)),this.getMaxExpLevel()>G&&this.pushPhase(new iG(this)))}return this.currentBattle}newArena(A){return this.arena=new zD(this,A,r[A].toLowerCase()),this.eventTarget.dispatchEvent(new D0),this.arenaBg.pipelineData={terrainColorRatio:this.arena.getBgTerrainColorRatioForBiome()},this.arena}updateFieldScale(){return new Promise(A=>{const s=Math.floor(Math.pow(1/this.getField(!0).map(R=>R.getSpriteScale()).reduce((R,I)=>R=Math.max(I,R),0),.7)*40)/40;this.setFieldScale(s).then(()=>A())})}setFieldScale(A,s=!1){return new Promise(R=>{if(A*=6,this.field.scale===A)return R();const I=this.arenaBg.width*6,i=132*6,a=this.arenaBg.width*A,L=132*A;this.tweens.add({targets:this.field,scale:A,x:(I-a)/2,y:i-L,duration:s?0:Ve(Math.abs(this.field.scale-A)*200),ease:"Sine.easeInOut",onComplete:T(()=>R(),"onComplete")})})}getSpeciesFormIndex(A,s,R,I){var i;if(!((i=A.forms)!=null&&i.length))return 0;switch(A.speciesId){case e.UNOWN:case e.SHELLOS:case e.GASTRODON:case e.BASCULIN:case e.DEERLING:case e.SAWSBUCK:case e.FROAKIE:case e.FROGADIER:case e.SCATTERBUG:case e.SPEWPA:case e.VIVILLON:case e.FLABEBE:case e.FLOETTE:case e.FLORGES:case e.FURFROU:case e.PUMPKABOO:case e.GOURGEIST:case e.ORICORIO:case e.MAGEARNA:case e.ZARUDE:case e.SQUAWKABILLY:case e.TATSUGIRI:case e.PALDEA_TAUROS:return le(A.forms.length);case e.PIKACHU:return le(8);case e.EEVEE:return le(2);case e.GRENINJA:return le(2);case e.ZYGARDE:return le(4);case e.MINIOR:return le(7);case e.ALCREMIE:return le(9);case e.MEOWSTIC:case e.INDEEDEE:case e.BASCULEGION:case e.OINKOLOGNE:return s===ye.FEMALE?1:0;case e.TOXTRICITY:const a=[be.LONELY,be.BOLD,be.RELAXED,be.TIMID,be.SERIOUS,be.MODEST,be.MILD,be.QUIET,be.BASHFUL,be.CALM,be.GENTLE,be.CAREFUL];return R!==void 0&&a.indexOf(R)>-1?1:0;case e.GIMMIGHOUL:return this.gameMode.hasMysteryEncounters?1:le(A.forms.length)}if(I){switch(A.speciesId){case e.BURMY:case e.WORMADAM:case e.ROTOM:case e.LYCANROC:return le(A.forms.length)}return 0}return this.arena.getSpeciesFormIndex(A)}getGeneratedOffsetGym(){let A=!1;return this.executeWithSeedOffset(()=>{A=!le(2)},0,this.seed.toString()),A}getGeneratedWaveCycleOffset(){let A=0;return this.executeWithSeedOffset(()=>{A=le(8)*5},0,this.seed.toString()),A}getEncounterBossSegments(A,s,R,I=!1){if(Ge.OPP_HEALTH_SEGMENTS_OVERRIDE>1)return Ge.OPP_HEALTH_SEGMENTS_OVERRIDE;if(Ge.OPP_HEALTH_SEGMENTS_OVERRIDE===1)return 0;if(this.gameMode.isDaily&&this.gameMode.isWaveFinal(A))return 5;let i;if(I||R&&(R.subLegendary||R.legendary||R.mythical)?i=!0:this.executeWithSeedOffset(()=>{i=A%10===0||this.gameMode.hasRandomBosses&&le(100)<Math.min(Math.max(Math.ceil((A-250)/50),0)*2,30)},A<<2),!i)return 0;let a=2;return s>=100&&a++,R&&R.baseTotal>=670&&a++,a+=Math.floor(A/250),a}trySpreadPokerus(){const A=this.getParty(),s=[],R=T((I,i)=>{const a=A[I+i];!a.pokerus&&!le(10)&&(a.pokerus=!0,s.push(I+i))},"spread");A.forEach((I,i)=>{!I.pokerus||s.indexOf(i)>-1||this.executeWithSeedOffset(()=>{i&&R(i,-1),i<A.length-1&&R(i,1)},this.currentBattle.waveIndex+(i<<8))})}resetSeed(A){var R;const s=A||((R=this.currentBattle)==null?void 0:R.waveIndex)||0;this.waveSeed=L0(this.seed,s),vA.Math.RND.sow([this.waveSeed]),this.waveSeed,this.rngCounter=0}executeWithSeedOffset(A,s,R){if(!A)return;const I=this.rngCounter,i=this.rngOffset,a=this.rngSeedOverride,L=vA.Math.RND.state();vA.Math.RND.sow([L0(R||this.seed,s)]),this.rngCounter=0,this.rngOffset=s,this.rngSeedOverride=R||"",A(),vA.Math.RND.state(L),this.rngCounter=I,this.rngOffset=i,this.rngSeedOverride=a}addFieldSprite(A,s,R,I,i=0){const a=this.add.sprite(A,s,R,I);return a.setPipeline(this.fieldSpritePipeline),i&&(a.pipelineData.terrainColorRatio=i),a}addPokemonSprite(A,s,R,I,i,a=!1,L=!1){const S=this.addFieldSprite(s,R,I,i);return this.initPokemonSprite(S,A,a,L),S}initPokemonSprite(A,s,R=!1,I=!1){return A.setPipeline(this.spritePipeline,{tone:[0,0,0,0],hasShadow:R,ignoreOverride:I,teraColor:s?DR(s.getTeraType()):void 0}),this.spriteSparkleHandler.add(A),A}moveBelowOverlay(A){this.fieldUI.moveBelow(A,this.fieldOverlay)}processInfoButton(A){this.arenaFlyout.toggleFlyout(A)}showFieldOverlay(A){return new Promise(s=>{this.tweens.add({targets:this.fieldOverlay,alpha:.5,ease:"Sine.easeOut",duration:A,onComplete:T(()=>s(),"onComplete")})})}hideFieldOverlay(A){return new Promise(s=>{this.tweens.add({targets:this.fieldOverlay,alpha:0,duration:A,ease:"Cubic.easeIn",onComplete:T(()=>s(),"onComplete")})})}updateShopOverlayOpacity(A){this.shopOverlayOpacity=A,this.shopOverlayShown&&this.shopOverlay.setAlpha(this.shopOverlayOpacity)}showShopOverlay(A){return this.shopOverlayShown=!0,new Promise(s=>{this.tweens.add({targets:this.shopOverlay,alpha:this.shopOverlayOpacity,ease:"Sine.easeOut",duration:A,onComplete:T(()=>s(),"onComplete")})})}hideShopOverlay(A){return this.shopOverlayShown=!1,new Promise(s=>{this.tweens.add({targets:this.shopOverlay,alpha:0,duration:A,ease:"Cubic.easeIn",onComplete:T(()=>s(),"onComplete")})})}showEnemyModifierBar(){this.enemyModifierBar.setVisible(!0)}hideEnemyModifierBar(){this.enemyModifierBar.setVisible(!1)}updateBiomeWaveText(){const A=!(this.currentBattle.waveIndex%10),s=JL(this.arena.biomeType);this.fieldUI.moveAbove(this.biomeWaveText,this.luckText),this.biomeWaveText.setText(s+" - "+this.currentBattle.waveIndex.toString()),this.biomeWaveText.setColor(A?"#f89890":"#ffffff"),this.biomeWaveText.setShadowColor(A?"#984038":"#636363"),this.biomeWaveText.setVisible(!0)}updateMoneyText(A=!0){if(this.money===void 0)return;const s=To(this.moneyFormat,this.money);this.moneyText.setText(U.t("battleScene:moneyOwned",{formattedMoney:s})),this.fieldUI.moveAbove(this.moneyText,this.luckText),A&&this.moneyText.setVisible(!0)}animateMoneyChanged(A){if(this.tweens.getTweensOf(this.moneyText).length>0)return;const s=this.moneyText.scale*.14*(A?1:-1);this.moneyText.setShadowColor(A?"#008000":"#FF0000"),this.tweens.add({targets:this.moneyText,duration:250,scale:this.moneyText.scale+s,loop:0,yoyo:!0,onComplete:T(R=>this.moneyText.setShadowColor(zt(V.MONEY,!0)),"onComplete")})}updateScoreText(){this.scoreText.setText(`Score: ${this.score.toString()}`),this.scoreText.setVisible(this.gameMode.isDaily)}updateAndShowText(A){const s=[this.luckLabelText,this.luckText];s.forEach(I=>I.setAlpha(0));const R=BI(this.getParty());this.luckText.setText(r6(R)),R<14?this.luckText.setTint(N6(R)):this.luckText.setTint(16772956,4718441,7039999,16738665),this.luckLabelText.setX(this.game.canvas.width/6-2-(this.luckText.displayWidth+2)),this.tweens.add({targets:s,duration:A,alpha:1,onComplete:T(()=>{s.forEach(I=>I.setVisible(!0))},"onComplete")})}hideLuckText(A){if(this.reroll)return;const s=[this.luckLabelText,this.luckText];this.tweens.add({targets:s,duration:A,alpha:0,onComplete:T(()=>{s.forEach(R=>R.setVisible(!1))},"onComplete")})}updateUIPositions(){var I;const A=this.enemyModifiers.filter(i=>i.isIconVisible(this)).length,s=this.biomeWaveText.getBottomLeft().y-this.biomeWaveText.getTopLeft().y;this.biomeWaveText.setY(-(this.game.canvas.height/6)+(A?A<=12?15:24:0)+s/2),this.moneyText.setY(this.biomeWaveText.y+10),this.scoreText.setY(this.moneyText.y+10),[this.luckLabelText,this.luckText].map(i=>i.setY((this.scoreText.visible?this.scoreText:this.moneyText).y+10));const R=(this.scoreText.visible?this.scoreText:this.moneyText).y+15;this.partyExpBar.setY(R),this.candyBar.setY(R+15),(I=this.ui)==null||I.achvBar.setY(this.game.canvas.height/6+R)}sendTextToBack(){this.fieldUI.sendToBack(this.biomeWaveText),this.fieldUI.sendToBack(this.moneyText),this.fieldUI.sendToBack(this.scoreText)}addFaintedEnemyScore(A){let s=A.getSpeciesForm().getBaseExp()*(A.level/this.getMaxExpLevel())*(A.ivs.reduce((R,I)=>I+=R,0)/93*.2+.8);this.findModifiers(R=>R instanceof at&&R.pokemonId===A.id,!1).map(R=>s*=R.getScoreMultiplier()),A.isBoss()&&(s*=Math.sqrt(A.bossSegments)),this.currentBattle.battleScore+=Math.ceil(s)}getMaxExpLevel(A){var i;if(A)return Number.MAX_SAFE_INTEGER;const s=Math.ceil((((i=this.currentBattle)==null?void 0:i.waveIndex)||1)/10)*10,R=this.gameMode.getWaveForDifficulty(s),I=(1+R/2+Math.pow(R/25,2))*1.2;return Math.ceil(I/2)*2+2}randomSpecies(A,s,R,I,i){if(R)return this.arena.randomSpecies(A,s,void 0,BI(this.party));const a=I?[...new Set(MR.filter(L=>L.isCatchable()).filter(I).map(L=>{if(!i)for(;KA.hasOwnProperty(L.speciesId);)L=Ke(KA[L.speciesId]);return L}))]:MR.filter(L=>L.isCatchable());return a[le(a.length)]}generateRandomBiome(A){const s=A%250,R=IE(r).slice(1,IE(r).filter(o=>o>=40).length*-1),I=hO[r.END][0]-2,i=new Array(I+1).fill(null).map((o,l)=>(1-Math.min(Math.abs(l/(I-1)-s/250)+.25,1))/.75*250),a=[];let L=0;for(const o of R)L+=Math.ceil(i[hO[o][0]-1]/hO[o][1]),a.push(L);const S=le(L);for(const o of R)if(S<a[o])return o;return R[le(R.length)]}isBgmPlaying(){return this.bgm&&this.bgm.isPlaying}playBgm(A,s){var a,L;if(A===void 0&&(A=((a=this.currentBattle)==null?void 0:a.getBgmOverride(this))||((L=this.arena)==null?void 0:L.bgm)),this.bgm&&A===this.bgm.key){this.bgm.isPlaying||this.bgm.play({volume:this.masterVolume*this.bgmVolume});return}s&&!this.bgm&&(s=!1),this.bgmCache.add(A),this.loadBgm(A);let R=0;R=A===this.arena.bgm?this.arena.getBgmLoopPoint():this.getBgmLoopPoint(A);let I=!1;const i=T(()=>{if(this.ui.bgmBar.setBgmToBgmBar(A),A===null&&this.bgm&&!this.bgm.pendingRemove){this.bgm.play({volume:this.masterVolume*this.bgmVolume});return}this.bgm&&!this.bgm.pendingRemove&&this.bgm.isPlaying&&this.bgm.stop(),this.bgm=this.sound.add(A,{loop:!0}),this.bgm.play({volume:this.masterVolume*this.bgmVolume}),R&&this.bgm.on("looped",()=>this.bgm.play({seek:R}))},"playNewBgm");if(this.load.once(vA.Loader.Events.COMPLETE,()=>{I=!0,(!s||!this.bgm.isPlaying)&&i()}),s){const S=T(()=>{I&&(!this.bgm.isPlaying||this.bgm.pendingRemove)&&i()},"onBgmFaded");this.time.delayedCall(this.fadeOutBgm(500,!0)?750:250,S)}this.load.isLoading()||this.load.start()}pauseBgm(){return this.bgm&&!this.bgm.pendingRemove&&this.bgm.isPlaying?(this.bgm.pause(),!0):!1}resumeBgm(){return this.bgm&&!this.bgm.pendingRemove&&this.bgm.isPaused?(this.bgm.resume(),!0):!1}updateSoundVolume(){if(this.sound)for(const A of this.sound.getAllPlaying())if(this.bgmCache.has(A.key))A.setVolume(this.masterVolume*this.bgmVolume);else{const s=A.key.split("/");switch(s[0]){case"battle_anims":case"cry":s[1].startsWith("PRSFX- ")?A.setVolume(this.masterVolume*this.fieldVolume*.5):A.setVolume(this.masterVolume*this.fieldVolume);break;case"se":case"ui":A.setVolume(this.masterVolume*this.seVolume)}}}fadeOutBgm(A=500,s=!0){return this.bgm&&this.sound.getAllPlaying().find(I=>I.key===this.bgm.key)?(wR.fadeOut(this,this.bgm,A,s),!0):!1}fadeAndSwitchBgm(A,s=!1,R=2e3){this.fadeOutBgm(R,s),this.time.delayedCall(R,()=>{this.playBgm(A)})}playSound(A,s){const R=typeof A=="string"?A:A.key;s=s??{};try{const I=R.split("/");switch(s.volume=s.volume??1,I[0]){case"level_up_fanfare":case"item_fanfare":case"minor_fanfare":case"heal":case"evolution":case"evolution_fanfare":s.volume*=this.masterVolume*this.bgmVolume;break;case"battle_anims":case"cry":s.volume*=this.masterVolume*this.fieldVolume,I[1].startsWith("PRSFX- ")&&(s.volume*=.5);break;case"ui":s.volume*=this.masterVolume*this.uiVolume;break;case"se":s.volume*=this.masterVolume*this.seVolume;break}return this.sound.play(R,s),this.sound.get(R)}catch{return A}}playSoundWithoutBgm(A,s){this.bgmCache.add(A);const R=this.pauseBgm();this.playSound(A);const I=this.sound.get(A);return this.bgmResumeTimer&&this.bgmResumeTimer.destroy(),R&&(this.bgmResumeTimer=this.time.delayedCall(s||Ve(I.totalDuration*1e3),()=>{this.resumeBgm(),this.bgmResumeTimer=null})),I}getBgmLoopPoint(A){switch(A){case"battle_kanto_champion":return 13.95;case"battle_johto_champion":return 23.498;case"battle_hoenn_champion_g5":return 11.328;case"battle_hoenn_champion_g6":return 11.762;case"battle_sinnoh_champion":return 12.235;case"battle_champion_alder":return 27.653;case"battle_champion_iris":return 10.145;case"battle_kalos_champion":return 10.38;case"battle_alola_champion":return 13.025;case"battle_galar_champion":return 61.635;case"battle_champion_geeta":return 37.447;case"battle_champion_nemona":return 14.914;case"battle_champion_kieran":return 7.206;case"battle_hoenn_elite":return 11.35;case"battle_unova_elite":return 17.73;case"battle_kalos_elite":return 12.34;case"battle_alola_elite":return 19.212;case"battle_galar_elite":return 164.069;case"battle_paldea_elite":return 12.77;case"battle_bb_elite":return 19.434;case"battle_final_encounter":return 19.159;case"battle_final":return 16.453;case"battle_kanto_gym":return 13.857;case"battle_johto_gym":return 12.911;case"battle_hoenn_gym":return 12.379;case"battle_sinnoh_gym":return 13.122;case"battle_unova_gym":return 19.145;case"battle_kalos_gym":return 44.81;case"battle_galar_gym":return 171.262;case"battle_paldea_gym":return 127.489;case"battle_legendary_kanto":return 32.966;case"battle_legendary_raikou":return 12.632;case"battle_legendary_entei":return 2.905;case"battle_legendary_suicune":return 12.636;case"battle_legendary_lugia":return 19.77;case"battle_legendary_ho_oh":return 17.668;case"battle_legendary_regis_g5":return 49.5;case"battle_legendary_regis_g6":return 21.13;case"battle_legendary_gro_kyo":return 10.547;case"battle_legendary_rayquaza":return 10.495;case"battle_legendary_deoxys":return 13.333;case"battle_legendary_lake_trio":return 16.887;case"battle_legendary_sinnoh":return 22.77;case"battle_legendary_dia_pal":return 16.009;case"battle_legendary_origin_forme":return 18.961;case"battle_legendary_giratina":return 10.451;case"battle_legendary_arceus":return 9.595;case"battle_legendary_unova":return 13.855;case"battle_legendary_kyurem":return 18.314;case"battle_legendary_res_zek":return 18.329;case"battle_legendary_xern_yvel":return 26.468;case"battle_legendary_tapu":return 0;case"battle_legendary_sol_lun":return 6.525;case"battle_legendary_ub":return 9.818;case"battle_legendary_dusk_dawn":return 5.211;case"battle_legendary_ultra_nec":return 10.344;case"battle_legendary_zac_zam":return 11.424;case"battle_legendary_glas_spec":return 12.503;case"battle_legendary_calyrex":return 50.641;case"battle_legendary_riders":return 18.155;case"battle_legendary_birds_galar":return .175;case"battle_legendary_ruinous":return 6.333;case"battle_legendary_kor_mir":return 6.442;case"battle_legendary_loyal_three":return 6.5;case"battle_legendary_ogerpon":return 14.335;case"battle_legendary_terapagos":return 24.377;case"battle_legendary_pecharunt":return 6.508;case"battle_rival":return 14.11;case"battle_rival_2":return 17.714;case"battle_rival_3":return 17.586;case"battle_trainer":return 13.686;case"battle_wild":return 12.703;case"battle_wild_strong":return 13.94;case"end_summit":return 30.025;case"battle_rocket_grunt":return 12.707;case"battle_aqua_magma_grunt":return 12.062;case"battle_galactic_grunt":return 13.043;case"battle_plasma_grunt":return 12.974;case"battle_flare_grunt":return 4.228;case"battle_aether_grunt":return 16;case"battle_skull_grunt":return 20.87;case"battle_macro_grunt":return 11.56;case"battle_star_grunt":return 133.362;case"battle_galactic_admin":return 11.997;case"battle_skull_admin":return 15.463;case"battle_oleana":return 14.11;case"battle_star_admin":return 9.493;case"battle_rocket_boss":return 9.115;case"battle_aqua_magma_boss":return 14.847;case"battle_galactic_boss":return 106.962;case"battle_plasma_boss":return 25.624;case"battle_flare_boss":return 8.085;case"battle_aether_boss":return 11.33;case"battle_skull_boss":return 13.13;case"battle_macro_boss":return 11.42;case"battle_star_boss":return 25.764;case"mystery_encounter_gen_5_gts":return 8.52;case"mystery_encounter_gen_6_gts":return 9.24;case"mystery_encounter_fun_and_games":return 4.78;case"mystery_encounter_weird_dream":return 41.42;case"mystery_encounter_delibirdy":return 82.28}return 0}toggleInvert(A){A?this.cameras.main.setPostPipeline(vb):this.cameras.main.removePostPipeline("InvertPostFX")}getCurrentPhase(){return this.currentPhase}getStandbyPhase(){return this.standbyPhase}pushConditionalPhase(A,s){this.conditionalQueue.push([s,A])}pushPhase(A,s=!1){(s?this.nextCommandPhaseQueue:this.phaseQueue).push(A)}unshiftPhase(A){this.phaseQueuePrependSpliceIndex===-1?this.phaseQueuePrepend.push(A):this.phaseQueuePrepend.splice(this.phaseQueuePrependSpliceIndex,0,A)}clearPhaseQueue(){this.phaseQueue.splice(0,this.phaseQueue.length)}setPhaseQueueSplice(){this.phaseQueuePrependSpliceIndex=this.phaseQueuePrepend.length}clearPhaseQueueSplice(){this.phaseQueuePrependSpliceIndex=-1}shiftPhase(){var A;if(this.standbyPhase){this.currentPhase=this.standbyPhase,this.standbyPhase=null;return}if(this.phaseQueuePrependSpliceIndex>-1&&this.clearPhaseQueueSplice(),this.phaseQueuePrepend.length)for(;this.phaseQueuePrepend.length;){const s=this.phaseQueuePrepend.pop();s&&this.phaseQueue.unshift(s)}if(this.phaseQueue.length||(this.populatePhaseQueue(),this.conditionalQueue=[]),this.currentPhase=this.phaseQueue.shift()??null,(A=this.conditionalQueue)!=null&&A.length){const s=this.conditionalQueue.shift();s!=null&&s[0]()?this.pushPhase(s[1]):s?this.conditionalQueue.unshift(s):console.warn("condition phase is undefined/null!",s)}this.currentPhase&&(`${this.currentPhase.constructor.name}`,this.currentPhase.start())}overridePhase(A){return this.standbyPhase?!1:(this.standbyPhase=this.currentPhase,this.currentPhase=A,`${A.constructor.name}`,A.start(),!0)}findPhase(A){return this.phaseQueue.find(A)}tryReplacePhase(A,s){const R=this.phaseQueue.findIndex(A);return R>-1?(this.phaseQueue[R]=s,!0):!1}tryRemovePhase(A){const s=this.phaseQueue.findIndex(A);return s>-1?(this.phaseQueue.splice(s,1),!0):!1}tryRemoveUnshiftedPhase(A){const s=this.phaseQueuePrepend.findIndex(A);return s>-1?(this.phaseQueuePrepend.splice(s,1),!0):!1}prependToPhase(A,s){const R=this.phaseQueue.findIndex(I=>I instanceof s);return R!==-1?(this.phaseQueue.splice(R,0,A),!0):(this.unshiftPhase(A),!1)}queueMessage(A,s,R,I,i){const a=new rG(this,A,s,R,I);i?this.pushPhase(a):this.unshiftPhase(a)}populatePhaseQueue(){this.nextCommandPhaseQueue.length&&(this.phaseQueue.push(...this.nextCommandPhaseQueue),this.nextCommandPhaseQueue.splice(0,this.nextCommandPhaseQueue.length)),this.phaseQueue.push(new _G(this))}addMoney(A){this.money=Math.min(this.money+A,Number.MAX_SAFE_INTEGER),this.updateMoneyText(),this.animateMoneyChanged(!0),this.validateAchvs(Ni)}getWaveMoneyAmount(A){const s=this.currentBattle.waveIndex,R=Math.ceil(s/10)-1,I=Math.pow((R+1+(.75+((s-1)%10+1)/10))*100,1+.005*R)*A;return Math.floor(I/10)*10}addModifier(A,s,R,I,i,a){return A?new Promise(L=>{let S=!1;const o=A.type.soundName;this.validateAchvs(PC,A);const l=[],D=[];if(A instanceof FA){if(A instanceof zs&&l.push(...this.findModifiers(M=>M instanceof zs&&M.pokemonId===A.pokemonId)),A.add(this.modifiers,!!I,this)){if(A instanceof AR||A instanceof zs){const M=this.getPokemonById(A.pokemonId);M&&(S=A.apply(M,!0))}R&&!this.sound.get(o)&&this.playSound(o)}else if(!I){const M=E7(A.type.tier);return this.queueMessage(U.t("battle:itemStackFull",{fullItemName:A.type.name,itemName:M.name}),void 0,!0),this.addModifier(M.newModifier(),s,R,!1,i).then(c=>L(c))}for(const M of l)this.removeModifier(M);if(!s&&!I)return this.updateModifiers(!0,i).then(()=>L(S))}else if(A instanceof mI)if(R&&!this.sound.get(o)&&this.playSound(o),A instanceof hR){for(const M in this.party){const c=this.party[M],G=[];if(A instanceof pI)if(A.fainted)G.push(1);else{const P=new Jt(1);this.applyModifiers(qi,!0,P),G.push(P.value)}else A instanceof SS?G.push(this.getPokemonById(A.fusePokemonId)):A instanceof TS&&!xe(a)&&G.push(a);if(A.shouldApply(c,...G)){const P=A.apply(c,...G);P instanceof Promise?D.push(P.then(_=>S||(S=_))):S||(S=P)}}return Promise.allSettled([this.party.map(M=>M.updateInfo(i)),...D]).then(()=>L(S))}else{const M=[this];if(A.shouldApply(...M)){const c=A.apply(...M);if(c instanceof Promise)return c.then(G=>L(G));S||(S=c)}}L(S)}):Promise.resolve(!1)}addEnemyModifier(A,s,R){return new Promise(I=>{const i=[];if(A instanceof zs&&i.push(...this.findModifiers(a=>a instanceof zs&&a.pokemonId===A.pokemonId,!1)),A.add(this.enemyModifiers,!1,this)){if(A instanceof AR||A instanceof zs){const a=this.getPokemonById(A.pokemonId);a&&A.apply(a,!0)}for(const a of i)this.removeModifier(a,!0)}s?I():this.updateModifiers(!1,R).then(()=>I())})}tryTransferHeldItemModifier(A,s,R,I=1,i,a){return new Promise(L=>{const S=A.pokemonId?A.getPokemon(s.scene):null,o=new je(!1);OL(!!S&&S.isPlayer()!==s.isPlayer(),()=>Et(YL,S,o)).then(()=>{if(o.value)return L(!1);const l=A.clone();l.pokemonId=s.id;const D=s.scene.findModifier(c=>c instanceof at&&c.matchType(A)&&c.pokemonId===s.id,s.isPlayer());let M=!0;if(D){const c=D.getMaxStackCount(s.scene);if(D.stackCount>=c)return L(!1);const G=Math.min(I,A.stackCount,c-D.stackCount);A.stackCount-=G,l.stackCount=D.stackCount+G,M=!A.stackCount}else{const c=Math.min(I,A.stackCount);A.stackCount-=c,l.stackCount=c}if(M=!A.stackCount,!M||!S||this.removeModifier(A,!S.isPlayer())){const c=T(()=>{!D||this.removeModifier(D,!s.isPlayer())?s.isPlayer()?this.addModifier(l,a,R,!1,i).then(()=>L(!0)):this.addEnemyModifier(l,a,i).then(()=>L(!0)):L(!1)},"addModifier");S&&S.isPlayer()!==s.isPlayer()&&!a?this.updateModifiers(S.isPlayer(),i).then(()=>c()):c();return}L(!1)})})}removePartyMemberModifiers(A){return new Promise(s=>{const R=this.getParty()[A].id,I=this.modifiers.filter(i=>i instanceof at&&i.pokemonId===R);for(const i of I)this.modifiers.splice(this.modifiers.indexOf(i),1);this.updateModifiers().then(()=>s())})}generateEnemyModifiers(A){return new Promise(s=>{if(this.currentBattle.battleSpec===eE.FINAL_BOSS)return s();const R=this.gameMode.getWaveForDifficulty(this.currentBattle.waveIndex),I=this.gameMode.isWaveFinal(this.currentBattle.waveIndex);let i=Math.ceil(R/10);I&&(i=Math.ceil(i*2.5));const a=this.getEnemyParty();if(this.currentBattle.trainer){const L=this.currentBattle.trainer.genModifiers(a);for(const S of L)this.addEnemyModifier(S,!0,!0)}a.forEach((L,S)=>{var o;if(A&&S<A.length&&A[S])A[S].forEach(l=>{let D;l.modifier instanceof IA?D=l.modifier.newModifier(L):(D=l.modifier,D.pokemonId=L.id),D.stackCount=l.stackCount??1,D.isTransferable=l.isTransferable??D.isTransferable,this.addEnemyModifier(D,!0)});else{const l=L.isBoss()||this.currentBattle.battleType===Nt.TRAINER&&!!((o=this.currentBattle.trainer)!=null&&o.config.isBoss);let D=32;l&&(D/=2),I&&(D/=8);const M=this.gameMode.getEnemyModifierChance(l);let c=M;this.currentBattle.battleType===Nt.TRAINER&&this.currentBattle.trainer&&(c=Math.ceil(c*this.currentBattle.trainer.getPartyMemberModifierChanceMultiplier(S)));let G=0;for(let P=0;P<i;P++)le(M)||G++;l&&(G=Math.max(G,Math.floor(i/2))),t7(R,G,[L],this.currentBattle.battleType===Nt.TRAINER?FE.TRAINER:FE.WILD,D).map(P=>P.newModifier(L).add(this.enemyModifiers,!1,this))}return!0}),this.updateModifiers(!1).then(()=>s())})}clearEnemyModifiers(){const A=this.enemyModifiers.filter(s=>s instanceof FA);for(const s of A)this.enemyModifiers.splice(this.enemyModifiers.indexOf(s),1);this.updateModifiers(!1).then(()=>this.updateUIPositions())}clearEnemyHeldItemModifiers(A){const s=this.enemyModifiers.filter(R=>R instanceof at&&(!A||R.getPokemon(this)===A));for(const R of s)this.enemyModifiers.splice(this.enemyModifiers.indexOf(R),1);this.updateModifiers(!1).then(()=>this.updateUIPositions())}setModifiersVisible(A){[this.modifierBar,this.enemyModifierBar].map(s=>s.setVisible(A))}updateModifiers(A,s){return A===void 0&&(A=!0),new Promise(R=>{const I=A?this.modifiers:this.enemyModifiers;for(let a=0;a<I.length;a++){const L=I[a];L instanceof at&&!this.getPokemonById(L.pokemonId)&&I.splice(a--,1)}for(const a of I)a instanceof FA&&(a.virtualStackCount=0);const i=I.slice(0);for(const a of i)a.getStackCount()||I.splice(I.indexOf(a),1);this.updatePartyForModifiers(A?this.getParty():this.getEnemyParty(),s).then(()=>{(A?this.modifierBar:this.enemyModifierBar).updateModifiers(I),A||this.updateUIPositions(),R()})})}updatePartyForModifiers(A,s){return new Promise(R=>{Promise.allSettled(A.map(I=>(I.scene&&I.calculateStats(),I.updateInfo(s)))).then(()=>R())})}removeModifier(A,s){const R=s?this.enemyModifiers:this.modifiers,I=R.indexOf(A);if(I>-1){if(R.splice(I,1),A instanceof AR||A instanceof zs){const i=this.getPokemonById(A.pokemonId);i&&A.apply(i,!1)}return!0}return!1}getModifiers(A,s=!0){return(s?this.modifiers:this.enemyModifiers).filter(R=>R instanceof A)}findModifiers(A,s=!0){return(s?this.modifiers:this.enemyModifiers).filter(A)}findModifier(A,s=!0){return(s?this.modifiers:this.enemyModifiers).find(A)}applyShuffledModifiers(A,s,R=!0,...I){let i=(R?this.modifiers:this.enemyModifiers).filter(a=>a instanceof s&&a.shouldApply(...I));return A.executeWithSeedOffset(()=>{const a=T(L=>{if(L.length<1)return L;const S=le(L.length);return[L[S],...a(L.filter((o,l)=>l!==S))]},"shuffleModifiers");i=a(i)},A.currentBattle.turn<<4,A.waveSeed),this.applyModifiersInternal(i,R,I)}applyModifiers(A,s=!0,...R){const I=(s?this.modifiers:this.enemyModifiers).filter(i=>i instanceof A&&i.shouldApply(...R));return this.applyModifiersInternal(I,s,R)}applyModifiersInternal(A,s,R){const I=[];for(const i of A)i.apply(...R)&&(i.type.name,I.push(i));return I}applyModifier(A,s=!0,...R){const I=(s?this.modifiers:this.enemyModifiers).filter(i=>i instanceof A&&i.shouldApply(...R));for(const i of I)if(i.apply(...R))return i.type.name,i;return null}triggerPokemonFormChange(A,s,R=!1,I=!1){if(mO.hasOwnProperty(A.species.speciesId)){const i=mO[A.species.speciesId].filter(L=>L.findTrigger(s)&&L.canChange(A));let a;if(A.species.speciesId===e.NECROZMA&&i.length>1){const L=this.findModifiers(S=>S instanceof AR&&S.pokemonId===A.id).filter(S=>S.active).map(S=>S.formChangeItem);a=L.includes(YR.N_LUNARIZER)?i[0]:L.includes(YR.N_SOLARIZER)?i[1]:null}else a=i[0];if(a){let L;return A instanceof Ss&&!a.quiet?L=new zc(this,A,a,I):L=new SG(this,A,a),A instanceof Ss&&!a.quiet&&I?this.overridePhase(L):R?this.pushPhase(L):this.unshiftPhase(L),!0}}return!1}triggerPokemonBattleAnim(A,s,R,I=!1){const i=new TG(this,s,A,R);return I?this.pushPhase(i):this.unshiftPhase(i),!0}validateAchvs(A,...s){const R=Object.values(At).filter(I=>I instanceof A);for(const I of R)this.validateAchv(I,s)}validateAchv(A,s){return!this.gameData.achvUnlocks.hasOwnProperty(A.id)&&A.validate(this,s)?(this.gameData.achvUnlocks[A.id]=new Date().getTime(),this.ui.achvBar.showAchv(A),Ls.hasOwnProperty(A.id)&&this.validateVoucher(Ls[A.id]),!0):!1}validateVoucher(A,s){return!this.gameData.voucherUnlocks.hasOwnProperty(A.id)&&A.validate(this,s)?(this.gameData.voucherUnlocks[A.id]=new Date().getTime(),this.ui.achvBar.showAchv(A),this.gameData.voucherCounts[A.voucherType]++,!0):!1}updateGameInfo(){var s,R;const A={playTime:this.sessionPlayTime?this.sessionPlayTime:0,gameMode:this.currentBattle?this.gameMode.getName():"Title",biome:this.currentBattle?JL(this.arena.biomeType):"",wave:((s=this.currentBattle)==null?void 0:s.waveIndex)||0,party:this.party?this.party.map(I=>({name:I.name,level:I.level})):[],modeChain:((R=this.ui)==null?void 0:R.getModeChain())??[]};window.gameInfo=A}getActiveKeys(){const A=[];return this.getParty().forEach(I=>{A.push(I.getSpriteKey(!0)),A.push(I.getBattleSpriteKey(!0,!0)),A.push("cry/"+I.species.getCryKey(I.formIndex)),I.fusionSpecies&&A.push("cry/"+I.fusionSpecies.getCryKey(I.fusionFormIndex))}),this.getEnemyParty().forEach(I=>{A.push(I.getSpriteKey(!0)),A.push("cry/"+I.species.getCryKey(I.formIndex)),I.fusionSpecies&&A.push("cry/"+I.fusionSpecies.getCryKey(I.fusionFormIndex))}),A}initFinalBossPhaseTwo(A){if(A instanceof es&&A.isBoss()&&!A.formIndex&&A.bossSegmentIndex<1){this.fadeOutBgm(Ve(2e3),!1),this.ui.showDialogue(s6[eE.FINAL_BOSS].firstStageWin,A.species.name,void 0,()=>{const s=YM(x.MINI_BLACK_HOLE).newModifier(A);s.setTransferrableFalse(),this.addEnemyModifier(s,!1,!0),A.generateAndPopulateMoveset(1),this.setFieldScale(.75),this.triggerPokemonFormChange(A,_t,!1),this.currentBattle.double=!0;const R=this.getParty().filter(I=>I.isAllowedInBattle());R.length>1&&(this.pushPhase(new aO(this,!0)),R[1].isOnField()||this.pushPhase(new KE(this,1))),this.shiftPhase()});return}this.shiftPhase()}applyPartyExp(A,s,R,I){var c;const i=I??this.currentBattle.playerParticipantIds,a=this.getParty(),L=this.findModifier(G=>G instanceof CS),S=this.findModifier(G=>G instanceof US),o=this.findModifier(G=>G instanceof oS),l=a.filter(G=>G.hp),D=l.filter(G=>G.level<this.getMaxExpLevel()),M=[];if(R&&(A=Math.floor(A*this.currentBattle.waveIndex/5+1)),i.size>0){this.currentBattle.battleType===Nt.TRAINER||((c=this.currentBattle.mysteryEncounter)==null?void 0:c.encounterMode)===sE.TRAINER_BATTLE?A=Math.floor(A*1.5):this.currentBattle.isBattleMysteryEncounter()&&this.currentBattle.mysteryEncounter&&(A=Math.floor(A*this.currentBattle.mysteryEncounter.expMultiplier));for(const G of l){const P=G.id,_=i.has(P);if(_&&s){G.addFriendship(M8);const F=G.getHeldItems().find(p=>p instanceof ki);F&&F.stackCount<F.getMaxStackCount(this)&&(F.stackCount++,this.updateModifiers(!0,!0),G.updateInfo())}if(!D.includes(G))continue;if(!_&&!L){M.push(0);continue}let g=0;_?(g+=1/i.size,i.size>1&&o&&(g+=o.getStackCount()*.2)):L&&(g+=L.getStackCount()*.2/i.size),G.pokerus&&(g*=1.5),Ge.XP_MULTIPLIER_OVERRIDE!==null&&(g=Ge.XP_MULTIPLIER_OVERRIDE);const H=new $e(A*g);this.applyModifiers(lS,!0,G,H),M.push(Math.floor(H.value))}if(S){let G=0,P=0;D.forEach((F,p)=>{P+=M[p],G+=F.level});const _=Math.floor(G/D.length),g=[];D.forEach((F,p)=>{F.level<=_&&g.push(p)});const H=Math.floor(P/g.length);D.forEach((F,p)=>{M[p]=vA.Math.Linear(M[p],g.indexOf(p)>-1?H:0,.2*S.getStackCount())})}for(let G=0;G<D.length;G++){const P=M[G];if(P){const _=a.indexOf(D[G]);this.unshiftPhase(D[G].isOnField()?new HG(this,_,P):new fG(this,_,P))}}}}isMysteryEncounterValidForWave(A,s){const[R,I]=this.gameMode.getMysteryEncounterLegalWaves();return this.gameMode.hasMysteryEncounters&&A===Nt.WILD&&!this.gameMode.isBoss(s)&&s<I&&s>R}isWaveMysteryEncounter(A,s){const[R,I]=this.gameMode.getMysteryEncounterLegalWaves();if(this.isMysteryEncounterValidForWave(A,s)){const i=this.mysteryEncounterSaveData.encounterSpawnChance,a=this.mysteryEncounterSaveData.encounteredEvents,S=VZ/(I-R)*(s-R)-a.length,o=i+Math.min(S*vZ,ru/2),l=xe(Ge.MYSTERY_ENCOUNTER_RATE_OVERRIDE)?o:Ge.MYSTERY_ENCOUNTER_RATE_OVERRIDE;if(a.length===0||s-a[a.length-1].waveIndex>3||!xe(Ge.MYSTERY_ENCOUNTER_RATE_OVERRIDE)){let M=ru;return this.executeWithSeedOffset(()=>{M=le(ru)},s*3*1e3),M<l}}return!1}getMysteryEncounter(A,s){var G;let R;if(!xe(Ge.MYSTERY_ENCOUNTER_OVERRIDE)&&kt.hasOwnProperty(Ge.MYSTERY_ENCOUNTER_OVERRIDE)){if(R=kt[Ge.MYSTERY_ENCOUNTER_OVERRIDE],s)return R}else{if(s)return R=kt[A??-1],R;R=xe(A)?null:kt[A]}if(!R&&((G=this.mysteryEncounterSaveData)!=null&&G.queuedEncounters)&&this.mysteryEncounterSaveData.queuedEncounters.length>0){let P=0;for(;P<this.mysteryEncounterSaveData.queuedEncounters.length&&R;){const _=this.mysteryEncounterSaveData.queuedEncounters[P],g=_.spawnPercent;le(100)<g&&(R=kt[_.type]),P++}}if(R)return R=new mT(R),R.populateDialogueTokensFromRequirements(this),R;const I=[Gt.COMMON,Gt.GREAT,Gt.ULTRA,Gt.ROGUE];this.mysteryEncounterSaveData.encounteredEvents.forEach(P=>{P.tier===Gt.COMMON?I[0]=I[0]-6:P.tier===Gt.GREAT&&(I[1]=I[1]-4)});const i=I.reduce((P,_)=>P+_),a=le(i),L=i-I[0],S=i-I[0]-I[1],o=i-I[0]-I[1]-I[2];let l=a>L?Gt.COMMON:a>S?Gt.GREAT:a>o?Gt.ULTRA:Gt.ROGUE;xe(Ge.MYSTERY_ENCOUNTER_TIER_OVERRIDE)||(l=Ge.MYSTERY_ENCOUNTER_TIER_OVERRIDE);let D=[];const M=this.mysteryEncounterSaveData.encounteredEvents.length>0?this.mysteryEncounterSaveData.encounteredEvents[this.mysteryEncounterSaveData.encounteredEvents.length-1].type:null,c=ha.get(this.arena.biomeType)??[];for(;D.length===0&&l!==null;)D=c.filter(P=>{const _=kt[P];if(!_||_.encounterTier!==l)return!1;const g=_.disallowedGameModes;if(g&&g.length>0&&g.includes(this.gameMode.modeId))return!1;if(this.gameMode.modeId===tA.CHALLENGE){const H=_.disallowedChallenges;if(H&&H.length>0&&this.gameMode.challenges.some(F=>H.includes(F.id)))return!1}return!(!_.meetsRequirements(this)||M!==null&&P===M||this.mysteryEncounterSaveData.encounteredEvents.length>0&&_.maxAllowedEncounters&&_.maxAllowedEncounters>0&&this.mysteryEncounterSaveData.encounteredEvents.filter(H=>H.type===P).length>=_.maxAllowedEncounters)}).map(P=>kt[P]),l===Gt.ROGUE?l=Gt.ULTRA:l===Gt.ULTRA?l=Gt.GREAT:l===Gt.GREAT?l=Gt.COMMON:l=null;return D.length===0?kt[me.MYSTERIOUS_CHALLENGERS]:(R=D[le(D.length)],R=new mT(R),R.populateDialogueTokensFromRequirements(this),R)}};T(kF,"BattleScene");let BG=kF;const MQ=Object.freeze(Object.defineProperty({__proto__:null,bypassLogin:_s,default:BG,get starterColors(){return js},startingWave:Gr},Symbol.toStringTag,{value:"Module"})),ZF=class ZF{constructor(A,s){const R=A instanceof FA?A:null;this.player=s,this.typeId=R?R.type.id:A.typeId,R?"getPregenArgs"in A.type&&(this.typePregenArgs=A.type.getPregenArgs()):A.typePregenArgs&&(this.typePregenArgs=A.typePregenArgs),this.args=R?R.getArgs():A.args||[],this.stackCount=A.stackCount,this.className=R?R.constructor.name:A.className}toModifier(A,s){const R=j8(this.typeId);if(!R)return null;try{let I=R();I.id=this.typeId,I instanceof iE&&(I=I.generateType(this.player?A.getParty():A.getEnemyField(),this.typePregenArgs));const i=Reflect.construct(s,[I].concat(this.args).concat(this.stackCount));return i.stackCount>i.getMaxStackCount(A)&&(i.stackCount=i.getMaxStackCount(A)),i}catch(I){return console.error(I),null}}};T(ZF,"ModifierData");let Pr=ZF;const XF=class XF{constructor(A){const s=A instanceof zD?A:null;this.biome=s?s.biomeType:A.biome,this.weather=s?s.weather:A.weather?new No(A.weather.weatherType,A.weather.turnsLeft):null,this.terrain=s?s.terrain:A.terrain?new TC(A.terrain.terrainType,A.terrain.turnsLeft):null,this.tags=[],A.tags&&(this.tags=A.tags.map(R=>x8(R)))}};T(XF,"ArenaData");let UC=XF;const QF=class QF{constructor(A){const s=A instanceof is?A:null;this.trainerType=s?s.config.trainerType:A.trainerType,this.variant=A.hasOwnProperty("variant")?A.variant:A.female?bt.FEMALE:bt.DEFAULT,this.partyTemplateIndex=A.partyMemberTemplateIndex,this.name=A.name,this.partnerName=A.partnerName}toTrainer(A){return new is(A,this.trainerType,this.variant,this.partyTemplateIndex,this.name,this.partnerName)}};T(QF,"TrainerData");let DC=QF;const JF=class JF{constructor(A){const s=A instanceof PI?A:null;this.id=s?s.id:A.id,this.tier=s?s.tier:A.tier??Math.floor(this.id/ci),A.species===0?this.sourceType=A.gachaType??A.sourceType:this.sourceType=s?s.sourceType:A.sourceType,this.hatchWaves=s?s.hatchWaves:A.hatchWaves,this.timestamp=s?s.timestamp:A.timestamp,this.variantTier=s?s.variantTier:A.variantTier,this.isShiny=s?s.isShiny:A.isShiny,this.species=s?s.species:A.species,this.eggMoveIndex=s?s.eggMoveIndex:A.eggMoveIndex,this.overrideHiddenAbility=s?s.overrideHiddenAbility:A.overrideHiddenAbility}toEgg(){return this.species?new PI({id:this.id,tier:this.tier,sourceType:this.sourceType,hatchWaves:this.hatchWaves,timestamp:this.timestamp,variantTier:this.variantTier,isShiny:this.isShiny,species:this.species,eggMoveIndex:this.eggMoveIndex,overrideHiddenAbility:this.overrideHiddenAbility}):new PI({id:this.id,hatchWaves:this.hatchWaves,sourceType:this.sourceType,timestamp:this.timestamp,tier:Math.floor(this.id/ci)})}};T(JF,"EggData");let MC=JF;var Z6={exports:{}},Du={exports:{}};const V9={},v9=Object.freeze(Object.defineProperty({__proto__:null,default:V9},Symbol.toStringTag,{value:"Module"})),x9=xb(v9);var qv;function iA(){return qv||(qv=1,function(E,A){(function(s,R){E.exports=R()})(Xt,function(){var s=s||function(R,I){var i;if(typeof window<"u"&&window.crypto&&(i=window.crypto),typeof self<"u"&&self.crypto&&(i=self.crypto),typeof globalThis<"u"&&globalThis.crypto&&(i=globalThis.crypto),!i&&typeof window<"u"&&window.msCrypto&&(i=window.msCrypto),!i&&typeof Xt<"u"&&Xt.crypto&&(i=Xt.crypto),!i&&typeof bb=="function")try{i=x9}catch{}var a=T(function(){if(i){if(typeof i.getRandomValues=="function")try{return i.getRandomValues(new Uint32Array(1))[0]}catch{}if(typeof i.randomBytes=="function")try{return i.randomBytes(4).readInt32LE()}catch{}}throw new Error("Native crypto module could not be used to get secure random number.")},"cryptoSecureRandomInt"),L=Object.create||function(){function H(){}return T(H,"F"),function(F){var p;return H.prototype=F,p=new H,H.prototype=null,p}}(),S={},o=S.lib={},l=o.Base=function(){return{extend:T(function(H){var F=L(this);return H&&F.mixIn(H),(!F.hasOwnProperty("init")||this.init===F.init)&&(F.init=function(){F.$super.init.apply(this,arguments)}),F.init.prototype=F,F.$super=this,F},"extend"),create:T(function(){var H=this.extend();return H.init.apply(H,arguments),H},"create"),init:T(function(){},"init"),mixIn:T(function(H){for(var F in H)H.hasOwnProperty(F)&&(this[F]=H[F]);H.hasOwnProperty("toString")&&(this.toString=H.toString)},"mixIn"),clone:T(function(){return this.init.prototype.extend(this)},"clone")}}(),D=o.WordArray=l.extend({init:T(function(H,F){H=this.words=H||[],F!=I?this.sigBytes=F:this.sigBytes=H.length*4},"init"),toString:T(function(H){return(H||c).stringify(this)},"toString"),concat:T(function(H){var F=this.words,p=H.words,v=this.sigBytes,k=H.sigBytes;if(this.clamp(),v%4)for(var j=0;j<k;j++){var q=p[j>>>2]>>>24-j%4*8&255;F[v+j>>>2]|=q<<24-(v+j)%4*8}else for(var ie=0;ie<k;ie+=4)F[v+ie>>>2]=p[ie>>>2];return this.sigBytes+=k,this},"concat"),clamp:T(function(){var H=this.words,F=this.sigBytes;H[F>>>2]&=4294967295<<32-F%4*8,H.length=R.ceil(F/4)},"clamp"),clone:T(function(){var H=l.clone.call(this);return H.words=this.words.slice(0),H},"clone"),random:T(function(H){for(var F=[],p=0;p<H;p+=4)F.push(a());return new D.init(F,H)},"random")}),M=S.enc={},c=M.Hex={stringify:T(function(H){for(var F=H.words,p=H.sigBytes,v=[],k=0;k<p;k++){var j=F[k>>>2]>>>24-k%4*8&255;v.push((j>>>4).toString(16)),v.push((j&15).toString(16))}return v.join("")},"stringify"),parse:T(function(H){for(var F=H.length,p=[],v=0;v<F;v+=2)p[v>>>3]|=parseInt(H.substr(v,2),16)<<24-v%8*4;return new D.init(p,F/2)},"parse")},G=M.Latin1={stringify:T(function(H){for(var F=H.words,p=H.sigBytes,v=[],k=0;k<p;k++){var j=F[k>>>2]>>>24-k%4*8&255;v.push(String.fromCharCode(j))}return v.join("")},"stringify"),parse:T(function(H){for(var F=H.length,p=[],v=0;v<F;v++)p[v>>>2]|=(H.charCodeAt(v)&255)<<24-v%4*8;return new D.init(p,F)},"parse")},P=M.Utf8={stringify:T(function(H){try{return decodeURIComponent(escape(G.stringify(H)))}catch{throw new Error("Malformed UTF-8 data")}},"stringify"),parse:T(function(H){return G.parse(unescape(encodeURIComponent(H)))},"parse")},_=o.BufferedBlockAlgorithm=l.extend({reset:T(function(){this._data=new D.init,this._nDataBytes=0},"reset"),_append:T(function(H){typeof H=="string"&&(H=P.parse(H)),this._data.concat(H),this._nDataBytes+=H.sigBytes},"_append"),_process:T(function(H){var F,p=this._data,v=p.words,k=p.sigBytes,j=this.blockSize,q=j*4,ie=k/q;H?ie=R.ceil(ie):ie=R.max((ie|0)-this._minBufferSize,0);var z=ie*j,Oe=R.min(z*4,k);if(z){for(var ae=0;ae<z;ae+=j)this._doProcessBlock(v,ae);F=v.splice(0,z),p.sigBytes-=Oe}return new D.init(F,Oe)},"_process"),clone:T(function(){var H=l.clone.call(this);return H._data=this._data.clone(),H},"clone"),_minBufferSize:0});o.Hasher=_.extend({cfg:l.extend(),init:T(function(H){this.cfg=this.cfg.extend(H),this.reset()},"init"),reset:T(function(){_.reset.call(this),this._doReset()},"reset"),update:T(function(H){return this._append(H),this._process(),this},"update"),finalize:T(function(H){H&&this._append(H);var F=this._doFinalize();return F},"finalize"),blockSize:16,_createHelper:T(function(H){return function(F,p){return new H.init(p).finalize(F)}},"_createHelper"),_createHmacHelper:T(function(H){return function(F,p){return new g.HMAC.init(H,p).finalize(F)}},"_createHmacHelper")});var g=S.algo={};return S}(Math);return s})}(Du)),Du.exports}T(iA,"requireCore");var Mu={exports:{}},jv;function vM(){return jv||(jv=1,function(E,A){(function(s,R){E.exports=R(iA())})(Xt,function(s){return function(R){var I=s,i=I.lib,a=i.Base,L=i.WordArray,S=I.x64={};S.Word=a.extend({init:T(function(o,l){this.high=o,this.low=l},"init")}),S.WordArray=a.extend({init:T(function(o,l){o=this.words=o||[],l!=R?this.sigBytes=l:this.sigBytes=o.length*8},"init"),toX32:T(function(){for(var o=this.words,l=o.length,D=[],M=0;M<l;M++){var c=o[M];D.push(c.high),D.push(c.low)}return L.create(D,this.sigBytes)},"toX32"),clone:T(function(){for(var o=a.clone.call(this),l=o.words=this.words.slice(0),D=l.length,M=0;M<D;M++)l[M]=l[M].clone();return o},"clone")})}(),s})}(Mu)),Mu.exports}T(vM,"requireX64Core");var uu={exports:{}},zv;function b9(){return zv||(zv=1,function(E,A){(function(s,R){E.exports=R(iA())})(Xt,function(s){return function(){if(typeof ArrayBuffer=="function"){var R=s,I=R.lib,i=I.WordArray,a=i.init,L=i.init=function(S){if(S instanceof ArrayBuffer&&(S=new Uint8Array(S)),(S instanceof Int8Array||typeof Uint8ClampedArray<"u"&&S instanceof Uint8ClampedArray||S instanceof Int16Array||S instanceof Uint16Array||S instanceof Int32Array||S instanceof Uint32Array||S instanceof Float32Array||S instanceof Float64Array)&&(S=new Uint8Array(S.buffer,S.byteOffset,S.byteLength)),S instanceof Uint8Array){for(var o=S.byteLength,l=[],D=0;D<o;D++)l[D>>>2]|=S[D]<<24-D%4*8;a.call(this,l,o)}else a.apply(this,arguments)};L.prototype=i}}(),s.lib.WordArray})}(uu)),uu.exports}T(b9,"requireLibTypedarrays");var hu={exports:{}},ex;function k9(){return ex||(ex=1,function(E,A){(function(s,R){E.exports=R(iA())})(Xt,function(s){return function(){var R=s,I=R.lib,i=I.WordArray,a=R.enc;a.Utf16=a.Utf16BE={stringify:T(function(S){for(var o=S.words,l=S.sigBytes,D=[],M=0;M<l;M+=2){var c=o[M>>>2]>>>16-M%4*8&65535;D.push(String.fromCharCode(c))}return D.join("")},"stringify"),parse:T(function(S){for(var o=S.length,l=[],D=0;D<o;D++)l[D>>>1]|=S.charCodeAt(D)<<16-D%2*16;return i.create(l,o*2)},"parse")},a.Utf16LE={stringify:T(function(S){for(var o=S.words,l=S.sigBytes,D=[],M=0;M<l;M+=2){var c=L(o[M>>>2]>>>16-M%4*8&65535);D.push(String.fromCharCode(c))}return D.join("")},"stringify"),parse:T(function(S){for(var o=S.length,l=[],D=0;D<o;D++)l[D>>>1]|=L(S.charCodeAt(D)<<16-D%2*16);return i.create(l,o*2)},"parse")};function L(S){return S<<8&4278255360|S>>>8&16711935}T(L,"swapEndian")}(),s.enc.Utf16})}(hu)),hu.exports}T(k9,"requireEncUtf16");var cu={exports:{}},tx;function ra(){return tx||(tx=1,function(E,A){(function(s,R){E.exports=R(iA())})(Xt,function(s){return function(){var R=s,I=R.lib,i=I.WordArray,a=R.enc;a.Base64={stringify:T(function(S){var o=S.words,l=S.sigBytes,D=this._map;S.clamp();for(var M=[],c=0;c<l;c+=3)for(var G=o[c>>>2]>>>24-c%4*8&255,P=o[c+1>>>2]>>>24-(c+1)%4*8&255,_=o[c+2>>>2]>>>24-(c+2)%4*8&255,g=G<<16|P<<8|_,H=0;H<4&&c+H*.75<l;H++)M.push(D.charAt(g>>>6*(3-H)&63));var F=D.charAt(64);if(F)for(;M.length%4;)M.push(F);return M.join("")},"stringify"),parse:T(function(S){var o=S.length,l=this._map,D=this._reverseMap;if(!D){D=this._reverseMap=[];for(var M=0;M<l.length;M++)D[l.charCodeAt(M)]=M}var c=l.charAt(64);if(c){var G=S.indexOf(c);G!==-1&&(o=G)}return L(S,o,D)},"parse"),_map:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="};function L(S,o,l){for(var D=[],M=0,c=0;c<o;c++)if(c%4){var G=l[S.charCodeAt(c-1)]<<c%4*2,P=l[S.charCodeAt(c)]>>>6-c%4*2,_=G|P;D[M>>>2]|=_<<24-M%4*8,M++}return i.create(D,M)}T(L,"parseLoop")}(),s.enc.Base64})}(cu)),cu.exports}T(ra,"requireEncBase64");var Gu={exports:{}},Ax;function Z9(){return Ax||(Ax=1,function(E,A){(function(s,R){E.exports=R(iA())})(Xt,function(s){return function(){var R=s,I=R.lib,i=I.WordArray,a=R.enc;a.Base64url={stringify:T(function(S,o){o===void 0&&(o=!0);var l=S.words,D=S.sigBytes,M=o?this._safe_map:this._map;S.clamp();for(var c=[],G=0;G<D;G+=3)for(var P=l[G>>>2]>>>24-G%4*8&255,_=l[G+1>>>2]>>>24-(G+1)%4*8&255,g=l[G+2>>>2]>>>24-(G+2)%4*8&255,H=P<<16|_<<8|g,F=0;F<4&&G+F*.75<D;F++)c.push(M.charAt(H>>>6*(3-F)&63));var p=M.charAt(64);if(p)for(;c.length%4;)c.push(p);return c.join("")},"stringify"),parse:T(function(S,o){o===void 0&&(o=!0);var l=S.length,D=o?this._safe_map:this._map,M=this._reverseMap;if(!M){M=this._reverseMap=[];for(var c=0;c<D.length;c++)M[D.charCodeAt(c)]=c}var G=D.charAt(64);if(G){var P=S.indexOf(G);P!==-1&&(l=P)}return L(S,l,M)},"parse"),_map:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",_safe_map:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"};function L(S,o,l){for(var D=[],M=0,c=0;c<o;c++)if(c%4){var G=l[S.charCodeAt(c-1)]<<c%4*2,P=l[S.charCodeAt(c)]>>>6-c%4*2,_=G|P;D[M>>>2]|=_<<24-M%4*8,M++}return i.create(D,M)}T(L,"parseLoop")}(),s.enc.Base64url})}(Gu)),Gu.exports}T(Z9,"requireEncBase64url");var Pu={exports:{}},Ex;function Na(){return Ex||(Ex=1,function(E,A){(function(s,R){E.exports=R(iA())})(Xt,function(s){return function(R){var I=s,i=I.lib,a=i.WordArray,L=i.Hasher,S=I.algo,o=[];(function(){for(var P=0;P<64;P++)o[P]=R.abs(R.sin(P+1))*4294967296|0})();var l=S.MD5=L.extend({_doReset:T(function(){this._hash=new a.init([1732584193,4023233417,2562383102,271733878])},"_doReset"),_doProcessBlock:T(function(P,_){for(var g=0;g<16;g++){var H=_+g,F=P[H];P[H]=(F<<8|F>>>24)&16711935|(F<<24|F>>>8)&4278255360}var p=this._hash.words,v=P[_+0],k=P[_+1],j=P[_+2],q=P[_+3],ie=P[_+4],z=P[_+5],Oe=P[_+6],ae=P[_+7],Le=P[_+8],Ne=P[_+9],De=P[_+10],Be=P[_+11],de=P[_+12],fe=P[_+13],Ye=P[_+14],Re=P[_+15],Ie=p[0],oe=p[1],Te=p[2],he=p[3];Ie=D(Ie,oe,Te,he,v,7,o[0]),he=D(he,Ie,oe,Te,k,12,o[1]),Te=D(Te,he,Ie,oe,j,17,o[2]),oe=D(oe,Te,he,Ie,q,22,o[3]),Ie=D(Ie,oe,Te,he,ie,7,o[4]),he=D(he,Ie,oe,Te,z,12,o[5]),Te=D(Te,he,Ie,oe,Oe,17,o[6]),oe=D(oe,Te,he,Ie,ae,22,o[7]),Ie=D(Ie,oe,Te,he,Le,7,o[8]),he=D(he,Ie,oe,Te,Ne,12,o[9]),Te=D(Te,he,Ie,oe,De,17,o[10]),oe=D(oe,Te,he,Ie,Be,22,o[11]),Ie=D(Ie,oe,Te,he,de,7,o[12]),he=D(he,Ie,oe,Te,fe,12,o[13]),Te=D(Te,he,Ie,oe,Ye,17,o[14]),oe=D(oe,Te,he,Ie,Re,22,o[15]),Ie=M(Ie,oe,Te,he,k,5,o[16]),he=M(he,Ie,oe,Te,Oe,9,o[17]),Te=M(Te,he,Ie,oe,Be,14,o[18]),oe=M(oe,Te,he,Ie,v,20,o[19]),Ie=M(Ie,oe,Te,he,z,5,o[20]),he=M(he,Ie,oe,Te,De,9,o[21]),Te=M(Te,he,Ie,oe,Re,14,o[22]),oe=M(oe,Te,he,Ie,ie,20,o[23]),Ie=M(Ie,oe,Te,he,Ne,5,o[24]),he=M(he,Ie,oe,Te,Ye,9,o[25]),Te=M(Te,he,Ie,oe,q,14,o[26]),oe=M(oe,Te,he,Ie,Le,20,o[27]),Ie=M(Ie,oe,Te,he,fe,5,o[28]),he=M(he,Ie,oe,Te,j,9,o[29]),Te=M(Te,he,Ie,oe,ae,14,o[30]),oe=M(oe,Te,he,Ie,de,20,o[31]),Ie=c(Ie,oe,Te,he,z,4,o[32]),he=c(he,Ie,oe,Te,Le,11,o[33]),Te=c(Te,he,Ie,oe,Be,16,o[34]),oe=c(oe,Te,he,Ie,Ye,23,o[35]),Ie=c(Ie,oe,Te,he,k,4,o[36]),he=c(he,Ie,oe,Te,ie,11,o[37]),Te=c(Te,he,Ie,oe,ae,16,o[38]),oe=c(oe,Te,he,Ie,De,23,o[39]),Ie=c(Ie,oe,Te,he,fe,4,o[40]),he=c(he,Ie,oe,Te,v,11,o[41]),Te=c(Te,he,Ie,oe,q,16,o[42]),oe=c(oe,Te,he,Ie,Oe,23,o[43]),Ie=c(Ie,oe,Te,he,Ne,4,o[44]),he=c(he,Ie,oe,Te,de,11,o[45]),Te=c(Te,he,Ie,oe,Re,16,o[46]),oe=c(oe,Te,he,Ie,j,23,o[47]),Ie=G(Ie,oe,Te,he,v,6,o[48]),he=G(he,Ie,oe,Te,ae,10,o[49]),Te=G(Te,he,Ie,oe,Ye,15,o[50]),oe=G(oe,Te,he,Ie,z,21,o[51]),Ie=G(Ie,oe,Te,he,de,6,o[52]),he=G(he,Ie,oe,Te,q,10,o[53]),Te=G(Te,he,Ie,oe,De,15,o[54]),oe=G(oe,Te,he,Ie,k,21,o[55]),Ie=G(Ie,oe,Te,he,Le,6,o[56]),he=G(he,Ie,oe,Te,Re,10,o[57]),Te=G(Te,he,Ie,oe,Oe,15,o[58]),oe=G(oe,Te,he,Ie,fe,21,o[59]),Ie=G(Ie,oe,Te,he,ie,6,o[60]),he=G(he,Ie,oe,Te,Be,10,o[61]),Te=G(Te,he,Ie,oe,j,15,o[62]),oe=G(oe,Te,he,Ie,Ne,21,o[63]),p[0]=p[0]+Ie|0,p[1]=p[1]+oe|0,p[2]=p[2]+Te|0,p[3]=p[3]+he|0},"_doProcessBlock"),_doFinalize:T(function(){var P=this._data,_=P.words,g=this._nDataBytes*8,H=P.sigBytes*8;_[H>>>5]|=128<<24-H%32;var F=R.floor(g/4294967296),p=g;_[(H+64>>>9<<4)+15]=(F<<8|F>>>24)&16711935|(F<<24|F>>>8)&4278255360,_[(H+64>>>9<<4)+14]=(p<<8|p>>>24)&16711935|(p<<24|p>>>8)&4278255360,P.sigBytes=(_.length+1)*4,this._process();for(var v=this._hash,k=v.words,j=0;j<4;j++){var q=k[j];k[j]=(q<<8|q>>>24)&16711935|(q<<24|q>>>8)&4278255360}return v},"_doFinalize"),clone:T(function(){var P=L.clone.call(this);return P._hash=this._hash.clone(),P},"clone")});function D(P,_,g,H,F,p,v){var k=P+(_&g|~_&H)+F+v;return(k<<p|k>>>32-p)+_}T(D,"FF");function M(P,_,g,H,F,p,v){var k=P+(_&H|g&~H)+F+v;return(k<<p|k>>>32-p)+_}T(M,"GG");function c(P,_,g,H,F,p,v){var k=P+(_^g^H)+F+v;return(k<<p|k>>>32-p)+_}T(c,"HH");function G(P,_,g,H,F,p,v){var k=P+(g^(_|~H))+F+v;return(k<<p|k>>>32-p)+_}T(G,"II"),I.MD5=L._createHelper(l),I.HmacMD5=L._createHmacHelper(l)}(Math),s.MD5})}(Pu)),Pu.exports}T(Na,"requireMd5");var _u={exports:{}},sx;function X6(){return sx||(sx=1,function(E,A){(function(s,R){E.exports=R(iA())})(Xt,function(s){return function(){var R=s,I=R.lib,i=I.WordArray,a=I.Hasher,L=R.algo,S=[],o=L.SHA1=a.extend({_doReset:T(function(){this._hash=new i.init([1732584193,4023233417,2562383102,271733878,3285377520])},"_doReset"),_doProcessBlock:T(function(l,D){for(var M=this._hash.words,c=M[0],G=M[1],P=M[2],_=M[3],g=M[4],H=0;H<80;H++){if(H<16)S[H]=l[D+H]|0;else{var F=S[H-3]^S[H-8]^S[H-14]^S[H-16];S[H]=F<<1|F>>>31}var p=(c<<5|c>>>27)+g+S[H];H<20?p+=(G&P|~G&_)+1518500249:H<40?p+=(G^P^_)+1859775393:H<60?p+=(G&P|G&_|P&_)-1894007588:p+=(G^P^_)-899497514,g=_,_=P,P=G<<30|G>>>2,G=c,c=p}M[0]=M[0]+c|0,M[1]=M[1]+G|0,M[2]=M[2]+P|0,M[3]=M[3]+_|0,M[4]=M[4]+g|0},"_doProcessBlock"),_doFinalize:T(function(){var l=this._data,D=l.words,M=this._nDataBytes*8,c=l.sigBytes*8;return D[c>>>5]|=128<<24-c%32,D[(c+64>>>9<<4)+14]=Math.floor(M/4294967296),D[(c+64>>>9<<4)+15]=M,l.sigBytes=D.length*4,this._process(),this._hash},"_doFinalize"),clone:T(function(){var l=a.clone.call(this);return l._hash=this._hash.clone(),l},"clone")});R.SHA1=a._createHelper(o),R.HmacSHA1=a._createHmacHelper(o)}(),s.SHA1})}(_u)),_u.exports}T(X6,"requireSha1");var Hu={exports:{}},Rx;function B1(){return Rx||(Rx=1,function(E,A){(function(s,R){E.exports=R(iA())})(Xt,function(s){return function(R){var I=s,i=I.lib,a=i.WordArray,L=i.Hasher,S=I.algo,o=[],l=[];(function(){function c(g){for(var H=R.sqrt(g),F=2;F<=H;F++)if(!(g%F))return!1;return!0}T(c,"isPrime");function G(g){return(g-(g|0))*4294967296|0}T(G,"getFractionalBits");for(var P=2,_=0;_<64;)c(P)&&(_<8&&(o[_]=G(R.pow(P,1/2))),l[_]=G(R.pow(P,1/3)),_++),P++})();var D=[],M=S.SHA256=L.extend({_doReset:T(function(){this._hash=new a.init(o.slice(0))},"_doReset"),_doProcessBlock:T(function(c,G){for(var P=this._hash.words,_=P[0],g=P[1],H=P[2],F=P[3],p=P[4],v=P[5],k=P[6],j=P[7],q=0;q<64;q++){if(q<16)D[q]=c[G+q]|0;else{var ie=D[q-15],z=(ie<<25|ie>>>7)^(ie<<14|ie>>>18)^ie>>>3,Oe=D[q-2],ae=(Oe<<15|Oe>>>17)^(Oe<<13|Oe>>>19)^Oe>>>10;D[q]=z+D[q-7]+ae+D[q-16]}var Le=p&v^~p&k,Ne=_&g^_&H^g&H,De=(_<<30|_>>>2)^(_<<19|_>>>13)^(_<<10|_>>>22),Be=(p<<26|p>>>6)^(p<<21|p>>>11)^(p<<7|p>>>25),de=j+Be+Le+l[q]+D[q],fe=De+Ne;j=k,k=v,v=p,p=F+de|0,F=H,H=g,g=_,_=de+fe|0}P[0]=P[0]+_|0,P[1]=P[1]+g|0,P[2]=P[2]+H|0,P[3]=P[3]+F|0,P[4]=P[4]+p|0,P[5]=P[5]+v|0,P[6]=P[6]+k|0,P[7]=P[7]+j|0},"_doProcessBlock"),_doFinalize:T(function(){var c=this._data,G=c.words,P=this._nDataBytes*8,_=c.sigBytes*8;return G[_>>>5]|=128<<24-_%32,G[(_+64>>>9<<4)+14]=R.floor(P/4294967296),G[(_+64>>>9<<4)+15]=P,c.sigBytes=G.length*4,this._process(),this._hash},"_doFinalize"),clone:T(function(){var c=L.clone.call(this);return c._hash=this._hash.clone(),c},"clone")});I.SHA256=L._createHelper(M),I.HmacSHA256=L._createHmacHelper(M)}(Math),s.SHA256})}(Hu)),Hu.exports}T(B1,"requireSha256");var du={exports:{}},Ox;function X9(){return Ox||(Ox=1,function(E,A){(function(s,R,I){E.exports=R(iA(),B1())})(Xt,function(s){return function(){var R=s,I=R.lib,i=I.WordArray,a=R.algo,L=a.SHA256,S=a.SHA224=L.extend({_doReset:T(function(){this._hash=new i.init([3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428])},"_doReset"),_doFinalize:T(function(){var o=L._doFinalize.call(this);return o.sigBytes-=4,o},"_doFinalize")});R.SHA224=L._createHelper(S),R.HmacSHA224=L._createHmacHelper(S)}(),s.SHA224})}(du)),du.exports}T(X9,"requireSha224");var fu={exports:{}},nx;function Q6(){return nx||(nx=1,function(E,A){(function(s,R,I){E.exports=R(iA(),vM())})(Xt,function(s){return function(){var R=s,I=R.lib,i=I.Hasher,a=R.x64,L=a.Word,S=a.WordArray,o=R.algo;function l(){return L.create.apply(L,arguments)}T(l,"X64Word_create");var D=[l(1116352408,3609767458),l(1899447441,602891725),l(3049323471,3964484399),l(3921009573,2173295548),l(961987163,4081628472),l(1508970993,3053834265),l(2453635748,2937671579),l(2870763221,3664609560),l(3624381080,2734883394),l(310598401,1164996542),l(607225278,1323610764),l(1426881987,3590304994),l(1925078388,4068182383),l(2162078206,991336113),l(2614888103,633803317),l(3248222580,3479774868),l(3835390401,2666613458),l(4022224774,944711139),l(264347078,2341262773),l(604807628,2007800933),l(770255983,1495990901),l(1249150122,1856431235),l(1555081692,3175218132),l(1996064986,2198950837),l(2554220882,3999719339),l(2821834349,766784016),l(2952996808,2566594879),l(3210313671,3203337956),l(3336571891,1034457026),l(3584528711,2466948901),l(113926993,3758326383),l(338241895,168717936),l(666307205,1188179964),l(773529912,1546045734),l(1294757372,1522805485),l(1396182291,2643833823),l(1695183700,2343527390),l(1986661051,1014477480),l(2177026350,1206759142),l(2456956037,344077627),l(2730485921,1290863460),l(2820302411,3158454273),l(3259730800,3505952657),l(3345764771,106217008),l(3516065817,3606008344),l(3600352804,1432725776),l(4094571909,1467031594),l(275423344,851169720),l(430227734,3100823752),l(506948616,1363258195),l(659060556,3750685593),l(883997877,3785050280),l(958139571,3318307427),l(1322822218,3812723403),l(1537002063,2003034995),l(1747873779,3602036899),l(1955562222,1575990012),l(2024104815,1125592928),l(2227730452,2716904306),l(2361852424,442776044),l(2428436474,593698344),l(2756734187,3733110249),l(3204031479,2999351573),l(3329325298,3815920427),l(3391569614,3928383900),l(3515267271,566280711),l(3940187606,3454069534),l(4118630271,4000239992),l(116418474,1914138554),l(174292421,2731055270),l(289380356,3203993006),l(460393269,320620315),l(685471733,587496836),l(852142971,1086792851),l(1017036298,365543100),l(1126000580,2618297676),l(1288033470,3409855158),l(1501505948,4234509866),l(1607167915,987167468),l(1816402316,1246189591)],M=[];(function(){for(var G=0;G<80;G++)M[G]=l()})();var c=o.SHA512=i.extend({_doReset:T(function(){this._hash=new S.init([new L.init(1779033703,4089235720),new L.init(3144134277,2227873595),new L.init(1013904242,4271175723),new L.init(2773480762,1595750129),new L.init(1359893119,2917565137),new L.init(2600822924,725511199),new L.init(528734635,4215389547),new L.init(1541459225,327033209)])},"_doReset"),_doProcessBlock:T(function(G,P){for(var _=this._hash.words,g=_[0],H=_[1],F=_[2],p=_[3],v=_[4],k=_[5],j=_[6],q=_[7],ie=g.high,z=g.low,Oe=H.high,ae=H.low,Le=F.high,Ne=F.low,De=p.high,Be=p.low,de=v.high,fe=v.low,Ye=k.high,Re=k.low,Ie=j.high,oe=j.low,Te=q.high,he=q.low,tt=ie,lt=z,yt=Oe,Ut=ae,EA=Le,AE=Ne,WA=De,pE=Be,yE=de,ut=fe,aA=Ye,hA=Re,DE=Ie,OR=oe,Ta=Te,bn=he,Cs=0;Cs<80;Cs++){var nR,Bt,Qt=M[Cs];if(Cs<16)Bt=Qt.high=G[P+Cs*2]|0,nR=Qt.low=G[P+Cs*2+1]|0;else{var OE=M[Cs-15],ME=OE.high,NE=OE.low,ts=(ME>>>1|NE<<31)^(ME>>>8|NE<<24)^ME>>>7,vO=(NE>>>1|ME<<31)^(NE>>>8|ME<<24)^(NE>>>7|ME<<25),kn=M[Cs-2],XR=kn.high,Zn=kn.low,Mo=(XR>>>19|Zn<<13)^(XR<<3|Zn>>>29)^XR>>>6,er=(Zn>>>19|XR<<13)^(Zn<<3|XR>>>29)^(Zn>>>6|XR<<26),tr=M[Cs-7],Sb=tr.high,ob=tr.low,hV=M[Cs-16],lb=hV.high,cV=hV.low;nR=vO+ob,Bt=ts+Sb+(nR>>>0<vO>>>0?1:0),nR=nR+er,Bt=Bt+Mo+(nR>>>0<er>>>0?1:0),nR=nR+cV,Bt=Bt+lb+(nR>>>0<cV>>>0?1:0),Qt.high=Bt,Qt.low=nR}var Cb=yE&aA^~yE&DE,GV=ut&hA^~ut&OR,Ub=tt&yt^tt&EA^yt&EA,Db=lt&Ut^lt&AE^Ut&AE,Mb=(tt>>>28|lt<<4)^(tt<<30|lt>>>2)^(tt<<25|lt>>>7),PV=(lt>>>28|tt<<4)^(lt<<30|tt>>>2)^(lt<<25|tt>>>7),ub=(yE>>>14|ut<<18)^(yE>>>18|ut<<14)^(yE<<23|ut>>>9),hb=(ut>>>14|yE<<18)^(ut>>>18|yE<<14)^(ut<<23|yE>>>9),_V=D[Cs],cb=_V.high,HV=_V.low,PR=bn+hb,Xn=Ta+ub+(PR>>>0<bn>>>0?1:0),PR=PR+GV,Xn=Xn+Cb+(PR>>>0<GV>>>0?1:0),PR=PR+HV,Xn=Xn+cb+(PR>>>0<HV>>>0?1:0),PR=PR+nR,Xn=Xn+Bt+(PR>>>0<nR>>>0?1:0),dV=PV+Db,Gb=Mb+Ub+(dV>>>0<PV>>>0?1:0);Ta=DE,bn=OR,DE=aA,OR=hA,aA=yE,hA=ut,ut=pE+PR|0,yE=WA+Xn+(ut>>>0<pE>>>0?1:0)|0,WA=EA,pE=AE,EA=yt,AE=Ut,yt=tt,Ut=lt,lt=PR+dV|0,tt=Xn+Gb+(lt>>>0<PR>>>0?1:0)|0}z=g.low=z+lt,g.high=ie+tt+(z>>>0<lt>>>0?1:0),ae=H.low=ae+Ut,H.high=Oe+yt+(ae>>>0<Ut>>>0?1:0),Ne=F.low=Ne+AE,F.high=Le+EA+(Ne>>>0<AE>>>0?1:0),Be=p.low=Be+pE,p.high=De+WA+(Be>>>0<pE>>>0?1:0),fe=v.low=fe+ut,v.high=de+yE+(fe>>>0<ut>>>0?1:0),Re=k.low=Re+hA,k.high=Ye+aA+(Re>>>0<hA>>>0?1:0),oe=j.low=oe+OR,j.high=Ie+DE+(oe>>>0<OR>>>0?1:0),he=q.low=he+bn,q.high=Te+Ta+(he>>>0<bn>>>0?1:0)},"_doProcessBlock"),_doFinalize:T(function(){var G=this._data,P=G.words,_=this._nDataBytes*8,g=G.sigBytes*8;P[g>>>5]|=128<<24-g%32,P[(g+128>>>10<<5)+30]=Math.floor(_/4294967296),P[(g+128>>>10<<5)+31]=_,G.sigBytes=P.length*4,this._process();var H=this._hash.toX32();return H},"_doFinalize"),clone:T(function(){var G=i.clone.call(this);return G._hash=this._hash.clone(),G},"clone"),blockSize:1024/32});R.SHA512=i._createHelper(c),R.HmacSHA512=i._createHmacHelper(c)}(),s.SHA512})}(fu)),fu.exports}T(Q6,"requireSha512");var Bu={exports:{}},Ix;function Q9(){return Ix||(Ix=1,function(E,A){(function(s,R,I){E.exports=R(iA(),vM(),Q6())})(Xt,function(s){return function(){var R=s,I=R.x64,i=I.Word,a=I.WordArray,L=R.algo,S=L.SHA512,o=L.SHA384=S.extend({_doReset:T(function(){this._hash=new a.init([new i.init(3418070365,3238371032),new i.init(1654270250,914150663),new i.init(2438529370,812702999),new i.init(355462360,4144912697),new i.init(1731405415,4290775857),new i.init(2394180231,1750603025),new i.init(3675008525,1694076839),new i.init(1203062813,3204075428)])},"_doReset"),_doFinalize:T(function(){var l=S._doFinalize.call(this);return l.sigBytes-=16,l},"_doFinalize")});R.SHA384=S._createHelper(o),R.HmacSHA384=S._createHmacHelper(o)}(),s.SHA384})}(Bu)),Bu.exports}T(Q9,"requireSha384");var gu={exports:{}},ix;function J9(){return ix||(ix=1,function(E,A){(function(s,R,I){E.exports=R(iA(),vM())})(Xt,function(s){return function(R){var I=s,i=I.lib,a=i.WordArray,L=i.Hasher,S=I.x64,o=S.Word,l=I.algo,D=[],M=[],c=[];(function(){for(var _=1,g=0,H=0;H<24;H++){D[_+5*g]=(H+1)*(H+2)/2%64;var F=g%5,p=(2*_+3*g)%5;_=F,g=p}for(var _=0;_<5;_++)for(var g=0;g<5;g++)M[_+5*g]=g+(2*_+3*g)%5*5;for(var v=1,k=0;k<24;k++){for(var j=0,q=0,ie=0;ie<7;ie++){if(v&1){var z=(1<<ie)-1;z<32?q^=1<<z:j^=1<<z-32}v&128?v=v<<1^113:v<<=1}c[k]=o.create(j,q)}})();var G=[];(function(){for(var _=0;_<25;_++)G[_]=o.create()})();var P=l.SHA3=L.extend({cfg:L.cfg.extend({outputLength:512}),_doReset:T(function(){for(var _=this._state=[],g=0;g<25;g++)_[g]=new o.init;this.blockSize=(1600-2*this.cfg.outputLength)/32},"_doReset"),_doProcessBlock:T(function(_,g){for(var H=this._state,F=this.blockSize/2,p=0;p<F;p++){var v=_[g+2*p],k=_[g+2*p+1];v=(v<<8|v>>>24)&16711935|(v<<24|v>>>8)&4278255360,k=(k<<8|k>>>24)&16711935|(k<<24|k>>>8)&4278255360;var j=H[p];j.high^=k,j.low^=v}for(var q=0;q<24;q++){for(var ie=0;ie<5;ie++){for(var z=0,Oe=0,ae=0;ae<5;ae++){var j=H[ie+5*ae];z^=j.high,Oe^=j.low}var Le=G[ie];Le.high=z,Le.low=Oe}for(var ie=0;ie<5;ie++)for(var Ne=G[(ie+4)%5],De=G[(ie+1)%5],Be=De.high,de=De.low,z=Ne.high^(Be<<1|de>>>31),Oe=Ne.low^(de<<1|Be>>>31),ae=0;ae<5;ae++){var j=H[ie+5*ae];j.high^=z,j.low^=Oe}for(var fe=1;fe<25;fe++){var z,Oe,j=H[fe],Ye=j.high,Re=j.low,Ie=D[fe];Ie<32?(z=Ye<<Ie|Re>>>32-Ie,Oe=Re<<Ie|Ye>>>32-Ie):(z=Re<<Ie-32|Ye>>>64-Ie,Oe=Ye<<Ie-32|Re>>>64-Ie);var oe=G[M[fe]];oe.high=z,oe.low=Oe}var Te=G[0],he=H[0];Te.high=he.high,Te.low=he.low;for(var ie=0;ie<5;ie++)for(var ae=0;ae<5;ae++){var fe=ie+5*ae,j=H[fe],tt=G[fe],lt=G[(ie+1)%5+5*ae],yt=G[(ie+2)%5+5*ae];j.high=tt.high^~lt.high&yt.high,j.low=tt.low^~lt.low&yt.low}var j=H[0],Ut=c[q];j.high^=Ut.high,j.low^=Ut.low}},"_doProcessBlock"),_doFinalize:T(function(){var _=this._data,g=_.words;this._nDataBytes*8;var H=_.sigBytes*8,F=this.blockSize*32;g[H>>>5]|=1<<24-H%32,g[(R.ceil((H+1)/F)*F>>>5)-1]|=128,_.sigBytes=g.length*4,this._process();for(var p=this._state,v=this.cfg.outputLength/8,k=v/8,j=[],q=0;q<k;q++){var ie=p[q],z=ie.high,Oe=ie.low;z=(z<<8|z>>>24)&16711935|(z<<24|z>>>8)&4278255360,Oe=(Oe<<8|Oe>>>24)&16711935|(Oe<<24|Oe>>>8)&4278255360,j.push(Oe),j.push(z)}return new a.init(j,v)},"_doFinalize"),clone:T(function(){for(var _=L.clone.call(this),g=_._state=this._state.slice(0),H=0;H<25;H++)g[H]=g[H].clone();return _},"clone")});I.SHA3=L._createHelper(P),I.HmacSHA3=L._createHmacHelper(P)}(Math),s.SHA3})}(gu)),gu.exports}T(J9,"requireSha3");var Ku={exports:{}},ax;function $9(){return ax||(ax=1,function(E,A){(function(s,R){E.exports=R(iA())})(Xt,function(s){/** @preserve
			(c) 2012 by Cédric Mesnil. All rights reserved.

			Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

			    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
			    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.

			THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
			*/return function(R){var I=s,i=I.lib,a=i.WordArray,L=i.Hasher,S=I.algo,o=a.create([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13]),l=a.create([5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11]),D=a.create([11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6]),M=a.create([8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11]),c=a.create([0,1518500249,1859775393,2400959708,2840853838]),G=a.create([1352829926,1548603684,1836072691,2053994217,0]),P=S.RIPEMD160=L.extend({_doReset:T(function(){this._hash=a.create([1732584193,4023233417,2562383102,271733878,3285377520])},"_doReset"),_doProcessBlock:T(function(k,j){for(var q=0;q<16;q++){var ie=j+q,z=k[ie];k[ie]=(z<<8|z>>>24)&16711935|(z<<24|z>>>8)&4278255360}var Oe=this._hash.words,ae=c.words,Le=G.words,Ne=o.words,De=l.words,Be=D.words,de=M.words,fe,Ye,Re,Ie,oe,Te,he,tt,lt,yt;Te=fe=Oe[0],he=Ye=Oe[1],tt=Re=Oe[2],lt=Ie=Oe[3],yt=oe=Oe[4];for(var Ut,q=0;q<80;q+=1)Ut=fe+k[j+Ne[q]]|0,q<16?Ut+=_(Ye,Re,Ie)+ae[0]:q<32?Ut+=g(Ye,Re,Ie)+ae[1]:q<48?Ut+=H(Ye,Re,Ie)+ae[2]:q<64?Ut+=F(Ye,Re,Ie)+ae[3]:Ut+=p(Ye,Re,Ie)+ae[4],Ut=Ut|0,Ut=v(Ut,Be[q]),Ut=Ut+oe|0,fe=oe,oe=Ie,Ie=v(Re,10),Re=Ye,Ye=Ut,Ut=Te+k[j+De[q]]|0,q<16?Ut+=p(he,tt,lt)+Le[0]:q<32?Ut+=F(he,tt,lt)+Le[1]:q<48?Ut+=H(he,tt,lt)+Le[2]:q<64?Ut+=g(he,tt,lt)+Le[3]:Ut+=_(he,tt,lt)+Le[4],Ut=Ut|0,Ut=v(Ut,de[q]),Ut=Ut+yt|0,Te=yt,yt=lt,lt=v(tt,10),tt=he,he=Ut;Ut=Oe[1]+Re+lt|0,Oe[1]=Oe[2]+Ie+yt|0,Oe[2]=Oe[3]+oe+Te|0,Oe[3]=Oe[4]+fe+he|0,Oe[4]=Oe[0]+Ye+tt|0,Oe[0]=Ut},"_doProcessBlock"),_doFinalize:T(function(){var k=this._data,j=k.words,q=this._nDataBytes*8,ie=k.sigBytes*8;j[ie>>>5]|=128<<24-ie%32,j[(ie+64>>>9<<4)+14]=(q<<8|q>>>24)&16711935|(q<<24|q>>>8)&4278255360,k.sigBytes=(j.length+1)*4,this._process();for(var z=this._hash,Oe=z.words,ae=0;ae<5;ae++){var Le=Oe[ae];Oe[ae]=(Le<<8|Le>>>24)&16711935|(Le<<24|Le>>>8)&4278255360}return z},"_doFinalize"),clone:T(function(){var k=L.clone.call(this);return k._hash=this._hash.clone(),k},"clone")});function _(k,j,q){return k^j^q}T(_,"f1");function g(k,j,q){return k&j|~k&q}T(g,"f2");function H(k,j,q){return(k|~j)^q}T(H,"f3");function F(k,j,q){return k&q|j&~q}T(F,"f4");function p(k,j,q){return k^(j|~q)}T(p,"f5");function v(k,j){return k<<j|k>>>32-j}T(v,"rotl"),I.RIPEMD160=L._createHelper(P),I.HmacRIPEMD160=L._createHmacHelper(P)}(),s.RIPEMD160})}(Ku)),Ku.exports}T($9,"requireRipemd160");var Fu={exports:{}},Lx;function g1(){return Lx||(Lx=1,function(E,A){(function(s,R){E.exports=R(iA())})(Xt,function(s){(function(){var R=s,I=R.lib,i=I.Base,a=R.enc,L=a.Utf8,S=R.algo;S.HMAC=i.extend({init:T(function(o,l){o=this._hasher=new o.init,typeof l=="string"&&(l=L.parse(l));var D=o.blockSize,M=D*4;l.sigBytes>M&&(l=o.finalize(l)),l.clamp();for(var c=this._oKey=l.clone(),G=this._iKey=l.clone(),P=c.words,_=G.words,g=0;g<D;g++)P[g]^=1549556828,_[g]^=909522486;c.sigBytes=G.sigBytes=M,this.reset()},"init"),reset:T(function(){var o=this._hasher;o.reset(),o.update(this._iKey)},"reset"),update:T(function(o){return this._hasher.update(o),this},"update"),finalize:T(function(o){var l=this._hasher,D=l.finalize(o);l.reset();var M=l.finalize(this._oKey.clone().concat(D));return M},"finalize")})})()})}(Fu)),Fu.exports}T(g1,"requireHmac");var mu={exports:{}},rx;function q9(){return rx||(rx=1,function(E,A){(function(s,R,I){E.exports=R(iA(),B1(),g1())})(Xt,function(s){return function(){var R=s,I=R.lib,i=I.Base,a=I.WordArray,L=R.algo,S=L.SHA256,o=L.HMAC,l=L.PBKDF2=i.extend({cfg:i.extend({keySize:128/32,hasher:S,iterations:25e4}),init:T(function(D){this.cfg=this.cfg.extend(D)},"init"),compute:T(function(D,M){for(var c=this.cfg,G=o.create(c.hasher,D),P=a.create(),_=a.create([1]),g=P.words,H=_.words,F=c.keySize,p=c.iterations;g.length<F;){var v=G.update(M).finalize(_);G.reset();for(var k=v.words,j=k.length,q=v,ie=1;ie<p;ie++){q=G.finalize(q),G.reset();for(var z=q.words,Oe=0;Oe<j;Oe++)k[Oe]^=z[Oe]}P.concat(v),H[0]++}return P.sigBytes=F*4,P},"compute")});R.PBKDF2=function(D,M,c){return l.create(c).compute(D,M)}}(),s.PBKDF2})}(mu)),mu.exports}T(q9,"requirePbkdf2");var Wu={exports:{}},Nx;function JI(){return Nx||(Nx=1,function(E,A){(function(s,R,I){E.exports=R(iA(),X6(),g1())})(Xt,function(s){return function(){var R=s,I=R.lib,i=I.Base,a=I.WordArray,L=R.algo,S=L.MD5,o=L.EvpKDF=i.extend({cfg:i.extend({keySize:128/32,hasher:S,iterations:1}),init:T(function(l){this.cfg=this.cfg.extend(l)},"init"),compute:T(function(l,D){for(var M,c=this.cfg,G=c.hasher.create(),P=a.create(),_=P.words,g=c.keySize,H=c.iterations;_.length<g;){M&&G.update(M),M=G.update(l).finalize(D),G.reset();for(var F=1;F<H;F++)M=G.finalize(M),G.reset();P.concat(M)}return P.sigBytes=g*4,P},"compute")});R.EvpKDF=function(l,D,M){return o.create(M).compute(l,D)}}(),s.EvpKDF})}(Wu)),Wu.exports}T(JI,"requireEvpkdf");var Yu={exports:{}},Tx;function ls(){return Tx||(Tx=1,function(E,A){(function(s,R,I){E.exports=R(iA(),JI())})(Xt,function(s){s.lib.Cipher||function(R){var I=s,i=I.lib,a=i.Base,L=i.WordArray,S=i.BufferedBlockAlgorithm,o=I.enc;o.Utf8;var l=o.Base64,D=I.algo,M=D.EvpKDF,c=i.Cipher=S.extend({cfg:a.extend(),createEncryptor:T(function(z,Oe){return this.create(this._ENC_XFORM_MODE,z,Oe)},"createEncryptor"),createDecryptor:T(function(z,Oe){return this.create(this._DEC_XFORM_MODE,z,Oe)},"createDecryptor"),init:T(function(z,Oe,ae){this.cfg=this.cfg.extend(ae),this._xformMode=z,this._key=Oe,this.reset()},"init"),reset:T(function(){S.reset.call(this),this._doReset()},"reset"),process:T(function(z){return this._append(z),this._process()},"process"),finalize:T(function(z){z&&this._append(z);var Oe=this._doFinalize();return Oe},"finalize"),keySize:128/32,ivSize:128/32,_ENC_XFORM_MODE:1,_DEC_XFORM_MODE:2,_createHelper:function(){function z(Oe){return typeof Oe=="string"?ie:k}return T(z,"selectCipherStrategy"),function(Oe){return{encrypt:T(function(ae,Le,Ne){return z(Le).encrypt(Oe,ae,Le,Ne)},"encrypt"),decrypt:T(function(ae,Le,Ne){return z(Le).decrypt(Oe,ae,Le,Ne)},"decrypt")}}}()});i.StreamCipher=c.extend({_doFinalize:T(function(){var z=this._process(!0);return z},"_doFinalize"),blockSize:1});var G=I.mode={},P=i.BlockCipherMode=a.extend({createEncryptor:T(function(z,Oe){return this.Encryptor.create(z,Oe)},"createEncryptor"),createDecryptor:T(function(z,Oe){return this.Decryptor.create(z,Oe)},"createDecryptor"),init:T(function(z,Oe){this._cipher=z,this._iv=Oe},"init")}),_=G.CBC=function(){var z=P.extend();z.Encryptor=z.extend({processBlock:T(function(ae,Le){var Ne=this._cipher,De=Ne.blockSize;Oe.call(this,ae,Le,De),Ne.encryptBlock(ae,Le),this._prevBlock=ae.slice(Le,Le+De)},"processBlock")}),z.Decryptor=z.extend({processBlock:T(function(ae,Le){var Ne=this._cipher,De=Ne.blockSize,Be=ae.slice(Le,Le+De);Ne.decryptBlock(ae,Le),Oe.call(this,ae,Le,De),this._prevBlock=Be},"processBlock")});function Oe(ae,Le,Ne){var De,Be=this._iv;Be?(De=Be,this._iv=R):De=this._prevBlock;for(var de=0;de<Ne;de++)ae[Le+de]^=De[de]}return T(Oe,"xorBlock"),z}(),g=I.pad={},H=g.Pkcs7={pad:T(function(z,Oe){for(var ae=Oe*4,Le=ae-z.sigBytes%ae,Ne=Le<<24|Le<<16|Le<<8|Le,De=[],Be=0;Be<Le;Be+=4)De.push(Ne);var de=L.create(De,Le);z.concat(de)},"pad"),unpad:T(function(z){var Oe=z.words[z.sigBytes-1>>>2]&255;z.sigBytes-=Oe},"unpad")};i.BlockCipher=c.extend({cfg:c.cfg.extend({mode:_,padding:H}),reset:T(function(){var z;c.reset.call(this);var Oe=this.cfg,ae=Oe.iv,Le=Oe.mode;this._xformMode==this._ENC_XFORM_MODE?z=Le.createEncryptor:(z=Le.createDecryptor,this._minBufferSize=1),this._mode&&this._mode.__creator==z?this._mode.init(this,ae&&ae.words):(this._mode=z.call(Le,this,ae&&ae.words),this._mode.__creator=z)},"reset"),_doProcessBlock:T(function(z,Oe){this._mode.processBlock(z,Oe)},"_doProcessBlock"),_doFinalize:T(function(){var z,Oe=this.cfg.padding;return this._xformMode==this._ENC_XFORM_MODE?(Oe.pad(this._data,this.blockSize),z=this._process(!0)):(z=this._process(!0),Oe.unpad(z)),z},"_doFinalize"),blockSize:128/32});var F=i.CipherParams=a.extend({init:T(function(z){this.mixIn(z)},"init"),toString:T(function(z){return(z||this.formatter).stringify(this)},"toString")}),p=I.format={},v=p.OpenSSL={stringify:T(function(z){var Oe,ae=z.ciphertext,Le=z.salt;return Le?Oe=L.create([1398893684,1701076831]).concat(Le).concat(ae):Oe=ae,Oe.toString(l)},"stringify"),parse:T(function(z){var Oe,ae=l.parse(z),Le=ae.words;return Le[0]==1398893684&&Le[1]==1701076831&&(Oe=L.create(Le.slice(2,4)),Le.splice(0,4),ae.sigBytes-=16),F.create({ciphertext:ae,salt:Oe})},"parse")},k=i.SerializableCipher=a.extend({cfg:a.extend({format:v}),encrypt:T(function(z,Oe,ae,Le){Le=this.cfg.extend(Le);var Ne=z.createEncryptor(ae,Le),De=Ne.finalize(Oe),Be=Ne.cfg;return F.create({ciphertext:De,key:ae,iv:Be.iv,algorithm:z,mode:Be.mode,padding:Be.padding,blockSize:z.blockSize,formatter:Le.format})},"encrypt"),decrypt:T(function(z,Oe,ae,Le){Le=this.cfg.extend(Le),Oe=this._parse(Oe,Le.format);var Ne=z.createDecryptor(ae,Le).finalize(Oe.ciphertext);return Ne},"decrypt"),_parse:T(function(z,Oe){return typeof z=="string"?Oe.parse(z,this):z},"_parse")}),j=I.kdf={},q=j.OpenSSL={execute:T(function(z,Oe,ae,Le,Ne){if(Le||(Le=L.random(64/8)),Ne)var De=M.create({keySize:Oe+ae,hasher:Ne}).compute(z,Le);else var De=M.create({keySize:Oe+ae}).compute(z,Le);var Be=L.create(De.words.slice(Oe),ae*4);return De.sigBytes=Oe*4,F.create({key:De,iv:Be,salt:Le})},"execute")},ie=i.PasswordBasedCipher=k.extend({cfg:k.cfg.extend({kdf:q}),encrypt:T(function(z,Oe,ae,Le){Le=this.cfg.extend(Le);var Ne=Le.kdf.execute(ae,z.keySize,z.ivSize,Le.salt,Le.hasher);Le.iv=Ne.iv;var De=k.encrypt.call(this,z,Oe,Ne.key,Le);return De.mixIn(Ne),De},"encrypt"),decrypt:T(function(z,Oe,ae,Le){Le=this.cfg.extend(Le),Oe=this._parse(Oe,Le.format);var Ne=Le.kdf.execute(ae,z.keySize,z.ivSize,Oe.salt,Le.hasher);Le.iv=Ne.iv;var De=k.decrypt.call(this,z,Oe,Ne.key,Le);return De},"decrypt")})}()})}(Yu)),Yu.exports}T(ls,"requireCipherCore");var pu={exports:{}},Sx;function j9(){return Sx||(Sx=1,function(E,A){(function(s,R,I){E.exports=R(iA(),ls())})(Xt,function(s){return s.mode.CFB=function(){var R=s.lib.BlockCipherMode.extend();R.Encryptor=R.extend({processBlock:T(function(i,a){var L=this._cipher,S=L.blockSize;I.call(this,i,a,S,L),this._prevBlock=i.slice(a,a+S)},"processBlock")}),R.Decryptor=R.extend({processBlock:T(function(i,a){var L=this._cipher,S=L.blockSize,o=i.slice(a,a+S);I.call(this,i,a,S,L),this._prevBlock=o},"processBlock")});function I(i,a,L,S){var o,l=this._iv;l?(o=l.slice(0),this._iv=void 0):o=this._prevBlock,S.encryptBlock(o,0);for(var D=0;D<L;D++)i[a+D]^=o[D]}return T(I,"generateKeystreamAndEncrypt"),R}(),s.mode.CFB})}(pu)),pu.exports}T(j9,"requireModeCfb");var yu={exports:{}},ox;function z9(){return ox||(ox=1,function(E,A){(function(s,R,I){E.exports=R(iA(),ls())})(Xt,function(s){return s.mode.CTR=function(){var R=s.lib.BlockCipherMode.extend(),I=R.Encryptor=R.extend({processBlock:T(function(i,a){var L=this._cipher,S=L.blockSize,o=this._iv,l=this._counter;o&&(l=this._counter=o.slice(0),this._iv=void 0);var D=l.slice(0);L.encryptBlock(D,0),l[S-1]=l[S-1]+1|0;for(var M=0;M<S;M++)i[a+M]^=D[M]},"processBlock")});return R.Decryptor=I,R}(),s.mode.CTR})}(yu)),yu.exports}T(z9,"requireModeCtr");var wu={exports:{}},lx;function eX(){return lx||(lx=1,function(E,A){(function(s,R,I){E.exports=R(iA(),ls())})(Xt,function(s){/** @preserve
 * Counter block mode compatible with  Dr Brian Gladman fileenc.c
 * derived from CryptoJS.mode.CTR
 * Jan Hruby jhruby.web@gmail.com
 */return s.mode.CTRGladman=function(){var R=s.lib.BlockCipherMode.extend();function I(L){if((L>>24&255)===255){var S=L>>16&255,o=L>>8&255,l=L&255;S===255?(S=0,o===255?(o=0,l===255?l=0:++l):++o):++S,L=0,L+=S<<16,L+=o<<8,L+=l}else L+=1<<24;return L}T(I,"incWord");function i(L){return(L[0]=I(L[0]))===0&&(L[1]=I(L[1])),L}T(i,"incCounter");var a=R.Encryptor=R.extend({processBlock:T(function(L,S){var o=this._cipher,l=o.blockSize,D=this._iv,M=this._counter;D&&(M=this._counter=D.slice(0),this._iv=void 0),i(M);var c=M.slice(0);o.encryptBlock(c,0);for(var G=0;G<l;G++)L[S+G]^=c[G]},"processBlock")});return R.Decryptor=a,R}(),s.mode.CTRGladman})}(wu)),wu.exports}T(eX,"requireModeCtrGladman");var Vu={exports:{}},Cx;function tX(){return Cx||(Cx=1,function(E,A){(function(s,R,I){E.exports=R(iA(),ls())})(Xt,function(s){return s.mode.OFB=function(){var R=s.lib.BlockCipherMode.extend(),I=R.Encryptor=R.extend({processBlock:T(function(i,a){var L=this._cipher,S=L.blockSize,o=this._iv,l=this._keystream;o&&(l=this._keystream=o.slice(0),this._iv=void 0),L.encryptBlock(l,0);for(var D=0;D<S;D++)i[a+D]^=l[D]},"processBlock")});return R.Decryptor=I,R}(),s.mode.OFB})}(Vu)),Vu.exports}T(tX,"requireModeOfb");var vu={exports:{}},Ux;function AX(){return Ux||(Ux=1,function(E,A){(function(s,R,I){E.exports=R(iA(),ls())})(Xt,function(s){return s.mode.ECB=function(){var R=s.lib.BlockCipherMode.extend();return R.Encryptor=R.extend({processBlock:T(function(I,i){this._cipher.encryptBlock(I,i)},"processBlock")}),R.Decryptor=R.extend({processBlock:T(function(I,i){this._cipher.decryptBlock(I,i)},"processBlock")}),R}(),s.mode.ECB})}(vu)),vu.exports}T(AX,"requireModeEcb");var xu={exports:{}},Dx;function EX(){return Dx||(Dx=1,function(E,A){(function(s,R,I){E.exports=R(iA(),ls())})(Xt,function(s){return s.pad.AnsiX923={pad:T(function(R,I){var i=R.sigBytes,a=I*4,L=a-i%a,S=i+L-1;R.clamp(),R.words[S>>>2]|=L<<24-S%4*8,R.sigBytes+=L},"pad"),unpad:T(function(R){var I=R.words[R.sigBytes-1>>>2]&255;R.sigBytes-=I},"unpad")},s.pad.Ansix923})}(xu)),xu.exports}T(EX,"requirePadAnsix923");var bu={exports:{}},Mx;function sX(){return Mx||(Mx=1,function(E,A){(function(s,R,I){E.exports=R(iA(),ls())})(Xt,function(s){return s.pad.Iso10126={pad:T(function(R,I){var i=I*4,a=i-R.sigBytes%i;R.concat(s.lib.WordArray.random(a-1)).concat(s.lib.WordArray.create([a<<24],1))},"pad"),unpad:T(function(R){var I=R.words[R.sigBytes-1>>>2]&255;R.sigBytes-=I},"unpad")},s.pad.Iso10126})}(bu)),bu.exports}T(sX,"requirePadIso10126");var ku={exports:{}},ux;function RX(){return ux||(ux=1,function(E,A){(function(s,R,I){E.exports=R(iA(),ls())})(Xt,function(s){return s.pad.Iso97971={pad:T(function(R,I){R.concat(s.lib.WordArray.create([2147483648],1)),s.pad.ZeroPadding.pad(R,I)},"pad"),unpad:T(function(R){s.pad.ZeroPadding.unpad(R),R.sigBytes--},"unpad")},s.pad.Iso97971})}(ku)),ku.exports}T(RX,"requirePadIso97971");var Zu={exports:{}},hx;function OX(){return hx||(hx=1,function(E,A){(function(s,R,I){E.exports=R(iA(),ls())})(Xt,function(s){return s.pad.ZeroPadding={pad:T(function(R,I){var i=I*4;R.clamp(),R.sigBytes+=i-(R.sigBytes%i||i)},"pad"),unpad:T(function(R){for(var I=R.words,i=R.sigBytes-1,i=R.sigBytes-1;i>=0;i--)if(I[i>>>2]>>>24-i%4*8&255){R.sigBytes=i+1;break}},"unpad")},s.pad.ZeroPadding})}(Zu)),Zu.exports}T(OX,"requirePadZeropadding");var Xu={exports:{}},cx;function nX(){return cx||(cx=1,function(E,A){(function(s,R,I){E.exports=R(iA(),ls())})(Xt,function(s){return s.pad.NoPadding={pad:T(function(){},"pad"),unpad:T(function(){},"unpad")},s.pad.NoPadding})}(Xu)),Xu.exports}T(nX,"requirePadNopadding");var Qu={exports:{}},Gx;function IX(){return Gx||(Gx=1,function(E,A){(function(s,R,I){E.exports=R(iA(),ls())})(Xt,function(s){return function(R){var I=s,i=I.lib,a=i.CipherParams,L=I.enc,S=L.Hex,o=I.format;o.Hex={stringify:T(function(l){return l.ciphertext.toString(S)},"stringify"),parse:T(function(l){var D=S.parse(l);return a.create({ciphertext:D})},"parse")}}(),s.format.Hex})}(Qu)),Qu.exports}T(IX,"requireFormatHex");var Ju={exports:{}},Px;function iX(){return Px||(Px=1,function(E,A){(function(s,R,I){E.exports=R(iA(),ra(),Na(),JI(),ls())})(Xt,function(s){return function(){var R=s,I=R.lib,i=I.BlockCipher,a=R.algo,L=[],S=[],o=[],l=[],D=[],M=[],c=[],G=[],P=[],_=[];(function(){for(var F=[],p=0;p<256;p++)p<128?F[p]=p<<1:F[p]=p<<1^283;for(var v=0,k=0,p=0;p<256;p++){var j=k^k<<1^k<<2^k<<3^k<<4;j=j>>>8^j&255^99,L[v]=j,S[j]=v;var q=F[v],ie=F[q],z=F[ie],Oe=F[j]*257^j*16843008;o[v]=Oe<<24|Oe>>>8,l[v]=Oe<<16|Oe>>>16,D[v]=Oe<<8|Oe>>>24,M[v]=Oe;var Oe=z*16843009^ie*65537^q*257^v*16843008;c[j]=Oe<<24|Oe>>>8,G[j]=Oe<<16|Oe>>>16,P[j]=Oe<<8|Oe>>>24,_[j]=Oe,v?(v=q^F[F[F[z^q]]],k^=F[F[k]]):v=k=1}})();var g=[0,1,2,4,8,16,32,64,128,27,54],H=a.AES=i.extend({_doReset:T(function(){var F;if(!(this._nRounds&&this._keyPriorReset===this._key)){for(var p=this._keyPriorReset=this._key,v=p.words,k=p.sigBytes/4,j=this._nRounds=k+6,q=(j+1)*4,ie=this._keySchedule=[],z=0;z<q;z++)z<k?ie[z]=v[z]:(F=ie[z-1],z%k?k>6&&z%k==4&&(F=L[F>>>24]<<24|L[F>>>16&255]<<16|L[F>>>8&255]<<8|L[F&255]):(F=F<<8|F>>>24,F=L[F>>>24]<<24|L[F>>>16&255]<<16|L[F>>>8&255]<<8|L[F&255],F^=g[z/k|0]<<24),ie[z]=ie[z-k]^F);for(var Oe=this._invKeySchedule=[],ae=0;ae<q;ae++){var z=q-ae;if(ae%4)var F=ie[z];else var F=ie[z-4];ae<4||z<=4?Oe[ae]=F:Oe[ae]=c[L[F>>>24]]^G[L[F>>>16&255]]^P[L[F>>>8&255]]^_[L[F&255]]}}},"_doReset"),encryptBlock:T(function(F,p){this._doCryptBlock(F,p,this._keySchedule,o,l,D,M,L)},"encryptBlock"),decryptBlock:T(function(F,p){var v=F[p+1];F[p+1]=F[p+3],F[p+3]=v,this._doCryptBlock(F,p,this._invKeySchedule,c,G,P,_,S);var v=F[p+1];F[p+1]=F[p+3],F[p+3]=v},"decryptBlock"),_doCryptBlock:T(function(F,p,v,k,j,q,ie,z){for(var Oe=this._nRounds,ae=F[p]^v[0],Le=F[p+1]^v[1],Ne=F[p+2]^v[2],De=F[p+3]^v[3],Be=4,de=1;de<Oe;de++){var fe=k[ae>>>24]^j[Le>>>16&255]^q[Ne>>>8&255]^ie[De&255]^v[Be++],Ye=k[Le>>>24]^j[Ne>>>16&255]^q[De>>>8&255]^ie[ae&255]^v[Be++],Re=k[Ne>>>24]^j[De>>>16&255]^q[ae>>>8&255]^ie[Le&255]^v[Be++],Ie=k[De>>>24]^j[ae>>>16&255]^q[Le>>>8&255]^ie[Ne&255]^v[Be++];ae=fe,Le=Ye,Ne=Re,De=Ie}var fe=(z[ae>>>24]<<24|z[Le>>>16&255]<<16|z[Ne>>>8&255]<<8|z[De&255])^v[Be++],Ye=(z[Le>>>24]<<24|z[Ne>>>16&255]<<16|z[De>>>8&255]<<8|z[ae&255])^v[Be++],Re=(z[Ne>>>24]<<24|z[De>>>16&255]<<16|z[ae>>>8&255]<<8|z[Le&255])^v[Be++],Ie=(z[De>>>24]<<24|z[ae>>>16&255]<<16|z[Le>>>8&255]<<8|z[Ne&255])^v[Be++];F[p]=fe,F[p+1]=Ye,F[p+2]=Re,F[p+3]=Ie},"_doCryptBlock"),keySize:256/32});R.AES=i._createHelper(H)}(),s.AES})}(Ju)),Ju.exports}T(iX,"requireAes");var $u={exports:{}},_x;function aX(){return _x||(_x=1,function(E,A){(function(s,R,I){E.exports=R(iA(),ra(),Na(),JI(),ls())})(Xt,function(s){return function(){var R=s,I=R.lib,i=I.WordArray,a=I.BlockCipher,L=R.algo,S=[57,49,41,33,25,17,9,1,58,50,42,34,26,18,10,2,59,51,43,35,27,19,11,3,60,52,44,36,63,55,47,39,31,23,15,7,62,54,46,38,30,22,14,6,61,53,45,37,29,21,13,5,28,20,12,4],o=[14,17,11,24,1,5,3,28,15,6,21,10,23,19,12,4,26,8,16,7,27,20,13,2,41,52,31,37,47,55,30,40,51,45,33,48,44,49,39,56,34,53,46,42,50,36,29,32],l=[1,2,4,6,8,10,12,14,15,17,19,21,23,25,27,28],D=[{0:8421888,268435456:32768,536870912:8421378,805306368:2,1073741824:512,1342177280:8421890,1610612736:8389122,1879048192:8388608,2147483648:514,2415919104:8389120,2684354560:33280,2952790016:8421376,3221225472:32770,3489660928:8388610,3758096384:0,4026531840:33282,134217728:0,402653184:8421890,671088640:33282,939524096:32768,1207959552:8421888,1476395008:512,1744830464:8421378,2013265920:2,2281701376:8389120,2550136832:33280,2818572288:8421376,3087007744:8389122,3355443200:8388610,3623878656:32770,3892314112:514,4160749568:8388608,1:32768,268435457:2,536870913:8421888,805306369:8388608,1073741825:8421378,1342177281:33280,1610612737:512,1879048193:8389122,2147483649:8421890,2415919105:8421376,2684354561:8388610,2952790017:33282,3221225473:514,3489660929:8389120,3758096385:32770,4026531841:0,134217729:8421890,402653185:8421376,671088641:8388608,939524097:512,1207959553:32768,1476395009:8388610,1744830465:2,2013265921:33282,2281701377:32770,2550136833:8389122,2818572289:514,3087007745:8421888,3355443201:8389120,3623878657:0,3892314113:33280,4160749569:8421378},{0:1074282512,16777216:16384,33554432:524288,50331648:1074266128,67108864:1073741840,83886080:1074282496,100663296:1073758208,117440512:16,134217728:540672,150994944:1073758224,167772160:1073741824,184549376:540688,201326592:524304,218103808:0,234881024:16400,251658240:1074266112,8388608:1073758208,25165824:540688,41943040:16,58720256:1073758224,75497472:1074282512,92274688:1073741824,109051904:524288,125829120:1074266128,142606336:524304,159383552:0,176160768:16384,192937984:1074266112,209715200:1073741840,226492416:540672,243269632:1074282496,260046848:16400,268435456:0,285212672:1074266128,301989888:1073758224,318767104:1074282496,335544320:1074266112,352321536:16,369098752:540688,385875968:16384,402653184:16400,419430400:524288,436207616:524304,452984832:1073741840,469762048:540672,486539264:1073758208,503316480:1073741824,520093696:1074282512,276824064:540688,293601280:524288,310378496:1074266112,327155712:16384,343932928:1073758208,360710144:1074282512,377487360:16,394264576:1073741824,411041792:1074282496,427819008:1073741840,444596224:1073758224,461373440:524304,478150656:0,494927872:16400,511705088:1074266128,528482304:540672},{0:260,1048576:0,2097152:67109120,3145728:65796,4194304:65540,5242880:67108868,6291456:67174660,7340032:67174400,8388608:67108864,9437184:67174656,10485760:65792,11534336:67174404,12582912:67109124,13631488:65536,14680064:4,15728640:256,524288:67174656,1572864:67174404,2621440:0,3670016:67109120,4718592:67108868,5767168:65536,6815744:65540,7864320:260,8912896:4,9961472:256,11010048:67174400,12058624:65796,13107200:65792,14155776:67109124,15204352:67174660,16252928:67108864,16777216:67174656,17825792:65540,18874368:65536,19922944:67109120,20971520:256,22020096:67174660,23068672:67108868,24117248:0,25165824:67109124,26214400:67108864,27262976:4,28311552:65792,29360128:67174400,30408704:260,31457280:65796,32505856:67174404,17301504:67108864,18350080:260,19398656:67174656,20447232:0,21495808:65540,22544384:67109120,23592960:256,24641536:67174404,25690112:65536,26738688:67174660,27787264:65796,28835840:67108868,29884416:67109124,30932992:67174400,31981568:4,33030144:65792},{0:2151682048,65536:2147487808,131072:4198464,196608:2151677952,262144:0,327680:4198400,393216:2147483712,458752:4194368,524288:2147483648,589824:4194304,655360:64,720896:2147487744,786432:2151678016,851968:4160,917504:4096,983040:2151682112,32768:2147487808,98304:64,163840:2151678016,229376:2147487744,294912:4198400,360448:2151682112,425984:0,491520:2151677952,557056:4096,622592:2151682048,688128:4194304,753664:4160,819200:2147483648,884736:4194368,950272:4198464,1015808:2147483712,1048576:4194368,1114112:4198400,1179648:2147483712,1245184:0,1310720:4160,1376256:2151678016,1441792:2151682048,1507328:2147487808,1572864:2151682112,1638400:2147483648,1703936:2151677952,1769472:4198464,1835008:2147487744,1900544:4194304,1966080:64,2031616:4096,1081344:2151677952,1146880:2151682112,1212416:0,1277952:4198400,1343488:4194368,1409024:2147483648,1474560:2147487808,1540096:64,1605632:2147483712,1671168:4096,1736704:2147487744,1802240:2151678016,1867776:4160,1933312:2151682048,1998848:4194304,2064384:4198464},{0:128,4096:17039360,8192:262144,12288:536870912,16384:537133184,20480:16777344,24576:553648256,28672:262272,32768:16777216,36864:537133056,40960:536871040,45056:553910400,49152:553910272,53248:0,57344:17039488,61440:553648128,2048:17039488,6144:553648256,10240:128,14336:17039360,18432:262144,22528:537133184,26624:553910272,30720:536870912,34816:537133056,38912:0,43008:553910400,47104:16777344,51200:536871040,55296:553648128,59392:16777216,63488:262272,65536:262144,69632:128,73728:536870912,77824:553648256,81920:16777344,86016:553910272,90112:537133184,94208:16777216,98304:553910400,102400:553648128,106496:17039360,110592:537133056,114688:262272,118784:536871040,122880:0,126976:17039488,67584:553648256,71680:16777216,75776:17039360,79872:537133184,83968:536870912,88064:17039488,92160:128,96256:553910272,100352:262272,104448:553910400,108544:0,112640:553648128,116736:16777344,120832:262144,124928:537133056,129024:536871040},{0:268435464,256:8192,512:270532608,768:270540808,1024:268443648,1280:2097152,1536:2097160,1792:268435456,2048:0,2304:268443656,2560:2105344,2816:8,3072:270532616,3328:2105352,3584:8200,3840:270540800,128:270532608,384:270540808,640:8,896:2097152,1152:2105352,1408:268435464,1664:268443648,1920:8200,2176:2097160,2432:8192,2688:268443656,2944:270532616,3200:0,3456:270540800,3712:2105344,3968:268435456,4096:268443648,4352:270532616,4608:270540808,4864:8200,5120:2097152,5376:268435456,5632:268435464,5888:2105344,6144:2105352,6400:0,6656:8,6912:270532608,7168:8192,7424:268443656,7680:270540800,7936:2097160,4224:8,4480:2105344,4736:2097152,4992:268435464,5248:268443648,5504:8200,5760:270540808,6016:270532608,6272:270540800,6528:270532616,6784:8192,7040:2105352,7296:2097160,7552:0,7808:268435456,8064:268443656},{0:1048576,16:33555457,32:1024,48:1049601,64:34604033,80:0,96:1,112:34603009,128:33555456,144:1048577,160:33554433,176:34604032,192:34603008,208:1025,224:1049600,240:33554432,8:34603009,24:0,40:33555457,56:34604032,72:1048576,88:33554433,104:33554432,120:1025,136:1049601,152:33555456,168:34603008,184:1048577,200:1024,216:34604033,232:1,248:1049600,256:33554432,272:1048576,288:33555457,304:34603009,320:1048577,336:33555456,352:34604032,368:1049601,384:1025,400:34604033,416:1049600,432:1,448:0,464:34603008,480:33554433,496:1024,264:1049600,280:33555457,296:34603009,312:1,328:33554432,344:1048576,360:1025,376:34604032,392:33554433,408:34603008,424:0,440:34604033,456:1049601,472:1024,488:33555456,504:1048577},{0:134219808,1:131072,2:134217728,3:32,4:131104,5:134350880,6:134350848,7:2048,8:134348800,9:134219776,10:133120,11:134348832,12:2080,13:0,14:134217760,15:133152,2147483648:2048,2147483649:134350880,2147483650:134219808,2147483651:134217728,2147483652:134348800,2147483653:133120,2147483654:133152,2147483655:32,2147483656:134217760,2147483657:2080,2147483658:131104,2147483659:134350848,2147483660:0,2147483661:134348832,2147483662:134219776,2147483663:131072,16:133152,17:134350848,18:32,19:2048,20:134219776,21:134217760,22:134348832,23:131072,24:0,25:131104,26:134348800,27:134219808,28:134350880,29:133120,30:2080,31:134217728,2147483664:131072,2147483665:2048,2147483666:134348832,2147483667:133152,2147483668:32,2147483669:134348800,2147483670:134217728,2147483671:134219808,2147483672:134350880,2147483673:134217760,2147483674:134219776,2147483675:0,2147483676:133120,2147483677:2080,2147483678:131104,2147483679:134350848}],M=[4160749569,528482304,33030144,2064384,129024,8064,504,2147483679],c=L.DES=a.extend({_doReset:T(function(){for(var g=this._key,H=g.words,F=[],p=0;p<56;p++){var v=S[p]-1;F[p]=H[v>>>5]>>>31-v%32&1}for(var k=this._subKeys=[],j=0;j<16;j++){for(var q=k[j]=[],ie=l[j],p=0;p<24;p++)q[p/6|0]|=F[(o[p]-1+ie)%28]<<31-p%6,q[4+(p/6|0)]|=F[28+(o[p+24]-1+ie)%28]<<31-p%6;q[0]=q[0]<<1|q[0]>>>31;for(var p=1;p<7;p++)q[p]=q[p]>>>(p-1)*4+3;q[7]=q[7]<<5|q[7]>>>27}for(var z=this._invSubKeys=[],p=0;p<16;p++)z[p]=k[15-p]},"_doReset"),encryptBlock:T(function(g,H){this._doCryptBlock(g,H,this._subKeys)},"encryptBlock"),decryptBlock:T(function(g,H){this._doCryptBlock(g,H,this._invSubKeys)},"decryptBlock"),_doCryptBlock:T(function(g,H,F){this._lBlock=g[H],this._rBlock=g[H+1],G.call(this,4,252645135),G.call(this,16,65535),P.call(this,2,858993459),P.call(this,8,16711935),G.call(this,1,1431655765);for(var p=0;p<16;p++){for(var v=F[p],k=this._lBlock,j=this._rBlock,q=0,ie=0;ie<8;ie++)q|=D[ie][((j^v[ie])&M[ie])>>>0];this._lBlock=j,this._rBlock=k^q}var z=this._lBlock;this._lBlock=this._rBlock,this._rBlock=z,G.call(this,1,1431655765),P.call(this,8,16711935),P.call(this,2,858993459),G.call(this,16,65535),G.call(this,4,252645135),g[H]=this._lBlock,g[H+1]=this._rBlock},"_doCryptBlock"),keySize:64/32,ivSize:64/32,blockSize:64/32});function G(g,H){var F=(this._lBlock>>>g^this._rBlock)&H;this._rBlock^=F,this._lBlock^=F<<g}T(G,"exchangeLR");function P(g,H){var F=(this._rBlock>>>g^this._lBlock)&H;this._lBlock^=F,this._rBlock^=F<<g}T(P,"exchangeRL"),R.DES=a._createHelper(c);var _=L.TripleDES=a.extend({_doReset:T(function(){var g=this._key,H=g.words;if(H.length!==2&&H.length!==4&&H.length<6)throw new Error("Invalid key length - 3DES requires the key length to be 64, 128, 192 or >192.");var F=H.slice(0,2),p=H.length<4?H.slice(0,2):H.slice(2,4),v=H.length<6?H.slice(0,2):H.slice(4,6);this._des1=c.createEncryptor(i.create(F)),this._des2=c.createEncryptor(i.create(p)),this._des3=c.createEncryptor(i.create(v))},"_doReset"),encryptBlock:T(function(g,H){this._des1.encryptBlock(g,H),this._des2.decryptBlock(g,H),this._des3.encryptBlock(g,H)},"encryptBlock"),decryptBlock:T(function(g,H){this._des3.decryptBlock(g,H),this._des2.encryptBlock(g,H),this._des1.decryptBlock(g,H)},"decryptBlock"),keySize:192/32,ivSize:64/32,blockSize:64/32});R.TripleDES=a._createHelper(_)}(),s.TripleDES})}($u)),$u.exports}T(aX,"requireTripledes");var qu={exports:{}},Hx;function LX(){return Hx||(Hx=1,function(E,A){(function(s,R,I){E.exports=R(iA(),ra(),Na(),JI(),ls())})(Xt,function(s){return function(){var R=s,I=R.lib,i=I.StreamCipher,a=R.algo,L=a.RC4=i.extend({_doReset:T(function(){for(var l=this._key,D=l.words,M=l.sigBytes,c=this._S=[],G=0;G<256;G++)c[G]=G;for(var G=0,P=0;G<256;G++){var _=G%M,g=D[_>>>2]>>>24-_%4*8&255;P=(P+c[G]+g)%256;var H=c[G];c[G]=c[P],c[P]=H}this._i=this._j=0},"_doReset"),_doProcessBlock:T(function(l,D){l[D]^=S.call(this)},"_doProcessBlock"),keySize:256/32,ivSize:0});function S(){for(var l=this._S,D=this._i,M=this._j,c=0,G=0;G<4;G++){D=(D+1)%256,M=(M+l[D])%256;var P=l[D];l[D]=l[M],l[M]=P,c|=l[(l[D]+l[M])%256]<<24-G*8}return this._i=D,this._j=M,c}T(S,"generateKeystreamWord"),R.RC4=i._createHelper(L);var o=a.RC4Drop=L.extend({cfg:L.cfg.extend({drop:192}),_doReset:T(function(){L._doReset.call(this);for(var l=this.cfg.drop;l>0;l--)S.call(this)},"_doReset")});R.RC4Drop=i._createHelper(o)}(),s.RC4})}(qu)),qu.exports}T(LX,"requireRc4");var ju={exports:{}},dx;function rX(){return dx||(dx=1,function(E,A){(function(s,R,I){E.exports=R(iA(),ra(),Na(),JI(),ls())})(Xt,function(s){return function(){var R=s,I=R.lib,i=I.StreamCipher,a=R.algo,L=[],S=[],o=[],l=a.Rabbit=i.extend({_doReset:T(function(){for(var M=this._key.words,c=this.cfg.iv,G=0;G<4;G++)M[G]=(M[G]<<8|M[G]>>>24)&16711935|(M[G]<<24|M[G]>>>8)&4278255360;var P=this._X=[M[0],M[3]<<16|M[2]>>>16,M[1],M[0]<<16|M[3]>>>16,M[2],M[1]<<16|M[0]>>>16,M[3],M[2]<<16|M[1]>>>16],_=this._C=[M[2]<<16|M[2]>>>16,M[0]&4294901760|M[1]&65535,M[3]<<16|M[3]>>>16,M[1]&4294901760|M[2]&65535,M[0]<<16|M[0]>>>16,M[2]&4294901760|M[3]&65535,M[1]<<16|M[1]>>>16,M[3]&4294901760|M[0]&65535];this._b=0;for(var G=0;G<4;G++)D.call(this);for(var G=0;G<8;G++)_[G]^=P[G+4&7];if(c){var g=c.words,H=g[0],F=g[1],p=(H<<8|H>>>24)&16711935|(H<<24|H>>>8)&4278255360,v=(F<<8|F>>>24)&16711935|(F<<24|F>>>8)&4278255360,k=p>>>16|v&4294901760,j=v<<16|p&65535;_[0]^=p,_[1]^=k,_[2]^=v,_[3]^=j,_[4]^=p,_[5]^=k,_[6]^=v,_[7]^=j;for(var G=0;G<4;G++)D.call(this)}},"_doReset"),_doProcessBlock:T(function(M,c){var G=this._X;D.call(this),L[0]=G[0]^G[5]>>>16^G[3]<<16,L[1]=G[2]^G[7]>>>16^G[5]<<16,L[2]=G[4]^G[1]>>>16^G[7]<<16,L[3]=G[6]^G[3]>>>16^G[1]<<16;for(var P=0;P<4;P++)L[P]=(L[P]<<8|L[P]>>>24)&16711935|(L[P]<<24|L[P]>>>8)&4278255360,M[c+P]^=L[P]},"_doProcessBlock"),blockSize:128/32,ivSize:64/32});function D(){for(var M=this._X,c=this._C,G=0;G<8;G++)S[G]=c[G];c[0]=c[0]+1295307597+this._b|0,c[1]=c[1]+3545052371+(c[0]>>>0<S[0]>>>0?1:0)|0,c[2]=c[2]+886263092+(c[1]>>>0<S[1]>>>0?1:0)|0,c[3]=c[3]+1295307597+(c[2]>>>0<S[2]>>>0?1:0)|0,c[4]=c[4]+3545052371+(c[3]>>>0<S[3]>>>0?1:0)|0,c[5]=c[5]+886263092+(c[4]>>>0<S[4]>>>0?1:0)|0,c[6]=c[6]+1295307597+(c[5]>>>0<S[5]>>>0?1:0)|0,c[7]=c[7]+3545052371+(c[6]>>>0<S[6]>>>0?1:0)|0,this._b=c[7]>>>0<S[7]>>>0?1:0;for(var G=0;G<8;G++){var P=M[G]+c[G],_=P&65535,g=P>>>16,H=((_*_>>>17)+_*g>>>15)+g*g,F=((P&4294901760)*P|0)+((P&65535)*P|0);o[G]=H^F}M[0]=o[0]+(o[7]<<16|o[7]>>>16)+(o[6]<<16|o[6]>>>16)|0,M[1]=o[1]+(o[0]<<8|o[0]>>>24)+o[7]|0,M[2]=o[2]+(o[1]<<16|o[1]>>>16)+(o[0]<<16|o[0]>>>16)|0,M[3]=o[3]+(o[2]<<8|o[2]>>>24)+o[1]|0,M[4]=o[4]+(o[3]<<16|o[3]>>>16)+(o[2]<<16|o[2]>>>16)|0,M[5]=o[5]+(o[4]<<8|o[4]>>>24)+o[3]|0,M[6]=o[6]+(o[5]<<16|o[5]>>>16)+(o[4]<<16|o[4]>>>16)|0,M[7]=o[7]+(o[6]<<8|o[6]>>>24)+o[5]|0}T(D,"nextState"),R.Rabbit=i._createHelper(l)}(),s.Rabbit})}(ju)),ju.exports}T(rX,"requireRabbit");var zu={exports:{}},fx;function NX(){return fx||(fx=1,function(E,A){(function(s,R,I){E.exports=R(iA(),ra(),Na(),JI(),ls())})(Xt,function(s){return function(){var R=s,I=R.lib,i=I.StreamCipher,a=R.algo,L=[],S=[],o=[],l=a.RabbitLegacy=i.extend({_doReset:T(function(){var M=this._key.words,c=this.cfg.iv,G=this._X=[M[0],M[3]<<16|M[2]>>>16,M[1],M[0]<<16|M[3]>>>16,M[2],M[1]<<16|M[0]>>>16,M[3],M[2]<<16|M[1]>>>16],P=this._C=[M[2]<<16|M[2]>>>16,M[0]&4294901760|M[1]&65535,M[3]<<16|M[3]>>>16,M[1]&4294901760|M[2]&65535,M[0]<<16|M[0]>>>16,M[2]&4294901760|M[3]&65535,M[1]<<16|M[1]>>>16,M[3]&4294901760|M[0]&65535];this._b=0;for(var _=0;_<4;_++)D.call(this);for(var _=0;_<8;_++)P[_]^=G[_+4&7];if(c){var g=c.words,H=g[0],F=g[1],p=(H<<8|H>>>24)&16711935|(H<<24|H>>>8)&4278255360,v=(F<<8|F>>>24)&16711935|(F<<24|F>>>8)&4278255360,k=p>>>16|v&4294901760,j=v<<16|p&65535;P[0]^=p,P[1]^=k,P[2]^=v,P[3]^=j,P[4]^=p,P[5]^=k,P[6]^=v,P[7]^=j;for(var _=0;_<4;_++)D.call(this)}},"_doReset"),_doProcessBlock:T(function(M,c){var G=this._X;D.call(this),L[0]=G[0]^G[5]>>>16^G[3]<<16,L[1]=G[2]^G[7]>>>16^G[5]<<16,L[2]=G[4]^G[1]>>>16^G[7]<<16,L[3]=G[6]^G[3]>>>16^G[1]<<16;for(var P=0;P<4;P++)L[P]=(L[P]<<8|L[P]>>>24)&16711935|(L[P]<<24|L[P]>>>8)&4278255360,M[c+P]^=L[P]},"_doProcessBlock"),blockSize:128/32,ivSize:64/32});function D(){for(var M=this._X,c=this._C,G=0;G<8;G++)S[G]=c[G];c[0]=c[0]+1295307597+this._b|0,c[1]=c[1]+3545052371+(c[0]>>>0<S[0]>>>0?1:0)|0,c[2]=c[2]+886263092+(c[1]>>>0<S[1]>>>0?1:0)|0,c[3]=c[3]+1295307597+(c[2]>>>0<S[2]>>>0?1:0)|0,c[4]=c[4]+3545052371+(c[3]>>>0<S[3]>>>0?1:0)|0,c[5]=c[5]+886263092+(c[4]>>>0<S[4]>>>0?1:0)|0,c[6]=c[6]+1295307597+(c[5]>>>0<S[5]>>>0?1:0)|0,c[7]=c[7]+3545052371+(c[6]>>>0<S[6]>>>0?1:0)|0,this._b=c[7]>>>0<S[7]>>>0?1:0;for(var G=0;G<8;G++){var P=M[G]+c[G],_=P&65535,g=P>>>16,H=((_*_>>>17)+_*g>>>15)+g*g,F=((P&4294901760)*P|0)+((P&65535)*P|0);o[G]=H^F}M[0]=o[0]+(o[7]<<16|o[7]>>>16)+(o[6]<<16|o[6]>>>16)|0,M[1]=o[1]+(o[0]<<8|o[0]>>>24)+o[7]|0,M[2]=o[2]+(o[1]<<16|o[1]>>>16)+(o[0]<<16|o[0]>>>16)|0,M[3]=o[3]+(o[2]<<8|o[2]>>>24)+o[1]|0,M[4]=o[4]+(o[3]<<16|o[3]>>>16)+(o[2]<<16|o[2]>>>16)|0,M[5]=o[5]+(o[4]<<8|o[4]>>>24)+o[3]|0,M[6]=o[6]+(o[5]<<16|o[5]>>>16)+(o[4]<<16|o[4]>>>16)|0,M[7]=o[7]+(o[6]<<8|o[6]>>>24)+o[5]|0}T(D,"nextState"),R.RabbitLegacy=i._createHelper(l)}(),s.RabbitLegacy})}(zu)),zu.exports}T(NX,"requireRabbitLegacy");var e0={exports:{}},Bx;function TX(){return Bx||(Bx=1,function(E,A){(function(s,R,I){E.exports=R(iA(),ra(),Na(),JI(),ls())})(Xt,function(s){return function(){var R=s,I=R.lib,i=I.BlockCipher,a=R.algo;const L=16,S=[608135816,2242054355,320440878,57701188,2752067618,698298832,137296536,3964562569,1160258022,953160567,3193202383,887688300,3232508343,3380367581,1065670069,3041331479,2450970073,2306472731],o=[[3509652390,2564797868,805139163,3491422135,3101798381,1780907670,3128725573,4046225305,614570311,3012652279,134345442,2240740374,1667834072,1901547113,2757295779,4103290238,227898511,1921955416,1904987480,2182433518,2069144605,3260701109,2620446009,720527379,3318853667,677414384,3393288472,3101374703,2390351024,1614419982,1822297739,2954791486,3608508353,3174124327,2024746970,1432378464,3864339955,2857741204,1464375394,1676153920,1439316330,715854006,3033291828,289532110,2706671279,2087905683,3018724369,1668267050,732546397,1947742710,3462151702,2609353502,2950085171,1814351708,2050118529,680887927,999245976,1800124847,3300911131,1713906067,1641548236,4213287313,1216130144,1575780402,4018429277,3917837745,3693486850,3949271944,596196993,3549867205,258830323,2213823033,772490370,2760122372,1774776394,2652871518,566650946,4142492826,1728879713,2882767088,1783734482,3629395816,2517608232,2874225571,1861159788,326777828,3124490320,2130389656,2716951837,967770486,1724537150,2185432712,2364442137,1164943284,2105845187,998989502,3765401048,2244026483,1075463327,1455516326,1322494562,910128902,469688178,1117454909,936433444,3490320968,3675253459,1240580251,122909385,2157517691,634681816,4142456567,3825094682,3061402683,2540495037,79693498,3249098678,1084186820,1583128258,426386531,1761308591,1047286709,322548459,995290223,1845252383,2603652396,3431023940,2942221577,3202600964,3727903485,1712269319,422464435,3234572375,1170764815,3523960633,3117677531,1434042557,442511882,3600875718,1076654713,1738483198,4213154764,2393238008,3677496056,1014306527,4251020053,793779912,2902807211,842905082,4246964064,1395751752,1040244610,2656851899,3396308128,445077038,3742853595,3577915638,679411651,2892444358,2354009459,1767581616,3150600392,3791627101,3102740896,284835224,4246832056,1258075500,768725851,2589189241,3069724005,3532540348,1274779536,3789419226,2764799539,1660621633,3471099624,4011903706,913787905,3497959166,737222580,2514213453,2928710040,3937242737,1804850592,3499020752,2949064160,2386320175,2390070455,2415321851,4061277028,2290661394,2416832540,1336762016,1754252060,3520065937,3014181293,791618072,3188594551,3933548030,2332172193,3852520463,3043980520,413987798,3465142937,3030929376,4245938359,2093235073,3534596313,375366246,2157278981,2479649556,555357303,3870105701,2008414854,3344188149,4221384143,3956125452,2067696032,3594591187,2921233993,2428461,544322398,577241275,1471733935,610547355,4027169054,1432588573,1507829418,2025931657,3646575487,545086370,48609733,2200306550,1653985193,298326376,1316178497,3007786442,2064951626,458293330,2589141269,3591329599,3164325604,727753846,2179363840,146436021,1461446943,4069977195,705550613,3059967265,3887724982,4281599278,3313849956,1404054877,2845806497,146425753,1854211946],[1266315497,3048417604,3681880366,3289982499,290971e4,1235738493,2632868024,2414719590,3970600049,1771706367,1449415276,3266420449,422970021,1963543593,2690192192,3826793022,1062508698,1531092325,1804592342,2583117782,2714934279,4024971509,1294809318,4028980673,1289560198,2221992742,1669523910,35572830,157838143,1052438473,1016535060,1802137761,1753167236,1386275462,3080475397,2857371447,1040679964,2145300060,2390574316,1461121720,2956646967,4031777805,4028374788,33600511,2920084762,1018524850,629373528,3691585981,3515945977,2091462646,2486323059,586499841,988145025,935516892,3367335476,2599673255,2839830854,265290510,3972581182,2759138881,3795373465,1005194799,847297441,406762289,1314163512,1332590856,1866599683,4127851711,750260880,613907577,1450815602,3165620655,3734664991,3650291728,3012275730,3704569646,1427272223,778793252,1343938022,2676280711,2052605720,1946737175,3164576444,3914038668,3967478842,3682934266,1661551462,3294938066,4011595847,840292616,3712170807,616741398,312560963,711312465,1351876610,322626781,1910503582,271666773,2175563734,1594956187,70604529,3617834859,1007753275,1495573769,4069517037,2549218298,2663038764,504708206,2263041392,3941167025,2249088522,1514023603,1998579484,1312622330,694541497,2582060303,2151582166,1382467621,776784248,2618340202,3323268794,2497899128,2784771155,503983604,4076293799,907881277,423175695,432175456,1378068232,4145222326,3954048622,3938656102,3820766613,2793130115,2977904593,26017576,3274890735,3194772133,1700274565,1756076034,4006520079,3677328699,720338349,1533947780,354530856,688349552,3973924725,1637815568,332179504,3949051286,53804574,2852348879,3044236432,1282449977,3583942155,3416972820,4006381244,1617046695,2628476075,3002303598,1686838959,431878346,2686675385,1700445008,1080580658,1009431731,832498133,3223435511,2605976345,2271191193,2516031870,1648197032,4164389018,2548247927,300782431,375919233,238389289,3353747414,2531188641,2019080857,1475708069,455242339,2609103871,448939670,3451063019,1395535956,2413381860,1841049896,1491858159,885456874,4264095073,4001119347,1565136089,3898914787,1108368660,540939232,1173283510,2745871338,3681308437,4207628240,3343053890,4016749493,1699691293,1103962373,3625875870,2256883143,3830138730,1031889488,3479347698,1535977030,4236805024,3251091107,2132092099,1774941330,1199868427,1452454533,157007616,2904115357,342012276,595725824,1480756522,206960106,497939518,591360097,863170706,2375253569,3596610801,1814182875,2094937945,3421402208,1082520231,3463918190,2785509508,435703966,3908032597,1641649973,2842273706,3305899714,1510255612,2148256476,2655287854,3276092548,4258621189,236887753,3681803219,274041037,1734335097,3815195456,3317970021,1899903192,1026095262,4050517792,356393447,2410691914,3873677099,3682840055],[3913112168,2491498743,4132185628,2489919796,1091903735,1979897079,3170134830,3567386728,3557303409,857797738,1136121015,1342202287,507115054,2535736646,337727348,3213592640,1301675037,2528481711,1895095763,1721773893,3216771564,62756741,2142006736,835421444,2531993523,1442658625,3659876326,2882144922,676362277,1392781812,170690266,3921047035,1759253602,3611846912,1745797284,664899054,1329594018,3901205900,3045908486,2062866102,2865634940,3543621612,3464012697,1080764994,553557557,3656615353,3996768171,991055499,499776247,1265440854,648242737,3940784050,980351604,3713745714,1749149687,3396870395,4211799374,3640570775,1161844396,3125318951,1431517754,545492359,4268468663,3499529547,1437099964,2702547544,3433638243,2581715763,2787789398,1060185593,1593081372,2418618748,4260947970,69676912,2159744348,86519011,2512459080,3838209314,1220612927,3339683548,133810670,1090789135,1078426020,1569222167,845107691,3583754449,4072456591,1091646820,628848692,1613405280,3757631651,526609435,236106946,48312990,2942717905,3402727701,1797494240,859738849,992217954,4005476642,2243076622,3870952857,3732016268,765654824,3490871365,2511836413,1685915746,3888969200,1414112111,2273134842,3281911079,4080962846,172450625,2569994100,980381355,4109958455,2819808352,2716589560,2568741196,3681446669,3329971472,1835478071,660984891,3704678404,4045999559,3422617507,3040415634,1762651403,1719377915,3470491036,2693910283,3642056355,3138596744,1364962596,2073328063,1983633131,926494387,3423689081,2150032023,4096667949,1749200295,3328846651,309677260,2016342300,1779581495,3079819751,111262694,1274766160,443224088,298511866,1025883608,3806446537,1145181785,168956806,3641502830,3584813610,1689216846,3666258015,3200248200,1692713982,2646376535,4042768518,1618508792,1610833997,3523052358,4130873264,2001055236,3610705100,2202168115,4028541809,2961195399,1006657119,2006996926,3186142756,1430667929,3210227297,1314452623,4074634658,4101304120,2273951170,1399257539,3367210612,3027628629,1190975929,2062231137,2333990788,2221543033,2438960610,1181637006,548689776,2362791313,3372408396,3104550113,3145860560,296247880,1970579870,3078560182,3769228297,1714227617,3291629107,3898220290,166772364,1251581989,493813264,448347421,195405023,2709975567,677966185,3703036547,1463355134,2715995803,1338867538,1343315457,2802222074,2684532164,233230375,2599980071,2000651841,3277868038,1638401717,4028070440,3237316320,6314154,819756386,300326615,590932579,1405279636,3267499572,3150704214,2428286686,3959192993,3461946742,1862657033,1266418056,963775037,2089974820,2263052895,1917689273,448879540,3550394620,3981727096,150775221,3627908307,1303187396,508620638,2975983352,2726630617,1817252668,1876281319,1457606340,908771278,3720792119,3617206836,2455994898,1729034894,1080033504],[976866871,3556439503,2881648439,1522871579,1555064734,1336096578,3548522304,2579274686,3574697629,3205460757,3593280638,3338716283,3079412587,564236357,2993598910,1781952180,1464380207,3163844217,3332601554,1699332808,1393555694,1183702653,3581086237,1288719814,691649499,2847557200,2895455976,3193889540,2717570544,1781354906,1676643554,2592534050,3230253752,1126444790,2770207658,2633158820,2210423226,2615765581,2414155088,3127139286,673620729,2805611233,1269405062,4015350505,3341807571,4149409754,1057255273,2012875353,2162469141,2276492801,2601117357,993977747,3918593370,2654263191,753973209,36408145,2530585658,25011837,3520020182,2088578344,530523599,2918365339,1524020338,1518925132,3760827505,3759777254,1202760957,3985898139,3906192525,674977740,4174734889,2031300136,2019492241,3983892565,4153806404,3822280332,352677332,2297720250,60907813,90501309,3286998549,1016092578,2535922412,2839152426,457141659,509813237,4120667899,652014361,1966332200,2975202805,55981186,2327461051,676427537,3255491064,2882294119,3433927263,1307055953,942726286,933058658,2468411793,3933900994,4215176142,1361170020,2001714738,2830558078,3274259782,1222529897,1679025792,2729314320,3714953764,1770335741,151462246,3013232138,1682292957,1483529935,471910574,1539241949,458788160,3436315007,1807016891,3718408830,978976581,1043663428,3165965781,1927990952,4200891579,2372276910,3208408903,3533431907,1412390302,2931980059,4132332400,1947078029,3881505623,4168226417,2941484381,1077988104,1320477388,886195818,18198404,3786409e3,2509781533,112762804,3463356488,1866414978,891333506,18488651,661792760,1628790961,3885187036,3141171499,876946877,2693282273,1372485963,791857591,2686433993,3759982718,3167212022,3472953795,2716379847,445679433,3561995674,3504004811,3574258232,54117162,3331405415,2381918588,3769707343,4154350007,1140177722,4074052095,668550556,3214352940,367459370,261225585,2610173221,4209349473,3468074219,3265815641,314222801,3066103646,3808782860,282218597,3406013506,3773591054,379116347,1285071038,846784868,2669647154,3771962079,3550491691,2305946142,453669953,1268987020,3317592352,3279303384,3744833421,2610507566,3859509063,266596637,3847019092,517658769,3462560207,3443424879,370717030,4247526661,2224018117,4143653529,4112773975,2788324899,2477274417,1456262402,2901442914,1517677493,1846949527,2295493580,3734397586,2176403920,1280348187,1908823572,3871786941,846861322,1172426758,3287448474,3383383037,1655181056,3139813346,901632758,1897031941,2986607138,3066810236,3447102507,1393639104,373351379,950779232,625454576,3124240540,4148612726,2007998917,544563296,2244738638,2330496472,2058025392,1291430526,424198748,50039436,29584100,3605783033,2429876329,2791104160,1057563949,3255363231,3075367218,3463963227,1469046755,985887462]];var l={pbox:[],sbox:[]};function D(_,g){let H=g>>24&255,F=g>>16&255,p=g>>8&255,v=g&255,k=_.sbox[0][H]+_.sbox[1][F];return k=k^_.sbox[2][p],k=k+_.sbox[3][v],k}T(D,"F");function M(_,g,H){let F=g,p=H,v;for(let k=0;k<L;++k)F=F^_.pbox[k],p=D(_,F)^p,v=F,F=p,p=v;return v=F,F=p,p=v,p=p^_.pbox[L],F=F^_.pbox[L+1],{left:F,right:p}}T(M,"BlowFish_Encrypt");function c(_,g,H){let F=g,p=H,v;for(let k=L+1;k>1;--k)F=F^_.pbox[k],p=D(_,F)^p,v=F,F=p,p=v;return v=F,F=p,p=v,p=p^_.pbox[1],F=F^_.pbox[0],{left:F,right:p}}T(c,"BlowFish_Decrypt");function G(_,g,H){for(let j=0;j<4;j++){_.sbox[j]=[];for(let q=0;q<256;q++)_.sbox[j][q]=o[j][q]}let F=0;for(let j=0;j<L+2;j++)_.pbox[j]=S[j]^g[F],F++,F>=H&&(F=0);let p=0,v=0,k=0;for(let j=0;j<L+2;j+=2)k=M(_,p,v),p=k.left,v=k.right,_.pbox[j]=p,_.pbox[j+1]=v;for(let j=0;j<4;j++)for(let q=0;q<256;q+=2)k=M(_,p,v),p=k.left,v=k.right,_.sbox[j][q]=p,_.sbox[j][q+1]=v;return!0}T(G,"BlowFishInit");var P=a.Blowfish=i.extend({_doReset:T(function(){if(this._keyPriorReset!==this._key){var _=this._keyPriorReset=this._key,g=_.words,H=_.sigBytes/4;G(l,g,H)}},"_doReset"),encryptBlock:T(function(_,g){var H=M(l,_[g],_[g+1]);_[g]=H.left,_[g+1]=H.right},"encryptBlock"),decryptBlock:T(function(_,g){var H=c(l,_[g],_[g+1]);_[g]=H.left,_[g+1]=H.right},"decryptBlock"),blockSize:64/32,keySize:128/32,ivSize:64/32});R.Blowfish=i._createHelper(P)}(),s.Blowfish})}(e0)),e0.exports}T(TX,"requireBlowfish");(function(E,A){(function(s,R,I){E.exports=R(iA(),vM(),b9(),k9(),ra(),Z9(),Na(),X6(),B1(),X9(),Q6(),Q9(),J9(),$9(),g1(),q9(),JI(),ls(),j9(),z9(),eX(),tX(),AX(),EX(),sX(),RX(),OX(),nX(),IX(),iX(),aX(),LX(),rX(),NX(),TX())})(Xt,function(s){return s})})(Z6);var CI=Z6.exports;const $F=class $F{constructor(A){this.playTime=(A==null?void 0:A.playTime)||0,this.battles=(A==null?void 0:A.battles)||0,this.classicSessionsPlayed=(A==null?void 0:A.classicSessionsPlayed)||0,this.sessionsWon=(A==null?void 0:A.sessionsWon)||0,this.ribbonsOwned=(A==null?void 0:A.ribbonsOwned)||0,this.dailyRunSessionsPlayed=(A==null?void 0:A.dailyRunSessionsPlayed)||0,this.dailyRunSessionsWon=(A==null?void 0:A.dailyRunSessionsWon)||0,this.endlessSessionsPlayed=(A==null?void 0:A.endlessSessionsPlayed)||0,this.highestEndlessWave=(A==null?void 0:A.highestEndlessWave)||0,this.highestLevel=(A==null?void 0:A.highestLevel)||0,this.highestMoney=(A==null?void 0:A.highestMoney)||0,this.highestDamage=(A==null?void 0:A.highestDamage)||0,this.highestHeal=(A==null?void 0:A.highestHeal)||0,this.pokemonSeen=(A==null?void 0:A.pokemonSeen)||0,this.pokemonDefeated=(A==null?void 0:A.pokemonDefeated)||0,this.pokemonCaught=(A==null?void 0:A.pokemonCaught)||0,this.pokemonHatched=(A==null?void 0:A.pokemonHatched)||0,this.subLegendaryPokemonSeen=(A==null?void 0:A.subLegendaryPokemonSeen)??0,this.subLegendaryPokemonCaught=(A==null?void 0:A.subLegendaryPokemonCaught)??0,this.subLegendaryPokemonHatched=(A==null?void 0:A.subLegendaryPokemonHatched)??0,this.legendaryPokemonSeen=(A==null?void 0:A.legendaryPokemonSeen)||0,this.legendaryPokemonCaught=(A==null?void 0:A.legendaryPokemonCaught)||0,this.legendaryPokemonHatched=(A==null?void 0:A.legendaryPokemonHatched)||0,this.mythicalPokemonSeen=(A==null?void 0:A.mythicalPokemonSeen)||0,this.mythicalPokemonCaught=(A==null?void 0:A.mythicalPokemonCaught)||0,this.mythicalPokemonHatched=(A==null?void 0:A.mythicalPokemonHatched)||0,this.shinyPokemonSeen=(A==null?void 0:A.shinyPokemonSeen)||0,this.shinyPokemonCaught=(A==null?void 0:A.shinyPokemonCaught)||0,this.shinyPokemonHatched=(A==null?void 0:A.shinyPokemonHatched)||0,this.pokemonFused=(A==null?void 0:A.pokemonFused)||0,this.trainersDefeated=(A==null?void 0:A.trainersDefeated)||0,this.eggsPulled=(A==null?void 0:A.eggsPulled)||0,this.rareEggsPulled=(A==null?void 0:A.rareEggsPulled)||0,this.epicEggsPulled=(A==null?void 0:A.epicEggsPulled)||0,this.legendaryEggsPulled=(A==null?void 0:A.legendaryEggsPulled)||0,this.manaphyEggsPulled=(A==null?void 0:A.manaphyEggsPulled)||0}};T($F,"GameStats");let uC=$F;const qF=class qF{constructor(A){this.id=A.id,this.value=A.value,this.severity=A.severity}toChallenge(){return $6(this)}};T(qF,"ChallengeData");let hC=qF;const jF=class jF extends kA{constructor(A,s){super(A),this.systemDataStr=s??null}start(){this.scene.ui.setMode($.SESSION_RELOAD);let A=!1,s=!1;this.scene.time.delayedCall(Ve(1500),()=>{s?this.end():A=!0}),this.scene.gameData.clearLocalData(),(this.systemDataStr?this.scene.gameData.initSystem(this.systemDataStr):this.scene.gameData.loadSystem()).then(()=>{A?this.end():s=!0})}};T(jF,"ReloadSessionPhase");let ei=jF;const SX=[T(function(A){A.starterData&&A.dexData&&Object.keys(A.starterData).forEach(s=>{var R;(R=A.dexData[s])!=null&&R.caughtAttr&&A.starterData[s]&&!A.starterData[s].abilityAttr&&(A.starterData[s].abilityAttr=1)})},"migrateAbilityData"),T(function(A){A.gameStats&&A.gameStats.legendaryPokemonCaught!==void 0&&A.gameStats.subLegendaryPokemonCaught===void 0&&(A.gameStats.subLegendaryPokemonSeen=0,A.gameStats.subLegendaryPokemonCaught=0,A.gameStats.subLegendaryPokemonHatched=0,MR.filter(s=>s.subLegendary).forEach(s=>{const R=A.dexData[s.speciesId];A.gameStats.subLegendaryPokemonSeen+=R.seenCount,A.gameStats.legendaryPokemonSeen=Math.max(A.gameStats.legendaryPokemonSeen-R.seenCount,0),A.gameStats.subLegendaryPokemonCaught+=R.caughtCount,A.gameStats.legendaryPokemonCaught=Math.max(A.gameStats.legendaryPokemonCaught-R.caughtCount,0),A.gameStats.subLegendaryPokemonHatched+=R.hatchedCount,A.gameStats.legendaryPokemonHatched=Math.max(A.gameStats.legendaryPokemonHatched-R.hatchedCount,0)}),A.gameStats.subLegendaryPokemonSeen=Math.max(A.gameStats.subLegendaryPokemonSeen,A.gameStats.subLegendaryPokemonCaught),A.gameStats.legendaryPokemonSeen=Math.max(A.gameStats.legendaryPokemonSeen,A.gameStats.legendaryPokemonCaught),A.gameStats.mythicalPokemonSeen=Math.max(A.gameStats.mythicalPokemonSeen,A.gameStats.mythicalPokemonCaught))},"fixLegendaryStats"),T(function(A){var s,R;for(const I of ri)(s=A.starterData[I])!=null&&s.abilityAttr&&(A.starterData[I].abilityAttr|=ns.ABILITY_1),(R=A.dexData[I])!=null&&R.caughtAttr&&(A.dexData[I].caughtAttr|=Fe.FEMALE)},"fixStarterData")],oX=[T(function(A){A.hasOwnProperty("REROLL_TARGET")&&!A.hasOwnProperty(Qe.Shop_Cursor_Target)&&(A[Qe.Shop_Cursor_Target]=A.REROLL_TARGET,delete A.REROLL_TARGET,localStorage.setItem("settings",JSON.stringify(A)))},"fixRerollTarget")],lX=[T(function(A){A.modifiers.forEach(s=>{if(s.className==="PokemonBaseStatModifier")s.className="BaseStatModifier";else if(s.className==="PokemonResetNegativeStatStageModifier")s.className="ResetNegativeStatStageModifier";else if(s.className==="TempBattleStatBoosterModifier")if(s.typeId!=="DIRE_HIT"){s.className="TempStatStageBoosterModifier",s.typeId="TEMP_STAT_STAGE_BOOSTER";const I=s.typePregenArgs[0]+1;s.typePregenArgs[0]=I,s.args=[I,5,Math.min(s.args[1],5)]}else s.className="TempCritBoosterModifier",s.typePregenArgs=[],s.args=[5,Math.min(s.args[1],5)];else if(s.className==="DoubleBattleChanceBoosterModifier"&&s.args.length===1){let R;switch(s.typeId){case"MAX_LURE":R=30;break;case"SUPER_LURE":R=15;break;default:R=10;break}s.args=[R,Math.min(s.args[0],R)]}}),A.enemyModifiers.forEach(s=>{s.className==="PokemonBaseStatModifier"?s.className="BaseStatModifier":s.className==="PokemonResetNegativeStatStageModifier"&&(s.className="ResetNegativeStatStageModifier")})},"migrateModifiers")],CX=[],UX=[],DX=[T(function(A){A.party.forEach(s=>{s.mysteryEncounterPokemonData&&(s.customPokemonData=new $E(s.mysteryEncounterPokemonData),s.mysteryEncounterPokemonData=null),s.fusionMysteryEncounterPokemonData&&(s.fusionCustomPokemonData=new $E(s.fusionMysteryEncounterPokemonData),s.fusionMysteryEncounterPokemonData=null),s.customPokemonData=s.customPokemonData??new $E,s.natureOverride&&s.natureOverride>=0&&(s.customPokemonData.nature=s.natureOverride,s.natureOverride=-1)})},"migrateCustomPokemonDataAndNatureOverrides")],K1=kx.split(".").map(E=>parseInt(E));function MX(E){const A=E.gameVersion.split(".").map(s=>parseInt(s));if(!A.every((s,R)=>s===K1[R])){const s=new KG;s.applyStaticPreprocessors(E),s.applyMigration(E,A)}}T(MX,"applySystemVersionMigration");function uX(E){const A=E.gameVersion.split(".").map(s=>parseInt(s));if(!A.every((s,R)=>s===K1[R])){const s=new gG;s.applyStaticPreprocessors(E),s.applyMigration(E,A)}}T(uX,"applySessionVersionMigration");function hX(E){const s=(E.hasOwnProperty("gameVersion")?E.gameVersion:"1.0.0").split(".").map(R=>parseInt(R));if(!s.every((R,I)=>R===K1[I])){const R=new FG;R.applyStaticPreprocessors(E),R.applyMigration(E,s)}}T(hX,"applySettingsVersionMigration");const zF=class zF{callMigrators(A,s){for(const R of s)R(A)}applyStaticPreprocessors(A){}};T(zF,"VersionConverter");let JT=zF;const em=class em extends JT{applyStaticPreprocessors(A){A.money=Math.floor(A.money)}applyMigration(A,s){const[R,I,i]=s;R===1&&(I===0&&i<=4&&this.callMigrators(A,lX),I<=1&&this.callMigrators(A,DX))}};T(em,"SessionVersionConverter");let gG=em;const tm=class tm extends JT{applyMigration(A,s){const[R,I,i]=s;R===1&&(I===0&&i<=4&&this.callMigrators(A,SX),I<=1&&this.callMigrators(A,CX))}};T(tm,"SystemVersionConverter");let KG=tm;const Am=class Am extends JT{applyMigration(A,s){const[R,I,i]=s;R===1&&(I===0&&i<=4&&this.callMigrators(A,oX),I<=1&&this.callMigrators(A,UX))}};T(Am,"SettingsVersionConverter");let FG=Am;const ri=[e.BULBASAUR,e.CHARMANDER,e.SQUIRTLE,e.CHIKORITA,e.CYNDAQUIL,e.TOTODILE,e.TREECKO,e.TORCHIC,e.MUDKIP,e.TURTWIG,e.CHIMCHAR,e.PIPLUP,e.SNIVY,e.TEPIG,e.OSHAWOTT,e.CHESPIN,e.FENNEKIN,e.FROAKIE,e.ROWLET,e.LITTEN,e.POPPLIO,e.GROOKEY,e.SCORBUNNY,e.SOBBLE,e.SPRIGATITO,e.FUECOCO,e.QUAXLY],_r="x0i2O7WRiANTqPmZ";function Da(E,A=0){switch(E){case fA.SYSTEM:return"data";case fA.SESSION:let s="sessionData";return A&&(s+=A),s;case fA.SETTINGS:return"settings";case fA.TUTORIALS:return"tutorials";case fA.SEEN_DIALOGUES:return"seenDialogues";case fA.RUN_HISTORY:return"runHistoryData"}}T(Da,"getDataTypeKey");function jI(E,A){return(A?s=>btoa(s):s=>CI.AES.encrypt(s,_r))(E)}T(jI,"encrypt");function Ma(E,A){return(A?s=>atob(s):s=>CI.AES.decrypt(s,_r).toString(CI.enc.Utf8))(E)}T(Ma,"decrypt");const Fe={NON_SHINY:1n,SHINY:2n,MALE:4n,FEMALE:8n,DEFAULT_VARIANT:16n,VARIANT_2:32n,VARIANT_3:64n,DEFAULT_FORM:128n},ns={ABILITY_1:1,ABILITY_2:2,ABILITY_HIDDEN:4},J6="{}";let t0=J6;const Em=class Em{static load(){return JSON.parse(t0=localStorage.getItem(`starterPrefs_${we==null?void 0:we.username}`)||J6)}static save(A){const s=JSON.stringify(A);s!==t0&&(localStorage.setItem(`starterPrefs_${we==null?void 0:we.username}`,s),t0=s)}};T(Em,"StarterPrefs");let cC=Em;const po={seenAttr:"$sa",caughtAttr:"$ca",natureAttr:"$na",seenCount:"$s",caughtCount:"$c",hatchedCount:"$hc",ivs:"$i",moveset:"$m",eggMoves:"$em",candyCount:"$x",friendship:"$f",abilityAttr:"$a",passiveAttr:"$pa",valueReduction:"$vr",classicWinCount:"$wc"},sm=class sm{constructor(A){this.scene=A,this.loadSettings(),this.loadGamepadSettings(),this.loadMappingConfigs(),this.trainerId=sA(65536),this.secretId=sA(65536),this.starterData={},this.gameStats=new uC,this.runHistory={},this.unlocks={[Hs.ENDLESS_MODE]:!1,[Hs.MINI_BLACK_HOLE]:!1,[Hs.SPLICED_ENDLESS_MODE]:!1,[Hs.EVIOLITE]:!1},this.achvUnlocks={},this.voucherUnlocks={},this.voucherCounts={[$A.REGULAR]:0,[$A.PLUS]:0,[$A.PREMIUM]:0,[$A.GOLDEN]:0},this.eggs=[],this.eggPity=[0,0,0,0],this.unlockPity=[0,0,0,0],this.initDexData(),this.initStarterData()}getSystemSaveData(){return{trainerId:this.trainerId,secretId:this.secretId,gender:this.gender,dexData:this.dexData,starterData:this.starterData,gameStats:this.gameStats,unlocks:this.unlocks,achvUnlocks:this.achvUnlocks,voucherUnlocks:this.voucherUnlocks,voucherCounts:this.voucherCounts,eggs:this.eggs.map(A=>new MC(A)),gameVersion:this.scene.game.config.gameVersion,timestamp:new Date().getTime(),eggPity:this.eggPity.slice(0),unlockPity:this.unlockPity.slice(0)}}isUnlocked(A){return Ge.ITEM_UNLOCK_OVERRIDE.includes(A)?!0:this.unlocks[A]}saveSystem(){return new Promise(A=>{this.scene.ui.savingIcon.show();const s=this.getSystemSaveData(),R=2147483648,I=JSON.stringify(s,(i,a)=>typeof a=="bigint"?a<=R?Number(a):a.toString():a);localStorage.setItem(`data_${we==null?void 0:we.username}`,jI(I,_s)),En(`savedata/system/update?clientSessionId=${SO}`,I,void 0,!0).then(i=>i.text()).then(i=>{if(this.scene.ui.savingIcon.hide(),i)return i.startsWith("session out of date")&&(this.scene.clearPhaseQueue(),this.scene.unshiftPhase(new ei(this.scene))),console.error(i),A(!1);A(!0)})})}loadSystem(){return new Promise(A=>{GO(`savedata/system/get?clientSessionId=${SO}`,!0).then(s=>s.text()).then(s=>{if(!s.length||s[0]!=="{")return s.startsWith("sql: no rows in result set")?(this.scene.queueMessage("Save data could not be found. If this is a new account, you can safely ignore this message.",null,!0),A(!0)):s.indexOf("Too many connections")>-1?(this.scene.queueMessage("Too many people are trying to connect and the server is overloaded. Please try again later.",null,!0),A(!1)):(console.error(s),A(!1));const R=localStorage.getItem(`data_${we==null?void 0:we.username}`);this.initSystem(s,R?CI.AES.decrypt(R,_r).toString(CI.enc.Utf8):void 0).then(A)})})}initSystem(A,s){return new Promise(R=>{try{let I=this.parseSystemData(A);if(s){const L=this.parseSystemData(s);L.timestamp>I.timestamp?(console.debug("Use cached system"),I=L,A=s):this.clearLocalData()}console.debug(I),localStorage.setItem(`data_${we==null?void 0:we.username}`,jI(A,_s));const i=`runHistoryData_${we==null?void 0:we.username}`;if(localStorage.getItem(i)||localStorage.setItem(i,""),MX(I),this.trainerId=I.trainerId,this.secretId=I.secretId,this.gender=I.gender,this.saveSetting(Qe.Player_Gender,I.gender===ct.FEMALE?1:0),I.starterData)this.starterData=I.starterData;else{if(this.initStarterData(),I.starterMoveData){const S=I.starterMoveData;for(const o of Object.keys(S))this.starterData[o].moveset=S[o]}if(I.starterEggMoveData){const S=I.starterEggMoveData;for(const o of Object.keys(S))this.starterData[o].eggMoves=S[o]}this.migrateStarterAbilities(I,this.starterData);const L=Object.keys(this.starterData).map(S=>parseInt(S));for(const S of L)this.starterData[S].candyCount+=this.dexData[S].caughtCount,this.starterData[S].candyCount+=this.dexData[S].hatchedCount*2,this.dexData[S].caughtAttr&Fe.SHINY&&(this.starterData[S].candyCount+=4)}if(I.gameStats&&(this.gameStats=I.gameStats),I.unlocks)for(const L of Object.keys(I.unlocks))this.unlocks.hasOwnProperty(L)&&(this.unlocks[L]=I.unlocks[L]);if(I.achvUnlocks)for(const L of Object.keys(I.achvUnlocks))At.hasOwnProperty(L)&&(this.achvUnlocks[L]=I.achvUnlocks[L]);if(I.voucherUnlocks)for(const L of Object.keys(I.voucherUnlocks))Ls.hasOwnProperty(L)&&(this.voucherUnlocks[L]=I.voucherUnlocks[L]);I.voucherCounts&&tO($A).forEach(L=>{const S=$A[L];this.voucherCounts[S]=I.voucherCounts[S]||0}),this.eggs=I.eggs?I.eggs.map(L=>L.toEgg()):[],this.eggPity=I.eggPity?I.eggPity.slice(0):[0,0,0,0],this.unlockPity=I.unlockPity?I.unlockPity.slice(0):[0,0,0,0],this.dexData=Object.assign(this.dexData,I.dexData),this.consolidateDexData(this.dexData),this.defaultDexData=null,R(!0)}catch(I){console.error(I),R(!1)}})}async getRunHistoryData(A){if(gM){const s=`runHistoryData_${we==null?void 0:we.username}`,R=localStorage.getItem(s);if(R){const I=R;return I?JSON.parse(Ma(I,_s)):{}}else return localStorage.setItem(`runHistoryData_${we==null?void 0:we.username}`,""),{}}else{const s=`runHistoryData_${we==null?void 0:we.username}`,R=localStorage.getItem(s);if(R){const I=R;return I?JSON.parse(Ma(I,_s)):{}}else return localStorage.setItem(`runHistoryData_${we==null?void 0:we.username}`,""),{}}}async saveRunHistory(A,s,R){const I=await this.getRunHistoryData(A);let i=Object.keys(I).map(Number);for(;i.length>=_9;){const L=Math.min.apply(Math,i).toString();delete I[L],i=Object.keys(I).map(Number)}const a=s.timestamp.toString();return I[a]={entry:s,isVictory:R,isFavorite:!1},localStorage.setItem(`runHistoryData_${we==null?void 0:we.username}`,jI(JSON.stringify(I),_s)),!0}parseSystemData(A){return JSON.parse(A,(s,R)=>{if(s==="gameStats")return new uC(R);if(s==="eggs"){const I=[];R===null&&(R=[]);for(const i of R)I.push(new MC(i));return I}return s.endsWith("Attr")&&!["natureAttr","abilityAttr","passiveAttr"].includes(s)?BigInt(R):R})}convertSystemDataStr(A,s=!1){s||(A=A.replace(/\$pAttr/g,"$pa")),A=A.replace(/"trainerId":\d+/g,`"trainerId":${this.trainerId}`),A=A.replace(/"secretId":\d+/g,`"secretId":${this.secretId}`);const R=s?Object.keys(po):Object.values(po),I=s?Object.values(po):Object.keys(po);for(const i in R)A=A.replace(new RegExp(`${R[i].replace("$","\\$")}`,"g"),I[i]);return A}async verify(){const A=await GO(`savedata/system/verify?clientSessionId=${SO}`,!0).then(s=>s.json());return A.valid?!0:(this.scene.clearPhaseQueue(),this.scene.unshiftPhase(new ei(this.scene,JSON.stringify(A.systemData))),this.clearLocalData(),!1)}clearLocalData(){localStorage.removeItem(`data_${we==null?void 0:we.username}`);for(let A=0;A<5;A++)localStorage.removeItem(`sessionData${A||""}_${we==null?void 0:we.username}`)}saveSetting(A,s){let R={};return localStorage.hasOwnProperty("settings")&&(R=JSON.parse(localStorage.getItem("settings"))),Tc(this.scene,A,s),R[A]=s,R.gameVersion=this.scene.game.config.gameVersion,localStorage.setItem("settings",JSON.stringify(R)),!0}saveMappingConfigs(A,s){const R=A.toLowerCase();let I={};return localStorage.hasOwnProperty("mappingConfigs")&&(I=JSON.parse(localStorage.getItem("mappingConfigs"))),I[R]||(I[R]={}),I[R].custom=s.custom,localStorage.setItem("mappingConfigs",JSON.stringify(I)),!0}loadMappingConfigs(){if(!localStorage.hasOwnProperty("mappingConfigs"))return!1;const A=JSON.parse(localStorage.getItem("mappingConfigs"));for(const s of Object.keys(A))this.scene.inputController.injectConfig(s,A[s]);return!0}resetMappingToFactory(){return localStorage.hasOwnProperty("mappingConfigs")?(localStorage.removeItem("mappingConfigs"),this.scene.inputController.resetConfigs(),!0):!1}saveControlSetting(A,s,R,I,i){let a={};return localStorage.hasOwnProperty(s)&&(a=JSON.parse(localStorage.getItem(s))),A===Zt.GAMEPAD?Jo(this.scene,R,i):A===Zt.KEYBOARD&&o6(this.scene,R,i),Object.keys(I).forEach(L=>{L===R&&(a[L]=i)}),localStorage.setItem(s,JSON.stringify(a)),!0}loadSettings(){if(n9(this.scene),!localStorage.hasOwnProperty("settings"))return!1;const A=JSON.parse(localStorage.getItem("settings"));hX(A);for(const s of Object.keys(A))Tc(this.scene,s,A[s]);return!0}loadGamepadSettings(){if(Object.values(Ue).map(s=>s).forEach(s=>Jo(this.scene,s,V6[s])),!localStorage.hasOwnProperty("settingsGamepad"))return!1;const A=JSON.parse(localStorage.getItem("settingsGamepad"));for(const s of Object.keys(A))Jo(this.scene,s,A[s]);return!0}saveTutorialFlag(A,s){const R=Da(fA.TUTORIALS);let I={};return localStorage.hasOwnProperty(R)&&(I=JSON.parse(localStorage.getItem(R))),Object.keys(yR).map(i=>i).forEach(i=>{const a=yR[i];a===A?I[a]=s:I[a]??(I[a]=!1)}),localStorage.setItem(R,JSON.stringify(I)),!0}getTutorialFlags(){const A=Da(fA.TUTORIALS),s={};if(Object.values(yR).map(I=>I).forEach(I=>s[yR[I]]=!1),!localStorage.hasOwnProperty(A))return s;const R=JSON.parse(localStorage.getItem(A));for(const I of Object.keys(R))s[I]=R[I];return s}saveSeenDialogue(A){const s=Da(fA.SEEN_DIALOGUES),R=this.getSeenDialogues();return R[A]=!0,localStorage.setItem(s,JSON.stringify(R)),!0}getSeenDialogues(){const A=Da(fA.SEEN_DIALOGUES),s={};if(!localStorage.hasOwnProperty(A))return s;const R=JSON.parse(localStorage.getItem(A));for(const I of Object.keys(R))s[I]=R[I];return s}getSessionSaveData(A){var s;return{seed:A.seed,playTime:A.sessionPlayTime,gameMode:A.gameMode.modeId,party:A.getParty().map(R=>new xs(R)),enemyParty:A.getEnemyParty().map(R=>new xs(R)),modifiers:A.findModifiers(()=>!0).map(R=>new Pr(R,!0)),enemyModifiers:A.findModifiers(()=>!0,!1).map(R=>new Pr(R,!1)),arena:new UC(A.arena),pokeballCounts:A.pokeballCounts,money:Math.floor(A.money),score:A.score,waveIndex:A.currentBattle.waveIndex,battleType:A.currentBattle.battleType,trainer:A.currentBattle.battleType===Nt.TRAINER?new DC(A.currentBattle.trainer):null,gameVersion:A.game.config.gameVersion,timestamp:new Date().getTime(),challenges:A.gameMode.challenges.map(R=>new hC(R)),mysteryEncounterType:((s=A.currentBattle.mysteryEncounter)==null?void 0:s.encounterType)??-1,mysteryEncounterSaveData:A.mysteryEncounterSaveData}}getSession(A){return new Promise(async(s,R)=>{if(A<0)return s(null);const I=T(async i=>{try{const a=this.parseSessionData(i);s(a)}catch(a){R(a);return}},"handleSessionData");if(!localStorage.getItem(`sessionData${A||""}_${we==null?void 0:we.username}`))GO(`savedata/session/get?slot=${A}&clientSessionId=${SO}`,!0).then(i=>i.text()).then(async i=>{if(!i.length||i[0]!=="{")return console.error(i),s(null);localStorage.setItem(`sessionData${A||""}_${we==null?void 0:we.username}`,jI(i,_s)),await I(i)});else{const i=localStorage.getItem(`sessionData${A||""}_${we==null?void 0:we.username}`);if(i)await I(Ma(i,_s));else return s(null)}})}loadSession(A,s,R){return new Promise(async(I,i)=>{try{const a=T(async L=>{var G,P,_,g,H;console.debug(L),A.gameMode=Tl(L.gameMode||tA.CLASSIC),L.challenges&&(A.gameMode.challenges=L.challenges.map(F=>F.toChallenge())),A.setSeed(L.seed||A.game.config.seed[0]),A.resetSeed(),A.seed,A.sessionPlayTime=L.playTime||0,A.lastSavePlayTime=0;const S=[],o=A.getParty();o.splice(0,o.length);for(const F of L.party){const p=F.toPokemon(A);p.setVisible(!1),S.push(p.loadAssets()),o.push(p)}Object.keys(A.pokeballCounts).forEach(F=>{A.pokeballCounts[F]=L.pokeballCounts[F]||0}),Ge.POKEBALL_OVERRIDE.active&&(A.pokeballCounts=Ge.POKEBALL_OVERRIDE.pokeballs),A.money=Math.floor(L.money||0),A.updateMoneyText(),A.money>this.gameStats.highestMoney&&(this.gameStats.highestMoney=A.money),A.score=L.score,A.updateScoreText(),A.mysteryEncounterSaveData=new CL(L.mysteryEncounterSaveData),A.newArena(L.arena.biome);const l=L.battleType||0,D=L.trainer?BA[L.trainer.trainerType]:null,M=L.mysteryEncounterType!==-1?L.mysteryEncounterType:void 0,c=A.newBattle(L.waveIndex,l,L.trainer,l===Nt.TRAINER?(D==null?void 0:D.doubleOnly)||((G=L.trainer)==null?void 0:G.variant)===bt.DOUBLE:L.enemyParty.length>1,M);if(c.enemyLevels=L.enemyParty.map(F=>F.level),A.arena.init(),L.enemyParty.forEach((F,p)=>{var k;const v=F.toPokemon(A,l,p,((k=L.trainer)==null?void 0:k.variant)===bt.DOUBLE);c.enemyParty[p]=v,l===Nt.WILD&&c.seenEnemyPartyMemberIds.add(v.id),S.push(v.loadAssets())}),A.arena.weather=L.arena.weather,A.arena.eventTarget.dispatchEvent(new uI(Q.NONE,(P=A.arena.weather)==null?void 0:P.weatherType,(_=A.arena.weather)==null?void 0:_.turnsLeft)),A.arena.terrain=L.arena.terrain,A.arena.eventTarget.dispatchEvent(new XT(Rt.NONE,(g=A.arena.terrain)==null?void 0:g.terrainType,(H=A.arena.terrain)==null?void 0:H.turnsLeft)),A.arena.tags=L.arena.tags,A.arena.tags)for(const F of A.arena.tags)if(F instanceof kR){const{tagType:p,side:v,turnCount:k,layers:j,maxLayers:q}=F;A.arena.eventTarget.dispatchEvent(new bi(p,v,k,j,q))}else A.arena.eventTarget.dispatchEvent(new bi(F.tagType,F.side,F.turnCount));for(const F of L.modifiers){const p=F.toModifier(A,el[F.className]);p&&A.addModifier(p,!0)}A.updateModifiers(!0);for(const F of L.enemyModifiers){const p=F.toModifier(A,el[F.className]);p&&A.addEnemyModifier(p,!0)}A.updateModifiers(!1),Promise.all(S).then(()=>I(!0))},"initSessionFromData");R?a(R):this.getSession(s).then(L=>L&&a(L)).catch(L=>{i(L)})}catch(a){i(a);return}})}deleteSession(A){return new Promise(s=>{BO().then(R=>{if(R!==null&&!R)return s(!1);GO(`savedata/session/delete?slot=${A}&clientSessionId=${SO}`,!0).then(I=>(I.ok&&(we.lastSessionSlot=-1,localStorage.removeItem(`sessionData${A||""}_${we==null?void 0:we.username}`),s(!0)),I.text())).then(I=>{I&&(I.startsWith("session out of date")&&(this.scene.clearPhaseQueue(),this.scene.unshiftPhase(new ei(this.scene))),console.error(I),s(!1)),s(!0)})})})}offlineNewClear(A){return new Promise(s=>{const R=this.getSessionSaveData(A),I=R.seed;let i=[];return R.gameMode===tA.DAILY?localStorage.hasOwnProperty("daily")?(i=JSON.parse(atob(localStorage.getItem("daily"))),i.includes(I)?s(!1):(i.push(I),localStorage.setItem("daily",btoa(JSON.stringify(i))),s(!0))):(i.push(I),localStorage.setItem("daily",btoa(JSON.stringify(i))),s(!0)):s(!0)})}async tryClearSession(A,s){var I;let R=[!1,!1];{const i=this.getSessionSaveData(A),a=await En(`savedata/session/clear?slot=${s}&trainerId=${this.trainerId}&secretId=${this.secretId}&clientSessionId=${SO}`,JSON.stringify(i),void 0,!0);a.ok&&(we.lastSessionSlot=-1,localStorage.removeItem(`sessionData${s||""}_${we==null?void 0:we.username}`));const L=await a.json();L.error?(L&&((I=L.error)!=null&&I.startsWith("session out of date"))&&(this.scene.clearPhaseQueue(),this.scene.unshiftPhase(new ei(this.scene))),console.error(L),R=[!1,!1]):R=[!0,L.success??!1]}return await BO(),R}parseSessionData(A){const s=JSON.parse(A,(R,I)=>{if(R==="party"||R==="enemyParty"){const i=[];I===null&&(I=[]);for(const a of I)i.push(new xs(a));return i}if(R==="trainer")return I?new DC(I):null;if(R==="modifiers"||R==="enemyModifiers"){const i=R==="modifiers",a=[];I===null&&(I=[]);for(const L of I)(L==null?void 0:L.className)==="ExpBalanceModifier"&&(L.stackCount=Math.min(L.stackCount,4)),!(L instanceof mL&&L.effect===J.FREEZE||L.effect===J.SLEEP)&&a.push(new Pr(L,i));return a}if(R==="arena")return new UC(I);if(R==="challenges"){const i=[];I===null&&(I=[]);for(const a of I)i.push(new hC(a));return i}return R==="mysteryEncounterType"?I:R==="mysteryEncounterSaveData"?new CL(I):I});return uX(s),s}saveAll(A,s=!1,R=!1,I=!1,i=!1){return new Promise(a=>{OL(!s,BO).then(L=>{if(L!==null&&!L)return a(!1);R&&this.scene.ui.savingIcon.show();const S=I?this.parseSessionData(Ma(localStorage.getItem(`sessionData${A.sessionSlotId?A.sessionSlotId:""}_${we==null?void 0:we.username}`),_s)):this.getSessionSaveData(A),o=2147483648,l=i?this.parseSystemData(Ma(localStorage.getItem(`data_${we==null?void 0:we.username}`),_s)):this.getSystemSaveData(),D={system:l,session:S,sessionSlotId:A.sessionSlotId,clientSessionId:SO};localStorage.setItem(`data_${we==null?void 0:we.username}`,jI(JSON.stringify(l,(M,c)=>typeof c=="bigint"?c<=o?Number(c):c.toString():c),_s)),localStorage.setItem(`sessionData${A.sessionSlotId?A.sessionSlotId:""}_${we==null?void 0:we.username}`,jI(JSON.stringify(S),_s)),console.debug("Session data saved"),R?En("savedata/updateall",JSON.stringify(D,(M,c)=>typeof c=="bigint"?c<=o?Number(c):c.toString():c),void 0,!0).then(M=>M.text()).then(M=>{if(R&&(this.scene.lastSavePlayTime=0,this.scene.ui.savingIcon.hide()),M)return M.startsWith("session out of date")&&(this.scene.clearPhaseQueue(),this.scene.unshiftPhase(new ei(this.scene))),console.error(M),a(!1);a(!0)}):this.verify().then(M=>{this.scene.ui.savingIcon.hide(),a(M)})})})}tryExportData(A,s=0){return new Promise(R=>{const I=`${Da(A,s)}_${we==null?void 0:we.username}`,i=T(a=>{switch(A){case fA.SYSTEM:a=this.convertSystemDataStr(a,!0);break}const L=CI.AES.encrypt(a,_r),S=new Blob([L.toString()],{type:"text/json"}),o=document.createElement("a");o.href=window.URL.createObjectURL(S),o.download=`${I}.prsv`,o.click(),o.remove()},"handleData");if(A<fA.SETTINGS)GO(`savedata/${A===fA.SYSTEM?"system":"session"}/get?clientSessionId=${SO}${A===fA.SESSION?`&slot=${s}`:""}`,!0).then(a=>a.text()).then(a=>{if(!a.length||a[0]!=="{"){console.error(a),R(!1);return}i(a),R(!0)});else{const a=localStorage.getItem(I);a&&i(Ma(a,_s)),R(!!a)}})}importData(A,s=0){const R=`${Da(A,s)}_${we==null?void 0:we.username}`;let I=document.getElementById("saveFile");I&&I.remove(),I=document.createElement("input"),I.id="saveFile",I.type="file",I.accept=".prsv",I.style.display="none",I.addEventListener("change",i=>{const a=new FileReader;a.onload=(L=>S=>{var G,P;let o,l=CI.AES.decrypt((P=(G=S.target)==null?void 0:G.result)==null?void 0:P.toString(),_r).toString(CI.enc.Utf8);const D=JSON.parse(l);A==fA.SYSTEM&&(D.gameStats.playTime=this.scene.gameData.gameStats.playTime+1e3),D.trainerId=this.trainerId,D.secretId=this.secretId,l=JSON.stringify(D);let M=!1;try{switch(o=fA[A].toLowerCase(),A){case fA.SYSTEM:l=this.convertSystemDataStr(l);const _=this.parseSystemData(l);M=!!_.dexData&&!!_.timestamp;break;case fA.SESSION:const g=this.parseSessionData(l);M=!!g.party&&!!g.enemyParty&&!!g.timestamp;break;case fA.RUN_HISTORY:const H=JSON.parse(l),F=Object.keys(H);o=U.t("menuUiHandler:RUN_HISTORY").toLowerCase(),F.forEach(p=>{const v=Object.keys(H[p]);M=["isFavorite","isVictory","entry"].every(k=>v.includes(k))&&v.length===3});break;case fA.SETTINGS:case fA.TUTORIALS:M=!0;break}}catch(_){console.error(_)}const c=T(_=>this.scene.ui.showText(_,null,()=>this.scene.ui.showText("",0),Ve(1500)),"displayError");if(o=o,!M)return this.scene.ui.showText(`Your ${o} data could not be loaded. It may be corrupted.`,null,()=>this.scene.ui.showText("",0),Ve(1500));this.scene.ui.showText(`Your ${o} data will be overridden and the page will reload. Proceed?`,null,()=>{this.scene.ui.setOverlayMode($.CONFIRM,()=>{localStorage.setItem(R,jI(l,_s)),A<fA.SETTINGS?BO().then(_=>{if(!_[0])return c(`Could not contact the server. Your ${o} data could not be imported.`);let g;A===fA.SESSION?g=`savedata/session/update?slot=${s}&trainerId=${this.trainerId}&secretId=${this.secretId}&clientSessionId=${SO}`:g=`savedata/system/update?trainerId=${this.trainerId}&secretId=${this.secretId}&clientSessionId=${SO}`,En(g,l,void 0,!0).then(H=>H.text()).then(H=>{if(H)return console.error(H),c(`An error occurred while updating ${o} data. Please contact the administrator.`);window.location=window.location})}):window.location=window.location},()=>{this.scene.ui.revertMode(),this.scene.ui.showText("",0)},!1,-98)})})(i.target.files[0]),a.readAsText(i.target.files[0])}),I.click()}initDexData(){const A={};for(const I of MR)A[I.speciesId]={seenAttr:0n,caughtAttr:0n,natureAttr:0,seenCount:0,caughtCount:0,hatchedCount:0,ivs:[0,0,0,0,0,0]};const s=Fe.NON_SHINY|Fe.MALE|Fe.FEMALE|Fe.DEFAULT_VARIANT|Fe.DEFAULT_FORM,R=[];this.scene.executeWithSeedOffset(()=>{const I=[be.HARDY,be.DOCILE,be.SERIOUS,be.BASHFUL,be.QUIRKY];for(let i=0;i<ri.length;i++)R.push(RE(I))},0,"default");for(let I=0;I<ri.length;I++){const i=A[ri[I]];i.seenAttr=s,i.caughtAttr=s,i.natureAttr=1<<R[I]+1;for(const a in i.ivs)i.ivs[a]=10}this.defaultDexData=Object.assign({},A),this.dexData=A}initStarterData(){const A={},s=Object.keys(CA).map(R=>parseInt(R));for(const R of s)A[R]={moveset:null,eggMoves:0,candyCount:0,friendship:0,abilityAttr:ri.includes(R)?ns.ABILITY_1:0,passiveAttr:0,valueReduction:0,classicWinCount:0};this.starterData=A}setPokemonSeen(A,s=!0,R=!1){var i,a;if((i=this.scene.currentBattle)!=null&&i.isBattleMysteryEncounter()&&((a=this.scene.currentBattle.mysteryEncounter)!=null&&a.preventGameStatsUpdates))return;const I=this.dexData[A.species.speciesId];I.seenAttr|=A.getDexAttr(),s&&(I.seenCount++,this.gameStats.pokemonSeen++,!R&&A.species.subLegendary?this.gameStats.subLegendaryPokemonSeen++:!R&&A.species.legendary?this.gameStats.legendaryPokemonSeen++:!R&&A.species.mythical&&this.gameStats.mythicalPokemonSeen++,!R&&A.isShiny()&&this.gameStats.shinyPokemonSeen++)}setPokemonCaught(A,s=!0,R=!1,I=!0){const i=A.species.getRootSpeciesId();return!s&&!this.scene.gameData.dexData[i].caughtAttr?Promise.resolve(!1):this.setPokemonSpeciesCaught(A,A.species,s,R,I)}setPokemonSpeciesCaught(A,s,R=!0,I=!1,i=!0){return new Promise(a=>{const L=this.dexData[s.speciesId],S=L.caughtAttr,o=A.formIndex;G8.includes(A.getFormKey())&&(A.formIndex=0);const l=A.getDexAttr();A.formIndex=o,L.caughtAttr|=l,CA.hasOwnProperty(s.speciesId)&&(this.starterData[s.speciesId].abilityAttr|=A.abilityIndex!==1||A.species.ability2?1<<A.abilityIndex:ns.ABILITY_HIDDEN),L.natureAttr|=1<<A.nature+1;const D=KA.hasOwnProperty(s.speciesId),M=!S,c=(S&l)!==l;R&&(I?(L.hatchedCount++,this.gameStats.pokemonHatched++,A.species.subLegendary?this.gameStats.subLegendaryPokemonHatched++:A.species.legendary?this.gameStats.legendaryPokemonHatched++:A.species.mythical&&this.gameStats.mythicalPokemonHatched++,A.isShiny()&&this.gameStats.shinyPokemonHatched++):(L.caughtCount++,this.gameStats.pokemonCaught++,A.species.subLegendary?this.gameStats.subLegendaryPokemonCaught++:A.species.legendary?this.gameStats.legendaryPokemonCaught++:A.species.mythical&&this.gameStats.mythicalPokemonCaught++,A.isShiny()&&this.gameStats.shinyPokemonCaught++),!D&&(!A.scene.gameMode.isDaily||c||I)&&this.addStarterCandy(s,1*(A.isShiny()?5*(1<<(A.variant??0)):1)*(I||A.isBoss()?2:1)));const G=T(P=>{if(D){const _=KA[s.speciesId];this.setPokemonSpeciesCaught(A,Ke(_),R,I,i).then(g=>a(g))}else a(P)},"checkPrevolution");if(M&&CA.hasOwnProperty(s.speciesId)){if(!i){a(!0);return}this.scene.playSound("level_up_fanfare"),this.scene.ui.showText(U.t("battle:addedAsAStarter",{pokemonName:s.name}),null,()=>G(!0),null,!0)}else G(!1)})}incrementRibbonCount(A,s=!1){const R=A.getRootSpeciesId(s);this.starterData[R].classicWinCount||(this.starterData[R].classicWinCount=0),this.starterData[R].classicWinCount||this.scene.gameData.gameStats.ribbonsOwned++;const I=this.scene.gameData.gameStats.ribbonsOwned;return I>=100&&this.scene.validateAchv(At._100_RIBBONS),I>=75&&this.scene.validateAchv(At._75_RIBBONS),I>=50&&this.scene.validateAchv(At._50_RIBBONS),I>=25&&this.scene.validateAchv(At._25_RIBBONS),I>=10&&this.scene.validateAchv(At._10_RIBBONS),++this.starterData[R].classicWinCount}addStarterCandy(A,s){const R=A.getRootSpeciesId();this.scene.gameData.dexData[R].caughtAttr&&(this.scene.candyBar.showStarterSpeciesCandy(A.speciesId,s),this.starterData[A.speciesId].candyCount+=s)}setEggMoveUnlocked(A,s,R=!0,I=!1){return new Promise(i=>{const a=A.speciesId;if(!oE.hasOwnProperty(a)||!oE[a][s]){i(!1);return}this.starterData[a].eggMoves||(this.starterData[a].eggMoves=0);const L=1<<s;if(this.starterData[a].eggMoves&L){i(!1);return}if(this.starterData[a].eggMoves|=L,!R){i(!0);return}this.scene.playSound("level_up_fanfare");const S=He[oE[a][s]].name;let o=I?A.getName()+" ":"";o+=s===3?U.t("egg:rareEggMoveUnlock",{moveName:S}):U.t("egg:eggMoveUnlock",{moveName:S}),this.scene.ui.showText(o,null,()=>i(!0),null,!0)})}updateSpeciesDexIvs(A,s){let R;do{R=this.scene.gameData.dexData[A];const I=R.ivs;for(let i=0;i<I.length;i++)I[i]<s[i]&&(I[i]=s[i]);I.filter(i=>i===31).length===6&&this.scene.validateAchv(At.PERFECT_IVS)}while(KA.hasOwnProperty(A)&&(A=KA[A]))}getSpeciesCount(A){const s=Object.keys(this.dexData);let R=0;for(const I of s)A(this.dexData[I])&&R++;return R}getStarterCount(A){const s=Object.keys(CA);let R=0;for(const I of s){const i=this.dexData[I];A(i)&&R++}return R}getSpeciesDefaultDexAttr(A,s=!1,R=!1){let I=0n;const a=this.dexData[A.speciesId].caughtAttr;return I|=R?a&Fe.SHINY?Fe.SHINY:Fe.NON_SHINY:a&Fe.NON_SHINY||!(a&Fe.SHINY)?Fe.NON_SHINY:Fe.SHINY,I|=a&Fe.MALE||!(a&Fe.FEMALE)?Fe.MALE:Fe.FEMALE,I|=R?a&Fe.SHINY?a&Fe.VARIANT_3?Fe.VARIANT_3:a&Fe.VARIANT_2?Fe.VARIANT_2:Fe.DEFAULT_VARIANT:Fe.DEFAULT_VARIANT:a&Fe.DEFAULT_VARIANT?Fe.DEFAULT_VARIANT:a&Fe.VARIANT_2?Fe.VARIANT_2:a&Fe.VARIANT_3?Fe.VARIANT_3:Fe.DEFAULT_VARIANT,I|=this.getFormAttr(this.getFormIndex(a)),I}getSpeciesDexAttrProps(A,s){const R=!(s&Fe.NON_SHINY),I=!(s&Fe.MALE),i=s&Fe.DEFAULT_VARIANT?0:s&Fe.VARIANT_2?1:s&Fe.VARIANT_3?2:0,a=this.getFormIndex(s);return{shiny:R,female:I,variant:i,formIndex:a}}getStarterSpeciesDefaultAbilityIndex(A){const s=this.starterData[A.speciesId].abilityAttr;return s&ns.ABILITY_1?0:!A.ability2||s&ns.ABILITY_2?1:2}getSpeciesDefaultNature(A){const s=this.dexData[A.speciesId];for(let R=0;R<25;R++)if(s.natureAttr&1<<R+1)return R;return 0}getSpeciesDefaultNatureAttr(A){return 1<<this.getSpeciesDefaultNature(A)}getDexAttrLuck(A){return A&Fe.SHINY?A&Fe.VARIANT_3?3:A&Fe.VARIANT_2?2:1:0}getNaturesForAttr(A=0){const s=[];for(let R=0;R<25;R++)A&1<<R+1&&s.push(R);return s}getSpeciesStarterValue(A){let R=CA[A];const I=T(a=>(a>1?a--:a/=2,a),"decrementValue");for(let a=0;a<this.starterData[A].valueReduction;a++)R=I(R);const i=new $e(R);return Is(this.scene.gameMode,JE.STARTER_COST,A,i),i.value}getFormIndex(A){if(!A||A<Fe.DEFAULT_FORM)return 0;let s=0;for(;!(A&this.getFormAttr(s));)s++;return s}getFormAttr(A){return BigInt(1)<<BigInt(7+A)}consolidateDexData(A){var s;for(const R of Object.keys(A)){const I=A[R];I.hasOwnProperty("hatchedCount")||(I.hatchedCount=0),(!I.hasOwnProperty("natureAttr")||I.caughtAttr&&!I.natureAttr)&&(I.natureAttr=((s=this.defaultDexData)==null?void 0:s[R].natureAttr)||1<<sA(25,1))}}migrateStarterAbilities(A,s){const R=Object.keys(this.starterData).map(a=>parseInt(a)),I=s||A.starterData,i=A.dexData;for(const a of R){const L=i[a].caughtAttr;I[a].abilityAttr=(L&Fe.DEFAULT_VARIANT?ns.ABILITY_1:0)|(L&Fe.VARIANT_2?ns.ABILITY_2:0)|(L&Fe.VARIANT_3?ns.ABILITY_HIDDEN:0),L&&(L&Fe.DEFAULT_VARIANT||(i[a].caughtAttr^=Fe.DEFAULT_VARIANT),L&Fe.VARIANT_2&&(i[a].caughtAttr^=Fe.VARIANT_2),L&Fe.VARIANT_3&&(i[a].caughtAttr^=Fe.VARIANT_3))}}};T(sm,"GameData");let GC=sm;const mG=10;var JE=(E=>(E[E.STARTER_CHOICE=0]="STARTER_CHOICE",E[E.STARTER_POINTS=1]="STARTER_POINTS",E[E.STARTER_COST=2]="STARTER_COST",E[E.STARTER_MODIFY=3]="STARTER_MODIFY",E[E.POKEMON_IN_BATTLE=4]="POKEMON_IN_BATTLE",E[E.FIXED_BATTLES=5]="FIXED_BATTLES",E[E.TYPE_EFFECTIVENESS=6]="TYPE_EFFECTIVENESS",E[E.AI_LEVEL=7]="AI_LEVEL",E[E.AI_MOVE_SLOTS=8]="AI_MOVE_SLOTS",E[E.PASSIVE_ACCESS=9]="PASSIVE_ACCESS",E[E.GAME_MODE_MODIFY=10]="GAME_MODE_MODIFY",E[E.MOVE_ACCESS=11]="MOVE_ACCESS",E[E.MOVE_WEIGHT=12]="MOVE_WEIGHT",E))(JE||{});const Rm=class Rm{constructor(A,s=Number.MAX_SAFE_INTEGER){this.id=A,this.value=0,this.maxValue=s,this.severity=0,this.maxSeverity=0,this.conditions=[]}reset(){this.value=0,this.severity=0}geti18nKey(){return ht[this.id].split("_").map((A,s)=>s?`${A[0]}${A.slice(1).toLowerCase()}`:A.toLowerCase()).join("")}isUnlocked(A){return this.conditions.every(s=>s(A))}condition(A){return this.conditions.push(A),this}getName(){return U.t(`challenges:${this.geti18nKey()}.name`)}getValue(A){const s=A??this.value;return U.t(`challenges:${this.geti18nKey()}.value.${s}`)}getDescription(A){const s=A??this.value;return`${U.t([`challenges:${this.geti18nKey()}.desc.${s}`,`challenges:${this.geti18nKey()}.desc`])}`}increaseValue(){return this.value<this.maxValue?(this.value=Math.min(this.value+1,this.maxValue),!0):!1}decreaseValue(){return this.value>0?(this.value=Math.max(this.value-1,0),!0):!1}hasSeverity(){return this.value!==0&&this.maxSeverity>0}decreaseSeverity(){return this.severity>0?(this.severity=Math.max(this.severity-1,0),!0):!1}increaseSeverity(){return this.severity<this.maxSeverity?(this.severity=Math.min(this.severity+1,this.maxSeverity),!0):!1}getDifficulty(){return this.value}getMinDifficulty(){return 0}static loadChallenge(A){throw new Error("Method not implemented! Use derived class")}applyStarterChoice(A,s,R,I=!1){return!1}applyStarterPoints(A){return!1}applyStarterCost(A,s){return!1}applyStarterModify(A){return!1}applyPokemonInBattle(A,s){return!1}applyFixedBattle(A,s){return!1}applyTypeEffectiveness(A){return!1}applyLevelChange(A,s,R,I){return!1}applyMoveSlot(A,s){return!1}applyPassiveAccess(A,s){return!1}applyGameModeModify(A){return!1}applyMoveAccessLevel(A,s,R,I){return!1}applyMoveWeight(A,s,R,I){return!1}};T(Rm,"Challenge");let FI=Rm;const NM=class NM extends FI{constructor(){super(ht.SINGLE_GENERATION,9)}applyStarterChoice(A,s,R,I=!1){const i=[A.generation];if(I){const a=[A.speciesId];for(;a.length;){const L=a.pop();L&&Ht.hasOwnProperty(L)&&Ht[L].forEach(S=>{a.push(S.speciesId),i.push(Ke(S.speciesId).generation)})}}return i.includes(this.value)?!1:(s.value=!1,!0)}applyPokemonInBattle(A,s){var i;const R=A.species.speciesId===e.VICTINI?5:Ke(A.species.speciesId).generation,I=A.isFusion()?((i=A.fusionSpecies)==null?void 0:i.speciesId)===e.VICTINI?5:Ke(A.fusionSpecies.speciesId).generation:0;return A.isPlayer()&&(R!==this.value||A.isFusion()&&I!==this.value)?(s.value=!1,!0):!1}applyFixedBattle(A,s){let R=[];switch(A){case 182:R=[C.LORELEI,C.WILL,C.SIDNEY,C.AARON,C.SHAUNTAL,C.MALVA,RE([C.HALA,C.MOLAYNE]),C.MARNIE_ELITE,C.RIKA];break;case 184:R=[C.BRUNO,C.KOGA,C.PHOEBE,C.BERTHA,C.MARSHAL,C.SIEBOLD,C.OLIVIA,C.NESSA_ELITE,C.POPPY];break;case 186:R=[C.AGATHA,C.BRUNO,C.GLACIA,C.FLINT,C.GRIMSLEY,C.WIKSTROM,C.ACEROLA,RE([C.BEA_ELITE,C.ALLISTER_ELITE]),C.LARRY_ELITE];break;case 188:R=[C.LANCE,C.KAREN,C.DRAKE,C.LUCIAN,C.CAITLIN,C.DRASNA,C.KAHILI,C.RAIHAN_ELITE,C.HASSEL];break;case 190:R=[C.BLUE,RE([C.RED,C.LANCE_CHAMPION]),RE([C.STEVEN,C.WALLACE]),C.CYNTHIA,RE([C.ALDER,C.IRIS]),C.DIANTHA,C.HAU,C.LEON,RE([C.GEETA,C.NEMONA])];break}return R.length===0?!1:(s.setBattleType(Nt.TRAINER).setGetTrainerFunc(I=>new is(I,R[this.value-1],bt.DEFAULT)),!0)}getDifficulty(){return this.value>0?1:0}getValue(A){const s=A??this.value;return s===0?U.t("settings:off"):U.t(`starterSelectUiHandler:gen${s}`)}getDescription(A){const s=A??this.value;return s===0?U.t("challenges:singleGeneration.desc_default"):U.t("challenges:singleGeneration.desc",{gen:U.t(`challenges:singleGeneration.gen_${s}`)})}static loadChallenge(A){const s=new NM;return s.value=A.value,s.severity=A.severity,s}};T(NM,"SingleGenerationChallenge");let FR=NM;const TI=class TI extends FI{constructor(){super(ht.SINGLE_TYPE,18)}applyStarterChoice(A,s,R,I=!1){const i=GI(A.speciesId,R.formIndex),a=[i.type1,i.type2];if(I&&!TI.SPECIES_OVERRIDES.includes(A.speciesId)){const L=[A.speciesId];for(;L.length;){const S=L.pop();S&&Ht.hasOwnProperty(S)&&Ht[S].forEach(o=>{L.push(o.speciesId),a.push(Ke(o.speciesId).type1,Ke(o.speciesId).type2)}),S&&mO.hasOwnProperty(S)&&mO[S].forEach(o=>{Ke(S).forms.forEach(l=>{o.formKey===l.formKey&&a.push(l.type1,l.type2)})})}}return a.includes(this.value-1)?!1:(s.value=!1,!0)}applyPokemonInBattle(A,s){return A.isPlayer()&&!A.isOfType(this.value-1,!1,!1,!0)&&!TI.TYPE_OVERRIDES.some(R=>R.type===this.value-1&&(A.isFusion()&&R.fusion?A.fusionSpecies:A.species).speciesId===R.species)?(s.value=!1,!0):!1}getDifficulty(){return this.value>0?1:0}getValue(A){return A===void 0&&(A=this.value),n[this.value-1].toLowerCase()}getDescription(A){A===void 0&&(A=this.value);const s=U.t(`pokemonInfo:Type.${n[this.value-1]}`),R=`[color=${c1[n[this.value-1]]}][shadow=${G1[n[this.value-1]]}]${s}[/shadow][/color]`,I=U.t("challenges:singleType.desc_default"),i=U.t("challenges:singleType.desc",{type:R});return this.value===0?I:i}static loadChallenge(A){const s=new TI;return s.value=A.value,s.severity=A.severity,s}};T(TI,"SingleTypeChallenge"),TI.TYPE_OVERRIDES=[{species:e.CASTFORM,type:n.NORMAL,fusion:!1}],TI.SPECIES_OVERRIDES=[e.MELOETTA];let SE=TI;const TM=class TM extends FI{constructor(){super(ht.FRESH_START,1)}applyStarterChoice(A,s){return ri.includes(A.speciesId)?!1:(s.value=!1,!0)}applyStarterCost(A,s){return ri.includes(A)?(s.value=CA[A],!0):!1}applyStarterModify(A){return A.abilityIndex=0,A.passive=!1,A.nature=be.HARDY,A.moveset=A.species.getLevelMoves().filter(s=>s[0]<=5).map(s=>s[1]).slice(0,4).map(s=>new ke(s)),A.luck=0,A.shiny=!1,A.variant=0,A.formIndex=0,A.ivs=[10,10,10,10,10,10],!0}getDifficulty(){return 0}static loadChallenge(A){const s=new TM;return s.value=A.value,s.severity=A.severity,s}};T(TM,"FreshStartChallenge");let $T=TM;const SM=class SM extends FI{constructor(){super(ht.INVERSE_BATTLE,1)}static loadChallenge(A){const s=new SM;return s.value=A.value,s.severity=A.severity,s}getDifficulty(){return 0}applyTypeEffectiveness(A){return A.value<1?(A.value=2,!0):A.value>1?(A.value=.5,!0):!1}};T(SM,"InverseBattleChallenge");let qT=SM;const oM=class oM extends FI{constructor(){super(ht.LOWER_MAX_STARTER_COST,9)}getValue(A){return A===void 0&&(A=this.value),(mG-A).toString()}applyStarterChoice(A,s){return CA[A.speciesId]>mG-this.value?(s.value=!1,!0):!1}static loadChallenge(A){const s=new oM;return s.value=A.value,s.severity=A.severity,s}};T(oM,"LowerStarterMaxCostChallenge");let WG=oM;const lM=class lM extends FI{constructor(){super(ht.LOWER_STARTER_POINTS,9)}getValue(A){return A===void 0&&(A=this.value),(mG-A).toString()}applyStarterPoints(A){return A.value-=this.value,!0}static loadChallenge(A){const s=new lM;return s.value=A.value,s.severity=A.severity,s}};T(lM,"LowerStarterPointsChallenge");let YG=lM;function Is(E,A,...s){let R=!1;return E.challenges.forEach(I=>{if(I.value!==0)switch(A){case 0:R||(R=I.applyStarterChoice(s[0],s[1],s[2],s[3]));break;case 1:R||(R=I.applyStarterPoints(s[0]));break;case 2:R||(R=I.applyStarterCost(s[0],s[1]));break;case 3:R||(R=I.applyStarterModify(s[0]));break;case 4:R||(R=I.applyPokemonInBattle(s[0],s[1]));break;case 5:R||(R=I.applyFixedBattle(s[0],s[1]));break;case 6:R||(R=I.applyTypeEffectiveness(s[0]));break;case 7:R||(R=I.applyLevelChange(s[0],s[1],s[2],s[3]));break;case 8:R||(R=I.applyMoveSlot(s[0],s[1]));break;case 9:R||(R=I.applyPassiveAccess(s[0],s[1]));break;case 10:R||(R=I.applyGameModeModify(E));break;case 11:R||(R=I.applyMoveAccessLevel(s[0],s[1],s[2],s[3]));break;case 12:R||(R=I.applyMoveWeight(s[0],s[1],s[2],s[3]));break}}),R}T(Is,"applyChallenges");function $6(E){switch(E.id){case ht.SINGLE_GENERATION:return FR.loadChallenge(E);case ht.SINGLE_TYPE:return SE.loadChallenge(E);case ht.LOWER_MAX_STARTER_COST:return WG.loadChallenge(E);case ht.LOWER_STARTER_POINTS:return YG.loadChallenge(E);case ht.FRESH_START:return $T.loadChallenge(E);case ht.INVERSE_BATTLE:return qT.loadChallenge(E)}throw new Error("Unknown challenge copied")}T($6,"copyChallenge");const q6=[];function cX(){q6.push(new FR,new SE,new $T,new qT)}T(cX,"initChallenges");var Lr=(E=>(E[E.COMMON=0]="COMMON",E[E.GREAT=1]="GREAT",E[E.ULTRA=2]="ULTRA",E[E.ROGUE=3]="ROGUE",E[E.MASTER=4]="MASTER",E))(Lr||{});const Om=class Om{constructor(A,s,R,I,i,a){this.name=s,this.description=R,this.iconImage=I,this.score=i,this.conditionFunc=a,this.localizationKey=A}getName(A=ct.UNSET){const s=ct[A].toLowerCase();return U.t(`achv:${this.localizationKey}.name`,{context:s})}getDescription(){return this.description}getIconImage(){return this.iconImage}setSecret(A){return this.secret=!0,this.hasParent=!!A,this}validate(A,s){return!this.conditionFunc||this.conditionFunc(A,s)}getTier(){return this.score>=100?4:this.score>=75?3:this.score>=50?2:this.score>=25?1:0}};T(Om,"Achv");let oA=Om;const nm=class nm extends oA{constructor(A,s,R,I,i){super(A,s,"",I,i,(a,L)=>a.money>=this.moneyAmount),this.moneyAmount=R}};T(nm,"MoneyAchv");let Ni=nm;const Im=class Im extends oA{constructor(A,s,R,I,i){super(A,s,"",I,i,(a,L)=>a.gameData.gameStats.ribbonsOwned>=this.ribbonAmount),this.ribbonAmount=R}};T(Im,"RibbonAchv");let ti=Im;const im=class im extends oA{constructor(A,s,R,I,i){super(A,s,"",I,i,(a,L)=>(L[0]instanceof $e?L[0].value:L[0])>=this.damageAmount),this.damageAmount=R}};T(im,"DamageAchv");let Ti=im;const am=class am extends oA{constructor(A,s,R,I,i){super(A,s,"",I,i,(a,L)=>(L[0]instanceof $e?L[0].value:L[0])>=this.healAmount),this.healAmount=R}};T(am,"HealAchv");let Si=am;const Lm=class Lm extends oA{constructor(A,s,R,I,i){super(A,s,"",I,i,(a,L)=>(L[0]instanceof $e?L[0].value:L[0])>=this.level),this.level=R}};T(Lm,"LevelAchv");let Qa=Lm;const rm=class rm extends oA{constructor(A,s,R,I,i,a){super(A,s,R,I,i,(L,S)=>a(S[0]))}};T(rm,"ModifierAchv");let PC=rm;const Nm=class Nm extends oA{constructor(A,s,R,I,i,a){super(A,s,R,I,i,(L,S)=>a(S[0],L))}};T(Nm,"ChallengeAchv");let uA=Nm;function F1(E){var R,I;const A=((I=(R=this==null?void 0:this.scene)==null?void 0:R.gameData)==null?void 0:I.gender)??ct.MALE,s=ct[A].toLowerCase();switch(E){case"10K_MONEY":return U.t("achv:MoneyAchv.description",{context:s,moneyAmount:At._10K_MONEY.moneyAmount.toLocaleString("en-US")});case"100K_MONEY":return U.t("achv:MoneyAchv.description",{context:s,moneyAmount:At._100K_MONEY.moneyAmount.toLocaleString("en-US")});case"1M_MONEY":return U.t("achv:MoneyAchv.description",{context:s,moneyAmount:At._1M_MONEY.moneyAmount.toLocaleString("en-US")});case"10M_MONEY":return U.t("achv:MoneyAchv.description",{context:s,moneyAmount:At._10M_MONEY.moneyAmount.toLocaleString("en-US")});case"250_DMG":return U.t("achv:DamageAchv.description",{context:s,damageAmount:At._250_DMG.damageAmount.toLocaleString("en-US")});case"1000_DMG":return U.t("achv:DamageAchv.description",{context:s,damageAmount:At._1000_DMG.damageAmount.toLocaleString("en-US")});case"2500_DMG":return U.t("achv:DamageAchv.description",{context:s,damageAmount:At._2500_DMG.damageAmount.toLocaleString("en-US")});case"10000_DMG":return U.t("achv:DamageAchv.description",{context:s,damageAmount:At._10000_DMG.damageAmount.toLocaleString("en-US")});case"250_HEAL":return U.t("achv:HealAchv.description",{context:s,healAmount:At._250_HEAL.healAmount.toLocaleString("en-US"),HP:U.t(_a(B.HP))});case"1000_HEAL":return U.t("achv:HealAchv.description",{context:s,healAmount:At._1000_HEAL.healAmount.toLocaleString("en-US"),HP:U.t(_a(B.HP))});case"2500_HEAL":return U.t("achv:HealAchv.description",{context:s,healAmount:At._2500_HEAL.healAmount.toLocaleString("en-US"),HP:U.t(_a(B.HP))});case"10000_HEAL":return U.t("achv:HealAchv.description",{context:s,healAmount:At._10000_HEAL.healAmount.toLocaleString("en-US"),HP:U.t(_a(B.HP))});case"LV_100":return U.t("achv:LevelAchv.description",{context:s,level:At.LV_100.level});case"LV_250":return U.t("achv:LevelAchv.description",{context:s,level:At.LV_250.level});case"LV_1000":return U.t("achv:LevelAchv.description",{context:s,level:At.LV_1000.level});case"10_RIBBONS":return U.t("achv:RibbonAchv.description",{context:s,ribbonAmount:At._10_RIBBONS.ribbonAmount.toLocaleString("en-US")});case"25_RIBBONS":return U.t("achv:RibbonAchv.description",{context:s,ribbonAmount:At._25_RIBBONS.ribbonAmount.toLocaleString("en-US")});case"50_RIBBONS":return U.t("achv:RibbonAchv.description",{context:s,ribbonAmount:At._50_RIBBONS.ribbonAmount.toLocaleString("en-US")});case"75_RIBBONS":return U.t("achv:RibbonAchv.description",{context:s,ribbonAmount:At._75_RIBBONS.ribbonAmount.toLocaleString("en-US")});case"100_RIBBONS":return U.t("achv:RibbonAchv.description",{context:s,ribbonAmount:At._100_RIBBONS.ribbonAmount.toLocaleString("en-US")});case"TRANSFER_MAX_STAT_STAGE":return U.t("achv:TRANSFER_MAX_STAT_STAGE.description",{context:s});case"MAX_FRIENDSHIP":return U.t("achv:MAX_FRIENDSHIP.description",{context:s});case"MEGA_EVOLVE":return U.t("achv:MEGA_EVOLVE.description",{context:s});case"GIGANTAMAX":return U.t("achv:GIGANTAMAX.description",{context:s});case"TERASTALLIZE":return U.t("achv:TERASTALLIZE.description",{context:s});case"STELLAR_TERASTALLIZE":return U.t("achv:STELLAR_TERASTALLIZE.description",{context:s});case"SPLICE":return U.t("achv:SPLICE.description",{context:s});case"MINI_BLACK_HOLE":return U.t("achv:MINI_BLACK_HOLE.description",{context:s});case"CATCH_MYTHICAL":return U.t("achv:CATCH_MYTHICAL.description",{context:s});case"CATCH_SUB_LEGENDARY":return U.t("achv:CATCH_SUB_LEGENDARY.description",{context:s});case"CATCH_LEGENDARY":return U.t("achv:CATCH_LEGENDARY.description",{context:s});case"SEE_SHINY":return U.t("achv:SEE_SHINY.description",{context:s});case"SHINY_PARTY":return U.t("achv:SHINY_PARTY.description",{context:s});case"HATCH_MYTHICAL":return U.t("achv:HATCH_MYTHICAL.description",{context:s});case"HATCH_SUB_LEGENDARY":return U.t("achv:HATCH_SUB_LEGENDARY.description",{context:s});case"HATCH_LEGENDARY":return U.t("achv:HATCH_LEGENDARY.description",{context:s});case"HATCH_SHINY":return U.t("achv:HATCH_SHINY.description",{context:s});case"HIDDEN_ABILITY":return U.t("achv:HIDDEN_ABILITY.description",{context:s});case"PERFECT_IVS":return U.t("achv:PERFECT_IVS.description",{context:s});case"CLASSIC_VICTORY":return U.t("achv:CLASSIC_VICTORY.description",{context:s});case"UNEVOLVED_CLASSIC_VICTORY":return U.t("achv:UNEVOLVED_CLASSIC_VICTORY.description",{context:s});case"MONO_GEN_ONE":return U.t("achv:MONO_GEN_ONE.description",{context:s});case"MONO_GEN_TWO":return U.t("achv:MONO_GEN_TWO.description",{context:s});case"MONO_GEN_THREE":return U.t("achv:MONO_GEN_THREE.description",{context:s});case"MONO_GEN_FOUR":return U.t("achv:MONO_GEN_FOUR.description",{context:s});case"MONO_GEN_FIVE":return U.t("achv:MONO_GEN_FIVE.description",{context:s});case"MONO_GEN_SIX":return U.t("achv:MONO_GEN_SIX.description",{context:s});case"MONO_GEN_SEVEN":return U.t("achv:MONO_GEN_SEVEN.description",{context:s});case"MONO_GEN_EIGHT":return U.t("achv:MONO_GEN_EIGHT.description",{context:s});case"MONO_GEN_NINE":return U.t("achv:MONO_GEN_NINE.description",{context:s});case"MONO_NORMAL":case"MONO_FIGHTING":case"MONO_FLYING":case"MONO_POISON":case"MONO_GROUND":case"MONO_ROCK":case"MONO_BUG":case"MONO_GHOST":case"MONO_STEEL":case"MONO_FIRE":case"MONO_WATER":case"MONO_GRASS":case"MONO_ELECTRIC":case"MONO_PSYCHIC":case"MONO_ICE":case"MONO_DRAGON":case"MONO_DARK":case"MONO_FAIRY":return U.t("achv:MonoType.description",{context:s,type:U.t(`pokemonInfo:Type.${E.slice(5)}`)});case"FRESH_START":return U.t("achv:FRESH_START.description",{context:s});case"INVERSE_BATTLE":return U.t("achv:INVERSE_BATTLE.description",{context:s});case"BREEDERS_IN_SPACE":return U.t("achv:BREEDERS_IN_SPACE.description",{context:s});default:return""}}T(F1,"getAchievementDescription");const At={_10K_MONEY:new Ni("10K_MONEY","",1e4,"nugget",10),_100K_MONEY:new Ni("100K_MONEY","",1e5,"big_nugget",25).setSecret(!0),_1M_MONEY:new Ni("1M_MONEY","",1e6,"relic_gold",50).setSecret(!0),_10M_MONEY:new Ni("10M_MONEY","",1e7,"coin_case",100).setSecret(!0),_250_DMG:new Ti("250_DMG","",250,"lucky_punch",10),_1000_DMG:new Ti("1000_DMG","",1e3,"lucky_punch_great",25).setSecret(!0),_2500_DMG:new Ti("2500_DMG","",2500,"lucky_punch_ultra",50).setSecret(!0),_10000_DMG:new Ti("10000_DMG","",1e4,"lucky_punch_master",100).setSecret(!0),_250_HEAL:new Si("250_HEAL","",250,"potion",10),_1000_HEAL:new Si("1000_HEAL","",1e3,"super_potion",25).setSecret(!0),_2500_HEAL:new Si("2500_HEAL","",2500,"hyper_potion",50).setSecret(!0),_10000_HEAL:new Si("10000_HEAL","",1e4,"max_potion",100).setSecret(!0),LV_100:new Qa("LV_100","",100,"rare_candy",25).setSecret(),LV_250:new Qa("LV_250","",250,"rarer_candy",50).setSecret(!0),LV_1000:new Qa("LV_1000","",1e3,"candy_jar",100).setSecret(!0),_10_RIBBONS:new ti("10_RIBBONS","",10,"bronze_ribbon",10),_25_RIBBONS:new ti("25_RIBBONS","",25,"great_ribbon",25).setSecret(!0),_50_RIBBONS:new ti("50_RIBBONS","",50,"ultra_ribbon",50).setSecret(!0),_75_RIBBONS:new ti("75_RIBBONS","",75,"rogue_ribbon",75).setSecret(!0),_100_RIBBONS:new ti("100_RIBBONS","",100,"master_ribbon",100).setSecret(!0),TRANSFER_MAX_STAT_STAGE:new oA("TRANSFER_MAX_STAT_STAGE","","TRANSFER_MAX_STAT_STAGE.description","baton",20),MAX_FRIENDSHIP:new oA("MAX_FRIENDSHIP","","MAX_FRIENDSHIP.description","soothe_bell",25),MEGA_EVOLVE:new oA("MEGA_EVOLVE","","MEGA_EVOLVE.description","mega_bracelet",50),GIGANTAMAX:new oA("GIGANTAMAX","","GIGANTAMAX.description","dynamax_band",50),TERASTALLIZE:new oA("TERASTALLIZE","","TERASTALLIZE.description","tera_orb",25),STELLAR_TERASTALLIZE:new oA("STELLAR_TERASTALLIZE","","STELLAR_TERASTALLIZE.description","stellar_tera_shard",25).setSecret(!0),SPLICE:new oA("SPLICE","","SPLICE.description","dna_splicers",10),MINI_BLACK_HOLE:new PC("MINI_BLACK_HOLE","","MINI_BLACK_HOLE.description","mini_black_hole",25,E=>E instanceof ea).setSecret(),CATCH_MYTHICAL:new oA("CATCH_MYTHICAL","","CATCH_MYTHICAL.description","strange_ball",50).setSecret(),CATCH_SUB_LEGENDARY:new oA("CATCH_SUB_LEGENDARY","","CATCH_SUB_LEGENDARY.description","rb",75).setSecret(),CATCH_LEGENDARY:new oA("CATCH_LEGENDARY","","CATCH_LEGENDARY.description","mb",100).setSecret(),SEE_SHINY:new oA("SEE_SHINY","","SEE_SHINY.description","pb_gold",75),SHINY_PARTY:new oA("SHINY_PARTY","","SHINY_PARTY.description","shiny_charm",100).setSecret(!0),HATCH_MYTHICAL:new oA("HATCH_MYTHICAL","","HATCH_MYTHICAL.description","mystery_egg",75).setSecret(),HATCH_SUB_LEGENDARY:new oA("HATCH_SUB_LEGENDARY","","HATCH_SUB_LEGENDARY.description","oval_stone",100).setSecret(),HATCH_LEGENDARY:new oA("HATCH_LEGENDARY","","HATCH_LEGENDARY.description","lucky_egg",125).setSecret(),HATCH_SHINY:new oA("HATCH_SHINY","","HATCH_SHINY.description","golden_egg",100).setSecret(),HIDDEN_ABILITY:new oA("HIDDEN_ABILITY","","HIDDEN_ABILITY.description","ability_charm",75),PERFECT_IVS:new oA("PERFECT_IVS","","PERFECT_IVS.description","blunder_policy",100),CLASSIC_VICTORY:new oA("CLASSIC_VICTORY","","CLASSIC_VICTORY.description","relic_crown",150,E=>E.gameData.gameStats.sessionsWon===0),UNEVOLVED_CLASSIC_VICTORY:new oA("UNEVOLVED_CLASSIC_VICTORY","","UNEVOLVED_CLASSIC_VICTORY.description","eviolite",175,E=>E.getParty().some(A=>A.getSpeciesForm(!0).speciesId in Ht)),MONO_GEN_ONE_VICTORY:new uA("MONO_GEN_ONE","","MONO_GEN_ONE.description","ribbon_gen1",100,(E,A)=>E instanceof FR&&E.value===1&&!A.gameMode.challenges.some(s=>s.id===ht.INVERSE_BATTLE&&s.value>0)),MONO_GEN_TWO_VICTORY:new uA("MONO_GEN_TWO","","MONO_GEN_TWO.description","ribbon_gen2",100,(E,A)=>E instanceof FR&&E.value===2&&!A.gameMode.challenges.some(s=>s.id===ht.INVERSE_BATTLE&&s.value>0)),MONO_GEN_THREE_VICTORY:new uA("MONO_GEN_THREE","","MONO_GEN_THREE.description","ribbon_gen3",100,(E,A)=>E instanceof FR&&E.value===3&&!A.gameMode.challenges.some(s=>s.id===ht.INVERSE_BATTLE&&s.value>0)),MONO_GEN_FOUR_VICTORY:new uA("MONO_GEN_FOUR","","MONO_GEN_FOUR.description","ribbon_gen4",100,(E,A)=>E instanceof FR&&E.value===4&&!A.gameMode.challenges.some(s=>s.id===ht.INVERSE_BATTLE&&s.value>0)),MONO_GEN_FIVE_VICTORY:new uA("MONO_GEN_FIVE","","MONO_GEN_FIVE.description","ribbon_gen5",100,(E,A)=>E instanceof FR&&E.value===5&&!A.gameMode.challenges.some(s=>s.id===ht.INVERSE_BATTLE&&s.value>0)),MONO_GEN_SIX_VICTORY:new uA("MONO_GEN_SIX","","MONO_GEN_SIX.description","ribbon_gen6",100,(E,A)=>E instanceof FR&&E.value===6&&!A.gameMode.challenges.some(s=>s.id===ht.INVERSE_BATTLE&&s.value>0)),MONO_GEN_SEVEN_VICTORY:new uA("MONO_GEN_SEVEN","","MONO_GEN_SEVEN.description","ribbon_gen7",100,(E,A)=>E instanceof FR&&E.value===7&&!A.gameMode.challenges.some(s=>s.id===ht.INVERSE_BATTLE&&s.value>0)),MONO_GEN_EIGHT_VICTORY:new uA("MONO_GEN_EIGHT","","MONO_GEN_EIGHT.description","ribbon_gen8",100,(E,A)=>E instanceof FR&&E.value===8&&!A.gameMode.challenges.some(s=>s.id===ht.INVERSE_BATTLE&&s.value>0)),MONO_GEN_NINE_VICTORY:new uA("MONO_GEN_NINE","","MONO_GEN_NINE.description","ribbon_gen9",100,(E,A)=>E instanceof FR&&E.value===9&&!A.gameMode.challenges.some(s=>s.id===ht.INVERSE_BATTLE&&s.value>0)),MONO_NORMAL:new uA("MONO_NORMAL","","MONO_NORMAL.description","silk_scarf",100,(E,A)=>E instanceof SE&&E.value===1&&!A.gameMode.challenges.some(s=>s.id===ht.INVERSE_BATTLE&&s.value>0)),MONO_FIGHTING:new uA("MONO_FIGHTING","","MONO_FIGHTING.description","black_belt",100,(E,A)=>E instanceof SE&&E.value===2&&!A.gameMode.challenges.some(s=>s.id===ht.INVERSE_BATTLE&&s.value>0)),MONO_FLYING:new uA("MONO_FLYING","","MONO_FLYING.description","sharp_beak",100,(E,A)=>E instanceof SE&&E.value===3&&!A.gameMode.challenges.some(s=>s.id===ht.INVERSE_BATTLE&&s.value>0)),MONO_POISON:new uA("MONO_POISON","","MONO_POISON.description","poison_barb",100,(E,A)=>E instanceof SE&&E.value===4&&!A.gameMode.challenges.some(s=>s.id===ht.INVERSE_BATTLE&&s.value>0)),MONO_GROUND:new uA("MONO_GROUND","","MONO_GROUND.description","soft_sand",100,(E,A)=>E instanceof SE&&E.value===5&&!A.gameMode.challenges.some(s=>s.id===ht.INVERSE_BATTLE&&s.value>0)),MONO_ROCK:new uA("MONO_ROCK","","MONO_ROCK.description","hard_stone",100,(E,A)=>E instanceof SE&&E.value===6&&!A.gameMode.challenges.some(s=>s.id===ht.INVERSE_BATTLE&&s.value>0)),MONO_BUG:new uA("MONO_BUG","","MONO_BUG.description","silver_powder",100,(E,A)=>E instanceof SE&&E.value===7&&!A.gameMode.challenges.some(s=>s.id===ht.INVERSE_BATTLE&&s.value>0)),MONO_GHOST:new uA("MONO_GHOST","","MONO_GHOST.description","spell_tag",100,(E,A)=>E instanceof SE&&E.value===8&&!A.gameMode.challenges.some(s=>s.id===ht.INVERSE_BATTLE&&s.value>0)),MONO_STEEL:new uA("MONO_STEEL","","MONO_STEEL.description","metal_coat",100,(E,A)=>E instanceof SE&&E.value===9&&!A.gameMode.challenges.some(s=>s.id===ht.INVERSE_BATTLE&&s.value>0)),MONO_FIRE:new uA("MONO_FIRE","","MONO_FIRE.description","charcoal",100,(E,A)=>E instanceof SE&&E.value===10&&!A.gameMode.challenges.some(s=>s.id===ht.INVERSE_BATTLE&&s.value>0)),MONO_WATER:new uA("MONO_WATER","","MONO_WATER.description","mystic_water",100,(E,A)=>E instanceof SE&&E.value===11&&!A.gameMode.challenges.some(s=>s.id===ht.INVERSE_BATTLE&&s.value>0)),MONO_GRASS:new uA("MONO_GRASS","","MONO_GRASS.description","miracle_seed",100,(E,A)=>E instanceof SE&&E.value===12&&!A.gameMode.challenges.some(s=>s.id===ht.INVERSE_BATTLE&&s.value>0)),MONO_ELECTRIC:new uA("MONO_ELECTRIC","","MONO_ELECTRIC.description","magnet",100,(E,A)=>E instanceof SE&&E.value===13&&!A.gameMode.challenges.some(s=>s.id===ht.INVERSE_BATTLE&&s.value>0)),MONO_PSYCHIC:new uA("MONO_PSYCHIC","","MONO_PSYCHIC.description","twisted_spoon",100,(E,A)=>E instanceof SE&&E.value===14&&!A.gameMode.challenges.some(s=>s.id===ht.INVERSE_BATTLE&&s.value>0)),MONO_ICE:new uA("MONO_ICE","","MONO_ICE.description","never_melt_ice",100,(E,A)=>E instanceof SE&&E.value===15&&!A.gameMode.challenges.some(s=>s.id===ht.INVERSE_BATTLE&&s.value>0)),MONO_DRAGON:new uA("MONO_DRAGON","","MONO_DRAGON.description","dragon_fang",100,(E,A)=>E instanceof SE&&E.value===16&&!A.gameMode.challenges.some(s=>s.id===ht.INVERSE_BATTLE&&s.value>0)),MONO_DARK:new uA("MONO_DARK","","MONO_DARK.description","black_glasses",100,(E,A)=>E instanceof SE&&E.value===17&&!A.gameMode.challenges.some(s=>s.id===ht.INVERSE_BATTLE&&s.value>0)),MONO_FAIRY:new uA("MONO_FAIRY","","MONO_FAIRY.description","fairy_feather",100,(E,A)=>E instanceof SE&&E.value===18&&!A.gameMode.challenges.some(s=>s.id===ht.INVERSE_BATTLE&&s.value>0)),FRESH_START:new uA("FRESH_START","","FRESH_START.description","reviver_seed",100,(E,A)=>E instanceof $T&&E.value>0&&!A.gameMode.challenges.some(s=>s.id===ht.INVERSE_BATTLE&&s.value>0)),INVERSE_BATTLE:new uA("INVERSE_BATTLE","","INVERSE_BATTLE.description","inverse",100,E=>E instanceof qT&&E.value>0),BREEDERS_IN_SPACE:new oA("BREEDERS_IN_SPACE","","BREEDERS_IN_SPACE.description","moon_stone",100).setSecret()};function GX(){const E=Object.keys(At);E.forEach((A,s)=>{At[A].id=A,At[A].hasParent&&(At[A].parentId=E[s-1])})}T(GX,"initAchievements");const Tm=class Tm extends Ts{constructor(A,s,R,I,i,a=!1,L=!1,S=!1,o=!1){super(A,s,void 0,RA.HEALTH_UP),this.hpHealed=R,this.message=I,this.showFullHpMessage=i,this.skipAnim=a,this.revive=L,this.healStatus=S,this.preventFullHeal=o}start(){!this.skipAnim&&(this.revive||this.getPokemon().hp)&&!this.getPokemon().isFullHp()?super.start():this.end()}end(){const A=this.getPokemon();if(!A.isOnField()||!this.revive&&!A.isActive())return super.end();const s=!!this.message,R=!A.isFullHp()||this.hpHealed<0,I=A.getTag(Y.HEAL_BLOCK);let i=J.NONE;if(I&&this.hpHealed>0)return this.scene.queueMessage(I.onActivation(A)),this.message=null,super.end();if(R){const a=new Jt(1);this.revive||this.scene.applyModifiers(qi,this.player,a);const L=new $e(Math.floor(this.hpHealed*a.value));L.value<0&&(A.damageAndUpdate(L.value*-1,Pt.HEAL),L.value=0),this.preventFullHeal&&A.hp+L.value>=A.getMaxHp()&&(L.value=A.getMaxHp()-A.hp-1),L.value=A.heal(L.value),L.value&&this.scene.damageNumberHandler.add(A,L.value,Pt.HEAL),A.isPlayer()&&(this.scene.validateAchvs(Si,L),L.value>this.scene.gameData.gameStats.highestHeal&&(this.scene.gameData.gameStats.highestHeal=L.value)),this.healStatus&&!this.revive&&A.status&&(i=A.status.effect,A.resetStatus()),A.updateInfo().then(()=>super.end())}else this.healStatus&&!this.revive&&A.status?(i=A.status.effect,A.resetStatus(),A.updateInfo().then(()=>super.end())):this.showFullHpMessage&&(this.message=U.t("battle:hpIsFull",{pokemonName:b(A)}));this.message&&this.scene.queueMessage(this.message),this.healStatus&&i&&!s&&this.scene.queueMessage(XI(i,b(A))),!R&&!i&&super.end()}};T(Tm,"PokemonHealPhase");let CE=Tm;function pG(E){return U.t(`berry:${nt[E]}.name`)}T(pG,"getBerryName");function PX(E){return U.t(`berry:${nt[E]}.effect`)}T(PX,"getBerryEffectDescription");function _X(E){switch(E){case nt.SITRUS:return A=>A.getHpRatio()<.5;case nt.LUM:return A=>!!A.status||!!A.getTag(Y.CONFUSED);case nt.ENIGMA:return A=>!!A.turnData.attacksReceived.filter(s=>s.result===Pt.SUPER_EFFECTIVE).length;case nt.LIECHI:case nt.GANLON:case nt.PETAYA:case nt.APICOT:case nt.SALAC:return A=>{const s=new $e(.25),R=E-nt.ENIGMA;return Et(Di,A,null,!1,s),A.getHpRatio()<s.value&&A.getStatStage(R)<6};case nt.LANSAT:return A=>{const s=new $e(.25);return Et(Di,A,null,!1,s),A.getHpRatio()<.25&&!A.getTag(Y.CRIT_BOOST)};case nt.STARF:return A=>{const s=new $e(.25);return Et(Di,A,null,!1,s),A.getHpRatio()<.25};case nt.LEPPA:return A=>{const s=new $e(.25);return Et(Di,A,null,!1,s),!!A.getMoveset().find(R=>!(R!=null&&R.getPpRatio()))}}}T(_X,"getBerryPredicate");function j6(E){switch(E){case nt.SITRUS:case nt.ENIGMA:return A=>{A.battleData&&A.battleData.berriesEaten.push(E);const s=new $e(gt(A.getMaxHp()/4));Et(ja,A,null,!1,s),A.scene.unshiftPhase(new CE(A.scene,A.getBattlerIndex(),s.value,U.t("battle:hpHealBerry",{pokemonNameWithAffix:b(A),berryName:pG(E)}),!0))};case nt.LUM:return A=>{A.battleData&&A.battleData.berriesEaten.push(E),A.status&&A.scene.queueMessage(XI(A.status.effect,b(A))),A.resetStatus(!0,!0),A.updateInfo()};case nt.LIECHI:case nt.GANLON:case nt.PETAYA:case nt.APICOT:case nt.SALAC:return A=>{A.battleData&&A.battleData.berriesEaten.push(E);const s=E-nt.ENIGMA,R=new $e(1);Et(ja,A,null,!1,R),A.scene.unshiftPhase(new Ft(A.scene,A.getBattlerIndex(),!0,[s],R.value))};case nt.LANSAT:return A=>{A.battleData&&A.battleData.berriesEaten.push(E),A.addTag(Y.CRIT_BOOST)};case nt.STARF:return A=>{A.battleData&&A.battleData.berriesEaten.push(E);const s=le(B.SPD,B.ATK),R=new $e(2);Et(ja,A,null,!1,R),A.scene.unshiftPhase(new Ft(A.scene,A.getBattlerIndex(),!0,[s],R.value))};case nt.LEPPA:return A=>{A.battleData&&A.battleData.berriesEaten.push(E);const s=A.getMoveset().find(R=>!(R!=null&&R.getPpRatio()))?A.getMoveset().find(R=>!(R!=null&&R.getPpRatio())):A.getMoveset().find(R=>R.getPpRatio()<1);s!==void 0&&(s.ppUsed=Math.max(s.ppUsed-10,0),A.scene.queueMessage(U.t("battle:ppHealBerry",{pokemonNameWithAffix:b(A),moveName:s.getName(),berryName:pG(E)})))}}}T(j6,"getBerryEffectFunc");const yo=24,jT=T((E,A)=>{const s=E.type.name.localeCompare(A.type.name),R=E.constructor.name.localeCompare(A.constructor.name),I=E instanceof at&&E.pokemonId?E.pokemonId:4294967295,i=A instanceof at&&A.pokemonId?A.pokemonId:4294967295;return I<i?1:I>i?-1:I===i?R===0?s:R:0},"modifierSortFunc"),Sm=class Sm extends Phaser.GameObjects.Container{constructor(A,s){super(A,1+(s?302:0),2),this.player=!s,this.setScale(.5)}updateModifiers(A,s=!1){this.removeAll(!0);const R=A.filter(S=>S.isIconVisible(this.scene)),I=R.filter(S=>!S.pokemonId).sort(jT),i=R.filter(S=>S.pokemonId).sort(jT),a=s?I:I.concat(i),L=this;a.forEach((S,o)=>{const l=S.getIcon(this.scene);o>=yo&&l.setVisible(!1),this.add(l),this.setModifierIconPosition(l,a.length),l.setInteractive(new Phaser.Geom.Rectangle(0,0,32,24),Phaser.Geom.Rectangle.Contains),l.on("pointerover",()=>{this.scene.ui.showTooltip(S.type.name,S.type.getDescription(this.scene)),this.modifierCache&&this.modifierCache.length>yo&&L.updateModifierOverflowVisibility(!0)}),l.on("pointerout",()=>{this.scene.ui.hideTooltip(),this.modifierCache&&this.modifierCache.length>yo&&L.updateModifierOverflowVisibility(!1)})});for(const S of this.getAll())this.sendToBack(S);this.modifierCache=A}updateModifierOverflowVisibility(A){const s=this.getAll().reverse();for(const R of s.map(I=>I).slice(yo))R.setVisible(A)}setModifierIconPosition(A,s){const R=12+6*Math.max(Math.ceil(Math.min(s,24)/12)-2,0),I=this.getIndex(A)%R*26/(R/12),i=Math.floor(this.getIndex(A)/R)*20;A.setPosition(this.player?I:-I,i)}};T(Sm,"ModifierBar");let zT=Sm;const om=class om{constructor(A){this.type=A}match(A){return!1}shouldApply(...A){return!0}};T(om,"Modifier");let eS=om;const lm=class lm extends eS{constructor(A,s){super(A),this.stackCount=s===void 0?1:s,this.virtualStackCount=0}add(A,s,R){for(const I of A)if(this.match(I))return I.incrementStack(R,this.stackCount,s);return s&&(this.virtualStackCount+=this.stackCount,this.stackCount=0),A.push(this),!0}getArgs(){return[]}incrementStack(A,s,R){return this.getStackCount()+s<=this.getMaxStackCount(A)?(R?this.virtualStackCount+=s:this.stackCount+=s,!0):!1}getStackCount(){return this.stackCount+this.virtualStackCount}isIconVisible(A){return!0}getIcon(A,s){const R=A.add.container(0,0),I=A.add.sprite(0,12,"items");I.setFrame(this.type.iconImage),I.setOrigin(0,.5),R.add(I);const i=this.getIconStackText(A);i&&R.add(i);const a=this.getIconStackText(A,!0);return a&&R.add(a),R}getIconStackText(A,s){if(this.getMaxStackCount(A)===1||s&&!this.virtualStackCount)return null;const R=A.add.bitmapText(10,15,"item-count",this.stackCount.toString(),11);return R.letterSpacing=-.5,this.getStackCount()>=this.getMaxStackCount(A)&&R.setTint(16291984),R.setOrigin(0,0),R}};T(lm,"PersistentModifier");let FA=lm;const Cm=class Cm extends eS{constructor(A){super(A)}add(A){return!0}};T(Cm,"ConsumableModifier");let mI=Cm;const Um=class Um extends mI{constructor(A,s,R){super(A),this.pokeballType=s,this.count=R}apply(A){const s=A.pokeballCounts;return s[this.pokeballType]=Math.min(s[this.pokeballType]+this.count,Xx),!0}};T(Um,"AddPokeballModifier");let _C=Um;const Dm=class Dm extends mI{constructor(A,s,R){super(A),this.voucherType=s,this.count=R}apply(A){const s=A.gameData.voucherCounts;return s[this.voucherType]+=this.count,!0}};T(Dm,"AddVoucherModifier");let HC=Dm;const Mm=class Mm extends FA{constructor(A,s,R,I){super(A,I),this.maxBattles=s,this.battleCount=R??this.maxBattles}add(A,s,R){for(const I of A)if(this.match(I)){const i=I;return i.getBattleCount()<i.getMaxBattles()?(i.resetBattleCount(),R.playSound("se/restore"),!0):!1}return A.push(this),!0}lapse(...A){return this.battleCount--,this.battleCount>0}getIcon(A){const s=super.getIcon(A),R=Math.floor(120*(this.battleCount/this.maxBattles)+5),I=BV(R,.5,.9),i=BV(R,.7,.3),a=se(A,27,0,this.battleCount.toString(),V.PARTY,{fontSize:"66px",color:I});return a.setShadow(0,0),a.setStroke(i,16),a.setOrigin(1,0),s.add(a),s}getIconStackText(A,s){return null}getBattleCount(){return this.battleCount}resetBattleCount(){this.battleCount=this.maxBattles}setNewBattleCount(A){this.maxBattles=A,this.battleCount=A}getMaxBattles(){return this.maxBattles}getArgs(){return[this.maxBattles,this.battleCount]}getMaxStackCount(A,s){return 2}};T(Mm,"LapsingPersistentModifier");let WI=Mm;const iN=class iN extends WI{constructor(A,s,R,I){super(A,s,R,I)}match(A){return A instanceof iN&&A.getMaxBattles()===this.getMaxBattles()}clone(){return new iN(this.type,this.getMaxBattles(),this.getBattleCount(),this.stackCount)}apply(A){return A.value=A.value/4,!0}};T(iN,"DoubleBattleChanceBoosterModifier");let cL=iN;const aN=class aN extends WI{constructor(A,s,R,I,i){super(A,R,I,i),this.stat=s,this.boost=s!==B.ACC?.3:1}match(A){return A instanceof aN?A.stat===this.stat:!1}clone(){return new aN(this.type,this.stat,this.getMaxBattles(),this.getBattleCount(),this.stackCount)}getArgs(){return[this.stat,...super.getArgs()]}shouldApply(A,s){return!!A&&!!s&&zx.includes(A)&&A===this.stat}apply(A,s){return s.value+=this.boost,!0}};T(aN,"TempStatStageBoosterModifier");let GL=aN;const LN=class LN extends WI{constructor(A,s,R,I){super(A,s,R,I)}clone(){return new LN(this.type,this.getMaxBattles(),this.getBattleCount(),this.stackCount)}match(A){return A instanceof LN}shouldApply(A){return!!A}apply(A){return A.value++,!0}};T(LN,"TempCritBoosterModifier");let tS=LN;const CM=class CM extends FA{constructor(A,s){super(A,s)}clone(){return new CM(this.type,this.stackCount)}apply(...A){return!0}getMaxStackCount(A){return 1}};T(CM,"MapModifier");let AS=CM;const UM=class UM extends FA{constructor(A,s){super(A,s)}clone(){return new UM(this.type,this.stackCount)}apply(...A){return!0}getMaxStackCount(A){return 1}};T(UM,"MegaEvolutionAccessModifier");let PL=UM;const DM=class DM extends FA{constructor(A,s){super(A,s)}clone(){return new DM(this.type,this.stackCount)}apply(...A){return!0}getMaxStackCount(A){return 1}};T(DM,"GigantamaxAccessModifier");let _L=DM;const MM=class MM extends FA{constructor(A,s){super(A,s)}clone(){return new MM(this.type,this.stackCount)}apply(...A){return!0}getMaxStackCount(A){return 1}};T(MM,"TerastallizeAccessModifier");let ES=MM;const um=class um extends FA{constructor(A,s,R){super(A,R),this.isTransferable=!0,this.pokemonId=s}match(A){return this.matchType(A)&&A.pokemonId===this.pokemonId}getArgs(){return[this.pokemonId]}shouldApply(A,...s){return!!A&&(this.pokemonId===-1||A.id===this.pokemonId)}isIconVisible(A){var s;return!!((s=this.getPokemon(A))!=null&&s.isOnField())}getIcon(A,s){const R=s?super.getIcon(A):A.add.container(0,0);if(s)R.setScale(.5);else{const I=this.getPokemon(A);if(I){const S=A.addPokemonIcon(I,-2,10,0,.5);R.add(S),R.setName(I.id.toString())}const i=A.add.sprite(16,this.virtualStackCount?8:16,"items");i.setScale(.5),i.setOrigin(0,.5),i.setTexture("items",this.type.iconImage),R.add(i);const a=this.getIconStackText(A);a&&R.add(a);const L=this.getIconStackText(A,!0);L&&R.add(L)}return R}getPokemon(A){return this.pokemonId?A.getPokemonById(this.pokemonId)??void 0:void 0}getScoreMultiplier(){return 1}getSecondaryChanceMultiplier(A){return A.getLastXMoves(0)[0]?He[A.getLastXMoves(0)[0].move].chance>=0&&A.hasAbility(O.SHEER_FORCE)?0:A.hasAbility(O.SERENE_GRACE)?2:1:1}getMaxStackCount(A,s){const R=this.getPokemon(A);return R?R.isPlayer()&&s?A.getParty().map(I=>this.getMaxHeldItemCount(I)).reduce((I,i)=>Math.max(I,i),0):this.getMaxHeldItemCount(R):0}};T(um,"PokemonHeldItemModifier");let at=um;const hm=class hm extends at{constructor(A,s,R,I){super(A,s,I),this.isTransferable=!1,this.battlesLeft=R}lapse(...A){return!!--this.battlesLeft}getIcon(A,s){var I;const R=super.getIcon(A,s);if((I=this.getPokemon(A))!=null&&I.isPlayer()){const i=se(A,27,0,this.battlesLeft.toString(),V.PARTY,{fontSize:"66px",color:Vl.PINK});i.setShadow(0,0),i.setStroke(vl.RED,16),i.setOrigin(1,0),R.add(i)}return R}getBattlesLeft(){return this.battlesLeft}getMaxStackCount(A,s){return 1}};T(hm,"LapsingPokemonHeldItemModifier");let HL=hm;const rN=class rN extends HL{constructor(A,s,R,I,i){super(A,s,I||10,i),this.isTransferable=!1,this.teraType=R}matchType(A){return A instanceof rN&&A.teraType===this.teraType}clone(){return new rN(this.type,this.pokemonId,this.teraType,this.battlesLeft,this.stackCount)}getArgs(){return[this.pokemonId,this.teraType,this.battlesLeft]}apply(A){return A.isPlayer()&&(A.scene.triggerPokemonFormChange(A,SI),A.scene.validateAchv(At.TERASTALLIZE),this.teraType===n.STELLAR&&A.scene.validateAchv(At.STELLAR_TERASTALLIZE)),A.updateSpritePipelineData(),!0}lapse(A){const s=super.lapse(A);return s||(A.scene.triggerPokemonFormChange(A,oI),A.updateSpritePipelineData()),s}getScoreMultiplier(){return 1.25}getMaxHeldItemCount(A){return 1}};T(rN,"TerastallizeModifier");let zs=rN;const NN=class NN extends at{constructor(A,s,R,I){super(A,s,I),this.isTransferable=!1,this.stat=R}matchType(A){return A instanceof NN?A.stat===this.stat:!1}clone(){return new NN(this.type,this.pokemonId,this.stat,this.stackCount)}getArgs(){return super.getArgs().concat(this.stat)}shouldApply(A,s){return super.shouldApply(A,s)&&Array.isArray(s)}apply(A,s){return s[this.stat]=Math.floor(s[this.stat]*(1+this.getStackCount()*.1)),!0}getScoreMultiplier(){return 1.1}getMaxHeldItemCount(A){return A.ivs[this.stat]}};T(NN,"BaseStatModifier");let sS=NN;const TN=class TN extends at{constructor(A,s,R,I,i){super(A,s,i),this.isTransferable=!1,this.species=R,this.required=I}matchType(A){return A instanceof TN&&A.species===this.species&&A.required===this.required}clone(){return new TN(this.type,this.pokemonId,this.species,this.required,this.stackCount)}getArgs(){return super.getArgs().concat([this.species,this.required])}apply(){return!0}getIconStackText(A,s){if(this.getMaxStackCount(A)===1||s&&!this.virtualStackCount)return null;const R=A.getPokemonById(this.pokemonId);this.stackCount=R?R.evoCounter+R.getHeldItems().filter(i=>i instanceof Yn).length+R.scene.findModifiers(i=>i instanceof cR||i instanceof yn||i instanceof wn).length:this.stackCount;const I=A.add.bitmapText(10,15,"item-count",this.stackCount.toString(),11);return I.letterSpacing=-.5,this.getStackCount()>=this.required&&I.setTint(16291984),I.setOrigin(0,0),I}getMaxHeldItemCount(A){return this.stackCount=A.evoCounter+A.getHeldItems().filter(s=>s instanceof Yn).length+A.scene.findModifiers(s=>s instanceof cR||s instanceof yn||s instanceof wn).length,999}};T(TN,"EvoTrackerModifier");let RS=TN;const SN=class SN extends at{constructor(A,s,R,I){super(A,s,I),this.isTransferable=!1,this.statModifier=R}matchType(A){return A instanceof SN&&this.statModifier===A.statModifier}clone(){return new SN(this.type,this.pokemonId,this.statModifier,this.stackCount)}getArgs(){return super.getArgs().concat(this.statModifier)}shouldApply(A,s){return super.shouldApply(A,s)&&Array.isArray(s)}apply(A,s){return s.forEach((R,I)=>{const i=Math.floor(I===0?R+this.statModifier/2:R+this.statModifier);s[I]=Math.min(Math.max(i,1),999999)}),!0}getScoreMultiplier(){return 1.2}getMaxHeldItemCount(A){return 2}};T(SN,"PokemonBaseStatTotalModifier");let OS=SN;const oN=class oN extends at{constructor(A,s,R,I,i){super(A,s,i),this.isTransferable=!1,this.statModifier=R,this.stats=I}matchType(A){return A instanceof oN&&A.statModifier===this.statModifier&&this.stats.every(s=>A.stats.some(R=>s===R))}clone(){return new oN(this.type,this.pokemonId,this.statModifier,this.stats,this.stackCount)}getArgs(){return[...super.getArgs(),this.statModifier,this.stats]}shouldApply(A,s){return super.shouldApply(A,s)&&Array.isArray(s)}apply(A,s){return s.forEach((R,I)=>{if(this.stats.includes(I)){const i=Math.floor(R+this.statModifier);s[I]=Math.min(Math.max(i,1),999999)}}),!0}getScoreMultiplier(){return 1.1}getMaxHeldItemCount(A){return 1}};T(oN,"PokemonBaseStatFlatModifier");let nS=oN;const lN=class lN extends at{constructor(A,s,R){super(A,s,R),this.isTransferable=!1}matchType(A){return A instanceof lN}clone(){return new lN(this.type,this.pokemonId,this.stackCount)}getArgs(){return super.getArgs()}shouldApply(A,s,R){return super.shouldApply(A,s,R)&&!!R}apply(A,s,R){return s===B.HP?(R.value+=this.stackCount,this.stackCount===this.getMaxHeldItemCount()&&(R.value=Math.floor(R.value*1.05))):(R.value+=2*this.stackCount,this.stackCount===this.getMaxHeldItemCount()&&(R.value=Math.floor(R.value*1.1))),!0}getScoreMultiplier(){return 1.2}getMaxHeldItemCount(A){return 50}};T(lN,"PokemonIncrementingStatModifier");let ki=lN;const CN=class CN extends at{constructor(A,s,R,I,i){super(A,s,i),this.stats=R,this.multiplier=I}clone(){return new CN(this.type,this.pokemonId,this.stats,this.multiplier,this.stackCount)}getArgs(){return[...super.getArgs(),this.stats,this.multiplier]}matchType(A){if(A instanceof CN){const s=A;if(s.multiplier===this.multiplier&&s.stats.length===this.stats.length)return s.stats.every((R,I)=>R===this.stats[I])}return!1}shouldApply(A,s,R){return super.shouldApply(A,s,R)&&this.stats.includes(s)}apply(A,s,R){return R.value*=this.multiplier,!0}getMaxHeldItemCount(A){return 1}};T(CN,"StatBoosterModifier");let dL=CN;const uM=class uM extends dL{clone(){return super.clone()}matchType(A){return A instanceof uM}shouldApply(A,s,R){return super.shouldApply(A,s,R)&&!A.isMax()}apply(A,s,R){const I=A.getSpeciesForm(!0).speciesId in Ht;return A.isFusion()&&A.getFusionSpeciesForm(!0).speciesId in Ht!==I?(R.value*=1+(this.multiplier-1)/2,!0):I?super.apply(A,s,R):!1}};T(uM,"EvolutionStatBoosterModifier");let IS=uM;const UN=class UN extends dL{constructor(A,s,R,I,i,a){super(A,s,R,I,a),this.species=i}clone(){return new UN(this.type,this.pokemonId,this.stats,this.multiplier,this.species,this.stackCount)}getArgs(){return[...super.getArgs(),this.species]}matchType(A){if(A instanceof UN){const s=A;if(s.species.length===this.species.length)return super.matchType(A)&&s.species.every((R,I)=>R===this.species[I])}return!1}shouldApply(A,s,R){return super.shouldApply(A,s,R)&&(this.species.includes(A.getSpeciesForm(!0).speciesId)||A.isFusion()&&this.species.includes(A.getFusionSpeciesForm(!0).speciesId))}contains(A,s){return this.species.includes(A)&&this.stats.includes(s)}};T(UN,"SpeciesStatBoosterModifier");let Zi=UN;const DN=class DN extends at{constructor(A,s,R,I){super(A,s,I),this.stageIncrement=R}clone(){return new DN(this.type,this.pokemonId,this.stageIncrement,this.stackCount)}getArgs(){return super.getArgs().concat(this.stageIncrement)}matchType(A){return A instanceof DN?A.stageIncrement===this.stageIncrement:!1}apply(A,s){return s.value+=this.stageIncrement,!0}getMaxHeldItemCount(A){return 1}};T(DN,"CritBoosterModifier");let fL=DN;const MN=class MN extends fL{constructor(A,s,R,I,i){super(A,s,R,i),this.species=I}clone(){return new MN(this.type,this.pokemonId,this.stageIncrement,this.species,this.stackCount)}getArgs(){return[...super.getArgs(),this.species]}matchType(A){return A instanceof MN}shouldApply(A,s){return super.shouldApply(A,s)&&(this.species.includes(A.getSpeciesForm(!0).speciesId)||A.isFusion()&&this.species.includes(A.getFusionSpeciesForm(!0).speciesId))}};T(MN,"SpeciesCritBoosterModifier");let iS=MN;const uN=class uN extends at{constructor(A,s,R,I,i){super(A,s,i),this.moveType=R,this.boostMultiplier=I*.01}matchType(A){if(A instanceof uN){const s=A;return s.moveType===this.moveType&&s.boostMultiplier===this.boostMultiplier}return!1}clone(){return new uN(this.type,this.pokemonId,this.moveType,this.boostMultiplier*100,this.stackCount)}getArgs(){return super.getArgs().concat([this.moveType,this.boostMultiplier*100])}shouldApply(A,s,R){return super.shouldApply(A,s,R)&&typeof s=="number"&&R instanceof $e}apply(A,s,R){return s===this.moveType&&R.value>=1?(R.value=Math.floor(R.value*(1+this.getStackCount()*this.boostMultiplier)),!0):!1}getScoreMultiplier(){return 1.2}getMaxHeldItemCount(A){return 99}};T(uN,"AttackTypeBoosterModifier");let an=uN;const hN=class hN extends at{constructor(A,s,R){super(A,s,R)}matchType(A){return A instanceof hN}clone(){return new hN(this.type,this.pokemonId,this.stackCount)}shouldApply(A,s){return super.shouldApply(A,s)&&!!s}apply(A,s){return!s.value&&A.randSeedInt(10)<this.getStackCount()?(s.value=!0,A.scene.queueMessage(U.t("modifier:surviveDamageApply",{pokemonNameWithAffix:b(A),typeName:this.type.name})),!0):!1}getMaxHeldItemCount(A){return 5}};T(hN,"SurviveDamageModifier");let aS=hN;const cN=class cN extends at{constructor(A,s,R){super(A,s,R)}matchType(A){return A instanceof cN}clone(){return new cN(this.type,this.pokemonId,this.stackCount)}shouldApply(A,s){return super.shouldApply(A,s)&&!!s}apply(A,s){var R;if(!s.value&&A.randSeedInt(10)<this.getStackCount()){s.value=!0;const I=((R=A.scene.currentBattle.turnCommands[A.getBattlerIndex()])==null?void 0:R.command)===vt.FIGHT,i=this.type instanceof IA&&this.type.id==="QUICK_CLAW";return I&&i&&A.scene.queueMessage(U.t("modifier:bypassSpeedChanceApply",{pokemonName:b(A),itemName:U.t("modifierType:ModifierType.QUICK_CLAW.name")})),!0}return!1}getMaxHeldItemCount(A){return 3}};T(cN,"BypassSpeedChanceModifier");let Xi=cN;const GN=class GN extends at{constructor(A,s,R){super(A,s,R)}matchType(A){return A instanceof GN}clone(){return new GN(this.type,this.pokemonId,this.stackCount)}shouldApply(A,s){return super.shouldApply(A,s)&&!!s}apply(A,s){return!s.value&&A.randSeedInt(10)<this.getStackCount()*this.getSecondaryChanceMultiplier(A)?(s.value=!0,!0):!1}getMaxHeldItemCount(A){return 3}};T(GN,"FlinchChanceModifier");let LS=GN;const PN=class PN extends at{constructor(A,s,R){super(A,s,R)}matchType(A){return A instanceof PN}clone(){return new PN(this.type,this.pokemonId,this.stackCount)}apply(A){if(!A.isFullHp()){const s=A.scene;return s.unshiftPhase(new CE(s,A.getBattlerIndex(),gt(A.getMaxHp()/16)*this.stackCount,U.t("modifier:turnHealApply",{pokemonNameWithAffix:b(A),typeName:this.type.name}),!0)),!0}return!1}getMaxHeldItemCount(A){return 4}};T(PN,"TurnHealModifier");let Qi=PN;const _N=class _N extends at{constructor(A,s,R){switch(super(A,s,R),A.id){case"TOXIC_ORB":this.effect=J.TOXIC;break;case"FLAME_ORB":this.effect=J.BURN;break}}matchType(A){return A instanceof _N}clone(){return new _N(this.type,this.pokemonId,this.stackCount)}apply(A){return A.trySetStatus(this.effect,!0,void 0,void 0,this.type.name)}getMaxHeldItemCount(A){return 1}getStatusEffect(){return this.effect}};T(_N,"TurnStatusEffectModifier");let nn=_N;const HN=class HN extends at{constructor(A,s,R){super(A,s,R)}matchType(A){return A instanceof HN}clone(){return new HN(this.type,this.pokemonId,this.stackCount)}apply(A){if(A.turnData.damageDealt&&!A.isFullHp()){const s=A.scene;s.unshiftPhase(new CE(s,A.getBattlerIndex(),gt(A.turnData.damageDealt/8)*this.stackCount,U.t("modifier:hitHealApply",{pokemonNameWithAffix:b(A),typeName:this.type.name}),!0))}return!0}getMaxHeldItemCount(A){return 4}};T(HN,"HitHealModifier");let Ji=HN;const dN=class dN extends FA{constructor(A,s){super(A,s)}match(A){return A instanceof dN}clone(){return new dN(this.type,this.stackCount)}shouldApply(A){return!!A}apply(A){return A.value+=this.getStackCount(),!0}getMaxStackCount(A,s){return 99}};T(dN,"LevelIncrementBoosterModifier");let YI=dN;const fN=class fN extends at{constructor(A,s,R,I){super(A,s,I),this.berryType=R,this.consumed=!1}matchType(A){return A instanceof fN&&A.berryType===this.berryType}clone(){return new fN(this.type,this.pokemonId,this.berryType,this.stackCount)}getArgs(){return super.getArgs().concat(this.berryType)}shouldApply(A){return!this.consumed&&super.shouldApply(A)&&_X(this.berryType)(A)}apply(A){const s=new je(!1);return A.scene.applyModifiers($i,A.isPlayer(),A,s),j6(this.berryType)(A),s.value||(this.consumed=!0),!0}getMaxHeldItemCount(A){return[nt.LUM,nt.LEPPA,nt.SITRUS,nt.ENIGMA].includes(this.berryType)?2:3}};T(fN,"BerryModifier");let _E=fN;const BN=class BN extends FA{constructor(A,s){super(A,s)}match(A){return A instanceof BN}clone(){return new BN(this.type,this.stackCount)}shouldApply(A,s){return!!A&&!!s}apply(A,s){return s.value||(s.value=A.randSeedInt(10)<this.getStackCount()*3),!0}getMaxStackCount(A){return 3}};T(BN,"PreserveBerryModifier");let $i=BN;const gN=class gN extends at{constructor(A,s,R){super(A,s,R)}matchType(A){return A instanceof gN}clone(){return new gN(this.type,this.pokemonId,this.stackCount)}apply(A){return A.scene.unshiftPhase(new CE(A.scene,A.getBattlerIndex(),gt(A.getMaxHp()/2),U.t("modifier:pokemonInstantReviveApply",{pokemonNameWithAffix:b(A),typeName:this.type.name}),!1,!1,!0)),A.resetStatus(!0,!1,!0),!0}getMaxHeldItemCount(A){return 1}};T(gN,"PokemonInstantReviveModifier");let BL=gN;const KN=class KN extends at{constructor(A,s,R){super(A,s,R)}matchType(A){return A instanceof KN}clone(){return new KN(this.type,this.pokemonId,this.stackCount)}apply(A){let s=!1;for(const R of rO)A.getStatStage(R)<0&&(A.setStatStage(R,0),s=!0);return s&&A.scene.queueMessage(U.t("modifier:resetNegativeStatStageApply",{pokemonNameWithAffix:b(A),typeName:this.type.name})),s}getMaxHeldItemCount(A){return 2}};T(KN,"ResetNegativeStatStageModifier");let gL=KN;const cm=class cm extends mI{constructor(A,s){super(A),this.pokemonId=s}shouldApply(A,...s){return!!A&&(this.pokemonId===-1||A.id===this.pokemonId)}getPokemon(A){return A.getParty().find(s=>s.id===this.pokemonId)}};T(cm,"ConsumablePokemonModifier");let hR=cm;const Gm=class Gm extends hR{constructor(A,s,R,I,i,a){super(A,s),this.restorePoints=R,this.restorePercent=I,this.healStatus=i,this.fainted=!!a}shouldApply(A,s){return super.shouldApply(A)&&(this.fainted||!xe(s)&&typeof s=="number")}apply(A,s){if(!A.hp===this.fainted){let R=this.restorePoints;return this.fainted||(R=Math.floor(R*s)),(this.fainted||this.healStatus)&&A.resetStatus(!0,!0),A.hp=Math.min(A.hp+Math.max(Math.ceil(Math.max(Math.floor(this.restorePercent*.01*A.getMaxHp()),R)),1),A.getMaxHp()),!0}return!1}};T(Gm,"PokemonHpRestoreModifier");let pI=Gm;const Pm=class Pm extends hR{constructor(A,s){super(A,s)}apply(A){return A.resetStatus(!0,!0),!0}};T(Pm,"PokemonStatusHealModifier");let dC=Pm;const _m=class _m extends hR{constructor(A,s,R){super(A,s),this.moveIndex=R}};T(_m,"ConsumablePokemonMoveModifier");let rS=_m;const Hm=class Hm extends rS{constructor(A,s,R,I){super(A,s,R),this.restorePoints=I}apply(A){const s=A.getMoveset()[this.moveIndex];return s&&(s.ppUsed=this.restorePoints>-1?Math.max(s.ppUsed-this.restorePoints,0):0),!0}};T(Hm,"PokemonPpRestoreModifier");let fC=Hm;const dm=class dm extends hR{constructor(A,s,R){super(A,s),this.restorePoints=R}apply(A){for(const s of A.getMoveset())s&&(s.ppUsed=this.restorePoints>-1?Math.max(s.ppUsed-this.restorePoints,0):0);return!0}};T(dm,"PokemonAllMovePpRestoreModifier");let BC=dm;const fm=class fm extends rS{constructor(A,s,R,I){super(A,s,R),this.upPoints=I}apply(A){const s=A.getMoveset()[this.moveIndex];return s&&!s.maxPpOverride&&(s.ppUp=Math.min(s.ppUp+this.upPoints,3)),!0}};T(fm,"PokemonPpUpModifier");let gC=fm;const Bm=class Bm extends hR{constructor(A,s,R){super(A,s),this.nature=R}apply(A){A.customPokemonData.nature=this.nature;let s=A.species.speciesId;for(A.scene.gameData.dexData[s].natureAttr|=1<<this.nature+1;KA.hasOwnProperty(s);)s=KA[s],A.scene.gameData.dexData[s].natureAttr|=1<<this.nature+1;return!0}};T(Bm,"PokemonNatureChangeModifier");let KC=Bm;const gm=class gm extends hR{constructor(A,s){super(A,s)}apply(A,s=new $e(1)){return A.scene.applyModifiers(YI,!0,s),A.level+=s.value,A.level<=A.scene.getMaxExpLevel(!0)&&(A.exp=WR(A.level,A.species.growthRate),A.levelExp=0),A.addFriendship(u8),A.scene.unshiftPhase(new QT(A.scene,A.scene.getParty().indexOf(A),A.level-s.value,A.level)),!0}};T(gm,"PokemonLevelIncrementModifier");let NS=gm;const Km=class Km extends hR{constructor(A,s){super(A,s)}apply(A){return A.scene.unshiftPhase(new Wn(A.scene,A.scene.getParty().indexOf(A),this.type.moveId,d1.TM)),!0}};T(Km,"TmModifier");let FC=Km;const Fm=class Fm extends hR{constructor(A,s,R){super(A,s),this.levelMoveIndex=R}apply(A,s){return A.scene.unshiftPhase(new Wn(A.scene,A.scene.getParty().indexOf(A),A.getLearnableLevelMoves()[this.levelMoveIndex],d1.MEMORY,s)),!0}};T(Fm,"RememberMoveModifier");let TS=Fm;const mm=class mm extends hR{constructor(A,s){super(A,s)}apply(A){let s=Ht.hasOwnProperty(A.species.speciesId)?Ht[A.species.speciesId].find(R=>R.item===this.type.evolutionItem&&(R.evoFormKey===null||(R.preFormKey||"")===A.getFormKey())&&(!R.condition||R.condition.predicate(A))):null;return!s&&A.isFusion()&&(s=Ht[A.fusionSpecies.speciesId].find(R=>R.item===this.type.evolutionItem&&(R.evoFormKey===null||(R.preFormKey||"")===A.getFusionFormKey())&&(!R.condition||R.condition.predicate(A))),s&&(s=new cI(A.species.speciesId,s))),s?(A.scene.unshiftPhase(new ZT(A.scene,A,s,A.level-1)),!0):!1}};T(mm,"EvolutionItemModifier");let mC=mm;const Wm=class Wm extends hR{constructor(A,s,R){super(A,s),this.fusePokemonId=R}shouldApply(A,s){return super.shouldApply(A,s)&&!!s&&this.fusePokemonId===s.id}async apply(A,s){return await A.fuse(s),!0}};T(Wm,"FusePokemonModifier");let SS=Wm;const FN=class FN extends FA{constructor(A,s){super(A,s)}match(A){return A instanceof FN}apply(){return!0}clone(){return new FN(this.type,this.stackCount)}getMaxStackCount(A){return 5}};T(FN,"MultipleParticipantExpBonusModifier");let oS=FN;const mN=class mN extends FA{constructor(A,s,R){super(A,R),this.multiplier=s}match(A){return A instanceof mN}clone(){return new mN(this.type,this.multiplier,this.stackCount)}getArgs(){return[this.multiplier]}apply(A){return A.value*=1+(this.multiplier-1)*this.getStackCount(),!0}getMaxStackCount(A){return 5}};T(mN,"HealingBoosterModifier");let qi=mN;const WN=class WN extends FA{constructor(A,s,R){super(A,R),this.boostMultiplier=s*.01}match(A){return A instanceof WN?A.boostMultiplier===this.boostMultiplier:!1}clone(){return new WN(this.type,this.boostMultiplier*100,this.stackCount)}getArgs(){return[this.boostMultiplier*100]}apply(A){return A.value=Math.floor(A.value*(1+this.getStackCount()*this.boostMultiplier)),!0}getMaxStackCount(A,s){return this.boostMultiplier<1?this.boostMultiplier<.6?99:30:10}};T(WN,"ExpBoosterModifier");let KL=WN;const YN=class YN extends at{constructor(A,s,R,I){super(A,s,I),this.boostMultiplier=R*.01}matchType(A){return A instanceof YN?A.boostMultiplier===this.boostMultiplier:!1}clone(){return new YN(this.type,this.pokemonId,this.boostMultiplier*100,this.stackCount)}getArgs(){return super.getArgs().concat(this.boostMultiplier*100)}shouldApply(A,s){return super.shouldApply(A,s)&&!!s}apply(A,s){return s.value=Math.floor(s.value*(1+this.getStackCount()*this.boostMultiplier)),!0}getMaxHeldItemCount(A){return 99}};T(YN,"PokemonExpBoosterModifier");let lS=YN;const pN=class pN extends FA{constructor(A,s){super(A,s)}match(A){return A instanceof pN}clone(){return new pN(this.type,this.stackCount)}apply(){return!0}getMaxStackCount(A){return 5}};T(pN,"ExpShareModifier");let CS=pN;const yN=class yN extends FA{constructor(A,s){super(A,s)}match(A){return A instanceof yN}clone(){return new yN(this.type,this.stackCount)}apply(){return!0}getMaxStackCount(A){return 4}};T(yN,"ExpBalanceModifier");let US=yN;const wN=class wN extends at{constructor(A,s,R){super(A,s,R)}matchType(A){return A instanceof wN}clone(){return new wN(this.type,this.pokemonId,this.stackCount)}apply(A,s){return s.value=Math.floor(s.value*(1+.5*this.getStackCount())),!0}getMaxHeldItemCount(A){return 3}};T(wN,"PokemonFriendshipBoosterModifier");let FL=wN;const VN=class VN extends at{constructor(A,s,R){super(A,s,R)}matchType(A){return A instanceof VN}clone(){return new VN(this.type,this.pokemonId,this.stackCount)}apply(A,s){return s.value!==1?(s.value+=.1*this.getStackCount()*(s.value>1?1:-1),!0):!1}getMaxHeldItemCount(A){return 10}};T(VN,"PokemonNatureWeightModifier");let DS=VN;const vN=class vN extends at{constructor(A,s,R,I){super(A,s,I),this.accuracyAmount=R}matchType(A){return A instanceof vN?A.accuracyAmount===this.accuracyAmount:!1}clone(){return new vN(this.type,this.pokemonId,this.accuracyAmount,this.stackCount)}getArgs(){return super.getArgs().concat(this.accuracyAmount)}shouldApply(A,s){return super.shouldApply(A,s)&&!!s}apply(A,s){return s.value=Math.min(s.value+this.accuracyAmount*this.getStackCount(),100),!0}getMaxHeldItemCount(A){return 3}};T(vN,"PokemonMoveAccuracyBoosterModifier");let MS=vN;const xN=class xN extends at{constructor(A,s,R){super(A,s,R)}matchType(A){return A instanceof xN}clone(){return new xN(this.type,this.pokemonId,this.stackCount)}apply(A,s,R){switch(s.value*=this.getStackCount()+1,this.getStackCount()){case 1:R.value*=.4;break;case 2:R.value*=.25;break;case 3:R.value*=.175;break}return!0}getMaxHeldItemCount(A){return 3}};T(xN,"PokemonMultiHitModifier");let ji=xN;const bN=class bN extends at{constructor(A,s,R,I,i){super(A,s,i),this.isTransferable=!1,this.formChangeItem=R,this.active=I}matchType(A){return A instanceof bN&&A.formChangeItem===this.formChangeItem}clone(){return new bN(this.type,this.pokemonId,this.formChangeItem,this.active,this.stackCount)}getArgs(){return super.getArgs().concat(this.formChangeItem,this.active)}apply(A,s){const R=this.active&&!s;R&&(this.active=!1);const I=A.scene.triggerPokemonFormChange(A,Ce);return R&&(this.active=!0),I}getMaxHeldItemCount(A){return 1}};T(bN,"PokemonFormChangeItemModifier");let AR=bN;const Ym=class Ym extends mI{constructor(A,s){super(A),this.moneyMultiplier=s}apply(A){const s=new $e(A.getWaveMoneyAmount(this.moneyMultiplier));return A.applyModifiers(cR,!0,s),A.addMoney(s.value),A.getParty().map(R=>{var I,i;if(((I=R.species)==null?void 0:I.speciesId)===e.GIMMIGHOUL||((i=R.fusionSpecies)==null?void 0:i.speciesId)===e.GIMMIGHOUL){R.evoCounter?R.evoCounter++:R.evoCounter=1;const a=YM(x.EVOLUTION_TRACKER_GIMMIGHOUL).newModifier(R);A.addModifier(a)}}),!0}};T(Ym,"MoneyRewardModifier");let WC=Ym;const kN=class kN extends FA{constructor(A,s){super(A,s)}match(A){return A instanceof kN}clone(){return new kN(this.type,this.stackCount)}apply(A){return A.value+=Math.floor(A.value*.2*this.getStackCount()),!0}getMaxStackCount(A){return 5}};T(kN,"MoneyMultiplierModifier");let cR=kN;const ZN=class ZN extends at{constructor(A,s,R){super(A,s,R)}matchType(A){return A instanceof ZN}clone(){return new ZN(this.type,this.pokemonId,this.stackCount)}apply(A,s){const R=A.scene,I=new $e(Math.floor(s.value*(.5*this.getStackCount())));return R.applyModifiers(cR,!0,I),R.addMoney(I.value),!0}getMaxHeldItemCount(A){return 5}};T(ZN,"DamageMoneyRewardModifier");let Yn=ZN;const XN=class XN extends FA{constructor(A,s){super(A,s)}match(A){return A instanceof XN}apply(A){const s=Math.floor(A.money*.1*this.getStackCount());A.addMoney(s);const R=navigator.language||"en-US",I=s.toLocaleString(R),i=U.t("modifier:moneyInterestApply",{moneyAmount:I,typeName:this.type.name});return A.queueMessage(i,void 0,!0),!0}clone(){return new XN(this.type,this.stackCount)}getMaxStackCount(A){return 5}};T(XN,"MoneyInterestModifier");let uS=XN;const QN=class QN extends FA{constructor(A,s){super(A,s)}match(A){return A instanceof QN}clone(){return new QN(this.type,this.stackCount)}apply(A){return A.value*=Math.pow(2,-1-this.getStackCount()),!0}getMaxStackCount(A){return 4}};T(QN,"HiddenAbilityRateBoosterModifier");let pn=QN;const JN=class JN extends FA{constructor(A,s){super(A,s)}match(A){return A instanceof JN}clone(){return new JN(this.type,this.stackCount)}apply(A){return A.value*=Math.pow(2,1+this.getStackCount()),!0}getMaxStackCount(A){return 4}};T(JN,"ShinyRateBoosterModifier");let zi=JN;const $N=class $N extends FA{constructor(A,s){super(A,s)}match(A){return A instanceof $N}apply(){return!0}clone(){return new $N(this.type,this.stackCount)}getMaxStackCount(A){return 1}};T($N,"LockModifierTiersModifier");let hS=$N;const qN=class qN extends FA{constructor(A,s,R){super(A,R),this.shopMultiplier=s??2.5}match(A){return A instanceof qN}clone(){return new qN(this.type,this.shopMultiplier,this.stackCount)}apply(A){return A.value=Math.floor(A.value*this.shopMultiplier),!0}getArgs(){return super.getArgs().concat(this.shopMultiplier)}getMaxStackCount(A){return 1}};T(qN,"HealShopCostModifier");let yI=qN;const jN=class jN extends FA{constructor(A,s){super(A,s)}match(A){return A instanceof jN}clone(){return new jN(this.type,this.stackCount)}apply(){return!0}getMaxStackCount(A){return 1}};T(jN,"BoostBugSpawnModifier");let cS=jN;const zN=class zN extends at{constructor(A,s,R){super(A,s,R)}matchType(A){return A instanceof zN}clone(){return new zN(this.type,this.pokemonId,this.stackCount)}apply(){return!0}getMaxHeldItemCount(A){return 1}};T(zN,"SwitchEffectTransferModifier");let _I=zN;const pm=class pm extends at{constructor(A,s,R){super(A,s,R)}getTargets(A,...s){return A instanceof pR?A.getOpponents():[]}apply(A,s,...R){const I=this.getTargets(A,s);if(!I.length)return!1;const i=I[A.randSeedInt(I.length)],a=this.getTransferredItemCount();if(!a)return!1;const L=A.isPlayer()?FE.PLAYER:A.hasTrainer()?FE.TRAINER:FE.WILD,S=[],o=A.scene.findModifiers(c=>c instanceof at&&c.pokemonId===i.id&&c.isTransferable,i.isPlayer());let l=o.map(c=>c.type.getOrInferTier(L)).reduce((c,G)=>Math.max(G,c),0),D=o.filter(c=>c.type.getOrInferTier(L)===l);const M=[];for(let c=0;c<a;c++){if(!D.length){for(;l--&&!D.length;)D=o.filter(_=>_.type.tier===l);if(!D.length)break}const G=A.randSeedInt(o.length),P=o[G];M.push(A.scene.tryTransferHeldItemModifier(P,A,!1).then(_=>{_&&(S.push(P.type),o.splice(G,1))}))}return Promise.all(M).then(()=>{for(const c of S)A.scene.queueMessage(this.getTransferMessage(A,i,c))}),!!S.length}};T(pm,"HeldItemTransferModifier");let GS=pm;const eT=class eT extends GS{constructor(A,s,R){super(A,s,R),this.isTransferable=!0}matchType(A){return A instanceof eT}clone(){return new eT(this.type,this.pokemonId,this.stackCount)}getTransferredItemCount(){return this.getStackCount()}getTransferMessage(A,s,R){return U.t("modifier:turnHeldItemTransferApply",{pokemonNameWithAffix:b(s),itemName:R.name,pokemonName:A.getNameToRender(),typeName:this.type.name})}getMaxHeldItemCount(A){return 1}setTransferrableFalse(){this.isTransferable=!1}};T(eT,"TurnHeldItemTransferModifier");let ea=eT;const tT=class tT extends GS{constructor(A,s,R,I){super(A,s,I),this.chance=R/100}getTargets(A,s){return s?[s]:[]}matchType(A){return A instanceof tT}clone(){return new tT(this.type,this.pokemonId,this.chance*100,this.stackCount)}getArgs(){return super.getArgs().concat(this.chance*100)}getTransferredItemCount(){return Phaser.Math.RND.realInRange(0,1)<this.chance*this.getStackCount()?1:0}getTransferMessage(A,s,R){return U.t("modifier:contactHeldItemTransferApply",{pokemonNameWithAffix:b(s),itemName:R.name,pokemonName:b(A),typeName:this.type.name})}getMaxHeldItemCount(A){return 5}};T(tT,"ContactHeldItemTransferChanceModifier");let ta=tT;const AT=class AT extends FA{constructor(A,s){super(A,s)}match(A){return A instanceof AT}clone(){return new AT(this.type,this.stackCount)}apply(){return!0}getMaxStackCount(A){return 3}};T(AT,"IvScannerModifier");let Aa=AT;const ET=class ET extends FA{constructor(A,s){super(A,s)}match(A){return A instanceof ET}clone(){return new ET(this.type,this.stackCount)}apply(A){return A.value+=this.getStackCount(),!0}getMaxStackCount(A){return 3}};T(ET,"ExtraModifierModifier");let yn=ET;const sT=class sT extends WI{constructor(A,s,R,I){super(A,s,R,I)}add(A,s,R){for(const I of A)if(this.match(I)){const i=I,a=this.getMaxBattles()+i.getBattleCount();return i.setNewBattleCount(a),R.playSound("se/restore"),!0}return A.push(this),!0}clone(){return new sT(this.type,this.getMaxBattles(),this.getBattleCount(),this.stackCount)}match(A){return A instanceof sT}apply(A){return A.value+=this.getStackCount(),!0}};T(sT,"TempExtraModifierModifier");let wn=sT;const ym=class ym extends FA{constructor(A,s){super(A,s)}getMaxStackCount(A){return 5}};T(ym,"EnemyPersistentModifier");let rn=ym;const wm=class wm extends rn{constructor(A,s,R){super(A,R),this.damageMultiplier=s}apply(A){return A.value=Math.floor(A.value*Math.pow(this.damageMultiplier,this.getStackCount())),!0}getMaxStackCount(A){return 99}};T(wm,"EnemyDamageMultiplierModifier");let YC=wm;const RT=class RT extends YC{constructor(A,s,R){super(A,1.05,R)}match(A){return A instanceof RT}clone(){return new RT(this.type,(this.damageMultiplier-1)*100,this.stackCount)}getArgs(){return[(this.damageMultiplier-1)*100]}getMaxStackCount(A){return 999}};T(RT,"EnemyDamageBoosterModifier");let PS=RT;const OT=class OT extends YC{constructor(A,s,R){super(A,.975,R)}match(A){return A instanceof OT}clone(){return new OT(this.type,(1-this.damageMultiplier)*100,this.stackCount)}getArgs(){return[(1-this.damageMultiplier)*100]}getMaxStackCount(A){return A.currentBattle.waveIndex<2e3?super.getMaxStackCount(A):999}};T(OT,"EnemyDamageReducerModifier");let _S=OT;const nT=class nT extends rn{constructor(A,s,R){super(A,R),this.healPercent=2}match(A){return A instanceof nT}clone(){return new nT(this.type,this.healPercent,this.stackCount)}getArgs(){return[this.healPercent]}apply(A){if(!A.isFullHp()){const s=A.scene;return s.unshiftPhase(new CE(s,A.getBattlerIndex(),Math.max(Math.floor(A.getMaxHp()/(100/this.healPercent))*this.stackCount,1),U.t("modifier:enemyTurnHealApply",{pokemonNameWithAffix:b(A)}),!0,!1,!1,!1,!0)),!0}return!1}getMaxStackCount(A){return 10}};T(nT,"EnemyTurnHealModifier");let HS=nT;const IT=class IT extends rn{constructor(A,s,R,I){super(A,I),this.effect=s,this.chance=.025*(this.effect===J.BURN||this.effect===J.POISON?2:1)}match(A){return A instanceof IT&&A.effect===this.effect}clone(){return new IT(this.type,this.effect,this.chance*100,this.stackCount)}getArgs(){return[this.effect,this.chance*100]}apply(A){return Phaser.Math.RND.realInRange(0,1)<this.chance*this.getStackCount()?A.trySetStatus(this.effect,!0):!1}getMaxStackCount(A){return 10}};T(IT,"EnemyAttackStatusEffectChanceModifier");let mL=IT;const iT=class iT extends rn{constructor(A,s,R){super(A,R),this.chance=.025}match(A){return A instanceof iT}clone(){return new iT(this.type,this.chance*100,this.stackCount)}getArgs(){return[this.chance*100]}apply(A){return A.status&&Phaser.Math.RND.realInRange(0,1)<this.chance*this.getStackCount()?(A.scene.queueMessage(XI(A.status.effect,b(A))),A.resetStatus(),A.updateInfo(),!0):!1}getMaxStackCount(A){return 10}};T(iT,"EnemyStatusEffectHealChanceModifier");let dS=iT;const aT=class aT extends rn{constructor(A,s,R){super(A,R||10),this.chance=.02}match(A){return A instanceof aT}clone(){return new aT(this.type,this.chance*100,this.stackCount)}getArgs(){return[this.chance*100]}apply(A){return A.battleData.endured||Phaser.Math.RND.realInRange(0,1)>=this.chance*this.getStackCount()?!1:(A.addTag(Y.ENDURING,1),A.battleData.endured=!0,!0)}getMaxStackCount(A){return 10}};T(aT,"EnemyEndureChanceModifier");let fS=aT;const LT=class LT extends rn{constructor(A,s,R){super(A,R),this.chance=s/100}match(A){return A instanceof LT&&A.chance===this.chance}clone(){return new LT(this.type,this.chance*100,this.stackCount)}getArgs(){return[this.chance*100]}apply(A){return Phaser.Math.RND.realInRange(0,1)>=this.chance*this.getStackCount()?!1:(A.value=!0,!0)}getMaxStackCount(A){return 10}};T(LT,"EnemyFusionChanceModifier");let BS=LT;function m1(E,A=!0){const s=A?Ge.STARTING_MODIFIER_OVERRIDE:Ge.OPP_MODIFIER_OVERRIDE;!s||s.length===0||!E||(A||E.clearEnemyModifiers(),s.forEach(R=>{const I=x[R.name];let i=I();if(i instanceof iE){const L="type"in R&&R.type!==null?[R.type]:void 0;i=i.generateType([],L)}const a=i&&i.withIdFromFunc(I).newModifier();a&&(a.stackCount=R.count||1,A?E.addModifier(a,!0,!1,!1,!0):E.addEnemyModifier(a,!0,!0))}))}T(m1,"overrideModifiers");function W1(E,A,s=!0){const R=s?Ge.STARTING_HELD_ITEMS_OVERRIDE:Ge.OPP_HELD_ITEMS_OVERRIDE;!R||R.length===0||!E||(s||E.clearEnemyHeldItemModifiers(A),R.forEach(I=>{const i=x[I.name];let a=i();const L=I.count||1;if(a instanceof iE){const o="type"in I&&I.type!==null?[I.type]:void 0;a=a.generateType([],o)}const S=a&&a.withIdFromFunc(i).newModifier(A);S&&(S.pokemonId=A.id,S.stackCount=L,s?E.addModifier(S,!0,!1,!1,!0):E.addEnemyModifier(S,!0,!0))}))}T(W1,"overrideHeldItems");const Vm=class Vm extends zE{constructor(A,s,R,I,i=!1){super(A,s),this.amount=R,this.damageResult=I||Pt.EFFECTIVE,this.critical=i}start(){if(super.start(),this.damageResult===Pt.ONE_HIT_KO){this.scene.moveAnimations&&this.scene.toggleInvert(!0),this.scene.time.delayedCall(Ve(1e3),()=>{this.scene.toggleInvert(!1),this.applyDamage()});return}this.applyDamage()}updateAmount(A){this.amount=A}applyDamage(){switch(this.damageResult){case Pt.EFFECTIVE:this.scene.playSound("se/hit");break;case Pt.SUPER_EFFECTIVE:case Pt.ONE_HIT_KO:this.scene.playSound("se/hit_strong");break;case Pt.NOT_VERY_EFFECTIVE:this.scene.playSound("se/hit_weak");break}if(this.amount&&this.scene.damageNumberHandler.add(this.getPokemon(),this.amount,this.damageResult,this.critical),this.damageResult!==Pt.OTHER&&this.amount>0){const A=this.scene.time.addEvent({delay:100,repeat:5,startAt:200,callback:T(()=>{this.getPokemon().getSprite().setVisible(A.repeatCount%2===0),A.repeatCount||this.getPokemon().updateInfo().then(()=>this.end())},"callback")})}else this.getPokemon().updateInfo().then(()=>this.end())}end(){this.scene.currentBattle.battleSpec===eE.FINAL_BOSS?this.scene.initFinalBossPhaseTwo(this.getPokemon()):super.end()}};T(Vm,"DamagePhase");let pC=Vm;const vm=class vm extends zE{constructor(A,s,R=!1,I,i){super(A,s),this.preventEndure=R,this.destinyTag=I,this.source=i}start(){if(super.start(),!xe(this.destinyTag)&&!xe(this.source)&&this.destinyTag.lapse(this.source,rs.CUSTOM),!this.preventEndure){const A=this.scene.applyModifier(BL,this.player,this.getPokemon());if(A)return--A.stackCount||this.scene.removeModifier(A),this.scene.updateModifiers(this.player),this.end()}this.tryOverrideForBattleSpec()||this.doFaint()}doFaint(){var R,I,i,a;const A=this.getPokemon();if(A.isPlayer()?(this.scene.currentBattle.playerFaints+=1,this.scene.currentBattle.playerFaintsHistory.push({pokemon:A,turn:this.scene.currentBattle.turn})):(this.scene.currentBattle.enemyFaints+=1,this.scene.currentBattle.enemyFaintsHistory.push({pokemon:A,turn:this.scene.currentBattle.turn})),this.scene.queueMessage(U.t("battle:fainted",{pokemonNameWithAffix:b(A)}),null,!0),this.scene.triggerPokemonFormChange(A,Os,!0),(I=(R=A.turnData)==null?void 0:R.attacksReceived)!=null&&I.length){const L=A.turnData.attacksReceived[0];Fx(vI,A,this.scene.getPokemonById(L.sourceId),new ke(L.move).getMove(),L.result)}else Fx(vI,A);if(this.scene.getField(!0).forEach(L=>KX(wS,L,A)),(a=(i=A.turnData)==null?void 0:i.attacksReceived)!=null&&a.length){const L=this.scene.getPokemonById(A.turnData.attacksReceived[0].sourceId);if(L!=null&&L.isOnField()){FX(yS,L);const S=He[A.turnData.attacksReceived[0].move],o=S.getAttrs(UD);if(o.length)for(const l of o)l.applyPostVictory(L,L,S)}}if(this.player){const L=this.scene.getParty().filter(o=>o.isAllowedInBattle()),S=L.filter(o=>!o.isActive(!0));L.length?this.scene.currentBattle.double&&L.length===1&&S.length===0?this.scene.unshiftPhase(new aO(this.scene,!0)):S.length>0&&this.scene.pushPhase(new pi(this.scene,xA.SWITCH,this.fieldIndex,!0,!1)):this.scene.unshiftPhase(new iO(this.scene))}else this.scene.unshiftPhase(new KT(this.scene,this.battlerIndex)),[Nt.TRAINER,Nt.MYSTERY_ENCOUNTER].includes(this.scene.currentBattle.battleType)&&this.scene.getEnemyParty().filter(S=>S.isActive()&&!S.isOnField()&&S.trainerSlot===A.trainerSlot).length&&this.scene.pushPhase(new EO(this.scene,xA.SWITCH,this.fieldIndex,-1,!1,!1));if(this.scene.currentBattle.double){const L=A.getAlly();this.scene.redirectPokemonMoves(A,L)}A.faintCry(()=>{A instanceof Ss&&A.addFriendship(-h8),A.hideInfo(),this.scene.playSound("se/faint"),this.scene.tweens.add({targets:A,duration:500,y:A.y+150,ease:"Sine.easeIn",onComplete:T(()=>{A.resetSprite(),A.lapseTags(rs.FAINT),this.scene.getField(!0).filter(L=>L!==A).forEach(L=>L.removeTagsBySourceId(A.id)),A.y-=150,A.trySetStatus(J.FAINT),A.isPlayer()?this.scene.currentBattle.removeFaintedParticipant(A):(this.scene.addFaintedEnemyScore(A),this.scene.currentBattle.addPostBattleLoot(A)),this.scene.field.remove(A),this.end()},"onComplete")})})}tryOverrideForBattleSpec(){switch(this.scene.currentBattle.battleSpec){case eE.FINAL_BOSS:if(!this.player){const A=this.getPokemon();return A.formIndex?this.scene.ui.showDialogue(s6[eE.FINAL_BOSS].secondStageWin,A.species.name,null,()=>this.doFaint()):(A.hp++,this.scene.unshiftPhase(new pC(this.scene,A.getBattlerIndex(),0,Pt.OTHER)),this.end()),!0}}return!1}};T(vm,"FaintPhase");let Hr=vm;const xm=class xm extends zE{constructor(A,s,R,I,i,a){super(A,s),this.statusEffect=R,this.turnsRemaining=I,this.sourceText=i,this.sourcePokemon=a}start(){var s;const A=this.getPokemon();if(A&&!A.status){if(A.trySetStatus(this.statusEffect,!1,this.sourcePokemon)){this.turnsRemaining&&(A.status.sleepTurnsRemaining=this.turnsRemaining),A.updateInfo(!0),new bI(RA.POISON+(this.statusEffect-1),A).play(this.scene,!1,()=>{this.scene.queueMessage(A8(this.statusEffect,b(A),this.sourceText??void 0)),this.end()});return}}else((s=A.status)==null?void 0:s.effect)===this.statusEffect&&this.scene.queueMessage(E8(this.statusEffect??J.NONE,b(A)));this.end()}};T(xm,"ObtainStatusEffectPhase");let yG=xm;var eR=(E=>(E[E.CENTER=0]="CENTER",E[E.LEFT=1]="LEFT",E[E.RIGHT=2]="RIGHT",E))(eR||{});const bm=class bm extends vA.GameObjects.Container{constructor(A,s,R,I,i,a,L,S,o,l,D,M,c){if(super(A,s,R),!I.isObtainable()&&this.isPlayer())throw`Cannot create a player Pokemon for species '${I.getName(L)}'`;const G=new Jt(QV);if(this.hasTrainer()||this.scene.applyModifiers(pn,!0,G),this.species=I,this.pokeball=(c==null?void 0:c.pokeball)||ge.POKEBALL,this.level=i,this.switchOutStatus=!1,a!==void 0)this.abilityIndex=a;else{const P=!le(G.value),_=le(2);I.abilityHidden&&P?this.abilityIndex=2:this.abilityIndex=I.ability2!==I.ability1?_:0}if(L!==void 0&&(this.formIndex=L),S!==void 0&&(this.gender=S),o!==void 0&&(this.shiny=o),l!==void 0&&(this.variant=l),this.exp=(c==null?void 0:c.exp)||WR(this.level,I.growthRate),this.levelExp=(c==null?void 0:c.levelExp)||0,c)this.id=c.id,this.hp=c.hp,this.stats=c.stats,this.ivs=c.ivs,this.passive=!!c.passive,this.variant===void 0&&(this.variant=0),this.nature=c.nature||0,this.nickname=c.nickname,this.moveset=c.moveset,this.status=c.status,this.friendship=c.friendship!==void 0?c.friendship:this.species.baseFriendship,this.metLevel=c.metLevel||5,this.luck=c.luck,this.metBiome=c.metBiome,this.metSpecies=c.metSpecies??(this.metBiome!==-1?this.species.speciesId:this.species.getRootSpeciesId(!0)),this.metWave=c.metWave??(this.metBiome===-1?-1:0),this.pauseEvolutions=c.pauseEvolutions,this.pokerus=!!c.pokerus,this.evoCounter=c.evoCounter??0,this.fusionSpecies=c.fusionSpecies instanceof u?c.fusionSpecies:c.fusionSpecies?Ke(c.fusionSpecies):null,this.fusionFormIndex=c.fusionFormIndex,this.fusionAbilityIndex=c.fusionAbilityIndex,this.fusionShiny=c.fusionShiny,this.fusionVariant=c.fusionVariant||0,this.fusionGender=c.fusionGender,this.fusionLuck=c.fusionLuck,this.fusionCustomPokemonData=c.fusionCustomPokemonData,this.usedTMs=c.usedTMs??[],this.customPokemonData=new $E(c.customPokemonData);else{if(this.id=le(4294967296),this.ivs=D||N1(this.id),this.gender===void 0&&this.generateGender(),this.formIndex===void 0&&(this.formIndex=this.scene.getSpeciesFormIndex(I,this.gender,this.nature,this.isPlayer())),this.shiny===void 0&&this.trySetShiny(),this.variant===void 0&&(this.variant=this.shiny?this.generateVariant():0),this.customPokemonData=new $E,M!==void 0?this.setNature(M):this.generateNature(),this.friendship=I.baseFriendship,this.metLevel=i,this.metBiome=A.currentBattle?A.arena.biomeType:-1,this.metSpecies=I.speciesId,this.metWave=A.currentBattle?A.currentBattle.waveIndex:-1,this.pokerus=!1,i>1){const P=new je(A.gameMode.isSplicedOnly);!P.value&&!this.isPlayer()&&!this.hasTrainer()&&this.scene.applyModifier(BS,!1,P),P.value&&(this.calculateStats(),this.generateFusionSpecies())}this.luck=(this.shiny?this.variant+1:0)+(this.fusionShiny?this.fusionVariant+1:0),this.fusionLuck=this.luck}this.generateName(),I.isObtainable()||(this.shiny=!1),c||this.calculateStats()}getNameToRender(){try{return this.nickname?decodeURIComponent(escape(atob(this.nickname))):this.name}catch(A){return console.error(`Failed to decode nickname for ${this.name}`,A),this.name}}init(){this.fieldPosition=0,this.initBattleInfo(),this.scene.fieldUI.addAt(this.battleInfo,0);const A=T(I=>{const i=this.scene.addPokemonSprite(this,0,0,`pkmn__${this.isPlayer()?"back__":""}sub`,void 0,!0);return i.setOrigin(.5,1),i.setPipeline(this.scene.spritePipeline,{tone:[0,0,0,0],hasShadow:!!I,teraColor:DR(this.getTeraType())}),i},"getSprite");this.setScale(this.getSpriteScale());const s=A(!0),R=A();R.setVisible(!1),this.addAt(s,0),this.addAt(R,1),this.isShiny()&&!this.shinySparkle&&this.initShinySparkle()}isOnField(){return this.scene?this.scene.field.getIndex(this)>-1:!1}isFainted(A){var s;return!this.hp&&(!A||((s=this.status)==null?void 0:s.effect)===J.FAINT)}isAllowedInBattle(){return!this.isFainted()&&this.isAllowed()}isAllowed(){const A=new je(!0);return Is(this.scene.gameMode,JE.POKEMON_IN_BATTLE,this,A),A.value}isActive(A){return this.scene?this.isAllowedInBattle()&&!!this.scene&&(!A||this.isOnField()):!1}getDexAttr(){let A=0n;return A|=this.gender!==ye.FEMALE?Fe.MALE:Fe.FEMALE,A|=this.shiny?Fe.SHINY:Fe.NON_SHINY,A|=this.variant>=2?Fe.VARIANT_3:this.variant===1?Fe.VARIANT_2:Fe.DEFAULT_VARIANT,A|=this.scene.gameData.getFormAttr(this.formIndex),A}generateName(){if(!this.fusionSpecies){this.name=this.species.getName(this.formIndex);return}this.name=c8(this.species.getName(this.formIndex),this.fusionSpecies.getName(this.fusionFormIndex)),this.battleInfo&&this.updateInfo(!0)}loadAssets(A=!0){return new Promise(s=>{const R=this.getMoveset().map(I=>I.getMove().id);Promise.allSettled(R.map(I=>jL(this.scene,I))).then(()=>{zL(this.scene,R),this.getSpeciesForm().loadAssets(this.scene,this.getGender()===ye.FEMALE,this.formIndex,this.shiny,this.variant),(this.isPlayer()||this.getFusionSpeciesForm())&&this.scene.loadPokemonAtlas(this.getBattleSpriteKey(!0,A),this.getBattleSpriteAtlasPath(!0,A)),this.getFusionSpeciesForm()&&(this.getFusionSpeciesForm().loadAssets(this.scene,this.getFusionGender()===ye.FEMALE,this.fusionFormIndex,this.fusionShiny,this.fusionVariant),this.scene.loadPokemonAtlas(this.getFusionBattleSpriteKey(!0,A),this.getFusionBattleSpriteAtlasPath(!0,A))),this.scene.load.once(vA.Loader.Events.COMPLETE,()=>{if(this.isPlayer()){const i=console.warn;console.warn=()=>{};const a=this.scene.anims.generateFrameNames(this.getBattleSpriteKey(),{zeroPad:4,suffix:".png",start:1,end:400});console.warn=i,this.scene.anims.exists(this.getBattleSpriteKey())||this.scene.anims.create({key:this.getBattleSpriteKey(),frames:a,frameRate:12,repeat:-1})}this.playAnim();const I=T(()=>{var i;this.updateFusionPalette(),(i=this.summonData)!=null&&i.speciesForm&&this.updateFusionPalette(!0),s()},"updateFusionPaletteAndResolve");if(this.shiny){const i=T((a,L=!1)=>new Promise(S=>{const o=this.getBattleSpriteAtlasPath(L,A).replace("variant/","").replace(/_[1-3]$/,"");let l=Ys;const D=this.scene.experimentalSprites&&this.scene.hasExpSprite(this.getBattleSpriteKey(L,A));o.split("/").map(c=>l?l=l[c]:null);const M=l;if(M&&M[this.variant]===1){if(ii.hasOwnProperty(a))return S();this.scene.cachedFetch(`./images/pokemon/variant/${D?"exp/":""}${o}.json`).then(c=>{if(!c.ok){console.error(`Could not load ${c.url}!`);return}return c.json()}).then(c=>{ii[a]=c,S()})}else S()}),"populateVariantColors");this.isPlayer()?Promise.all([i(this.getBattleSpriteKey(!1)),i(this.getBattleSpriteKey(!0),!0)]).then(()=>I()):i(this.getBattleSpriteKey(!1)).then(()=>I())}else I()}),this.scene.load.isLoading()||this.scene.load.start()})})}getFormKey(){return!this.species.forms.length||this.species.forms.length<=this.formIndex?"":this.species.forms[this.formIndex].formKey}getFusionFormKey(){return this.fusionSpecies?!this.fusionSpecies.forms.length||this.fusionSpecies.forms.length<=this.fusionFormIndex?"":this.fusionSpecies.forms[this.fusionFormIndex].formKey:null}getSpriteAtlasPath(A){const s=this.getSpriteId(A).replace(/\_{2}/g,"/");return`${/_[1-3]$/.test(s)?"variant/":""}${s}`}getBattleSpriteAtlasPath(A,s){const R=this.getBattleSpriteId(A,s).replace(/\_{2}/g,"/");return`${/_[1-3]$/.test(R)?"variant/":""}${R}`}getSpriteId(A){return this.getSpeciesForm(A).getSpriteId(this.getGender(A)===ye.FEMALE,this.formIndex,this.shiny,this.variant)}getBattleSpriteId(A,s){return A===void 0&&(A=this.isPlayer()),this.getSpeciesForm(s).getSpriteId(this.getGender(s)===ye.FEMALE,this.formIndex,this.shiny,this.variant,A)}getSpriteKey(A){return this.getSpeciesForm(A).getSpriteKey(this.getGender(A)===ye.FEMALE,this.formIndex,this.shiny,this.variant)}getBattleSpriteKey(A,s){return`pkmn__${this.getBattleSpriteId(A,s)}`}getFusionSpriteId(A){return this.getFusionSpeciesForm(A).getSpriteId(this.getFusionGender(A)===ye.FEMALE,this.fusionFormIndex,this.fusionShiny,this.fusionVariant)}getFusionBattleSpriteId(A,s){return A===void 0&&(A=this.isPlayer()),this.getFusionSpeciesForm(s).getSpriteId(this.getFusionGender(s)===ye.FEMALE,this.fusionFormIndex,this.fusionShiny,this.fusionVariant,A)}getFusionBattleSpriteKey(A,s){return`pkmn__${this.getFusionBattleSpriteId(A,s)}`}getFusionBattleSpriteAtlasPath(A,s){return this.getFusionBattleSpriteId(A,s).replace(/\_{2}/g,"/")}getIconAtlasKey(A){return this.getSpeciesForm(A).getIconAtlasKey(this.formIndex,this.shiny,this.variant)}getFusionIconAtlasKey(A){return this.getFusionSpeciesForm(A).getIconAtlasKey(this.fusionFormIndex,this.fusionShiny,this.fusionVariant)}getIconId(A){return this.getSpeciesForm(A).getIconId(this.getGender(A)===ye.FEMALE,this.formIndex,this.shiny,this.variant)}getFusionIconId(A){return this.getFusionSpeciesForm(A).getIconId(this.getFusionGender(A)===ye.FEMALE,this.fusionFormIndex,this.fusionShiny,this.fusionVariant)}getSpeciesForm(A){var s;return!A&&((s=this.summonData)!=null&&s.speciesForm)?this.summonData.speciesForm:this.species.forms&&this.species.forms.length>0?this.species.forms[this.formIndex]:this.species}getFusionSpeciesForm(A){var s,R,I,i,a;return!A&&((s=this.summonData)!=null&&s.speciesForm)?this.summonData.fusionSpeciesForm:!((I=(R=this.fusionSpecies)==null?void 0:R.forms)!=null&&I.length)||this.fusionFormIndex>=((i=this.fusionSpecies)==null?void 0:i.forms.length)?this.fusionSpecies:(a=this.fusionSpecies)==null?void 0:a.forms[this.fusionFormIndex]}getSprite(){return this.getAt(0)}getTintSprite(){return this.maskEnabled?this.maskSprite:this.getAt(1)}getSpriteScale(){const A=this.getFormKey();return this.isMax()===!0||A==="segin-starmobile"||A==="schedar-starmobile"||A==="navi-starmobile"||A==="ruchbah-starmobile"||A==="caph-starmobile"?1.5:this.customPokemonData.spriteScale>0?this.customPokemonData.spriteScale:1}resetSprite(){this.setVisible(!1),this.isOffsetBySubstitute()&&(this.x-=this.getSubstituteOffset()[0],this.y-=this.getSubstituteOffset()[1]),this.setAlpha(1),this.setScale(this.getSpriteScale())}getHeldItems(){return this.scene?this.scene.findModifiers(A=>A instanceof at&&A.pokemonId===this.id,this.isPlayer()):[]}updateScale(){this.setScale(this.getSpriteScale())}updateSpritePipelineData(){[this.getSprite(),this.getTintSprite()].filter(A=>!!A).map(A=>A.pipelineData.teraColor=DR(this.getTeraType())),this.updateInfo(!0)}initShinySparkle(){const A=this.variant?`_${this.variant+1}`:"",s=`shiny${A}`,R=this.scene.addFieldSprite(0,0,s);R.setVisible(!1),R.setOrigin(.5,1);const I=this.scene.anims.generateFrameNames(s,{suffix:".png",end:34});this.scene.anims.exists(`sparkle${A}`)||this.scene.anims.create({key:`sparkle${A}`,frames:I,frameRate:32,showOnStart:!0,hideOnComplete:!0}),this.add(R),this.shinySparkle=R}tryPlaySprite(A,s,R){try{A.play(R),s.play(R)}catch(I){return console.error(`Couldn't play animation for '${R}'!
Is the image for this Pokemon missing?
`,I),!1}return!0}playAnim(){this.tryPlaySprite(this.getSprite(),this.getTintSprite(),this.getBattleSpriteKey())}getFieldPositionOffset(){switch(this.fieldPosition){case 0:return[0,0];case 1:return[-32,-8];case 2:return[32,0]}}getSubstituteOffset(){return this.isPlayer()?[-30,10]:[30,-10]}isOffsetBySubstitute(){const A=this.getTag(lE);if(A){if(A.sprite===void 0)return!1;const s=this.scene.getCurrentPhase();return!(s instanceof sR&&s.getPokemon()===this)}else return!1}destroySubstitute(){const A=this.getTag(lE);A&&A.sprite&&A.sprite.destroy()}setFieldPosition(A,s){return new Promise(R=>{if(A===this.fieldPosition){R();return}const I=this.getFieldPositionOffset();this.fieldPosition=A,this.battleInfo.setMini(A!==0),this.battleInfo.setOffset(A===2);const i=this.getFieldPositionOffset(),a=i[0]-I[0],L=i[1]-I[1],S=this.getTag(lE);if(s){const o=[this];S!=null&&S.sprite&&o.push(S.sprite),this.scene.tweens.add({targets:o,x:T((l,D,M)=>M+a,"x"),y:T((l,D,M)=>M+L,"y"),duration:s,ease:"Sine.easeOut",onComplete:T(()=>R(),"onComplete")})}else this.x+=a,this.y+=L,S!=null&&S.sprite&&(S.sprite.x+=a,S.sprite.y+=L)})}getStats(A=!0){var s;return!A&&((s=this.summonData)!=null&&s.stats)?this.summonData.stats:this.stats}getStat(A,s=!0){return!s&&this.summonData&&this.summonData.stats[A]!==0?this.summonData.stats[A]:this.stats[A]}setStat(A,s,R=!0){s>=0&&(!R&&this.summonData?this.summonData.stats[A]=s:this.stats[A]=s)}getStatStages(){return this.summonData?this.summonData.statStages:[0,0,0,0,0,0,0]}getStatStage(A){return this.summonData?this.summonData.statStages[A-1]:0}setStatStage(A,s){this.summonData&&(s>=-6?this.summonData.statStages[A-1]=Math.min(s,6):this.summonData.statStages[A-1]=Math.max(s,-6))}getCritStage(A,s){const R=new Jt(0);eA(pA,A,this,s,R),this.scene.applyModifiers(fL,A.isPlayer(),A,R),this.scene.applyModifiers(tS,A.isPlayer(),R);const I=new je(!1);Et(IU,A,null,!1,I)&&I.value&&(R.value+=1);const i=A.getTag(to);return i&&(i instanceof xU?R.value+=i.typesOnAdd.includes(n.DRAGON)?2:1:R.value+=2),`${R.value}`,R.value}getEffectiveStat(A,s,R,I=!1,i=!1,a=!1,L=!0){var M,c;const S=new $e(this.getStat(A,!1));this.scene.applyModifiers(dL,this.isPlayer(),this,A,S);const o=new je(!1);for(const G of this.scene.getField(!0))if(gX(oi,G,A,S,this,o,L),o.value)break;I||A0(SA,this,A,S,L);let l=S.value*this.getStatStageMultiplier(A,s,R,i,a,L);switch(A){case B.ATK:this.getTag(Y.SLOW_START)&&(l>>=1);break;case B.DEF:this.isOfType(n.ICE)&&((M=this.scene.arena.weather)==null?void 0:M.weatherType)===Q.SNOW&&(l*=1.5);break;case B.SPATK:break;case B.SPDEF:this.isOfType(n.ROCK)&&((c=this.scene.arena.weather)==null?void 0:c.weatherType)===Q.SANDSTORM&&(l*=1.5);break;case B.SPD:const G=this.isPlayer()?et.PLAYER:et.ENEMY;this.scene.arena.getTagOnSide(Me.TAILWIND,G)&&(l*=2),this.scene.arena.getTagOnSide(Me.GRASS_WATER_PLEDGE,G)&&(l>>=2),this.getTag(Y.SLOW_START)&&(l>>=1),this.status&&this.status.effect===J.PARALYSIS&&(l>>=1);break}const D=this.findTag(G=>G instanceof eo&&G.stat===A);return D&&(l*=D.multiplier),Math.floor(l)}calculateStats(){this.stats||(this.stats=[0,0,0,0,0,0]);const A=this.calculateBaseStats();for(const s of PO){const R=new Jt(Math.floor((2*A[s]+this.ivs[s])*this.level*.01));if(s===B.HP){if(R.value=R.value+this.level+10,this.scene.applyModifier(ki,this.isPlayer(),this,s,R),this.hasAbility(O.WONDER_GUARD,!1,!0)&&(R.value=1),this.hp>R.value||this.hp===void 0)this.hp=R.value;else if(this.hp){const I=this.getMaxHp();I&&R.value>I&&(this.hp+=R.value-I)}}else{R.value+=5;const I=new $e(So(this.getNature(),s));this.scene.applyModifier(DS,this.isPlayer(),this,I),I.value!==1&&(R.value=Math.max(Math[I.value>1?"ceil":"floor"](R.value*I.value),1)),this.scene.applyModifier(ki,this.isPlayer(),this,s,R)}R.value=vA.Math.Clamp(R.value,1,Number.MAX_SAFE_INTEGER),this.setStat(s,R.value)}}calculateBaseStats(){const A=this.getSpeciesForm(!0).baseStats.slice(0);if(this.scene.applyModifiers(OS,this.isPlayer(),this,A),this.scene.applyModifiers(nS,this.isPlayer(),this,A),this.isFusion()){const s=this.getFusionSpeciesForm(!0).baseStats;for(const R of PO)A[R]=Math.ceil((A[R]+s[R])/2)}else if(this.scene.gameMode.isSplicedOnly)for(const s of PO)A[s]=Math.ceil(A[s]/2);return this.scene.applyModifiers(sS,this.isPlayer(),this,A),A}getNature(){return this.customPokemonData.nature!==-1?this.customPokemonData.nature:this.nature}setNature(A){this.nature=A,this.calculateStats()}generateNature(A){A===void 0&&(A=IE(be));const s=A[le(A.length)];this.setNature(s)}isFullHp(){return this.hp>=this.getMaxHp()}getMaxHp(){return this.getStat(B.HP)}getInverseHp(){return this.getMaxHp()-this.hp}getHpRatio(A=!1){return A?this.hp/this.getMaxHp():Math.round(this.hp/this.getMaxHp()*100)/100}generateGender(){this.species.malePercent===null?this.gender=ye.GENDERLESS:this.id%256*.390625<this.species.malePercent?this.gender=ye.MALE:this.gender=ye.FEMALE}getGender(A){var s;return!A&&((s=this.summonData)==null?void 0:s.gender)!==void 0?this.summonData.gender:this.gender}getFusionGender(A){var s;return!A&&((s=this.summonData)==null?void 0:s.fusionGender)!==void 0?this.summonData.fusionGender:this.fusionGender}isShiny(){return this.shiny||this.isFusion()&&this.fusionShiny}getVariant(){return this.isFusion()?Math.max(this.variant,this.fusionVariant):this.variant}getLuck(){return this.luck+(this.isFusion()?this.fusionLuck:0)}isFusion(){return!!this.fusionSpecies}hasFusionSpecies(A){var s;return((s=this.fusionSpecies)==null?void 0:s.speciesId)===A}getMoveset(A){var I;const s=!A&&((I=this.summonData)!=null&&I.moveset)?this.summonData.moveset:this.moveset;let R=this.isPlayer()?Ge.MOVESET_OVERRIDE:Ge.OPP_MOVESET_OVERRIDE;return Array.isArray(R)||(R=[R]),R.length>0&&(this.isPlayer()||(this.moveset=[]),R.forEach((i,a)=>{var S;const L=((S=this.moveset[a])==null?void 0:S.ppUsed)??0;this.moveset[a]=new ke(i,Math.min(L,He[i].pp))})),s}getUnlockedEggMoves(){const A=[],s=this.metSpecies in oE?this.metSpecies:this.getSpeciesForm(!0).getRootSpeciesId(!0);if(s in oE)for(let R=0;R<4;R++)this.scene.gameData.starterData[s].eggMoves&1<<R&&A.push(oE[s][R]);return A}getLearnableLevelMoves(){let A=this.getLevelMoves(1,!0,!1,!0).map(s=>s[1]);return this.metBiome===-1&&!this.scene.gameMode.isFreshStartChallenge()&&!this.scene.gameMode.isDaily&&(A=this.getUnlockedEggMoves().concat(A)),Array.isArray(this.usedTMs)&&this.usedTMs.length>0&&(A=this.usedTMs.filter(s=>!A.includes(s)).concat(A)),A=A.filter(s=>!this.moveset.some(R=>(R==null?void 0:R.moveId)===s)),A}getTypes(A=!1,s=!1,R){var i,a,L;const I=[];if(A){const S=this.getTeraType();if(S!==n.UNKNOWN&&(I.push(S),s))return I}if(!I.length||!A)if(!R&&((i=this.summonData)!=null&&i.types)&&this.summonData.types.length>0)this.summonData.types.forEach(S=>I.push(S));else if(this.customPokemonData.types&&this.customPokemonData.types.length>0){I.push(this.customPokemonData.types[0]);const S=this.getFusionSpeciesForm(R);if(S){const o=(a=this.fusionCustomPokemonData)==null?void 0:a.types;o&&o.length>=2&&o[1]!==I[0]?I.push(o[1]):o&&o.length===1&&o[0]!==I[0]?I.push(o[0]):S.type2!==null&&S.type2!==I[0]?I.push(S.type2):S.type1!==I[0]&&I.push(S.type1)}I.length===1&&this.customPokemonData.types.length>=2&&I.push(this.customPokemonData.types[1])}else{const S=this.getSpeciesForm(R);I.push(S.type1);const o=this.getFusionSpeciesForm(R);if(o){const l=(L=this.fusionCustomPokemonData)==null?void 0:L.types;l&&l.length>=2&&l[1]!==I[0]?I.push(l[1]):l&&l.length===1&&l[0]!==I[0]?I.push(l[0]):o.type2!==null&&o.type2!==S.type1?I.push(o.type2):o.type1!==S.type1&&I.push(o.type1)}I.length===1&&S.type2!==null&&I.push(S.type2)}if(I.length||I.push(n.UNKNOWN),I.length>1&&I.includes(n.UNKNOWN)){const S=I.indexOf(n.UNKNOWN);S!==-1&&I.splice(S,1)}return I.length>1&&I[0]===I[1]&&I.splice(0,1),I}isOfType(A,s=!0,R=!1,I){return!!this.getTypes(s,R,I).some(i=>i===A)}getAbility(A){var R,I;if(!A&&((R=this.summonData)!=null&&R.ability))return jA[this.summonData.ability];if(Ge.ABILITY_OVERRIDE&&this.isPlayer())return jA[Ge.ABILITY_OVERRIDE];if(Ge.OPP_ABILITY_OVERRIDE&&!this.isPlayer())return jA[Ge.OPP_ABILITY_OVERRIDE];if(this.isFusion())return!xe((I=this.fusionCustomPokemonData)==null?void 0:I.ability)&&this.fusionCustomPokemonData.ability!==-1?jA[this.fusionCustomPokemonData.ability]:jA[this.getFusionSpeciesForm(A).getAbility(this.fusionAbilityIndex)];if(!xe(this.customPokemonData.ability)&&this.customPokemonData.ability!==-1)return jA[this.customPokemonData.ability];let s=this.getSpeciesForm(A).getAbility(this.abilityIndex);return s===O.NONE&&(s=this.species.ability1),jA[s]}getPassiveAbility(){if(Ge.PASSIVE_ABILITY_OVERRIDE&&this.isPlayer())return jA[Ge.PASSIVE_ABILITY_OVERRIDE];if(Ge.OPP_PASSIVE_ABILITY_OVERRIDE&&!this.isPlayer())return jA[Ge.OPP_PASSIVE_ABILITY_OVERRIDE];if(!xe(this.customPokemonData.passive)&&this.customPokemonData.passive!==-1)return jA[this.customPokemonData.passive];let A=this.species.speciesId;for(;KA.hasOwnProperty(A);)A=KA[A];return jA[W0[A]]}getAbilityAttrs(A,s=!0,R){const I=[];return(!s||this.canApplyAbility())&&I.push(...this.getAbility(R).getAttrs(A)),(!s||this.canApplyAbility(!0))&&I.push(...this.getPassiveAbility().getAttrs(A)),I}hasPassive(){if(Ge.PASSIVE_ABILITY_OVERRIDE!==O.NONE&&this.isPlayer()||Ge.OPP_PASSIVE_ABILITY_OVERRIDE!==O.NONE&&!this.isPlayer())return!0;const{currentBattle:A,gameMode:s}=this.scene,R=A==null?void 0:A.waveIndex;return this instanceof es&&((A==null?void 0:A.battleSpec)===eE.FINAL_BOSS||s.isEndlessMinorBoss(R)||s.isEndlessMajorBoss(R))?!1:this.passive||this.isBoss()}canApplyAbility(A=!1){var I,i;if(A&&!this.hasPassive())return!1;const s=A?this.getPassiveAbility():this.getAbility();if(this.isFusion()&&s.hasAttr(ZE))return!1;const R=(I=this.scene)==null?void 0:I.arena;if(R.ignoreAbilities&&R.ignoringEffectSource!==this.getBattlerIndex()&&s.isIgnorable||(i=this.summonData)!=null&&i.abilitySuppressed&&!s.hasAttr(qA))return!1;if(this.isOnField()&&!s.hasAttr(UI)){const a=new je(!1);if(this.scene.getField(!0).filter(L=>L!==this).map(L=>{L.getAbility().hasAttr(UI)&&L.canApplyAbility()&&L.getAbility().getAttrs(UI).map(S=>S.apply(this,!1,!1,a,[s])),L.getPassiveAbility().hasAttr(UI)&&L.canApplyAbility(!0)&&L.getPassiveAbility().getAttrs(UI).map(S=>S.apply(this,!0,!1,a,[s]))}),a.value)return!1}return(!!this.hp||s.isBypassFaint)&&!s.conditions.find(a=>!a(this))}hasAbility(A,s=!0,R){return!!(this.getAbility(R).id===A&&(!s||this.canApplyAbility())||this.getPassiveAbility().id===A&&this.hasPassive()&&(!s||this.canApplyAbility(!0)))}hasAbilityWithAttr(A,s=!0,R){return!!((!s||this.canApplyAbility())&&this.getAbility(R).hasAttr(A)||this.hasPassive()&&(!s||this.canApplyAbility(!0))&&this.getPassiveAbility().hasAttr(A))}getWeight(){const A=this.getTag(XU);let s=0;xe(A)||(s=100*A.autotomizeCount);const R=.1,I=new $e(this.species.weight-s);return Et(qS,this,null,!1,I),Math.max(R,I.value)}getTeraType(){if(this.scene!==void 0){const A=this.scene.findModifier(s=>s instanceof zs&&s.pokemonId===this.id&&!!s.getBattlesLeft(),this.isPlayer());if(A)return A.teraType}return n.UNKNOWN}isTerastallized(){return this.getTeraType()!==n.UNKNOWN}isGrounded(){return!!this.getTag(Eo)||!this.isOfType(n.FLYING,!0,!0)&&!this.hasAbility(O.LEVITATE)&&!this.getTag(Y.FLOATING)&&!this.getTag(In)}isTrapped(A=[],s=!0){if(this.isOfType(n.GHOST))return!1;const R=new je(!1);return(this.isPlayer()?this.scene.getEnemyField():this.scene.getPlayerField()).forEach(i=>xX(GU,i,R,this,A,s)),R.value||!!this.getTag(GR)}getMoveType(A,s=!0){const R=new $e(A.type);return eA(jE,this,null,A,R),gO($O,this,null,A,s,R),this.scene.arena.applyTags(Me.ION_DELUGE,s,R),this.getTag(Y.ELECTRIFIED)&&(R.value=n.ELECTRIC),R.value}getMoveEffectiveness(A,s,R=!1,I=!0,i){var l,D;if(!xe((l=this.turnData)==null?void 0:l.moveEffectiveness))return(D=this.turnData)==null?void 0:D.moveEffectiveness;if(s.hasAttr(Lo))return 1;const a=A.getMoveType(s),L=new $e(s.category!==Ot.STATUS||s.hasAttr(AD)?this.getAttackTypeEffectiveness(a,A,!1,I):1);eA(ZI,A,this,s,L),this.getTypes(!0,!0).find(M=>s.isTypeImmune(A,this,M))&&(L.value=0),this.getTag(ZU)&&this.getMoveType(s)===n.FIRE&&(L.value*=2);const S=i??new je(!1);R||(aI(eO,this,A,s,S,I,L),S.value||aI(Gn,this,A,s,S,I,L),S.value||(this.isPlayer()?this.scene.getPlayerField():this.scene.getEnemyField()).forEach(c=>aI($a,c,A,s,S)));const o=this.findTags(M=>M instanceof vU&&M.immuneType===a);for(const M of o)if(s&&!s.getAttrs(lR).some(c=>c.tagType===M.tagType)){L.value=0;break}return!R&&s.category!==Ot.STATUS&&aI(vC,this,A,s,S,I,L),s.category===Ot.STATUS&&s.hitsSubstitute(A,this)&&(L.value=0),S.value?0:L.value}getAttackTypeEffectiveness(A,s,R=!1,I=!0){var o;if(A===n.STELLAR)return this.isTerastallized()?2:1;const i=this.getTypes(!0,!0),a=this.scene.arena;if(A===n.GROUND&&(this.isGrounded()||a.hasTag(Me.GRAVITY))){const l=i.indexOf(n.FLYING);l>-1&&i.splice(l,1)}let L=i.map(l=>{const D=new $e(tl(A,l));if(Is(this.scene.gameMode,JE.TYPE_EFFECTIVENESS,D),s){const M=new je(!1);if(s.isActive(!0)&&s.hasAbilityWithAttr(VL)&&Et(VL,s,M,I,A,l),M.value&&D.value===0||this.findTags(G=>G instanceof kL).some(G=>G.ignoreImmunity(l,A))&&D.value===0)return 1}return D.value}).reduce((l,D)=>l*D,1);const S=new $e(tl(A,n.FLYING));return Is(this.scene.gameMode,JE.TYPE_EFFECTIVENESS,S),!R&&((o=a.weather)==null?void 0:o.weatherType)===Q.STRONG_WINDS&&!a.weather.isEffectSuppressed(this.scene)&&this.isOfType(n.FLYING)&&S.value===2&&(L/=2,I||this.scene.queueMessage(U.t("weather:strongWindsEffectMessage"))),L}getMatchupScore(A){const s=this.getTypes(!0),R=A.getTypes(!0,!0),I=(this.isActive(!0)?this.getEffectiveStat(B.SPD,A):this.getStat(B.SPD,!1))>=A.getEffectiveStat(B.SPD,this);let i=A.getAttackTypeEffectiveness(s[0],this)*(I?1.25:1),a=1/Math.max(this.getAttackTypeEffectiveness(R[0],A),.25);s.length>1&&(i*=A.getAttackTypeEffectiveness(s[1],this)),R.length>1&&(a*=1/Math.max(this.getAttackTypeEffectiveness(R[1],A),.25));let L=this.getHpRatio()+(1-A.getHpRatio());return I&&(L=Math.min(L*1.5,1)),(i+a)*L}getEvolution(){if(Ht.hasOwnProperty(this.species.speciesId)){const A=Ht[this.species.speciesId];for(const s of A)if(!s.item&&this.level>=s.level&&(xe(s.preFormKey)||this.getFormKey()===s.preFormKey)&&(s.condition===null||s.condition.predicate(this)))return s}if(this.isFusion()&&this.fusionSpecies&&Ht.hasOwnProperty(this.fusionSpecies.speciesId)){const A=Ht[this.fusionSpecies.speciesId].map(s=>new cI(this.species.speciesId,s));for(const s of A)if(!s.item&&this.level>=s.level&&(xe(s.preFormKey)||this.getFusionFormKey()===s.preFormKey)&&(s.condition===null||s.condition.predicate(this)))return s}return null}getLevelMoves(A,s=!1,R=!1,I=!1){const i=[];let a=[];if(A||(A=this.level),R){const L=this.species.getSimulatedEvolutionChain(this.level,this.hasTrainer(),this.isBoss(),this.isPlayer());for(let S=0;S<L.length;S++){const o=GI(L[S][0],this.formIndex).getLevelMoves();I?a.push(...o):a.push(...o.filter(l=>s&&l[0]===0||(!S||l[0]>1)&&(S===L.length-1||l[0]<=L[S+1][1])))}}else a=this.getSpeciesForm(!0).getLevelMoves().filter(L=>s&&L[0]===0||I&&L[0]===-1||L[0]>0);if(this.fusionSpecies)if(R){const L=this.fusionSpecies.getSimulatedEvolutionChain(this.level,this.hasTrainer(),this.isBoss(),this.isPlayer());for(let S=0;S<L.length;S++){const o=GI(L[S][0],this.fusionFormIndex).getLevelMoves();I?a.push(...o.filter(l=>s&&l[0]===0||l[0]!==0)):a.push(...o.filter(l=>s&&l[0]===0||(!S||l[0]>1)&&(S===L.length-1||l[0]<=L[S+1][1])))}}else a.push(...this.getFusionSpeciesForm(!0).getLevelMoves().filter(L=>s&&L[0]===0||I&&L[0]===-1||L[0]>0));return a.sort((L,S)=>L[0]>S[0]?1:L[0]<S[0]?-1:0),a=a.filter(L=>{const S=L[0],o=S<A,l=S===0&&s;return!(S>this.level)&&(I||!o||l)}),a&&this.getUniqueMoves(a,i),i}getUniqueMoves(A,s){const R=[];for(const I of A)R.find(i=>i===I[1])||(R.push(I[1]),s.push(I))}getEggMoves(){return oE[this.getSpeciesForm().getRootSpeciesId()]}setMove(A,s){var I;const R=s?new ke(s):null;this.moveset[A]=R,(I=this.summonData)!=null&&I.moveset&&(this.summonData.moveset[A]=R)}trySetShiny(A){if(this.scene.gameMode.isEndless&&this.scene.arena.biomeType===r.END)return!1;const s=(this.id&4294901760)>>>16,R=this.id&65535,I=this.scene.gameData.trainerId^this.scene.gameData.secretId,i=s^R,a=new Jt(XV);return A===void 0?(this.scene.eventManager.isEventActive()&&(a.value*=this.scene.eventManager.getShinyMultiplier()),this.hasTrainer()||this.scene.applyModifiers(zi,!0,a)):a.value=A,this.shiny=(I^i)<a.value,this.shiny&&this.initShinySparkle(),this.shiny}trySetShinySeed(A,s){const R=new Jt(XV);return A===void 0||s?(A!==void 0&&s&&(R.value=A),this.scene.eventManager.isEventActive()&&(R.value*=this.scene.eventManager.getShinyMultiplier()),this.hasTrainer()||this.scene.applyModifiers(zi,!0,R)):R.value=A,this.shiny=le(65536)<R.value,this.shiny&&this.initShinySparkle(),this.shiny}generateVariant(){var I;const A=this.formIndex;let s=this.species.speciesId;if(this.species.forms.length>0){const i=(I=this.species.forms[A])==null?void 0:I.formKey;i&&(s=`${s}-${i}`)}if(!this.shiny||!Ys.hasOwnProperty(s)&&!Ys.hasOwnProperty(this.species.speciesId))return 0;const R=new $e(0);return this.scene.executeWithSeedOffset(()=>{R.value=le(10)},this.id,this.scene.waveSeed),R.value>=T6?0:R.value>=S6?1:2}generateFusionSpecies(A){var L;const s=new Jt(QV);this.hasTrainer()||this.scene.applyModifiers(pn,!0,s);const R=!le(s.value),I=le(2),i=A?S=>Ht.hasOwnProperty(S.speciesId)&&!KA.hasOwnProperty(S.speciesId)&&!S.pseudoLegendary&&!S.legendary&&!S.mythical&&!S.isTrainerForbidden()&&S.speciesId!==this.species.speciesId:this.species.getCompatibleFusionSpeciesFilter();let a;A&&this instanceof Ss&&Ge.STARTER_FUSION_SPECIES_OVERRIDE?a=Ke(Ge.STARTER_FUSION_SPECIES_OVERRIDE):this instanceof es&&Ge.OPP_FUSION_SPECIES_OVERRIDE&&(a=Ke(Ge.OPP_FUSION_SPECIES_OVERRIDE)),this.fusionSpecies=a??this.scene.randomSpecies(((L=this.scene.currentBattle)==null?void 0:L.waveIndex)||0,this.level,!1,i,!0),this.fusionAbilityIndex=this.fusionSpecies.abilityHidden&&R?2:this.fusionSpecies.ability2!==this.fusionSpecies.ability1?I:0,this.fusionShiny=this.shiny,this.fusionVariant=this.variant,this.fusionSpecies.malePercent===null?this.fusionGender=ye.GENDERLESS:this.id%256*.390625<this.fusionSpecies.malePercent?this.fusionGender=ye.MALE:this.fusionGender=ye.FEMALE,this.fusionFormIndex=this.scene.getSpeciesFormIndex(this.fusionSpecies,this.fusionGender,this.getNature(),!0),this.fusionLuck=this.luck,this.generateName()}clearFusionSpecies(){this.fusionSpecies=null,this.fusionFormIndex=0,this.fusionAbilityIndex=0,this.fusionShiny=!1,this.fusionVariant=0,this.fusionGender=0,this.fusionLuck=0,this.fusionCustomPokemonData=null,this.generateName(),this.calculateStats()}generateAndPopulateMoveset(){var l,D;this.moveset=[];let A=[];const s=this.getLevelMoves(1,!0,!0);if(!s){this.species.speciesId;return}for(let M=0;M<s.length;M++){const c=s[M];if(this.level<c[0])break;let G=c[0];G===0&&(G=50),G===1&&He[c[1]].power>=80&&(G=40),He[c[1]].name.endsWith(" (N)")&&(G/=100),A.some(P=>P[0]===c[1])||A.push([c[1],G])}if(this.hasTrainer()){const M=Object.keys(gi);for(const c of M){const G=parseInt(c);let P=!1;for(const _ of gi[c])if(Array.isArray(_)){if(_[0]===this.species.speciesId||this.fusionSpecies&&_[0]===this.fusionSpecies.speciesId&&_.slice(1).indexOf(this.species.forms[this.formIndex])>-1){P=!0;break}}else if(_===this.species.speciesId||this.fusionSpecies&&_===this.fusionSpecies.speciesId){P=!0;break}P&&!A.some(_=>_[0]===G)&&!He[G].name.endsWith(" (N)")&&(Xo[G]===W.COMMON&&this.level>=15?A.push([G,4]):Xo[G]===W.GREAT&&this.level>=30?A.push([G,8]):Xo[G]===W.ULTRA&&this.level>=50&&A.push([G,14]))}if(this.level>=60){for(let G=0;G<3;G++){const P=oE[this.species.getRootSpeciesId()][G];!A.some(_=>_[0]===P)&&!He[P].name.endsWith(" (N)")&&A.push([P,40])}const c=oE[this.species.getRootSpeciesId()][3];if(this.level>=170&&!A.some(G=>G[0]===c)&&!He[c].name.endsWith(" (N)")&&!this.isBoss()&&A.push([c,30]),this.fusionSpecies){for(let P=0;P<3;P++){const _=oE[this.fusionSpecies.getRootSpeciesId()][P];!A.some(g=>g[0]===_)&&!He[_].name.endsWith(" (N)")&&A.push([_,40])}const G=oE[this.fusionSpecies.getRootSpeciesId()][3];this.level>=170&&!A.some(P=>P[0]===G)&&!He[G].name.endsWith(" (N)")&&!this.isBoss()&&A.push([G,30])}}}this.isBoss()&&(A=A.filter(M=>!He[M[0]].hasAttr(fn))),A=A.filter(M=>!He[M[0]].hasAttr(HI)),this.hasTrainer()&&(A=A.filter(M=>!He[M[0]].hasAttr(KO)),A=A.map(M=>[M[0],M[1]*(He[M[0]].hasAttr(fn)?.5:1)]),A=A.map(M=>[M[0],M[1]*(He[M[0]].hasAttr(HI)?.5:1)]),A=A.map(M=>[M[0],M[1]*(He[M[0]].getAttrs(re).some(c=>c.stages>1&&c.selfTarget)?1.25:1)]),A=A.map(M=>[M[0],M[1]*(He[M[0]].isChargingMove()||He[M[0]].hasAttr(BR)?.7:1)]));const R=Math.min(A.reduce((M,c)=>Math.max(He[c[0]].power,M),40),90);A=A.map(M=>[M[0],M[1]*(He[M[0]].category===Ot.STATUS?1:Math.max(Math.min(He[M[0]].power/R,1),.5))]);const I=this.getStat(B.ATK),i=this.getStat(B.SPATK),a=I>i?Ot.SPECIAL:Ot.PHYSICAL,L=a===Ot.PHYSICAL?I/i:i/I;A=A.map(M=>[M[0],M[1]*(He[M[0]].category===a?L:1)]);let S=.9;this.hasTrainer()&&(S+=.7),this.isBoss()&&(S+=.4);const o=A.map(M=>[M[0],Math.ceil(Math.pow(M[1],S)*100)]);if(this.hasTrainer()||this.isBoss()){const M=o.filter(c=>He[c[0]].category!==Ot.STATUS&&this.isOfType(He[c[0]].type));if(M.length){const c=M.reduce((_,g)=>_+g[1],0);let G=le(c),P=0;for(;G>M[P][1];)G-=M[P++][1];this.moveset.push(new ke(M[P][0],0,0))}}else{const M=o.filter(c=>He[c[0]].category!==Ot.STATUS);if(M.length){const c=M.reduce((_,g)=>_+g[1],0);let G=le(c),P=0;for(;G>M[P][1];)G-=M[P++][1];this.moveset.push(new ke(M[P][0],0,0))}}for(;o.length>this.moveset.length&&this.moveset.length<4;){this.hasTrainer()?A=o.filter(P=>!this.moveset.some(_=>P[0]===(_==null?void 0:_.moveId))).map(P=>[P[0],this.moveset.some(_=>(_==null?void 0:_.getMove().category)!==Ot.STATUS&&(_==null?void 0:_.getMove().type)===He[P[0]].type)?Math.ceil(Math.sqrt(P[1])):He[P[0]].category!==Ot.STATUS?Math.ceil(P[1]/Math.max(Math.pow(4,this.moveset.filter(_=>(_==null?void 0:_.getMove().power)>1).length)/8,.5)*(this.isOfType(He[P[0]].type)?2:1)):P[1]]):A=o.filter(P=>!this.moveset.some(_=>P[0]===(_==null?void 0:_.moveId)));const M=A.reduce((P,_)=>P+_[1],0);let c=le(M),G=0;for(;c>A[G][1];)c-=A[G++][1];this.moveset.push(new ke(A[G][0],0,0))}(this.isPlayer()||!((l=this.scene.currentBattle)!=null&&l.isBattleMysteryEncounter())||!((D=this.scene.currentBattle)!=null&&D.mysteryEncounter))&&this.scene.triggerPokemonFormChange(this,Bi)}trySelectMove(A,s){const R=this.getMoveset().length>A?this.getMoveset()[A]:null;return R==null?void 0:R.isUsable(this,s)}showInfo(){if(!this.battleInfo.visible){const A=this.scene.fieldUI.getAll().slice(0,4).filter(s=>s instanceof NT&&s instanceof Rl===this.isPlayer()).find(()=>!0);!A||!this.getFieldIndex()?(this.scene.fieldUI.sendToBack(this.battleInfo),this.scene.sendTextToBack()):this.scene.fieldUI.moveAbove(this.battleInfo,A),this.battleInfo.setX(this.battleInfo.x+(this.isPlayer()?150:this.isBoss()?-198:-150)),this.battleInfo.setVisible(!0),this.isPlayer()&&(this.battleInfo.expMaskRect.x+=150),this.scene.tweens.add({targets:[this.battleInfo,this.battleInfo.expMaskRect],x:this.isPlayer()?"-=150":`+=${this.isBoss()?246:150}`,duration:1e3,ease:"Cubic.easeOut"})}}hideInfo(){return new Promise(A=>{this.battleInfo&&this.battleInfo.visible?this.scene.tweens.add({targets:[this.battleInfo,this.battleInfo.expMaskRect],x:this.isPlayer()?"+=150":`-=${this.isBoss()?246:150}`,duration:500,ease:"Cubic.easeIn",onComplete:T(()=>{this.isPlayer()&&(this.battleInfo.expMaskRect.x-=150),this.battleInfo.setVisible(!1),this.battleInfo.setX(this.battleInfo.x-(this.isPlayer()?150:this.isBoss()?-198:-150)),A()},"onComplete")}):A()})}setSwitchOutStatus(A){this.switchOutStatus=A}updateInfo(A){return this.battleInfo.updateInfo(this,A)}updateEffectiveness(A){this.battleInfo.updateEffectiveness(A)}toggleStats(A){this.battleInfo.toggleStats(A)}toggleFlyout(A){this.battleInfo.toggleFlyout(A)}addExp(A){const s=this.scene.getMaxExpLevel(),R=this.exp;for(this.exp+=A;this.level<s&&this.exp>=WR(this.level+1,this.species.growthRate);)this.level++;this.level>=s&&(this.exp,WR(this.level,this.species.growthRate),this.exp=Math.max(WR(this.level,this.species.growthRate),R)),this.levelExp=this.exp-WR(this.level,this.species.growthRate)}isOpponent(A){return this.isPlayer()!==A.isPlayer()}getOpponent(A){const s=this.getOpponents()[A];return s.summonData?s:null}getOpponents(){return(this.isPlayer()?this.scene.getEnemyField():this.scene.getPlayerField()).filter(A=>A.isActive())}getOpponentDescriptor(){const A=this.getOpponents();return A.length===1?A[0].name:this.isPlayer()?U.t("arenaTag:opposingTeam"):U.t("arenaTag:yourTeam")}getAlly(){return(this.isPlayer()?this.scene.getPlayerField():this.scene.getEnemyField())[this.getFieldIndex()?0:1]}getAlliedField(){return this instanceof Ss?this.scene.getPlayerField():this.scene.getEnemyField()}getStatStageMultiplier(A,s,R,I=!1,i=!1,a=!0){const L=new Jt(this.getStatStage(A)),S=new je(!1);if(s){if(i)switch(A){case B.ATK:case B.SPATK:L.value=Math.max(L.value,0);break;case B.DEF:case B.SPDEF:L.value=Math.min(L.value,0);break}I||Et(Hi,s,null,a,A,S),R&&eA(di,this,s,R,S)}if(!S.value){const o=new $e(Math.max(2,2+L.value)/Math.max(2,2-L.value));return this.scene.applyModifiers(GL,this.isPlayer(),A,o),Math.min(o.value,4)}return 1}getAccuracyMultiplier(A,s){if(s.hasAttr(dI))return 1;const I=new Jt(this.getStatStage(B.ACC)),i=new Jt(A.getStatStage(B.EVA)),a=new je(!1),L=new je(!1);Et(Hi,A,null,!1,B.ACC,a),Et(Hi,this,null,!1,B.EVA,L),eA(di,this,A,s,L),this.scene.applyModifiers(GL,this.isPlayer(),B.ACC,I),I.value=a.value?0:Math.min(I.value,6),i.value=L.value?0:i.value,A.findTag(l=>l instanceof kL)&&(i.value=Math.min(0,i.value));const S=new $e(1);I.value!==i.value&&(S.value=I.value>i.value?(3+Math.min(I.value-i.value,6))/3:3/(3+Math.min(i.value-I.value,6))),A0(SA,this,B.ACC,S,!1,s);const o=new $e(1);return A0(SA,A,B.EVA,o),S.value/o.value}getBaseDamage(A,s,R,I=!1,i=!1,a=!1,L=!0){const S=R===Ot.PHYSICAL,o=2*A.level/5+2,l=s.calculateBattlePower(A,this,L),D=new $e(A.getEffectiveStat(S?B.ATK:B.SPATK,this,void 0,i,I,a,L));eA(aa,A,this,s,D);const M=new $e(this.getEffectiveStat(S?B.DEF:B.SPDEF,A,s,I,i,a,L));eA(fD,A,this,s,M);const c=o*l*D.value/M.value/50+2;return L||(s.name,D.value,M.value),c}getAttackDamage(A,s,R=!1,I=!1,i=!1,a=!0){var Ie;const L=new $e(0),S=this.isPlayer()?et.PLAYER:et.ENEMY,o=new $e(s.category);eA(kI,A,this,s,o);const l=o.value,D=A.getMoveType(s),M=new je(!1),c=this.getMoveEffectiveness(A,s,R,a,M),G=l===Ot.PHYSICAL,P=new $e(this.scene.arena.getAttackTypeMultiplier(D,A.isGrounded()));eA(ID,A,this,s,P);const _=c*P.value===0;if(M.value||_)return{cancelled:M.value,result:s.id===t.SHEER_COLD?11:5,damage:0};const g=new Jt(0);if(eA(ZR,A,this,s,g),g.value)return{cancelled:!1,result:1,damage:g.value};const H=new je(!1);if(eA(KO,A,this,s,H),H.value)return{cancelled:!1,result:4,damage:this.hp};const F=this.getBaseDamage(A,s,l,R,I,i,a),{targets:p,multiple:v}=xn(A,s.id),k=v?p.length:1,j=k>1?.75:1,q=new $e(1);I||gO(YS,A,this,s,a,k,new Jt(0),q);const ie=new Jt(1);this.getTag(Y.RECEIVE_DOUBLE_DAMAGE)&&(ie.value=2);const z=new $e(i?1.5:1);Et(iU,A,null,a,z);const Oe=a?1:this.randSeedIntRange(85,100)/100,ae=A.getTypes(),Le=A.getTeraType(),Ne=ae.includes(D),De=new $e(1);Ne&&(De.value+=.5),eA(AL,A,this,s,De),Le!==n.UNKNOWN&&Le===D&&(De.value+=.5),I||Et(VC,A,null,a,De),De.value=Math.min(De.value,2.25);const Be=new $e(1);if(G&&A.status&&A.status.effect===J.BURN&&!s.hasAttr(oD)){const oe=new je(!1);I||Et(uU,A,oe,a),oe.value||(Be.value=.5)}const de=new $e(1);this.scene.arena.applyTagsForSide(iL,S,a,A,l,de);const fe=new $e(1);s.getAttrs(lR).filter(oe=>oe.doubleDamage).forEach(oe=>{this.getTag(oe.tagType)&&(fe.value*=2)});const Ye=((Ie=this.scene.arena.terrain)==null?void 0:Ie.terrainType)===Rt.MISTY&&this.isGrounded()&&D===n.DRAGON?.5:1;L.value=gt(F*j*q.value*P.value*ie.value*z.value*Oe*De.value*c*Be.value*de.value*fe.value*Ye),I||gO(JC,A,this,s,a,L),A.isPlayer()||this.scene.applyModifiers(PS,!1,L),this.isPlayer()||this.scene.applyModifiers(_S,!1,L),R||aI(qs,this,A,s,M,a,L),eA(sD,A,this,s,L),this.isFullHp()&&!R&&aI(wC,this,A,s,M,!1,L),a||(L.value,s.name);let Re;return c<1?Re=3:c>1?Re=2:Re=1,{cancelled:M.value,result:Re,damage:L.value}}apply(A,s){const R=this.isPlayer()?et.PLAYER:et.ENEMY,I=new $e(s.category);if(eA(kI,A,this,s,I),I.value===Ot.STATUS){const i=new je(!1),a=this.getMoveEffectiveness(A,s,!1,!1,i);return!i.value&&a===0&&this.scene.queueMessage(U.t("battle:hitResultNoEffect",{pokemonName:b(this)})),a===0?5:6}else{let i;const a=new je(!1),L=A.getTag(Y.ALWAYS_CRIT);if(eA(jO,A,this,s,a),Et(aU,A,null,!1,a,this,s),a.value||L)i=!0;else{const _=[24,8,2,1][Math.max(0,Math.min(this.getCritStage(A,s),3))];i=_===1||!this.scene.randBattleSeedInt(_)}const S=this.scene.arena.getTagOnSide(rl,R),o=new je(!1);Et(xS,this,null,!1,o),(S||o.value||Ge.NEVER_CRIT_OVERRIDE)&&(i=!1);const{cancelled:l,result:D,damage:M}=this.getAttackDamage(A,s,!1,!1,i,!1),c=A.findTag(_=>_ instanceof bL&&_.boostedType===A.getMoveType(s));if(c!=null&&c.oneUse&&A.removeTag(c.tagType),l||D===11||D===5)return A.stopMultiHit(this),l||(D===11?this.scene.queueMessage(U.t("battle:hitResultImmune",{pokemonName:b(this)})):this.scene.queueMessage(U.t("battle:hitResultNoEffect",{pokemonName:b(this)}))),D;const G=this.getTag(Y.DESTINY_BOND),P=D===4;if(M){this.lapseTags(rs.HIT);const _=this.getTag(lE),g=!!_&&s.hitsSubstitute(A,this);g&&(_.hp-=M),!this.isPlayer()&&M>=this.hp&&this.scene.applyModifiers(fS,!1,this);const H=this.damageAndUpdate(g?0:M,D,i,P,P,!0);if(H>0){A.isPlayer()&&(this.scene.validateAchvs(Ti,new $e(H)),H>this.scene.gameData.gameStats.highestDamage&&(this.scene.gameData.gameStats.highestDamage=H)),A.turnData.damageDealt+=H,A.turnData.currDamageDealt=H,this.turnData.damageTaken+=H,this.battleData.hitCount++;const F={move:s.id,result:D,damage:H,critical:i,sourceId:A.id,sourceBattlerIndex:A.getBattlerIndex()};this.turnData.attacksReceived.unshift(F),A.isPlayer()&&!this.isPlayer()&&this.scene.applyModifiers(Yn,!0,A,new $e(H))}}if(i&&this.scene.queueMessage(U.t("battle:hitResultCriticalHit")),A.turnData.hitsLeft===1||this.isFainted())switch(D){case 2:this.scene.queueMessage(U.t("battle:hitResultSuperEffective"));break;case 3:this.scene.queueMessage(U.t("battle:hitResultNotVeryEffective"));break;case 4:this.scene.queueMessage(U.t("battle:hitResultOneHitKO"));break}return this.isFainted()&&(this.scene.setPhaseQueueSplice(),!xe(G)&&M?this.scene.unshiftPhase(new Hr(this.scene,this.getBattlerIndex(),P,G,A)):this.scene.unshiftPhase(new Hr(this.scene,this.getBattlerIndex(),P)),this.destroySubstitute(),this.resetSummonData()),D}}damage(A,s=!1,R=!1,I=!1){if(this.isFainted())return 0;const i=new je(!1);return!R&&this.hp-A<=0&&(this.hp>=1&&this.getTag(Y.ENDURING)?i.value=this.lapseTag(Y.ENDURING):this.hp>1&&this.getTag(Y.STURDY)&&(i.value=this.lapseTag(Y.STURDY)),i.value||this.scene.applyModifiers(aS,this.isPlayer(),this,i),i.value&&(A=this.hp-1)),A=Math.min(A,this.hp),this.hp=this.hp-A,this.isFainted()&&!I&&(this.scene.setPhaseQueueSplice(),this.scene.unshiftPhase(new Hr(this.scene,this.getBattlerIndex(),R)),this.destroySubstitute(),this.resetSummonData()),A}damageAndUpdate(A,s,R=!1,I=!1,i=!1,a=!1){const L=new pC(this.scene,this.getBattlerIndex(),A,s,R);return this.scene.unshiftPhase(L),A=this.damage(A,I,i,a),L.updateAmount(A),A}heal(A){const s=Math.min(A,this.getMaxHp()-this.hp);return this.hp+=s,s}isBossImmune(){return this.isBoss()}isMax(){const A=[Ee.GIGANTAMAX,Ee.GIGANTAMAX_RAPID,Ee.GIGANTAMAX_SINGLE,Ee.ETERNAMAX];return A.includes(this.getFormKey())||!!this.getFusionFormKey()&&A.includes(this.getFusionFormKey())}canAddTag(A){if(this.getTag(A))return!1;const s=new dt(A,0,0),R=new je(!1);return vo(qO,this,s,R,!0),this.getAlliedField().forEach(i=>vo(pL,i,s,R,!0)),!R.value}addTag(A,s=0,R,I){const i=this.getTag(A);if(i)return i.onOverlap(this),!1;const a=sb(A,s,R,I),L=new je(!1);return vo(qO,this,a,L),this.getAlliedField().forEach(o=>vo(pL,o,a,L)),!L.value&&a.canAdd(this)?(this.summonData.tags.push(a),a.onAdd(this),!0):!1}getTag(A){return this.summonData?A instanceof Function?this.summonData.tags.find(s=>s instanceof A):this.summonData.tags.find(s=>s.tagType===A):null}findTag(A){return this.summonData?this.summonData.tags.find(s=>A(s)):null}findTags(A){return this.summonData?this.summonData.tags.filter(s=>A(s)):[]}lapseTag(A){const s=this.summonData.tags,R=s.find(I=>I.tagType===A);return R&&!R.lapse(this,rs.CUSTOM)&&(R.onRemove(this),s.splice(s.indexOf(R),1)),!!R}lapseTags(A){const s=this.summonData.tags;s.filter(R=>A===rs.FAINT||R.lapseTypes.some(I=>I===A)&&!R.lapse(this,A)).forEach(R=>{R.onRemove(this),s.splice(s.indexOf(R),1)})}removeTag(A){const s=this.summonData.tags,R=s.find(I=>I.tagType===A);return R&&(R.onRemove(this),s.splice(s.indexOf(R),1)),!!R}findAndRemoveTags(A){if(!this.summonData)return!1;const s=this.summonData.tags,R=s.filter(I=>A(I));for(const I of R)I.turnCount=0,I.onRemove(this),s.splice(s.indexOf(I),1);return!0}removeTagsBySourceId(A){this.findAndRemoveTags(s=>s.isSourceLinked()&&s.sourceId===A)}transferTagsBySourceId(A,s){if(!this.summonData)return;this.summonData.tags.filter(I=>I.sourceId===A).forEach(I=>I.sourceId=s)}transferSummon(A){for(const s of rO){const R=A.getStatStage(s);this instanceof Ss&&R===6&&this.scene.validateAchv(At.TRANSFER_MAX_STAT_STAGE),this.setStatStage(s,R)}for(const s of A.summonData.tags)s.isBatonPassable&&(s instanceof JU&&s.swapStat(this),this.summonData.tags.push(s));this.updateInfo()}isMoveRestricted(A,s){return this.getRestrictingTag(A,s)!==null}isMoveTargetRestricted(A,s,R){for(const I of this.findTags(i=>i instanceof VO))if(I.isMoveTargetRestricted(A,s,R))return I!==null;return!1}getRestrictingTag(A,s,R){for(const I of this.findTags(i=>i instanceof VO)){if(I.isMoveRestricted(A,s))return I;if(s&&R&&I.isMoveTargetRestricted(A,s,R))return I}return null}getMoveHistory(){return this.battleSummonData.moveHistory}pushMoveHistory(A){var s;A.turn=(s=this.scene.currentBattle)==null?void 0:s.turn,this.getMoveHistory().push(A)}getLastXMoves(A=0){const s=this.getMoveHistory();return s.slice(A>=0?Math.max(s.length-(A||1),0):0,s.length).reverse()}getMoveQueue(){return this.summonData.moveQueue}stopMultiHit(A){const s=this.scene.getCurrentPhase();s instanceof sR&&s.getUserPokemon()===this&&s.stopMultiHit(A)}changeForm(A){return new Promise(s=>{this.formIndex=Math.max(this.species.forms.findIndex(I=>I.formKey===A.formKey),0),this.generateName();const R=this.getSpeciesForm().getAbilityCount();this.abilityIndex>=R&&(this.abilityIndex=R-1),this.scene.gameData.setPokemonSeen(this,!1),this.setScale(this.getSpriteScale()),this.loadAssets().then(()=>{this.calculateStats(),this.scene.updateModifiers(this.isPlayer(),!0),Promise.all([this.updateInfo(),this.scene.updateFieldScale()]).then(()=>s())})})}cry(A,s){const R=s||this.scene,I=this.getSpeciesForm().cry(R,A);let i=I.totalDuration*1e3;if(this.fusionSpecies&&this.getSpeciesForm()!==this.getFusionSpeciesForm()){let a=this.getFusionSpeciesForm().cry(R,A,!0);i=Math.min(i,a.totalDuration*1e3),a.destroy(),R.time.delayedCall(Ve(Math.ceil(i*.4)),()=>{try{wR.fadeOut(R,I,Ve(Math.ceil(i*.2))),a=this.getFusionSpeciesForm().cry(R,Object.assign({seek:Math.max(a.totalDuration*.4,0)},A)),wR.fadeIn(R,a,Ve(Math.ceil(i*.2)),R.masterVolume*R.seVolume,0)}catch(L){console.error(L)}})}return I}faintCry(A){if(this.fusionSpecies&&this.getSpeciesForm()!==this.getFusionSpeciesForm())return this.fusionFaintCry(A);const s=`cry/${this.species.getCryKey(this.formIndex)}`;let R=.85;const I=this.scene.playSound(s,{rate:R}),i=this.getSprite(),a=this.getTintSprite(),L=Math.max(this.scene.sound.get(s).totalDuration*50,25);let S=0,o;i.anims.pause(),a==null||a.anims.pause();let l=this.scene.time.addEvent({delay:Ve(L),repeat:-1,callback:T(()=>{for(o=i.anims.msPerFrame/R,S+=L;S>o;)i.anims.duration&&(i.anims.nextFrame(),a==null||a.anims.nextFrame()),S-=o;I&&!I.pendingRemove?(R*=.99,I.setRate(R)):(l==null||l.destroy(),l=null,A&&A())},"callback")});this.scene.time.delayedCall(Ve(3e3),()=>{!l||!this.scene||(I!=null&&I.isPlaying&&I.stop(),l.destroy(),A&&A())})}fusionFaintCry(A){var H;const s=`cry/${this.species.getCryKey(this.formIndex)}`;let R=0,I=.85;const i=this.scene.playSound(s,{rate:I}),a=this.getSprite(),L=this.getTintSprite();let S=i.totalDuration*1e3;const o=`cry/${(H=this.fusionSpecies)==null?void 0:H.getCryKey(this.fusionFormIndex)}`;let l=this.scene.playSound(o,{rate:I});l.stop(),S=Math.min(S,l.totalDuration*1e3),l.destroy();const D=Math.max(S*.05,25);let M=0,c=0;const G=Math.ceil(S*.4);for(;c<G;)++R,c+=D*I,I*=.99;M=R,R=0,I=.85;let P=0,_;a.anims.pause(),L==null||L.anims.pause();let g=this.scene.time.addEvent({delay:Ve(D),repeat:-1,callback:T(()=>{for(++R,_=a.anims.msPerFrame/I,P+=D;P>_;)a.anims.duration&&(a.anims.nextFrame(),L==null||L.anims.nextFrame()),P-=_;R===M&&(wR.fadeOut(this.scene,i,Ve(Math.ceil(S/I*.2))),l=this.scene.playSound(o,Object.assign({seek:Math.max(l.totalDuration*.4,0),rate:I})),wR.fadeIn(this.scene,l,Ve(Math.ceil(S/I*.2)),this.scene.masterVolume*this.scene.seVolume,0)),I*=.99,i&&!i.pendingRemove&&i.setRate(I),l&&!l.pendingRemove&&l.setRate(I),(!i||i.pendingRemove)&&(!l||l.pendingRemove)&&(g==null||g.destroy(),g=null,A&&A())},"callback")});this.scene.time.delayedCall(Ve(3e3),()=>{!g||!this.scene||(i!=null&&i.isPlaying&&i.stop(),l!=null&&l.isPlaying&&l.stop(),g.destroy(),A&&A())})}isOppositeGender(A){return this.gender!==ye.GENDERLESS&&A.gender===(this.gender===ye.MALE?ye.FEMALE:ye.MALE)}canSetStatus(A,s=!1,R=!1,I=null){var S,o,l,D,M,c;if(A!==J.FAINT&&((R?((S=this.status)==null?void 0:S.effect)===A:this.status)||this.isGrounded()&&((o=this.scene.arena.terrain)==null?void 0:o.terrainType)===Rt.MISTY)||I&&I!==this&&this.isSafeguarded(I))return!1;const i=this.getTypes(!0,!0);switch(A){case J.POISON:case J.TOXIC:const G=i.map(P=>{if(P!==n.POISON&&P!==n.STEEL)return!1;const _=new je(!1);return!(I&&(Et(FU,I,_,!1,A,P),_.value))});if((this.isOfType(n.POISON)||this.isOfType(n.STEEL))&&G.includes(!0))return!1;break;case J.PARALYSIS:if(this.isOfType(n.ELECTRIC))return!1;break;case J.SLEEP:if(this.isGrounded()&&((l=this.scene.arena.terrain)==null?void 0:l.terrainType)===Rt.ELECTRIC)return!1;break;case J.FREEZE:if(this.isOfType(n.ICE)||(c=(M=(D=this.scene)==null?void 0:D.arena)==null?void 0:M.weather)!=null&&c.weatherType&&[Q.SUNNY,Q.HARSH_SUN].includes(this.scene.arena.weather.weatherType))return!1;break;case J.BURN:if(this.isOfType(n.FIRE))return!1;break}const a=new je(!1);return gx(TR,this,A,a,s),this.getAlliedField().forEach(G=>gx(vS,G,A,a,s)),!a.value}trySetStatus(A,s=!1,R=null,I=0,i=null){if(!this.canSetStatus(A,s,!1,R))return!1;if((A===J.SLEEP||A===J.FREEZE)&&this.stopMultiHit(),s)return this.scene.unshiftPhase(new yG(this.scene,this.getBattlerIndex(),A,I,i,R)),!0;let a;if(A===J.SLEEP){a=new $e(this.randSeedIntRange(2,4)),this.setFrameRate(4);const S=[Y.UNDERGROUND,Y.UNDERWATER,Y.HIDDEN,Y.FLYING].find(o=>this.getTag(o));S&&(this.removeTag(S),this.getMoveQueue().pop())}return a=a,A=A,this.status=new fi(A,0,a==null?void 0:a.value),A!==J.FAINT&&(this.scene.triggerPokemonFormChange(this,y0,!0),BX(eU,this,A,R)),!0}resetStatus(A=!0,s=!1,R=!1){var i;const I=(i=this.status)==null?void 0:i.effect;!A&&I===J.FAINT||(this.status=null,I===J.SLEEP&&(this.setFrameRate(12),this.getTag(Y.NIGHTMARE)&&this.lapseTag(Y.NIGHTMARE)),s&&this.getTag(Y.CONFUSED)&&this.lapseTag(Y.CONFUSED),R&&this.loadAssets(!1).then(()=>this.playAnim()))}isSafeguarded(A){const s=this.isPlayer()?et.PLAYER:et.ENEMY;if(this.scene.arena.getTagOnSide(Me.SAFEGUARD,s)){const R=new je(!1);return A&&Et(Oa,A,null,!1,R),!R.value}return!1}primeSummonData(A){this.summonDataPrimer=A}resetSummonData(){var A;if((A=this.summonData)!=null&&A.speciesForm&&(this.summonData.speciesForm=null,this.updateFusionPalette()),this.summonData=new gS,this.setSwitchOutStatus(!1),this.battleData||this.resetBattleData(),this.resetBattleSummonData(),this.summonDataPrimer){for(const s of Object.keys(this.summonData))this.summonDataPrimer[s]&&(this.summonData[s]=this.summonDataPrimer[s]);this.getTag(lE)&&(this.scene.triggerPokemonBattleAnim(this,On.SUBSTITUTE_ADD),this.getTag(lE).sourceInFocus=!1),this.summonDataPrimer=null}this.updateInfo()}resetBattleData(){this.battleData=new wG}resetBattleSummonData(){this.battleSummonData=new VG,this.getTag(Y.SEEDED)&&this.lapseTag(Y.SEEDED),this.scene&&this.scene.triggerPokemonFormChange(this,UT,!0)}resetTurnData(){this.turnData=new vG}getExpValue(){return this.getSpeciesForm().getBaseExp()*this.level/5+1}setFrameRate(A){var s;this.scene.anims.get(this.getBattleSpriteKey()).frameRate=A,this.getSprite().play(this.getBattleSpriteKey()),(s=this.getTintSprite())==null||s.play(this.getBattleSpriteKey())}tint(A,s,R,I){const i=this.getTintSprite();i==null||i.setTintFill(A),i==null||i.setVisible(!0),R?(i==null||i.setAlpha(0),this.scene.tweens.add({targets:i,alpha:s||1,duration:R,ease:I||"Linear"})):i==null||i.setAlpha(s)}untint(A,s){const R=this.getTintSprite();A?this.scene.tweens.add({targets:R,alpha:0,duration:A,ease:s||"Linear",onComplete:T(()=>{R==null||R.setVisible(!1),R==null||R.setAlpha(1)},"onComplete")}):(R==null||R.setVisible(!1),R==null||R.setAlpha(1))}enableMask(){var A,s,R;this.maskEnabled||(this.maskSprite=this.getTintSprite(),(A=this.maskSprite)==null||A.setVisible(!0),(s=this.maskSprite)==null||s.setPosition(this.x*this.parentContainer.scale+this.parentContainer.x,this.y*this.parentContainer.scale+this.parentContainer.y),(R=this.maskSprite)==null||R.setScale(this.getSpriteScale()*this.parentContainer.scale),this.maskEnabled=!0)}disableMask(){var A,s,R;this.maskEnabled&&((A=this.maskSprite)==null||A.setVisible(!1),(s=this.maskSprite)==null||s.setPosition(0,0),(R=this.maskSprite)==null||R.setScale(this.getSpriteScale()),this.maskSprite=null,this.maskEnabled=!1)}sparkle(){this.shinySparkle&&(this.shinySparkle.play(`sparkle${this.variant?`_${this.variant+1}`:""}`),this.scene.playSound("se/sparkle"))}updateFusionPalette(A){if(!this.getFusionSpeciesForm(A)){[this.getSprite(),this.getTintSprite()].filter(Re=>!!Re).map(Re=>{var Ie,oe;Re.pipelineData[`spriteColors${A&&((Ie=this.summonData)!=null&&Ie.speciesForm)?"Base":""}`]=[],Re.pipelineData[`fusionSpriteColors${A&&((oe=this.summonData)!=null&&oe.speciesForm)?"Base":""}`]=[]});return}const s=this.getSpeciesForm(A),R=this.getFusionSpeciesForm(A),I=s.getSpriteKey(this.getGender(A)===ye.FEMALE,s.formIndex,this.shiny,this.variant),i=s.getSpriteKey(this.getGender(A)===ye.FEMALE,s.formIndex,this.shiny,this.variant).replace("pkmn__","pkmn__back__"),a=R.getSpriteKey(this.getFusionGender(A)===ye.FEMALE,R.formIndex,this.fusionShiny,this.fusionVariant),L=R.getSpriteKey(this.getFusionGender(A)===ye.FEMALE,R.formIndex,this.fusionShiny,this.fusionVariant).replace("pkmn__","pkmn__back__"),S=this.scene.textures.get(I),o=this.scene.textures.get(i),l=this.scene.textures.get(a),D=this.scene.textures.get(L),[M,c,G,P]=[S,o,l,D].map(Re=>Re.frames[Re.firstFrame]),[_,g,H,F]=[S,o,l,D].map(Re=>Re.getSourceImage()),p=document.createElement("canvas"),v=document.createElement("canvas"),k=document.createElement("canvas"),j=document.createElement("canvas"),q=[],ie=[];[p,v,k,j].forEach((Re,Ie)=>{const oe=Re.getContext("2d"),Te=[M,c,G,P][Ie];if(Re.width=Te.width,Re.height=Te.height,oe){oe.drawImage([_,g,H,F][Ie],Te.cutX,Te.cutY,Te.width,Te.height,0,0,Te.width,Te.height);const he=oe.getImageData(Te.cutX,Te.cutY,Te.width,Te.height);ie.push(he.data)}});for(let Re=0;Re<2;Re++){const Ie=ii[Re?i:I],oe=new Map;this.shiny&&Ie&&Ie[this.variant]&&Object.keys(Ie[this.variant]).forEach(Te=>{oe.set(uo(Array.from(Object.values(Ns(Te)))),Array.from(Object.values(Ns(Ie[this.variant][Te]))))});for(let Te=0;Te<ie[Re].length;Te+=4)if(ie[Re][Te+3]){const he=ie[Re].slice(Te,Te+4);let[tt,lt,yt,Ut]=he;if(Ie){const EA=uo([tt,lt,yt,Ut]);if(oe.has(EA)){const AE=oe.get(EA);AE&&([tt,lt,yt,Ut]=AE)}}q.find(EA=>EA[0]===tt&&EA[1]===lt&&EA[2]===yt)||q.push([tt,lt,yt,Ut])}}const z=JSON.parse(JSON.stringify(q)),Oe=[];for(let Re=0;Re<2;Re++)for(let Ie=0;Ie<ie[Re].length;Ie+=4)ie[Re].slice(Ie,Ie+3).reduce((Te,he)=>Te+he,0)&&Oe.push(ps({r:ie[Re][Ie],g:ie[Re][Ie+1],b:ie[Re][Ie+2],a:ie[Re][Ie+3]}));const ae=[];for(let Re=0;Re<2;Re++){const Ie=ii[Re?L:a],oe=new Map;this.fusionShiny&&Ie&&Ie[this.fusionVariant]&&Object.keys(Ie[this.fusionVariant]).forEach(Te=>{oe.set(uo(Array.from(Object.values(Ns(Te)))),Array.from(Object.values(Ns(Ie[this.fusionVariant][Te]))))});for(let Te=0;Te<ie[2+Re].length;Te+=4){if(!ie[2+Re].slice(Te,Te+3).reduce((EA,AE)=>EA+AE,0))continue;let[tt,lt,yt,Ut]=[ie[2+Re][Te],ie[2+Re][Te+1],ie[2+Re][Te+2],ie[2+Re][Te+3]];if(Ie){const EA=uo([tt,lt,yt,Ut]);if(oe.has(EA)){const AE=oe.get(EA);AE&&([tt,lt,yt,Ut]=AE)}}ae.push(ps({r:tt,g:lt,b:yt,a:Ut}))}}let Le,Ne;const De=Math.random;Math.random=()=>vA.Math.RND.realInRange(0,1),this.scene.executeWithSeedOffset(()=>{Le=oT.quantize(Oe,4),Ne=oT.quantize(ae,4)},0,"This result should not vary"),Math.random=De,Le=Le,Ne=Ne;const[Be,de]=[Le,Ne].map(Re=>{let Ie=Array.from(Re.keys()).sort((tt,lt)=>Re.get(tt)<Re.get(lt)?1:-1),oe,Te;const he=new Map;do{he.clear(),oe=Ie.reduce((tt,lt)=>(tt.set(lt,Object.values(G0(lt))),tt),new Map),Te=Array.from(oe.keys()).reduce((tt,lt)=>{const yt=oe.get(lt).slice(0,3);return tt.set(lt,kb(yt[0],yt[1],yt[2])),tt},new Map);for(let tt=Ie.length-1;tt>=0;tt--){const lt=Te.get(Ie[tt]);for(let yt=0;yt<tt;yt++){const Ut=Te.get(Ie[yt]),EA=Math.abs(lt[0]-Ut[0]);if(EA<30||EA>=330){he.has(Ie[tt])?he.get(Ie[tt]).push(Ie[yt]):he.set(Ie[tt],[Ie[yt]]);break}}}he.forEach((tt,lt)=>{const yt=oe.get(lt),Ut=tt.map(WA=>oe.get(WA)),EA=yt.slice(0);let AE=Re.get(lt);for(const WA of tt){const pE=Re.get(WA);pE&&(AE+=pE)}for(let WA=0;WA<3;WA++)EA[WA]*=Re.get(lt)/AE,tt.forEach((pE,yE)=>{if(Re.has(pE)){const ut=Re.get(pE);EA[WA]+=Ut[yE][WA]*(ut/AE)}}),EA[WA]=Math.round(EA[WA]);Re.delete(lt);for(const WA of tt)Re.delete(WA),he.has(WA)&&he.delete(WA);Re.set(ps({r:EA[0],g:EA[1],b:EA[2],a:EA[3]}),AE)}),Ie=Array.from(Re.keys()).sort((tt,lt)=>Re.get(tt)<Re.get(lt)?1:-1)}while(he.size);return Ie.map(tt=>Object.values(G0(tt)))}),fe=[];q.forEach((Re,Ie)=>{fe.push([]);for(let oe=0;oe<Be.length;oe++)fe[Ie].push(Zb(Re,Be[oe]))});const Ye=vA.Tweens.Builders.GetEaseFunction("Cubic.easeIn");for(let Re=0;Re<q.length;Re++){const Ie=Math.min(...fe[Re]),oe=Math.min(fe[Re].findIndex(Te=>Te===Ie),de.length-1);if(Ie<255){const Te=Ye(Ie/255),he=[0,0,0,z[Re][3]];for(let tt=0;tt<3;tt++)he[tt]=Math.round(z[Re][tt]*Te+de[oe][tt]*(1-Te));z[Re]=he}}[this.getSprite(),this.getTintSprite()].filter(Re=>!!Re).map(Re=>{var Ie,oe;Re.pipelineData[`spriteColors${A&&((Ie=this.summonData)!=null&&Ie.speciesForm)?"Base":""}`]=q,Re.pipelineData[`fusionSpriteColors${A&&((oe=this.summonData)!=null&&oe.speciesForm)?"Base":""}`]=z}),p.remove(),k.remove()}randSeedInt(A,s=0){return this.scene.currentBattle?this.scene.randBattleSeedInt(A,s):le(A,s)}randSeedIntRange(A,s){return this.randSeedInt(s-A+1,A)}leaveField(A=!0,s=!0){this.resetSprite(),this.resetTurnData(),A&&(this.destroySubstitute(),this.resetSummonData(),this.resetBattleData()),s&&this.hideInfo(),this.scene.field.remove(this),this.setSwitchOutStatus(!0),this.scene.triggerPokemonFormChange(this,Os,!0)}destroy(){var A;(A=this.battleInfo)==null||A.destroy(),this.destroySubstitute(),super.destroy()}getBattleInfo(){return this.battleInfo}hasSameAbilityInRootForm(A){const s=this.abilityIndex,R=Ke(this.species.getRootSpeciesId());return R.getAbility(A)===R.getAbility(s)}checkIfPlayerHasAbilityOfStarter(A){return!!((A&1)>0&&this.hasSameAbilityInRootForm(0)||(A&2)>0&&this.hasSameAbilityInRootForm(1)||(A&4)>0&&this.hasSameAbilityInRootForm(2))}};T(bm,"Pokemon");let pR=bm;const km=class km extends pR{constructor(A,s,R,I,i,a,L,S,o,l,D){super(A,106,148,s,R,I,i,a,L,S,o,l,D),Ge.STATUS_OVERRIDE&&(this.status=new fi(Ge.STATUS_OVERRIDE,0,4)),Ge.SHINY_OVERRIDE?(this.shiny=!0,this.initShinySparkle()):Ge.SHINY_OVERRIDE===!1&&(this.shiny=!1),Ge.VARIANT_OVERRIDE!==null&&this.shiny&&(this.variant=Ge.VARIANT_OVERRIDE),D||(this.scene.gameMode.isDaily?this.generateAndPopulateMoveset():this.moveset=[]),this.generateCompatibleTms()}initBattleInfo(){this.battleInfo=new Rl(this.scene),this.battleInfo.initInfo(this)}isPlayer(){return!0}hasTrainer(){return!0}isBoss(){return!1}getFieldIndex(){return this.scene.getPlayerField().indexOf(this)}getBattlerIndex(){return this.getFieldIndex()}generateCompatibleTms(){this.compatibleTms=[];const A=Object.keys(gi);for(const s of A){const R=parseInt(s);let I=!1;for(const i of gi[s])if(Array.isArray(i)){const[a,L]=i;if((a===this.species.speciesId||this.fusionSpecies&&a===this.fusionSpecies.speciesId)&&L===this.getFormKey()){I=!0;break}}else if(i===this.species.speciesId||this.fusionSpecies&&i===this.fusionSpecies.speciesId){I=!0;break}d8.indexOf(R)>-1&&(I=!I),I&&this.compatibleTms.push(R)}}tryPopulateMoveset(A){return this.getSpeciesForm().validateStarterMoveset(A,this.scene.gameData.starterData[this.species.getRootSpeciesId()].eggMoves)?(this.moveset=A.map(s=>new ke(s)),!0):!1}switchOut(A=xA.SWITCH){return new Promise(s=>{this.leaveField(A===xA.SWITCH),this.scene.ui.setMode($.PARTY,as.FAINT_SWITCH,this.getFieldIndex(),(R,I)=>{R>=this.scene.currentBattle.getBattlerCount()&&R<6&&this.scene.prependToPhase(new EO(this.scene,A,this.getFieldIndex(),R,!1),vi),this.scene.ui.setMode($.MESSAGE).then(s)},HE.FilterNonFainted)})}addFriendship(A){const s=this.species.getRootSpeciesId(),R=this.isFusion()&&this.fusionSpecies?this.fusionSpecies.getRootSpeciesId():0,I=[this.scene.gameData.starterData[s],R?this.scene.gameData.starterData[R]:null].filter(S=>!!S),i=new Jt(A);let a=D8;this.scene.eventManager.isEventActive()&&(a*=this.scene.eventManager.getFriendshipMultiplier());const L=new Jt(Math.floor(A*(this.scene.gameMode.isClassic&&A>0?a:1)/(R?2:1)));if(i.value>0)this.scene.applyModifier(FL,!0,this,i),this.scene.applyModifier(FL,!0,this,L),this.friendship=Math.min(this.friendship+i.value,255),this.friendship===255&&this.scene.validateAchv(At.MAX_FRIENDSHIP),I.forEach((S,o)=>{const l=o?R:s;S.friendship=(S.friendship||0)+L.value,S.friendship>=D1(CA[l])&&(this.scene.gameData.addStarterCandy(Ke(l),1),S.friendship=0)});else{this.friendship=Math.max(this.friendship+i.value,0);for(const S of I)S.friendship=Math.max((S.friendship||0)+L.value,0)}}revivalBlessing(){return new Promise(A=>{this.scene.ui.setMode($.PARTY,as.REVIVAL_BLESSING,this.getFieldIndex(),(s,R)=>{if(s>=0&&s<6){const I=this.scene.getParty()[s];if((!I||!I.isFainted())&&A(),I.resetTurnData(),I.resetStatus(),I.heal(Math.min(gt(.5*I.getMaxHp()),I.getMaxHp())),this.scene.queueMessage(U.t("moveTriggers:revivalBlessing",{pokemonName:I.name}),0,!0),this.scene.currentBattle.double&&this.scene.getParty().length>1){const i=this.getAlly();s<=1?(this.scene.unshiftPhase(new EO(this.scene,xA.SWITCH,I.getFieldIndex(),s,!1,!0)),this.scene.unshiftPhase(new aO(this.scene,!0))):i.isFainted()&&(this.scene.unshiftPhase(new EO(this.scene,xA.SWITCH,i.getFieldIndex(),s,!1,!0)),this.scene.unshiftPhase(new aO(this.scene,!0)))}}this.scene.ui.setMode($.MESSAGE).then(()=>A())},HE.FilterFainted)})}getPossibleEvolution(A){return A?new Promise(s=>{const R=Ke(A.speciesId),I=A instanceof cI;let i;if(I){const a=this.fusionSpecies,L=this.fusionFormIndex;this.fusionSpecies=R,this.fusionFormIndex=A.evoFormKey!==null?Math.max(R.forms.findIndex(S=>S.formKey===A.evoFormKey),0):this.fusionFormIndex,i=this.scene.addPlayerPokemon(this.species,this.level,this.abilityIndex,this.formIndex,this.gender,this.shiny,this.variant,this.ivs,this.nature,this),this.fusionSpecies=a,this.fusionFormIndex=L}else{const a=A.evoFormKey!==null&&!I?Math.max(R.forms.findIndex(L=>L.formKey===A.evoFormKey),0):this.formIndex;i=this.scene.addPlayerPokemon(I?this.species:R,this.level,this.abilityIndex,a,this.gender,this.shiny,this.variant,this.ivs,this.nature,this)}i.loadAssets().then(()=>s(i))}):new Promise(s=>s(this))}evolve(A,s){return A?new Promise(R=>{this.pauseEvolutions=!1,this.handleSpecialEvolutions(A);const I=A instanceof cI;if(I?this.fusionSpecies=Ke(A.speciesId):this.species=Ke(A.speciesId),A.preFormKey!==null){const a=Math.max((!I||!this.fusionSpecies?this.species:this.fusionSpecies).forms.findIndex(L=>L.formKey===A.evoFormKey),0);I?this.fusionFormIndex=a:this.formIndex=a}if(this.generateName(),I){const a=this.getFusionSpeciesForm().getAbilityCount(),L=s.getAbilityCount();[0,1,2].includes(this.fusionAbilityIndex)?this.fusionAbilityIndex===2&&L===3&&a===2&&(this.fusionAbilityIndex=1):(console.warn("this.fusionAbilityIndex is somehow an illegal value, please report this"),console.warn(this.fusionAbilityIndex),this.fusionAbilityIndex=0)}else{const a=this.getSpeciesForm().getAbilityCount(),L=s.getAbilityCount();[0,1,2].includes(this.abilityIndex)?this.abilityIndex===2&&L===3&&a===2&&(this.abilityIndex=1):(console.warn("this.abilityIndex is somehow an illegal value, please report this"),console.warn(this.abilityIndex),this.abilityIndex=0)}this.compatibleTms.splice(0,this.compatibleTms.length),this.generateCompatibleTms();const i=T(()=>{this.loadAssets().then(()=>{this.calculateStats(),this.updateInfo(!0).then(()=>R())})},"updateAndResolve");if(s.speciesId===e.GIMMIGHOUL){const a=this.getHeldItems().filter(L=>L instanceof RS)[0]??null;a&&this.scene.removeModifier(a)}!this.scene.gameMode.isDaily||this.metBiome>-1?(this.scene.gameData.updateSpeciesDexIvs(this.species.speciesId,this.ivs),this.scene.gameData.setPokemonSeen(this,!1),this.scene.gameData.setPokemonCaught(this,!1).then(()=>i())):i()}):new Promise(R=>R())}handleSpecialEvolutions(A){var I;const s=A instanceof cI,R=s?this.fusionSpecies:this.species;if((R==null?void 0:R.speciesId)===e.NINCADA&&A.speciesId===e.NINJASK){const i=Ht[R.speciesId][1];if((I=i.condition)!=null&&I.predicate(this)){const a=this.scene.addPlayerPokemon(this.species,this.level,this.abilityIndex,this.formIndex,void 0,this.shiny,this.variant,this.ivs,this.nature);a.passive=this.passive,a.moveset=this.moveset.slice(),a.moveset=this.copyMoveset(),a.luck=this.luck,a.metLevel=this.metLevel,a.metBiome=this.metBiome,a.metSpecies=this.metSpecies,a.metWave=this.metWave,a.fusionSpecies=this.fusionSpecies,a.fusionFormIndex=this.fusionFormIndex,a.fusionAbilityIndex=this.fusionAbilityIndex,a.fusionShiny=this.fusionShiny,a.fusionVariant=this.fusionVariant,a.fusionGender=this.fusionGender,a.fusionLuck=this.fusionLuck,a.usedTMs=this.usedTMs,this.scene.getParty().push(a),a.evolve(s?new cI(this.id,i):i,R),this.scene.findModifiers(S=>S instanceof at&&S.pokemonId===this.id,!0).forEach(S=>{const o=S.clone();o.pokemonId=a.id,this.scene.addModifier(o,!0)}),this.scene.updateModifiers(!0)}}}getPossibleForm(A){return new Promise(s=>{const R=Math.max(this.species.forms.findIndex(i=>i.formKey===A.formKey),0),I=this.scene.addPlayerPokemon(this.species,this.level,this.abilityIndex,R,this.gender,this.shiny,this.variant,this.ivs,this.nature,this);I.loadAssets().then(()=>s(I))})}changeForm(A){return new Promise(s=>{const R=this.formIndex;this.formIndex=Math.max(this.species.forms.findIndex(S=>S.formKey===A.formKey),0),this.generateName();const I=this.getSpeciesForm().getAbilityCount();this.abilityIndex>=I&&(this.abilityIndex=I-1);const i=this.species.forms[R],a=[i.type1,i.type2];if(this.customPokemonData.types.length>0){this.getSpeciesForm().type1!==a[0]&&(this.customPokemonData.types[0]=this.getSpeciesForm().type1);const S=this.getSpeciesForm().type2;!xe(S)&&S!==a[1]&&(this.customPokemonData.types.length>1?this.customPokemonData.types[1]=S:this.customPokemonData.types.push(S))}this.compatibleTms.splice(0,this.compatibleTms.length),this.generateCompatibleTms();const L=T(()=>{this.loadAssets().then(()=>{this.calculateStats(),this.scene.updateModifiers(!0,!0),this.updateInfo(!0).then(()=>s())})},"updateAndResolve");!this.scene.gameMode.isDaily||this.metBiome>-1?(this.scene.gameData.setPokemonSeen(this,!1),this.scene.gameData.setPokemonCaught(this,!1).then(()=>L())):L()})}clearFusionSpecies(){super.clearFusionSpecies(),this.generateCompatibleTms()}fuse(A){return new Promise(s=>{this.fusionSpecies=A.species,this.fusionFormIndex=A.formIndex,this.fusionAbilityIndex=A.abilityIndex,this.fusionShiny=A.shiny,this.fusionVariant=A.variant,this.fusionGender=A.gender,this.fusionLuck=A.luck,this.fusionCustomPokemonData=A.customPokemonData,(A.pauseEvolutions||this.pauseEvolutions)&&(this.pauseEvolutions=!0),this.scene.validateAchv(At.SPLICE),this.scene.gameData.gameStats.pokemonFused++;const R=this.getMaxHp(),I=(A.hp/A.getMaxHp()+this.hp/R)/2;this.generateName(),this.calculateStats(),this.hp=Math.round(R*I),this.isFainted()?A.isFainted()||(this.hp=Math.max(this.hp,1),this.status=A.status):(this.hp=Math.min(this.hp,R),this.status=s8(this.status,A.status)),this.generateCompatibleTms(),this.updateInfo(!0);const i=this.scene.getParty().indexOf(A);this.scene.getParty().indexOf(this);const a=this.scene.findModifiers(S=>S instanceof at&&S.pokemonId===A.id,!0),L=[];for(const S of a)L.push(this.scene.tryTransferHeldItemModifier(S,this,!1,S.getStackCount(),!0,!0));Promise.allSettled(L).then(()=>{this.scene.updateModifiers(!0,!0).then(()=>{this.scene.removePartyMemberModifiers(i),this.scene.getParty().splice(i,1)[0];const S=this.scene.getParty().indexOf(this);A.getMoveset(!0).map(o=>this.scene.unshiftPhase(new Wn(this.scene,S,o.getMove().id))),A.destroy(),this.updateFusionPalette(),s()})})})}unfuse(){return new Promise(A=>{this.clearFusionSpecies(),this.updateInfo(!0).then(()=>A()),this.updateFusionPalette()})}copyMoveset(){const A=[];return this.moveset.forEach(s=>{s&&A.push(new ke(s.moveId,0,s.ppUp,s.virtual,s.maxPpOverride))}),A}};T(km,"PlayerPokemon");let Ss=km;const Zm=class Zm extends pR{constructor(A,s,R,I,i,a){var S;super(A,236,84,s,R,a==null?void 0:a.abilityIndex,a==null?void 0:a.formIndex,a==null?void 0:a.gender,a?a.shiny:!1,a?a.variant:void 0,void 0,a?a.nature:void 0,a),this.trainerSlot=I,this.isPopulatedFromDataSource=!!a,i&&this.setBoss(i,a==null?void 0:a.bossSegments),Ge.OPP_STATUS_OVERRIDE&&(this.status=new fi(Ge.OPP_STATUS_OVERRIDE,0,4)),Ge.OPP_GENDER_OVERRIDE&&(this.gender=Ge.OPP_GENDER_OVERRIDE);const L=this.species.speciesId;if(L in Ge.OPP_FORM_OVERRIDES&&Ge.OPP_FORM_OVERRIDES[L]&&this.species.forms[Ge.OPP_FORM_OVERRIDES[L]]&&(this.formIndex=Ge.OPP_FORM_OVERRIDES[L]??0),!a){this.generateAndPopulateMoveset(),this.trySetShiny(),Ge.OPP_SHINY_OVERRIDE?(this.shiny=!0,this.initShinySparkle()):Ge.OPP_SHINY_OVERRIDE===!1&&(this.shiny=!1),this.shiny&&(this.variant=this.generateVariant(),Ge.OPP_VARIANT_OVERRIDE!==null&&(this.variant=Ge.OPP_VARIANT_OVERRIDE)),this.luck=(this.shiny?this.variant+1:0)+(this.fusionShiny?this.fusionVariant+1:0);let o,l=s.speciesId;for(;o=KA[l];){const D=Ht[o].find(M=>M.speciesId===l&&(!M.evoFormKey||M.evoFormKey===this.getFormKey()));(S=D==null?void 0:D.condition)!=null&&S.enforceFunc&&D.condition.enforceFunc(this),l=o}}this.aiType=i||this.hasTrainer()?2:1}initBattleInfo(){this.battleInfo?this.battleInfo.updateBossSegments(this):(this.battleInfo=new u0(this.scene),this.battleInfo.updateBossSegments(this),this.battleInfo.initInfo(this))}setBoss(A=!0,s=0){A?(this.bossSegments=s||this.scene.getEncounterBossSegments(this.scene.currentBattle.waveIndex,this.level,this.species,!0),this.bossSegmentIndex=this.bossSegments-1):(this.bossSegments=0,this.bossSegmentIndex=0)}generateAndPopulateMoveset(A){switch(!0){case this.species.speciesId===e.SMEARGLE:this.moveset=[new ke(t.SKETCH),new ke(t.SKETCH),new ke(t.SKETCH),new ke(t.SKETCH)];break;case this.species.speciesId===e.ETERNATUS:this.moveset=(A!==void 0?A:this.formIndex)?[new ke(t.DYNAMAX_CANNON),new ke(t.CROSS_POISON),new ke(t.FLAMETHROWER),new ke(t.RECOVER,0,-4)]:[new ke(t.ETERNABEAM),new ke(t.SLUDGE_BOMB),new ke(t.FLAMETHROWER),new ke(t.COSMIC_POWER)],this.scene.gameMode.hasChallenge(ht.INVERSE_BATTLE)&&(this.moveset[2]=new ke(t.THUNDERBOLT));break;default:super.generateAndPopulateMoveset();break}}getNextMove(){var R;const A=this.getMoveQueue().length?this.getMoveset().find(I=>(I==null?void 0:I.moveId)===this.getMoveQueue()[0].move):null;if(A)return A.isUsable(this,this.getMoveQueue()[0].ignorePP)?{move:A.moveId,targets:this.getMoveQueue()[0].targets,ignorePP:this.getMoveQueue()[0].ignorePP}:(this.getMoveQueue().shift(),this.getNextMove());let s=this.getMoveset().filter(I=>I==null?void 0:I.isUsable(this));if(s.length){if(s.length===1)return{move:s[0].moveId,targets:this.getNextTargets(s[0].moveId)};const I=this.getTag(vL);if(I){const i=s.find(a=>(a==null?void 0:a.moveId)===I.moveId);if(i)return{move:i.moveId,targets:this.getNextTargets(i.moveId)}}switch(this.aiType){case 0:const i=s[this.scene.randBattleSeedInt(s.length)].moveId;return{move:i,targets:this.getNextTargets(i)};case 1:case 2:const a=s.filter(D=>{if(!D)return!1;const M=D.getMove();if(M.moveTarget===qE.ATTACKER)return!1;const c=this.scene.getField(),G=xn(this,M.id).targets.map(_=>c[_]).filter(_=>this.isPlayer()!==_.isPlayer()),P=M.hasAttr(jO)||!!this.getTag(Y.ALWAYS_CRIT);return M.category!==Ot.STATUS&&G.some(_=>(M.applyConditions(this,_,M)||[t.SUCKER_PUNCH,t.UPPER_HAND,t.THUNDERCLAP].includes(M.id))&&_.getAttackDamage(this,M,!_.battleData.abilityRevealed,!1,P).damage>=_.hp)},this);a.length>0&&(s=a);const L=s.map(()=>0),S=Object.fromEntries(s.map(D=>[D.moveId,this.getNextTargets(D.moveId)]));for(const D in s){const c=s[D].getMove();let G=L[D];const P=[];for(const _ of S[c.id]){if(_===Ct.ATTACKER)break;const g=this.scene.getField()[_];let H=c.getUserBenefitScore(this,g,c)+c.getTargetBenefitScore(this,g,c)*(_<Ct.ENEMY===this.isPlayer()?1:-1);if(Number.isNaN(H)&&(console.error(`Move ${c.name} returned score of NaN`),H=0),(c.name.endsWith(" (N)")||!c.applyConditions(this,g,c))&&![t.SUCKER_PUNCH,t.UPPER_HAND,t.THUNDERCLAP].includes(c.id))H=-20;else if(c instanceof d){const F=g.getMoveEffectiveness(this,c,!((R=g.battleData)!=null&&R.abilityRevealed));g.isPlayer()!==this.isPlayer()?(H*=F,this.isOfType(c.type)&&(H*=1.5)):F&&(H/=F,this.isOfType(c.type)&&(H/=1.5)),H||(H=-20)}P.push(H)}G+=Math.max(...P),L[D]=G}const o=s.slice(0);o.sort((D,M)=>{const c=L[s.indexOf(D)],G=L[s.indexOf(M)];return c<G?1:c>G?-1:0});let l=0;if(this.aiType===1)for(;l<o.length-1&&this.scene.randBattleSeedInt(8)>=5;)l++;else if(this.aiType===2)for(;l<o.length-1&&L[s.indexOf(o[l+1])]/L[s.indexOf(o[l])]>=0&&this.scene.randBattleSeedInt(100)<Math.round(L[s.indexOf(o[l+1])]/L[s.indexOf(o[l])]*50);)l++;return s.map(D=>D.getName()),o.map(D=>D.getName()),{move:o[l].moveId,targets:S[o[l].moveId]}}}return{move:t.STRUGGLE,targets:this.getNextTargets(t.STRUGGLE)}}getNextTargets(A){const s=xn(this,A),R=this.scene.getField(!0).filter(G=>s.targets.indexOf(G.getBattlerIndex())>-1);if(s.multiple)return R.map(G=>G.getBattlerIndex());const I=He[A],a=R.map(G=>[G.getBattlerIndex(),I.getTargetBenefitScore(this,G,I)*(G.isPlayer()===this.isPlayer()?1:-1)]).slice(0);if(a.sort((G,P)=>{const _=G[1],g=P[1];return _<g?1:_>g?-1:0}),!a.length)return I.hasAttr(Mi)?[Ct.ATTACKER]:[];let L=a.map(G=>G[1]);const S=L[L.length-1];if(S<1)for(let G=0;G<L.length;G++)L[G]+=Math.abs(S-1);const o=L.findIndex(G=>G<L[0]/2);o>-1&&(L=L.slice(0,o));const l=[];let D=0;L.reduce((G,P)=>(G+=P,l.push(G),D=G,G),0);const M=this.scene.randBattleSeedInt(D);let c=0;return l.every((G,P)=>M>=G?!0:(c=P,!1)),[a[c][0]]}isPlayer(){return!1}hasTrainer(){return!!this.trainerSlot}isBoss(){return!!this.bossSegments}getBossSegmentIndex(){const A=this.bossSegments,s=this.getMaxHp()/A;for(let R=A-1;R>0;R--){const I=Math.round(s*R);if(this.hp>I)return R}return 0}damage(A,s=!1,R=!1,I=!1){if(this.isFainted())return 0;let i=this.isBoss()?this.bossSegmentIndex+1:0;if(this.isBoss()&&!s){const L=this.getMaxHp()/this.bossSegments;for(let S=this.bossSegmentIndex;S>0;S--){const o=L*S,l=Math.round(o);if(this.hp>=l){if(this.hp-A<=l){const D=this.hp-l;let M=0;for(;M<this.bossSegmentIndex&&this.canBypassBossSegments(M+1)&&A-D>=Math.round(L*Math.pow(2,M+1));)M++;A=gt(this.hp-o+L*M),i=S-M}break}}}switch(this.scene.currentBattle.battleSpec){case eE.FINAL_BOSS:!this.formIndex&&this.bossSegmentIndex<1&&(A=Math.min(A,this.hp-1))}const a=super.damage(A,s,R,I);if(this.isBoss()){if(s){const L=this.getMaxHp()/this.bossSegments;i=Math.ceil(this.hp/L)}i<=this.bossSegmentIndex&&this.handleBossSegmentCleared(i),this.battleInfo.updateBossSegments(this)}return a}canBypassBossSegments(A=1){return!(this.scene.currentBattle.battleSpec===eE.FINAL_BOSS&&!this.formIndex&&this.bossSegmentIndex-A<1)}handleBossSegmentCleared(A){for(;this.bossSegmentIndex>0&&A-1<this.bossSegmentIndex;){const s=Kn.filter(o=>this.getStatStage(o)<6),R=s.map(o=>this.getStat(o,!1));let I;const i=[];let a=0;for(const o in R)a+=R[o],i.push(a);const L=le(a);for(const o in i)if(L<i[o]){I=s[o];break}let S=1;this.bossSegments>=3&&this.bossSegmentIndex===1&&S++,this.bossSegments>=5&&this.bossSegmentIndex===2&&S++,this.scene.unshiftPhase(new Ft(this.scene,this.getBattlerIndex(),!0,[I],S,!0,!0)),this.bossSegmentIndex--}}heal(A){if(this.isBoss()){const s=A/this.getMaxHp(),R=Math.floor(s/(1/this.bossSegments)),I=this.getMaxHp()/this.bossSegments;for(let i=1;i<this.bossSegments;i++){const a=I*i;if(this.hp<=Math.round(a)){const L=Math.min(A,this.getMaxHp()-this.hp,Math.round(a+I*R-this.hp));return this.hp+=L,L}else if(i>=this.bossSegmentIndex)return super.heal(A)}}return super.heal(A)}getFieldIndex(){return this.scene.getEnemyField().indexOf(this)}getBattlerIndex(){return Ct.ENEMY+this.getFieldIndex()}addToParty(A,s=-1){const R=this.scene.getParty();let I=null;if(R.length<Zv){this.pokeball=A,this.metLevel=this.level,this.metBiome=this.scene.arena.biomeType,this.metWave=this.scene.currentBattle.waveIndex,this.metSpecies=this.species.speciesId;const i=this.scene.addPlayerPokemon(this.species,this.level,this.abilityIndex,this.formIndex,this.gender,this.shiny,this.variant,this.ivs,this.nature,this);Xb(s,0,Zv-1)?(s===0&&i.setVisible(!1),R.splice(s,0,i)):R.push(i),I=i,this.scene.triggerPokemonFormChange(i,Os,!0)}return I}};T(Zm,"EnemyPokemon");let es=Zm;const Xm=class Xm{constructor(){this.statStages=[0,0,0,0,0,0,0],this.moveQueue=[],this.tags=[],this.abilitySuppressed=!1,this.abilitiesApplied=[],this.ability=O.NONE,this.passiveAbility=O.NONE,this.stats=[0,0,0,0,0,0],this.types=[]}};T(Xm,"PokemonSummonData");let gS=Xm;const Qm=class Qm{constructor(){this.hitCount=0,this.endured=!1,this.berriesEaten=[],this.abilitiesApplied=[],this.abilityRevealed=!1}};T(Qm,"PokemonBattleData");let wG=Qm;const Jm=class Jm{constructor(){this.turnCount=1,this.waveTurnCount=1,this.moveHistory=[]}};T(Jm,"PokemonBattleSummonData");let VG=Jm;const $m=class $m{constructor(){this.flinched=!1,this.acted=!1,this.hitCount=0,this.hitsLeft=-1,this.damageDealt=0,this.currDamageDealt=0,this.damageTaken=0,this.attacksReceived=[],this.statStagesIncreased=!1,this.statStagesDecreased=!1,this.moveEffectiveness=null}};T($m,"PokemonTurnData");let vG=$m;var z6=(E=>(E[E.RANDOM=0]="RANDOM",E[E.SMART_RANDOM=1]="SMART_RANDOM",E[E.SMART=2]="SMART",E))(z6||{}),DA=(E=>(E[E.PENDING=0]="PENDING",E[E.SUCCESS=1]="SUCCESS",E[E.FAIL=2]="FAIL",E[E.MISS=3]="MISS",E[E.OTHER=4]="OTHER",E))(DA||{}),Pt=(E=>(E[E.EFFECTIVE=1]="EFFECTIVE",E[E.SUPER_EFFECTIVE=2]="SUPER_EFFECTIVE",E[E.NOT_VERY_EFFECTIVE=3]="NOT_VERY_EFFECTIVE",E[E.ONE_HIT_KO=4]="ONE_HIT_KO",E[E.NO_EFFECT=5]="NO_EFFECT",E[E.STATUS=6]="STATUS",E[E.HEAL=7]="HEAL",E[E.FAIL=8]="FAIL",E[E.MISS=9]="MISS",E[E.OTHER=10]="OTHER",E[E.IMMUNE=11]="IMMUNE",E))(Pt||{});const hM=class hM{constructor(A,s=0,R=0,I=!1,i){this.moveId=A,this.ppUsed=s,this.ppUp=R,this.virtual=I,this.maxPpOverride=i}isUsable(A,s=!1,R=!1){return this.moveId&&!R&&A.isMoveRestricted(this.moveId,A)||this.getMove().name.endsWith(" (N)")?!1:s||this.ppUsed<this.getMovePp()||this.getMove().pp===-1}getMove(){return He[this.moveId]}usePp(A=1){this.ppUsed=Math.min(this.ppUsed+A,this.getMovePp())}getMovePp(){return this.maxPpOverride||this.getMove().pp+this.ppUp*gt(this.getMove().pp/5)}getPpRatio(){return 1-this.ppUsed/this.getMovePp()}getName(){return this.getMove().name}static loadMove(A){return new hM(A.moveId,A.ppUsed,A.ppUp,A.virtual,A.maxPpOverride)}};T(hM,"PokemonMove");let ke=hM;const qm=class qm{constructor(A,s){this.id=A,this.nameAppend="",this.generation=s,this.attrs=[],this.conditions=[],this.localize()}localize(){const A=O[this.id].split("_").filter(s=>s).map((s,R)=>R?`${s[0]}${s.slice(1).toLowerCase()}`:s.toLowerCase()).join("");this.name=this.id?`${U.t(`ability:${A}.name`)}${this.nameAppend}`:"",this.description=this.id?U.t(`ability:${A}.description`):""}getAttrs(A){return this.attrs.filter(s=>s instanceof A)}hasAttr(A){return this.attrs.some(s=>s instanceof A)}attr(A,...s){const R=new A(...s);return this.attrs.push(R),this}conditionalAttr(A,s,...R){const I=new s(...R);return I.addCondition(A),this.attrs.push(I),this}bypassFaint(){return this.isBypassFaint=!0,this}ignorable(){return this.isIgnorable=!0,this}condition(A){return this.conditions.push(A),this}partial(){return this.nameAppend+=" (P)",this}unimplemented(){return this.nameAppend+=" (N)",this}edgeCase(){return this}};T(qm,"Ability");let X=qm;const jm=class jm{constructor(A=!0){this.showAbility=A}apply(A,s,R,I,i){return!1}getTriggerMessage(A,s,...R){return null}getCondition(){return this.extraCondition||null}addCondition(A){return this.extraCondition=A,this}};T(jm,"AbAttr");let ze=jm;const zm=class zm extends ze{apply(A,s,R,I,i){return I.value=!0,!0}getTriggerMessage(A,s,...R){return U.t("abilityTriggers:blockRecoilDamage",{pokemonName:b(A),abilityName:s})}};T(zm,"BlockRecoilDamageAttr");let yC=zm;const eW=class eW extends ze{constructor(){super(!1)}apply(A,s,R,I,i){const a=i[0];return a.value=a.value/4,!0}};T(eW,"DoubleBattleChanceAbAttr");let Ja=eW;const tW=class tW extends ze{applyPostBattleInit(A,s,R,I){return!1}};T(tW,"PostBattleInitAbAttr");let WL=tW;const AW=class AW extends WL{constructor(A){super(!0),this.formFunc=A}applyPostBattleInit(A,s,R,I){return this.formFunc(A)!==A.formIndex&&!R?A.scene.triggerPokemonFormChange(A,_t,!1):!1}};T(AW,"PostBattleInitFormChangeAbAttr");let lO=AW;const EW=class EW extends WL{constructor(A,s,R){super(),this.stats=A,this.stages=s,this.selfTarget=!!R}applyPostBattleInit(A,s,R,I){var a;const i=[];if(!R){if(this.selfTarget)i.push(new Ft(A.scene,A.getBattlerIndex(),!0,this.stats,this.stages));else for(const L of A.getOpponents())i.push(new Ft(A.scene,L.getBattlerIndex(),!1,this.stats,this.stages));for(const L of i)!this.selfTarget&&!((a=L.getPokemon())!=null&&a.summonData)?A.scene.pushPhase(L):A.scene.unshiftPhase(L)}return!0}};T(EW,"PostBattleInitStatStageChangeAbAttr");let Ba=EW;const sW=class sW extends ze{applyPreDefend(A,s,R,I,i,a,L){return!1}};T(sW,"PreDefendAbAttr");let Nn=sW;const RW=class RW extends Nn{applyPreDefend(A,s,R,I,i,a,L){return A.isFullHp()&&A.getMaxHp()>1&&L[0].value>=A.hp?R||A.addTag(Y.STURDY,1):!1}};T(RW,"PreDefendFullHpEndureAbAttr");let wC=RW;const OW=class OW extends ze{apply(A,s,R,I,i){return I.value=!0,!0}getTriggerMessage(A,s,...R){return U.t("abilityTriggers:blockItemTheft",{pokemonNameWithAffix:b(A),abilityName:s})}};T(OW,"BlockItemTheftAbAttr");let YL=OW;const nW=class nW extends ze{apply(A,s,R,I,i){return i[0].value>1?(i[0].value+=.5,!0):!1}};T(nW,"StabBoostAbAttr");let VC=nW;const IW=class IW extends Nn{constructor(A,s){super(),this.condition=A,this.damageMultiplier=s}applyPreDefend(A,s,R,I,i,a,L){return this.condition(A,I,i)?(L[0].value=gt(L[0].value*this.damageMultiplier),!0):!1}};T(IW,"ReceivedMoveDamageMultiplierAbAttr");let qs=IW;const iW=class iW extends qs{constructor(A,s){super((R,I,i)=>I.getMoveType(i)===A,s)}};T(iW,"ReceivedTypeDamageMultiplierAbAttr");let OI=iW;const aW=class aW extends Nn{constructor(A,s){super(),this.immuneType=A,this.condition=s??null}applyPreDefend(A,s,R,I,i,a,L){return[qE.BOTH_SIDES,qE.ENEMY_SIDE,qE.USER_SIDE].includes(i.moveTarget)?!1:I!==A&&I.getMoveType(i)===this.immuneType?(L[0].value=0,!0):!1}getImmuneType(){return this.immuneType}getCondition(){return this.condition}};T(aW,"TypeImmunityAbAttr");let eO=aW;const LW=class LW extends eO{constructor(A,s){super(A,s)}applyPreDefend(A,s,R,I,i,a,L){return i.category!==Ot.STATUS&&!i.hasAttr(YD)?super.applyPreDefend(A,s,R,I,i,a,L):!1}};T(LW,"AttackTypeImmunityAbAttr");let xG=LW;const rW=class rW extends eO{constructor(A){super(A)}applyPreDefend(A,s,R,I,i,a,L){if(super.applyPreDefend(A,s,R,I,i,a,L)){if(!A.isFullHp()&&!R){const o=(s?A.getPassiveAbility():A.getAbility()).name;A.scene.unshiftPhase(new CE(A.scene,A.getBattlerIndex(),gt(A.getMaxHp()/4),U.t("abilityTriggers:typeImmunityHeal",{pokemonNameWithAffix:b(A),abilityName:o}),!0)),a.value=!0}return!0}return!1}};T(rW,"TypeImmunityHealAbAttr");let ga=rW;const NW=class NW extends eO{constructor(A,s,R,I){super(A,I),this.stat=s,this.stages=R}applyPreDefend(A,s,R,I,i,a,L){const S=super.applyPreDefend(A,s,R,I,i,a,L);return S&&(a.value=!0,R||A.scene.unshiftPhase(new Ft(A.scene,A.getBattlerIndex(),!0,[this.stat],this.stages))),S}};T(NW,"TypeImmunityStatStageChangeAbAttr");let Ai=NW;const TW=class TW extends eO{constructor(A,s,R,I){super(A,I),this.tagType=s,this.turnCount=R}applyPreDefend(A,s,R,I,i,a,L){const S=super.applyPreDefend(A,s,R,I,i,a,L);return S&&(a.value=!0,R||A.addTag(this.tagType,this.turnCount,void 0,A.id)),S}};T(TW,"TypeImmunityAddBattlerTagAbAttr");let bG=TW;const SW=class SW extends eO{constructor(A){super(null,A)}applyPreDefend(A,s,R,I,i,a,L){return i instanceof d&&A.getAttackTypeEffectiveness(I.getMoveType(i),I)<2?(a.value=!0,L[0].value=0,!0):!1}getTriggerMessage(A,s,...R){return U.t("abilityTriggers:nonSuperEffectiveImmunity",{pokemonNameWithAffix:b(A),abilityName:s})}};T(SW,"NonSuperEffectiveImmunityAbAttr");let kG=SW;const oW=class oW extends Nn{applyPreDefend(A,s,R,I,i,a,L){const S=L[0];return!(S&&S instanceof $e)||i&&i.hasAttr(ZR)?!1:A.isFullHp()&&S.value>.5?(S.value=.5,A.turnData.moveEffectiveness=.5,!0):!1}getTriggerMessage(A,s,...R){return U.t("abilityTriggers:fullHpResistType",{pokemonNameWithAffix:b(A)})}};T(oW,"FullHpResistTypeAbAttr");let vC=oW;const lW=class lW extends ze{applyPostDefend(A,s,R,I,i,a,L){return!1}};T(lW,"PostDefendAbAttr");let YE=lW;const CW=class CW extends Nn{applyPreDefend(A,s,R,I,i,a,L){const S=new Jt(i.priority);return eA(Ia,I,null,i,S),Et(zR,I,null,R,i,S),i.moveTarget===qE.USER||i.moveTarget===qE.NEAR_ALLY?!1:S.value>0&&!i.isMultiTarget()?(a.value=!0,!0):!1}};T(CW,"FieldPriorityMoveImmunityAbAttr");let $a=CW;const UW=class UW extends ze{applyPostStatStageChange(A,s,R,I,i,a){return!1}};T(UW,"PostStatStageChangeAbAttr");let xC=UW;const DW=class DW extends Nn{constructor(A){super(!0),this.immuneCondition=A}applyPreDefend(A,s,R,I,i,a,L){return this.immuneCondition(A,I,i)?(a.value=!0,!0):!1}getTriggerMessage(A,s,...R){return U.t("abilityTriggers:moveImmunity",{pokemonNameWithAffix:b(A)})}};T(DW,"MoveImmunityAbAttr");let Gn=DW;const MW=class MW extends Nn{applyPreDefend(A,s,R,I,i,a,L){const S=L[0];return i.category===Ot.STATUS&&S.value>=50?(S.value=50,!0):!1}};T(MW,"WonderSkinAbAttr");let bC=MW;const uW=class uW extends Gn{constructor(A,s,R){super(A),this.stat=s,this.stages=R}applyPreDefend(A,s,R,I,i,a,L){const S=super.applyPreDefend(A,s,R,I,i,a,L);return S&&!R&&A.scene.unshiftPhase(new Ft(A.scene,A.getBattlerIndex(),!0,[this.stat],this.stages)),S}};T(uW,"MoveImmunityStatStageChangeAbAttr");let ZG=uW;const hW=class hW extends YE{applyPostDefend(A,s,R,I,i,a,L){return i.hasAttr(Ps)&&!i.hitsSubstitute(I,A)?(R||A.scene.queueMessage(U.t("abilityTriggers:reverseDrain",{pokemonNameWithAffix:b(I)})),!0):!1}};T(hW,"ReverseDrainAbAttr");let KS=hW;const cW=class cW extends YE{constructor(A,s,R,I=!0,i=!1){super(!0),this.condition=A,this.stat=s,this.stages=R,this.selfTarget=I,this.allOthers=i}applyPostDefend(A,s,R,I,i,a,L){if(this.condition(A,I,i)&&!i.hitsSubstitute(I,A)){if(R)return!0;if(this.allOthers){const S=A.getAlly()?A.getOpponents().concat([A.getAlly()]):A.getOpponents();for(const o of S)o.scene.unshiftPhase(new Ft(o.scene,o.getBattlerIndex(),!1,[this.stat],this.stages));return!0}return A.scene.unshiftPhase(new Ft(A.scene,(this.selfTarget?A:I).getBattlerIndex(),this.selfTarget,[this.stat],this.stages)),!0}return!1}};T(cW,"PostDefendStatStageChangeAbAttr");let fR=cW;const GW=class GW extends YE{constructor(A,s,R,I,i=!0){super(!0),this.condition=A,this.hpGate=s,this.stats=R,this.stages=I,this.selfTarget=i}applyPostDefend(A,s,R,I,i,a,L){const S=Math.ceil(A.getMaxHp()*this.hpGate),o=A.turnData.attacksReceived[A.turnData.attacksReceived.length-1],l=(o==null?void 0:o.damage)||0;return this.condition(A,I,i)&&A.hp<=S&&A.hp+l>S&&!i.hitsSubstitute(I,A)?(R||A.scene.unshiftPhase(new Ft(A.scene,(this.selfTarget?A:I).getBattlerIndex(),!0,this.stats,this.stages)),!0):!1}};T(GW,"PostDefendHpGatedStatStageChangeAbAttr");let dr=GW;const PW=class PW extends YE{constructor(A,s){super(!0),this.condition=A,this.tagType=s}applyPostDefend(A,s,R,I,i,a,L){if(this.condition(A,I,i)&&!i.hitsSubstitute(I,A)){const S=A.scene.arena.getTag(this.tagType);if(!A.scene.arena.getTag(this.tagType)||S.layers<S.maxLayers)return R||A.scene.arena.addTag(this.tagType,0,void 0,A.id,A.isPlayer()?et.ENEMY:et.PLAYER),!0}return!1}};T(PW,"PostDefendApplyArenaTrapTagAbAttr");let XG=PW;const _W=class _W extends YE{constructor(A,s){super(!0),this.condition=A,this.tagType=s}applyPostDefend(A,s,R,I,i,a,L){return this.condition(A,I,i)&&!i.hitsSubstitute(I,A)?(!A.getTag(this.tagType)&&!R&&(A.addTag(this.tagType,void 0,void 0,A.id),A.scene.queueMessage(U.t("abilityTriggers:windPowerCharged",{pokemonName:b(A),moveName:i.name}))),!0):!1}};T(_W,"PostDefendApplyBattlerTagAbAttr");let kC=_W;const HW=class HW extends YE{applyPostDefend(A,s,R,I,i,a,L){if(a<Pt.NO_EFFECT&&!i.hitsSubstitute(I,A)){if(R)return!0;const S=I.getMoveType(i),o=A.getTypes(!0);if(o.length!==1||o[0]!==S)return A.summonData.types=[S],!0}return!1}getTriggerMessage(A,s,...R){return U.t("abilityTriggers:postDefendTypeChange",{pokemonNameWithAffix:b(A),abilityName:s,typeName:U.t(`pokemonInfo:Type.${n[A.getTypes(!0)[0]]}`)})}};T(HW,"PostDefendTypeChangeAbAttr");let QG=HW;const dW=class dW extends YE{constructor(A){super(),this.terrainType=A}applyPostDefend(A,s,R,I,i,a,L){var S;return a<Pt.NO_EFFECT&&!i.hitsSubstitute(I,A)?R?((S=A.scene.arena.terrain)==null?void 0:S.terrainType)!==(this.terrainType||void 0):A.scene.arena.trySetTerrain(this.terrainType,!0):!1}};T(dW,"PostDefendTerrainChangeAbAttr");let JG=dW;const fW=class fW extends YE{constructor(A,...s){super(),this.chance=A,this.effects=s}applyPostDefend(A,s,R,I,i,a,L){if(i.checkFlag(pt.MAKES_CONTACT,I,A)&&!I.status&&(this.chance===-1||A.randSeedInt(100)<this.chance)&&!i.hitsSubstitute(I,A)){const S=this.effects.length===1?this.effects[0]:this.effects[A.randSeedInt(this.effects.length)];return R?I.canSetStatus(S,!0,!1,A):I.trySetStatus(S,!0,A)}return!1}};T(fW,"PostDefendContactApplyStatusEffectAbAttr");let qa=fW;const BW=class BW extends qa{constructor(){super(10,J.POISON,J.PARALYSIS,J.SLEEP)}applyPostDefend(A,s,R,I,i,a,L){return I.hasAbility(O.OVERCOAT)||I.isOfType(n.GRASS)?!1:super.applyPostDefend(A,s,R,I,i,a,L)}};T(BW,"EffectSporeAbAttr");let $G=BW;const gW=class gW extends YE{constructor(A,s,R){super(),this.tagType=s,this.chance=A,this.turnCount=R}applyPostDefend(A,s,R,I,i,a,L){return i.checkFlag(pt.MAKES_CONTACT,I,A)&&A.randSeedInt(100)<this.chance&&!i.hitsSubstitute(I,A)?R?I.canAddTag(this.tagType):I.addTag(this.tagType,this.turnCount,i.id,I.id):!1}};T(gW,"PostDefendContactApplyTagChanceAbAttr");let qG=gW;const KW=class KW extends YE{constructor(A,s){super(),this.stat=A,this.stages=s}applyPostDefend(A,s,R,I,i,a,L){return i.hitsSubstitute(I,A)?!1:(R||A.scene.unshiftPhase(new Ft(A.scene,A.getBattlerIndex(),!0,[this.stat],this.stages)),!0)}getCondition(){return A=>A.turnData.attacksReceived.length!==0&&A.turnData.attacksReceived[A.turnData.attacksReceived.length-1].critical}};T(KW,"PostDefendCritStatStageChangeAbAttr");let jG=KW;const FW=class FW extends YE{constructor(A){super(),this.damageRatio=A}applyPostDefend(A,s,R,I,i,a,L){return!R&&i.checkFlag(pt.MAKES_CONTACT,I,A)&&!I.hasAbilityWithAttr(rE)&&!i.hitsSubstitute(I,A)?(I.damageAndUpdate(gt(I.getMaxHp()*(1/this.damageRatio)),Pt.OTHER),I.turnData.damageTaken+=gt(I.getMaxHp()*(1/this.damageRatio)),!0):!1}getTriggerMessage(A,s,...R){return U.t("abilityTriggers:postDefendContactDamage",{pokemonNameWithAffix:b(A),abilityName:s})}};T(FW,"PostDefendContactDamageAbAttr");let ZC=FW;const mW=class mW extends YE{constructor(A){super(),this.turns=A}applyPostDefend(A,s,R,I,i,a,L){return i.checkFlag(pt.MAKES_CONTACT,I,A)&&!i.hitsSubstitute(I,A)?A.getTag(Y.PERISH_SONG)||I.getTag(Y.PERISH_SONG)?!1:(R||(I.addTag(Y.PERISH_SONG,this.turns),A.addTag(Y.PERISH_SONG,this.turns)),!0):!1}getTriggerMessage(A,s,...R){return U.t("abilityTriggers:perishBody",{pokemonName:b(A),abilityName:s})}};T(mW,"PostDefendPerishSongAbAttr");let zG=mW;const WW=class WW extends YE{constructor(A,s){super(),this.weatherType=A,this.condition=s}applyPostDefend(A,s,R,I,i,a,L){var S,o;return this.condition&&!this.condition(A,I,i)||i.hitsSubstitute(I,A)||(S=A.scene.arena.weather)!=null&&S.isImmutable()?!1:R?((o=A.scene.arena.weather)==null?void 0:o.weatherType)!==this.weatherType:A.scene.arena.trySetWeather(this.weatherType,!0)}};T(WW,"PostDefendWeatherChangeAbAttr");let eP=WW;const YW=class YW extends YE{constructor(){super()}applyPostDefend(A,s,R,I,i,a,L){if(i.checkFlag(pt.MAKES_CONTACT,I,A)&&!I.getAbility().hasAttr(nA)&&!i.hitsSubstitute(I,A)){if(!R){const S=I.getAbility().id;I.summonData.ability=A.getAbility().id,A.summonData.ability=S}return!0}return!1}getTriggerMessage(A,s,...R){return U.t("abilityTriggers:postDefendAbilitySwap",{pokemonNameWithAffix:b(A)})}};T(YW,"PostDefendAbilitySwapAbAttr");let tP=YW;const cM=class cM extends YE{constructor(A){super(),this.ability=A}applyPostDefend(A,s,R,I,i,a,L){return i.checkFlag(pt.MAKES_CONTACT,I,A)&&!I.getAbility().hasAttr(qA)&&!I.getAbility().hasAttr(cM)&&!i.hitsSubstitute(I,A)?(R||(I.summonData.ability=this.ability),!0):!1}getTriggerMessage(A,s,...R){return U.t("abilityTriggers:postDefendAbilityGive",{pokemonNameWithAffix:b(A),abilityName:s})}};T(cM,"PostDefendAbilityGiveAbAttr");let XC=cM;const pW=class pW extends YE{constructor(A){super(),this.chance=A}applyPostDefend(A,s,R,I,i,a,L){return I.getTag(Y.DISABLED)===null&&!i.hitsSubstitute(I,A)&&i.checkFlag(pt.MAKES_CONTACT,I,A)&&(this.chance===-1||A.randSeedInt(100)<this.chance)?(R||(this.attacker=I,this.move=i,this.attacker.addTag(Y.DISABLED,4,0,A.id)),!0):!1}};T(pW,"PostDefendMoveDisableAbAttr");let AP=pW;const yW=class yW extends xC{constructor(A,s,R){super(!0),this.condition=A,this.statsToChange=s,this.stages=R}applyPostStatStageChange(A,s,R,I,i,a){return this.condition(A,R,I)&&!i?(s||A.scene.unshiftPhase(new Ft(A.scene,A.getBattlerIndex(),!0,this.statsToChange,this.stages)),!0):!1}};T(yW,"PostStatStageChangeStatStageChangeAbAttr");let QC=yW;const wW=class wW extends ze{applyPreAttack(A,s,R,I,i,a){return!1}};T(wW,"PreAttackAbAttr");let Ea=wW;const VW=class VW extends ze{constructor(A){super(!0),this.chanceMultiplier=A}apply(A,s,R,I,i){this.showAbility=i[4];const a=[t.ORDER_UP,t.ELECTRO_SHOT];return i[0].value<=0||a.includes(i[1].id)?!1:(i[0].value*=this.chanceMultiplier,i[0].value=Math.min(i[0].value,100),!0)}};T(VW,"MoveEffectChanceMultiplierAbAttr");let FS=VW;const vW=class vW extends Nn{applyPreDefend(A,s,R,I,i,a,L){return L[0].value<=0?!1:(L[0].value=0,!0)}};T(vW,"IgnoreMoveEffectsAbAttr");let wI=vW;const xW=class xW extends Ea{applyPreAttack(A,s,R,I,i,a){return!1}};T(xW,"VariableMovePowerAbAttr");let mS=xW;const bW=class bW extends ze{apply(A,s,R,I,i){return I.value=!0,!0}};T(bW,"FieldPreventExplosiveMovesAbAttr");let WS=bW;const GM=class GM extends ze{constructor(A,s,R=!1){super(!1),this.stat=A,this.multiplier=s,this.canStack=R}applyFieldStat(A,s,R,I,i,a,L,S){return!this.canStack&&L.value?!1:this.stat===I&&a.getAbilityAttrs(GM).every(o=>o.stat!==I)?(i.value*=this.multiplier,L.value=!0,!0):!1}};T(GM,"FieldMultiplyStatAbAttr");let oi=GM;const kW=class kW extends Ea{constructor(A,s,R){super(!0),this.newType=A,this.powerMultiplier=s,this.condition=R}applyPreAttack(A,s,R,I,i,a){return this.condition&&this.condition(A,I,i)?(a[0]&&a[0]instanceof $e&&(a[0].value=this.newType),a[1]&&a[1]instanceof $e&&(a[1].value*=this.powerMultiplier),!0):!1}};T(kW,"MoveTypeChangeAbAttr");let $O=kW;const ZW=class ZW extends Ea{constructor(){super(!0)}applyPreAttack(A,s,R,I,i,a){if(!A.isTerastallized()&&i.id!==t.STRUGGLE&&!i.findAttr(L=>L instanceof ro||L instanceof kD||L instanceof ZD||L instanceof QL)){const L=A.getMoveType(i);if(A.getTypes().some(S=>S!==L))return R||(this.moveType=L,A.summonData.types=[L],A.updateInfo()),!0}return!1}getTriggerMessage(A,s,...R){return U.t("abilityTriggers:pokemonTypeChange",{pokemonNameWithAffix:b(A),moveType:U.t(`pokemonInfo:Type.${n[this.moveType]}`)})}};T(ZW,"PokemonTypeChangeAbAttr");let _i=ZW;const XW=class XW extends Ea{constructor(A){super(!1),this.damageMultiplier=A}canApplyPreAttack(A,s){const R=[jt,fn,HI],I=[t.FLING,t.UPROAR,t.ROLLOUT,t.ICE_BALL,t.ENDEAVOR];return s===1&&!A.isChargingMove()&&!R.some(i=>A.hasAttr(i))&&!I.some(i=>A.id===i)&&A.category!==Ot.STATUS}applyPreAttack(A,s,R,I,i,a){const L=a[0],S=a[1],o=a[2];return this.canApplyPreAttack(i,L)?(this.showAbility=!!(S!=null&&S.value),S!=null&&S.value&&(S.value*=2),o!=null&&o.value&&A.turnData.hitsLeft%2===1&&A.turnData.hitsLeft!==A.turnData.hitCount&&(o.value*=this.damageMultiplier),!0):!1}};T(XW,"AddSecondStrikeAbAttr");let YS=XW;const QW=class QW extends Ea{constructor(A,s){super(!0),this.damageMultiplier=A,this.condition=s}applyPreAttack(A,s,R,I,i,a){if(this.condition(A,I,i)){const L=a[0];return L.value=Math.floor(L.value*this.damageMultiplier),!0}return!1}};T(QW,"DamageBoostAbAttr");let JC=QW;const JW=class JW extends mS{constructor(A,s,R=!0){super(R),this.condition=A,this.powerMultiplier=s}applyPreAttack(A,s,R,I,i,a){return this.condition(A,I,i)?(a[0].value*=this.powerMultiplier,!0):!1}};T(JW,"MovePowerBoostAbAttr");let kE=JW;const $W=class $W extends kE{constructor(A,s){super((R,I,i)=>(R==null?void 0:R.getMoveType(i))===A,s||1.5)}};T($W,"MoveTypePowerBoostAbAttr");let MO=$W;const qW=class qW extends MO{constructor(A){super(A)}getCondition(){return A=>A.getHpRatio()<=.33}};T(qW,"LowHpMoveTypePowerBoostAbAttr");let Ka=qW;const jW=class jW extends mS{constructor(A,s=!0){super(s),this.mult=A}applyPreAttack(A,s,R,I,i,a){const L=this.mult(A,I,i);return L!==1?(a[0].value*=L,!0):!1}};T(jW,"VariableMovePowerBoostAbAttr");let EP=jW;const zW=class zW extends ze{constructor(A,s){super(!1),this.condition=A,this.powerMultiplier=s}applyPreAttack(A,s,R,I,i,a){return this.condition(A,I,i)?(a[0].value*=this.powerMultiplier,!0):!1}};T(zW,"FieldMovePowerBoostAbAttr");let $C=zW;const eY=class eY extends $C{constructor(A,s){super((R,I,i)=>(R==null?void 0:R.getMoveType(i))===A,s||1.5)}};T(eY,"PreAttackFieldMoveTypePowerBoostAbAttr");let qC=eY;const tY=class tY extends qC{};T(tY,"FieldMoveTypePowerBoostAbAttr");let li=tY;const AY=class AY extends qC{};T(AY,"UserFieldMoveTypePowerBoostAbAttr");let jC=AY;const EY=class EY extends $C{constructor(A,s){super((R,I,i)=>A.includes(i.category),s)}};T(EY,"AllyMoveCategoryPowerBoostAbAttr");let pS=EY;const sY=class sY extends ze{constructor(A,s,R){super(!1),this.stat=A,this.multiplier=s,this.condition=R??null}applyStatStage(A,s,R,I,i,a){const L=a[0];return I===this.stat&&(!this.condition||this.condition(A,null,L))?(i.value*=this.multiplier,!0):!1}};T(sY,"StatMultiplierAbAttr");let SA=sY;const RY=class RY extends ze{constructor(A=(R,I,i)=>i.category!==Ot.STATUS,s=!0){super(s),this.attackCondition=A}applyPostAttack(A,s,R,I,i,a,L){return this.attackCondition(A,I,i)?this.applyPostAttackAfterMoveTypeCheck(A,s,R,I,i,a,L):!1}applyPostAttackAfterMoveTypeCheck(A,s,R,I,i,a,L){return!1}};T(RY,"PostAttackAbAttr");let VI=RY;const OY=class OY extends VI{constructor(){super((A,s,R)=>!0,!1)}applyPostAttackAfterMoveTypeCheck(A,s,R,I,i,a,L){return R||(A.getTag(Y.GORILLA_TACTICS)?!1:(A.addTag(Y.GORILLA_TACTICS),!0))}};T(OY,"GorillaTacticsAbAttr");let sP=OY;const nY=class nY extends VI{constructor(A){super(),this.stealCondition=A??null}applyPostAttackAfterMoveTypeCheck(A,s,R,I,i,a,L){return new Promise(S=>{if(!R&&a<Pt.NO_EFFECT&&(!this.stealCondition||this.stealCondition(A,I,i))){const o=this.getTargetHeldItems(I).filter(l=>l.isTransferable);if(o.length){const l=o[A.randSeedInt(o.length)];A.scene.tryTransferHeldItemModifier(l,A,!1).then(D=>{D&&A.scene.queueMessage(U.t("abilityTriggers:postAttackStealHeldItem",{pokemonNameWithAffix:b(A),defenderName:I.name,stolenItemType:l.type.name})),S(D)});return}}S(R)})}getTargetHeldItems(A){return A.scene.findModifiers(s=>s instanceof at&&s.pokemonId===A.id,A.isPlayer())}};T(nY,"PostAttackStealHeldItemAbAttr");let RP=nY;const IY=class IY extends VI{constructor(A,s,...R){super(),this.contactRequired=A,this.chance=s,this.effects=R}applyPostAttackAfterMoveTypeCheck(A,s,R,I,i,a,L){if(A!==I&&i.hitsSubstitute(I,A))return!1;if(!I.hasAbilityWithAttr(wI)&&!R&&A!==I&&(!this.contactRequired||i.checkFlag(pt.MAKES_CONTACT,I,A))&&A.randSeedInt(100)<this.chance&&!A.status){const S=this.effects.length===1?this.effects[0]:this.effects[A.randSeedInt(this.effects.length)];return I.trySetStatus(S,!0,A)}return R}};T(IY,"PostAttackApplyStatusEffectAbAttr");let zC=IY;const iY=class iY extends zC{constructor(A,...s){super(!0,A,...s)}};T(iY,"PostAttackContactApplyStatusEffectAbAttr");let OP=iY;const aY=class aY extends VI{constructor(A,s,...R){super(),this.contactRequired=A,this.chance=s,this.effects=R}applyPostAttackAfterMoveTypeCheck(A,s,R,I,i,a,L){if(!I.hasAbilityWithAttr(wI)&&A!==I&&(!this.contactRequired||i.checkFlag(pt.MAKES_CONTACT,I,A))&&A.randSeedInt(100)<this.chance(I,A,i)&&!A.status){const S=this.effects.length===1?this.effects[0]:this.effects[A.randSeedInt(this.effects.length)];return R||I.addTag(S)}return!1}};T(aY,"PostAttackApplyBattlerTagAbAttr");let nP=aY;const LY=class LY extends YE{constructor(A){super(),this.condition=A}applyPostDefend(A,s,R,I,i,a,L){return new Promise(S=>{if(!R&&a<Pt.NO_EFFECT&&(!this.condition||this.condition(A,I,i))&&!i.hitsSubstitute(I,A)){const o=this.getTargetHeldItems(I).filter(l=>l.isTransferable);if(o.length){const l=o[A.randSeedInt(o.length)];A.scene.tryTransferHeldItemModifier(l,A,!1).then(D=>{D&&A.scene.queueMessage(U.t("abilityTriggers:postDefendStealHeldItem",{pokemonNameWithAffix:b(A),attackerName:I.name,stolenItemType:l.type.name})),S(D)});return}}S(R)})}getTargetHeldItems(A){return A.scene.findModifiers(s=>s instanceof at&&s.pokemonId===A.id,A.isPlayer())}};T(LY,"PostDefendStealHeldItemAbAttr");let IP=LY;const rY=class rY extends ze{applyPostSetStatus(A,s=null,R,I,i,a){return!1}};T(rY,"PostSetStatusAbAttr");let eU=rY;const NY=class NY extends eU{applyPostSetStatus(A,s=null,R,I,i,a){const L=new Set([J.BURN,J.PARALYSIS,J.POISON,J.TOXIC]);return s&&L.has(I)?(i||s.trySetStatus(I,!0,A),!0):!1}};T(NY,"SynchronizeStatusAbAttr");let iP=NY;const TY=class TY extends ze{applyPostVictory(A,s,R,I){return!1}};T(TY,"PostVictoryAbAttr");let yS=TY;const SY=class SY extends yS{constructor(A,s){super(),this.stat=A,this.stages=s}applyPostVictory(A,s,R,I){const i=typeof this.stat=="function"?this.stat(A):this.stat;return R||A.scene.unshiftPhase(new Ft(A.scene,A.getBattlerIndex(),!0,[i],this.stages)),!0}};T(SY,"PostVictoryStatStageChangeAbAttr");let nI=SY;const oY=class oY extends yS{constructor(A){super(!0),this.formFunc=A}applyPostVictory(A,s,R,I){return this.formFunc(A)!==A.formIndex?(R||A.scene.triggerPokemonFormChange(A,_t,!1),!0):!1}};T(oY,"PostVictoryFormChangeAbAttr");let aP=oY;const lY=class lY extends ze{applyPostKnockOut(A,s,R,I,i){return!1}};T(lY,"PostKnockOutAbAttr");let wS=lY;const CY=class CY extends wS{constructor(A,s){super(),this.stat=A,this.stages=s}applyPostKnockOut(A,s,R,I,i){const a=typeof this.stat=="function"?this.stat(A):this.stat;return R||A.scene.unshiftPhase(new Ft(A.scene,A.getBattlerIndex(),!0,[a],this.stages)),!0}};T(CY,"PostKnockOutStatStageChangeAbAttr");let LP=CY;const UY=class UY extends wS{constructor(){super()}applyPostKnockOut(A,s,R,I,i){return A.isPlayer()===I.isPlayer()&&!I.getAbility().hasAttr(Vt)?(R||(A.summonData.ability=I.getAbility().id,A.scene.queueMessage(U.t("abilityTriggers:copyFaintedAllyAbility",{pokemonNameWithAffix:b(I),abilityName:jA[I.getAbility().id].name}))),!0):!1}};T(UY,"CopyFaintedAllyAbilityAbAttr");let tU=UY;const DY=class DY extends ze{constructor(A){super(!1),this.stats=A??rO}apply(A,s,R,I,i){return this.stats.includes(i[0])?(i[1].value=!0,!0):!1}};T(DY,"IgnoreOpponentStatStagesAbAttr");let Hi=DY;const MY=class MY extends ze{constructor(){super(!1)}apply(A,s,R,I,i){return I.value=!0,!0}getTriggerMessage(A,s,...R){return U.t("abilityTriggers:intimidateImmunity",{pokemonNameWithAffix:b(A),abilityName:s})}};T(MY,"IntimidateImmunityAbAttr");let Ci=MY;const uY=class uY extends ze{constructor(A,s,R){super(!0),this.stats=A,this.stages=s,this.overwrites=!!R}apply(A,s,R,I,i){return R||A.scene.pushPhase(new Ft(A.scene,A.getBattlerIndex(),!1,this.stats,this.stages)),I.value=this.overwrites,!0}};T(uY,"PostIntimidateStatStageChangeAbAttr");let VS=uY;const hY=class hY extends ze{applyPostSummon(A,s,R,I){return!1}};T(hY,"PostSummonAbAttr");let UE=hY;const cY=class cY extends UE{constructor(A){super(!0),this.arenaTags=A}applyPostSummon(A,s,R,I){if(!R)for(const i of this.arenaTags)A.scene.arena.removeTag(i);return!0}};T(cY,"PostSummonRemoveArenaTagAbAttr");let rP=cY;const GY=class GY extends UE{constructor(A){super(!0),this.messageFunc=A}applyPostSummon(A,s,R,I){return R||A.scene.queueMessage(this.messageFunc(A)),!0}};T(GY,"PostSummonMessageAbAttr");let Gs=GY;const PY=class PY extends UE{constructor(A){super(!0),this.message=A}applyPostSummon(A,s,R,I){return R||A.scene.queueMessage(this.message),!0}};T(PY,"PostSummonUnnamedMessageAbAttr");let AU=PY;const _Y=class _Y extends UE{constructor(A,s,R){super(R),this.tagType=A,this.turnCount=s}applyPostSummon(A,s,R,I){return R?A.canAddTag(this.tagType):A.addTag(this.tagType,this.turnCount)}};T(_Y,"PostSummonAddBattlerTagAbAttr");let Dn=_Y;const HY=class HY extends UE{constructor(A,s,R,I){super(!1),this.stats=A,this.stages=s,this.selfTarget=!!R,this.intimidate=!!I}applyPostSummon(A,s,R,I){if(R)return!0;if(Y1(A,s),this.selfTarget)return A.scene.unshiftPhase(new Ft(A.scene,A.getBattlerIndex(),!0,this.stats,this.stages)),!0;for(const i of A.getOpponents()){const a=new je(!1);this.intimidate&&(Et(Ci,i,a,R),Et(VS,i,a,R),i.getTag(Y.SUBSTITUTE)&&(a.value=!0)),a.value||A.scene.unshiftPhase(new Ft(A.scene,i.getBattlerIndex(),!1,this.stats,this.stages))}return!0}};T(HY,"PostSummonStatStageChangeAbAttr");let Ui=HY;const dY=class dY extends UE{constructor(A,s=!1){super(),this.healRatio=A||4,this.showAnim=s}applyPostSummon(A,s,R,I){const i=A.getAlly();return i!=null&&i.isActive(!0)?(R||i.scene.unshiftPhase(new CE(i.scene,i.getBattlerIndex(),gt(A.getMaxHp()/this.healRatio),U.t("abilityTriggers:postSummonAllyHeal",{pokemonNameWithAffix:b(i),pokemonName:A.name}),!0,!this.showAnim)),!0):!1}};T(dY,"PostSummonAllyHealAbAttr");let NP=dY;const fY=class fY extends UE{constructor(){super()}applyPostSummon(A,s,R,I){const i=A.getAlly();if(i!=null&&i.isActive(!0)){if(!R){for(const a of rO)i.setStatStage(a,0);i.scene.queueMessage(U.t("abilityTriggers:postSummonClearAllyStats",{pokemonNameWithAffix:b(i)}))}return!0}return!1}};T(fY,"PostSummonClearAllyStatStagesAbAttr");let TP=fY;const BY=class BY extends UE{applyPostSummon(A,s,R,I){this.enemyDef=0,this.enemySpDef=0,this.enemyCountTally=0;for(const i of A.getOpponents())this.enemyCountTally++,this.enemyDef+=i.getEffectiveStat(B.DEF),this.enemySpDef+=i.getEffectiveStat(B.SPDEF);return this.enemyDef=Math.round(this.enemyDef/this.enemyCountTally),this.enemySpDef=Math.round(this.enemySpDef/this.enemyCountTally),this.enemyDef<this.enemySpDef?this.stats=[B.ATK]:this.stats=[B.SPATK],this.enemyDef>0&&this.enemySpDef>0?(R||A.scene.unshiftPhase(new Ft(A.scene,A.getBattlerIndex(),!1,this.stats,1)),!0):!1}};T(BY,"DownloadAbAttr");let SP=BY;const gY=class gY extends UE{constructor(A){super(),this.weatherType=A}applyPostSummon(A,s,R,I){var i,a;return this.weatherType===Q.HEAVY_RAIN||this.weatherType===Q.HARSH_SUN||this.weatherType===Q.STRONG_WINDS||!((i=A.scene.arena.weather)!=null&&i.isImmutable())?R?((a=A.scene.arena.weather)==null?void 0:a.weatherType)!==this.weatherType:A.scene.arena.trySetWeather(this.weatherType,!0):!1}};T(gY,"PostSummonWeatherChangeAbAttr");let bO=gY;const KY=class KY extends UE{constructor(A){super(),this.terrainType=A}applyPostSummon(A,s,R,I){var i;return R?((i=A.scene.arena.terrain)==null?void 0:i.terrainType)!==this.terrainType:A.scene.arena.trySetTerrain(this.terrainType,!0)}};T(KY,"PostSummonTerrainChangeAbAttr");let Ei=KY;const FY=class FY extends UE{constructor(A){super(!0),this.formFunc=A}applyPostSummon(A,s,R,I){return this.formFunc(A)!==A.formIndex?R||A.scene.triggerPokemonFormChange(A,_t,!1):!1}};T(FY,"PostSummonFormChangeAbAttr");let II=FY;const mY=class mY extends UE{applyPostSummon(A,s,R,I){const i=A.getOpponents();if(!i.length)return!1;let a;return i.length>1?A.scene.executeWithSeedOffset(()=>a=RE(i),A.scene.currentBattle.waveIndex):a=i[0],a.getAbility().hasAttr(Vt)&&!(A.hasAbility(O.TRACE)&&a.getAbility().id===O.WONDER_GUARD)?!1:(R||(this.target=a,this.targetAbilityName=jA[a.getAbility().id].name,A.summonData.ability=a.getAbility().id,Ab(a),A.updateInfo()),!0)}getTriggerMessage(A,s,...R){return U.t("abilityTriggers:trace",{pokemonName:b(A),targetName:b(this.target),abilityName:this.targetAbilityName})}};T(mY,"PostSummonCopyAbilityAbAttr");let oP=mY;const WY=class WY extends UE{constructor(...A){super(!1),this.statusEffect=A}applyPostSummon(A,s,R,I){const a=(A instanceof Ss?A.scene.getPlayerField():A.scene.getEnemyField()).filter(L=>L.isAllowedInBattle());if(a.length<1)return!1;if(!R)for(const L of a)L.status&&this.statusEffect.includes(L.status.effect)&&(L.scene.queueMessage(XI(L.status.effect,b(L))),L.resetStatus(!1),L.updateInfo());return!0}};T(WY,"PostSummonUserFieldRemoveStatusEffectAbAttr");let lP=WY;const YY=class YY extends UE{applyPostSummon(A,s,R,I){if(!A.scene.currentBattle.double)return!1;const i=A.getAlly();if(!i||i.getStatStages().every(a=>a===0))return!1;if(!R){for(const a of rO)A.setStatStage(a,i.getStatStage(a));A.updateInfo()}return!0}getTriggerMessage(A,s,...R){return U.t("abilityTriggers:costar",{pokemonName:b(A),allyName:b(A.getAlly())})}};T(YY,"PostSummonCopyAllyStatsAbAttr");let CP=YY;const pY=class pY extends UE{constructor(){super(!0)}async applyPostSummon(A,s,R,I){const i=A.getOpponents();if(R||!i.length)return R;const a=[];let L;i.length>1?A.scene.executeWithSeedOffset(()=>L=RE(i),A.scene.currentBattle.waveIndex):L=i[0],L=L,A.summonData.speciesForm=L.getSpeciesForm(),A.summonData.fusionSpeciesForm=L.getFusionSpeciesForm(),A.summonData.ability=L.getAbility().id,A.summonData.gender=L.getGender(),A.summonData.fusionGender=L.getFusionGender();for(const S of Kn)A.setStat(S,L.getStat(S,!1),!1);for(const S of rO)A.setStatStage(S,L.getStatStage(S));return A.summonData.moveset=L.getMoveset().map(S=>S?new ke(S.moveId,0,0,!1,Math.min(S.getMove().pp,5)):(console.warn(`Imposter: somehow iterating over a ${S} value when copying moveset!`),new ke(t.NONE))),A.summonData.types=L.getTypes(),a.push(A.updateInfo()),A.scene.queueMessage(U.t("abilityTriggers:postSummonTransform",{pokemonNameWithAffix:b(A),targetName:L.name})),A.scene.playSound("battle_anims/PRSFX- Transform"),a.push(A.loadAssets(!1).then(()=>{A.playAnim(),A.updateInfo()})),await Promise.all(a),!0}};T(pY,"PostSummonTransformAbAttr");let UP=pY;const yY=class yY extends UE{applyPostSummon(A,s,R,I){return Eb(A.scene).length<1?!1:(R||A.scene.arena.triggerWeatherBasedFormChangesToNormal(),!0)}};T(yY,"PostSummonWeatherSuppressedFormChangeAbAttr");let EU=yY;const wY=class wY extends UE{constructor(A){super(!1),this.ability=A}applyPostSummon(A,s,R,I){const i=A.species.speciesId===e.CASTFORM&&this.ability===O.FORECAST,a=A.species.speciesId===e.CHERRIM&&this.ability===O.FLOWER_GIFT;return i||a?R||(A.scene.triggerPokemonFormChange(A,oR),A.scene.triggerPokemonFormChange(A,Pn),Y1(A,s),!0):!1}};T(wY,"PostSummonFormChangeByWeatherAbAttr");let sU=wY;const VY=class VY extends ze{constructor(){super(!0)}applyPreSwitchOut(A,s,R,I){return!1}};T(VY,"PreSwitchOutAbAttr");let sa=VY;const vY=class vY extends sa{applyPreSwitchOut(A,s,R,I){return A.status?(R||(A.resetStatus(),A.updateInfo()),!0):!1}};T(vY,"PreSwitchOutResetStatusAbAttr");let DP=vY;const xY=class xY extends sa{applyPreSwitchOut(A,s,R,I){var L;const i=(L=A.scene.arena.weather)==null?void 0:L.weatherType;let a=!1;switch(i){case Q.HARSH_SUN:A.hasAbility(O.DESOLATE_LAND)&&A.scene.getField(!0).filter(S=>S!==A).filter(S=>S.hasAbility(O.DESOLATE_LAND)).length===0&&(a=!0);break;case Q.HEAVY_RAIN:A.hasAbility(O.PRIMORDIAL_SEA)&&A.scene.getField(!0).filter(S=>S!==A).filter(S=>S.hasAbility(O.PRIMORDIAL_SEA)).length===0&&(a=!0);break;case Q.STRONG_WINDS:A.hasAbility(O.DELTA_STREAM)&&A.scene.getField(!0).filter(S=>S!==A).filter(S=>S.hasAbility(O.DELTA_STREAM)).length===0&&(a=!0);break}return R?a:a?(A.scene.arena.trySetWeather(Q.NONE,!1),!0):!1}};T(xY,"PreSwitchOutClearWeatherAbAttr");let fr=xY;const bY=class bY extends sa{applyPreSwitchOut(A,s,R,I){if(!A.isFullHp()){if(!R){const i=gt(A.getMaxHp()*.33);A.heal(i),A.updateInfo()}return!0}return!1}};T(bY,"PreSwitchOutHealAbAttr");let MP=bY;const kY=class kY extends sa{constructor(A){super(),this.formFunc=A}applyPreSwitchOut(A,s,R,I){return this.formFunc(A)!==A.formIndex?(R||A.scene.triggerPokemonFormChange(A,_t,!1),!0):!1}};T(kY,"PreSwitchOutFormChangeAbAttr");let uP=kY;const ZY=class ZY extends ze{applyPreStatStageChange(A,s,R,I,i,a){return!1}};T(ZY,"PreStatStageChangeAbAttr");let hP=ZY;const XY=class XY extends hP{constructor(A){super(),this.protectedStat=A}applyPreStatStageChange(A,s,R,I,i,a){return xe(this.protectedStat)||I===this.protectedStat?(i.value=!0,!0):!1}getTriggerMessage(A,s,...R){return U.t("abilityTriggers:protectStat",{pokemonNameWithAffix:b(A),abilityName:s,statName:this.protectedStat?U.t(aE(this.protectedStat)):U.t("battle:stats")})}};T(XY,"ProtectStatAbAttr");let mR=XY;const QY=class QY extends VI{constructor(...A){super((s,R,I)=>!0),this.effects=A}applyPostAttackAfterMoveTypeCheck(A,s,R,I,i,a,L){return this.effects.indexOf(L[0])>-1&&!I.isFainted()?R?I.canAddTag(Y.CONFUSED):I.addTag(Y.CONFUSED,A.randSeedIntRange(2,5),i.id,I.id):!1}};T(QY,"ConfusionOnStatusEffectAbAttr");let RU=QY;const JY=class JY extends ze{applyPreSetStatus(A,s,R,I,i,a){return!1}};T(JY,"PreSetStatusAbAttr");let cP=JY;const $Y=class $Y extends cP{constructor(...A){super(),this.immuneEffects=A}applyPreSetStatus(A,s,R,I,i,a){return this.immuneEffects.length<1||this.immuneEffects.includes(I)?(i.value=!0,!0):!1}getTriggerMessage(A,s,...R){return this.immuneEffects.length?U.t("abilityTriggers:statusEffectImmunityWithName",{pokemonNameWithAffix:b(A),abilityName:s,statusEffectName:qx(R[0])}):U.t("abilityTriggers:statusEffectImmunity",{pokemonNameWithAffix:b(A),abilityName:s})}};T($Y,"PreSetStatusEffectImmunityAbAttr");let OU=$Y;const qY=class qY extends OU{};T(qY,"StatusEffectImmunityAbAttr");let TR=qY;const jY=class jY extends OU{};T(jY,"UserFieldStatusEffectImmunityAbAttr");let vS=jY;const zY=class zY extends ze{applyPreApplyBattlerTag(A,s,R,I,i,a){return!1}};T(zY,"PreApplyBattlerTagAbAttr");let GP=zY;const e5=class e5 extends GP{constructor(A){super(),this.immuneTagTypes=Array.isArray(A)?A:[A]}applyPreApplyBattlerTag(A,s,R,I,i,a){return this.immuneTagTypes.includes(I.tagType)?(i.value=!0,R||(this.battlerTag=I),!0):!1}getTriggerMessage(A,s,...R){return U.t("abilityTriggers:battlerTagImmunity",{pokemonNameWithAffix:b(A),abilityName:s,battlerTagName:this.battlerTag.getDescriptor()})}};T(e5,"PreApplyBattlerTagImmunityAbAttr");let nU=e5;const t5=class t5 extends nU{};T(t5,"BattlerTagImmunityAbAttr");let qO=t5;const A5=class A5 extends nU{};T(A5,"UserFieldBattlerTagImmunityAbAttr");let pL=A5;const E5=class E5 extends ze{apply(A,s,R,I,i){return i[0].value=!0,!0}};T(E5,"BlockCritAbAttr");let xS=E5;const s5=class s5 extends ze{apply(A,s,R,I,i){return i[0].value=!0,!0}};T(s5,"BonusCritAbAttr");let IU=s5;const R5=class R5 extends ze{constructor(A){super(!0),this.multAmount=A}apply(A,s,R,I,i){const a=i[0];return a.value>1?(a.value*=this.multAmount,!0):!1}};T(R5,"MultCritAbAttr");let iU=R5;const O5=class O5 extends ze{constructor(A,s){super(),this.condition=A}apply(A,s,R,I,i){const a=i[1],L=i[2];return this.condition(A,a,L)?(i[0].value=!0,!0):!1}};T(O5,"ConditionalCritAbAttr");let aU=O5;const n5=class n5 extends ze{apply(A,s,R,I,i){return I.value=!0,!0}};T(n5,"BlockNonDirectDamageAbAttr");let rE=n5;const I5=class I5 extends ze{constructor(...A){super(!1),this.effects=A}apply(A,s,R,I,i){return A.status&&this.effects.includes(A.status.effect)?(I.value=!0,!0):!1}};T(I5,"BlockStatusDamageAbAttr");let LU=I5;const i5=class i5 extends ze{apply(A,s,R,I,i){return I.value=!0,!0}};T(i5,"BlockOneHitKOAbAttr");let rU=i5;const a5=class a5 extends ze{constructor(A,s){super(!0),this.moveFunc=A,this.changeAmount=s}apply(A,s,R,I,i){return this.moveFunc(A,i[0])?(i[1].value+=this.changeAmount,!0):!1}};T(a5,"ChangeMovePriorityAbAttr");let zR=a5;const L5=class L5 extends ze{};T(L5,"IgnoreContactAbAttr");let NU=L5;const r5=class r5 extends ze{applyPreWeatherEffect(A,s,R,I,i,a){return!1}};T(r5,"PreWeatherEffectAbAttr");let TU=r5;const N5=class N5 extends TU{};T(N5,"PreWeatherDamageAbAttr");let SU=N5;const T5=class T5 extends SU{constructor(...A){super(),this.weatherTypes=A}applyPreWeatherEffect(A,s,R,I,i,a){return(!this.weatherTypes.length||this.weatherTypes.indexOf(I==null?void 0:I.weatherType)>-1)&&(i.value=!0),!0}};T(T5,"BlockWeatherDamageAttr");let iI=T5;const S5=class S5 extends TU{constructor(A){super(),this.affectsImmutable=!!A}applyPreWeatherEffect(A,s,R,I,i,a){return this.affectsImmutable||I.isImmutable()?(i.value=!0,!0):!1}};T(S5,"SuppressWeatherEffectAbAttr");let Ra=S5;function ua(){return E=>{if(!E.turnData)return!0;const A=E.turnData.attacksReceived[0];if(!A)return!0;const s=E.getOpponents().find(I=>I.id===A.sourceId);return s?!(He[A.move].chance>=0&&s.hasAbility(O.SHEER_FORCE)):!0}}T(ua,"getSheerForceHitDisableAbCondition");function cs(...E){return A=>{var R,I,i;if(!((R=A.scene)!=null&&R.arena)||(I=A.scene.arena.weather)!=null&&I.isEffectSuppressed(A.scene))return!1;const s=(i=A.scene.arena.weather)==null?void 0:i.weatherType;return!!s&&E.indexOf(s)>-1}}T(cs,"getWeatherCondition");function HX(){return E=>{for(const A of E.getOpponents())for(const s of A.moveset)if(s){if(s.getMove()instanceof d&&E.getAttackTypeEffectiveness(s.getMove().type,A,!0)>=2||s.getMove().hasAttr(KO))return!0;if(s.getMove().id===t.HIDDEN_POWER){const R=Math.floor(((A.ivs[B.HP]&1)+(A.ivs[B.ATK]&1)*2+(A.ivs[B.DEF]&1)*4+(A.ivs[B.SPD]&1)*8+(A.ivs[B.SPATK]&1)*16+(A.ivs[B.SPDEF]&1)*32)*15/63),I=[n.FIGHTING,n.FLYING,n.POISON,n.GROUND,n.ROCK,n.BUG,n.GHOST,n.STEEL,n.FIRE,n.WATER,n.GRASS,n.ELECTRIC,n.PSYCHIC,n.ICE,n.DRAGON,n.DARK][R];if(E.getAttackTypeEffectiveness(I,A)>=2)return!0}}return!1}}T(HX,"getAnticipationCondition");function wo(E){return A=>{var s;return!((s=A.battleData)!=null&&s.abilitiesApplied.includes(E))}}T(wo,"getOncePerBattleCondition");const o5=class o5 extends UE{constructor(){super(!0)}applyPostSummon(A,s,R,I){let i=0,a="",L=0;for(const S of A.getOpponents())for(const o of S.moveset)(o==null?void 0:o.getMove())instanceof Se?L=1:o!=null&&o.getMove().hasAttr(KO)?L=150:(o==null?void 0:o.getMove().id)===t.COUNTER||(o==null?void 0:o.getMove().id)===t.MIRROR_COAT||(o==null?void 0:o.getMove().id)===t.METAL_BURST?L=120:(o==null?void 0:o.getMove().power)===-1?L=80:L=(o==null?void 0:o.getMove().power)??0,L>i&&(i=L,a=(o==null?void 0:o.getName())??"");return R||A.scene.queueMessage(U.t("abilityTriggers:forewarn",{pokemonNameWithAffix:b(A),moveName:a})),!0}};T(o5,"ForewarnAbAttr");let PP=o5;const l5=class l5 extends UE{constructor(){super(!0)}applyPostSummon(A,s,R,I){if(!R)for(const i of A.getOpponents())A.scene.queueMessage(U.t("abilityTriggers:frisk",{pokemonNameWithAffix:b(A),opponentName:i.name,opponentAbilityName:i.getAbility().name})),Ab(i);return!0}};T(l5,"FriskAbAttr");let _P=l5;const C5=class C5 extends ze{applyPostWeatherChange(A,s,R,I,i){return!1}};T(C5,"PostWeatherChangeAbAttr");let bS=C5;const U5=class U5 extends bS{constructor(A,s){super(!1),this.ability=A,this.formRevertingWeathers=s}applyPostWeatherChange(A,s,R,I,i){var S;const a=A.species.speciesId===e.CASTFORM&&this.ability===O.FORECAST,L=A.species.speciesId===e.CHERRIM&&this.ability===O.FLOWER_GIFT;if(a||L){if(R)return R;const o=(S=A.scene.arena.weather)==null?void 0:S.weatherType;return o&&this.formRevertingWeathers.includes(o)?A.scene.arena.triggerWeatherBasedFormChangesToNormal():A.scene.arena.triggerWeatherBasedFormChanges(),!0}return!1}};T(U5,"PostWeatherChangeFormChangeAbAttr");let oU=U5;const D5=class D5 extends bS{constructor(A,s,...R){super(),this.tagType=A,this.turnCount=s,this.weatherTypes=R}applyPostWeatherChange(A,s,R,I,i){return this.weatherTypes.find(a=>I===a),Q[I],this.weatherTypes.find(a=>I===a)?R?A.canAddTag(this.tagType):A.addTag(this.tagType,this.turnCount):!1}};T(D5,"PostWeatherChangeAddBattlerTagAttr");let lU=D5;const M5=class M5 extends ze{constructor(...A){super(),this.weatherTypes=A}applyPostWeatherLapse(A,s,R,I,i){return!1}getCondition(){return cs(...this.weatherTypes)}};T(M5,"PostWeatherLapseAbAttr");let kS=M5;const u5=class u5 extends kS{constructor(A,...s){super(...s),this.healFactor=A}applyPostWeatherLapse(A,s,R,I,i){if(!A.isFullHp()){const a=A.scene,L=(s?A.getPassiveAbility():A.getAbility()).name;return R||a.unshiftPhase(new CE(a,A.getBattlerIndex(),gt(A.getMaxHp()/(16/this.healFactor)),U.t("abilityTriggers:postWeatherLapseHeal",{pokemonNameWithAffix:b(A),abilityName:L}),!0)),!0}return!1}};T(u5,"PostWeatherLapseHealAbAttr");let Br=u5;const h5=class h5 extends kS{constructor(A,...s){super(...s),this.damageFactor=A}applyPostWeatherLapse(A,s,R,I,i){const a=A.scene;if(A.hasAbilityWithAttr(rE))return!1;if(!R){const L=(s?A.getPassiveAbility():A.getAbility()).name;a.queueMessage(U.t("abilityTriggers:postWeatherLapseDamage",{pokemonNameWithAffix:b(A),abilityName:L})),A.damageAndUpdate(gt(A.getMaxHp()/(16/this.damageFactor)),Pt.OTHER)}return!0}};T(h5,"PostWeatherLapseDamageAbAttr");let CU=h5;const c5=class c5 extends ze{applyPostTerrainChange(A,s,R,I,i){return!1}};T(c5,"PostTerrainChangeAbAttr");let UU=c5;const G5=class G5 extends UU{constructor(A,s,...R){super(),this.tagType=A,this.turnCount=s,this.terrainTypes=R}applyPostTerrainChange(A,s,R,I,i){return this.terrainTypes.find(a=>a===I)?R?A.canAddTag(this.tagType):A.addTag(this.tagType,this.turnCount):!1}};T(G5,"PostTerrainChangeAddBattlerTagAttr");let HP=G5;function Vo(...E){return A=>{var R;const s=(R=A.scene.arena.terrain)==null?void 0:R.terrainType;return!!s&&E.indexOf(s)>-1}}T(Vo,"getTerrainCondition");const P5=class P5 extends ze{applyPostTurn(A,s,R,I){return!1}};T(P5,"PostTurnAbAttr");let wO=P5;const _5=class _5 extends wO{constructor(...A){super(!1),this.effects=A}applyPostTurn(A,s,R,I){if(A.status&&this.effects.includes(A.status.effect)&&!A.isFullHp()){if(!R){const i=A.scene,a=(s?A.getPassiveAbility():A.getAbility()).name;i.unshiftPhase(new CE(i,A.getBattlerIndex(),gt(A.getMaxHp()/8),U.t("abilityTriggers:poisonHeal",{pokemonName:b(A),abilityName:a}),!0))}return!0}return!1}};T(_5,"PostTurnStatusHealAbAttr");let dP=_5;const H5=class H5 extends wO{constructor(A=!1){super(!0),this.allyTarget=A}applyPostTurn(A,s,R,I){var i,a;return this.allyTarget?this.target=A.getAlly():this.target=A,(i=this.target)!=null&&i.status?(R||(this.target.scene.queueMessage(XI((a=this.target.status)==null?void 0:a.effect,b(this.target))),this.target.resetStatus(!1),this.target.updateInfo()),!0):!1}};T(H5,"PostTurnResetStatusAbAttr");let gr=H5;const d5=class d5 extends wO{constructor(A,s){super(),this.itemType=A,this.procChance=s}applyPostTurn(A,s,R,I){const i=Phaser.Math.RND.realInRange(0,1);return Math.max(Math.min(this.procChance(A),1),0)<i?!1:this.itemType==="EATEN_BERRIES"?this.createEatenBerry(A,R):!1}createEatenBerry(A,s){const R=A.battleData.berriesEaten;if(!R.length)return!1;if(s)return!0;const I=le(R.length),i=R[I],a=new cT(i);R.splice(I);const L=A.scene.findModifier(S=>S instanceof _E&&S.berryType===i,A.isPlayer());if(L)L.stackCount<L.getMaxHeldItemCount(A)&&L.stackCount++;else{const S=new _E(a,A.id,i,1);A.isPlayer()?A.scene.addModifier(S):A.scene.addEnemyModifier(S)}return A.scene.queueMessage(U.t("abilityTriggers:postTurnLootCreateEatenBerry",{pokemonNameWithAffix:b(A),berryName:a.name})),A.scene.updateModifiers(A.isPlayer()),!0}};T(d5,"PostTurnLootAbAttr");let fP=d5;const f5=class f5 extends wO{constructor(){super(!0)}applyPostTurn(A,s,R,I){const i=Kn.filter(L=>A.getStatStage(L)<6);let a=Kn.filter(L=>A.getStatStage(L)>-6);if(!R){if(i.length>0){const L=i[A.randSeedInt(i.length)];a=i.filter(S=>S!==L),A.scene.unshiftPhase(new Ft(A.scene,A.getBattlerIndex(),!0,[L],2))}if(a.length>0){const L=a[A.randSeedInt(a.length)];A.scene.unshiftPhase(new Ft(A.scene,A.getBattlerIndex(),!0,[L],-1))}}return!0}};T(f5,"MoodyAbAttr");let BP=f5;const B5=class B5 extends wO{constructor(A,s){super(!0),this.stats=Array.isArray(A)?A:[A],this.stages=s}applyPostTurn(A,s,R,I){return R||A.scene.unshiftPhase(new Ft(A.scene,A.getBattlerIndex(),!0,this.stats,this.stages)),!0}};T(B5,"PostTurnStatStageChangeAbAttr");let gP=B5;const g5=class g5 extends wO{constructor(A){super(!0),this.formFunc=A}applyPostTurn(A,s,R,I){return this.formFunc(A)!==A.formIndex?(R||A.scene.triggerPokemonFormChange(A,_t,!1),!0):!1}};T(g5,"PostTurnFormChangeAbAttr");let Mn=g5;const K5=class K5 extends wO{applyPostTurn(A,s,R,I){var a;let i=!1;for(const L of A.getOpponents())(((a=L.status)==null?void 0:a.effect)===J.SLEEP||L.hasAbility(O.COMATOSE))&&!L.hasAbilityWithAttr(rE)&&(R||(L.damageAndUpdate(gt(L.getMaxHp()/8),Pt.OTHER),A.scene.queueMessage(U.t("abilityTriggers:badDreams",{pokemonName:b(L)}))),i=!0);return i}};T(K5,"PostTurnHurtIfSleepingAbAttr");let KP=K5;const F5=class F5 extends wO{constructor(){super()}applyPostTurn(A,s,R,I){if(R)return!1;const i=A.scene.currentBattle.lastUsedPokeball;return i!==null&&A.isPlayer?(A.scene.pokeballCounts[i]++,A.scene.currentBattle.lastUsedPokeball=null,A.scene.queueMessage(U.t("abilityTriggers:fetchBall",{pokemonNameWithAffix:b(A),pokeballName:Al(i)})),!0):!1}};T(F5,"FetchBallAbAttr");let FP=F5;const m5=class m5 extends ze{};T(m5,"PostBiomeChangeAbAttr");let ZS=m5;const W5=class W5 extends ZS{constructor(A){super(),this.weatherType=A}apply(A,s,R,I,i){var a,L;return(a=A.scene.arena.weather)!=null&&a.isImmutable()?!1:R?((L=A.scene.arena.weather)==null?void 0:L.weatherType)!==this.weatherType:A.scene.arena.trySetWeather(this.weatherType,!0)}};T(W5,"PostBiomeChangeWeatherChangeAbAttr");let kO=W5;const Y5=class Y5 extends ZS{constructor(A){super(),this.terrainType=A}apply(A,s,R,I,i){var a;return R?((a=A.scene.arena.terrain)==null?void 0:a.terrainType)!==this.terrainType:A.scene.arena.trySetTerrain(this.terrainType,!0)}};T(Y5,"PostBiomeChangeTerrainChangeAbAttr");let si=Y5;const p5=class p5 extends ze{applyPostMoveUsed(A,s,R,I,i,a){return!1}};T(p5,"PostMoveUsedAbAttr");let DU=p5;const y5=class y5 extends DU{applyPostMoveUsed(A,s,R,I,i,a){const L=[Y.FLYING,Y.UNDERWATER,Y.UNDERGROUND,Y.HIDDEN];if(R.getBattlerIndex()!==A.getBattlerIndex()&&!A.summonData.tags.some(S=>L.includes(S.tagType))){if(!i)if(s.getMove()instanceof d||s.getMove()instanceof Se){const S=this.getTarget(A,R,I);A.scene.unshiftPhase(new JA(A.scene,A,S,s,!0,!0))}else s.getMove()instanceof pe&&A.scene.unshiftPhase(new JA(A.scene,A,[A.getBattlerIndex()],s,!0,!0));return!0}return!1}getTarget(A,s,R){return A.isPlayer()?s.isPlayer()?R:[s.getBattlerIndex()]:s.isPlayer()?[s.getBattlerIndex()]:R}};T(y5,"PostDancingMoveAbAttr");let mP=y5;const w5=class w5 extends ze{constructor(A){super(!0),this.multiplier=A}apply(A,s,R,I,i){return i[0].value*=this.multiplier,!0}};T(w5,"StatStageChangeMultiplierAbAttr");let XS=w5;const V5=class V5 extends ze{apply(A,s,R,I,i){return R||A.scene.unshiftPhase(new Ft(A.scene,A.getBattlerIndex(),!0,i[0],i[1],!0,!1,!1)),!0}};T(V5,"StatStageChangeCopyAbAttr");let MU=V5;const v5=class v5 extends ze{constructor(){super(!1)}apply(A,s,R,I,i){return I.value=!0,!0}};T(v5,"BypassBurnDamageReductionAbAttr");let uU=v5;const x5=class x5 extends ze{constructor(A){super(!1),this.multiplier=A}apply(A,s,R,I,i){return i[0].value=gt(i[0].value*this.multiplier),!0}};T(x5,"ReduceBurnDamageAbAttr");let hU=x5;const b5=class b5 extends ze{apply(A,s,R,I,i){return i[0].value*=2,!0}};T(b5,"DoubleBerryEffectAbAttr");let ja=b5;const k5=class k5 extends ze{apply(A,s,R,I,i){return I.value=!0,!0}};T(k5,"PreventBerryUseAbAttr");let za=k5;const Z5=class Z5 extends ze{constructor(A){super(),this.healPercent=Math.max(Math.min(A,1),0)}apply(A,s,R,...I){const{name:i}=s?A.getPassiveAbility():A.getAbility();return R||A.scene.unshiftPhase(new CE(A.scene,A.getBattlerIndex(),gt(A.getMaxHp()*this.healPercent),U.t("abilityTriggers:healFromBerryUse",{pokemonNameWithAffix:b(A),abilityName:i}),!0)),!0}};T(Z5,"HealFromBerryUseAbAttr");let QS=Z5;const X5=class X5 extends ze{apply(A,s,R,I,i){return i[0].value=256,!0}};T(X5,"RunSuccessAbAttr");let cU=X5;const Q5=class Q5 extends ze{constructor(A){super(!1),this.arenaTrapCondition=A}applyCheckTrapped(A,s,R,I,i,a){return!1}};T(Q5,"CheckTrappedAbAttr");let GU=Q5;const J5=class J5 extends GU{applyCheckTrapped(A,s,R,I,i,a){return this.arenaTrapCondition(A,i)?i.getTypes(!0).includes(n.GHOST)||i.getTypes(!0).includes(n.STELLAR)&&i.getTypes().includes(n.GHOST)||i.hasAbility(O.RUN_AWAY)?(I.value=!1,!1):(I.value=!0,!0):(I.value=!1,!1)}getTriggerMessage(A,s,...R){return U.t("abilityTriggers:arenaTrap",{pokemonNameWithAffix:b(A),abilityName:s})}};T(J5,"ArenaTrapAbAttr");let Kr=J5;const $5=class $5 extends ze{apply(A,s,R,I,i){return i[0].value=0,!0}};T($5,"MaxMultiHitAbAttr");let JS=$5;const q5=class q5 extends ze{constructor(){super(!0)}applyPostBattle(A,s,R,I){return!1}};T(q5,"PostBattleAbAttr");let $S=q5;const j5=class j5 extends $S{applyPostBattle(A,s,R,I){const i=A.scene.currentBattle.postBattleLoot;if(!R&&i.length){const a=RE(i);if(A.scene.tryTransferHeldItemModifier(a,A,!0,1,!0))return i.splice(i.indexOf(a),1),A.scene.queueMessage(U.t("abilityTriggers:postBattleLoot",{pokemonNameWithAffix:b(A),itemName:a.type.name})),!0}return!1}};T(j5,"PostBattleLootAbAttr");let WP=j5;const z5=class z5 extends ze{applyPostFaint(A,s,R,I,i,a,...L){return!1}};T(z5,"PostFaintAbAttr");let vI=z5;const ep=class ep extends vI{applyPostFaint(A,s,R,I,i,a,L){return Eb(A.scene).length<1?!1:(R||A.scene.arena.triggerWeatherBasedFormChanges(),!0)}};T(ep,"PostFaintUnsuppressedWeatherFormChangeAbAttr");let PU=ep;const tp=class tp extends vI{applyPostFaint(A,s,R,I,i,a,...L){var l;const S=(l=A.scene.arena.weather)==null?void 0:l.weatherType;let o=!1;switch(S){case Q.HARSH_SUN:A.hasAbility(O.DESOLATE_LAND)&&A.scene.getField(!0).filter(D=>D.hasAbility(O.DESOLATE_LAND)).length===0&&(o=!0);break;case Q.HEAVY_RAIN:A.hasAbility(O.PRIMORDIAL_SEA)&&A.scene.getField(!0).filter(D=>D.hasAbility(O.PRIMORDIAL_SEA)).length===0&&(o=!0);break;case Q.STRONG_WINDS:A.hasAbility(O.DELTA_STREAM)&&A.scene.getField(!0).filter(D=>D.hasAbility(O.DELTA_STREAM)).length===0&&(o=!0);break}return R?o:o?(A.scene.arena.trySetWeather(Q.NONE,!1),!0):!1}};T(tp,"PostFaintClearWeatherAbAttr");let Fr=tp;const Ap=class Ap extends vI{constructor(A){super(),this.damageRatio=A}applyPostFaint(A,s,R,I,i,a,...L){if(i!==void 0&&I!==void 0&&i.checkFlag(pt.MAKES_CONTACT,I,A)){const S=new je(!1);return A.scene.getField(!0).map(o=>Et(WS,o,S,R)),S.value||I.hasAbilityWithAttr(rE)?!1:(R||(I.damageAndUpdate(gt(I.getMaxHp()*(1/this.damageRatio)),Pt.OTHER),I.turnData.damageTaken+=gt(I.getMaxHp()*(1/this.damageRatio))),!0)}return!1}getTriggerMessage(A,s,...R){return U.t("abilityTriggers:postFaintContactDamage",{pokemonNameWithAffix:b(A),abilityName:s})}};T(Ap,"PostFaintContactDamageAbAttr");let YP=Ap;const Ep=class Ep extends vI{constructor(){super()}applyPostFaint(A,s,R,I,i,a,...L){if(i!==void 0&&I!==void 0&&!R){const S=A.turnData.attacksReceived[0].damage;I.damageAndUpdate(S,Pt.OTHER),I.turnData.damageTaken+=S}return!0}getTriggerMessage(A,s,...R){return U.t("abilityTriggers:postFaintHpDamage",{pokemonNameWithAffix:b(A),abilityName:s})}};T(Ep,"PostFaintHPDamageAbAttr");let pP=Ep;const sp=class sp extends ze{apply(A,s,R,I,i){if(this.canRedirect(i[0])){const a=i[1],L=A.getBattlerIndex();if(a.value!==L)return a.value=L,!0}return!1}canRedirect(A){const s=He[A];return!![qE.NEAR_OTHER,qE.OTHER].find(R=>s.moveTarget===R)}};T(sp,"RedirectMoveAbAttr");let _U=sp;const Rp=class Rp extends _U{constructor(A){super(),this.type=A}canRedirect(A){return super.canRedirect(A)&&He[A].type===this.type}};T(Rp,"RedirectTypeMoveAbAttr");let HU=Rp;const Op=class Op extends ze{};T(Op,"BlockRedirectAbAttr");let yL=Op;const np=class np extends ze{constructor(A){super(!0),this.statusEffect=A}apply(A,s,R,I,i){return i[1]instanceof $e&&i[0]===this.statusEffect?(i[1].value-=1,!0):!1}};T(np,"ReduceStatusEffectDurationAbAttr");let dU=np;const Ip=class Ip extends ze{constructor(){super(!0)}};T(Ip,"FlinchEffectAbAttr");let fU=Ip;const ip=class ip extends fU{constructor(A,s){super(),this.stats=Array.isArray(A)?A:[A],this.stages=s}apply(A,s,R,I,i){return R||A.scene.unshiftPhase(new Ft(A.scene,A.getBattlerIndex(),!0,this.stats,this.stages)),!0}};T(ip,"FlinchStatStageChangeAbAttr");let yP=ip;const ap=class ap extends ze{};T(ap,"IncreasePpAbAttr");let BU=ap;const Lp=class Lp extends ze{apply(A,s,R,I,i){return I.value=!0,!0}};T(Lp,"ForceSwitchOutImmunityAbAttr");let wL=Lp;const rp=class rp extends ze{constructor(){super()}apply(A,s,R,I,i){const a=A.getHpRatio();return i[0].value<a?(i[0].value*=2,i[0].value>=a):!1}};T(rp,"ReduceBerryUseThresholdAbAttr");let Di=rp;const Np=class Np extends ze{constructor(A){super(),this.multiplier=A}apply(A,s,R,I,i){return i[0].value*=this.multiplier,!0}};T(Np,"WeightMultiplierAbAttr");let qS=Np;const Tp=class Tp extends ze{constructor(){super(!1)}apply(A,s,R,I,i){return i[0].setNature(A.getNature()),!0}};T(Tp,"SyncEncounterNatureAbAttr");let gU=Tp;const Sp=class Sp extends ze{constructor(A){super(!1),this.moveIgnoreFunc=A||((s,R)=>!0)}apply(A,s,R,I,i){return this.moveIgnoreFunc(A,i[0])?(I.value=!0,!0):!1}};T(Sp,"MoveAbilityBypassAbAttr");let hI=Sp;const PM=class PM extends ze{constructor(){super(!1)}apply(A,s,R,I,i){const a=i[0];return!a.hasAttr(qA)&&!a.hasAttr(PM)?(I.value=!0,!0):!1}};T(PM,"SuppressFieldAbilitiesAbAttr");let UI=PM;const op=class op extends ze{};T(op,"AlwaysHitAbAttr");let jS=op;const lp=class lp extends ze{};T(lp,"IgnoreProtectOnContactAbAttr");let KU=lp;const Cp=class Cp extends ze{apply(A,s,R,I,i){const a=i[0];return i[0]instanceof je?(a.value=!0,!0):!1}};T(Cp,"InfiltratorAbAttr");let Oa=Cp;const Up=class Up extends ze{constructor(){super(!1)}};T(Up,"UncopiableAbilityAbAttr");let Vt=Up;const Dp=class Dp extends ze{constructor(){super(!1)}};T(Dp,"UnsuppressableAbilityAbAttr");let qA=Dp;const Mp=class Mp extends ze{constructor(){super(!1)}};T(Mp,"UnswappableAbilityAbAttr");let nA=Mp;const up=class up extends ze{constructor(){super(!1)}};T(up,"NoTransformAbilityAbAttr");let Qs=up;const hp=class hp extends ze{constructor(){super(!1)}};T(hp,"NoFusionAbilityAbAttr");let ZE=hp;const cp=class cp extends ze{constructor(A,s){super(!0),this.defenderType=A,this.allowedMoveTypes=s}apply(A,s,R,I,i){return this.defenderType===i[1]&&this.allowedMoveTypes.includes(i[0])?(I.value=!0,!0):!1}};T(cp,"IgnoreTypeImmunityAbAttr");let VL=cp;const Gp=class Gp extends ze{constructor(A,s){super(!0),this.statusEffect=A,this.defenderType=s}apply(A,s,R,I,i){return this.statusEffect.includes(i[0])&&this.defenderType.includes(i[1])?(I.value=!0,!0):!1}};T(Gp,"IgnoreTypeStatusEffectImmunityAbAttr");let FU=Gp;const Pp=class Pp extends $S{constructor(){super()}applyPostBattle(A,s,R,I){return R||(A.scene.currentBattle.moneyScattered+=A.scene.getWaveMoneyAmount(.2)),!0}};T(Pp,"MoneyAbAttr");let wP=Pp;const _p=class _p extends Ui{constructor(A){super([B.ATK],1,!0,!1),this.tagType=A}applyPostSummon(A,s,R,I){const i=A.isPlayer()?et.PLAYER:et.ENEMY;return A.scene.arena.getTagOnSide(this.tagType,i)?super.applyPostSummon(A,s,R,I):!1}};T(_p,"PostSummonStatStageChangeOnArenaAbAttr");let VP=_p;const Hp=class Hp extends qs{constructor(A,s,R,I,i){super(A,s),this.multiplier=s,this.tagType=R,this.recoilDamageFunc=i,this.triggerMessageFunc=I}applyPreDefend(A,s,R,I,i,a,L){return this.condition(A,I,i)&&!i.hitsSubstitute(I,A)?(R||(L[0].value=this.multiplier,A.removeTag(this.tagType),this.recoilDamageFunc&&A.damageAndUpdate(this.recoilDamageFunc(A),Pt.OTHER,!1,!1,!0,!0)),!0):!1}getTriggerMessage(A,s,...R){return this.triggerMessageFunc(A,s)}};T(Hp,"FormBlockDamageAbAttr");let mU=Hp;const dp=class dp extends ze{constructor(A){super(!0),this.chance=A}apply(A,s,R,I,i){var L;if(R)return!1;const a=i[0];if(!a.value&&A.randSeedInt(100)<this.chance){const S=A.scene.currentBattle.turnCommands[A.getBattlerIndex()],o=(S==null?void 0:S.command)===vt.FIGHT,l=(L=S==null?void 0:S.move)!=null&&L.move?He[S.move.move]:null,D=(l==null?void 0:l.category)===Ot.PHYSICAL||(l==null?void 0:l.category)===Ot.SPECIAL;if(o&&D)return a.value=!0,!0}return!1}getTriggerMessage(A,s,...R){return U.t("abilityTriggers:quickDraw",{pokemonName:b(A)})}};T(dp,"BypassSpeedChanceAbAttr");let WU=dp;const fp=class fp extends ze{constructor(A){super(!0),this.condition=A}apply(A,s,R,I,i){var D;const a=i[0],L=i[1],S=A.scene.currentBattle.turnCommands[A.getBattlerIndex()],o=(S==null?void 0:S.command)===vt.FIGHT,l=(D=S==null?void 0:S.move)!=null&&D.move?He[S.move.move]:null;return this.condition(A,l)&&o?(a.value=!1,L.value=!1,!1):!0}};T(fp,"PreventBypassSpeedChanceAbAttr");let YU=fp;async function tE(E,A,s,R,I=!1,i=!1,a=[]){for(const L of[!1,!0]){if(!(A!=null&&A.canApplyAbility(L))||L&&A.getPassiveAbility().id===A.getAbility().id)continue;const S=L?A.getPassiveAbility():A.getAbility();for(const o of S.getAttrs(E)){const l=o.getCondition();if(l&&!l(A))continue;A.scene.setPhaseQueueSplice();let D=s(o,L);if(D instanceof Promise&&(D=await D),D){A.summonData&&!A.summonData.abilitiesApplied.includes(S.id)&&A.summonData.abilitiesApplied.push(S.id),A.battleData&&!i&&!A.battleData.abilitiesApplied.includes(S.id)&&A.battleData.abilitiesApplied.push(S.id),o.showAbility&&!i&&(I?A.scene.abilityBar.showAbility(A,L):Y1(A,L));const M=o.getTriggerMessage(A,S.name,R);M&&(i||A.scene.queueMessage(M)),a.push(M)}}A.scene.clearPhaseQueueSplice()}}T(tE,"applyAbAttrsInternal");function Et(E,A,s,R=!1,...I){return tE(E,A,(i,a)=>i.apply(A,a,R,s,I),I,!1,R)}T(Et,"applyAbAttrs");function eb(E,A,s=!1,...R){return tE(E,A,(I,i)=>I.applyPostBattleInit(A,i,s,R),R,!1,s)}T(eb,"applyPostBattleInitAbAttrs");function aI(E,A,s,R,I,i=!1,...a){return tE(E,A,(L,S)=>L.applyPreDefend(A,S,i,s,R,I,a),a,!1,i)}T(aI,"applyPreDefendAbAttrs");function dX(E,A,s,R,I,i=!1,...a){return tE(E,A,(L,S)=>L.applyPostDefend(A,S,i,s,R,I,a),a,!1,i)}T(dX,"applyPostDefendAbAttrs");function fX(E,A,s,R,I,i=!1,...a){return tE(E,A,(L,S)=>L.applyPostMoveUsed(A,s,R,I,i,a),a,!1,i)}T(fX,"applyPostMoveUsedAbAttrs");function A0(E,A,s,R,I=!1,...i){return tE(E,A,(a,L)=>a.applyStatStage(A,L,I,s,R,i),i)}T(A0,"applyStatMultiplierAbAttrs");function BX(E,A,s,R,I=!1,...i){return tE(E,A,(a,L)=>a.applyPostSetStatus(A,R,L,s,I,i),i,!1,I)}T(BX,"applyPostSetStatusAbAttrs");function gX(E,A,s,R,I,i,a=!1,...L){return tE(E,A,(S,o)=>S.applyFieldStat(A,o,a,s,R,I,i,L),L)}T(gX,"applyFieldStatMultiplierAbAttrs");function gO(E,A,s,R,I=!1,...i){return tE(E,A,(a,L)=>a.applyPreAttack(A,L,I,s,R,i),i,!1,I)}T(gO,"applyPreAttackAbAttrs");function tb(E,A,s,R,I,i=!1,...a){return tE(E,A,(L,S)=>L.applyPostAttack(A,S,i,s,R,I,a),a,!1,i)}T(tb,"applyPostAttackAbAttrs");function KX(E,A,s,R=!1,...I){return tE(E,A,(i,a)=>i.applyPostKnockOut(A,a,R,s,I),I,!1,R)}T(KX,"applyPostKnockOutAbAttrs");function FX(E,A,s=!1,...R){return tE(E,A,(I,i)=>I.applyPostVictory(A,i,s,R),R,!1,s)}T(FX,"applyPostVictoryAbAttrs");function mX(E,A,s=!1,...R){return tE(E,A,(I,i)=>I.applyPostSummon(A,i,s,R),R,!1,s)}T(mX,"applyPostSummonAbAttrs");function WX(E,A,s=!1,...R){return tE(E,A,(I,i)=>I.applyPreSwitchOut(A,i,s,R),R,!0,s)}T(WX,"applyPreSwitchOutAbAttrs");function YX(E,A,s,R,I=!1,...i){return tE(E,A,(a,L)=>a.applyPreStatStageChange(A,L,I,s,R,i),i,!1,I)}T(YX,"applyPreStatStageChangeAbAttrs");function pX(E,A,s,R,I,i=!1,...a){return tE(E,A,(L,S)=>L.applyPostStatStageChange(A,i,s,R,I,a),a,!1,i)}T(pX,"applyPostStatStageChangeAbAttrs");function gx(E,A,s,R,I=!1,...i){return tE(E,A,(a,L)=>a.applyPreSetStatus(A,L,I,s,R,i),i,!1,I)}T(gx,"applyPreSetStatusAbAttrs");function vo(E,A,s,R,I=!1,...i){return tE(E,A,(a,L)=>a.applyPreApplyBattlerTag(A,L,I,s,R,i),i,!1,I)}T(vo,"applyPreApplyBattlerTagAbAttrs");function Kx(E,A,s,R,I=!1,...i){return tE(E,A,(a,L)=>a.applyPreWeatherEffect(A,L,I,s,R,i),i,!0,I)}T(Kx,"applyPreWeatherEffectAbAttrs");function yX(E,A,s=!1,...R){return tE(E,A,(I,i)=>I.applyPostTurn(A,i,s,R),R,!1,s)}T(yX,"applyPostTurnAbAttrs");function wX(E,A,s,R=!1,...I){return tE(E,A,(i,a)=>i.applyPostWeatherChange(A,a,R,s,I),I,!1,R)}T(wX,"applyPostWeatherChangeAbAttrs");function VX(E,A,s,R=!1,...I){return tE(E,A,(i,a)=>i.applyPostWeatherLapse(A,a,R,s,I),I,!1,R)}T(VX,"applyPostWeatherLapseAbAttrs");function vX(E,A,s,R=!1,...I){return tE(E,A,(i,a)=>i.applyPostTerrainChange(A,a,R,s,I),I,!1,R)}T(vX,"applyPostTerrainChangeAbAttrs");function xX(E,A,s,R,I,i=!1,...a){return tE(E,A,(L,S)=>L.applyCheckTrapped(A,S,i,s,R,a),a,!1,i,I)}T(xX,"applyCheckTrappedAbAttrs");function bX(E,A,s=!1,...R){return tE(E,A,(I,i)=>I.applyPostBattle(A,i,s,R),R,!1,s)}T(bX,"applyPostBattleAbAttrs");function Fx(E,A,s,R,I,i=!1,...a){return tE(E,A,(L,S)=>L.applyPostFaint(A,S,i,s,R,I,a),a,!1,i)}T(Fx,"applyPostFaintAbAttrs");function Y1(E,A){E.scene.unshiftPhase(new mn(E.scene,E.id,A)),E.scene.clearPhaseQueueSplice()}T(Y1,"queueShowAbility");function Ab(E){E.battleData&&(E.battleData.abilityRevealed=!0)}T(Ab,"setAbilityRevealed");function Eb(E){return E.getField(!0).filter(A=>A.hasAbility(O.FORECAST)&&A.species.speciesId===e.CASTFORM||A.hasAbility(O.FLOWER_GIFT)&&A.species.speciesId===e.CHERRIM)}T(Eb,"getPokemonWithWeatherBasedForms");const jA=[new X(O.NONE,3)];function kX(){jA.push(new X(O.STENCH,3).attr(nP,!1,(E,A,s)=>!s.hasAttr(qt)&&!s.hitsSubstitute(E,A)?10:0,Y.FLINCHED),new X(O.DRIZZLE,3).attr(bO,Q.RAIN).attr(kO,Q.RAIN),new X(O.SPEED_BOOST,3).attr(gP,[B.SPD],1),new X(O.BATTLE_ARMOR,3).attr(xS).ignorable(),new X(O.STURDY,3).attr(wC).attr(rU).ignorable(),new X(O.DAMP,3).attr(WS).ignorable(),new X(O.LIMBER,3).attr(TR,J.PARALYSIS).ignorable(),new X(O.SAND_VEIL,3).attr(SA,B.EVA,1.2).attr(iI,Q.SANDSTORM).condition(cs(Q.SANDSTORM)).ignorable(),new X(O.STATIC,3).attr(qa,30,J.PARALYSIS).bypassFaint(),new X(O.VOLT_ABSORB,3).attr(ga,n.ELECTRIC).ignorable(),new X(O.WATER_ABSORB,3).attr(ga,n.WATER).ignorable(),new X(O.OBLIVIOUS,3).attr(qO,[Y.INFATUATED,Y.TAUNT]).attr(Ci).ignorable(),new X(O.CLOUD_NINE,3).attr(Ra,!0).attr(AU,U.t("abilityTriggers:weatherEffectDisappeared")).attr(EU).attr(PU).bypassFaint(),new X(O.COMPOUND_EYES,3).attr(SA,B.ACC,1.3),new X(O.INSOMNIA,3).attr(TR,J.SLEEP).attr(qO,Y.DROWSY).ignorable(),new X(O.COLOR_CHANGE,3).attr(QG).condition(ua()),new X(O.IMMUNITY,3).attr(TR,J.POISON,J.TOXIC).ignorable(),new X(O.FLASH_FIRE,3).attr(bG,n.FIRE,Y.FIRE_BOOST,1).ignorable(),new X(O.SHIELD_DUST,3).attr(wI),new X(O.OWN_TEMPO,3).attr(qO,Y.CONFUSED).attr(Ci).ignorable(),new X(O.SUCTION_CUPS,3).attr(wL).ignorable(),new X(O.INTIMIDATE,3).attr(Ui,[B.ATK],-1,!1,!0),new X(O.SHADOW_TAG,3).attr(Kr,(E,A)=>!A.hasAbility(O.SHADOW_TAG)),new X(O.ROUGH_SKIN,3).attr(ZC,8).bypassFaint(),new X(O.WONDER_GUARD,3).attr(kG).attr(Vt).attr(nA).ignorable(),new X(O.LEVITATE,3).attr(xG,n.GROUND,E=>!E.getTag(Eo)&&!E.scene.arena.getTag(Me.GRAVITY)).ignorable(),new X(O.EFFECT_SPORE,3).attr($G),new X(O.SYNCHRONIZE,3).attr(gU).attr(iP).partial(),new X(O.CLEAR_BODY,3).attr(mR).ignorable(),new X(O.NATURAL_CURE,3).attr(DP),new X(O.LIGHTNING_ROD,3).attr(HU,n.ELECTRIC).attr(Ai,n.ELECTRIC,B.SPATK,1).ignorable(),new X(O.SERENE_GRACE,3).attr(FS,2),new X(O.SWIFT_SWIM,3).attr(SA,B.SPD,2).condition(cs(Q.RAIN,Q.HEAVY_RAIN)),new X(O.CHLOROPHYLL,3).attr(SA,B.SPD,2).condition(cs(Q.SUNNY,Q.HARSH_SUN)),new X(O.ILLUMINATE,3).attr(mR,B.ACC).attr(Ja).ignorable(),new X(O.TRACE,3).attr(oP).attr(Vt),new X(O.HUGE_POWER,3).attr(SA,B.ATK,2),new X(O.POISON_POINT,3).attr(qa,30,J.POISON).bypassFaint(),new X(O.INNER_FOCUS,3).attr(qO,Y.FLINCHED).attr(Ci).ignorable(),new X(O.MAGMA_ARMOR,3).attr(TR,J.FREEZE).ignorable(),new X(O.WATER_VEIL,3).attr(TR,J.BURN).ignorable(),new X(O.MAGNET_PULL,3).attr(Kr,(E,A)=>!!(A.getTypes(!0).includes(n.STEEL)||A.getTypes(!0).includes(n.STELLAR)&&A.getTypes().includes(n.STEEL))),new X(O.SOUNDPROOF,3).attr(Gn,(E,A,s)=>E!==A&&s.hasFlag(pt.SOUND_BASED)).ignorable(),new X(O.RAIN_DISH,3).attr(Br,1,Q.RAIN,Q.HEAVY_RAIN),new X(O.SAND_STREAM,3).attr(bO,Q.SANDSTORM).attr(kO,Q.SANDSTORM),new X(O.PRESSURE,3).attr(BU).attr(Gs,E=>U.t("abilityTriggers:postSummonPressure",{pokemonNameWithAffix:b(E)})),new X(O.THICK_FAT,3).attr(OI,n.FIRE,.5).attr(OI,n.ICE,.5).ignorable(),new X(O.EARLY_BIRD,3).attr(dU,J.SLEEP),new X(O.FLAME_BODY,3).attr(qa,30,J.BURN).bypassFaint(),new X(O.RUN_AWAY,3).attr(cU),new X(O.KEEN_EYE,3).attr(mR,B.ACC).ignorable(),new X(O.HYPER_CUTTER,3).attr(mR,B.ATK).ignorable(),new X(O.PICKUP,3).attr(WP),new X(O.TRUANT,3).attr(Dn,Y.TRUANT,1,!1),new X(O.HUSTLE,3).attr(SA,B.ATK,1.5).attr(SA,B.ACC,.8,(E,A,s)=>s.category===Ot.PHYSICAL),new X(O.CUTE_CHARM,3).attr(qG,30,Y.INFATUATED),new X(O.PLUS,3).conditionalAttr(E=>E.scene.currentBattle.double&&[O.PLUS,O.MINUS].some(A=>E.getAlly().hasAbility(A)),SA,B.SPATK,1.5).ignorable(),new X(O.MINUS,3).conditionalAttr(E=>E.scene.currentBattle.double&&[O.PLUS,O.MINUS].some(A=>E.getAlly().hasAbility(A)),SA,B.SPATK,1.5).ignorable(),new X(O.FORECAST,3).attr(Vt).attr(ZE).attr(sU,O.FORECAST).attr(oU,O.FORECAST,[Q.NONE,Q.SANDSTORM,Q.STRONG_WINDS,Q.FOG]),new X(O.STICKY_HOLD,3).attr(YL).bypassFaint().ignorable(),new X(O.SHED_SKIN,3).conditionalAttr(E=>!le(3),gr),new X(O.GUTS,3).attr(uU).conditionalAttr(E=>!!E.status||E.hasAbility(O.COMATOSE),SA,B.ATK,1.5),new X(O.MARVEL_SCALE,3).conditionalAttr(E=>!!E.status||E.hasAbility(O.COMATOSE),SA,B.DEF,1.5).ignorable(),new X(O.LIQUID_OOZE,3).attr(KS),new X(O.OVERGROW,3).attr(Ka,n.GRASS),new X(O.BLAZE,3).attr(Ka,n.FIRE),new X(O.TORRENT,3).attr(Ka,n.WATER),new X(O.SWARM,3).attr(Ka,n.BUG),new X(O.ROCK_HEAD,3).attr(yC),new X(O.DROUGHT,3).attr(bO,Q.SUNNY).attr(kO,Q.SUNNY),new X(O.ARENA_TRAP,3).attr(Kr,(E,A)=>!!A.isGrounded()).attr(Ja),new X(O.VITAL_SPIRIT,3).attr(TR,J.SLEEP).attr(qO,Y.DROWSY).ignorable(),new X(O.WHITE_SMOKE,3).attr(mR).ignorable(),new X(O.PURE_POWER,3).attr(SA,B.ATK,2),new X(O.SHELL_ARMOR,3).attr(xS).ignorable(),new X(O.AIR_LOCK,3).attr(Ra,!0).attr(AU,U.t("abilityTriggers:weatherEffectDisappeared")).attr(EU).attr(PU).bypassFaint(),new X(O.TANGLED_FEET,4).conditionalAttr(E=>!!E.getTag(Y.CONFUSED),SA,B.EVA,2).ignorable(),new X(O.MOTOR_DRIVE,4).attr(Ai,n.ELECTRIC,B.SPD,1).ignorable(),new X(O.RIVALRY,4).attr(kE,(E,A,s)=>(E==null?void 0:E.gender)!==ye.GENDERLESS&&(A==null?void 0:A.gender)!==ye.GENDERLESS&&(E==null?void 0:E.gender)===(A==null?void 0:A.gender),1.25,!0).attr(kE,(E,A,s)=>(E==null?void 0:E.gender)!==ye.GENDERLESS&&(A==null?void 0:A.gender)!==ye.GENDERLESS&&(E==null?void 0:E.gender)!==(A==null?void 0:A.gender),.75),new X(O.STEADFAST,4).attr(yP,[B.SPD],1),new X(O.SNOW_CLOAK,4).attr(SA,B.EVA,1.2).attr(iI,Q.HAIL).condition(cs(Q.HAIL,Q.SNOW)).ignorable(),new X(O.GLUTTONY,4).attr(Di),new X(O.ANGER_POINT,4).attr(jG,B.ATK,6),new X(O.UNBURDEN,4).unimplemented(),new X(O.HEATPROOF,4).attr(OI,n.FIRE,.5).attr(hU,.5).ignorable(),new X(O.SIMPLE,4).attr(XS,2).ignorable(),new X(O.DRY_SKIN,4).attr(CU,2,Q.SUNNY,Q.HARSH_SUN).attr(Br,2,Q.RAIN,Q.HEAVY_RAIN).attr(OI,n.FIRE,1.25).attr(ga,n.WATER).ignorable(),new X(O.DOWNLOAD,4).attr(SP),new X(O.IRON_FIST,4).attr(kE,(E,A,s)=>s.hasFlag(pt.PUNCHING_MOVE),1.2),new X(O.POISON_HEAL,4).attr(dP,J.TOXIC,J.POISON).attr(LU,J.TOXIC,J.POISON),new X(O.ADAPTABILITY,4).attr(VC),new X(O.SKILL_LINK,4).attr(JS),new X(O.HYDRATION,4).attr(gr).condition(cs(Q.RAIN,Q.HEAVY_RAIN)),new X(O.SOLAR_POWER,4).attr(CU,2,Q.SUNNY,Q.HARSH_SUN).attr(SA,B.SPATK,1.5).condition(cs(Q.SUNNY,Q.HARSH_SUN)),new X(O.QUICK_FEET,4).conditionalAttr(E=>E.status?E.status.effect===J.PARALYSIS:!1,SA,B.SPD,2).conditionalAttr(E=>!!E.status||E.hasAbility(O.COMATOSE),SA,B.SPD,1.5),new X(O.NORMALIZE,4).attr($O,n.NORMAL,1.2,(E,A,s)=>![t.HIDDEN_POWER,t.WEATHER_BALL,t.NATURAL_GIFT,t.JUDGMENT,t.TECHNO_BLAST].includes(s.id)),new X(O.SNIPER,4).attr(iU,1.5),new X(O.MAGIC_GUARD,4).attr(rE),new X(O.NO_GUARD,4).attr(jS).attr(Ja),new X(O.STALL,4).attr(zR,(E,A)=>!0,-.2),new X(O.TECHNICIAN,4).attr(kE,(E,A,s)=>{const R=new $e(s.power);return eA(_A,E,A,s,R),R.value<=60},1.5),new X(O.LEAF_GUARD,4).attr(TR).condition(cs(Q.SUNNY,Q.HARSH_SUN)).ignorable(),new X(O.KLUTZ,4).unimplemented(),new X(O.MOLD_BREAKER,4).attr(Gs,E=>U.t("abilityTriggers:postSummonMoldBreaker",{pokemonNameWithAffix:b(E)})).attr(hI),new X(O.SUPER_LUCK,4).attr(IU),new X(O.AFTERMATH,4).attr(YP,4).bypassFaint(),new X(O.ANTICIPATION,4).conditionalAttr(HX(),Gs,E=>U.t("abilityTriggers:postSummonAnticipation",{pokemonNameWithAffix:b(E)})),new X(O.FOREWARN,4).attr(PP),new X(O.UNAWARE,4).attr(Hi).ignorable(),new X(O.TINTED_LENS,4).attr(JC,2,(E,A,s)=>((A==null?void 0:A.getMoveEffectiveness(E,s))??1)<=.5),new X(O.FILTER,4).attr(qs,(E,A,s)=>E.getMoveEffectiveness(A,s)>=2,.75).ignorable(),new X(O.SLOW_START,4).attr(Dn,Y.SLOW_START,5),new X(O.SCRAPPY,4).attr(VL,n.GHOST,[n.NORMAL,n.FIGHTING]).attr(Ci),new X(O.STORM_DRAIN,4).attr(HU,n.WATER).attr(Ai,n.WATER,B.SPATK,1).ignorable(),new X(O.ICE_BODY,4).attr(iI,Q.HAIL).attr(Br,1,Q.HAIL,Q.SNOW),new X(O.SOLID_ROCK,4).attr(qs,(E,A,s)=>E.getMoveEffectiveness(A,s)>=2,.75).ignorable(),new X(O.SNOW_WARNING,4).attr(bO,Q.SNOW).attr(kO,Q.SNOW),new X(O.HONEY_GATHER,4).attr(wP),new X(O.FRISK,4).attr(_P),new X(O.RECKLESS,4).attr(kE,(E,A,s)=>s.hasFlag(pt.RECKLESS_MOVE),1.2),new X(O.MULTITYPE,4).attr(Vt).attr(nA).attr(qA).attr(ZE),new X(O.FLOWER_GIFT,4).conditionalAttr(cs(Q.SUNNY||Q.HARSH_SUN),SA,B.ATK,1.5).conditionalAttr(cs(Q.SUNNY||Q.HARSH_SUN),SA,B.SPDEF,1.5).attr(Vt).attr(ZE).attr(sU,O.FLOWER_GIFT).attr(oU,O.FLOWER_GIFT,[Q.NONE,Q.SANDSTORM,Q.STRONG_WINDS,Q.FOG,Q.HAIL,Q.HEAVY_RAIN,Q.SNOW,Q.RAIN]).partial().ignorable(),new X(O.BAD_DREAMS,4).attr(KP),new X(O.PICKPOCKET,5).attr(IP,(E,A,s)=>s.hasFlag(pt.MAKES_CONTACT)).condition(ua()),new X(O.SHEER_FORCE,5).attr(kE,(E,A,s)=>s.chance>=1,5461/4096).attr(FS,0).edgeCase().edgeCase(),new X(O.CONTRARY,5).attr(XS,-1).ignorable(),new X(O.UNNERVE,5).attr(za),new X(O.DEFIANT,5).attr(QC,(E,A,s)=>s<0,[B.ATK],2),new X(O.DEFEATIST,5).attr(SA,B.ATK,.5).attr(SA,B.SPATK,.5).condition(E=>E.getHpRatio()<=.5),new X(O.CURSED_BODY,5).attr(AP,30).bypassFaint(),new X(O.HEALER,5).conditionalAttr(E=>E.getAlly()&&le(10)<3,gr,!0),new X(O.FRIEND_GUARD,5).ignorable().unimplemented(),new X(O.WEAK_ARMOR,5).attr(fR,(E,A,s)=>s.category===Ot.PHYSICAL,B.DEF,-1).attr(fR,(E,A,s)=>s.category===Ot.PHYSICAL,B.SPD,2),new X(O.HEAVY_METAL,5).attr(qS,2).ignorable(),new X(O.LIGHT_METAL,5).attr(qS,.5).ignorable(),new X(O.MULTISCALE,5).attr(qs,(E,A,s)=>E.isFullHp(),.5).ignorable(),new X(O.TOXIC_BOOST,5).attr(kE,(E,A,s)=>{var R,I;return s.category===Ot.PHYSICAL&&(((R=E==null?void 0:E.status)==null?void 0:R.effect)===J.POISON||((I=E==null?void 0:E.status)==null?void 0:I.effect)===J.TOXIC)},1.5),new X(O.FLARE_BOOST,5).attr(kE,(E,A,s)=>{var R;return s.category===Ot.SPECIAL&&((R=E==null?void 0:E.status)==null?void 0:R.effect)===J.BURN},1.5),new X(O.HARVEST,5).attr(fP,"EATEN_BERRIES",E=>.5*(cs(Q.SUNNY,Q.HARSH_SUN)(E)?2:1)).edgeCase(),new X(O.TELEPATHY,5).attr(Gn,(E,A,s)=>E.getAlly()===A&&s instanceof d).ignorable(),new X(O.MOODY,5).attr(BP),new X(O.OVERCOAT,5).attr(iI).attr(Gn,(E,A,s)=>E!==A&&s.hasFlag(pt.POWDER_MOVE)).ignorable(),new X(O.POISON_TOUCH,5).attr(OP,30,J.POISON),new X(O.REGENERATOR,5).attr(MP),new X(O.BIG_PECKS,5).attr(mR,B.DEF).ignorable(),new X(O.SAND_RUSH,5).attr(SA,B.SPD,2).attr(iI,Q.SANDSTORM).condition(cs(Q.SANDSTORM)),new X(O.WONDER_SKIN,5).attr(bC).ignorable(),new X(O.ANALYTIC,5).attr(kE,(E,A,s)=>{var R;return!!(A!=null&&A.getLastXMoves(1).find(I=>I.turn===(A==null?void 0:A.scene.currentBattle.turn)))||((R=E==null?void 0:E.scene.currentBattle.turnCommands[(A==null?void 0:A.getBattlerIndex())??Ct.ATTACKER])==null?void 0:R.command)!==vt.FIGHT},1.3),new X(O.ILLUSION,5).attr(Vt).attr(nA).unimplemented(),new X(O.IMPOSTER,5).attr(UP).attr(Vt),new X(O.INFILTRATOR,5).attr(Oa).partial(),new X(O.MUMMY,5).attr(XC,O.MUMMY).bypassFaint(),new X(O.MOXIE,5).attr(nI,B.ATK,1),new X(O.JUSTIFIED,5).attr(fR,(E,A,s)=>A.getMoveType(s)===n.DARK&&s.category!==Ot.STATUS,B.ATK,1),new X(O.RATTLED,5).attr(fR,(E,A,s)=>{const R=A.getMoveType(s);return s.category!==Ot.STATUS&&(R===n.DARK||R===n.BUG||R===n.GHOST)},B.SPD,1).attr(VS,[B.SPD],1),new X(O.MAGIC_BOUNCE,5).ignorable().unimplemented(),new X(O.SAP_SIPPER,5).attr(Ai,n.GRASS,B.ATK,1).ignorable(),new X(O.PRANKSTER,5).attr(zR,(E,A)=>A.category===Ot.STATUS,1),new X(O.SAND_FORCE,5).attr(MO,n.ROCK,1.3).attr(MO,n.GROUND,1.3).attr(MO,n.STEEL,1.3).attr(iI,Q.SANDSTORM).condition(cs(Q.SANDSTORM)),new X(O.IRON_BARBS,5).attr(ZC,8).bypassFaint(),new X(O.ZEN_MODE,5).attr(lO,()=>0).attr(II,E=>E.getHpRatio()<=.5?1:0).attr(Mn,E=>E.getHpRatio()<=.5?1:0).attr(Vt).attr(nA).attr(qA).attr(ZE).bypassFaint(),new X(O.VICTORY_STAR,5).attr(SA,B.ACC,1.1).partial(),new X(O.TURBOBLAZE,5).attr(Gs,E=>U.t("abilityTriggers:postSummonTurboblaze",{pokemonNameWithAffix:b(E)})).attr(hI),new X(O.TERAVOLT,5).attr(Gs,E=>U.t("abilityTriggers:postSummonTeravolt",{pokemonNameWithAffix:b(E)})).attr(hI),new X(O.AROMA_VEIL,6).attr(pL,[Y.INFATUATED,Y.TAUNT,Y.DISABLED,Y.TORMENT,Y.HEAL_BLOCK]),new X(O.FLOWER_VEIL,6).ignorable().unimplemented(),new X(O.CHEEK_POUCH,6).attr(QS,1/3),new X(O.PROTEAN,6).attr(_i),new X(O.FUR_COAT,6).attr(qs,(E,A,s)=>s.category===Ot.PHYSICAL,.5).ignorable(),new X(O.MAGICIAN,6).attr(RP),new X(O.BULLETPROOF,6).attr(Gn,(E,A,s)=>E!==A&&s.hasFlag(pt.BALLBOMB_MOVE)).ignorable(),new X(O.COMPETITIVE,6).attr(QC,(E,A,s)=>s<0,[B.SPATK],2),new X(O.STRONG_JAW,6).attr(kE,(E,A,s)=>s.hasFlag(pt.BITING_MOVE),1.5),new X(O.REFRIGERATE,6).attr($O,n.ICE,1.2,(E,A,s)=>s.type===n.NORMAL&&!s.hasAttr(jE)),new X(O.SWEET_VEIL,6).attr(vS,J.SLEEP).attr(pL,Y.DROWSY).ignorable().partial(),new X(O.STANCE_CHANGE,6).attr(Vt).attr(nA).attr(qA).attr(ZE),new X(O.GALE_WINGS,6).attr(zR,(E,A)=>E.isFullHp()&&E.getMoveType(A)===n.FLYING,1),new X(O.MEGA_LAUNCHER,6).attr(kE,(E,A,s)=>s.hasFlag(pt.PULSE_MOVE),1.5),new X(O.GRASS_PELT,6).conditionalAttr(Vo(Rt.GRASSY),SA,B.DEF,1.5).ignorable(),new X(O.SYMBIOSIS,6).unimplemented(),new X(O.TOUGH_CLAWS,6).attr(kE,(E,A,s)=>s.hasFlag(pt.MAKES_CONTACT),1.3),new X(O.PIXILATE,6).attr($O,n.FAIRY,1.2,(E,A,s)=>s.type===n.NORMAL&&!s.hasAttr(jE)),new X(O.GOOEY,6).attr(fR,(E,A,s)=>s.hasFlag(pt.MAKES_CONTACT),B.SPD,-1,!1),new X(O.AERILATE,6).attr($O,n.FLYING,1.2,(E,A,s)=>s.type===n.NORMAL&&!s.hasAttr(jE)),new X(O.PARENTAL_BOND,6).attr(YS,.25),new X(O.DARK_AURA,6).attr(Gs,E=>U.t("abilityTriggers:postSummonDarkAura",{pokemonNameWithAffix:b(E)})).attr(li,n.DARK,4/3),new X(O.FAIRY_AURA,6).attr(Gs,E=>U.t("abilityTriggers:postSummonFairyAura",{pokemonNameWithAffix:b(E)})).attr(li,n.FAIRY,4/3),new X(O.AURA_BREAK,6).ignorable().conditionalAttr(E=>E.scene.getField(!0).some(A=>A.hasAbility(O.DARK_AURA)),li,n.DARK,9/16).conditionalAttr(E=>E.scene.getField(!0).some(A=>A.hasAbility(O.FAIRY_AURA)),li,n.FAIRY,9/16).conditionalAttr(E=>E.scene.getField(!0).some(A=>A.hasAbility(O.DARK_AURA)||A.hasAbility(O.FAIRY_AURA)),Gs,E=>U.t("abilityTriggers:postSummonAuraBreak",{pokemonNameWithAffix:b(E)})),new X(O.PRIMORDIAL_SEA,6).attr(bO,Q.HEAVY_RAIN).attr(kO,Q.HEAVY_RAIN).attr(fr).attr(Fr).bypassFaint(),new X(O.DESOLATE_LAND,6).attr(bO,Q.HARSH_SUN).attr(kO,Q.HARSH_SUN).attr(fr).attr(Fr).bypassFaint(),new X(O.DELTA_STREAM,6).attr(bO,Q.STRONG_WINDS).attr(kO,Q.STRONG_WINDS).attr(fr).attr(Fr).bypassFaint(),new X(O.STAMINA,7).attr(fR,(E,A,s)=>s.category!==Ot.STATUS,B.DEF,1),new X(O.WIMP_OUT,7).condition(ua()).unimplemented(),new X(O.EMERGENCY_EXIT,7).condition(ua()).unimplemented(),new X(O.WATER_COMPACTION,7).attr(fR,(E,A,s)=>A.getMoveType(s)===n.WATER&&s.category!==Ot.STATUS,B.DEF,2),new X(O.MERCILESS,7).attr(aU,(E,A,s)=>{var R,I;return((R=A==null?void 0:A.status)==null?void 0:R.effect)===J.TOXIC||((I=A==null?void 0:A.status)==null?void 0:I.effect)===J.POISON}),new X(O.SHIELDS_DOWN,7).attr(lO,()=>0).attr(II,E=>E.formIndex%7+(E.getHpRatio()<=.5?7:0)).attr(Mn,E=>E.formIndex%7+(E.getHpRatio()<=.5?7:0)).attr(Vt).attr(nA).attr(qA).attr(ZE).bypassFaint().partial(),new X(O.STAKEOUT,7).attr(kE,(E,A,s)=>{var R;return((R=E==null?void 0:E.scene.currentBattle.turnCommands[(A==null?void 0:A.getBattlerIndex())??Ct.ATTACKER])==null?void 0:R.command)===vt.POKEMON},2),new X(O.WATER_BUBBLE,7).attr(OI,n.FIRE,.5).attr(MO,n.WATER,2).attr(TR,J.BURN).ignorable(),new X(O.STEELWORKER,7).attr(MO,n.STEEL),new X(O.BERSERK,7).attr(dr,(E,A,s)=>s.category!==Ot.STATUS,.5,[B.SPATK],1).condition(ua()),new X(O.SLUSH_RUSH,7).attr(SA,B.SPD,2).condition(cs(Q.HAIL,Q.SNOW)),new X(O.LONG_REACH,7).attr(NU),new X(O.LIQUID_VOICE,7).attr($O,n.WATER,1,(E,A,s)=>s.hasFlag(pt.SOUND_BASED)),new X(O.TRIAGE,7).attr(zR,(E,A)=>A.hasFlag(pt.TRIAGE_MOVE),3),new X(O.GALVANIZE,7).attr($O,n.ELECTRIC,1.2,(E,A,s)=>s.type===n.NORMAL&&!s.hasAttr(jE)),new X(O.SURGE_SURFER,7).conditionalAttr(Vo(Rt.ELECTRIC),SA,B.SPD,2),new X(O.SCHOOLING,7).attr(lO,()=>0).attr(II,E=>E.level<20||E.getHpRatio()<=.25?0:1).attr(Mn,E=>E.level<20||E.getHpRatio()<=.25?0:1).attr(Vt).attr(nA).attr(qA).attr(ZE).bypassFaint(),new X(O.DISGUISE,7).attr(Vt).attr(nA).attr(qA).attr(Qs).attr(ZE).conditionalAttr(E=>E.formIndex===0,Dn,Y.DISGUISE,0,!1).attr(mU,(E,A,s)=>!!E.getTag(Y.DISGUISE)&&E.getMoveEffectiveness(A,s)>0,0,Y.DISGUISE,(E,A)=>U.t("abilityTriggers:disguiseAvoidedDamage",{pokemonNameWithAffix:b(E),abilityName:A}),E=>gt(E.getMaxHp()/8)).attr(lO,()=>0).bypassFaint().ignorable(),new X(O.BATTLE_BOND,7).attr(aP,()=>2).attr(lO,()=>1).attr(Vt).attr(nA).attr(qA).attr(ZE).bypassFaint(),new X(O.POWER_CONSTRUCT,7).conditionalAttr(E=>E.formIndex===2||E.formIndex===4,lO,()=>2).conditionalAttr(E=>E.formIndex===3||E.formIndex===5,lO,()=>3).conditionalAttr(E=>E.formIndex===2||E.formIndex===4,II,E=>E.getHpRatio()<=.5||E.getFormKey()==="complete"?4:2).conditionalAttr(E=>E.formIndex===2||E.formIndex===4,Mn,E=>E.getHpRatio()<=.5||E.getFormKey()==="complete"?4:2).conditionalAttr(E=>E.formIndex===3||E.formIndex===5,II,E=>E.getHpRatio()<=.5||E.getFormKey()==="10-complete"?5:3).conditionalAttr(E=>E.formIndex===3||E.formIndex===5,Mn,E=>E.getHpRatio()<=.5||E.getFormKey()==="10-complete"?5:3).attr(Vt).attr(nA).attr(qA).attr(ZE).bypassFaint(),new X(O.CORROSION,7).attr(FU,[J.POISON,J.TOXIC],[n.STEEL,n.POISON]).edgeCase(),new X(O.COMATOSE,7).attr(Vt).attr(nA).attr(qA).attr(TR,...o1()).attr(qO,Y.DROWSY),new X(O.QUEENLY_MAJESTY,7).attr($a).ignorable(),new X(O.INNARDS_OUT,7).attr(pP).bypassFaint(),new X(O.DANCER,7).attr(mP),new X(O.BATTERY,7).attr(pS,[Ot.SPECIAL],1.3),new X(O.FLUFFY,7).attr(qs,(E,A,s)=>s.hasFlag(pt.MAKES_CONTACT),.5).attr(qs,(E,A,s)=>A.getMoveType(s)===n.FIRE,2).ignorable(),new X(O.DAZZLING,7).attr($a).ignorable(),new X(O.SOUL_HEART,7).attr(LP,B.SPATK,1),new X(O.TANGLING_HAIR,7).attr(fR,(E,A,s)=>s.hasFlag(pt.MAKES_CONTACT),B.SPD,-1,!1),new X(O.RECEIVER,7).attr(tU).attr(Vt),new X(O.POWER_OF_ALCHEMY,7).attr(tU).attr(Vt),new X(O.BEAST_BOOST,7).attr(nI,E=>{let A,s=0;for(const R of Kn){const I=E.getStat(R,!1);I>s&&(A=R,s=I)}return A},1),new X(O.RKS_SYSTEM,7).attr(Vt).attr(nA).attr(qA).attr(ZE),new X(O.ELECTRIC_SURGE,7).attr(Ei,Rt.ELECTRIC).attr(si,Rt.ELECTRIC),new X(O.PSYCHIC_SURGE,7).attr(Ei,Rt.PSYCHIC).attr(si,Rt.PSYCHIC),new X(O.MISTY_SURGE,7).attr(Ei,Rt.MISTY).attr(si,Rt.MISTY),new X(O.GRASSY_SURGE,7).attr(Ei,Rt.GRASSY).attr(si,Rt.GRASSY),new X(O.FULL_METAL_BODY,7).attr(mR),new X(O.SHADOW_SHIELD,7).attr(qs,(E,A,s)=>E.isFullHp(),.5),new X(O.PRISM_ARMOR,7).attr(qs,(E,A,s)=>E.getMoveEffectiveness(A,s)>=2,.75),new X(O.NEUROFORCE,7).attr(kE,(E,A,s)=>((A==null?void 0:A.getMoveEffectiveness(E,s))??1)>=2,1.25),new X(O.INTREPID_SWORD,8).attr(Ui,[B.ATK],1,!0).condition(wo(O.INTREPID_SWORD)),new X(O.DAUNTLESS_SHIELD,8).attr(Ui,[B.DEF],1,!0).condition(wo(O.DAUNTLESS_SHIELD)),new X(O.LIBERO,8).attr(_i),new X(O.BALL_FETCH,8).attr(FP).condition(wo(O.BALL_FETCH)),new X(O.COTTON_DOWN,8).attr(fR,(E,A,s)=>s.category!==Ot.STATUS,B.SPD,-1,!1,!0).bypassFaint(),new X(O.PROPELLER_TAIL,8).attr(yL),new X(O.MIRROR_ARMOR,8).ignorable().unimplemented(),new X(O.GULP_MISSILE,8).attr(qA).attr(Qs).attr(ZE).attr(Vt).attr(nA).bypassFaint(),new X(O.STALWART,8).attr(yL),new X(O.STEAM_ENGINE,8).attr(fR,(E,A,s)=>{const R=A.getMoveType(s);return s.category!==Ot.STATUS&&(R===n.FIRE||R===n.WATER)},B.SPD,6),new X(O.PUNK_ROCK,8).attr(kE,(E,A,s)=>s.hasFlag(pt.SOUND_BASED),1.3).attr(qs,(E,A,s)=>s.hasFlag(pt.SOUND_BASED),.5).ignorable(),new X(O.SAND_SPIT,8).attr(eP,Q.SANDSTORM,(E,A,s)=>s.category!==Ot.STATUS),new X(O.ICE_SCALES,8).attr(qs,(E,A,s)=>s.category===Ot.SPECIAL,.5).ignorable(),new X(O.RIPEN,8).attr(ja),new X(O.ICE_FACE,8).attr(Vt).attr(nA).attr(qA).attr(Qs).attr(ZE).conditionalAttr(E=>E.formIndex===0,Dn,Y.ICE_FACE,0,!1).conditionalAttr(cs(Q.HAIL,Q.SNOW),Dn,Y.ICE_FACE,0).attr(lU,Y.ICE_FACE,0,Q.HAIL,Q.SNOW).attr(mU,(E,A,s)=>s.category===Ot.PHYSICAL&&!!E.getTag(Y.ICE_FACE),0,Y.ICE_FACE,(E,A)=>U.t("abilityTriggers:iceFaceAvoidedDamage",{pokemonNameWithAffix:b(E),abilityName:A})).attr(lO,()=>0).bypassFaint().ignorable(),new X(O.POWER_SPOT,8).attr(pS,[Ot.SPECIAL,Ot.PHYSICAL],1.3),new X(O.MIMICRY,8).unimplemented(),new X(O.SCREEN_CLEANER,8).attr(rP,[Me.AURORA_VEIL,Me.LIGHT_SCREEN,Me.REFLECT]),new X(O.STEELY_SPIRIT,8).attr(jC,n.STEEL),new X(O.PERISH_BODY,8).attr(zG,4),new X(O.WANDERING_SPIRIT,8).attr(tP).bypassFaint().edgeCase(),new X(O.GORILLA_TACTICS,8).attr(sP),new X(O.NEUTRALIZING_GAS,8).attr(UI).attr(Vt).attr(nA).attr(Qs).attr(Gs,E=>U.t("abilityTriggers:postSummonNeutralizingGas",{pokemonNameWithAffix:b(E)})).partial(),new X(O.PASTEL_VEIL,8).attr(lP,J.POISON,J.TOXIC).attr(vS,J.POISON,J.TOXIC).ignorable(),new X(O.HUNGER_SWITCH,8).attr(Mn,E=>E.getFormKey()?0:1).attr(Mn,E=>E.getFormKey()?1:0).attr(Vt).attr(nA).attr(Qs).attr(ZE).condition(E=>!E.isTerastallized()),new X(O.QUICK_DRAW,8).attr(WU,30),new X(O.UNSEEN_FIST,8).attr(KU),new X(O.CURIOUS_MEDICINE,8).attr(TP),new X(O.TRANSISTOR,8).attr(MO,n.ELECTRIC),new X(O.DRAGONS_MAW,8).attr(MO,n.DRAGON),new X(O.CHILLING_NEIGH,8).attr(nI,B.ATK,1),new X(O.GRIM_NEIGH,8).attr(nI,B.SPATK,1),new X(O.AS_ONE_GLASTRIER,8).attr(Gs,E=>U.t("abilityTriggers:postSummonAsOneGlastrier",{pokemonNameWithAffix:b(E)})).attr(za).attr(nI,B.ATK,1).attr(Vt).attr(nA).attr(qA),new X(O.AS_ONE_SPECTRIER,8).attr(Gs,E=>U.t("abilityTriggers:postSummonAsOneSpectrier",{pokemonNameWithAffix:b(E)})).attr(za).attr(nI,B.SPATK,1).attr(Vt).attr(nA).attr(qA),new X(O.LINGERING_AROMA,9).attr(XC,O.LINGERING_AROMA).bypassFaint(),new X(O.SEED_SOWER,9).attr(JG,Rt.GRASSY),new X(O.THERMAL_EXCHANGE,9).attr(fR,(E,A,s)=>A.getMoveType(s)===n.FIRE&&s.category!==Ot.STATUS,B.ATK,1).attr(TR,J.BURN).ignorable(),new X(O.ANGER_SHELL,9).attr(dr,(E,A,s)=>s.category!==Ot.STATUS,.5,[B.ATK,B.SPATK,B.SPD],1).attr(dr,(E,A,s)=>s.category!==Ot.STATUS,.5,[B.DEF,B.SPDEF],-1).condition(ua()),new X(O.PURIFYING_SALT,9).attr(TR).attr(OI,n.GHOST,.5).ignorable(),new X(O.WELL_BAKED_BODY,9).attr(Ai,n.FIRE,B.DEF,2).ignorable(),new X(O.WIND_RIDER,9).attr(ZG,(E,A,s)=>E!==A&&s.hasFlag(pt.WIND_MOVE)&&s.category!==Ot.STATUS,B.ATK,1).attr(VP,Me.TAILWIND).ignorable(),new X(O.GUARD_DOG,9).attr(VS,[B.ATK],1,!0).attr(wL).ignorable(),new X(O.ROCKY_PAYLOAD,9).attr(MO,n.ROCK),new X(O.WIND_POWER,9).attr(kC,(E,A,s)=>s.hasFlag(pt.WIND_MOVE),Y.CHARGED),new X(O.ZERO_TO_HERO,9).attr(Vt).attr(nA).attr(qA).attr(Qs).attr(ZE).attr(lO,()=>0).attr(uP,E=>E.isFainted()?E.formIndex:1).bypassFaint(),new X(O.COMMANDER,9).attr(Vt).attr(nA).unimplemented(),new X(O.ELECTROMORPHOSIS,9).attr(kC,(E,A,s)=>s.category!==Ot.STATUS,Y.CHARGED),new X(O.PROTOSYNTHESIS,9).conditionalAttr(cs(Q.SUNNY,Q.HARSH_SUN),Dn,Y.PROTOSYNTHESIS,0,!0).attr(lU,Y.PROTOSYNTHESIS,0,Q.SUNNY,Q.HARSH_SUN).attr(Vt).attr(nA).attr(Qs).partial(),new X(O.QUARK_DRIVE,9).conditionalAttr(Vo(Rt.ELECTRIC),Dn,Y.QUARK_DRIVE,0,!0).attr(HP,Y.QUARK_DRIVE,0,Rt.ELECTRIC).attr(Vt).attr(nA).attr(Qs).partial(),new X(O.GOOD_AS_GOLD,9).attr(Gn,(E,A,s)=>E!==A&&s.category===Ot.STATUS).ignorable().partial(),new X(O.VESSEL_OF_RUIN,9).attr(oi,B.SPATK,.75).attr(Gs,E=>U.t("abilityTriggers:postSummonVesselOfRuin",{pokemonNameWithAffix:b(E),statName:U.t(aE(B.SPATK))})).ignorable(),new X(O.SWORD_OF_RUIN,9).attr(oi,B.DEF,.75).attr(Gs,E=>U.t("abilityTriggers:postSummonSwordOfRuin",{pokemonNameWithAffix:b(E),statName:U.t(aE(B.DEF))})).ignorable(),new X(O.TABLETS_OF_RUIN,9).attr(oi,B.ATK,.75).attr(Gs,E=>U.t("abilityTriggers:postSummonTabletsOfRuin",{pokemonNameWithAffix:b(E),statName:U.t(aE(B.ATK))})).ignorable(),new X(O.BEADS_OF_RUIN,9).attr(oi,B.SPDEF,.75).attr(Gs,E=>U.t("abilityTriggers:postSummonBeadsOfRuin",{pokemonNameWithAffix:b(E),statName:U.t(aE(B.SPDEF))})).ignorable(),new X(O.ORICHALCUM_PULSE,9).attr(bO,Q.SUNNY).attr(kO,Q.SUNNY).conditionalAttr(cs(Q.SUNNY,Q.HARSH_SUN),SA,B.ATK,4/3),new X(O.HADRON_ENGINE,9).attr(Ei,Rt.ELECTRIC).attr(si,Rt.ELECTRIC).conditionalAttr(Vo(Rt.ELECTRIC),SA,B.SPATK,4/3),new X(O.OPPORTUNIST,9).attr(MU),new X(O.CUD_CHEW,9).unimplemented(),new X(O.SHARPNESS,9).attr(kE,(E,A,s)=>s.hasFlag(pt.SLICING_MOVE),1.5),new X(O.SUPREME_OVERLORD,9).attr(EP,(E,A,s)=>1+.1*Math.min(E.isPlayer()?E.scene.currentBattle.playerFaints:E.scene.currentBattle.enemyFaints,5)).partial(),new X(O.COSTAR,9).attr(CP),new X(O.TOXIC_DEBRIS,9).attr(XG,(E,A,s)=>s.category===Ot.PHYSICAL,Me.TOXIC_SPIKES).bypassFaint(),new X(O.ARMOR_TAIL,9).attr($a).ignorable(),new X(O.EARTH_EATER,9).attr(ga,n.GROUND).ignorable(),new X(O.MYCELIUM_MIGHT,9).attr(zR,(E,A)=>A.category===Ot.STATUS,-.2).attr(YU,(E,A)=>A.category===Ot.STATUS).attr(hI,(E,A)=>A.category===Ot.STATUS),new X(O.MINDS_EYE,9).attr(VL,n.GHOST,[n.NORMAL,n.FIGHTING]).attr(mR,B.ACC).attr(Hi,[B.EVA]).ignorable(),new X(O.SUPERSWEET_SYRUP,9).attr(Ui,[B.EVA],-1).condition(wo(O.SUPERSWEET_SYRUP)),new X(O.HOSPITALITY,9).attr(NP,4,!0),new X(O.TOXIC_CHAIN,9).attr(zC,!1,30,J.TOXIC),new X(O.EMBODY_ASPECT_TEAL,9).attr(Ba,[B.SPD],1,!0).attr(Vt).attr(nA).attr(Qs).partial(),new X(O.EMBODY_ASPECT_WELLSPRING,9).attr(Ba,[B.SPDEF],1,!0).attr(Vt).attr(nA).attr(Qs).partial(),new X(O.EMBODY_ASPECT_HEARTHFLAME,9).attr(Ba,[B.ATK],1,!0).attr(Vt).attr(nA).attr(Qs).partial(),new X(O.EMBODY_ASPECT_CORNERSTONE,9).attr(Ba,[B.DEF],1,!0).attr(Vt).attr(nA).attr(Qs).partial(),new X(O.TERA_SHIFT,9).attr(II,E=>E.getFormKey()?0:1).attr(Vt).attr(nA).attr(qA).attr(Qs).attr(ZE),new X(O.TERA_SHELL,9).attr(vC).attr(Vt).attr(nA).ignorable(),new X(O.TERAFORM_ZERO,9).attr(Vt).attr(nA).unimplemented(),new X(O.POISON_PUPPETEER,9).attr(Vt).attr(nA).attr(RU,J.POISON,J.TOXIC))}T(kX,"initAbilities");var rs=(E=>(E[E.FAINT=0]="FAINT",E[E.MOVE=1]="MOVE",E[E.PRE_MOVE=2]="PRE_MOVE",E[E.AFTER_MOVE=3]="AFTER_MOVE",E[E.MOVE_EFFECT=4]="MOVE_EFFECT",E[E.TURN_END=5]="TURN_END",E[E.HIT=6]="HIT",E[E.AFTER_HIT=7]="AFTER_HIT",E[E.CUSTOM=8]="CUSTOM",E))(rs||{});const Bp=class Bp{constructor(A,s,R,I,i,a=!1){this.tagType=A,this.lapseTypes=Array.isArray(s)?s:[s],this.turnCount=R,this.sourceMove=I,this.sourceId=i,this.isBatonPassable=a}canAdd(A){return!0}onAdd(A){}onRemove(A){}onOverlap(A){}lapse(A,s){return--this.turnCount>0}getDescriptor(){return""}isSourceLinked(){return!1}getMoveName(){return this.sourceMove?He[this.sourceMove].name:null}loadTag(A){this.turnCount=A.turnCount,this.sourceMove=A.sourceMove,this.sourceId=A.sourceId}getSourcePokemon(A){return this.sourceId?A.getPokemonById(this.sourceId):null}};T(Bp,"BattlerTag");let dt=Bp;const gp=class gp extends dt{constructor(A,s,R,I,i){super(A,s,R,I,i)}lapse(A,s){if(s===2){const R=A.scene.getCurrentPhase(),I=R.move;return this.isMoveRestricted(I.moveId,A)&&(this.interruptedText(A,I.moveId)&&A.scene.queueMessage(this.interruptedText(A,I.moveId)),R.cancel()),!0}return super.lapse(A,s)}isMoveTargetRestricted(A,s,R){return!1}interruptedText(A,s){return""}};T(gp,"MoveRestrictionBattlerTag");let VO=gp;const Kp=class Kp extends VO{constructor(){super(Y.THROAT_CHOPPED,[5,2],2,t.THROAT_CHOP)}isMoveRestricted(A){return He[A].hasFlag(pt.SOUND_BASED)}selectionDeniedText(A,s){return U.t("battle:moveCannotBeSelected",{moveName:He[s].name})}interruptedText(A,s){return U.t("battle:throatChopInterruptedMove",{pokemonName:b(A)})}};T(Kp,"ThroatChoppedTag");let vP=Kp;const Fp=class Fp extends VO{constructor(A){super(Y.DISABLED,[2,5],4,t.DISABLE,A),this.moveId=t.NONE}isMoveRestricted(A){return A===this.moveId}onAdd(A){super.onAdd(A);const s=A.getLastXMoves().find(R=>R.move!==t.NONE&&R.move!==t.STRUGGLE&&!R.virtual);s!==void 0&&(this.moveId=s.move,A.scene.queueMessage(U.t("battlerTags:disabledOnAdd",{pokemonNameWithAffix:b(A),moveName:He[this.moveId].name})))}onRemove(A){super.onRemove(A),A.scene.queueMessage(U.t("battlerTags:disabledLapse",{pokemonNameWithAffix:b(A),moveName:He[this.moveId].name}))}selectionDeniedText(A,s){return U.t("battle:moveDisabled",{moveName:He[s].name})}interruptedText(A,s){return U.t("battle:disableInterruptedMove",{pokemonNameWithAffix:b(A),moveName:He[s].name})}loadTag(A){super.loadTag(A),this.moveId=A.moveId}};T(Fp,"DisabledTag");let xP=Fp;const _M=class _M extends VO{constructor(){super(Y.GORILLA_TACTICS,8,0),this.moveId=t.NONE}isMoveRestricted(A){return A!==this.moveId}canAdd(A){return this.getLastValidMove(A)!==void 0&&!A.getTag(_M)}onAdd(A){const s=this.getLastValidMove(A);s&&(this.moveId=s,A.setStat(B.ATK,A.getStat(B.ATK,!1)*1.5,!1))}loadTag(A){super.loadTag(A),this.moveId=A.moveId}selectionDeniedText(A,s){return U.t("battle:canOnlyUseMove",{moveName:He[this.moveId].name,pokemonName:b(A)})}getLastValidMove(A){const s=A.getLastXMoves().find(R=>R.move!==t.NONE&&R.move!==t.STRUGGLE&&!R.virtual);return s==null?void 0:s.move}};T(_M,"GorillaTacticsTag");let bP=_M;const mp=class mp extends dt{constructor(A){super(Y.RECHARGING,[2,5],2,A)}onAdd(A){super.onAdd(A),A.getMoveQueue().push({move:t.NONE,targets:[]})}lapse(A,s){return s===2&&(A.scene.queueMessage(U.t("battlerTags:rechargingLapse",{pokemonNameWithAffix:b(A)})),A.scene.getCurrentPhase().cancel(),A.getMoveQueue().shift()),super.lapse(A,s)}};T(mp,"RechargingTag");let kP=mp;const Wp=class Wp extends dt{constructor(){super(Y.BEAK_BLAST_CHARGING,[2,5,7],1,t.BEAK_BLAST)}onAdd(A){new no(Vn.BEAK_BLAST_CHARGING,this.sourceMove,A).play(A.scene),A.scene.queueMessage(U.t("moveTriggers:startedHeatingUpBeak",{pokemonName:b(A)}))}lapse(A,s){if(s===7){const R=Rb(A);return R!=null&&R.move.hasFlag(pt.MAKES_CONTACT)&&R.attacker.trySetStatus(J.BURN,!0,A),!0}return super.lapse(A,s)}};T(Wp,"BeakBlastChargingTag");let ZP=Wp;const Yp=class Yp extends dt{constructor(){super(Y.SHELL_TRAP,[5,7],1),this.activated=!1}onAdd(A){A.scene.queueMessage(U.t("moveTriggers:setUpShellTrap",{pokemonName:b(A)}))}lapse(A,s){if(s===7){const R=Rb(A);if((R==null?void 0:R.move.category)===Ot.PHYSICAL&&A.isOpponent(R.attacker)){const I=A.scene.phaseQueue.findIndex(a=>a instanceof JA&&a.pokemon===A),i=A.scene.phaseQueue.findIndex(a=>a instanceof JA);if(I!==-1&&I!==i){const a=A.scene.phaseQueue.splice(I,1)[0];A.scene.prependToPhase(a,JA)}this.activated=!0}return!0}return super.lapse(A,s)}};T(Yp,"ShellTrapTag");let pU=Yp;const HM=class HM extends dt{constructor(A,s,R,I,i){super(A,s,R,I,i,!0)}canAdd(A){const s=A.scene.getPokemonById(this.sourceId),R=He[this.sourceMove],I=A.isOfType(n.GHOST),i=A.getTag(HM),a=R.hitsSubstitute(s,A);return!i&&!I&&!a}onAdd(A){super.onAdd(A),A.scene.queueMessage(this.getTrapMessage(A))}onRemove(A){super.onRemove(A),A.scene.queueMessage(U.t("battlerTags:trappedOnRemove",{pokemonNameWithAffix:b(A),moveName:this.getMoveName()}))}getDescriptor(){return U.t("battlerTags:trappedDesc")}isSourceLinked(){return!0}getTrapMessage(A){return U.t("battlerTags:trappedOnAdd",{pokemonNameWithAffix:b(A)})}};T(HM,"TrappedTag");let GR=HM;const pp=class pp extends GR{constructor(A){super(Y.NO_RETREAT,8,0,t.NO_RETREAT,A)}canAdd(A){return!A.getTag(GR)}};T(pp,"NoRetreatTag");let XP=pp;const yp=class yp extends dt{constructor(A){super(Y.FLINCHED,[2,5],0,A)}onAdd(A){super.onAdd(A),Et(fU,A,null)}lapse(A,s){return s===2&&(A.scene.getCurrentPhase().cancel(),A.scene.queueMessage(U.t("battlerTags:flinchedLapse",{pokemonNameWithAffix:b(A)}))),super.lapse(A,s)}getDescriptor(){return U.t("battlerTags:flinchedDesc")}};T(yp,"FlinchedTag");let QP=yp;const wp=class wp extends dt{constructor(A){super(Y.INTERRUPTED,2,0,A)}canAdd(A){return!!A.getTag(Y.FLYING)}onAdd(A){super.onAdd(A),A.getMoveQueue().shift(),A.pushMoveHistory({move:t.NONE,result:DA.OTHER})}lapse(A,s){return A.scene.getCurrentPhase().cancel(),super.lapse(A,s)}};T(wp,"InterruptedTag");let JP=wp;const Vp=class Vp extends dt{constructor(A,s){super(Y.CONFUSED,1,A,s,void 0,!0)}canAdd(A){var s;return((s=A.scene.arena.terrain)==null?void 0:s.terrainType)!==Rt.MISTY||!A.isGrounded()}onAdd(A){super.onAdd(A),A.scene.unshiftPhase(new Ts(A.scene,A.getBattlerIndex(),void 0,RA.CONFUSION)),A.scene.queueMessage(U.t("battlerTags:confusedOnAdd",{pokemonNameWithAffix:b(A)}))}onRemove(A){super.onRemove(A),A.scene.queueMessage(U.t("battlerTags:confusedOnRemove",{pokemonNameWithAffix:b(A)}))}onOverlap(A){super.onOverlap(A),A.scene.queueMessage(U.t("battlerTags:confusedOnOverlap",{pokemonNameWithAffix:b(A)}))}lapse(A,s){const R=s!==8&&super.lapse(A,s);if(R&&(A.scene.queueMessage(U.t("battlerTags:confusedLapse",{pokemonNameWithAffix:b(A)})),A.scene.unshiftPhase(new Ts(A.scene,A.getBattlerIndex(),void 0,RA.CONFUSION)),A.randSeedInt(3)===0)){const I=A.getEffectiveStat(B.ATK),i=A.getEffectiveStat(B.DEF),a=gt(((2*A.level/5+2)*40*I/i/50+2)*(A.randSeedIntRange(85,100)/100));A.scene.queueMessage(U.t("battlerTags:confusedLapseHurtItself")),A.damageAndUpdate(a),A.battleData.hitCount++,A.scene.getCurrentPhase().cancel()}return R}getDescriptor(){return U.t("battlerTags:confusedDesc")}};T(Vp,"ConfusedTag");let $P=Vp;const vp=class vp extends dt{constructor(A,s){super(Y.DESTINY_BOND,2,1,A,s,!0)}lapse(A,s){if(s!==8)return super.lapse(A,s);const R=this.sourceId?A.scene.getPokemonById(this.sourceId):null;return R!=null&&R.isFainted()?(R==null?void 0:R.getAlly())===A?!1:A.isBossImmune()?(A.scene.queueMessage(U.t("battlerTags:destinyBondLapseIsBoss",{pokemonNameWithAffix:b(A)})),!1):(A.scene.queueMessage(U.t("battlerTags:destinyBondLapse",{pokemonNameWithAffix:b(R),pokemonNameWithAffix2:b(A)})),A.damageAndUpdate(A.hp,Pt.ONE_HIT_KO,!1,!1,!0),!1):!0}};T(vp,"DestinyBondTag");let qP=vp;const xp=class xp extends dt{constructor(A,s){super(Y.INFATUATED,1,1,A,s)}canAdd(A){if(this.sourceId){const s=A.scene.getPokemonById(this.sourceId);return s?A.isOppositeGender(s):(console.warn("canAdd: this.sourceId is not a valid pokemon id!",this.sourceId),!1)}else return console.warn("canAdd: this.sourceId is undefined"),!1}onAdd(A){super.onAdd(A),A.scene.queueMessage(U.t("battlerTags:infatuatedOnAdd",{pokemonNameWithAffix:b(A),sourcePokemonName:b(A.scene.getPokemonById(this.sourceId)??void 0)}))}onOverlap(A){super.onOverlap(A),A.scene.queueMessage(U.t("battlerTags:infatuatedOnOverlap",{pokemonNameWithAffix:b(A)}))}lapse(A,s){const R=s!==8||super.lapse(A,s);return R&&(A.scene.queueMessage(U.t("battlerTags:infatuatedLapse",{pokemonNameWithAffix:b(A),sourcePokemonName:b(A.scene.getPokemonById(this.sourceId)??void 0)})),A.scene.unshiftPhase(new Ts(A.scene,A.getBattlerIndex(),void 0,RA.ATTRACT)),A.randSeedInt(2)&&(A.scene.queueMessage(U.t("battlerTags:infatuatedLapseImmobilize",{pokemonNameWithAffix:b(A)})),A.scene.getCurrentPhase().cancel())),R}onRemove(A){super.onRemove(A),A.scene.queueMessage(U.t("battlerTags:infatuatedOnRemove",{pokemonNameWithAffix:b(A)}))}isSourceLinked(){return!0}getDescriptor(){return U.t("battlerTags:infatuatedDesc")}};T(xp,"InfatuatedTag");let jP=xp;const bp=class bp extends dt{constructor(A){super(Y.SEEDED,5,1,t.LEECH_SEED,A,!0)}loadTag(A){super.loadTag(A),this.sourceIndex=A.sourceIndex}canAdd(A){return!A.isOfType(n.GRASS)}onAdd(A){super.onAdd(A),A.scene.queueMessage(U.t("battlerTags:seededOnAdd",{pokemonNameWithAffix:b(A)})),this.sourceIndex=A.scene.getPokemonById(this.sourceId).getBattlerIndex()}lapse(A,s){const R=s!==8||super.lapse(A,s);if(R){const I=A.getOpponents().find(i=>i.getBattlerIndex()===this.sourceIndex);if(I){const i=new je(!1);if(Et(rE,A,i),!i.value){A.scene.unshiftPhase(new Ts(A.scene,I.getBattlerIndex(),A.getBattlerIndex(),RA.LEECH_SEED));const a=A.damageAndUpdate(gt(A.getMaxHp()/8)),L=A.hasAbilityWithAttr(KS,!1);A.scene.unshiftPhase(new CE(A.scene,I.getBattlerIndex(),L?a*-1:a,L?U.t("battlerTags:seededLapseShed",{pokemonNameWithAffix:b(A)}):U.t("battlerTags:seededLapse",{pokemonNameWithAffix:b(A)}),!1,!0))}}}return R}getDescriptor(){return U.t("battlerTags:seedDesc")}};T(bp,"SeedTag");let zP=bp;const kp=class kp extends dt{constructor(){super(Y.NIGHTMARE,5,1,t.NIGHTMARE)}onAdd(A){super.onAdd(A),A.scene.queueMessage(U.t("battlerTags:nightmareOnAdd",{pokemonNameWithAffix:b(A)}))}onOverlap(A){super.onOverlap(A),A.scene.queueMessage(U.t("battlerTags:nightmareOnOverlap",{pokemonNameWithAffix:b(A)}))}lapse(A,s){const R=s!==8||super.lapse(A,s);if(R){A.scene.queueMessage(U.t("battlerTags:nightmareLapse",{pokemonNameWithAffix:b(A)})),A.scene.unshiftPhase(new Ts(A.scene,A.getBattlerIndex(),void 0,RA.CURSE));const I=new je(!1);Et(rE,A,I),I.value||A.damageAndUpdate(gt(A.getMaxHp()/4))}return R}getDescriptor(){return U.t("battlerTags:nightmareDesc")}};T(kp,"NightmareTag");let e_=kp;const Zp=class Zp extends dt{constructor(A,s,R){super(Y.FRENZY,8,A,s,R)}onRemove(A){super.onRemove(A),this.turnCount<2&&A.addTag(Y.CONFUSED,A.randSeedIntRange(2,4))}};T(Zp,"FrenzyTag");let t_=Zp;const Xp=class Xp extends dt{constructor(A){super(Y.ENCORE,3,3,t.ENCORE,A)}loadTag(A){super.loadTag(A),this.moveId=A.moveId}canAdd(A){const s=A.getLastXMoves(1);if(!s.length)return!1;const R=s[0];if(!R.move||R.virtual)return!1;switch(R.move){case t.MIMIC:case t.MIRROR_MOVE:case t.TRANSFORM:case t.STRUGGLE:case t.SKETCH:case t.SLEEP_TALK:case t.ENCORE:return!1}return this.moveId=R.move,!0}onAdd(A){if(super.onRemove(A),A.scene.queueMessage(U.t("battlerTags:encoreOnAdd",{pokemonNameWithAffix:b(A)})),A.scene.findPhase(R=>R instanceof JA&&R.pokemon===A)){const R=A.getMoveset().find(I=>I.moveId===this.moveId);if(R){const I=A.getLastXMoves(1)[0];A.scene.tryReplacePhase(i=>i instanceof JA&&i.pokemon===A,new JA(A.scene,A,I.targets,R))}}}onRemove(A){super.onRemove(A),A.scene.queueMessage(U.t("battlerTags:encoreOnRemove",{pokemonNameWithAffix:b(A)}))}};T(Xp,"EncoreTag");let vL=Xp;const Qp=class Qp extends dt{constructor(A){super(Y.HELPING_HAND,5,1,t.HELPING_HAND,A)}onAdd(A){A.scene.queueMessage(U.t("battlerTags:helpingHandOnAdd",{pokemonNameWithAffix:b(A.scene.getPokemonById(this.sourceId)??void 0),pokemonName:b(A)}))}};T(Qp,"HelpingHandTag");let yU=Qp;const Jp=class Jp extends GR{constructor(A){super(Y.INGRAIN,5,1,t.INGRAIN,A)}canAdd(A){return!A.getTag(Y.TRAPPED)}lapse(A,s){const R=s!==8||super.lapse(A,s);return R&&A.scene.unshiftPhase(new CE(A.scene,A.getBattlerIndex(),gt(A.getMaxHp()/16),U.t("battlerTags:ingrainLapse",{pokemonNameWithAffix:b(A)}),!0)),R}getTrapMessage(A){return U.t("battlerTags:ingrainOnTrap",{pokemonNameWithAffix:b(A)})}getDescriptor(){return U.t("battlerTags:ingrainDesc")}};T(Jp,"IngrainTag");let A_=Jp;const $p=class $p extends GR{constructor(A){super(Y.OCTOLOCK,5,1,t.OCTOLOCK,A)}canAdd(A){return!A.getTag(Y.OCTOLOCK)}lapse(A,s){return s!==8||super.lapse(A,s)?(A.scene.unshiftPhase(new Ft(A.scene,A.getBattlerIndex(),!1,[B.DEF,B.SPDEF],-1)),!0):!1}};T($p,"OctolockTag");let E_=$p;const qp=class qp extends dt{constructor(){super(Y.AQUA_RING,5,1,t.AQUA_RING,void 0,!0)}onAdd(A){super.onAdd(A),A.scene.queueMessage(U.t("battlerTags:aquaRingOnAdd",{pokemonNameWithAffix:b(A)}))}lapse(A,s){const R=s!==8||super.lapse(A,s);return R&&A.scene.unshiftPhase(new CE(A.scene,A.getBattlerIndex(),gt(A.getMaxHp()/16),U.t("battlerTags:aquaRingLapse",{moveName:this.getMoveName(),pokemonName:b(A)}),!0)),R}};T(qp,"AquaRingTag");let s_=qp;const jp=class jp extends dt{constructor(){super(Y.MINIMIZED,5,1,t.MINIMIZE)}onAdd(A){super.onAdd(A)}lapse(A,s){return s!==8||super.lapse(A,s)}onRemove(A){super.onRemove(A)}};T(jp,"MinimizeTag");let R_=jp;const zp=class zp extends dt{constructor(){super(Y.DROWSY,5,2,t.YAWN)}canAdd(A){var s;return((s=A.scene.arena.terrain)==null?void 0:s.terrainType)!==Rt.ELECTRIC||!A.isGrounded()}onAdd(A){super.onAdd(A),A.scene.queueMessage(U.t("battlerTags:drowsyOnAdd",{pokemonNameWithAffix:b(A)}))}lapse(A,s){return super.lapse(A,s)?!0:(A.trySetStatus(J.SLEEP,!0),!1)}getDescriptor(){return U.t("battlerTags:drowsyDesc")}};T(zp,"DrowsyTag");let O_=zp;const ey=class ey extends GR{constructor(A,s,R,I,i){super(A,5,R,I,i),this.commonAnim=s}loadTag(A){super.loadTag(A),this.commonAnim=A.commonAnim}canAdd(A){return!A.getTag(GR)&&!A.getTag(Y.SUBSTITUTE)}lapse(A,s){const R=super.lapse(A,s);if(R){A.scene.queueMessage(U.t("battlerTags:damagingTrapLapse",{pokemonNameWithAffix:b(A),moveName:this.getMoveName()})),A.scene.unshiftPhase(new Ts(A.scene,A.getBattlerIndex(),void 0,this.commonAnim));const I=new je(!1);Et(rE,A,I),I.value||A.damageAndUpdate(gt(A.getMaxHp()/8))}return R}};T(ey,"DamagingTrapTag");let LO=ey;const ty=class ty extends LO{constructor(A,s){super(Y.BIND,RA.BIND,A,t.BIND,s)}getTrapMessage(A){return U.t("battlerTags:bindOnTrap",{pokemonNameWithAffix:b(A),sourcePokemonName:b(A.scene.getPokemonById(this.sourceId)??void 0),moveName:this.getMoveName()})}};T(ty,"BindTag");let n_=ty;const Ay=class Ay extends LO{constructor(A,s){super(Y.WRAP,RA.WRAP,A,t.WRAP,s)}getTrapMessage(A){return U.t("battlerTags:wrapOnTrap",{pokemonNameWithAffix:b(A),sourcePokemonName:b(A.scene.getPokemonById(this.sourceId)??void 0)})}};T(Ay,"WrapTag");let I_=Ay;const Ey=class Ey extends LO{constructor(A,s,R,I,i){super(A,s,R,I,i)}getTrapMessage(A){return U.t("battlerTags:vortexOnTrap",{pokemonNameWithAffix:b(A)})}};T(Ey,"VortexTrapTag");let wU=Ey;const sy=class sy extends wU{constructor(A,s){super(Y.FIRE_SPIN,RA.FIRE_SPIN,A,t.FIRE_SPIN,s)}};T(sy,"FireSpinTag");let i_=sy;const Ry=class Ry extends wU{constructor(A,s){super(Y.WHIRLPOOL,RA.WHIRLPOOL,A,t.WHIRLPOOL,s)}};T(Ry,"WhirlpoolTag");let a_=Ry;const Oy=class Oy extends LO{constructor(A,s){super(Y.CLAMP,RA.CLAMP,A,t.CLAMP,s)}getTrapMessage(A){return U.t("battlerTags:clampOnTrap",{sourcePokemonNameWithAffix:b(A.scene.getPokemonById(this.sourceId)??void 0),pokemonName:b(A)})}};T(Oy,"ClampTag");let L_=Oy;const ny=class ny extends LO{constructor(A,s){super(Y.SAND_TOMB,RA.SAND_TOMB,A,t.SAND_TOMB,s)}getTrapMessage(A){return U.t("battlerTags:sandTombOnTrap",{pokemonNameWithAffix:b(A),moveName:this.getMoveName()})}};T(ny,"SandTombTag");let r_=ny;const Iy=class Iy extends LO{constructor(A,s){super(Y.MAGMA_STORM,RA.MAGMA_STORM,A,t.MAGMA_STORM,s)}getTrapMessage(A){return U.t("battlerTags:magmaStormOnTrap",{pokemonNameWithAffix:b(A)})}};T(Iy,"MagmaStormTag");let N_=Iy;const iy=class iy extends LO{constructor(A,s){super(Y.SNAP_TRAP,RA.SNAP_TRAP,A,t.SNAP_TRAP,s)}getTrapMessage(A){return U.t("battlerTags:snapTrapOnTrap",{pokemonNameWithAffix:b(A)})}};T(iy,"SnapTrapTag");let T_=iy;const ay=class ay extends LO{constructor(A,s){super(Y.THUNDER_CAGE,RA.THUNDER_CAGE,A,t.THUNDER_CAGE,s)}getTrapMessage(A){return U.t("battlerTags:thunderCageOnTrap",{pokemonNameWithAffix:b(A),sourcePokemonNameWithAffix:b(A.scene.getPokemonById(this.sourceId)??void 0)})}};T(ay,"ThunderCageTag");let S_=ay;const Ly=class Ly extends LO{constructor(A,s){super(Y.INFESTATION,RA.INFESTATION,A,t.INFESTATION,s)}getTrapMessage(A){return U.t("battlerTags:infestationOnTrap",{pokemonNameWithAffix:b(A),sourcePokemonNameWithAffix:b(A.scene.getPokemonById(this.sourceId)??void 0)})}};T(Ly,"InfestationTag");let o_=Ly;const ry=class ry extends dt{constructor(A,s=Y.PROTECTED){super(s,5,0,A)}onAdd(A){super.onAdd(A),A.scene.queueMessage(U.t("battlerTags:protectedOnAdd",{pokemonNameWithAffix:b(A)}))}lapse(A,s){if(s===8){new bI(RA.PROTECT,A).play(A.scene),A.scene.queueMessage(U.t("battlerTags:protectedLapse",{pokemonNameWithAffix:b(A)}));const R=A.scene.getCurrentPhase();return R instanceof sR&&R.stopMultiHit(A),!0}return super.lapse(A,s)}};T(ry,"ProtectedTag");let xI=ry;const Ny=class Ny extends xI{};T(Ny,"DamageProtectedTag");let xL=Ny;const Ty=class Ty extends xI{constructor(A,s){super(A,Y.SPIKY_SHIELD),this.damageRatio=s}loadTag(A){super.loadTag(A),this.damageRatio=A.damageRatio}lapse(A,s){const R=super.lapse(A,s);if(s===8){const I=A.scene.getCurrentPhase();if(I instanceof sR&&I.move.getMove().hasFlag(pt.MAKES_CONTACT)){const i=I.getPokemon();i.hasAbilityWithAttr(rE)||i.damageAndUpdate(gt(i.getMaxHp()*(1/this.damageRatio)),Pt.OTHER)}}return R}};T(Ty,"ContactDamageProtectedTag");let l_=Ty;const Sy=class Sy extends xL{constructor(A,s,R,I){super(A,s),this.stat=R,this.levels=I}loadTag(A){super.loadTag(A),this.stat=A.stat,this.levels=A.levels}lapse(A,s){const R=super.lapse(A,s);if(s===8){const I=A.scene.getCurrentPhase();if(I instanceof sR&&I.move.getMove().hasFlag(pt.MAKES_CONTACT)){const i=I.getPokemon();A.scene.unshiftPhase(new Ft(A.scene,i.getBattlerIndex(),!1,[this.stat],this.levels))}}return R}};T(Sy,"ContactStatStageChangeProtectedTag");let mr=Sy;const oy=class oy extends xI{constructor(A){super(A,Y.BANEFUL_BUNKER)}lapse(A,s){const R=super.lapse(A,s);if(s===8){const I=A.scene.getCurrentPhase();I instanceof sR&&I.move.getMove().hasFlag(pt.MAKES_CONTACT)&&I.getPokemon().trySetStatus(J.POISON,!0,A)}return R}};T(oy,"ContactPoisonProtectedTag");let C_=oy;const ly=class ly extends xL{constructor(A){super(A,Y.BURNING_BULWARK)}lapse(A,s){const R=super.lapse(A,s);if(s===8){const I=A.scene.getCurrentPhase();I instanceof sR&&I.move.getMove().hasFlag(pt.MAKES_CONTACT)&&I.getPokemon().trySetStatus(J.BURN,!0)}return R}};T(ly,"ContactBurnProtectedTag");let U_=ly;const Cy=class Cy extends dt{constructor(A){super(Y.ENDURING,5,0,A)}onAdd(A){super.onAdd(A),A.scene.queueMessage(U.t("battlerTags:enduringOnAdd",{pokemonNameWithAffix:b(A)}))}lapse(A,s){return s===8?(A.scene.queueMessage(U.t("battlerTags:enduringLapse",{pokemonNameWithAffix:b(A)})),!0):super.lapse(A,s)}};T(Cy,"EnduringTag");let D_=Cy;const Uy=class Uy extends dt{constructor(A){super(Y.STURDY,5,0,A)}lapse(A,s){return s===8?(A.scene.queueMessage(U.t("battlerTags:sturdyLapse",{pokemonNameWithAffix:b(A)})),!0):super.lapse(A,s)}};T(Uy,"SturdyTag");let M_=Uy;const Dy=class Dy extends dt{constructor(A){super(Y.PERISH_SONG,5,A,t.PERISH_SONG,void 0,!0)}canAdd(A){return!A.isBossImmune()}lapse(A,s){const R=super.lapse(A,s);return R?A.scene.queueMessage(U.t("battlerTags:perishSongLapse",{pokemonNameWithAffix:b(A),turnCount:this.turnCount})):A.damageAndUpdate(A.hp,Pt.ONE_HIT_KO,!1,!0,!0),R}};T(Dy,"PerishSongTag");let u_=Dy;const My=class My extends dt{constructor(A){super(Y.CENTER_OF_ATTENTION,5,1,A),this.powder=this.sourceMove===t.RAGE_POWDER}canAdd(A){return!(A.isPlayer()?A.scene.getPlayerField():A.scene.getEnemyField()).find(R=>R.getTag(Y.CENTER_OF_ATTENTION))}onAdd(A){super.onAdd(A),A.scene.queueMessage(U.t("battlerTags:centerOfAttentionOnAdd",{pokemonNameWithAffix:b(A)}))}};T(My,"CenterOfAttentionTag");let VU=My;const uy=class uy extends dt{constructor(A,s,R,I){super(A,R,I),this.ability=s}loadTag(A){super.loadTag(A),this.ability=A.ability}};T(uy,"AbilityBattlerTag");let zS=uy;const hy=class hy extends zS{constructor(){super(Y.TRUANT,O.TRUANT,1,1)}lapse(A,s){if(!A.hasAbility(O.TRUANT))return super.lapse(A,s);const R=A.getAbility().id!==O.TRUANT,I=A.getLastXMoves().find(()=>!0);return I&&I.move!==t.NONE&&(A.scene.getCurrentPhase().cancel(),A.scene.unshiftPhase(new mn(A.scene,A.id,R)),A.scene.queueMessage(U.t("battlerTags:truantLapse",{pokemonNameWithAffix:b(A)}))),!0}};T(hy,"TruantTag");let h_=hy;const cy=class cy extends zS{constructor(){super(Y.SLOW_START,O.SLOW_START,5,5)}onAdd(A){super.onAdd(A),A.scene.queueMessage(U.t("battlerTags:slowStartOnAdd",{pokemonNameWithAffix:b(A)}),null,!1,null,!0)}lapse(A,s){return A.hasAbility(this.ability)||(this.turnCount=1),super.lapse(A,s)}onRemove(A){super.onRemove(A),A.scene.queueMessage(U.t("battlerTags:slowStartOnRemove",{pokemonNameWithAffix:b(A)}),null,!1,null)}};T(cy,"SlowStartTag");let c_=cy;const Gy=class Gy extends zS{constructor(A,s){super(A,s,8,1)}loadTag(A){super.loadTag(A),this.stat=A.stat,this.multiplier=A.multiplier}onAdd(A){super.onAdd(A);let s;switch(Kn.map(R=>A.getEffectiveStat(R)).reduce((R,I,i)=>I>R?(s=Kn[i],I):R,0),s=s,this.stat=s,this.stat){case B.SPD:this.multiplier=1.5;break;default:this.multiplier=1.3;break}A.scene.queueMessage(U.t("battlerTags:highestStatBoostOnAdd",{pokemonNameWithAffix:b(A),statName:U.t(aE(s))}),null,!1,null,!0)}onRemove(A){super.onRemove(A),A.scene.queueMessage(U.t("battlerTags:highestStatBoostOnRemove",{pokemonNameWithAffix:b(A),abilityName:jA[this.ability].name}))}};T(Gy,"HighestStatBoostTag");let eo=Gy;const Py=class Py extends eo{constructor(A,s,...R){super(A,s),this.weatherTypes=R}loadTag(A){super.loadTag(A),this.weatherTypes=A.weatherTypes.map(s=>s)}};T(Py,"WeatherHighestStatBoostTag");let G_=Py;const _y=class _y extends eo{constructor(A,s,...R){super(A,s),this.terrainTypes=R}loadTag(A){super.loadTag(A),this.terrainTypes=A.terrainTypes.map(s=>s)}};T(_y,"TerrainHighestStatBoostTag");let P_=_y;const Hy=class Hy extends dt{constructor(A,s,R){super(A,4,s,R)}onAdd(A){super.onAdd(A),A.setVisible(!1)}onRemove(A){A.scene.tweens.addCounter({duration:zA(2),onComplete:T(()=>A.setVisible(!0),"onComplete")})}};T(Hy,"SemiInvulnerableTag");let In=Hy;const dy=class dy extends dt{constructor(A,s,R,I=1){super(A,5,I,s,void 0,!0),this.immuneType=R}loadTag(A){super.loadTag(A),this.immuneType=A.immuneType}};T(dy,"TypeImmuneTag");let vU=dy;const fy=class fy extends vU{constructor(A,s){super(A,s,n.GROUND,5)}onAdd(A){super.onAdd(A),this.sourceMove===t.MAGNET_RISE&&A.scene.queueMessage(U.t("battlerTags:magnetRisenOnAdd",{pokemonNameWithAffix:b(A)}))}onRemove(A){super.onRemove(A),this.sourceMove===t.MAGNET_RISE&&A.scene.queueMessage(U.t("battlerTags:magnetRisenOnRemove",{pokemonNameWithAffix:b(A)}))}};T(fy,"FloatingTag");let __=fy;const By=class By extends dt{constructor(A,s,R,I,i){super(A,5,1,s),this.boostedType=R,this.boostValue=I,this.oneUse=i}loadTag(A){super.loadTag(A),this.boostedType=A.boostedType,this.boostValue=A.boostValue,this.oneUse=A.oneUse}lapse(A,s){return s!==8||super.lapse(A,s)}};T(By,"TypeBoostTag");let bL=By;const gy=class gy extends dt{constructor(A,s){super(A,5,1,s,void 0,!0)}onAdd(A){super.onAdd(A),A.scene.queueMessage(U.t("battlerTags:critBoostOnAdd",{pokemonNameWithAffix:b(A)}))}lapse(A,s){return s!==8||super.lapse(A,s)}onRemove(A){super.onRemove(A),A.scene.queueMessage(U.t("battlerTags:critBoostOnRemove",{pokemonNameWithAffix:b(A)}))}};T(gy,"CritBoostTag");let to=gy;const Ky=class Ky extends to{constructor(){super(Y.CRIT_BOOST,t.DRAGON_CHEER)}onAdd(A){super.onAdd(A),this.typesOnAdd=A.getTypes(!0)}};T(Ky,"DragonCheerTag");let xU=Ky;const Fy=class Fy extends dt{constructor(A){super(Y.SALT_CURED,5,1,t.SALT_CURE,A)}loadTag(A){super.loadTag(A),this.sourceIndex=A.sourceIndex}onAdd(A){super.onAdd(A),A.scene.queueMessage(U.t("battlerTags:saltCuredOnAdd",{pokemonNameWithAffix:b(A)})),this.sourceIndex=A.scene.getPokemonById(this.sourceId).getBattlerIndex()}lapse(A,s){const R=s!==8||super.lapse(A,s);if(R){A.scene.unshiftPhase(new Ts(A.scene,A.getBattlerIndex(),A.getBattlerIndex(),RA.SALT_CURE));const I=new je(!1);if(Et(rE,A,I),!I.value){const i=A.isOfType(n.STEEL)||A.isOfType(n.WATER);A.damageAndUpdate(gt(i?A.getMaxHp()/4:A.getMaxHp()/8)),A.scene.queueMessage(U.t("battlerTags:saltCuredLapse",{pokemonNameWithAffix:b(A),moveName:this.getMoveName()}))}}return R}};T(Fy,"SaltCuredTag");let H_=Fy;const my=class my extends dt{constructor(A){super(Y.CURSED,5,1,t.CURSE,A,!0)}loadTag(A){super.loadTag(A),this.sourceIndex=A.sourceIndex}onAdd(A){super.onAdd(A),this.sourceIndex=A.scene.getPokemonById(this.sourceId).getBattlerIndex()}lapse(A,s){const R=s!==8||super.lapse(A,s);if(R){A.scene.unshiftPhase(new Ts(A.scene,A.getBattlerIndex(),A.getBattlerIndex(),RA.SALT_CURE));const I=new je(!1);Et(rE,A,I),I.value||(A.damageAndUpdate(gt(A.getMaxHp()/4)),A.scene.queueMessage(U.t("battlerTags:cursedLapse",{pokemonNameWithAffix:b(A)})))}return R}};T(my,"CursedTag");let d_=my;const Wy=class Wy extends dt{constructor(A,s,R){super(A,s,1,R)}};T(Wy,"RemovedTypeTag");let Ao=Wy;const Yy=class Yy extends dt{constructor(A,s,R){super(A,s,1,R)}};T(Yy,"GroundedTag");let Eo=Yy;const py=class py extends dt{constructor(){super(Y.ROOSTED,5,1,t.ROOST)}onRemove(A){const s=A.getTypes(),R=A.getTypes(!1,!1,!0),I=s.includes(n.GRASS)&&!R.includes(n.GRASS),i=s.includes(n.GHOST)&&!R.includes(n.GHOST);if(this.isBaseFlying){let a=[];this.isBasePureFlying?I||i?(a=s.filter(L=>L!==n.NORMAL),a.push(n.FLYING)):a=[n.FLYING]:(a=[...s],a.push(n.FLYING)),A.summonData.types=a,A.updateInfo()}}onAdd(A){const s=A.getTypes(),R=A.getTypes(!1,!1,!0),I=R.length===2,i=s.length===2;if(this.isBaseFlying=R.includes(n.FLYING),this.isBasePureFlying=R[0]===n.FLYING&&R.length===1,this.isBaseFlying){let a;this.isBasePureFlying&&!i?a=[n.NORMAL]:A.getTag(Ao)&&I&&!i?a=[n.UNKNOWN]:a=s.filter(L=>L!==n.FLYING),A.summonData.types=a,A.updateInfo()}}};T(py,"RoostedTag");let f_=py;const yy=class yy extends dt{constructor(A){super(A,8,1)}canAdd(A){return A.formIndex===0}onAdd(A){super.onAdd(A),A.formIndex!==0&&A.scene.triggerPokemonFormChange(A,_t)}onRemove(A){super.onRemove(A),A.scene.triggerPokemonFormChange(A,_t)}};T(yy,"FormBlockDamageTag");let bU=yy;const wy=class wy extends bU{constructor(A){super(A)}canAdd(A){var I;const s=(I=A.scene.arena.weather)==null?void 0:I.weatherType,R=s===Q.HAIL||s===Q.SNOW;return super.canAdd(A)||R}};T(wy,"IceFaceBlockDamageTag");let B_=wy;const Vy=class Vy extends dt{constructor(A=t.NONE){super(Y.STOCKPILING,8,1,A),this.stockpiledCount=0,this.statChangeCounts={[B.DEF]:0,[B.SPDEF]:0},this.onStatStagesChanged=(s,R,I)=>{const i=I[R.indexOf(B.DEF)]??0,a=I[R.indexOf(B.SPDEF)]??0;i&&this.statChangeCounts[B.DEF]++,a&&this.statChangeCounts[B.SPDEF]++}}loadTag(A){var s,R;super.loadTag(A),this.stockpiledCount=A.stockpiledCount||0,this.statChangeCounts={[B.DEF]:((s=A.statChangeCounts)==null?void 0:s[B.DEF])??0,[B.SPDEF]:((R=A.statChangeCounts)==null?void 0:R[B.SPDEF])??0}}onAdd(A){this.stockpiledCount<3&&(this.stockpiledCount++,A.scene.queueMessage(U.t("battlerTags:stockpilingOnAdd",{pokemonNameWithAffix:b(A),stockpiledCount:this.stockpiledCount})),A.scene.unshiftPhase(new Ft(A.scene,A.getBattlerIndex(),!0,[B.SPDEF,B.DEF],1,!0,!1,!0,this.onStatStagesChanged)))}onOverlap(A){this.onAdd(A)}onRemove(A){const s=this.statChangeCounts[B.DEF],R=this.statChangeCounts[B.SPDEF];s&&A.scene.unshiftPhase(new Ft(A.scene,A.getBattlerIndex(),!0,[B.DEF],-s,!0,!1,!0)),R&&A.scene.unshiftPhase(new Ft(A.scene,A.getBattlerIndex(),!0,[B.SPDEF],-R,!0,!1,!0))}};T(Vy,"StockpilingTag");let na=Vy;const vy=class vy extends dt{constructor(A,s){super(A,6,0,s)}lapse(A,s){if(A.getTag(Y.UNDERWATER))return!0;const R=A.scene.getCurrentPhase();if(R instanceof sR){const I=R.getUserPokemon();if(!I)return!1;if(R.move.getMove().hitsSubstitute(I,A))return!0;const i=new je(!1);Et(rE,I,i),i.value||I.damageAndUpdate(Math.max(1,Math.floor(I.getMaxHp()/4)),Pt.OTHER),this.tagType===Y.GULP_MISSILE_ARROKUDA?A.scene.unshiftPhase(new Ft(A.scene,I.getBattlerIndex(),!1,[B.DEF],-1)):I.trySetStatus(J.PARALYSIS,!0,A)}return!1}canAdd(A){const s=[t.SURF,t.DIVE].includes(this.sourceMove),R=A.formIndex===0&&!A.getTag(Y.GULP_MISSILE_ARROKUDA)&&!A.getTag(Y.GULP_MISSILE_PIKACHU),I=A.species.speciesId===e.CRAMORANT;return s&&R&&I}onAdd(A){super.onAdd(A),A.scene.triggerPokemonFormChange(A,_t)}onRemove(A){super.onRemove(A),A.scene.triggerPokemonFormChange(A,_t)}};T(vy,"GulpMissileTag");let kU=vy;const xy=class xy extends dt{constructor(A,s,R,I){super(A,8,1,s),this.defenderType=R,this.allowedTypes=I}loadTag(A){super.loadTag(A),this.defenderType=A.defenderType,this.allowedTypes=A.allowedTypes}ignoreImmunity(A,s){return A===this.defenderType&&this.allowedTypes.includes(s)}};T(xy,"ExposedTag");let kL=xy;const by=class by extends VO{constructor(A,s){super(Y.HEAL_BLOCK,[2,5],A,s)}onActivation(A){return U.t("battle:battlerTagsHealBlock",{pokemonNameWithAffix:b(A)})}isMoveRestricted(A){return!!(He[A].hasFlag(pt.TRIAGE_MOVE)&&He[A].category===Ot.STATUS)}isMoveTargetRestricted(A,s,R){const I=new $e(He[A].category);return eA(mD,s,R,He[A],I),!!(He[A].hasAttr(aD)&&I.value===Ot.STATUS)}selectionDeniedText(A,s){return U.t("battle:moveDisabledHealBlock",{pokemonNameWithAffix:b(A),moveName:He[s].name,healBlockName:He[t.HEAL_BLOCK].name})}interruptedText(A,s){return U.t("battle:moveDisabledHealBlock",{pokemonNameWithAffix:b(A),moveName:He[s].name,healBlockName:He[t.HEAL_BLOCK].name})}onRemove(A){super.onRemove(A),A.scene.queueMessage(U.t("battle:battlerTagsHealBlockOnRemove",{pokemonNameWithAffix:b(A)}),null,!1,null)}};T(by,"HealBlockTag");let g_=by;const ky=class ky extends dt{constructor(){super(Y.TAR_SHOT,8,0)}canAdd(A){return!A.isTerastallized()}onAdd(A){A.scene.queueMessage(U.t("battlerTags:tarShotOnAdd",{pokemonNameWithAffix:b(A)}))}};T(ky,"TarShotTag");let ZU=ky;const Zy=class Zy extends dt{constructor(){super(Y.ELECTRIFIED,5,1,t.ELECTRIFY)}onAdd(A){A.scene.queueMessage(U.t("battlerTags:electrifiedOnAdd",{pokemonNameWithAffix:b(A)}))}};T(Zy,"ElectrifiedTag");let K_=Zy;const Xy=class Xy extends dt{constructor(A=t.AUTOTOMIZE){super(Y.AUTOTOMIZED,8,1,A),this.autotomizeCount=0}onAdd(A){A.getWeight()>.1&&A.scene.queueMessage(U.t("battlerTags:autotomizeOnAdd",{pokemonNameWithAffix:b(A)})),this.autotomizeCount+=1}onOverlap(A){this.onAdd(A)}};T(Xy,"AutotomizedTag");let XU=Xy;const Qy=class Qy extends dt{constructor(A,s){super(Y.SUBSTITUTE,[2,3,6],0,A,s,!0)}onAdd(A){this.hp=Math.floor(A.scene.getPokemonById(this.sourceId).getMaxHp()/4),this.sourceInFocus=!1,A.scene.triggerPokemonBattleAnim(A,On.SUBSTITUTE_ADD),this.sourceMove===t.SHED_TAIL?A.scene.queueMessage(U.t("battlerTags:shedTailOnAdd",{pokemonNameWithAffix:b(A)}),1500):A.scene.queueMessage(U.t("battlerTags:substituteOnAdd",{pokemonNameWithAffix:b(A)}),1500),A.findAndRemoveTags(s=>s instanceof LO)}onRemove(A){this.sourceInFocus?this.sprite.destroy():A.scene.triggerPokemonBattleAnim(A,On.SUBSTITUTE_REMOVE,[this.sprite]),A.scene.queueMessage(U.t("battlerTags:substituteOnRemove",{pokemonNameWithAffix:b(A)}))}lapse(A,s){switch(s){case 2:this.onPreMove(A);break;case 3:this.onAfterMove(A);break;case 6:this.onHit(A);break}return s!==8}onPreMove(A){A.scene.triggerPokemonBattleAnim(A,On.SUBSTITUTE_PRE_MOVE,[this.sprite]),this.sourceInFocus=!0}onAfterMove(A){A.scene.triggerPokemonBattleAnim(A,On.SUBSTITUTE_POST_MOVE,[this.sprite]),this.sourceInFocus=!1}onHit(A){const s=A.scene.getCurrentPhase();if(s instanceof sR){const R=s.getUserPokemon(),I=s.move.getMove();R.turnData.hitCount===R.turnData.hitsLeft&&I.hitsSubstitute(R,A)&&A.scene.queueMessage(U.t("battlerTags:substituteOnHit",{pokemonNameWithAffix:b(A)}))}}loadTag(A){super.loadTag(A),this.hp=A.hp}};T(Qy,"SubstituteTag");let lE=Qy;const Jy=class Jy extends dt{constructor(){super(Y.MYSTERY_ENCOUNTER_POST_SUMMON,8,1)}onAdd(A){super.onAdd(A)}lapse(A,s){const R=super.lapse(A,s);if(s===8){const I=new je(!1);Et(mR,A,I),I.value||A.mysteryEncounterBattleEffects&&A.mysteryEncounterBattleEffects(A)}return R}onRemove(A){super.onRemove(A)}};T(Jy,"MysteryEncounterPostSummonTag");let QU=Jy;const $y=class $y extends VO{constructor(A){super(Y.TORMENT,3,1,t.TORMENT,A)}onAdd(A){super.onAdd(A),A.scene.queueMessage(U.t("battlerTags:tormentOnAdd",{pokemonNameWithAffix:b(A)}),1500)}lapse(A,s){return A.isActive(!0)}isMoveRestricted(A,s){if(!s)return!1;const R=s.getLastXMoves(1)[0];if(!R)return!1;const i=He[R.move].hasAttr(tL)||s.getTag(Y.FRENZY),a=R.result===DA.SUCCESS||R.result===DA.MISS;return!!(R.move===A&&a&&R.move!==t.STRUGGLE&&!i)}selectionDeniedText(A,s){return U.t("battle:moveDisabledTorment",{pokemonNameWithAffix:b(A)})}};T($y,"TormentTag");let F_=$y;const qy=class qy extends VO{constructor(){super(Y.TAUNT,[2,3],4,t.TAUNT)}onAdd(A){super.onAdd(A),A.scene.queueMessage(U.t("battlerTags:tauntOnAdd",{pokemonNameWithAffix:b(A)}),1500)}isMoveRestricted(A){return He[A].category===Ot.STATUS}selectionDeniedText(A,s){return U.t("battle:moveDisabledTaunt",{pokemonNameWithAffix:b(A),moveName:He[s].name})}interruptedText(A,s){return U.t("battle:moveDisabledTaunt",{pokemonNameWithAffix:b(A),moveName:He[s].name})}};T(qy,"TauntTag");let m_=qy;const jy=class jy extends VO{constructor(A){super(Y.IMPRISON,[2,3],1,t.IMPRISON,A)}lapse(A,s){const R=this.getSourcePokemon(A.scene);return R?s===2?super.lapse(A,s)&&R.isActive(!0):R.isActive(!0):!1}isMoveRestricted(A,s){const R=this.getSourcePokemon(s.scene);if(R){const I=R.getMoveset().map(i=>i.moveId);return(I==null?void 0:I.includes(A))&&R.isActive(!0)}return!1}selectionDeniedText(A,s){return U.t("battle:moveDisabledImprison",{pokemonNameWithAffix:b(A),moveName:He[s].name})}interruptedText(A,s){return U.t("battle:moveDisabledImprison",{pokemonNameWithAffix:b(A),moveName:He[s].name})}};T(jy,"ImprisonTag");let W_=jy;const zy=class zy extends dt{constructor(A){super(Y.SYRUP_BOMB,5,3,t.SYRUP_BOMB,A)}onAdd(A){super.onAdd(A),A.scene.queueMessage(U.t("battlerTags:syrupBombOnAdd",{pokemonNameWithAffix:b(A)}))}lapse(A,s){var R;return this.sourceId&&!((R=A.scene.getPokemonById(this.sourceId))!=null&&R.isActive(!0))?!1:(A.scene.queueMessage(U.t("battlerTags:syrupBombLapse",{pokemonNameWithAffix:b(A)})),A.scene.unshiftPhase(new Ft(A.scene,A.getBattlerIndex(),!0,[B.SPD],-1,!0,!1,!0)),--this.turnCount>0)}};T(zy,"SyrupBombTag");let Y_=zy;const ew=class ew extends dt{constructor(A){super(Y.TELEKINESIS,[2,3],3,A,void 0,!0)}onAdd(A){A.scene.queueMessage(U.t("battlerTags:telekinesisOnAdd",{pokemonNameWithAffix:b(A)}))}};T(ew,"TelekinesisTag");let p_=ew;const tw=class tw extends dt{constructor(A,s){super(Y.POWER_TRICK,8,0,A,s,!0)}onAdd(A){this.swapStat(A),A.scene.queueMessage(U.t("battlerTags:powerTrickActive",{pokemonNameWithAffix:b(A)}))}onRemove(A){this.swapStat(A),A.scene.queueMessage(U.t("battlerTags:powerTrickActive",{pokemonNameWithAffix:b(A)}))}onOverlap(A){A.removeTag(this.tagType)}swapStat(A){const s=A.getStat(B.ATK,!1);A.setStat(B.ATK,A.getStat(B.DEF,!1),!1),A.setStat(B.DEF,s,!1)}};T(tw,"PowerTrickTag");let JU=tw;function sb(E,A,s,R){switch(E){case Y.RECHARGING:return new kP(s);case Y.BEAK_BLAST_CHARGING:return new ZP;case Y.SHELL_TRAP:return new pU;case Y.FLINCHED:return new QP(s);case Y.INTERRUPTED:return new JP(s);case Y.CONFUSED:return new $P(A,s);case Y.INFATUATED:return new jP(s,R);case Y.SEEDED:return new zP(R);case Y.NIGHTMARE:return new e_;case Y.FRENZY:return new t_(A,s,R);case Y.CHARGING:return new dt(E,8,1,s,R);case Y.ENCORE:return new vL(R);case Y.HELPING_HAND:return new yU(R);case Y.INGRAIN:return new A_(R);case Y.AQUA_RING:return new s_;case Y.DROWSY:return new O_;case Y.TRAPPED:return new GR(E,8,A,s,R);case Y.NO_RETREAT:return new XP(R);case Y.BIND:return new n_(A,R);case Y.WRAP:return new I_(A,R);case Y.FIRE_SPIN:return new i_(A,R);case Y.WHIRLPOOL:return new a_(A,R);case Y.CLAMP:return new L_(A,R);case Y.SAND_TOMB:return new r_(A,R);case Y.MAGMA_STORM:return new N_(A,R);case Y.SNAP_TRAP:return new T_(A,R);case Y.THUNDER_CAGE:return new S_(A,R);case Y.INFESTATION:return new o_(A,R);case Y.PROTECTED:return new xI(s);case Y.SPIKY_SHIELD:return new l_(s,8);case Y.KINGS_SHIELD:return new mr(s,E,B.ATK,-1);case Y.OBSTRUCT:return new mr(s,E,B.DEF,-2);case Y.SILK_TRAP:return new mr(s,E,B.SPD,-1);case Y.BANEFUL_BUNKER:return new C_(s);case Y.BURNING_BULWARK:return new U_(s);case Y.ENDURING:return new D_(s);case Y.STURDY:return new M_(s);case Y.PERISH_SONG:return new u_(A);case Y.CENTER_OF_ATTENTION:return new VU(s);case Y.TRUANT:return new h_;case Y.SLOW_START:return new c_;case Y.PROTOSYNTHESIS:return new G_(E,O.PROTOSYNTHESIS,Q.SUNNY,Q.HARSH_SUN);case Y.QUARK_DRIVE:return new P_(E,O.QUARK_DRIVE,Rt.ELECTRIC);case Y.FLYING:case Y.UNDERGROUND:case Y.UNDERWATER:case Y.HIDDEN:return new In(E,A,s);case Y.FIRE_BOOST:return new bL(E,s,n.FIRE,1.5,!1);case Y.CRIT_BOOST:return new to(E,s);case Y.DRAGON_CHEER:return new xU;case Y.ALWAYS_CRIT:case Y.IGNORE_ACCURACY:return new dt(E,5,2,s);case Y.ALWAYS_GET_HIT:case Y.RECEIVE_DOUBLE_DAMAGE:return new dt(E,2,1,s);case Y.BYPASS_SLEEP:return new dt(E,5,A,s);case Y.IGNORE_FLYING:return new Eo(E,8,s);case Y.ROOSTED:return new f_;case Y.BURNED_UP:return new Ao(E,8,s);case Y.DOUBLE_SHOCKED:return new Ao(E,8,s);case Y.SALT_CURED:return new H_(R);case Y.CURSED:return new d_(R);case Y.CHARGED:return new bL(E,s,n.ELECTRIC,2,!0);case Y.FLOATING:return new __(E,s);case Y.MINIMIZED:return new R_;case Y.DESTINY_BOND:return new qP(s,R);case Y.ICE_FACE:return new B_(E);case Y.DISGUISE:return new bU(E);case Y.STOCKPILING:return new na(s);case Y.OCTOLOCK:return new E_(R);case Y.DISABLED:return new xP(R);case Y.IGNORE_GHOST:return new kL(E,s,n.GHOST,[n.NORMAL,n.FIGHTING]);case Y.IGNORE_DARK:return new kL(E,s,n.DARK,[n.PSYCHIC]);case Y.GULP_MISSILE_ARROKUDA:case Y.GULP_MISSILE_PIKACHU:return new kU(E,s);case Y.TAR_SHOT:return new ZU;case Y.ELECTRIFIED:return new K_;case Y.THROAT_CHOPPED:return new vP;case Y.GORILLA_TACTICS:return new bP;case Y.SUBSTITUTE:return new lE(s,R);case Y.AUTOTOMIZED:return new XU;case Y.MYSTERY_ENCOUNTER_POST_SUMMON:return new QU;case Y.HEAL_BLOCK:return new g_(A,s);case Y.TORMENT:return new F_(R);case Y.TAUNT:return new m_;case Y.IMPRISON:return new W_(R);case Y.SYRUP_BOMB:return new Y_(R);case Y.TELEKINESIS:return new p_(s);case Y.POWER_TRICK:return new JU(s,R);case Y.NONE:default:return new dt(E,8,A,s,R)}}T(sb,"getBattlerTag");function ZX(E){const A=sb(E.tagType,E.turnCount,E.sourceMove,E.sourceId);return A.loadTag(E),A}T(ZX,"loadBattlerTag");function Rb(E){const A=E.scene.getCurrentPhase();return A instanceof sR?{phase:A,attacker:A.getPokemon(),move:A.move.getMove()}:null}T(Rb,"getMoveEffectPhaseData");var y_=(E=>(E[E.USER=0]="USER",E[E.TARGET=1]="TARGET",E[E.GRAPHIC=2]="GRAPHIC",E))(y_||{}),Vn=(E=>(E[E.FLY_CHARGING=1e3]="FLY_CHARGING",E[E.BOUNCE_CHARGING=1001]="BOUNCE_CHARGING",E[E.DIG_CHARGING=1002]="DIG_CHARGING",E[E.FUTURE_SIGHT_CHARGING=1003]="FUTURE_SIGHT_CHARGING",E[E.DIVE_CHARGING=1004]="DIVE_CHARGING",E[E.SOLAR_BEAM_CHARGING=1005]="SOLAR_BEAM_CHARGING",E[E.SHADOW_FORCE_CHARGING=1006]="SHADOW_FORCE_CHARGING",E[E.SKULL_BASH_CHARGING=1007]="SKULL_BASH_CHARGING",E[E.FREEZE_SHOCK_CHARGING=1008]="FREEZE_SHOCK_CHARGING",E[E.SKY_DROP_CHARGING=1009]="SKY_DROP_CHARGING",E[E.SKY_ATTACK_CHARGING=1010]="SKY_ATTACK_CHARGING",E[E.ICE_BURN_CHARGING=1011]="ICE_BURN_CHARGING",E[E.DOOM_DESIRE_CHARGING=1012]="DOOM_DESIRE_CHARGING",E[E.RAZOR_WIND_CHARGING=1013]="RAZOR_WIND_CHARGING",E[E.PHANTOM_FORCE_CHARGING=1014]="PHANTOM_FORCE_CHARGING",E[E.GEOMANCY_CHARGING=1015]="GEOMANCY_CHARGING",E[E.SHADOW_BLADE_CHARGING=1016]="SHADOW_BLADE_CHARGING",E[E.SOLAR_BLADE_CHARGING=1017]="SOLAR_BLADE_CHARGING",E[E.BEAK_BLAST_CHARGING=1018]="BEAK_BLAST_CHARGING",E[E.METEOR_BEAM_CHARGING=1019]="METEOR_BEAM_CHARGING",E[E.ELECTRO_SHOT_CHARGING=1020]="ELECTRO_SHOT_CHARGING",E))(Vn||{}),RA=(E=>(E[E.USE_ITEM=2e3]="USE_ITEM",E[E.HEALTH_UP=2001]="HEALTH_UP",E[E.POISON=2010]="POISON",E[E.TOXIC=2011]="TOXIC",E[E.PARALYSIS=2012]="PARALYSIS",E[E.SLEEP=2013]="SLEEP",E[E.FROZEN=2014]="FROZEN",E[E.BURN=2015]="BURN",E[E.CONFUSION=2016]="CONFUSION",E[E.ATTRACT=2017]="ATTRACT",E[E.BIND=2018]="BIND",E[E.WRAP=2019]="WRAP",E[E.CURSE_NO_GHOST=2020]="CURSE_NO_GHOST",E[E.LEECH_SEED=2021]="LEECH_SEED",E[E.FIRE_SPIN=2022]="FIRE_SPIN",E[E.PROTECT=2023]="PROTECT",E[E.COVET=2024]="COVET",E[E.WHIRLPOOL=2025]="WHIRLPOOL",E[E.BIDE=2026]="BIDE",E[E.SAND_TOMB=2027]="SAND_TOMB",E[E.QUICK_GUARD=2028]="QUICK_GUARD",E[E.WIDE_GUARD=2029]="WIDE_GUARD",E[E.CURSE=2030]="CURSE",E[E.MAGMA_STORM=2031]="MAGMA_STORM",E[E.CLAMP=2032]="CLAMP",E[E.SNAP_TRAP=2033]="SNAP_TRAP",E[E.THUNDER_CAGE=2034]="THUNDER_CAGE",E[E.INFESTATION=2035]="INFESTATION",E[E.ORDER_UP_CURLY=2036]="ORDER_UP_CURLY",E[E.ORDER_UP_DROOPY=2037]="ORDER_UP_DROOPY",E[E.ORDER_UP_STRETCHY=2038]="ORDER_UP_STRETCHY",E[E.RAGING_BULL_FIRE=2039]="RAGING_BULL_FIRE",E[E.RAGING_BULL_WATER=2040]="RAGING_BULL_WATER",E[E.SALT_CURE=2041]="SALT_CURE",E[E.SUNNY=2100]="SUNNY",E[E.RAIN=2101]="RAIN",E[E.SANDSTORM=2102]="SANDSTORM",E[E.HAIL=2103]="HAIL",E[E.SNOW=2104]="SNOW",E[E.WIND=2105]="WIND",E[E.HEAVY_RAIN=2106]="HEAVY_RAIN",E[E.HARSH_SUN=2107]="HARSH_SUN",E[E.STRONG_WINDS=2108]="STRONG_WINDS",E[E.MISTY_TERRAIN=2110]="MISTY_TERRAIN",E[E.ELECTRIC_TERRAIN=2111]="ELECTRIC_TERRAIN",E[E.GRASSY_TERRAIN=2112]="GRASSY_TERRAIN",E[E.PSYCHIC_TERRAIN=2113]="PSYCHIC_TERRAIN",E[E.LOCK_ON=2120]="LOCK_ON",E))(RA||{});const Aw=class Aw{constructor(A){if(this.frameTimedEvents=new Map,A){this.id=A.id,this.graphic=A.graphic;const s=A.frames;s.map(I=>{for(let i=0;i<I.length;i++)I[i]=new w_(I[i])}),this.frames=s;const R=A.frameTimedEvents;for(const I of Object.keys(R)){const i=[];for(const a of R[I]){let L;switch(a.eventType){case"AnimTimedSoundEvent":L=new so(a.frameIndex,a.resourceName,a);break;case"AnimTimedAddBgEvent":L=new Ro(a.frameIndex,a.resourceName,a);break;case"AnimTimedUpdateBgEvent":L=new zU(a.frameIndex,a.resourceName,a);break}L&&i.push(L)}this.frameTimedEvents.set(parseInt(I),i)}this.position=A.position,this.hue=A.hue}else this.frames=[]}getSoundResourceNames(){const A=new Set;for(const s of this.frameTimedEvents.values())for(const R of s)R instanceof so&&R.resourceName&&A.add(R.resourceName);return Array.from(A.values())}getBackgroundResourceNames(){const A=new Set;for(const s of this.frameTimedEvents.values())for(const R of s)R instanceof Ro&&R.resourceName&&A.add(R.resourceName);return Array.from(A.values())}};T(Aw,"AnimConfig");let RO=Aw;const Ew=class Ew{constructor(A,s,R,I,i,a,L,S,o,l,D,M,c,G,P,_,g,H,F,p,v,k,j,q,ie,z){if(this.x=z?A:((A||0)-128)*.5,this.y=z?s:((s||0)-224)*.5,R?this.zoomX=R:z&&(this.zoomX=0),I?this.zoomY=I:z&&(this.zoomY=0),i?this.angle=i:z&&(this.angle=0),a?this.mirror=a:z&&(this.mirror=!1),L?this.visible=L:z&&(this.visible=!1),S?this.blendType=S:z&&(this.blendType=0),!z){let Oe=2;switch(o){case-2:Oe=1;break;case-1:Oe=0;break}this.target=Oe,this.graphicFrame=o>=0?o:0}l?this.opacity=l:z&&(this.opacity=0),D||M||c||G?this.color=[D||0,M||0,c||0,G||0]:z&&(this.color=[0,0,0,0]),P||_||g||H?this.tone=[P||0,_||0,g||0,H||0]:z&&(this.tone=[0,0,0,0]),F||p||v||k?this.flash=[F||0,p||0,v||0,k||0]:z&&(this.flash=[0,0,0,0]),j?this.locked=j:z&&(this.locked=!1),q?this.priority=q:z&&(this.priority=0),this.focus=ie||1}};T(Ew,"AnimFrame");let $U=Ew;const sw=class sw extends $U{constructor(A){const s=A.color||[0,0,0,0],R=A.tone||[0,0,0,0],I=A.flash||[0,0,0,0];super(A.x,A.y,A.zoomX,A.zoomY,A.angle,A.mirror,A.visible,A.blendType,A.graphicFrame,A.opacity,s[0],s[1],s[2],s[3],R[0],R[1],R[2],R[3],I[0],I[1],I[2],I[3],A.locked,A.priority,A.focus,!0),this.target=A.target,this.graphicFrame=A.graphicFrame}};T(sw,"ImportedAnimFrame");let w_=sw;const Rw=class Rw{constructor(A,s){this.frameIndex=A,this.resourceName=s}};T(Rw,"AnimTimedEvent");let qU=Rw;const Ow=class Ow extends qU{constructor(A,s,R){super(A,s),this.volume=100,this.pitch=100,R&&(this.volume=R.volume,this.pitch=R.pitch)}execute(A,s,R){const I={rate:this.pitch*.01,volume:this.volume*.01};if(this.resourceName){try{A.playSound(`battle_anims/${this.resourceName}`,I)}catch(i){console.error(i)}return Math.ceil(A.sound.get(`battle_anims/${this.resourceName}`).totalDuration*1e3/33.33)}else return Math.ceil(s.user.cry(I).totalDuration*1e3/33.33)}getEventType(){return"AnimTimedSoundEvent"}};T(Ow,"AnimTimedSoundEvent");let so=Ow;const nw=class nw extends qU{constructor(A,s,R){super(A,s),this.bgX=0,this.bgY=0,this.opacity=0,this.duration=0,R&&(this.bgX=R.bgX,this.bgY=R.bgY,this.opacity=R.opacity,this.duration=R.duration)}};T(nw,"AnimTimedBgEvent");let jU=nw;const Iw=class Iw extends jU{constructor(A,s,R){super(A,s,R)}execute(A,s,R){const I={};return this.bgX!==void 0&&(I.x=this.bgX*.5-320),this.bgY!==void 0&&(I.y=this.bgY*.5-284),this.opacity!==void 0&&(I.alpha=(this.opacity||0)/255),Object.keys(I).length&&A.tweens.add(Object.assign({targets:s.bgSprite,duration:zA(this.duration*3)},I)),this.duration*2}getEventType(){return"AnimTimedUpdateBgEvent"}};T(Iw,"AnimTimedUpdateBgEvent");let zU=Iw;const iw=class iw extends jU{constructor(A,s,R){super(A,s,R)}execute(A,s,R){s.bgSprite&&s.bgSprite.destroy(),s.bgSprite=this.resourceName?A.add.tileSprite(this.bgX-320,this.bgY-284,896,576,this.resourceName):A.add.rectangle(this.bgX-320,this.bgY-284,896,576,0),s.bgSprite.setOrigin(0,0),s.bgSprite.setScale(1.25),s.bgSprite.setAlpha(this.opacity/255),A.field.add(s.bgSprite);const I=A.getNonSwitchedEnemyPokemon()||A.getNonSwitchedPlayerPokemon();return xe(R)?I!=null&&I.isOnField()&&A.field.moveBelow(s.bgSprite,I):A.field.moveTo(s.bgSprite,R),A.tweens.add({targets:s.bgSprite,duration:zA(this.duration*3)}),this.duration*2}getEventType(){return"AnimTimedAddBgEvent"}};T(iw,"AnimTimedAddBgEvent");let Ro=iw;const ws=new Map,Vs=new Map,xM=new Map,Wr=new Map;function XX(E){return new Promise(A=>{const s=tO(RA),R=IE(RA),I=[];for(let i=0;i<R.length;i++){const a=R[i];I.push(E.cachedFetch(`./battle-anims/common-${s[i].toLowerCase().replace(/\_/g,"-")}.json`).then(L=>L.json()).then(L=>xM.set(a,new RO(L))))}Promise.allSettled(I).then(()=>A())})}T(XX,"initCommonAnims");function jL(E,A){return new Promise(s=>{if(ws.has(A))if(ws.get(A)!==null)s();else{const R=setInterval(()=>{if(ws.get(A)!==null){const I=He[A].isChargingMove()?He[A]:He[A].getAttrs(ia)[0]??He[A].getAttrs(XL)[0];if(I&&Vs.get(I.chargeAnim)===null)return;clearInterval(R),s()}},50)}else{ws.set(A,null);const R=He[A]instanceof d?t.TACKLE:He[A]instanceof pe?t.FOCUS_ENERGY:t.TAIL_WHIP;T(i=>{E.cachedFetch(`./battle-anims/${Zx(i)}.json`).then(a=>{const L=a.headers.get("content-type");return!a.ok||(L==null?void 0:L.indexOf("application/json"))===-1?(mx(i,R),Wx(i,a.status,a.statusText),s()):a.json()}).then(a=>{Array.isArray(a)?($o(i,a[0]),$o(i,a[1])):$o(i,a);const L=He[i].isChargingMove()?He[i]:He[i].getAttrs(ia)[0]??He[i].getAttrs(XL)[0];L?JX(E,L.chargeAnim).then(()=>s()):s()}).catch(a=>(mx(i,R),Wx(i,a),s()))},"fetchAnimAndResolve")(A)}})}T(jL,"initMoveAnim");function mx(E,A){$o(E,ws.get(A))}T(mx,"useDefaultAnim");function Wx(E,...A){const s=Zx(E);console.warn(`Could not load animation file for move '${s}'`,...A)}T(Wx,"logMissingMoveAnim");async function QX(E,A){const s=Array.isArray(A)?A:[A],R=tO(VR),I=[];for(const i of s)Wr.has(i)&&!xe(Wr.get(i))||I.push(E.cachedFetch(`./battle-anims/encounter-${R[i].toLowerCase().replace(/\_/g,"-")}.json`).then(a=>a.json()).then(a=>Wr.set(i,new RO(a))));await Promise.allSettled(I)}T(QX,"initEncounterAnims");function JX(E,A){return new Promise(s=>{if(Vs.has(A))if(Vs.get(A)!==null)s();else{const R=setInterval(()=>{Vs.get(A)!==null&&(clearInterval(R),s())},50)}else Vs.set(A,null),E.cachedFetch(`./battle-anims/${Vn[A].toLowerCase().replace(/\_/g,"-")}.json`).then(R=>R.json()).then(R=>{Array.isArray(R)?(E0(A,R[0]),E0(A,R[1])):E0(A,R),s()})})}T(JX,"initMoveChargeAnim");function $o(E,A){const s=new RO(A);if(ws.get(E)===null){ws.set(E,s);return}ws.set(E,[ws.get(E),s])}T($o,"populateMoveAnim");function E0(E,A){const s=new RO(A);if(Vs.get(E)===null){Vs.set(E,s);return}Vs.set(E,[Vs.get(E),s])}T(E0,"populateMoveChargeAnim");function $X(E,A){return new Promise(s=>{p1(E,Array.from(xM.values()),A).then(()=>s())})}T($X,"loadCommonAnimAssets");async function qX(E,A){await p1(E,Array.from(Wr.values()),A)}T(qX,"loadEncounterAnimAssets");function zL(E,A,s){return new Promise(R=>{const I=A.map(i=>ws.get(i)).flat();for(const i of A){const a=He[i].isChargingMove()?He[i]:He[i].getAttrs(ia)[0]??He[i].getAttrs(XL)[0];if(a){const L=Vs.get(a.chargeAnim);I.push(L instanceof RO?L:L[0]),Array.isArray(L)&&I.push(L[1])}}p1(E,I,s).then(()=>R())})}T(zL,"loadMoveAnimAssets");function p1(E,A,s){return new Promise(R=>{var a;const I=new Set,i=new Set;for(const L of A){if(!((a=L.frames)!=null&&a.length))continue;const S=L.getSoundResourceNames();for(const l of S)i.add(l);const o=L.getBackgroundResourceNames();for(const l of o)I.add(l);L.graphic&&E.loadSpritesheet(L.graphic,"battle_anims",96)}for(const L of I)E.loadImage(L,"battle_anims");for(const L of i)E.loadSe(L,"battle_anims",L);s?(E.load.once(vA.Loader.Events.COMPLETE,()=>R()),E.load.isLoading()||E.load.start()):R()})}T(p1,"loadAnimAssets");const s0=106,R0=116,O0=234,n0=52;function jX(E,A,s,R,I,i,a,L,S,o){const l=zX(E,A,s,R,S,o);return eQ(I,i,a,L,l[0],l[1])}T(jX,"transformPoint");function zX(E,A,s,R,I,i){const a=s-E,L=R-A,S=a===0?0:(I-E)/a,o=L===0?0:(i-A)/L;return[S,o]}T(zX,"yAxisIntersect");function eQ(E,A,s,R,I,i){const a=s-E,L=R-A,S=E+I*a,o=A+i*L;return[S,o]}T(eQ,"repositionY");function tQ(E,A,s,R){return E===A?!1:E<A?s>R:s<R}T(tQ,"isReversed");const aw=class aw{constructor(A,s,R=!1){this.user=A??null,this.target=s??null,this.sprites=[],this.playRegardlessOfIssues=R}isHideUser(){return!1}isHideTarget(){return!1}getGraphicFrameData(A,s,R){var H,F;const I=new Map([[2,new Map],[0,new Map],[1,new Map]]),i=this.isOppAnim(),a=i?this.target:this.user,L=i?this.user:this.target,S=R&&a!==L?L.getTag(lE):null,o=a.x,l=a.y,D=a.getSprite().displayHeight/2,M=((H=S==null?void 0:S.sprite)==null?void 0:H.x)??L.x,c=((F=S==null?void 0:S.sprite)==null?void 0:F.y)??L.y,G=((S==null?void 0:S.sprite)??L.getSprite()).displayHeight/2;let P=0,_=0,g=0;for(const p of s){let v=p.x+106,k=p.y+116,j=p.zoomX/100*(p.mirror?-1:1);const q=p.zoomY/100;switch(p.focus){case 1:v+=M-O0,k+=c-G-n0;break;case 2:v+=o-s0,k+=l-D-R0;break;case 3:const Oe=jX(this.srcLine[0],this.srcLine[1],this.srcLine[2],this.srcLine[3],this.dstLine[0],this.dstLine[1]-D,this.dstLine[2],this.dstLine[3]-G,v,k);v=Oe[0],k=Oe[1],p.target===2&&tQ(this.srcLine[0],this.srcLine[2],this.dstLine[0],this.dstLine[2])&&(j=j*-1);break}const ie=-p.angle,z=p.target===2?P++:p.target===0?_++:g++;I.get(p.target).set(z,{x:v,y:k,scaleX:j,scaleY:q,angle:ie})}return I}play(A,s,R){var p,v;const I=this.isOppAnim(),i=I?this.target:this.user,a=I?this.user:this.target;if(!(a!=null&&a.isOnField())&&!this.playRegardlessOfIssues){R&&R();return}const L=s&&i!==a?a.getTag(lE):null,S=i.getSprite(),o=(L==null?void 0:L.sprite)??a.getSprite(),l={2:[],0:[],1:[]},D=[],M=T(()=>{S.setPosition(0,0),S.setScale(1),S.setAlpha(1),S.pipelineData.tone=[0,0,0,0],S.setAngle(0),L?(o.setPosition(a.x-a.getSubstituteOffset()[0],a.y-a.getSubstituteOffset()[1]),o.setScale(a.getSpriteScale()*(a.isPlayer()?.5:1)),o.setAlpha(1)):(o.setPosition(0,0),o.setScale(1),o.setAlpha(1)),o.pipelineData.tone=[0,0,0,0],o.setAngle(0);const k=I?o:S,j=I?S:o;!this.isHideUser()&&k&&k.setVisible(!0),!this.isHideTarget()&&(j!==k||!this.isHideUser())&&j.setVisible(!0);for(const q of Object.values(l).flat())q&&q.destroy();this.bgSprite&&this.bgSprite.destroy(),R&&R()},"cleanUpAndComplete");if(!A.moveAnimations&&!this.playRegardlessOfIssues)return M();const c=this.getAnim(),G=i.x,P=i.y,_=((p=L==null?void 0:L.sprite)==null?void 0:p.x)??a.x,g=((v=L==null?void 0:L.sprite)==null?void 0:v.y)??a.y;this.srcLine=[s0,R0,O0,n0],this.dstLine=[G,P,_,g];let H=(c==null?void 0:c.frames.length)??0,F=0;A.tweens.addCounter({duration:zA(3),repeat:(c==null?void 0:c.frames.length)??0,onRepeat:T(()=>{F||(S.setVisible(!1),o.setVisible(!1));const k=c.frames[F],j=this.getGraphicFrameData(A,c.frames[F],s);let q=0,ie=0,z=0;for(const ae of k)if(ae.target!==2){const Le=ae.target===0;if(Le&&a===i)continue;if(this.playRegardlessOfIssues&&ae.target===1&&!a.isOnField())continue;const Ne=l[Le?0:1],De=Le?S:o;if((Le?q:ie)===Ne.length)if(Le||!L){const Re=A.addPokemonSprite(Le?i:a,0,0,De.texture,De.frame.name,!0);["spriteColors","fusionSpriteColors"].map(Ie=>Re.pipelineData[Ie]=(Le?i:a).getSprite().pipelineData[Ie]),Re.setPipelineData("spriteKey",(Le?i:a).getBattleSpriteKey()),Re.setPipelineData("shiny",(Le?i:a).shiny),Re.setPipelineData("variant",(Le?i:a).variant),Re.setPipelineData("ignoreFieldPos",!0),De.on("animationupdate",(Ie,oe)=>Re.setFrame(oe.textureFrame)),A.field.add(Re),Ne.push(Re)}else{const Re=A.addFieldSprite(De.x,De.y,De.texture);De.on("animationupdate",(Ie,oe)=>Re.setFrame(oe.textureFrame)),A.field.add(Re),Ne.push(Re)}const Be=Le?q++:ie++,de=Ne[Be],fe=j.get(ae.target).get(Be),Ye=Le||!L?De.parentContainer.scale:a.getSpriteScale()*(a.isPlayer()?.5:1);de.setPosition(fe.x,fe.y-De.height/2*(Ye-1)),de.setAngle(fe.angle),de.setScale(fe.scaleX*Ye,fe.scaleY*Ye),de.setData("locked",ae.locked),de.setAlpha(ae.opacity/255),de.pipelineData.tone=ae.tone,de.setVisible(ae.visible&&(Le?i.visible:a.visible)),de.setBlendMode(ae.blendType===0?vA.BlendModes.NORMAL:ae.blendType===1?vA.BlendModes.ADD:vA.BlendModes.DIFFERENCE)}else{const Le=l[2];if(z===Le.length){const de=A.addFieldSprite(0,0,c.graphic,1);Le.push(de),A.field.add(de),D.push(1)}const Ne=z++,De=Le[Ne];if(D[Ne]!==ae.priority){D[Ne]=ae.priority;const de=T(fe=>{switch(fe){case 0:A.field.moveBelow(De,A.getNonSwitchedEnemyPokemon()||A.getNonSwitchedPlayerPokemon());break;case 1:A.field.moveTo(De,A.field.getAll().length-1);break;case 2:switch(ae.focus){case 2:this.bgSprite?A.field.moveAbove(De,this.bgSprite):A.field.moveBelow(De,this.user);break;case 1:A.field.moveBelow(De,this.target);break;default:de(1);break}break;case 3:switch(ae.focus){case 2:A.field.moveAbove(De,this.user);break;case 1:A.field.moveAbove(De,this.target);break;default:de(1);break}break;default:de(1)}},"setSpritePriority");de(ae.priority)}De.setFrame(ae.graphicFrame);const Be=j.get(ae.target).get(Ne);De.setPosition(Be.x,Be.y),De.setAngle(Be.angle),De.setScale(Be.scaleX,Be.scaleY),De.setAlpha(ae.opacity/255),De.setVisible(ae.visible),De.setBlendMode(ae.blendType===0?vA.BlendModes.NORMAL:ae.blendType===1?vA.BlendModes.ADD:vA.BlendModes.DIFFERENCE)}if(c!=null&&c.frameTimedEvents.has(F))for(const ae of c.frameTimedEvents.get(F))H=Math.max(c.frames.length-F+ae.execute(A,this),H);const Oe=IE(y_);for(const ae of Oe){const Le=ae===2?z:ae===0?q:ie;if(Le<l[ae].length){const Ne=l[ae].slice(Le,l[ae].length);for(const De of Ne)if(!De.getData("locked")){const Be=l[ae].indexOf(De);l[ae].splice(Be,1),ae===2&&D.splice(Be,1),De.destroy()}}}F++,H--},"onRepeat"),onComplete:T(()=>{for(const k of Object.values(l).flat())k&&!k.getData("locked")&&k.destroy();H?A.tweens.addCounter({duration:zA(H),onComplete:T(()=>M(),"onComplete")}):M()},"onComplete")})}getGraphicFrameDataWithoutTarget(A,s,R){var S;const I=new Map([[2,new Map],[0,new Map],[1,new Map]]);let i=0,a=0,L=0;for(const o of A){let{x:l,y:D}=o;const M=o.zoomX/100*(o.mirror?-1:1),c=o.zoomY/100;l+=s,D+=R;const G=-o.angle,P=o.target===2?i++:o.target===0?a++:L++;(S=I.get(o.target))==null||S.set(P,{x:l,y:D,scaleX:M,scaleY:c,angle:G})}return I}playWithoutTargets(A,s,R,I,i,a){const L={2:[],0:[],1:[]},S=T(()=>{for(const c of Object.values(L).flat())c&&c.destroy();this.bgSprite&&this.bgSprite.destroy(),a&&a()},"cleanUpAndComplete");if(!A.moveAnimations&&!this.playRegardlessOfIssues)return S();const o=this.getAnim();this.srcLine=[s0,R0,O0,n0],this.dstLine=[150,75,s,R];let l=o.frames.length,D=0,M=A.field.getAll().slice(0);A.tweens.addCounter({duration:zA(3)*I,repeat:o.frames.length,onRepeat:T(()=>{var g;M=A.field.getAll().slice(0);const c=o.frames[D],G=this.getGraphicFrameDataWithoutTarget(o.frames[D],s,R);let P=0;for(const H of c){if(H.target!==2)continue;const F=L[2];if(P===F.length){const j=A.addFieldSprite(0,0,o.graphic,1);F.push(j),A.field.add(j)}const p=P++,v=F[p];xe(H.priority)||T(q=>{if(M.length>q){const ie=A.field.getIndex(M[q]);A.field.moveTo(v,ie)}else A.field.moveTo(v,A.field.getAll().length-1)},"setSpritePriority")(H.priority),v.setFrame(H.graphicFrame);const k=(g=G.get(H.target))==null?void 0:g.get(p);k&&(v.setPosition(k.x,k.y),v.setAngle(k.angle),v.setScale(k.scaleX,k.scaleY),v.setAlpha(H.opacity/255),v.setVisible(H.visible),v.setBlendMode(H.blendType===0?vA.BlendModes.NORMAL:H.blendType===1?vA.BlendModes.ADD:vA.BlendModes.DIFFERENCE))}if(o!=null&&o.frameTimedEvents.get(D))for(const H of o.frameTimedEvents.get(D))l=Math.max(o.frames.length-D+H.execute(A,this,i),l);const _=IE(y_);for(const H of _){const F=P;if(F<L[H].length){const p=L[H].slice(F,L[H].length);for(const v of p)if(!v.getData("locked")){const k=L[H].indexOf(v);L[H].splice(k,1),v.destroy()}}}D++,l--},"onRepeat"),onComplete:T(()=>{for(const c of Object.values(L).flat())c&&!c.getData("locked")&&c.destroy();l?A.tweens.addCounter({duration:zA(l),onComplete:T(()=>S(),"onComplete")}):S()},"onComplete")})}};T(aw,"BattleAnim");let Oo=aw;const Lw=class Lw extends Oo{constructor(A,s,R,I=!1){super(s,R||s,I),this.commonAnim=A}getAnim(){return this.commonAnim?xM.get(this.commonAnim)??null:null}isOppAnim(){return!1}};T(Lw,"CommonBattleAnim");let bI=Lw;const rw=class rw extends Oo{constructor(A,s,R,I=!1){super(s,s.scene.getField()[R],I),this.move=A}getAnim(){var A,s;return ws.get(this.move)instanceof RO?ws.get(this.move):(s=ws.get(this.move))==null?void 0:s[(A=this.user)!=null&&A.isPlayer()?0:1]}isOppAnim(){var A;return!((A=this.user)!=null&&A.isPlayer())&&Array.isArray(ws.get(this.move))}isHideUser(){return He[this.move].hasFlag(pt.HIDE_USER)}isHideTarget(){return He[this.move].hasFlag(pt.HIDE_TARGET)}};T(rw,"MoveAnim");let eD=rw;const Nw=class Nw extends eD{constructor(A,s,R){super(s,R,0),this.chargeAnim=A}isOppAnim(){var A;return!((A=this.user)!=null&&A.isPlayer())&&Array.isArray(Vs.get(this.chargeAnim))}getAnim(){var A,s;return Vs.get(this.chargeAnim)instanceof RO?Vs.get(this.chargeAnim):(s=Vs.get(this.chargeAnim))==null?void 0:s[(A=this.user)!=null&&A.isPlayer()?0:1]}};T(Nw,"MoveChargeAnim");let no=Nw;const Tw=class Tw extends Oo{constructor(A,s,R,I){super(s,R??s,!0),this.encounterAnim=A,this.oppAnim=I??!1}getAnim(){return Wr.get(this.encounterAnim)??null}isOppAnim(){return this.oppAnim}};T(Tw,"EncounterBattleAnim");let dn=Tw;async function AQ(){const A=tO(RA).map(l=>l.toLowerCase()).map(l=>l.replace(/\_/g,"")),s=IE(RA),I=tO(Vn).map(l=>l.toLowerCase()).map(l=>l.replace(/\_/g," ")),i=IE(Vn),a=/name: (?:Common:)?(Opp )?(.*)/,L={};for(const l of IE(t).slice(1)){const D=t[l].toUpperCase().replace(/\_/g,"");L[D]=l}const S=[],o=[];for(let l=0;l<o.length;l++){const D=o[l].split("@").slice(1),M=D.find(F=>F.startsWith("name: "));let c,G,P;if(!M.startsWith("name: Move:")&&!(c=M.startsWith("name: OppMove:"))){const p=a.exec(M)[2].toLowerCase();A.indexOf(p)>-1?G=s[A.indexOf(p)]:I.indexOf(p)>-1&&(c=M.startsWith("name: Opp "),P=i[I.indexOf(p)])}const _=M.indexOf(":",5)+1,g=M.slice(_,M.indexOf(`
`,_));if(!L.hasOwnProperty(g)&&!G&&!P)continue;const H=G||P?new RO:new RO;H instanceof RO&&(H.id=L[g]),G?xM.set(G,H):P?Vs.set(P,c?[Vs.get(P),H]:H):ws.set(L[g],c?[ws.get(L[g]),H]:H);for(let F=0;F<D.length;F++){const p=D[F],v=p.slice(0,p.indexOf(":")),k=p.slice(v.length+1,p.lastIndexOf(`
`)).trim();switch(v){case"array":const j=k.split("  - - - ").slice(1);for(let z=0;z<j.length;z++){H.frames.push([]);const ae=j[z].split("    - - ");for(let Le=0;Le<ae.length;Le++){const Ne=ae[Le].replace(/      \- /g,"").split(`
`),De=new $U(parseFloat(Ne[0]),parseFloat(Ne[1]),parseFloat(Ne[2]),parseFloat(Ne[11]),parseFloat(Ne[3]),parseInt(Ne[4])===1,parseInt(Ne[6])===1,parseInt(Ne[5]),parseInt(Ne[7]),parseInt(Ne[8]),parseInt(Ne[12]),parseInt(Ne[13]),parseInt(Ne[14]),parseInt(Ne[15]),parseInt(Ne[16]),parseInt(Ne[17]),parseInt(Ne[18]),parseInt(Ne[19]),parseInt(Ne[21]),parseInt(Ne[22]),parseInt(Ne[23]),parseInt(Ne[24]),parseInt(Ne[20])===1,parseInt(Ne[25]),parseInt(Ne[26]));H.frames[z].push(De)}}break;case"graphic":const q=k!=="''"?k:"";H.graphic=q.indexOf(".")>-1?q.slice(0,k.indexOf(".")):q;break;case"timing":const ie=k.split("- !ruby/object:PBAnimTiming ").slice(1);for(let z=0;z<ie.length;z++){const Oe=ie[z].replace(/\n/g," ").replace(/[ ]{2,}/g," ").replace(/[a-z]+: ! '', /ig,"").replace(/name: (.*?),/,'name: "$1",').replace(/flashColor: !ruby\/object:Color { alpha: ([\d\.]+), blue: ([\d\.]+), green: ([\d\.]+), red: ([\d\.]+)}/,"flashRed: $4, flashGreen: $3, flashBlue: $2, flashAlpha: $1"),ae=parseInt(/frame: (\d+)/.exec(Oe)[1]);let Le=/name: "(.*?)"/.exec(Oe)[1].replace("''","");const Ne=parseInt(/timingType: (\d)/.exec(Oe)[1]);let De;switch(Ne){case 0:if(Le&&Le.indexOf(".")===-1){let fe;["wav","mp3","m4a"].every(Ye=>S.indexOf(`${Le}.${Ye}`)>-1?(fe=Ye,!1):!0),fe||(fe=".wav"),Le+=`.${fe}`}De=new so(ae,Le);break;case 1:De=new Ro(ae,Le.slice(0,Le.indexOf(".")));break;case 2:De=new zU(ae,Le.slice(0,Le.indexOf(".")));break}if(!De)continue;const Be=/([a-z]+): (.*?)(?:,|\})/ig;let de;for(;de=Be.exec(Oe);){const fe=de[1];let Ye=de[2];switch(fe){case"bgX":case"bgY":Ye=parseFloat(Ye);break;case"volume":case"pitch":case"opacity":case"colorRed":case"colorGreen":case"colorBlue":case"colorAlpha":case"duration":case"flashScope":case"flashRed":case"flashGreen":case"flashBlue":case"flashAlpha":case"flashDuration":Ye=parseInt(Ye);break}De.hasOwnProperty(fe)&&(De[fe]=Ye)}H.frameTimedEvents.has(ae)||H.frameTimedEvents.set(ae,[]),H.frameTimedEvents.get(ae).push(De)}break;case"position":H.position=parseInt(k);break;case"hue":H.hue=parseInt(k);break}}}}T(AQ,"populateAnims");var Ot=(E=>(E[E.PHYSICAL=0]="PHYSICAL",E[E.SPECIAL=1]="SPECIAL",E[E.STATUS=2]="STATUS",E))(Ot||{}),qE=(E=>(E[E.USER=0]="USER",E[E.OTHER=1]="OTHER",E[E.ALL_OTHERS=2]="ALL_OTHERS",E[E.NEAR_OTHER=3]="NEAR_OTHER",E[E.ALL_NEAR_OTHERS=4]="ALL_NEAR_OTHERS",E[E.NEAR_ENEMY=5]="NEAR_ENEMY",E[E.ALL_NEAR_ENEMIES=6]="ALL_NEAR_ENEMIES",E[E.RANDOM_NEAR_ENEMY=7]="RANDOM_NEAR_ENEMY",E[E.ALL_ENEMIES=8]="ALL_ENEMIES",E[E.ATTACKER=9]="ATTACKER",E[E.NEAR_ALLY=10]="NEAR_ALLY",E[E.ALLY=11]="ALLY",E[E.USER_OR_NEAR_ALLY=12]="USER_OR_NEAR_ALLY",E[E.USER_AND_ALLIES=13]="USER_AND_ALLIES",E[E.ALL=14]="ALL",E[E.USER_SIDE=15]="USER_SIDE",E[E.ENEMY_SIDE=16]="ENEMY_SIDE",E[E.BOTH_SIDES=17]="BOTH_SIDES",E[E.PARTY=18]="PARTY",E[E.CURSE=19]="CURSE",E))(qE||{}),pt=(E=>(E[E.NONE=0]="NONE",E[E.MAKES_CONTACT=1]="MAKES_CONTACT",E[E.IGNORE_PROTECT=2]="IGNORE_PROTECT",E[E.IGNORE_VIRTUAL=4]="IGNORE_VIRTUAL",E[E.SOUND_BASED=8]="SOUND_BASED",E[E.HIDE_USER=16]="HIDE_USER",E[E.HIDE_TARGET=32]="HIDE_TARGET",E[E.BITING_MOVE=64]="BITING_MOVE",E[E.PULSE_MOVE=128]="PULSE_MOVE",E[E.PUNCHING_MOVE=256]="PUNCHING_MOVE",E[E.SLICING_MOVE=512]="SLICING_MOVE",E[E.RECKLESS_MOVE=1024]="RECKLESS_MOVE",E[E.BALLBOMB_MOVE=2048]="BALLBOMB_MOVE",E[E.POWDER_MOVE=4096]="POWDER_MOVE",E[E.DANCE_MOVE=8192]="DANCE_MOVE",E[E.WIND_MOVE=16384]="WIND_MOVE",E[E.TRIAGE_MOVE=32768]="TRIAGE_MOVE",E[E.IGNORE_ABILITIES=65536]="IGNORE_ABILITIES",E[E.CHECK_ALL_HITS=131072]="CHECK_ALL_HITS",E[E.IGNORE_SUBSTITUTE=262144]="IGNORE_SUBSTITUTE",E[E.REDIRECT_COUNTER=524288]="REDIRECT_COUNTER",E))(pt||{});const Sw=class Sw{constructor(A,s,R,I,i,a,L,S,o,l){this.attrs=[],this.conditions=[],this.flags=0,this.nameAppend="",this.id=A,this._type=s,this._category=R,this.moveTarget=I,this.power=i,this.accuracy=a,this.pp=L,this.chance=S,this.priority=o,this.generation=l,I===0&&this.setFlag(2,!0),R===0&&this.setFlag(1,!0),this.localize()}get type(){return this._type}get category(){return this._category}localize(){const A=t[this.id].split("_").filter(s=>s).map((s,R)=>R?`${s[0]}${s.slice(1).toLowerCase()}`:s.toLowerCase()).join("");this.name=this.id?`${U.t(`move:${A}.name`)}${this.nameAppend}`:"",this.effect=this.id?`${U.t(`move:${A}.effect`)}${this.nameAppend}`:""}getAttrs(A){return this.attrs.filter(s=>s instanceof A)}hasAttr(A){return this.attrs.some(s=>s instanceof A)}findAttr(A){return this.attrs.find(A)}attr(A,...s){const R=new A(...s);this.attrs.push(R);let I=R.getCondition();return I&&(typeof I=="function"&&(I=new EL(I)),this.conditions.push(I)),this}addAttr(A){this.attrs.push(A);let s=A.getCondition();return s&&(typeof s=="function"&&(s=new EL(s)),this.conditions.push(s)),this}target(A){return this.moveTarget=A,this}hasFlag(A){return!!(this.flags&A)}isMultiTarget(){switch(this.moveTarget){case 2:case 4:case 6:case 8:case 13:case 14:case 15:case 16:case 17:return!0}return!1}isAllyTarget(){switch(this.moveTarget){case 0:case 10:case 11:case 12:case 13:case 15:return!0}return!1}isChargingMove(){return!1}isTypeImmune(A,s,R){if(this.moveTarget===0)return!1;switch(R){case n.GRASS:if(this.hasFlag(4096))return!0;break;case n.DARK:if(A.hasAbility(O.PRANKSTER)&&this.category===2&&A.isPlayer()!==s.isPlayer())return!0;break}return!1}hitsSubstitute(A,s){if([0,15,16,17].includes(this.moveTarget)||!(s!=null&&s.getTag(Y.SUBSTITUTE)))return!1;const R=new je(!1);return Et(Oa,A,null,!1,R),!R.value&&!this.hasFlag(8)&&!this.hasFlag(262144)}condition(A){return typeof A=="function"&&(A=new EL(A)),this.conditions.push(A),this}edgeCase(){return this}partial(){return this.nameAppend+=" (P)",this}unimplemented(){return this.nameAppend+=" (N)",this}setFlag(A,s){s?this.flags|=A:this.flags^=A}makesContact(A=!0){return this.setFlag(1,A),this}ignoresProtect(){return this.setFlag(2,!0),this}ignoresVirtual(){return this.setFlag(4,!0),this}soundBased(){return this.setFlag(8,!0),this}hidesUser(){return this.setFlag(16,!0),this}hidesTarget(){return this.setFlag(32,!0),this}bitingMove(){return this.setFlag(64,!0),this}pulseMove(){return this.setFlag(128,!0),this}punchingMove(){return this.setFlag(256,!0),this}slicingMove(){return this.setFlag(512,!0),this}recklessMove(){return this.setFlag(1024,!0),this}ballBombMove(){return this.setFlag(2048,!0),this}powderMove(){return this.setFlag(4096,!0),this}danceMove(){return this.setFlag(8192,!0),this}windMove(){return this.setFlag(16384,!0),this}triageMove(){return this.setFlag(32768,!0),this}ignoresAbilities(){return this.setFlag(65536,!0),this}checkAllHits(){return this.setFlag(131072,!0),this}ignoresSubstitute(){return this.setFlag(262144,!0),this}redirectCounter(){return this.setFlag(524288,!0),this}checkFlag(A,s,R){switch(A){case 1:if(s.hasAbilityWithAttr(NU)||this.hitsSubstitute(s,R))return!1;break;case 65536:if(s.hasAbilityWithAttr(hI)){const I=new je(!1);if(Et(hI,s,I,!1,this),I.value)return!0}break;case 2:if(s.hasAbilityWithAttr(KU)&&this.checkFlag(1,s,null))return!0;break}return!!(this.flags&A)}applyConditions(A,s,R){for(const I of this.conditions)if(!I.apply(A,s,R))return!1;return!0}getFailedText(A,s,R,I){for(const i of this.attrs){const a=i.getFailedText(A,s,R,I);if(a!==null)return a}return null}getUserBenefitScore(A,s,R){let I=0;for(const i of this.attrs)I+=i.getUserBenefitScore(A,s,R);for(const i of this.conditions)I+=i.getUserBenefitScore(A,s,R);return I}getTargetBenefitScore(A,s,R){let I=0;for(const i of this.attrs)I+=i.getTargetBenefitScore(A,i.selfTarget?A:s,R)*(s!==A&&i.selfTarget?-1:1);return I}calculateBattleAccuracy(A,s,R=!1){var a;const I=new $e(this.accuracy);if(eA(vn,A,s,this,I),aI(bC,s,A,this,{value:!1},R,I),I.value===-1)return I.value;const i=this.hasAttr(dI);return i||A.scene.applyModifiers(MS,A.isPlayer(),A,I),((a=A.scene.arena.weather)==null?void 0:a.weatherType)===Q.FOG&&(I.value=Math.floor(I.value*.9)),!i&&A.scene.arena.getTag(Me.GRAVITY)&&(I.value=Math.floor(I.value*1.67)),I.value}calculateBattlePower(A,s,R=!1){if(this.category===2)return-1;const I=new $e(this.power),i=new $e(1);gO($O,A,s,this,!0,null,i);const a=A.getTeraType();a!==n.UNKNOWN&&a===this.type&&I.value<60&&this.priority<=0&&!this.hasAttr(jt)&&!A.scene.findModifier(l=>l instanceof ji&&l.pokemonId===A.id)&&(I.value=60),gO(mS,A,s,this,R,I),A.getAlly()&&gO(pS,A.getAlly(),s,this,R,I);const L=new Set(A.scene.getField(!0).map(l=>l.getAbilityAttrs(li).filter(D=>{const M=D.getCondition();return!M||M(l)})).flat());for(const l of L)l.applyPreAttack(A,null,R,s,this,[I]);(A instanceof Ss?A.scene.getPlayerField():A.scene.getEnemyField()).forEach(l=>gO(jC,l,s,this,R,I)),I.value*=i.value;const o=A.findTag(l=>l instanceof bL&&l.boostedType===this.type);return o&&(I.value*=o.boostValue),eA(_A,A,s,this,I),A.scene.applyModifiers(ji,A.isPlayer(),A,new Jt(0),I),this.hasAttr(Lo)||(A.scene.arena.applyTags(DT,R,this.type,I),A.scene.applyModifiers(an,A.isPlayer(),A,this.type,I)),A.getTag(yU)&&(I.value*=1.5),I.value}};T(Sw,"Move");let Io=Sw;const ow=class ow extends Io{constructor(A,s,R,I,i,a,L,S,o){super(A,s,R,3,I,i,a,L,S,o),this.type===n.FIRE&&this.addAttr(new yA(!1,J.FREEZE))}getTargetBenefitScore(A,s,R){let I=super.getTargetBenefitScore(A,s,R),i=0;const a=s.getAttackTypeEffectiveness(this.type,A);if(i=Math.pow(a-1,2)*a<1?-2:2,i){if(this.category===0){const S=new Jt(A.getEffectiveStat(B.ATK,s));if(eA(aa,A,s,R,S),S.value>A.getEffectiveStat(B.SPATK,s)){const o=A.getEffectiveStat(B.SPATK,s)/S.value;o<=.75?i*=2:o<=.875&&(i*=1.5)}}else{const S=new Jt(A.getEffectiveStat(B.SPATK,s));if(eA(aa,A,s,R,S),S.value>A.getEffectiveStat(B.ATK,s)){const o=A.getEffectiveStat(B.ATK,s)/S.value;o<=.75?i*=2:o<=.875&&(i*=1.5)}}const L=new $e(this.power);eA(_A,A,s,R,L),i+=Math.floor(L.value/5)}return I-=i,I}};T(ow,"AttackMove");let d=ow;const lw=class lw extends Io{constructor(A,s,R,I,i,a,L){super(A,s,2,3,-1,R,I,i,a,L)}};T(lw,"StatusMove");let Se=lw;const Cw=class Cw extends Io{constructor(A,s,R,I,i,a,L){super(A,s,2,0,-1,R,I,i,a,L)}};T(Cw,"SelfStatusMove");let pe=Cw;function Ob(E){return class extends E{constructor(){super(...arguments),this.chargeAnim=Vn[`${t[this.id]}_CHARGING`],this.chargeAttrs=[]}isChargingMove(){return!0}chargeText(A){return this._chargeText=A,this}showChargeText(A,s){A.scene.queueMessage(this._chargeText.replace("{USER}",b(A)).replace("{TARGET}",b(s)))}getChargeAttrs(A){return this.chargeAttrs.filter(s=>s instanceof A)}hasChargeAttr(A){return this.chargeAttrs.some(s=>s instanceof A)}chargeAttr(A,...s){const R=new A(...s);return this.chargeAttrs.push(R),this}}}T(Ob,"ChargeMove");const Uw=class Uw extends Ob(d){};T(Uw,"ChargingAttackMove");let Es=Uw;const Dw=class Dw extends Ob(pe){};T(Dw,"ChargingSelfStatusMove");let V_=Dw;const Mw=class Mw{constructor(A=!1){this.selfTarget=A}apply(A,s,R,I){return!0}getCondition(){return null}getFailedText(A,s,R,I){return null}getUserBenefitScore(A,s,R){return 0}getTargetBenefitScore(A,s,R){return 0}};T(Mw,"MoveAttr");let $t=Mw;var ca=(E=>(E[E.PRE_APPLY=0]="PRE_APPLY",E[E.POST_APPLY=1]="POST_APPLY",E[E.HIT=2]="HIT",E[E.POST_TARGET=3]="POST_TARGET",E))(ca||{});const uw=class uw extends $t{constructor(A,s,R=!1,I=!1,i=!1,a){super(A),this.trigger=s??1,this.firstHitOnly=R,this.lastHitOnly=I,this.firstTargetOnly=i,this.effectChanceOverride=a}canApply(A,s,R,I){return!!(this.selfTarget?A.hp&&!A.getTag(Y.FRENZY):s.hp)&&(this.selfTarget||!s.getTag(Y.PROTECTED)||R.checkFlag(2,A,s))}apply(A,s,R,I){return this.canApply(A,s,R,I)}getMoveChance(A,s,R,I,i){const a=new $e(this.effectChanceOverride??R.chance);if(Et(FS,A,null,!1,a,R,s,I,i),(!R.hasAttr(qt)||a.value<=R.chance)&&!R.hasAttr(CD)){const L=A.isPlayer()?et.PLAYER:et.ENEMY;A.scene.arena.applyTagsForSide(Me.WATER_FIRE_PLEDGE,L,!1,a)}return I||aI(wI,s,A,null,null,!1,a),a.value}};T(uw,"MoveEffectAttr");let st=uw;const hw=class hw extends $t{constructor(){super(!0)}};T(hw,"MoveHeaderAttr");let ZL=hw;const cw=class cw extends ZL{constructor(A){super(),this.message=A}apply(A,s,R,I){const i=typeof this.message=="string"?this.message:this.message(A,R);return i?(A.scene.queueMessage(i),!0):!1}};T(cw,"MessageHeaderAttr");let v_=cw;const Gw=class Gw extends ZL{constructor(A){super(),this.tagType=A}apply(A,s,R,I){return A.addTag(this.tagType),!0}};T(Gw,"AddBattlerTagHeaderAttr");let tD=Gw;const Pw=class Pw extends tD{constructor(){super(Y.BEAK_BLAST_CHARGING),this.chargeAnim=Vn.BEAK_BLAST_CHARGING}};T(Pw,"BeakBlastHeaderAttr");let XL=Pw;const _w=class _w extends $t{constructor(A){super(),this.message=A}apply(A,s,R,I){const i=typeof this.message=="string"?this.message:this.message(A,s,R);return i?(A.scene.queueMessage(i,500),!0):!1}};T(_w,"PreMoveMessageAttr");let eL=_w;const Hw=class Hw extends $t{};T(Hw,"RespectAttackTypeImmunityAttr");let AD=Hw;const dw=class dw extends $t{apply(A,s,R,I){return I[0].value=!0,!0}};T(dw,"IgnoreOpponentStatStagesAttr");let di=dw;const fw=class fw extends $t{apply(A,s,R,I){return I[0].value++,!0}getUserBenefitScore(A,s,R){return 3}};T(fw,"HighCritAttr");let pA=fw;const Bw=class Bw extends $t{apply(A,s,R,I){return I[0].value=!0,!0}getUserBenefitScore(A,s,R){return 5}};T(Bw,"CritOnlyAttr");let jO=Bw;const gw=class gw extends $t{constructor(A){super(),this.damage=A}apply(A,s,R,I){return I[0].value=this.getDamage(A,s,R),!0}getDamage(A,s,R){return this.damage}};T(gw,"FixedDamageAttr");let ZR=gw;const Kw=class Kw extends ZR{constructor(){super(0)}apply(A,s,R,I){return I[0].value=A.hp,!0}};T(Kw,"UserHpDamageAttr");let x_=Kw;const Fw=class Fw extends ZR{constructor(){super(0)}apply(A,s,R,I){return I[0].value=gt(s.hp/2),!0}getTargetBenefitScore(A,s,R){return s.getHpRatio()>.5?Math.floor((s.getHpRatio()-.5)*-24+4):-20}};T(Fw,"TargetHalfHpDamageAttr");let Yr=Fw;const mw=class mw extends ZR{constructor(){super(0)}apply(A,s,R,I){return I[0].value=s.hp-A.hp,!0}getCondition(){return(A,s,R)=>A.hp<=s.hp}};T(mw,"MatchHpAttr");let b_=mw;const Ww=class Ww extends ZR{constructor(A,s){super(0),this.moveFilter=A,this.multiplier=s}apply(A,s,R,I){const i=A.turnData.attacksReceived.filter(a=>this.moveFilter(He[a.move])).reduce((a,L)=>a+L.damage,0);return I[0].value=gt(i*this.multiplier),!0}getCondition(){return(A,s,R)=>!!A.turnData.attacksReceived.filter(I=>this.moveFilter(He[I.move])).length}};T(Ww,"CounterDamageAttr");let Mi=Ww;const Yw=class Yw extends ZR{constructor(){super(0)}getDamage(A,s,R){return A.level}};T(Yw,"LevelDamageAttr");let ED=Yw;const pw=class pw extends ZR{constructor(){super(0)}getDamage(A,s,R){return gt(A.level*(A.randSeedIntRange(50,150)*.01))}};T(pw,"RandomLevelDamageAttr");let k_=pw;const yw=class yw extends $t{apply(A,s,R,I){const i=I[0];return i.value=this.getModifiedDamage(A,s,R,i.value),!0}getModifiedDamage(A,s,R,I){return I}};T(yw,"ModifiedDamageAttr");let sD=yw;const ww=class ww extends sD{getModifiedDamage(A,s,R,I){return Math.min(I,s.hp-1)}getCondition(){return(A,s,R)=>s.hp>1}getUserBenefitScore(A,s,R){return s.hp>1?0:-20}};T(ww,"SurviveDamageAttr");let RD=ww;const Vw=class Vw extends st{constructor(A=!1,s=.25,R=!1){super(!0,1,!1,!0),this.useHp=A,this.damageRatio=s,this.unblockable=R}apply(A,s,R,I){if(!super.apply(A,s,R,I))return!1;const i=new je(!1);if(this.unblockable||(Et(yC,A,i),Et(rE,A,i)),i.value)return!1;const a=(this.useHp?A.getMaxHp():A.turnData.damageDealt)*this.damageRatio,L=A.turnData.damageDealt?1:0,S=gt(a,L);return!S||i.value?!1:(A.damageAndUpdate(S,Pt.OTHER,!1,!0,!0),A.scene.queueMessage(U.t("moveTriggers:hitWithRecoil",{pokemonName:b(A)})),A.turnData.damageTaken+=S,!0)}getUserBenefitScore(A,s,R){return Math.floor(R.power/5/-4)}};T(Vw,"RecoilAttr");let ms=Vw;const vw=class vw extends st{constructor(){super(!0,3)}apply(A,s,R,I){return A.damageAndUpdate(A.hp,Pt.OTHER,!1,!0,!0),A.turnData.damageTaken+=A.hp,!0}getUserBenefitScore(A,s,R){return A.isBoss()?-20:Math.ceil(((1-A.getHpRatio())*10-10)*(s.getAttackTypeEffectiveness(R.type,A)-.5))}};T(vw,"SacrificialAttr");let fn=vw;const xw=class xw extends st{constructor(){super(!0,2)}apply(A,s,R,I){return super.apply(A,s,R,I)?(A.damageAndUpdate(A.hp,Pt.OTHER,!1,!0,!0),A.turnData.damageTaken+=A.hp,!0):!1}getUserBenefitScore(A,s,R){return A.isBoss()?-20:Math.ceil(((1-A.getHpRatio())*10-10)*(s.getAttackTypeEffectiveness(R.type,A)-.5))}};T(xw,"SacrificialAttrOnHit");let HI=xw;const bw=class bw extends st{constructor(){super(!0,3)}apply(A,s,R,I){if(!super.apply(A,s,R,I))return!1;const i=new je(!1);return Et(rE,A,i),i.value||(A.damageAndUpdate(gt(A.getMaxHp()/2),Pt.OTHER,!1,!0,!0),A.scene.queueMessage(U.t("moveTriggers:cutHpPowerUpMove",{pokemonName:b(A)}))),!0}getUserBenefitScore(A,s,R){return A.isBoss()?-10:Math.ceil(((1-A.getHpRatio()/2)*10-10)*(s.getAttackTypeEffectiveness(R.type,A)-.5))}};T(bw,"HalfSacrificialAttr");let OD=bw;const kw=class kw extends st{constructor(A=.25){super(!0),this.hpCost=A}apply(A,s,R,I){return super.apply(A,s,R,I)?(A.damageAndUpdate(Math.floor(A.getMaxHp()*this.hpCost),Pt.OTHER,!1,!0,!0),A.addTag(Y.SUBSTITUTE,0,R.id,A.id),!0):!1}getUserBenefitScore(A,s,R){return A.isBoss()?-10:5}getCondition(){return(A,s,R)=>!A.getTag(lE)&&A.hp>Math.floor(A.getMaxHp()*this.hpCost)&&A.getMaxHp()>1}getFailedText(A,s,R,I){return A.getTag(lE)?U.t("moveTriggers:substituteOnOverlap",{pokemonName:b(A)}):A.hp<=Math.floor(A.getMaxHp()/4)||A.getMaxHp()===1?U.t("moveTriggers:substituteNotEnoughHp"):U.t("battle:attackFailed")}};T(kw,"AddSubstituteAttr");let nD=kw;const Zw=class Zw extends st{constructor(A,s,R){super(R===void 0||R),this.healRatio=A||1,this.showAnim=!!s}apply(A,s,R,I){return this.addHealPhase(this.selfTarget?A:s,this.healRatio),!0}addHealPhase(A,s){A.scene.unshiftPhase(new CE(A.scene,A.getBattlerIndex(),gt(A.getMaxHp()*s),U.t("moveTriggers:healHp",{pokemonName:b(A)}),!0,!this.showAnim))}getTargetBenefitScore(A,s,R){const I=(1-(this.selfTarget?A:s).getHpRatio())*20-this.healRatio*10;return Math.round(I/(1-this.healRatio/2))}};T(Zw,"HealAttr");let Rs=Zw;const Xw=class Xw extends st{constructor(A,s){super(),this.message=A,this.abilityCondition=s}canApply(A,s,R,I){return!!(this.selfTarget&&A.hp&&!A.getTag(Y.FRENZY)||!this.selfTarget&&(!s.getTag(Y.PROTECTED)||R.hasFlag(2)))}apply(A,s,R,I){return this.canApply(A,s,R,I)?((A.isPlayer()?A.scene.getParty():A.scene.getEnemyParty()).forEach(a=>this.cureStatus(a,A.id)),this.message&&A.scene.queueMessage(this.message),!0):!1}cureStatus(A,s){var R;!A.isOnField()||A.id===s?(A.resetStatus(!1),A.updateInfo()):A.hasAbility(this.abilityCondition)?A.scene.unshiftPhase(new mn(A.scene,A.id,((R=A.getPassiveAbility())==null?void 0:R.id)===this.abilityCondition)):(A.resetStatus(),A.updateInfo())}};T(Xw,"PartyStatusCureAttr");let pr=Xw;const Qw=class Qw extends st{apply(A,s,R,I){const i=s.getAlly(),a=new je(!1);return i&&Et(rE,i,a),a.value||!i?!1:(i.damageAndUpdate(Math.max(1,Math.floor(1/16*i.getMaxHp())),Pt.OTHER),!0)}getTargetBenefitScore(A,s,R){return s.getAlly()?-5:0}};T(Qw,"FlameBurstAttr");let Z_=Qw;const Jw=class Jw extends fn{constructor(){super()}apply(A,s,R,I){if(!super.apply(A,s,R,I))return!1;const i=A.scene.getParty().map(a=>a.getMaxHp()).reduce((a,L)=>Math.max(L,a),0);return A.scene.pushPhase(new CE(A.scene,A.getBattlerIndex(),i,U.t("moveTriggers:sacrificialFullRestore",{pokemonName:b(A)}),!0,!1,!1,!0),!0),!0}getUserBenefitScore(A,s,R){return-20}getCondition(){return(A,s,R)=>A.scene.getParty().filter(I=>I.isActive()).length>A.scene.currentBattle.getBattlerCount()}};T(Jw,"SacrificialFullRestoreAttr");let X_=Jw;const $w=class $w extends $t{constructor(A){super(),this.weather=A}apply(A,s,R,I){var a;const i=I[0];return((a=A.scene.arena.weather)==null?void 0:a.weatherType)===this.weather&&(i.value=Math.max(i.value,1)),!0}};T($w,"IgnoreWeatherTypeDebuffAttr");let ID=$w;const qw=class qw extends Rs{constructor(){super(.5)}apply(A,s,R,I){var a,L;let i=.5;if(!((a=A.scene.arena.weather)!=null&&a.isEffectSuppressed(A.scene))){const S=((L=A.scene.arena.weather)==null?void 0:L.weatherType)||Q.NONE;i=this.getWeatherHealRatio(S)}return this.addHealPhase(A,i),!0}};T(qw,"WeatherHealAttr");let iD=qw;const jw=class jw extends iD{getWeatherHealRatio(A){switch(A){case Q.SUNNY:case Q.HARSH_SUN:return 2/3;case Q.RAIN:case Q.SANDSTORM:case Q.HAIL:case Q.SNOW:case Q.HEAVY_RAIN:return .25;default:return .5}}};T(jw,"PlantHealAttr");let yr=jw;const zw=class zw extends iD{getWeatherHealRatio(A){switch(A){case Q.SANDSTORM:return 2/3;default:return .5}}};T(zw,"SandHealAttr");let Q_=zw;const e4=class e4 extends Rs{constructor(A,s,R,I,i){super(A,R,I),this.normalHealRatio=A,this.boostedHealRatio=s,this.condition=i}apply(A,s,R,I){const i=this.condition&&this.condition(A,s,R)?this.boostedHealRatio:this.normalHealRatio;return this.addHealPhase(s,i),!0}};T(e4,"BoostHealAttr");let J_=e4;const t4=class t4 extends Rs{apply(A,s,R,I){return A.getAlly()===s?(super.apply(A,s,R,I),!0):!1}};T(t4,"HealOnAllyAttr");let aD=t4;const A4=class A4 extends st{constructor(A,s){super(!0,2),this.healRatio=A??.5,this.healStat=s??null}apply(A,s,R,I){let i=0,a="";const L=s.hasAbilityWithAttr(KS,!1);return this.healStat!==null?(i=s.getEffectiveStat(this.healStat),a=U.t("battle:drainMessage",{pokemonName:b(s)})):(i=gt(A.turnData.currDamageDealt*this.healRatio),a=U.t("battle:regainHealth",{pokemonName:b(A)})),L&&(A.hasAbilityWithAttr(rE)?(i=0,a=""):(A.turnData.damageTaken+=i,i=i*-1,a="")),A.scene.unshiftPhase(new CE(A.scene,A.getBattlerIndex(),i,a,!1,!0)),!0}getUserBenefitScore(A,s,R){if(this.healStat){const I=s.getEffectiveStat(this.healStat);return Math.floor(Math.max(0,Math.min(1,(I+A.hp)/A.getMaxHp()-.33))/A.getHpRatio())}return Math.floor(Math.max(1-A.getHpRatio()-.33,0)*(R.power/4))}};T(A4,"HitHealAttr");let Ps=A4;const E4=class E4 extends $t{constructor(A,s=1){super(),this.moveIncrementFunc=A,this.increaseAmount=s}apply(A,s,R,I){return this.moveIncrementFunc(A,s,R)?(I[0].value+=this.increaseAmount,!0):!1}};T(E4,"IncrementMovePriorityAttr");let Ia=E4;const s4=class s4 extends $t{constructor(A){super(),this.intrinsicMultiHitType=A!==void 0?A:1,this.multiHitType=this.intrinsicMultiHitType}getMultiHitType(){return this.multiHitType}apply(A,s,R,I){const i=new $e(this.intrinsicMultiHitType);return eA(LD,A,s,R,i),this.multiHitType=i.value,I[0].value=this.getHitCount(A,s),!0}getTargetBenefitScore(A,s,R){return-5}getHitCount(A,s){switch(this.multiHitType){case 1:{const I=A.randSeedInt(16),i=new Jt(I);return Et(JS,A,null,!1,i),i.value>=10?2:i.value>=4?3:i.value>=2?4:5}case 0:return 2;case 2:return 3;case 3:return 10;case 4:return(A.isPlayer()?A.scene.getParty():A.scene.getEnemyParty()).reduce((I,i)=>I+(i.id===A.id?1:i!=null&&i.status&&i.status.effect!==J.NONE?0:1),0)}}};T(s4,"MultiHitAttr");let jt=s4;const R4=class R4 extends $t{apply(A,s,R,I){return!1}};T(R4,"ChangeMultiHitTypeAttr");let LD=R4;const O4=class O4 extends LD{apply(A,s,R,I){return A.species.speciesId===e.GRENINJA&&A.hasAbility(O.BATTLE_BOND)&&A.formIndex===2?(I[0].value=2,!0):!1}};T(O4,"WaterShurikenMultiHitTypeAttr");let $_=O4;const n4=class n4 extends st{constructor(A,s,R,I=!1){super(s,2),this.overrideStatus=!1,this.effect=A,this.turnsRemaining=R,this.overrideStatus=I}apply(A,s,R,I){if(!this.selfTarget&&R.hitsSubstitute(A,s))return!1;const i=this.getMoveChance(A,s,R,this.selfTarget,!0);if(i<0||i===100||A.randSeedInt(100)<i){const L=this.selfTarget?A:s;if(L.status)if(this.overrideStatus)L.resetStatus();else return!1;if(A!==s&&s.isSafeguarded(A))return R.category===2&&A.scene.queueMessage(U.t("moveTriggers:safeguard",{targetName:b(s)})),!1;if((!L.status||L.status.effect===this.effect&&i<0)&&L.trySetStatus(this.effect,!0,A,this.turnsRemaining))return tb(RU,A,s,R,null,!1,this.effect),!0}return!1}getTargetBenefitScore(A,s,R){const I=this.getMoveChance(A,s,R,this.selfTarget,!1);return!(this.selfTarget?A:s).status&&(this.selfTarget?A:s).canSetStatus(this.effect,!0,!1,A)?Math.floor(I*-.1):0}};T(n4,"StatusEffectAttr");let Ze=n4;const I4=class I4 extends Ze{constructor(A,s,R,I){super(A[0],s,R,I),this.effects=A}apply(A,s,R,I){return this.effect=RE(this.effects),super.apply(A,s,R,I)}getTargetBenefitScore(A,s,R){const I=this.getMoveChance(A,s,R,this.selfTarget,!1);return!(this.selfTarget?A:s).status&&(this.selfTarget?A:s).canSetStatus(this.effect,!0,!1,A)?Math.floor(I*-.1):0}};T(I4,"MultiStatusEffectAttr");let rD=I4;const i4=class i4 extends st{constructor(){super(!1,2)}apply(A,s,R,I){var a;const i=((a=A.status)==null?void 0:a.effect)??(A.hasAbility(O.COMATOSE)?J.SLEEP:void 0);if(s.status)return!1;{const L=s.canSetStatus(i,!0,!1,A);return L&&(A.status&&A.scene.queueMessage(XI(A.status.effect,b(A))),A.resetStatus(),A.updateInfo(),s.trySetStatus(i,!0,A)),L}}getTargetBenefitScore(A,s,R){var I;return!(this.selfTarget?A:s).status&&(this.selfTarget?A:s).canSetStatus((I=A.status)==null?void 0:I.effect,!0,!1,A)?Math.floor(R.chance*-.1):0}};T(i4,"PsychoShiftEffectAttr");let q_=i4;const a4=class a4 extends st{constructor(A){super(!1,2),this.chance=A}apply(A,s,R,I){return new Promise(i=>{if(R.hitsSubstitute(A,s)||Phaser.Math.RND.realInRange(0,1)>=this.chance)return i(!1);const L=this.getTargetHeldItems(s).filter(S=>S.isTransferable);if(L.length){const S=s.isPlayer()?FE.PLAYER:s.hasTrainer()?FE.TRAINER:FE.WILD,o=L.map(M=>M.type.getOrInferTier(S)).reduce((M,c)=>Math.max(c,M),0),l=L.filter(M=>M.type.getOrInferTier(S)===o),D=l[A.randSeedInt(l.length)];A.scene.tryTransferHeldItemModifier(D,A,!1).then(M=>{M&&A.scene.queueMessage(U.t("moveTriggers:stoleItem",{pokemonName:b(A),targetName:b(s),itemName:D.type.name})),i(M)});return}i(!1)})}getTargetHeldItems(A){return A.scene.findModifiers(s=>s instanceof at&&s.pokemonId===A.id,A.isPlayer())}getUserBenefitScore(A,s,R){return this.getTargetHeldItems(s).length?5:0}getTargetBenefitScore(A,s,R){return this.getTargetHeldItems(s).length?-5:0}};T(a4,"StealHeldItemChanceAttr");let ND=a4;const L4=class L4 extends st{constructor(A){super(!1,2),this.berriesOnly=A}apply(A,s,R,I){if(!this.berriesOnly&&s.isPlayer()||R.hitsSubstitute(A,s))return!1;const i=new je(!1);if(Et(YL,s,i),i.value===!0)return!1;let a=this.getTargetHeldItems(s).filter(L=>L.isTransferable);if(this.berriesOnly&&(a=a.filter(L=>L instanceof _E&&L.pokemonId===s.id,s.isPlayer())),a.length){const L=a[A.randSeedInt(a.length)];--L.stackCount,s.scene.updateModifiers(s.isPlayer()),this.berriesOnly?A.scene.queueMessage(U.t("moveTriggers:incineratedItem",{pokemonName:b(A),targetName:b(s),itemName:L.type.name})):A.scene.queueMessage(U.t("moveTriggers:knockedOffItem",{pokemonName:b(A),targetName:b(s),itemName:L.type.name}))}return!0}getTargetHeldItems(A){return A.scene.findModifiers(s=>s instanceof at&&s.pokemonId===A.id,A.isPlayer())}getUserBenefitScore(A,s,R){return this.getTargetHeldItems(s).length?5:0}getTargetBenefitScore(A,s,R){return this.getTargetHeldItems(s).length?-5:0}};T(L4,"RemoveHeldItemAttr");let TD=L4;const r4=class r4 extends st{constructor(){super(!0,2)}apply(A,s,R,I){if(!super.apply(A,s,R,I))return!1;const i=this.getTargetHeldBerries(s);if(i.length<=0)return!1;this.chosenBerry=i[A.randSeedInt(i.length)];const a=new je(!1);return s.scene.applyModifiers($i,s.isPlayer(),s,a),a.value||this.reduceBerryModifier(s),this.eatBerry(s),!0}getTargetHeldBerries(A){return A.scene.findModifiers(s=>s instanceof _E&&s.pokemonId===A.id,A.isPlayer())}reduceBerryModifier(A){var s;((s=this.chosenBerry)==null?void 0:s.stackCount)===1?A.scene.removeModifier(this.chosenBerry,!A.isPlayer()):this.chosenBerry!==void 0&&this.chosenBerry.stackCount>1&&this.chosenBerry.stackCount--,A.scene.updateModifiers(A.isPlayer())}eatBerry(A){j6(this.chosenBerry.berryType)(A),Et(QS,A,new je(!1))}};T(r4,"EatBerryAttr");let io=r4;const N4=class N4 extends io{constructor(){super()}apply(A,s,R,I){if(R.hitsSubstitute(A,s))return!1;const i=new je(!1);if(Et(YL,s,i),i.value===!0)return!1;const a=this.getTargetHeldBerries(s);if(a.length<=0)return!1;this.chosenBerry=a[A.randSeedInt(a.length)];const L=U.t("battle:stealEatBerry",{pokemonName:A.name,targetName:s.name,berryName:this.chosenBerry.type.name});return A.scene.queueMessage(L),this.reduceBerryModifier(s),this.eatBerry(A),!0}};T(N4,"StealEatBerryAttr");let SD=N4;const T4=class T4 extends st{constructor(A,...s){super(A,1,!1,!0),this.effects=s}apply(A,s,R,I){if(!super.apply(A,s,R,I)||!this.selfTarget&&R.hitsSubstitute(A,s))return!1;const i=xn(A,R.id);if(s.hasAbilityWithAttr(wI)&&R.id===t.SPARKLING_ARIA&&i.targets.length===1)return!1;const a=this.selfTarget?A:s;return a.status&&this.effects.includes(a.status.effect)?(a.scene.queueMessage(XI(a.status.effect,b(a))),a.resetStatus(),a.updateInfo(),!0):!1}isOfEffect(A){return this.effects.includes(A)}getUserBenefitScore(A,s,R){return A.status?10:0}};T(T4,"HealStatusEffectAttr");let yA=T4;const S4=class S4 extends $t{apply(A,s,R,I){var i;return((i=A.status)==null?void 0:i.effect)===J.SLEEP?(A.addTag(Y.BYPASS_SLEEP,1,R.id,A.id),!0):!1}getUserBenefitScore(A,s,R){return A.status&&A.status.effect===J.SLEEP?200:-10}};T(S4,"BypassSleepAttr");let ao=S4;const o4=class o4 extends $t{apply(A,s,R,I){return I[0].value=!0,!0}};T(o4,"BypassBurnDamageReductionAttr");let oD=o4;const l4=class l4 extends st{constructor(A){super(),this.weatherType=A}apply(A,s,R,I){return A.scene.arena.trySetWeather(this.weatherType,!0)}getCondition(){return(A,s,R)=>!A.scene.arena.weather||A.scene.arena.weather.weatherType!==this.weatherType&&!A.scene.arena.weather.isImmutable()}};T(l4,"WeatherChangeAttr");let Ri=l4;const C4=class C4 extends st{constructor(A){super(),this.weatherType=A}apply(A,s,R,I){var i;return((i=A.scene.arena.weather)==null?void 0:i.weatherType)===this.weatherType?A.scene.arena.trySetWeather(Q.NONE,!0):!1}};T(C4,"ClearWeatherAttr");let j_=C4;const U4=class U4 extends st{constructor(A){super(),this.terrainType=A}apply(A,s,R,I){return A.scene.arena.trySetTerrain(this.terrainType,!0,!0)}getCondition(){return(A,s,R)=>!A.scene.arena.terrain||A.scene.arena.terrain.terrainType!==this.terrainType}getUserBenefitScore(A,s,R){return A.scene.arena.terrain?0:6}};T(U4,"TerrainChangeAttr");let Oi=U4;const D4=class D4 extends st{constructor(){super()}apply(A,s,R,I){return A.scene.arena.trySetTerrain(Rt.NONE,!0,!0)}};T(D4,"ClearTerrainAttr");let Fa=D4;const M4=class M4 extends $t{apply(A,s,R,I){return s.isBossImmune()?!1:(I[0].value=!0,!0)}getCondition(){return(A,s,R)=>{const I=new je(!1);return Et(rU,s,I),!I.value&&A.level>=s.level}}};T(M4,"OneHitKOAttr");let KO=M4;const u4=class u4 extends $t{constructor(A){super(!0),this.condition=A}apply(A,s,R,I){const i=I[0];return i instanceof je&&this.condition(A,R)?(i.value=!0,!0):!1}};T(u4,"InstantChargeAttr");let lD=u4;const h4=class h4 extends lD{constructor(A){super((s,R)=>{const I=s.scene.arena.weather;return xe(I==null?void 0:I.weatherType)?!1:!(I!=null&&I.isEffectSuppressed(s.scene))&&A.includes(I==null?void 0:I.weatherType)})}};T(h4,"WeatherInstantChargeAttr");let wr=h4;const c4=class c4 extends $t{apply(A,s,R,I){return!0}};T(c4,"OverrideMoveEffectAttr");let Tn=c4;const G4=class G4 extends Tn{constructor(A,s,R){super(),this.tagType=A,this.chargeAnim=s,this.chargeText=R}apply(A,s,R,I){return new Promise(i=>{I.length<2||!I[1]?new no(this.chargeAnim,R.id,A).play(A.scene,!1,()=>{I[0].value=!0,A.scene.queueMessage(this.chargeText.replace("{TARGET}",b(s)).replace("{USER}",b(A))),A.pushMoveHistory({move:R.id,targets:[s.getBattlerIndex()],result:DA.OTHER}),A.scene.arena.addTag(this.tagType,3,R.id,A.id,et.BOTH,!1,s.getBattlerIndex()),i(!0)}):A.scene.ui.showText(U.t("moveTriggers:tookMoveAttack",{pokemonName:b(A.scene.getPokemonById(s.id)??void 0),moveName:R.name}),null,()=>i(!0))})}};T(G4,"DelayedAttackAttr");let ia=G4;const dM=class dM extends Tn{constructor(){super(!0)}apply(A,s,R,I){if(A.turnData.combiningPledge)return A.scene.queueMessage(U.t("moveTriggers:combiningPledge")),!1;const i=I[0],a=A.scene.findPhase(L=>L instanceof JA&&L.pokemon.isPlayer()===A.isPlayer());if(a){const L=a.move.getMove();if(L!==R&&L.hasAttr(dM)){[A,a.pokemon].forEach(l=>l.turnData.combiningPledge=R.id),A.scene.queueMessage(U.t("moveTriggers:awaitingPledge",{userPokemonName:b(A),allyPokemonName:b(a.pokemon)}));const S=A.scene.phaseQueue.indexOf(a),o=A.scene.phaseQueue.findIndex(l=>l instanceof JA);return S!==o&&A.scene.prependToPhase(A.scene.phaseQueue.splice(S,1)[0],JA),i.value=!0,!0}}return!1}};T(dM,"AwaitCombinedPledgeAttr");let Vr=dM;const P4=class P4 extends st{constructor(A,s,R,I,i=!0,a=!1,L=2,S=!1,o=!1,l){super(R,L,a,o,S,l),this.stats=A,this.stages=s,this.condition=I,this.showMessage=i}apply(A,s,R,I){if(!super.apply(A,s,R,I)||this.condition&&!this.condition(A,s,R)||!this.selfTarget&&R.hitsSubstitute(A,s))return!1;const i=this.getMoveChance(A,s,R,this.selfTarget,!0);if(i<0||i===100||A.randSeedInt(100)<i){const a=this.getLevels(A);return A.scene.unshiftPhase(new Ft(A.scene,(this.selfTarget?A:s).getBattlerIndex(),this.selfTarget,this.stats,a,this.showMessage)),!0}return!1}getLevels(A){return this.stages}getTargetBenefitScore(A,s,R){let I=0;const i=this.getLevels(A);for(const a of this.stats){let L=i;const S=s.getStatStage(a);L>0?L=Math.min(S+L,6)-S:L=Math.max(S+L,-6)-S;let o=!1;switch(a){case B.ATK:this.selfTarget&&(o=!A.getMoveset().find(l=>l instanceof d&&l.category===0));break;case B.DEF:this.selfTarget||(o=!A.getMoveset().find(l=>l instanceof d&&l.category===0));break;case B.SPATK:this.selfTarget&&(o=!A.getMoveset().find(l=>l instanceof d&&l.category===1));break;case B.SPDEF:this.selfTarget||(o=!A.getMoveset().find(l=>l instanceof d&&l.category===1));break}o||(I+=L*4+(L>0?-2:2))}return I}};T(P4,"StatStageChangeAttr");let re=P4;const _4=class _4 extends st{constructor(){super(!1)}canApply(A,s,R,I){this.effectChanceOverride=R.chance;const i=this.getMoveChance(A,s,R,this.selfTarget);return i<0||i===100||A.randSeedInt(100)<i}apply(A,s,R,I){if(!super.apply(A,s,R,I))return!1;let i;const a=A.scene.arena.getTerrainType();if(a!==Rt.NONE)i=this.determineTerrainEffect(a);else{const L=A.scene.arena.biomeType;i=this.determineBiomeEffect(L)}return i.effectChanceOverride=100,i.apply(A,s,R,[])}determineTerrainEffect(A){let s;switch(A){case Rt.ELECTRIC:default:s=new Ze(J.PARALYSIS,!1);break;case Rt.MISTY:s=new re([B.SPATK],-1,!1);break;case Rt.GRASSY:s=new Ze(J.SLEEP,!1);break;case Rt.PSYCHIC:s=new re([B.SPD],-1,!1);break}return s}determineBiomeEffect(A){let s;switch(A){case r.PLAINS:case r.GRASS:case r.TALL_GRASS:case r.FOREST:case r.JUNGLE:case r.MEADOW:s=new Ze(J.SLEEP,!1);break;case r.SWAMP:case r.MOUNTAIN:case r.TEMPLE:case r.RUINS:s=new re([B.SPD],-1,!1);break;case r.ICE_CAVE:case r.SNOWY_FOREST:s=new Ze(J.FREEZE,!1);break;case r.VOLCANO:s=new Ze(J.BURN,!1);break;case r.FAIRY_CAVE:s=new re([B.SPATK],-1,!1);break;case r.DESERT:case r.CONSTRUCTION_SITE:case r.BEACH:case r.ISLAND:case r.BADLANDS:s=new re([B.ACC],-1,!1);break;case r.SEA:case r.LAKE:case r.SEABED:s=new re([B.ATK],-1,!1);break;case r.CAVE:case r.WASTELAND:case r.GRAVEYARD:case r.ABYSS:case r.SPACE:s=new rt(Y.FLINCHED,!1,!0);break;case r.END:s=new re([B.DEF],-1,!1);break;case r.TOWN:case r.METROPOLIS:case r.SLUM:case r.DOJO:case r.FACTORY:case r.LABORATORY:case r.POWER_PLANT:default:s=new Ze(J.PARALYSIS,!1);break}return s}};T(_4,"SecretPowerAttr");let CD=_4;const H4=class H4 extends $t{constructor(A,s,R,I,i=!0,a=!1){super(),this.stats=A,this.stages=s,this.condition=I,this.showMessage=i}applyPostVictory(A,s,R){if(this.condition&&!this.condition(A,s,R))return;new re(this.stats,this.stages,this.showMessage).apply(A,s,R)}};T(H4,"PostVictoryStatStageChangeAttr");let UD=H4;const d4=class d4 extends st{constructor(){super()}apply(A,s,R,I){const i=rO.filter(a=>s.getStatStage(a)<6);if(i.length>0){const a=[i[A.randSeedInt(i.length)]];return A.scene.unshiftPhase(new Ft(A.scene,s.getBattlerIndex(),this.selfTarget,a,2)),!0}return!1}};T(d4,"AcupressureStatStageChangeAttr");let z_=d4;const f4=class f4 extends re{constructor(){super([B.ATK,B.SPATK],1,!0)}getLevels(A){var s,R;if(!((s=A.scene.arena.weather)!=null&&s.isEffectSuppressed(A.scene))){const I=(R=A.scene.arena.weather)==null?void 0:R.weatherType;if(I===Q.SUNNY||I===Q.HARSH_SUN)return this.stages+1}return this.stages}};T(f4,"GrowthStatStageChangeAttr");let eH=f4;const B4=class B4 extends re{constructor(A,s,R,I){super(A,s,!0,null,!0),this.cutRatio=R,this.messageCallback=I}apply(A,s,R,I){return new Promise(i=>{A.damageAndUpdate(gt(A.getMaxHp()/this.cutRatio),Pt.OTHER,!1,!0),A.updateInfo().then(()=>{const a=super.apply(A,s,R,I);this.messageCallback&&this.messageCallback(A),i(a)})})}getCondition(){return(A,s,R)=>A.getHpRatio()>1/this.cutRatio&&this.stats.some(I=>A.getStatStage(I)<6)}};T(B4,"CutHpStatStageBoostAttr");let vr=B4;const g4=class g4 extends st{apply(A,s,R,I){if(!super.apply(A,s,R,I))return!1;for(const i of rO)A.setStatStage(i,s.getStatStage(i));return s.getTag(Y.CRIT_BOOST)?A.addTag(Y.CRIT_BOOST,0,R.id):A.removeTag(Y.CRIT_BOOST),s.updateInfo(),A.updateInfo(),s.scene.queueMessage(U.t("moveTriggers:copiedStatChanges",{pokemonName:b(A),targetName:b(s)})),!0}};T(g4,"CopyStatsAttr");let tH=g4;const K4=class K4 extends st{apply(A,s,R,I){if(!super.apply(A,s,R,I))return!1;for(const i of rO)s.setStatStage(i,-s.getStatStage(i));return s.updateInfo(),A.updateInfo(),s.scene.queueMessage(U.t("moveTriggers:invertStats",{pokemonName:b(s)})),!0}};T(K4,"InvertStatsAttr");let AH=K4;const F4=class F4 extends st{constructor(A){super(),this.targetAllPokemon=A}async apply(A,s,R,I){const i=[];return this.targetAllPokemon?(A.scene.getField(!0).forEach(L=>i.push(this.resetStats(L))),s.scene.queueMessage(U.t("moveTriggers:statEliminated"))):R.hitsSubstitute(A,s)||(i.push(this.resetStats(s)),s.scene.queueMessage(U.t("moveTriggers:resetStats",{pokemonName:b(s)}))),await Promise.all(i),!0}async resetStats(A){for(const s of rO)A.setStatStage(s,0);return A.updateInfo()}};T(F4,"ResetStatsAttr");let xr=F4;const m4=class m4 extends st{constructor(A){super(),this.stats=A}apply(A,s,R,I){if(super.apply(A,s,R,I)){for(const i of this.stats){const a=A.getStatStage(i);A.setStatStage(i,s.getStatStage(i)),s.setStatStage(i,a)}return s.updateInfo(),A.updateInfo(),this.stats.length===7?A.scene.queueMessage(U.t("moveTriggers:switchedStatChanges",{pokemonName:b(A)})):this.stats.length===2&&A.scene.queueMessage(U.t("moveTriggers:switchedTwoStatChanges",{pokemonName:b(A),firstStat:U.t(aE(this.stats[0])),secondStat:U.t(aE(this.stats[1]))})),!0}return!1}};T(m4,"SwapStatStagesAttr");let br=m4;const W4=class W4 extends st{apply(A,s,R,I){return new Promise(i=>{if(!super.apply(A,s,R,I))return i(!1);const a=[],L=Math.floor((s.hp+A.hp)/2);if(A.hp<L){const S=A.heal(L-A.hp);S&&A.scene.damageNumberHandler.add(A,S,Pt.HEAL)}else if(A.hp>L){const S=A.damage(A.hp-L,!0);S&&A.scene.damageNumberHandler.add(A,S)}if(a.push(A.updateInfo()),s.hp<L){const S=s.heal(L-s.hp);S&&A.scene.damageNumberHandler.add(A,S,Pt.HEAL)}else if(s.hp>L){const S=s.damage(s.hp-L,!0);S&&s.scene.damageNumberHandler.add(s,S)}return a.push(s.updateInfo()),Promise.all(a).then(()=>i(!0))})}};T(W4,"HpSplitAttr");let EH=W4;const Y4=class Y4 extends $t{apply(A,s,R,I){return!1}};T(Y4,"VariablePowerAttr");let _A=Y4;const p4=class p4 extends _A{apply(A,s,R,I){var o;const i=R.pp,a=(o=A.moveset.find(l=>(l==null?void 0:l.moveId)===R.id))==null?void 0:o.ppUsed;let L=i-a;L<0&&(L=0);const S=I[0];switch(L){case 0:S.value=200;break;case 1:S.value=80;break;case 2:S.value=60;break;case 3:S.value=50;break;default:S.value=40;break}return!0}};T(p4,"LessPPMorePowerAttr");let sH=p4;const y4=class y4 extends _A{constructor(A){super(),this.powerMultiplierFunc=A}apply(A,s,R,I){const i=I[0];return i.value*=this.powerMultiplierFunc(A,s,R),!0}};T(y4,"MovePowerMultiplierAttr");let NA=y4;const EQ=T((E,A)=>{const s=E.isPlayer()?E.scene.getParty():E.scene.getEnemyParty();for(let R=A;R<s.length;R++){const I=s[R];if(!(I.id!==E.id&&(I!=null&&I.status)&&I.status.effect!==J.NONE))return I.species.getBaseStat(B.ATK)/10+5}return 0},"beatUpFunc"),w4=class w4 extends _A{apply(A,s,R,I){const i=I[0],L=(A.isPlayer()?A.scene.getParty():A.scene.getEnemyParty()).filter(o=>{var l;return o.id===A.id||!((l=o.status)!=null&&l.effect)}).length,S=(A.turnData.hitCount-A.turnData.hitsLeft)%L;return i.value=EQ(A,S),!0}};T(w4,"BeatUpAttr");let RH=w4;const sQ=T((E,A,s)=>{let R="";return E.scene.executeWithSeedOffset(()=>{le(100)<s.chance&&(R=U.t("moveTriggers:goingAllOutForAttack",{pokemonName:b(E)}))},E.scene.currentBattle.turn<<6,E.scene.waveSeed),R},"doublePowerChanceMessageFunc"),V4=class V4 extends _A{apply(A,s,R,I){let i;if(A.scene.executeWithSeedOffset(()=>i=le(100),A.scene.currentBattle.turn<<6,A.scene.waveSeed),i<R.chance){const a=I[0];return a.value*=2,!0}return!1}};T(V4,"DoublePowerChanceAttr");let OH=V4;const v4=class v4 extends NA{constructor(A,s,R,...I){super((i,a,L)=>{var D;const S=i.getLastXMoves(A+1).slice(1);let o=0,l;for(;(((D=l=S.shift())==null?void 0:D.move)===L.id||I.length&&I.includes(l==null?void 0:l.move))&&(!s||(l==null?void 0:l.result)===DA.SUCCESS);)if(o<A-1)o++;else if(R)o=0;else break;return this.getMultiplier(o)})}};T(v4,"ConsecutiveUsePowerMultiplierAttr");let DD=v4;const x4=class x4 extends DD{getMultiplier(A){return Math.pow(2,A)}};T(x4,"ConsecutiveUseDoublePowerAttr");let tL=x4;const b4=class b4 extends DD{getMultiplier(A){return A+1}};T(b4,"ConsecutiveUseMultiBasePowerAttr");let nH=b4;const k4=class k4 extends _A{apply(A,s,R,I){const i=I[0],a=s.getWeight(),L=[10,25,50,100,200];let S=0;for(;a>=L[S]&&++S!==L.length;);return i.value=(S+1)*20,!0}};T(k4,"WeightPowerAttr");let MD=k4;const Z4=class Z4 extends _A{apply(A,s,R,I){const i=I[0],a=s.getEffectiveStat(B.SPD)/A.getEffectiveStat(B.SPD),L=[.25,1/3,.5,1,-1],S=[150,120,80,60,40];let o=0;for(;o<L.length-1&&a>L[o]&&++o!==L.length;);return i.value=S[o],!0}};T(Z4,"ElectroBallPowerAttr");let IH=Z4;const X4=class X4 extends _A{apply(A,s,R,I){const i=I[0],a=A.getEffectiveStat(B.SPD);return a<1?(i.value=1,!0):(i.value=Math.floor(Math.min(150,25*s.getEffectiveStat(B.SPD)/a+1)),!0)}};T(X4,"GyroBallPowerAttr");let iH=X4;const Q4=class Q4 extends _A{apply(A,s,R,I){const i=I[0],a=A.getHpRatio();switch(!0){case a<.0417:i.value=200;break;case a<.1042:i.value=150;break;case a<.2083:i.value=100;break;case a<.3542:i.value=80;break;case a<.6875:i.value=40;break;default:i.value=20;break}return!0}};T(Q4,"LowHpPowerAttr");let uD=Q4;const J4=class J4 extends _A{apply(A,s,R,I){const i=I[0],a=A.getWeight(),L=s.getWeight();if(!a||a===0)return!1;const S=L/a*100;switch(!0){case S<20.01:i.value=120;break;case S<25.01:i.value=100;break;case S<33.35:i.value=80;break;case S<50.01:i.value=60;break;default:i.value=40;break}return!0}};T(J4,"CompareWeightPowerAttr");let hD=J4;const $4=class $4 extends _A{apply(A,s,R,I){return I[0].value=gt(150*A.getHpRatio()),!0}};T($4,"HpPowerAttr");let kr=$4;const q4=class q4 extends _A{constructor(A){super(),this.maxBasePower=A}apply(A,s,R,I){return I[0].value=gt(this.maxBasePower*s.getHpRatio()),!0}};T(q4,"OpponentHighHpPowerAttr");let Zr=q4;const j4=class j4 extends _A{apply(A,s,R,I){return s.getLastXMoves(1),s.scene.currentBattle.turn,s.getLastXMoves(1).find(i=>i.turn===s.scene.currentBattle.turn)?!1:(I[0].value*=2,!0)}};T(j4,"FirstAttackDoublePowerAttr");let cD=j4;const z4=class z4 extends _A{apply(A,s,R,I){return A.turnData.attacksReceived.find(i=>i.damage&&i.sourceId===s.id)?(I[0].value*=2,!0):!1}};T(z4,"TurnDamagedDoublePowerAttr");let GD=z4;const RQ=T((E,A,s)=>{let R;return E.scene.executeWithSeedOffset(()=>{const I=[5,15,35,65,75,95],i=le(100);let a=0;for(;a<I.length&&!(i<I[a]);a++);R=U.t("moveTriggers:magnitudeMessage",{magnitude:a+4})},E.scene.currentBattle.turn<<6,E.scene.waveSeed),R},"magnitudeMessageFunc"),e3=class e3 extends _A{apply(A,s,R,I){const i=I[0],a=[5,15,35,65,75,95],L=[10,30,50,70,90,100,110,150];let S;A.scene.executeWithSeedOffset(()=>S=le(100),A.scene.currentBattle.turn<<6,A.scene.waveSeed);let o=0;for(;o<a.length&&!(S<a[o]);o++);return i.value=L[o],!0}};T(e3,"MagnitudePowerAttr");let aH=e3;const t3=class t3 extends _A{apply(A,s,R,I){var i,a;if(!((i=A.scene.arena.weather)!=null&&i.isEffectSuppressed(A.scene))){const L=I[0];switch(((a=A.scene.arena.weather)==null?void 0:a.weatherType)||Q.NONE){case Q.RAIN:case Q.SANDSTORM:case Q.HAIL:case Q.SNOW:case Q.HEAVY_RAIN:return L.value*=.5,!0}}return!1}};T(t3,"AntiSunlightPowerDecreaseAttr");let PD=t3;const A3=class A3 extends _A{constructor(A){super(),this.invert=!!A}apply(A,s,R,I){const i=I[0],a=Math.floor(Math.min(A instanceof Ss?A.friendship:A.species.baseFriendship,255)/2.5);return i.value=Math.max(this.invert?102-a:a,1),!0}};T(A3,"FriendshipPowerAttr");let ma=A3;const E3=class E3 extends _A{apply(A,s,R,I){return I[0].value+=Math.min(A.battleData.hitCount,6)*50,!0}};T(E3,"HitCountPowerAttr");let LH=E3;const nb=T(E=>E.getStatStages().reduce((A,s)=>s&&s>0?A+s:A,0),"countPositiveStatStages"),s3=class s3 extends _A{apply(A,s,R,I){const i=nb(A);return I[0].value+=i*20,!0}};T(s3,"PositiveStatStagePowerAttr");let _D=s3;const R3=class R3 extends _A{constructor(){super(...arguments),this.PUNISHMENT_MIN_BASE_POWER=60,this.PUNISHMENT_MAX_BASE_POWER=200}apply(A,s,R,I){const i=nb(s);return I[0].value=Math.min(this.PUNISHMENT_MAX_BASE_POWER,this.PUNISHMENT_MIN_BASE_POWER+i*20),!0}};T(R3,"PunishmentPowerAttr");let rH=R3;const O3=class O3 extends _A{apply(A,s,R,I){const i=A.turnData.hitCount===A.turnData.hitsLeft,a=le(i?100:80);return a<=40?I[0].value=40:40<a&&a<=70?I[0].value=80:70<a&&a<=80?I[0].value=120:80<a&&a<=100&&(A.stopMultiHit(),s.scene.unshiftPhase(new CE(s.scene,s.getBattlerIndex(),gt(s.getMaxHp()/4),U.t("moveTriggers:regainedHealth",{pokemonName:b(s)}),!0))),!0}};T(O3,"PresentPowerAttr");let NH=O3;const n3=class n3 extends _A{apply(A,s,R,I){return A.species.speciesId===e.GRENINJA&&A.hasAbility(O.BATTLE_BOND)&&A.formIndex===2?(I[0].value=20,!0):!1}};T(n3,"WaterShurikenPowerAttr");let TH=n3;const I3=class I3 extends _A{constructor(A){super(),this.multiplier=0,this.multiplier=A}apply(A,s,R,I){const i=A.getTag(na);if(i&&i.stockpiledCount>0){const a=I[0];return a.value=this.multiplier*i.stockpiledCount,!0}return!1}};T(I3,"SpitUpPowerAttr");let SH=I3;const i3=class i3 extends Rs{apply(A,s,R,I){const i=A.getTag(na);if(i&&i.stockpiledCount>0){const a=i.stockpiledCount;let L;if(a===1?L=.25:a===2?L=.5:L=1,L)return this.addHealPhase(A,L),!0}return!1}};T(i3,"SwallowHealAttr");let oH=i3;const Yx=T(E=>{const A=E.getTag(na);return!!A&&A.stockpiledCount>0},"hasStockpileStacksCondition"),a3=class a3 extends _A{constructor(A){super(),this.maxHits=A}apply(A,s,R,I){const i=A.turnData.hitCount-Math.max(A.turnData.hitsLeft,0),a=I[0];return a.value=R.power*(1+i%this.maxHits),!0}};T(a3,"MultiHitPowerIncrementAttr");let HD=a3;const L3=class L3 extends _A{constructor(A){super(),this.move=A}apply(A,s,R,I){const i=I[0],a=A.getOpponent(0),L=[];if(a!=null&&a.turnData.acted&&L.push(a),A.scene.currentBattle.double){const S=A.getAlly(),o=a==null?void 0:a.getAlly();S&&S.turnData.acted&&L.push(S),o&&o.turnData.acted&&L.push(o)}L.sort((S,o)=>o.turnData.order-S.turnData.order);for(const S of L){const[o]=S.getLastXMoves(1);if((o==null?void 0:o.result)!==DA.FAIL){if((o==null?void 0:o.result)===DA.SUCCESS&&(o==null?void 0:o.move)===this.move)return i.value*=2,!0;break}}return!1}};T(L3,"LastMoveDoublePowerAttr");let dD=L3;const r3=class r3 extends _A{apply(A,s,R,I){const i=I[0];if(!(i instanceof $e))return!1;const a=A.turnData.combiningPledge;return a&&a!==R.id?(i.value*=150/80,!0):!1}};T(r3,"CombinedPledgePowerAttr");let Xr=r3;const N3=class N3 extends $t{apply(A,s,R,I){const i=I[0];if(!(i instanceof $e))return!1;const a=A.turnData.combiningPledge;return a&&a!==R.id?(i.value=1.5,!0):!1}};T(N3,"CombinedPledgeStabBoostAttr");let AL=N3;const T3=class T3 extends $t{constructor(){super()}apply(A,s,R,I){return!1}};T(T3,"VariableAtkAttr");let aa=T3;const S3=class S3 extends aa{constructor(){super()}apply(A,s,R,I){return I[0].value=s.getEffectiveStat(B.ATK,s),!0}};T(S3,"TargetAtkUserAtkAttr");let lH=S3;const o3=class o3 extends aa{constructor(){super()}apply(A,s,R,I){return I[0].value=A.getEffectiveStat(B.DEF,s),!0}};T(o3,"DefAtkAttr");let CH=o3;const l3=class l3 extends $t{constructor(){super()}apply(A,s,R,I){return!1}};T(l3,"VariableDefAttr");let fD=l3;const C3=class C3 extends fD{constructor(){super()}apply(A,s,R,I){return I[0].value=s.getEffectiveStat(B.DEF,A),!0}};T(C3,"DefDefAttr");let Qr=C3;const U3=class U3 extends $t{apply(A,s,R,I){return!1}};T(U3,"VariableAccuracyAttr");let vn=U3;const D3=class D3 extends vn{apply(A,s,R,I){var i,a;if(!((i=A.scene.arena.weather)!=null&&i.isEffectSuppressed(A.scene))){const L=I[0];switch(((a=A.scene.arena.weather)==null?void 0:a.weatherType)||Q.NONE){case Q.SUNNY:case Q.HARSH_SUN:return L.value=50,!0;case Q.RAIN:case Q.HEAVY_RAIN:return L.value=-1,!0}}return!1}};T(D3,"ThunderAccuracyAttr");let BD=D3;const M3=class M3 extends vn{apply(A,s,R,I){var i,a;if(!((i=A.scene.arena.weather)!=null&&i.isEffectSuppressed(A.scene))){const L=I[0];switch(((a=A.scene.arena.weather)==null?void 0:a.weatherType)||Q.NONE){case Q.RAIN:case Q.HEAVY_RAIN:return L.value=-1,!0}}return!1}};T(M3,"StormAccuracyAttr");let Jr=M3;const u3=class u3 extends vn{apply(A,s,R,I){if(s.getTag(Y.MINIMIZED)){const i=I[0];return i.value=-1,!0}return!1}};T(u3,"AlwaysHitMinimizeAttr");let ZO=u3;const h3=class h3 extends vn{apply(A,s,R,I){if(A.isOfType(n.POISON)){const i=I[0];return i.value=-1,!0}return!1}};T(h3,"ToxicAccuracyAttr");let gD=h3;const c3=class c3 extends vn{apply(A,s,R,I){var i,a;if(!((i=A.scene.arena.weather)!=null&&i.isEffectSuppressed(A.scene))){const L=I[0],S=((a=A.scene.arena.weather)==null?void 0:a.weatherType)||Q.NONE;if(S===Q.HAIL||S===Q.SNOW)return L.value=-1,!0}return!1}};T(c3,"BlizzardAccuracyAttr");let UH=c3;const G3=class G3 extends $t{apply(A,s,R,I){return!1}};T(G3,"VariableMoveCategoryAttr");let kI=G3;const P3=class P3 extends kI{apply(A,s,R,I){const i=I[0];return A.getEffectiveStat(B.ATK,s,R)>A.getEffectiveStat(B.SPATK,s,R)?(i.value=0,!0):!1}};T(P3,"PhotonGeyserCategoryAttr");let KD=P3;const _3=class _3 extends kI{apply(A,s,R,I){const i=I[0];return A.isTerastallized()&&A.getEffectiveStat(B.ATK,s,R)>A.getEffectiveStat(B.SPATK,s,R)?(i.value=0,!0):!1}};T(_3,"TeraMoveCategoryAttr");let FD=_3;const H3=class H3 extends _A{apply(A,s,R,I){const i=I[0];return A.isTerastallized()&&A.getTeraType()===n.STELLAR?(i.value=100,!0):!1}};T(H3,"TeraBlastPowerAttr");let DH=H3;const d3=class d3 extends kI{apply(A,s,R,I){const i=I[0];return A.getAlly()===s?(i.value=2,!0):!1}};T(d3,"StatusCategoryOnAllyAttr");let mD=d3;const f3=class f3 extends kI{apply(A,s,R,I){const i=I[0],a=s.getBaseDamage(A,R,0,!0,!0),L=s.getBaseDamage(A,R,1,!0,!0);return a>L||a===L&&A.randSeedInt(2)===0?(i.value=0,!0):!1}};T(f3,"ShellSideArmCategoryAttr");let MH=f3;const B3=class B3 extends $t{apply(A,s,R,I){return!1}};T(B3,"VariableMoveTypeAttr");let jE=B3;const g3=class g3 extends jE{apply(A,s,R,I){if(A.isTerastallized()&&(A.hasFusionSpecies(e.TERAPAGOS)||A.species.speciesId===e.TERAPAGOS)){const i=I[0];return i.value=n.STELLAR,!0}return!1}};T(g3,"TeraStarstormTypeAttr");let uH=g3;const K3=class K3 extends jE{apply(A,s,R,I){var a,L,S;const i=I[0];if(!(i instanceof $e))return!1;if([A.species.speciesId,(a=A.fusionSpecies)==null?void 0:a.speciesId].includes(e.ARCEUS)||[A.species.speciesId,(L=A.fusionSpecies)==null?void 0:L.speciesId].includes(e.SILVALLY)){const o=A.species.speciesId===e.ARCEUS||A.species.speciesId===e.SILVALLY?A.formIndex:(S=A.fusionSpecies)==null?void 0:S.formIndex;return i.value=n[n[o]],!0}return!1}};T(K3,"FormChangeItemTypeAttr");let WD=K3;const F3=class F3 extends jE{apply(A,s,R,I){var a,L;const i=I[0];if(!(i instanceof $e))return!1;if([A.species.speciesId,(a=A.fusionSpecies)==null?void 0:a.speciesId].includes(e.GENESECT)){switch(A.species.speciesId===e.GENESECT?A.formIndex:(L=A.fusionSpecies)==null?void 0:L.formIndex){case 1:i.value=n.ELECTRIC;break;case 2:i.value=n.FIRE;break;case 3:i.value=n.ICE;break;case 4:i.value=n.WATER;break;default:i.value=n.NORMAL;break}return!0}return!1}};T(F3,"TechnoBlastTypeAttr");let hH=F3;const m3=class m3 extends jE{apply(A,s,R,I){var a,L;const i=I[0];if(!(i instanceof $e))return!1;if([A.species.speciesId,(a=A.fusionSpecies)==null?void 0:a.speciesId].includes(e.MORPEKO)){switch(A.species.speciesId===e.MORPEKO?A.formIndex:(L=A.fusionSpecies)==null?void 0:L.formIndex){case 1:i.value=n.DARK;break;default:i.value=n.ELECTRIC;break}return!0}return!1}};T(m3,"AuraWheelTypeAttr");let cH=m3;const W3=class W3 extends jE{apply(A,s,R,I){var a,L;const i=I[0];if(!(i instanceof $e))return!1;if([A.species.speciesId,(a=A.fusionSpecies)==null?void 0:a.speciesId].includes(e.PALDEA_TAUROS)){switch(A.species.speciesId===e.PALDEA_TAUROS?A.formIndex:(L=A.fusionSpecies)==null?void 0:L.formIndex){case 1:i.value=n.FIRE;break;case 2:i.value=n.WATER;break;default:i.value=n.FIGHTING;break}return!0}return!1}};T(W3,"RagingBullTypeAttr");let GH=W3;const Y3=class Y3 extends jE{apply(A,s,R,I){var a,L;const i=I[0];if(!(i instanceof $e))return!1;if([A.species.speciesId,(a=A.fusionSpecies)==null?void 0:a.speciesId].includes(e.OGERPON)){switch(A.species.speciesId===e.OGERPON?A.formIndex:(L=A.fusionSpecies)==null?void 0:L.formIndex){case 1:case 5:i.value=n.WATER;break;case 2:case 6:i.value=n.FIRE;break;case 3:case 7:i.value=n.ROCK;break;case 4:default:i.value=n.GRASS;break}return!0}return!1}};T(Y3,"IvyCudgelTypeAttr");let PH=Y3;const p3=class p3 extends jE{apply(A,s,R,I){var a,L;const i=I[0];if(!(i instanceof $e))return!1;if(!((a=A.scene.arena.weather)!=null&&a.isEffectSuppressed(A.scene))){switch((L=A.scene.arena.weather)==null?void 0:L.weatherType){case Q.SUNNY:case Q.HARSH_SUN:i.value=n.FIRE;break;case Q.RAIN:case Q.HEAVY_RAIN:i.value=n.WATER;break;case Q.SANDSTORM:i.value=n.ROCK;break;case Q.HAIL:case Q.SNOW:i.value=n.ICE;break;default:return!1}return!0}return!1}};T(p3,"WeatherBallTypeAttr");let _H=p3;const y3=class y3 extends jE{apply(A,s,R,I){const i=I[0];if(!(i instanceof $e)||!A.isGrounded())return!1;switch(A.scene.arena.getTerrainType()){case Rt.MISTY:i.value=n.FAIRY;break;case Rt.ELECTRIC:i.value=n.ELECTRIC;break;case Rt.GRASSY:i.value=n.GRASS;break;case Rt.PSYCHIC:i.value=n.PSYCHIC;break;default:return!1}return!0}};T(y3,"TerrainPulseTypeAttr");let HH=y3;const w3=class w3 extends jE{apply(A,s,R,I){const i=I[0];if(!(i instanceof $e))return!1;const a=Math.floor(((A.ivs[B.HP]&1)+(A.ivs[B.ATK]&1)*2+(A.ivs[B.DEF]&1)*4+(A.ivs[B.SPD]&1)*8+(A.ivs[B.SPATK]&1)*16+(A.ivs[B.SPDEF]&1)*32)*15/63);return i.value=[n.FIGHTING,n.FLYING,n.POISON,n.GROUND,n.ROCK,n.BUG,n.GHOST,n.STEEL,n.FIRE,n.WATER,n.GRASS,n.ELECTRIC,n.PSYCHIC,n.ICE,n.DRAGON,n.DARK][a],!0}};T(w3,"HiddenPowerTypeAttr");let dH=w3;const V3=class V3 extends jE{apply(A,s,R,I){const i=I[0];return i instanceof $e&&A.isTerastallized()?(i.value=A.getTeraType(),!0):!1}};T(V3,"TeraBlastTypeAttr");let fH=V3;const v3=class v3 extends jE{apply(A,s,R,I){const i=I[0];if(!(i instanceof $e))return!1;const a=A.getTypes(!0);if(a.includes(n.STELLAR)){const L=A.getTypes();return i.value=L[0],!0}else return a.length>0?(i.value=a[0],!0):!1}};T(v3,"MatchUserTypeAttr");let BH=v3;const x3=class x3 extends jE{apply(A,s,R,I){const i=I[0];if(!(i instanceof $e))return!1;const a=A.turnData.combiningPledge;if(!a)return!1;switch(R.id){case t.FIRE_PLEDGE:return a===t.WATER_PLEDGE?(i.value=n.WATER,!0):!1;case t.WATER_PLEDGE:return a===t.GRASS_PLEDGE?(i.value=n.GRASS,!0):!1;case t.GRASS_PLEDGE:return a===t.FIRE_PLEDGE?(i.value=n.FIRE,!0):!1;default:return!1}}};T(x3,"CombinedPledgeTypeAttr");let $r=x3;const b3=class b3 extends $t{apply(A,s,R,I){return!1}};T(b3,"VariableMoveTypeMultiplierAttr");let ZI=b3;const k3=class k3 extends ZI{apply(A,s,R,I){if(!s.getTag(Y.IGNORE_FLYING)){const i=I[0];return s.isOfType(n.FLYING)&&(i.value=1),!0}return!1}};T(k3,"NeutralDamageAgainstFlyingTypeMultiplierAttr");let YD=k3;const Z3=class Z3 extends ZI{apply(A,s,R,I){const i=I[0];if(s.isOfType(n.WATER)){const a=new $e(tl(R.type,n.WATER));if(Is(A.scene.gameMode,JE.TYPE_EFFECTIVENESS,a),a.value!==0)return i.value*=2/a.value,!0}return!1}};T(Z3,"WaterSuperEffectTypeMultiplierAttr");let gH=Z3;const X3=class X3 extends ZI{apply(A,s,R,I){const i=I[0];return s.isOfType(n.ICE)?(i.value=0,!0):!1}};T(X3,"IceNoEffectTypeAttr");let KH=X3;const Q3=class Q3 extends ZI{apply(A,s,R,I){const i=I[0];return i.value*=s.getAttackTypeEffectiveness(n.FLYING,A),!0}};T(Q3,"FlyingTypeMultiplierAttr");let FH=Q3;const J3=class J3 extends vn{apply(A,s,R,I){const i=I[0];return A.level<s.level?i.value=0:i.value=Math.min(Math.max(30+100*(1-s.level/A.level),0),100),!0}};T(J3,"OneHitKOAccuracyAttr");let dI=J3;const $3=class $3 extends dI{apply(A,s,R,I){const i=I[0];if(A.level<s.level)i.value=0;else{const a=A.isOfType(n.ICE)?30:20;i.value=Math.min(Math.max(a+100*(1-s.level/A.level),0),100)}return!0}};T($3,"SheerColdAccuracyAttr");let mH=$3;const q3=class q3 extends $t{constructor(A){super(),this.missEffectFunc=A}apply(A,s,R,I){return this.missEffectFunc(A,R),!0}};T(q3,"MissEffectAttr");let qR=q3;const j3=class j3 extends $t{constructor(A){super(),this.noEffectFunc=A}apply(A,s,R,I){return this.noEffectFunc(A,R),!0}};T(j3,"NoEffectAttr");let uO=j3;const jn=T((E,A)=>{const s=new je(!1);return Et(rE,E,s),s.value?!1:(E.damageAndUpdate(gt(E.getMaxHp()/2),Pt.OTHER,!1,!0),E.scene.queueMessage(U.t("moveTriggers:keptGoingAndCrashed",{pokemonName:b(E)})),E.turnData.damageTaken+=gt(E.getMaxHp()/2),!0)},"crashDamageFunc"),z3=class z3 extends $t{};T(z3,"TypelessAttr");let Lo=z3;const e2=class e2 extends $t{constructor(A=!1){super(),this.abilitiesOnly=A}};T(e2,"BypassRedirectAttr");let ui=e2;const t2=class t2 extends st{constructor(){super(!0,2,!1,!0)}canApply(A,s,R,I){return!(this.selfTarget?A:s).isFainted()}apply(A,s,R,I){if(!super.apply(A,s,R,I))return!1;if(!A.getTag(Y.FRENZY)&&!A.getMoveQueue().length){const i=A.randSeedIntRange(1,2);new Array(i).fill(null).map(()=>A.getMoveQueue().push({move:R.id,targets:[s.getBattlerIndex()],ignorePP:!0})),A.addTag(Y.FRENZY,i,R.id,A.id)}else eA(rt,A,s,R,I),A.lapseTag(Y.FRENZY);return!0}};T(t2,"FrenzyAttr");let Wa=t2;const zn=T((E,A)=>{for(;E.getMoveQueue().length&&E.getMoveQueue()[0].move===A.id;)E.getMoveQueue().shift();return E.removeTag(Y.FRENZY),!0},"frenzyMissFunc"),A2=class A2 extends st{constructor(A){super(!0),this.tagType=A}apply(A,s,R,I){return super.apply(A,s,R,I)?A.addTag(this.tagType,1,R.id,A.id):!1}};T(A2,"SemiInvulnerableAttr");let un=A2;const E2=class E2 extends st{constructor(A,s=!1,R=!1,I=0,i,a=!1,L=!1){super(s,1,!1,a),this.tagType=A,this.turnCountMin=I,this.turnCountMax=i!==void 0?i:I,this.failOnOverlap=!!R,this.cancelOnFail=L}canApply(A,s,R,I){var i;return!(!super.canApply(A,s,R,I)||this.cancelOnFail===!0&&((i=A.getLastXMoves(1)[0])==null?void 0:i.result)===DA.FAIL)}apply(A,s,R,I){if(!super.apply(A,s,R,I))return!1;const i=this.getMoveChance(A,s,R,this.selfTarget,!0);return i<0||i===100||A.randSeedInt(100)<i?(this.selfTarget?A:s).addTag(this.tagType,A.randSeedIntRange(this.turnCountMin,this.turnCountMax),R.id,A.id):!1}getCondition(){return this.failOnOverlap?(A,s,R)=>!(this.selfTarget?A:s).getTag(this.tagType):null}getTagTargetBenefitScore(A,s,R){switch(this.tagType){case Y.RECHARGING:case Y.PERISH_SONG:return-16;case Y.FLINCHED:case Y.CONFUSED:case Y.INFATUATED:case Y.NIGHTMARE:case Y.DROWSY:case Y.DISABLED:case Y.HEAL_BLOCK:case Y.RECEIVE_DOUBLE_DAMAGE:return-5;case Y.SEEDED:case Y.SALT_CURED:case Y.CURSED:case Y.FRENZY:case Y.TRAPPED:case Y.BIND:case Y.WRAP:case Y.FIRE_SPIN:case Y.WHIRLPOOL:case Y.CLAMP:case Y.SAND_TOMB:case Y.MAGMA_STORM:case Y.SNAP_TRAP:case Y.THUNDER_CAGE:case Y.INFESTATION:return-3;case Y.ENCORE:return-2;case Y.MINIMIZED:case Y.ALWAYS_GET_HIT:return 0;case Y.INGRAIN:case Y.IGNORE_ACCURACY:case Y.AQUA_RING:return 3;case Y.PROTECTED:case Y.FLYING:case Y.CRIT_BOOST:case Y.ALWAYS_CRIT:return 5}}getTargetBenefitScore(A,s,R){let I=this.getMoveChance(A,s,R,this.selfTarget,!1);return I<0&&(I=100),Math.floor(this.getTagTargetBenefitScore(A,s,R)*(I/100))}};T(E2,"AddBattlerTagAttr");let rt=E2;const s2=class s2 extends rt{constructor(){super(Y.SEEDED)}apply(A,s,R,I){return!R.hitsSubstitute(A,s)&&super.apply(A,s,R,I)}};T(s2,"LeechSeedAttr");let pD=s2;const R2=class R2 extends st{constructor(){super(!0)}apply(A,s,R,I){return super.apply(A,s,R,I)&&A.hasAbility(O.GULP_MISSILE)&&A.species.speciesId===e.CRAMORANT?(A.getHpRatio()>=.5?A.addTag(Y.GULP_MISSILE_ARROKUDA,0,R.id):A.addTag(Y.GULP_MISSILE_PIKACHU,0,R.id),!0):!1}getUserBenefitScore(A,s,R){return A.hasAbility(O.GULP_MISSILE)&&A.species.speciesId===e.CRAMORANT&&!A.getTag(kU)?10:0}};T(R2,"GulpMissileTagAttr");let yD=R2;const O2=class O2 extends rt{constructor(){super(Y.TRAPPED)}apply(A,s,R,I){if(!super.canApply(A,s,R,I)||A.getTag(GR)||s.getTag(GR))return!1;const i=this.getMoveChance(A,s,R,this.selfTarget);return i<0||i===100||A.randSeedInt(100)<i?s.addTag(Y.TRAPPED,1,R.id,A.id)&&A.addTag(Y.TRAPPED,1,R.id,s.id):!1}};T(O2,"JawLockAttr");let WH=O2;const n2=class n2 extends st{apply(A,s,R,I){if(A.getTypes(!0).includes(n.GHOST)){if(s.getTag(Y.CURSED))return A.scene.queueMessage(U.t("battle:attackFailed")),!1;const i=Math.max(1,Math.floor(A.getMaxHp()/2));return A.damageAndUpdate(i,Pt.OTHER,!1,!0,!0),A.scene.queueMessage(U.t("battlerTags:cursedOnAdd",{pokemonNameWithAffix:b(A),pokemonName:b(s)})),s.addTag(Y.CURSED,0,R.id,A.id),!0}else return A.scene.unshiftPhase(new Ft(A.scene,A.getBattlerIndex(),!0,[B.ATK,B.DEF],1)),A.scene.unshiftPhase(new Ft(A.scene,A.getBattlerIndex(),!0,[B.SPD],-1)),!0}};T(n2,"CurseAttr");let YH=n2;const I2=class I2 extends st{constructor(A,s=!1){super(s),this.tagTypes=A}apply(A,s,R,I){if(!super.apply(A,s,R,I))return!1;for(const i of this.tagTypes)(this.selfTarget?A:s).lapseTag(i);return!0}};T(I2,"LapseBattlerTagAttr");let pH=I2;const i2=class i2 extends st{constructor(A,s=!1){super(s),this.tagTypes=A}apply(A,s,R,I){if(!super.apply(A,s,R,I))return!1;for(const i of this.tagTypes)(this.selfTarget?A:s).removeTag(i);return!0}};T(i2,"RemoveBattlerTagAttr");let hn=i2;const a2=class a2 extends rt{constructor(){super(Y.FLINCHED,!1)}apply(A,s,R,I){return R.hitsSubstitute(A,s)?!1:super.apply(A,s,R,I)}};T(a2,"FlinchAttr");let qt=a2;const L2=class L2 extends rt{constructor(A){super(Y.CONFUSED,A,!1,2,5)}apply(A,s,R,I){return!this.selfTarget&&s.isSafeguarded(A)?(R.category===2&&A.scene.queueMessage(U.t("moveTriggers:safeguard",{targetName:b(s)})),!1):R.hitsSubstitute(A,s)?!1:super.apply(A,s,R,I)}};T(L2,"ConfuseAttr");let BE=L2;const r2=class r2 extends rt{constructor(){super(Y.RECHARGING,!0,!1,1,1,!0,!0)}};T(r2,"RechargeAttr");let BR=r2;const N2=class N2 extends rt{constructor(A){super(A,!1,!1,4,5)}};T(N2,"TrapAttr");let JR=N2;const fM=class fM extends rt{constructor(A=Y.PROTECTED){super(A,!0)}getCondition(){return(A,s,R)=>{let I=0;const i=A.getLastXMoves();let a;for(;i.length&&(a=i.shift(),!(!He[a==null?void 0:a.move].hasAttr(fM)||(a==null?void 0:a.result)!==DA.SUCCESS));)I++;return I?!A.randSeedInt(Math.pow(3,I)):!0}}};T(fM,"ProtectAttr");let gR=fM;const T2=class T2 extends rt{constructor(){super(Y.IGNORE_ACCURACY,!0,!1,2)}apply(A,s,R,I){return super.apply(A,s,R,I)?(A.scene.queueMessage(U.t("moveTriggers:tookAimAtTarget",{pokemonName:b(A),targetName:b(s)})),!0):!1}};T(T2,"IgnoreAccuracyAttr");let wD=T2;const S2=class S2 extends rt{constructor(){super(Y.PERISH_SONG,!1,!0,4)}apply(A,s,R,I){return super.apply(A,s,R,I)?(A.scene.queueMessage(U.t("moveTriggers:faintCountdown",{pokemonName:b(s),turnCount:this.turnCountMin-1})),!0):!1}};T(S2,"FaintCountdownAttr");let yH=S2;const o2=class o2 extends st{constructor(){super(!0)}apply(A,s,R,I){return super.apply(A,s,R,I)?(A.scene.getField(!0).forEach(i=>i.findAndRemoveTags(a=>a.tagType===Y.SUBSTITUTE)),!0):!1}};T(o2,"RemoveAllSubstitutesAttr");let wH=o2;const l2=class l2 extends $t{constructor(A,s=!1){super(),this.tagType=A,this.doubleDamage=!!s}getTargetBenefitScore(A,s,R){return s.getTag(this.tagType)?this.doubleDamage?10:5:0}};T(l2,"HitsTagAttr");let lR=l2;const C2=class C2 extends lR{constructor(A){super(A,!0)}};T(C2,"HitsTagForDoubleDamageAttr");let Js=C2;const U2=class U2 extends st{constructor(A,s,R=!1,I=!1){super(!0,1),this.tagType=A,this.turnCount=s,this.failOnOverlap=R,this.selfSideTarget=I}apply(A,s,R,I){var i;return super.apply(A,s,R,I)&&(R.chance<0||R.chance===100||A.randSeedInt(100)<R.chance)&&((i=A.getLastXMoves(1)[0])==null?void 0:i.result)===DA.SUCCESS?(A.scene.arena.addTag(this.tagType,this.turnCount,R.id,A.id,(this.selfSideTarget?A:s).isPlayer()?et.PLAYER:et.ENEMY),!0):!1}getCondition(){return this.failOnOverlap?(A,s,R)=>!A.scene.arena.getTagOnSide(this.tagType,s.isPlayer()?et.PLAYER:et.ENEMY):null}};T(U2,"AddArenaTagAttr");let XA=U2;const D2=class D2 extends st{constructor(A,s){super(!0,1),this.tagTypes=A,this.selfSideTarget=s}apply(A,s,R,I){if(!super.apply(A,s,R,I))return!1;const i=(this.selfSideTarget?A:s).isPlayer()?et.PLAYER:et.ENEMY;for(const a of this.tagTypes)A.scene.arena.removeTagOnSide(a,i);return!0}};T(D2,"RemoveArenaTagsAttr");let VH=D2;const M2=class M2 extends XA{getCondition(){return(A,s,R)=>{const I=(this.selfSideTarget?A:s).isPlayer()?et.PLAYER:et.ENEMY,i=A.scene.arena.getTagOnSide(this.tagType,I);return i?i.layers<i.maxLayers:!0}}};T(M2,"AddArenaTrapTagAttr");let Ya=M2;const u2=class u2 extends XA{apply(A,s,R,I){var S;const i=this.getMoveChance(A,s,R,this.selfTarget,!0),a=(this.selfSideTarget?A:s).isPlayer()?et.PLAYER:et.ENEMY,L=A.scene.arena.getTagOnSide(this.tagType,a);return(i<0||i===100||A.randSeedInt(100)<i)&&((S=A.getLastXMoves(1)[0])==null?void 0:S.result)===DA.SUCCESS?(A.scene.arena.addTag(this.tagType,0,R.id,A.id,a),L?L.layers<L.maxLayers:!0):!1}};T(u2,"AddArenaTrapTagHitAttr");let VD=u2;const h2=class h2 extends st{constructor(A=!1){super(!0,0),this.targetBothSides=A}apply(A,s,R,I){return super.apply(A,s,R,I)?(this.targetBothSides?(A.scene.arena.removeTagOnSide(Me.SPIKES,et.PLAYER),A.scene.arena.removeTagOnSide(Me.TOXIC_SPIKES,et.PLAYER),A.scene.arena.removeTagOnSide(Me.STEALTH_ROCK,et.PLAYER),A.scene.arena.removeTagOnSide(Me.STICKY_WEB,et.PLAYER),A.scene.arena.removeTagOnSide(Me.SPIKES,et.ENEMY),A.scene.arena.removeTagOnSide(Me.TOXIC_SPIKES,et.ENEMY),A.scene.arena.removeTagOnSide(Me.STEALTH_ROCK,et.ENEMY),A.scene.arena.removeTagOnSide(Me.STICKY_WEB,et.ENEMY)):(A.scene.arena.removeTagOnSide(Me.SPIKES,s.isPlayer()?et.ENEMY:et.PLAYER),A.scene.arena.removeTagOnSide(Me.TOXIC_SPIKES,s.isPlayer()?et.ENEMY:et.PLAYER),A.scene.arena.removeTagOnSide(Me.STEALTH_ROCK,s.isPlayer()?et.ENEMY:et.PLAYER),A.scene.arena.removeTagOnSide(Me.STICKY_WEB,s.isPlayer()?et.ENEMY:et.PLAYER)),!0):!1}};T(h2,"RemoveArenaTrapAttr");let pa=h2;const c2=class c2 extends st{constructor(A=!1){super(!0,0),this.targetBothSides=A}apply(A,s,R,I){return super.apply(A,s,R,I)?(this.targetBothSides?(A.scene.arena.removeTagOnSide(Me.REFLECT,et.PLAYER),A.scene.arena.removeTagOnSide(Me.LIGHT_SCREEN,et.PLAYER),A.scene.arena.removeTagOnSide(Me.AURORA_VEIL,et.PLAYER),A.scene.arena.removeTagOnSide(Me.REFLECT,et.ENEMY),A.scene.arena.removeTagOnSide(Me.LIGHT_SCREEN,et.ENEMY),A.scene.arena.removeTagOnSide(Me.AURORA_VEIL,et.ENEMY)):(A.scene.arena.removeTagOnSide(Me.REFLECT,s.isPlayer()?et.PLAYER:et.ENEMY),A.scene.arena.removeTagOnSide(Me.LIGHT_SCREEN,s.isPlayer()?et.PLAYER:et.ENEMY),A.scene.arena.removeTagOnSide(Me.AURORA_VEIL,s.isPlayer()?et.PLAYER:et.ENEMY)),!0):!1}};T(c2,"RemoveScreensAttr");let ya=c2;const G2=class G2 extends st{constructor(A){super(!0,1),this.SwapTags=A}apply(A,s,R,I){if(!super.apply(A,s,R,I))return!1;const i=A.scene.arena.findTagsOnSide(L=>this.SwapTags.includes(L.tagType),et.PLAYER),a=A.scene.arena.findTagsOnSide(L=>this.SwapTags.includes(L.tagType),et.ENEMY);if(i)for(const L of i)A.scene.arena.removeTagOnSide(L.tagType,et.PLAYER,!0),A.scene.arena.addTag(L.tagType,L.turnCount,L.sourceMove,L.sourceId,et.ENEMY,!0);if(a)for(const L of a)A.scene.arena.removeTagOnSide(L.tagType,et.ENEMY,!0),A.scene.arena.addTag(L.tagType,L.turnCount,L.sourceMove,L.sourceId,et.PLAYER,!0);return A.scene.queueMessage(U.t("moveTriggers:swapArenaTags",{pokemonName:b(A)})),!0}};T(G2,"SwapArenaTagsAttr");let vH=G2;const P2=class P2 extends XA{constructor(A,s,R=!1){super(A,4,!1,R),this.requiredPledge=s}apply(A,s,R,I){var i;return((i=A.getLastXMoves(1)[0])==null?void 0:i.result)!==DA.SUCCESS?!1:A.turnData.combiningPledge===this.requiredPledge?super.apply(A,s,R,I):!1}};T(P2,"AddPledgeEffectAttr");let LI=P2;const _2=class _2 extends st{constructor(A){super(!0)}apply(A,s,R,I){return new Promise(i=>{if(A instanceof Ss&&A.scene.getParty().findIndex(a=>a.isFainted())>-1)A.revivalBlessing().then(()=>{i(!0)});else if(A instanceof es&&A.hasTrainer()&&A.scene.getEnemyParty().findIndex(a=>a.isFainted()&&!a.isBoss())>-1){const a=A.scene.getEnemyParty().filter(o=>o.isFainted()&&!o.isBoss()),L=a[A.randSeedInt(a.length)],S=A.scene.getEnemyParty().findIndex(o=>L.id===o.id);if(L.resetStatus(),L.heal(Math.min(gt(.5*L.getMaxHp()),L.getMaxHp())),A.scene.queueMessage(U.t("moveTriggers:revivalBlessing",{pokemonName:b(L)}),0,!0),A.scene.currentBattle.double&&A.scene.getEnemyParty().length>1){const o=A.getAlly();S<=1?A.scene.unshiftPhase(new EO(A.scene,xA.SWITCH,L.getFieldIndex(),S,!1,!1)):o.isFainted()&&A.scene.unshiftPhase(new EO(A.scene,xA.SWITCH,o.getFieldIndex(),S,!1,!1))}i(!0)}else A.scene.queueMessage(U.t("battle:attackFailed")),i(!1)})}getUserBenefitScore(A,s,R){return A.hasTrainer()&&A.scene.getEnemyParty().findIndex(I=>I.isFainted()&&!I.isBoss())>-1?20:-20}};T(_2,"RevivalBlessingAttr");let xH=_2;const H2=class H2 extends st{constructor(A=!1,s=xA.SWITCH){super(!1,1,!1,!0),this.selfSwitch=A,this.switchType=s}isBatonPass(){return this.switchType===xA.BATON_PASS}apply(A,s,R,I){var a;if(!this.getSwitchOutCondition()(A,s,R))return!1;const i=this.selfSwitch?A:s;if(i instanceof Ss)return i.scene.getParty().filter(L=>L.isAllowedInBattle()&&!L.isOnField()).length<1?!1:i.hp>0?(i.leaveField(this.switchType===xA.SWITCH),A.scene.prependToPhase(new pi(A.scene,this.switchType,i.getFieldIndex(),!0,!0),vi),!0):!1;if(A.scene.currentBattle.battleType!==Nt.WILD){if(i.scene.getEnemyParty().filter(L=>L.isAllowedInBattle()&&!L.isOnField()).length<1)return!1;i.hp>0&&(i.leaveField(this.switchType===xA.SWITCH),A.scene.prependToPhase(new EO(A.scene,this.switchType,i.getFieldIndex(),A.scene.currentBattle.trainer?A.scene.currentBattle.trainer.getNextSummonIndex(i.trainerSlot):0,!1,!1),vi))}else{if(A.scene.currentBattle.waveIndex%10===0)return!1;if(i.hp>0&&(i.leaveField(!1),A.scene.queueMessage(U.t("moveTriggers:fled",{pokemonName:b(i)}),null,!0,500),i.scene.currentBattle.double)){const L=i.getAlly();i.scene.redirectPokemonMoves(i,L)}(a=i.getAlly())!=null&&a.isActive(!0)||(A.scene.clearEnemyHeldItemModifiers(),i.hp&&(A.scene.pushPhase(new yi(A.scene)),A.scene.pushPhase(new rL(A.scene))))}return!0}getCondition(){return(A,s,R)=>R.category!==2||this.getSwitchOutCondition()(A,s,R)}getFailedText(A,s,R,I){const i=new je(!1);return Et(wL,s,i),i.value?U.t("moveTriggers:cannotBeSwitchedOut",{pokemonName:b(s)}):null}getSwitchOutCondition(){return(A,s,R)=>{var L;const I=this.selfSwitch?A:s,i=I instanceof Ss;if(!this.selfSwitch){if(R.hitsSubstitute(A,s)||!i&&A.scene.currentBattle.isBattleMysteryEncounter()&&!((L=A.scene.currentBattle.mysteryEncounter)!=null&&L.fleeAllowed))return!1;const S=new je(!1);return Et(wL,s,S),!S.value}if(!i&&A.scene.currentBattle.battleType===Nt.WILD&&(this.isBatonPass()||A.scene.currentBattle.waveIndex%10===0))return!1;const a=i?A.scene.getParty():A.scene.getEnemyParty();return!i&&!A.scene.currentBattle.battleType||a.filter(S=>S.isAllowedInBattle()&&(i||S.trainerSlot===I.trainerSlot)).length>A.scene.currentBattle.getBattlerCount()}}getUserBenefitScore(A,s,R){if(!A.scene.getEnemyParty().find(i=>i.isActive()&&!i.isOnField()))return-20;let I=this.selfSwitch?Math.floor((1-A.getHpRatio())*20):super.getUserBenefitScore(A,s,R);if(this.selfSwitch&&this.isBatonPass()){const i=A.getStatStages().reduce((a,L)=>L+=a,0);I=I/2+Phaser.Tweens.Builders.GetEaseFunction("Sine.easeOut")(Math.min(Math.abs(i),10)/10)*(i>=0?10:-10)}return I}};T(H2,"ForceSwitchOutAttr");let Ws=H2;const d2=class d2 extends Ws{apply(A,s,R,I){return A.scene.arena.trySetWeather(Q.SNOW,!0),super.apply(A,s,R,I)}getCondition(){return(A,s,R)=>{var I;return((I=A.scene.arena.weather)==null?void 0:I.weatherType)!==Q.SNOW||super.getSwitchOutCondition()(A,s,R)}}};T(d2,"ChillyReceptionAttr");let bH=d2;const f2=class f2 extends st{constructor(A,s){super(!0,3),this.removedType=A,this.messageCallback=s}apply(A,s,R,I){if(!super.apply(A,s,R,I)||A.isTerastallized()&&A.getTeraType()===this.removedType)return!1;const a=A.getTypes(!0).filter(L=>L!==this.removedType);return A.summonData.types=a,A.updateInfo(),this.messageCallback&&this.messageCallback(A),!0}};T(f2,"RemoveTypeAttr");let vD=f2;const B2=class B2 extends st{constructor(){super(!1)}apply(A,s,R,I){return super.apply(A,s,R,I)?(A.summonData.types=s.getTypes(!0),A.updateInfo(),A.scene.queueMessage(U.t("moveTriggers:copyType",{pokemonName:b(A),targetPokemonName:b(s)})),!0):!1}getCondition(){return(A,s,R)=>s.getTypes()[0]!==n.UNKNOWN}};T(B2,"CopyTypeAttr");let kH=B2;const g2=class g2 extends st{constructor(){super(!0)}apply(A,s,R,I){if(!super.apply(A,s,R,I))return!1;const i=A.scene.arena.getTypeForBiome();return A.summonData.types=[i],A.updateInfo(),A.scene.queueMessage(U.t("moveTriggers:transformedIntoType",{pokemonName:b(A),typeName:U.t(`pokemonInfo:Type.${n[i]}`)})),!0}};T(g2,"CopyBiomeTypeAttr");let ZH=g2;const K2=class K2 extends st{constructor(A){super(!1,2),this.type=A}apply(A,s,R,I){return s.summonData.types=[this.type],s.updateInfo(),A.scene.queueMessage(U.t("moveTriggers:transformedIntoType",{pokemonName:b(s),typeName:U.t(`pokemonInfo:Type.${n[this.type]}`)})),!0}getCondition(){return(A,s,R)=>!s.isTerastallized()&&!s.hasAbility(O.MULTITYPE)&&!s.hasAbility(O.RKS_SYSTEM)&&!(s.getTypes().length===1&&s.getTypes()[0]===this.type)}};T(K2,"ChangeTypeAttr");let xD=K2;const F2=class F2 extends st{constructor(A){super(!1,2),this.type=A}apply(A,s,R,I){const i=s.getTypes().slice(0,2).filter(a=>a!==n.UNKNOWN);return this.type!==n.UNKNOWN&&i.push(this.type),s.summonData.types=i,s.updateInfo(),A.scene.queueMessage(U.t("moveTriggers:addType",{typeName:U.t(`pokemonInfo:Type.${n[this.type]}`),pokemonName:b(s)})),!0}getCondition(){return(A,s,R)=>!s.isTerastallized()&&!s.getTypes().includes(this.type)}};T(F2,"AddTypeAttr");let bD=F2;const m2=class m2 extends st{constructor(){super(!0)}apply(A,s,R,I){var a;if(!super.apply(A,s,R,I))return!1;const i=(a=s.getMoveset()[0])==null?void 0:a.getMove().type;return A.summonData.types=[i],A.scene.queueMessage(U.t("battle:transformedIntoType",{pokemonName:b(A),type:U.t(`pokemonInfo:Type.${n[i]}`)})),!0}};T(m2,"FirstMoveTypeAttr");let XH=m2;const W2=class W2 extends Tn{constructor(A){super(),this.enemyMoveset=A}apply(A,s,R,I){const i=(this.enemyMoveset?s:A).getMoveset(),a=i.filter(L=>!(L!=null&&L.getMove().hasFlag(4)));if(a.length){const L=a[A.randSeedInt(a.length)],S=i.findIndex(M=>(M==null?void 0:M.moveId)===(L==null?void 0:L.moveId)),o=xn(A,L==null?void 0:L.moveId);if(!o.targets.length)return!1;let l;switch(!0){case(o.multiple||o.targets.length===1):{l=o.targets;break}case o.targets.indexOf(s.getBattlerIndex())>-1:{l=[s.getBattlerIndex()];break}default:{o.targets.splice(o.targets.indexOf(A.getAlly().getBattlerIndex())),l=[o.targets[A.randSeedInt(o.targets.length)]];break}}const D=l;return A.getMoveQueue().push({move:L==null?void 0:L.moveId,targets:D,ignorePP:!0}),A.scene.unshiftPhase(new JA(A.scene,A,D,i[S],!0)),!0}return!1}};T(W2,"RandomMovesetMoveAttr");let ro=W2;const Y2=class Y2 extends Tn{apply(A,s,R,I){return new Promise(i=>{const a=IE(t).filter(l=>!He[l].hasFlag(4)&&!He[l].name.endsWith(" (N)")),L=a[A.randSeedInt(a.length)],S=xn(A,L);if(!S.targets.length){i(!1);return}const o=S.multiple||S.targets.length===1?S.targets:S.targets.indexOf(s.getBattlerIndex())>-1?[s.getBattlerIndex()]:[S.targets[A.randSeedInt(S.targets.length)]];A.getMoveQueue().push({move:L,targets:o,ignorePP:!0}),A.scene.unshiftPhase(new JA(A.scene,A,o,new ke(L,0,0,!0),!0)),jL(A.scene,L).then(()=>{zL(A.scene,[L],!0).then(()=>i(!0))})})}};T(Y2,"RandomMoveAttr");let kD=Y2;const p2=class p2 extends Tn{apply(A,s,R,I){return new Promise(i=>{let a;switch(A.scene.arena.getTerrainType()){case Rt.NONE:switch(A.scene.arena.biomeType){case r.TOWN:a=t.ROUND;break;case r.METROPOLIS:a=t.TRI_ATTACK;break;case r.SLUM:a=t.SLUDGE_BOMB;break;case r.PLAINS:a=t.SILVER_WIND;break;case r.GRASS:a=t.GRASS_KNOT;break;case r.TALL_GRASS:a=t.POLLEN_PUFF;break;case r.MEADOW:a=t.GIGA_DRAIN;break;case r.FOREST:a=t.BUG_BUZZ;break;case r.JUNGLE:a=t.LEAF_STORM;break;case r.SEA:a=t.HYDRO_PUMP;break;case r.SWAMP:a=t.MUD_BOMB;break;case r.BEACH:a=t.SCALD;break;case r.LAKE:a=t.BUBBLE_BEAM;break;case r.SEABED:a=t.BRINE;break;case r.ISLAND:a=t.LEAF_TORNADO;break;case r.MOUNTAIN:a=t.AIR_SLASH;break;case r.BADLANDS:a=t.EARTH_POWER;break;case r.DESERT:a=t.SCORCHING_SANDS;break;case r.WASTELAND:a=t.DRAGON_PULSE;break;case r.CONSTRUCTION_SITE:a=t.STEEL_BEAM;break;case r.CAVE:a=t.POWER_GEM;break;case r.ICE_CAVE:a=t.ICE_BEAM;break;case r.SNOWY_FOREST:a=t.FROST_BREATH;break;case r.VOLCANO:a=t.LAVA_PLUME;break;case r.GRAVEYARD:a=t.SHADOW_BALL;break;case r.RUINS:a=t.ANCIENT_POWER;break;case r.TEMPLE:a=t.EXTRASENSORY;break;case r.DOJO:a=t.FOCUS_BLAST;break;case r.FAIRY_CAVE:a=t.ALLURING_VOICE;break;case r.ABYSS:a=t.OMINOUS_WIND;break;case r.SPACE:a=t.DRACO_METEOR;break;case r.FACTORY:a=t.FLASH_CANNON;break;case r.LABORATORY:a=t.ZAP_CANNON;break;case r.POWER_PLANT:a=t.CHARGE_BEAM;break;case r.END:a=t.ETERNABEAM;break}break;case Rt.MISTY:a=t.MOONBLAST;break;case Rt.ELECTRIC:a=t.THUNDERBOLT;break;case Rt.GRASSY:a=t.ENERGY_BALL;break;case Rt.PSYCHIC:a=t.PSYCHIC;break;default:a=t.TRI_ATTACK;break}A.getMoveQueue().push({move:a,targets:[s.getBattlerIndex()],ignorePP:!0}),A.scene.unshiftPhase(new JA(A.scene,A,[s.getBattlerIndex()],new ke(a,0,0,!0),!0)),jL(A.scene,a).then(()=>{zL(A.scene,[a],!0).then(()=>i(!0))})})}};T(p2,"NaturePowerAttr");let ZD=p2;const OQ=T((E,A,s)=>{const R=E.scene.currentBattle.lastMove;return!(!R||He[R].isChargingMove())},"lastMoveCopiableCondition"),y2=class y2 extends Tn{apply(A,s,R,I){const i=A.scene.currentBattle.lastMove,a=xn(A,i);if(!a.targets.length)return!1;const L=a.multiple||a.targets.length===1?a.targets:a.targets.indexOf(s.getBattlerIndex())>-1?[s.getBattlerIndex()]:[a.targets[A.randSeedInt(a.targets.length)]];return A.getMoveQueue().push({move:i,targets:L,ignorePP:!0}),A.scene.unshiftPhase(new JA(A.scene,A,L,new ke(i,0,0,!0),!0)),!0}getCondition(){return OQ}};T(y2,"CopyMoveAttr");let QL=y2;const w2=class w2 extends st{constructor(A){super(),this.reduction=A}apply(A,s,R,I){const i=s.getLastXMoves().find(()=>!0),a=s.getMoveset().find(o=>(o==null?void 0:o.moveId)===(i==null?void 0:i.move)),L=a==null?void 0:a.ppUsed;a.ppUsed=Math.min((a==null?void 0:a.ppUsed)+this.reduction,a==null?void 0:a.getMovePp());const S=U.t("battle:ppReduced",{targetName:b(s),moveName:a==null?void 0:a.getName(),reduction:(a==null?void 0:a.ppUsed)-L});return A.scene.eventTarget.dispatchEvent(new rT(s==null?void 0:s.id,a==null?void 0:a.getMove(),a==null?void 0:a.ppUsed)),A.scene.queueMessage(S),!0}getCondition(){return(A,s,R)=>{const I=s.getLastXMoves().find(()=>!0);if(I){const i=s.getMoveset().find(a=>(a==null?void 0:a.moveId)===I.move);return!!(i!=null&&i.getPpRatio())}return!1}}getTargetBenefitScore(A,s,R){const I=s.getLastXMoves().find(()=>!0);if(I){const i=s.getMoveset().find(a=>(a==null?void 0:a.moveId)===I.move);if(i){const a=i.getMovePp(),L=a-i.ppUsed,S=-(8-Math.ceil(Math.min(a,30)/5));return L<4?S/4*L:S}}return 0}};T(w2,"ReducePpMoveAttr");let XD=w2;const V2=class V2 extends XD{constructor(A){super(A)}apply(A,s,R,I){const i=s.getLastXMoves().find(()=>!0);if(i){const a=s.getMoveset().find(L=>(L==null?void 0:L.moveId)===i.move);a!=null&&a.getPpRatio()&&super.apply(A,s,R,I)}return!0}getCondition(){return(A,s,R)=>!0}};T(V2,"AttackReducePpMoveAttr");let QH=V2;const Ib=T((E,A,s)=>{const R=A.getMoveHistory().filter(i=>!i.virtual);if(!R.length)return!1;const I=R[0];return!(!I.move||He[I.move].isChargingMove()&&I.result===DA.OTHER)},"targetMoveCopiableCondition"),v2=class v2 extends Tn{apply(A,s,R,I){const i=s.getMoveHistory().filter(S=>!S.virtual);if(!i.length)return!1;const a=He[i[0].move],L=A.getMoveset().findIndex(S=>(S==null?void 0:S.moveId)===R.id);return L===-1?!1:(A.summonData.moveset=A.getMoveset().slice(0),A.summonData.moveset[L]=new ke(a.id,0,0),A.scene.queueMessage(U.t("moveTriggers:copiedMove",{pokemonName:b(A),moveName:a.name})),!0)}getCondition(){return Ib}};T(v2,"MovesetCopyMoveAttr");let JH=v2;const x2=class x2 extends st{constructor(){super(!0)}apply(A,s,R,I){if(!super.apply(A,s,R,I))return!1;const i=s.getMoveHistory().filter(S=>!S.virtual).at(-1);if(!i)return!1;const a=He[i.move],L=A.getMoveset().findIndex(S=>(S==null?void 0:S.moveId)===R.id);return L===-1?!1:(A.setMove(L,a.id),A.scene.queueMessage(U.t("moveTriggers:sketchedMove",{pokemonName:b(A),moveName:a.name})),!0)}getCondition(){return(A,s,R)=>{if(!Ib(A,s))return!1;const I=s.getMoveHistory().filter(a=>!a.virtual).at(-1);return!(!I||[t.CHATTER,t.MIRROR_MOVE,t.SLEEP_TALK,t.STRUGGLE,t.SKETCH,t.REVIVAL_BLESSING,t.TERA_STARSTORM,t.BREAKNECK_BLITZ__PHYSICAL,t.BREAKNECK_BLITZ__SPECIAL].includes(I.move)||A.getMoveset().find(a=>(a==null?void 0:a.moveId)===I.move))}}};T(x2,"SketchAttr");let $H=x2;const b2=class b2 extends st{constructor(A,s){super(s,2),this.ability=A}apply(A,s,R,I){if(!super.apply(A,s,R,I))return!1;const i=this.selfTarget?A:s;return i.summonData.ability=this.ability,A.scene.triggerPokemonFormChange(i,Pn),A.scene.queueMessage(U.t("moveTriggers:acquiredAbility",{pokemonName:b(this.selfTarget?A:s),abilityName:jA[this.ability].name})),!0}getCondition(){return(A,s,R)=>!(this.selfTarget?A:s).getAbility().hasAttr(qA)&&(this.selfTarget?A:s).getAbility().id!==this.ability}};T(b2,"AbilityChangeAttr");let QD=b2;const k2=class k2 extends st{constructor(A=!1){super(!1,2),this.copyToPartner=A}apply(A,s,R,I){var i;return super.apply(A,s,R,I)?(A.summonData.ability=s.getAbility().id,A.scene.queueMessage(U.t("moveTriggers:copiedTargetAbility",{pokemonName:b(A),targetName:b(s),abilityName:jA[s.getAbility().id].name})),this.copyToPartner&&((i=A.scene.currentBattle)!=null&&i.double)&&A.getAlly().hp&&(A.getAlly().summonData.ability=s.getAbility().id,A.getAlly().scene.queueMessage(U.t("moveTriggers:copiedTargetAbility",{pokemonName:b(A.getAlly()),targetName:b(s),abilityName:jA[s.getAbility().id].name}))),!0):!1}getCondition(){return(A,s,R)=>{var i;let I=!s.getAbility().hasAttr(Vt)&&!A.getAbility().hasAttr(qA);return this.copyToPartner&&((i=A.scene.currentBattle)!=null&&i.double)?I=I&&(!A.getAlly().hp||!A.getAlly().getAbility().hasAttr(qA)):I=I&&A.getAbility().id!==s.getAbility().id,I}}};T(k2,"AbilityCopyAttr");let JD=k2;const Z2=class Z2 extends st{constructor(){super(!1,2)}apply(A,s,R,I){return super.apply(A,s,R,I)?(s.summonData.ability=A.getAbility().id,A.scene.queueMessage(U.t("moveTriggers:acquiredAbility",{pokemonName:b(s),abilityName:jA[A.getAbility().id].name})),!0):!1}getCondition(){return(A,s,R)=>!A.getAbility().hasAttr(Vt)&&!s.getAbility().hasAttr(qA)&&A.getAbility().id!==s.getAbility().id}};T(Z2,"AbilityGiveAttr");let qH=Z2;const X2=class X2 extends st{apply(A,s,R,I){if(!super.apply(A,s,R,I))return!1;const i=A.getAbility().id;return A.summonData.ability=s.getAbility().id,s.summonData.ability=i,A.scene.queueMessage(U.t("moveTriggers:swappedAbilitiesWithTarget",{pokemonName:b(A)})),A.scene.arena.triggerWeatherBasedFormChangesToNormal(),A.scene.arena.triggerWeatherBasedFormChanges(),!0}getCondition(){return(A,s,R)=>!A.getAbility().hasAttr(nA)&&!s.getAbility().hasAttr(nA)}};T(X2,"SwitchAbilitiesAttr");let jH=X2;const Q2=class Q2 extends st{apply(A,s,R,I){return super.apply(A,s,R,I)?(s.summonData.abilitySuppressed=!0,s.scene.arena.triggerWeatherBasedFormChangesToNormal(),s.scene.queueMessage(U.t("moveTriggers:suppressAbilities",{pokemonName:b(s)})),!0):!1}getCondition(){return(A,s,R)=>!s.getAbility().hasAttr(qA)&&!s.summonData.abilitySuppressed}};T(Q2,"SuppressAbilitiesAttr");let $D=Q2;const J2=class J2 extends st{apply(A,s,R,I){if(!super.apply(A,s,R,I))return!1;if(s.turnData.acted){const i=new $D;i.getCondition()(A,s,R)&&i.apply(A,s,R,I)}return!0}};T(J2,"SuppressAbilitiesIfActedAttr");let zH=J2;const $2=class $2 extends st{async apply(A,s,R,I){if(!super.apply(A,s,R,I))return!1;const i=[];A.summonData.speciesForm=s.getSpeciesForm(),A.summonData.fusionSpeciesForm=s.getFusionSpeciesForm(),A.summonData.ability=s.getAbility().id,A.summonData.gender=s.getGender(),A.summonData.fusionGender=s.getFusionGender(),A.removeTag(Y.POWER_TRICK);for(const a of Kn)A.setStat(a,s.getStat(a,!1),!1);for(const a of rO)A.setStatStage(a,s.getStatStage(a));return A.summonData.moveset=s.getMoveset().map(a=>a?new ke(a.moveId,0,0,!1,Math.min(a.getMove().pp,5)):(console.warn(`Transform: somehow iterating over a ${a} value when copying moveset!`),new ke(t.NONE))),A.summonData.types=s.getTypes(),i.push(A.updateInfo()),A.scene.queueMessage(U.t("moveTriggers:transformedIntoTarget",{pokemonName:b(A),targetName:b(s)})),i.push(A.loadAssets(!1).then(()=>{A.playAnim(),A.updateInfo()})),await Promise.all(i),!0}};T($2,"TransformAttr");let e1=$2;const q2=class q2 extends st{constructor(A){super(),this.stat=A}apply(A,s,R,I){if(super.apply(A,s,R,I)){const i=A.getStat(this.stat,!1);return A.setStat(this.stat,s.getStat(this.stat,!1),!1),s.setStat(this.stat,i,!1),A.scene.queueMessage(U.t("moveTriggers:switchedStat",{pokemonName:b(A),stat:U.t(aE(this.stat))})),!0}return!1}};T(q2,"SwapStatAttr");let t1=q2;const j2=class j2 extends st{constructor(A,s){super(),this.statToSwitch=A,this.statToSwitchWith=s}apply(A,s,R,I){if(!super.apply(A,s,R,I))return!1;const i=A.getStat(this.statToSwitch,!1),a=A.getStat(this.statToSwitchWith,!1);return A.setStat(this.statToSwitch,a,!1),A.setStat(this.statToSwitchWith,i,!1),A.scene.queueMessage(U.t("moveTriggers:shiftedStats",{pokemonName:b(A),statToSwitch:U.t(aE(this.statToSwitch)),statToSwitchWith:U.t(aE(this.statToSwitchWith))})),!0}getUserBenefitScore(A,s,R){return A.getStat(this.statToSwitchWith,!1)>A.getStat(this.statToSwitch,!1)?10:0}};T(j2,"ShiftStatAttr");let A1=j2;const z2=class z2 extends st{constructor(A,s){super(),this.stats=A,this.msgKey=s}apply(A,s,R,I){if(super.apply(A,s,R,I)){for(const i of this.stats){const a=Math.floor((A.getStat(i,!1)+s.getStat(i,!1))/2);A.setStat(i,a,!1),s.setStat(i,a,!1)}return A.scene.queueMessage(U.t(this.msgKey,{pokemonName:b(A)})),!0}return!1}};T(z2,"AverageStatsAttr");let qD=z2;const eV=class eV extends $t{getUserBenefitScore(A,s,R){const I=A.getLastXMoves(4);for(let i=0;i<I.length;i++)if(I[i].move===R.id)return(4-(i+1))*-10;return 0}};T(eV,"DiscourageFrequentUseAttr");let E1=eV;const tV=class tV extends st{constructor(){super(!0,2,!0)}apply(A,s,R){return A.scene.currentBattle.moneyScattered+=A.scene.getWaveMoneyAmount(.2),A.scene.queueMessage(U.t("moveTriggers:coinsScatteredEverywhere")),!0}};T(tV,"MoneyAttr");let jD=tV;const AV=class AV extends st{constructor(){super(!0,0)}apply(A,s,R,I){return A.scene.queueMessage(`${U.t("moveTriggers:tryingToTakeFoeDown",{pokemonName:b(A)})}`),A.addTag(Y.DESTINY_BOND,void 0,R.id,A.id),!0}};T(AV,"DestinyBondAttr");let s1=AV;const EV=class EV extends rt{constructor(A){super(A,!1,!1,2,5)}apply(A,s,R,I){return s.turnData.statStagesIncreased&&super.apply(A,s,R,I),!0}};T(EV,"AddBattlerTagIfBoostedAttr");let R1=EV;const sV=class sV extends st{constructor(A){super(!0,2),this.effect=A}apply(A,s,R,I){return s.turnData.statStagesIncreased&&s.trySetStatus(this.effect,!0,A),!0}};T(sV,"StatusIfBoostedAttr");let O1=sV;const RV=class RV extends $t{getCondition(){return(A,s,R)=>{const I=new Set,i=A.getMoveset().map(a=>a==null?void 0:a.moveId);return A.getMoveHistory().map(a=>{a.move!==R.id&&i.find(L=>L===a.move)&&I.add(a.move)}),I.size>=i.length-1}}};T(RV,"LastResortAttr");let n1=RV;const OV=class OV extends $t{getCondition(){return(A,s,R)=>{var a,L;const I=s.getHeldItems().filter(S=>S.isTransferable);if(I.length===0)return!1;const i=((L=(a=I[0])==null?void 0:a.type)==null?void 0:L.name)??"item";return s.scene.queueMessage(U.t("moveTriggers:attackedByItem",{pokemonName:b(s),itemName:i})),!0}}};T(OV,"AttackedByItemAttr");let I1=OV;const nV=class nV extends $t{constructor(A){super(),this.targetChangeFunc=A}apply(A,s,R,I){const i=I[0];return i.value=this.targetChangeFunc(A,s,R),!0}};T(nV,"VariableTargetAttr");let La=nV;const IV=class IV extends st{apply(A,s,R,I){A.scene.queueMessage(U.t("moveTriggers:afterYou",{targetName:b(s)}));const i=s.scene.findPhase(a=>a.pokemon===s);return i&&s.scene.tryRemovePhase(a=>a.pokemon===s)&&s.scene.prependToPhase(new JA(s.scene,s,[...i.targets],i.move),JA),!0}};T(IV,"AfterYouAttr");let i1=IV;const eI=T((E,A,s)=>!E.scene.arena.getTag(Me.GRAVITY),"failOnGravityCondition"),I0=T((E,A,s)=>!A.isBossImmune(),"failOnBossCondition"),nQ=T((E,A,s)=>E.scene.currentBattle.double,"failIfSingleBattle"),xo=T((E,A,s)=>{const R=new je(!1);return E.scene.getField(!0).map(I=>Et(WS,I,R)),R.value&&E.scene.queueMessage(U.t("moveTriggers:cannotUseMove",{pokemonName:b(E),moveName:s.name})),!R.value},"failIfDampCondition"),px=T((E,A,s)=>{var R;return((R=E.status)==null?void 0:R.effect)===J.SLEEP||E.hasAbility(O.COMATOSE)},"userSleptOrComatoseCondition"),i0=T((E,A,s)=>{var R;return((R=A.status)==null?void 0:R.effect)===J.SLEEP||A.hasAbility(O.COMATOSE)},"targetSleptOrComatoseCondition"),iR=T((E,A,s)=>E.scene.phaseQueue.find(R=>R instanceof JA)!==void 0,"failIfLastCondition");function ib(E,A,s,R,I){return new Promise(i=>{const a=[],L=R.attrs.filter(S=>E(S));for(const S of L){const o=S.apply(A,s,R,I);o instanceof Promise&&a.push(o)}Promise.allSettled(a).then(()=>i())})}T(ib,"applyMoveAttrsInternal");function IQ(E,A,s,R,I){return new Promise(i=>{const a=[],L=R.chargeAttrs.filter(S=>E(S));for(const S of L){const o=S.apply(A,s,R,I);o instanceof Promise&&a.push(o)}Promise.allSettled(a).then(()=>i())})}T(IQ,"applyMoveChargeAttrsInternal");function eA(E,A,s,R,...I){return ib(i=>i instanceof E,A,s,R,I)}T(eA,"applyMoveAttrs");function ar(E,A,s,R,...I){return ib(E,A,s,R,I)}T(ar,"applyFilteredMoveAttrs");function yx(E,A,s,R,...I){return IQ(i=>i instanceof E,A,s,R,I)}T(yx,"applyMoveChargeAttrs");const iV=class iV{constructor(A){this.func=A}apply(A,s,R){return this.func(A,s,R)}getUserBenefitScore(A,s,R){return 0}};T(iV,"MoveCondition");let EL=iV;const aV=class aV extends EL{constructor(){super((A,s,R)=>{var I;return((I=A.battleSummonData)==null?void 0:I.waveTurnCount)===1})}getUserBenefitScore(A,s,R){return this.apply(A,s,R)?10:-20}};T(aV,"FirstMoveCondition");let qr=aV;const LV=class LV extends ZI{apply(A,s,R,I){const i=I[0];return A.getTypes().some(a=>s.getTypes().includes(a))?!1:(i.value=0,!0)}};T(LV,"hitsSameTypeAttr");let a1=LV;const rV=class rV extends st{constructor(){super(!0)}apply(A,s,R,I){if(!super.apply(A,s,R,I))return!1;const[i]=s.getLastXMoves(1);if(!i)return!1;const a=He[i.move];if(a.type===n.STELLAR||a.type===n.UNKNOWN)return!1;const L=A.getTypes(),S=this.getTypeResistances(A.scene.gameMode,a.type).filter(l=>!L.includes(l));if(!S.length)return!1;const o=S[A.randSeedInt(S.length)];return A.summonData.types=[o],A.scene.queueMessage(U.t("battle:transformedIntoType",{pokemonName:b(A),type:Bn(n[o])})),A.updateInfo(),!0}getTypeResistances(A,s){const R=[];for(let I=0;I<Object.keys(n).length;I++){const i=new $e(1);i.value=tl(s,I),Is(A,JE.TYPE_EFFECTIVENESS,i),i.value<1&&R.push(I)}return R}getCondition(){return(A,s,R)=>s.getLastXMoves().length!==0}};T(rV,"ResistLastMoveTypeAttr");let L1=rV;const NV=class NV extends rt{constructor(A){super(A,!1,!0)}apply(A,s,R,I){return super.apply(A,s,R,I)?(A.scene.queueMessage(U.t("moveTriggers:exposedMove",{pokemonName:b(A),targetPokemonName:b(s)})),!0):!1}};T(NV,"ExposedMoveAttr");let jr=NV;const iQ=T((E,A,s)=>!E.getTypes().includes(n.UNKNOWN),"unknownTypeCondition");function xn(E,A){const s=new $e(0);E.getOpponents().forEach(L=>eA(La,E,L,He[A],s));const R=He[A].hasAttr(La)?s.value:A?He[A].moveTarget:A===void 0?5:[],I=E.getOpponents();let i=[],a=!1;switch(R){case 0:case 18:i=[E];break;case 3:case 1:case 4:case 2:i=I.concat([E.getAlly()]),a=R===4||R===2;break;case 5:case 6:case 8:case 16:i=I,a=R!==5;break;case 7:i=[I[E.randSeedInt(I.length)]];break;case 9:return{targets:[-1],multiple:!1};case 10:case 11:i=[E.getAlly()];break;case 12:case 13:case 15:i=[E,E.getAlly()],a=R!==12;break;case 14:case 17:i=[E,E.getAlly()].concat(I),a=!0;break;case 19:i=E.getTypes(!0).includes(n.GHOST)?I.concat([E.getAlly()]):[E];break}return{targets:i.filter(L=>L==null?void 0:L.isActive(!0)).map(L=>L.getBattlerIndex()).filter(L=>L!==void 0),multiple:a}}T(xn,"getMoveTargets");const He=[new pe(t.NONE,n.NORMAL,2,-1,-1,0,1)],ab=[];function aQ(){He.push(new d(t.POUND,n.NORMAL,0,40,100,35,-1,0,1),new d(t.KARATE_CHOP,n.FIGHTING,0,50,100,25,-1,0,1).attr(pA),new d(t.DOUBLE_SLAP,n.NORMAL,0,15,85,10,-1,0,1).attr(jt),new d(t.COMET_PUNCH,n.NORMAL,0,18,85,15,-1,0,1).attr(jt).punchingMove(),new d(t.MEGA_PUNCH,n.NORMAL,0,80,85,20,-1,0,1).punchingMove(),new d(t.PAY_DAY,n.NORMAL,0,40,100,20,-1,0,1).attr(jD).makesContact(!1),new d(t.FIRE_PUNCH,n.FIRE,0,75,100,15,10,0,1).attr(Ze,J.BURN).punchingMove(),new d(t.ICE_PUNCH,n.ICE,0,75,100,15,10,0,1).attr(Ze,J.FREEZE).punchingMove(),new d(t.THUNDER_PUNCH,n.ELECTRIC,0,75,100,15,10,0,1).attr(Ze,J.PARALYSIS).punchingMove(),new d(t.SCRATCH,n.NORMAL,0,40,100,35,-1,0,1),new d(t.VISE_GRIP,n.NORMAL,0,55,100,30,-1,0,1),new d(t.GUILLOTINE,n.NORMAL,0,200,30,5,-1,0,1).attr(KO).attr(dI),new Es(t.RAZOR_WIND,n.NORMAL,1,80,100,10,-1,0,1).chargeText(U.t("moveTriggers:whippedUpAWhirlwind",{pokemonName:"{USER}"})).attr(pA).windMove().ignoresVirtual().target(6),new pe(t.SWORDS_DANCE,n.NORMAL,-1,20,-1,0,1).attr(re,[B.ATK],2,!0).danceMove(),new d(t.CUT,n.NORMAL,0,50,95,30,-1,0,1).slicingMove(),new d(t.GUST,n.FLYING,1,40,100,35,-1,0,1).attr(Js,Y.FLYING).windMove(),new d(t.WING_ATTACK,n.FLYING,0,60,100,35,-1,0,1),new Se(t.WHIRLWIND,n.NORMAL,-1,20,-1,-6,1).attr(Ws).ignoresSubstitute().hidesTarget().windMove().partial(),new Es(t.FLY,n.FLYING,0,90,95,15,-1,0,1).chargeText(U.t("moveTriggers:flewUpHigh",{pokemonName:"{USER}"})).chargeAttr(un,Y.FLYING).condition(eI).ignoresVirtual(),new d(t.BIND,n.NORMAL,0,15,85,20,-1,0,1).attr(JR,Y.BIND),new d(t.SLAM,n.NORMAL,0,80,75,20,-1,0,1),new d(t.VINE_WHIP,n.GRASS,0,45,100,25,-1,0,1),new d(t.STOMP,n.NORMAL,0,65,100,20,30,0,1).attr(ZO).attr(Js,Y.MINIMIZED).attr(qt),new d(t.DOUBLE_KICK,n.FIGHTING,0,30,100,30,-1,0,1).attr(jt,0),new d(t.MEGA_KICK,n.NORMAL,0,120,75,5,-1,0,1),new d(t.JUMP_KICK,n.FIGHTING,0,100,95,10,-1,0,1).attr(qR,jn).attr(uO,jn).condition(eI).recklessMove(),new d(t.ROLLING_KICK,n.FIGHTING,0,60,85,15,30,0,1).attr(qt),new Se(t.SAND_ATTACK,n.GROUND,100,15,-1,0,1).attr(re,[B.ACC],-1),new d(t.HEADBUTT,n.NORMAL,0,70,100,15,30,0,1).attr(qt),new d(t.HORN_ATTACK,n.NORMAL,0,65,100,25,-1,0,1),new d(t.FURY_ATTACK,n.NORMAL,0,15,85,20,-1,0,1).attr(jt),new d(t.HORN_DRILL,n.NORMAL,0,200,30,5,-1,0,1).attr(KO).attr(dI),new d(t.TACKLE,n.NORMAL,0,40,100,35,-1,0,1),new d(t.BODY_SLAM,n.NORMAL,0,85,100,15,30,0,1).attr(ZO).attr(Js,Y.MINIMIZED).attr(Ze,J.PARALYSIS),new d(t.WRAP,n.NORMAL,0,15,90,20,-1,0,1).attr(JR,Y.WRAP),new d(t.TAKE_DOWN,n.NORMAL,0,90,85,20,-1,0,1).attr(ms).recklessMove(),new d(t.THRASH,n.NORMAL,0,120,100,10,-1,0,1).attr(Wa).attr(qR,zn).attr(uO,zn).target(7),new d(t.DOUBLE_EDGE,n.NORMAL,0,120,100,15,-1,0,1).attr(ms,!1,.33).recklessMove(),new Se(t.TAIL_WHIP,n.NORMAL,100,30,-1,0,1).attr(re,[B.DEF],-1).target(6),new d(t.POISON_STING,n.POISON,0,15,100,35,30,0,1).attr(Ze,J.POISON).makesContact(!1),new d(t.TWINEEDLE,n.BUG,0,25,100,20,20,0,1).attr(jt,0).attr(Ze,J.POISON).makesContact(!1),new d(t.PIN_MISSILE,n.BUG,0,25,95,20,-1,0,1).attr(jt).makesContact(!1),new Se(t.LEER,n.NORMAL,100,30,-1,0,1).attr(re,[B.DEF],-1).target(6),new d(t.BITE,n.DARK,0,60,100,25,30,0,1).attr(qt).bitingMove(),new Se(t.GROWL,n.NORMAL,100,40,-1,0,1).attr(re,[B.ATK],-1).soundBased().target(6),new Se(t.ROAR,n.NORMAL,-1,20,-1,-6,1).attr(Ws).soundBased().hidesTarget().partial(),new Se(t.SING,n.NORMAL,55,15,-1,0,1).attr(Ze,J.SLEEP).soundBased(),new Se(t.SUPERSONIC,n.NORMAL,55,20,-1,0,1).attr(BE).soundBased(),new d(t.SONIC_BOOM,n.NORMAL,1,-1,90,20,-1,0,1).attr(ZR,20),new Se(t.DISABLE,n.NORMAL,100,20,-1,0,1).attr(rt,Y.DISABLED,!1,!0).condition((E,A,s)=>A.getMoveHistory().reverse().find(R=>R.move!==t.NONE&&R.move!==t.STRUGGLE&&!R.virtual)!==void 0).ignoresSubstitute(),new d(t.ACID,n.POISON,1,40,100,30,10,0,1).attr(re,[B.SPDEF],-1).target(6),new d(t.EMBER,n.FIRE,1,40,100,25,10,0,1).attr(Ze,J.BURN),new d(t.FLAMETHROWER,n.FIRE,1,90,100,15,10,0,1).attr(Ze,J.BURN),new Se(t.MIST,n.ICE,-1,30,-1,0,1).attr(XA,Me.MIST,5,!0).target(15),new d(t.WATER_GUN,n.WATER,1,40,100,25,-1,0,1),new d(t.HYDRO_PUMP,n.WATER,1,110,80,5,-1,0,1),new d(t.SURF,n.WATER,1,90,100,15,-1,0,1).target(4).attr(Js,Y.UNDERWATER).attr(yD),new d(t.ICE_BEAM,n.ICE,1,90,100,10,10,0,1).attr(Ze,J.FREEZE),new d(t.BLIZZARD,n.ICE,1,110,70,5,10,0,1).attr(UH).attr(Ze,J.FREEZE).windMove().target(6),new d(t.PSYBEAM,n.PSYCHIC,1,65,100,20,10,0,1).attr(BE),new d(t.BUBBLE_BEAM,n.WATER,1,65,100,20,10,0,1).attr(re,[B.SPD],-1),new d(t.AURORA_BEAM,n.ICE,1,65,100,20,10,0,1).attr(re,[B.ATK],-1),new d(t.HYPER_BEAM,n.NORMAL,1,150,90,5,-1,0,1).attr(BR),new d(t.PECK,n.FLYING,0,35,100,35,-1,0,1),new d(t.DRILL_PECK,n.FLYING,0,80,100,20,-1,0,1),new d(t.SUBMISSION,n.FIGHTING,0,80,80,20,-1,0,1).attr(ms).recklessMove(),new d(t.LOW_KICK,n.FIGHTING,0,-1,100,20,-1,0,1).attr(MD),new d(t.COUNTER,n.FIGHTING,0,-1,100,20,-1,-5,1).attr(Mi,E=>E.category===0,2).target(9),new d(t.SEISMIC_TOSS,n.FIGHTING,0,-1,100,20,-1,0,1).attr(ED),new d(t.STRENGTH,n.NORMAL,0,80,100,15,-1,0,1),new d(t.ABSORB,n.GRASS,1,20,100,25,-1,0,1).attr(Ps).triageMove(),new d(t.MEGA_DRAIN,n.GRASS,1,40,100,15,-1,0,1).attr(Ps).triageMove(),new Se(t.LEECH_SEED,n.GRASS,90,10,-1,0,1).attr(pD).condition((E,A,s)=>!A.getTag(Y.SEEDED)&&!A.isOfType(n.GRASS)),new pe(t.GROWTH,n.NORMAL,-1,20,-1,0,1).attr(eH),new d(t.RAZOR_LEAF,n.GRASS,0,55,95,25,-1,0,1).attr(pA).makesContact(!1).slicingMove().target(6),new Es(t.SOLAR_BEAM,n.GRASS,1,120,100,10,-1,0,1).chargeText(U.t("moveTriggers:tookInSunlight",{pokemonName:"{USER}"})).chargeAttr(wr,[Q.SUNNY,Q.HARSH_SUN]).attr(PD).ignoresVirtual(),new Se(t.POISON_POWDER,n.POISON,75,35,-1,0,1).attr(Ze,J.POISON).powderMove(),new Se(t.STUN_SPORE,n.GRASS,75,30,-1,0,1).attr(Ze,J.PARALYSIS).powderMove(),new Se(t.SLEEP_POWDER,n.GRASS,75,15,-1,0,1).attr(Ze,J.SLEEP).powderMove(),new d(t.PETAL_DANCE,n.GRASS,1,120,100,10,-1,0,1).attr(Wa).attr(qR,zn).attr(uO,zn).makesContact().danceMove().target(7),new Se(t.STRING_SHOT,n.BUG,95,40,-1,0,1).attr(re,[B.SPD],-2).target(6),new d(t.DRAGON_RAGE,n.DRAGON,1,-1,100,10,-1,0,1).attr(ZR,40),new d(t.FIRE_SPIN,n.FIRE,1,35,85,15,-1,0,1).attr(JR,Y.FIRE_SPIN),new d(t.THUNDER_SHOCK,n.ELECTRIC,1,40,100,30,10,0,1).attr(Ze,J.PARALYSIS),new d(t.THUNDERBOLT,n.ELECTRIC,1,90,100,15,10,0,1).attr(Ze,J.PARALYSIS),new Se(t.THUNDER_WAVE,n.ELECTRIC,90,20,-1,0,1).attr(Ze,J.PARALYSIS).attr(AD),new d(t.THUNDER,n.ELECTRIC,1,110,70,10,30,0,1).attr(Ze,J.PARALYSIS).attr(BD).attr(lR,Y.FLYING),new d(t.ROCK_THROW,n.ROCK,0,50,90,15,-1,0,1).makesContact(!1),new d(t.EARTHQUAKE,n.GROUND,0,100,100,10,-1,0,1).attr(Js,Y.UNDERGROUND).attr(NA,(E,A,s)=>E.scene.arena.getTerrainType()===Rt.GRASSY&&A.isGrounded()?.5:1).makesContact(!1).target(4),new d(t.FISSURE,n.GROUND,0,200,30,5,-1,0,1).attr(KO).attr(dI).attr(lR,Y.UNDERGROUND).makesContact(!1),new Es(t.DIG,n.GROUND,0,80,100,10,-1,0,1).chargeText(U.t("moveTriggers:dugAHole",{pokemonName:"{USER}"})).chargeAttr(un,Y.UNDERGROUND).ignoresVirtual(),new Se(t.TOXIC,n.POISON,90,10,-1,0,1).attr(Ze,J.TOXIC).attr(gD),new d(t.CONFUSION,n.PSYCHIC,1,50,100,25,10,0,1).attr(BE),new d(t.PSYCHIC,n.PSYCHIC,1,90,100,10,10,0,1).attr(re,[B.SPDEF],-1),new Se(t.HYPNOSIS,n.PSYCHIC,60,20,-1,0,1).attr(Ze,J.SLEEP),new pe(t.MEDITATE,n.PSYCHIC,-1,40,-1,0,1).attr(re,[B.ATK],1,!0),new pe(t.AGILITY,n.PSYCHIC,-1,30,-1,0,1).attr(re,[B.SPD],2,!0),new d(t.QUICK_ATTACK,n.NORMAL,0,40,100,30,-1,1,1),new d(t.RAGE,n.NORMAL,0,20,100,20,-1,0,1).partial(),new pe(t.TELEPORT,n.PSYCHIC,-1,20,-1,-6,1).attr(Ws,!0).hidesUser(),new d(t.NIGHT_SHADE,n.GHOST,1,-1,100,15,-1,0,1).attr(ED),new Se(t.MIMIC,n.NORMAL,-1,10,-1,0,1).attr(JH).ignoresSubstitute().ignoresVirtual(),new Se(t.SCREECH,n.NORMAL,85,40,-1,0,1).attr(re,[B.DEF],-2).soundBased(),new pe(t.DOUBLE_TEAM,n.NORMAL,-1,15,-1,0,1).attr(re,[B.EVA],1,!0),new pe(t.RECOVER,n.NORMAL,-1,5,-1,0,1).attr(Rs,.5).triageMove(),new pe(t.HARDEN,n.NORMAL,-1,30,-1,0,1).attr(re,[B.DEF],1,!0),new pe(t.MINIMIZE,n.NORMAL,-1,10,-1,0,1).attr(rt,Y.MINIMIZED,!0,!1).attr(re,[B.EVA],2,!0),new Se(t.SMOKESCREEN,n.NORMAL,100,20,-1,0,1).attr(re,[B.ACC],-1),new Se(t.CONFUSE_RAY,n.GHOST,100,10,-1,0,1).attr(BE),new pe(t.WITHDRAW,n.WATER,-1,40,-1,0,1).attr(re,[B.DEF],1,!0),new pe(t.DEFENSE_CURL,n.NORMAL,-1,40,-1,0,1).attr(re,[B.DEF],1,!0),new pe(t.BARRIER,n.PSYCHIC,-1,20,-1,0,1).attr(re,[B.DEF],2,!0),new Se(t.LIGHT_SCREEN,n.PSYCHIC,-1,30,-1,0,1).attr(XA,Me.LIGHT_SCREEN,5,!0).target(15),new pe(t.HAZE,n.ICE,-1,30,-1,0,1).ignoresSubstitute().attr(xr,!0),new Se(t.REFLECT,n.PSYCHIC,-1,20,-1,0,1).attr(XA,Me.REFLECT,5,!0).target(15),new pe(t.FOCUS_ENERGY,n.NORMAL,-1,30,-1,0,1).attr(rt,Y.CRIT_BOOST,!0,!0),new d(t.BIDE,n.NORMAL,0,-1,-1,10,-1,1,1).ignoresVirtual().target(0).unimplemented(),new pe(t.METRONOME,n.NORMAL,-1,10,-1,0,1).attr(kD).ignoresVirtual(),new Se(t.MIRROR_MOVE,n.FLYING,-1,20,-1,0,1).attr(QL).ignoresVirtual(),new d(t.SELF_DESTRUCT,n.NORMAL,0,200,100,5,-1,0,1).attr(fn).makesContact(!1).condition(xo).target(4),new d(t.EGG_BOMB,n.NORMAL,0,100,75,10,-1,0,1).makesContact(!1).ballBombMove(),new d(t.LICK,n.GHOST,0,30,100,30,30,0,1).attr(Ze,J.PARALYSIS),new d(t.SMOG,n.POISON,1,30,70,20,40,0,1).attr(Ze,J.POISON),new d(t.SLUDGE,n.POISON,1,65,100,20,30,0,1).attr(Ze,J.POISON),new d(t.BONE_CLUB,n.GROUND,0,65,85,20,10,0,1).attr(qt).makesContact(!1),new d(t.FIRE_BLAST,n.FIRE,1,110,85,5,10,0,1).attr(Ze,J.BURN),new d(t.WATERFALL,n.WATER,0,80,100,15,20,0,1).attr(qt),new d(t.CLAMP,n.WATER,0,35,85,15,-1,0,1).attr(JR,Y.CLAMP),new d(t.SWIFT,n.NORMAL,1,60,-1,20,-1,0,1).target(6),new Es(t.SKULL_BASH,n.NORMAL,0,130,100,10,-1,0,1).chargeText(U.t("moveTriggers:loweredItsHead",{pokemonName:"{USER}"})).chargeAttr(re,[B.DEF],1,!0).ignoresVirtual(),new d(t.SPIKE_CANNON,n.NORMAL,0,20,100,15,-1,0,1).attr(jt).makesContact(!1),new d(t.CONSTRICT,n.NORMAL,0,10,100,35,10,0,1).attr(re,[B.SPD],-1),new pe(t.AMNESIA,n.PSYCHIC,-1,20,-1,0,1).attr(re,[B.SPDEF],2,!0),new Se(t.KINESIS,n.PSYCHIC,80,15,-1,0,1).attr(re,[B.ACC],-1),new pe(t.SOFT_BOILED,n.NORMAL,-1,5,-1,0,1).attr(Rs,.5).triageMove(),new d(t.HIGH_JUMP_KICK,n.FIGHTING,0,130,90,10,-1,0,1).attr(qR,jn).attr(uO,jn).condition(eI).recklessMove(),new Se(t.GLARE,n.NORMAL,100,30,-1,0,1).attr(Ze,J.PARALYSIS),new d(t.DREAM_EATER,n.PSYCHIC,1,100,100,15,-1,0,1).attr(Ps).condition(i0).triageMove(),new Se(t.POISON_GAS,n.POISON,90,40,-1,0,1).attr(Ze,J.POISON).target(6),new d(t.BARRAGE,n.NORMAL,0,15,85,20,-1,0,1).attr(jt).makesContact(!1).ballBombMove(),new d(t.LEECH_LIFE,n.BUG,0,80,100,10,-1,0,1).attr(Ps).triageMove(),new Se(t.LOVELY_KISS,n.NORMAL,75,10,-1,0,1).attr(Ze,J.SLEEP),new Es(t.SKY_ATTACK,n.FLYING,0,140,90,5,30,0,1).chargeText(U.t("moveTriggers:isGlowing",{pokemonName:"{USER}"})).attr(pA).attr(qt).makesContact(!1).ignoresVirtual(),new Se(t.TRANSFORM,n.NORMAL,-1,10,-1,0,1).attr(e1).condition((E,A,s)=>!A.getTag(Y.SUBSTITUTE)).ignoresProtect(),new d(t.BUBBLE,n.WATER,1,40,100,30,10,0,1).attr(re,[B.SPD],-1).target(6),new d(t.DIZZY_PUNCH,n.NORMAL,0,70,100,10,20,0,1).attr(BE).punchingMove(),new Se(t.SPORE,n.GRASS,100,15,-1,0,1).attr(Ze,J.SLEEP).powderMove(),new Se(t.FLASH,n.NORMAL,100,20,-1,0,1).attr(re,[B.ACC],-1),new d(t.PSYWAVE,n.PSYCHIC,1,-1,100,15,-1,0,1).attr(k_),new pe(t.SPLASH,n.NORMAL,-1,40,-1,0,1).condition(eI),new pe(t.ACID_ARMOR,n.POISON,-1,20,-1,0,1).attr(re,[B.DEF],2,!0),new d(t.CRABHAMMER,n.WATER,0,100,90,10,-1,0,1).attr(pA),new d(t.EXPLOSION,n.NORMAL,0,250,100,5,-1,0,1).condition(xo).attr(fn).makesContact(!1).target(4),new d(t.FURY_SWIPES,n.NORMAL,0,18,80,15,-1,0,1).attr(jt),new d(t.BONEMERANG,n.GROUND,0,50,90,10,-1,0,1).attr(jt,0).makesContact(!1),new pe(t.REST,n.PSYCHIC,-1,5,-1,0,1).attr(Ze,J.SLEEP,!0,3,!0).attr(Rs,1,!0).condition((E,A,s)=>!E.isFullHp()&&E.canSetStatus(J.SLEEP,!0,!0)).triageMove(),new d(t.ROCK_SLIDE,n.ROCK,0,75,90,10,30,0,1).attr(qt).makesContact(!1).target(6),new d(t.HYPER_FANG,n.NORMAL,0,80,90,15,10,0,1).attr(qt).bitingMove(),new pe(t.SHARPEN,n.NORMAL,-1,30,-1,0,1).attr(re,[B.ATK],1,!0),new pe(t.CONVERSION,n.NORMAL,-1,30,-1,0,1).attr(XH),new d(t.TRI_ATTACK,n.NORMAL,1,80,100,10,20,0,1).attr(rD,[J.BURN,J.FREEZE,J.PARALYSIS]),new d(t.SUPER_FANG,n.NORMAL,0,-1,90,10,-1,0,1).attr(Yr),new d(t.SLASH,n.NORMAL,0,70,100,20,-1,0,1).attr(pA).slicingMove(),new pe(t.SUBSTITUTE,n.NORMAL,-1,10,-1,0,1).attr(nD),new d(t.STRUGGLE,n.NORMAL,0,50,-1,1,-1,0,1).attr(ms,!0,.25,!0).attr(Lo).ignoresVirtual().target(7),new Se(t.SKETCH,n.NORMAL,-1,1,-1,0,2).ignoresSubstitute().attr($H).ignoresVirtual(),new d(t.TRIPLE_KICK,n.FIGHTING,0,10,90,10,-1,0,2).attr(jt,2).attr(HD,3).checkAllHits(),new d(t.THIEF,n.DARK,0,60,100,25,-1,0,2).attr(ND,.3),new Se(t.SPIDER_WEB,n.BUG,-1,10,-1,0,2).attr(rt,Y.TRAPPED,!1,!0,1),new Se(t.MIND_READER,n.NORMAL,-1,5,-1,0,2).attr(wD),new Se(t.NIGHTMARE,n.GHOST,100,15,-1,0,2).attr(rt,Y.NIGHTMARE).condition(i0),new d(t.FLAME_WHEEL,n.FIRE,0,60,100,25,10,0,2).attr(yA,!0,J.FREEZE).attr(Ze,J.BURN),new d(t.SNORE,n.NORMAL,1,50,100,15,30,0,2).attr(ao).attr(qt).condition(px).soundBased(),new Se(t.CURSE,n.GHOST,-1,10,-1,0,2).attr(YH).ignoresSubstitute().ignoresProtect().target(19),new d(t.FLAIL,n.NORMAL,0,-1,100,15,-1,0,2).attr(uD),new Se(t.CONVERSION_2,n.NORMAL,-1,30,-1,0,2).attr(L1).ignoresSubstitute().partial(),new d(t.AEROBLAST,n.FLYING,1,100,95,5,-1,0,2).windMove().attr(pA),new Se(t.COTTON_SPORE,n.GRASS,100,40,-1,0,2).attr(re,[B.SPD],-2).powderMove().target(6),new d(t.REVERSAL,n.FIGHTING,0,-1,100,15,-1,0,2).attr(uD),new Se(t.SPITE,n.GHOST,100,10,-1,0,2).ignoresSubstitute().attr(XD,4),new d(t.POWDER_SNOW,n.ICE,1,40,100,25,10,0,2).attr(Ze,J.FREEZE).target(6),new pe(t.PROTECT,n.NORMAL,-1,10,-1,4,2).attr(gR).condition(iR),new d(t.MACH_PUNCH,n.FIGHTING,0,40,100,30,-1,1,2).punchingMove(),new Se(t.SCARY_FACE,n.NORMAL,100,10,-1,0,2).attr(re,[B.SPD],-2),new d(t.FEINT_ATTACK,n.DARK,0,60,-1,20,-1,0,2),new Se(t.SWEET_KISS,n.FAIRY,75,10,-1,0,2).attr(BE),new pe(t.BELLY_DRUM,n.NORMAL,-1,10,-1,0,2).attr(vr,[B.ATK],12,2,E=>{E.scene.queueMessage(U.t("moveTriggers:cutOwnHpAndMaximizedStat",{pokemonName:b(E),statName:U.t(aE(B.ATK))}))}),new d(t.SLUDGE_BOMB,n.POISON,1,90,100,10,30,0,2).attr(Ze,J.POISON).ballBombMove(),new d(t.MUD_SLAP,n.GROUND,1,20,100,10,100,0,2).attr(re,[B.ACC],-1),new d(t.OCTAZOOKA,n.WATER,1,65,85,10,50,0,2).attr(re,[B.ACC],-1).ballBombMove(),new Se(t.SPIKES,n.GROUND,-1,20,-1,0,2).attr(Ya,Me.SPIKES).target(16),new d(t.ZAP_CANNON,n.ELECTRIC,1,120,50,5,100,0,2).attr(Ze,J.PARALYSIS).ballBombMove(),new Se(t.FORESIGHT,n.NORMAL,-1,40,-1,0,2).attr(jr,Y.IGNORE_GHOST).ignoresSubstitute(),new pe(t.DESTINY_BOND,n.GHOST,-1,5,-1,0,2).ignoresProtect().attr(s1).condition((E,A,s)=>{const R=E.getLastXMoves(1);return R.length===0||R[0].move!==s.id||R[0].result!==DA.SUCCESS}),new Se(t.PERISH_SONG,n.NORMAL,-1,5,-1,0,2).attr(yH).ignoresProtect().soundBased().condition(I0).target(14),new d(t.ICY_WIND,n.ICE,1,55,95,15,100,0,2).attr(re,[B.SPD],-1).windMove().target(6),new pe(t.DETECT,n.FIGHTING,-1,5,-1,4,2).attr(gR).condition(iR),new d(t.BONE_RUSH,n.GROUND,0,25,90,10,-1,0,2).attr(jt).makesContact(!1),new Se(t.LOCK_ON,n.NORMAL,-1,5,-1,0,2).attr(wD),new d(t.OUTRAGE,n.DRAGON,0,120,100,10,-1,0,2).attr(Wa).attr(qR,zn).attr(uO,zn).target(7),new Se(t.SANDSTORM,n.ROCK,-1,10,-1,0,2).attr(Ri,Q.SANDSTORM).target(17),new d(t.GIGA_DRAIN,n.GRASS,1,75,100,10,-1,0,2).attr(Ps).triageMove(),new pe(t.ENDURE,n.NORMAL,-1,10,-1,4,2).attr(gR,Y.ENDURING).condition(iR),new Se(t.CHARM,n.FAIRY,100,20,-1,0,2).attr(re,[B.ATK],-2),new d(t.ROLLOUT,n.ROCK,0,30,90,20,-1,0,2).partial().attr(tL,5,!0,!0,t.DEFENSE_CURL),new d(t.FALSE_SWIPE,n.NORMAL,0,40,100,40,-1,0,2).attr(RD),new Se(t.SWAGGER,n.NORMAL,85,15,-1,0,2).attr(re,[B.ATK],2).attr(BE),new pe(t.MILK_DRINK,n.NORMAL,-1,5,-1,0,2).attr(Rs,.5).triageMove(),new d(t.SPARK,n.ELECTRIC,0,65,100,20,30,0,2).attr(Ze,J.PARALYSIS),new d(t.FURY_CUTTER,n.BUG,0,40,95,20,-1,0,2).attr(tL,3,!0).slicingMove(),new d(t.STEEL_WING,n.STEEL,0,70,90,25,10,0,2).attr(re,[B.DEF],1,!0),new Se(t.MEAN_LOOK,n.NORMAL,-1,5,-1,0,2).attr(rt,Y.TRAPPED,!1,!0,1),new Se(t.ATTRACT,n.NORMAL,100,15,-1,0,2).attr(rt,Y.INFATUATED).ignoresSubstitute().condition((E,A,s)=>E.isOppositeGender(A)),new pe(t.SLEEP_TALK,n.NORMAL,-1,10,-1,0,2).attr(ao).attr(ro).condition(px).target(8).ignoresVirtual(),new Se(t.HEAL_BELL,n.NORMAL,-1,5,-1,0,2).attr(pr,U.t("moveTriggers:bellChimed"),O.SOUNDPROOF).soundBased().target(18),new d(t.RETURN,n.NORMAL,0,-1,100,20,-1,0,2).attr(ma),new d(t.PRESENT,n.NORMAL,0,-1,90,15,-1,0,2).attr(NH).makesContact(!1),new d(t.FRUSTRATION,n.NORMAL,0,-1,100,20,-1,0,2).attr(ma,!0),new Se(t.SAFEGUARD,n.NORMAL,-1,25,-1,0,2).target(15).attr(XA,Me.SAFEGUARD,5,!0,!0),new Se(t.PAIN_SPLIT,n.NORMAL,-1,20,-1,0,2).attr(EH).condition(I0),new d(t.SACRED_FIRE,n.FIRE,0,100,95,5,50,0,2).attr(yA,!0,J.FREEZE).attr(Ze,J.BURN).makesContact(!1),new d(t.MAGNITUDE,n.GROUND,0,-1,100,30,-1,0,2).attr(eL,RQ).attr(aH).attr(NA,(E,A,s)=>E.scene.arena.getTerrainType()===Rt.GRASSY&&A.isGrounded()?.5:1).attr(Js,Y.UNDERGROUND).makesContact(!1).target(4),new d(t.DYNAMIC_PUNCH,n.FIGHTING,0,100,50,5,100,0,2).attr(BE).punchingMove(),new d(t.MEGAHORN,n.BUG,0,120,85,10,-1,0,2),new d(t.DRAGON_BREATH,n.DRAGON,1,60,100,20,30,0,2).attr(Ze,J.PARALYSIS),new pe(t.BATON_PASS,n.NORMAL,-1,40,-1,0,2).attr(Ws,!0,xA.BATON_PASS).hidesUser(),new Se(t.ENCORE,n.NORMAL,100,5,-1,0,2).attr(rt,Y.ENCORE,!1,!0).ignoresSubstitute().condition((E,A,s)=>new vL(E.id).canAdd(A)),new d(t.PURSUIT,n.DARK,0,40,100,20,-1,0,2).partial(),new d(t.RAPID_SPIN,n.NORMAL,0,50,100,40,100,0,2).attr(re,[B.SPD],1,!0).attr(hn,[Y.BIND,Y.WRAP,Y.FIRE_SPIN,Y.WHIRLPOOL,Y.CLAMP,Y.SAND_TOMB,Y.MAGMA_STORM,Y.SNAP_TRAP,Y.THUNDER_CAGE,Y.SEEDED,Y.INFESTATION],!0).attr(pa),new Se(t.SWEET_SCENT,n.NORMAL,100,20,-1,0,2).attr(re,[B.EVA],-2).target(6),new d(t.IRON_TAIL,n.STEEL,0,100,75,15,30,0,2).attr(re,[B.DEF],-1),new d(t.METAL_CLAW,n.STEEL,0,50,95,35,10,0,2).attr(re,[B.ATK],1,!0),new d(t.VITAL_THROW,n.FIGHTING,0,70,-1,10,-1,-1,2),new pe(t.MORNING_SUN,n.NORMAL,-1,5,-1,0,2).attr(yr).triageMove(),new pe(t.SYNTHESIS,n.GRASS,-1,5,-1,0,2).attr(yr).triageMove(),new pe(t.MOONLIGHT,n.FAIRY,-1,5,-1,0,2).attr(yr).triageMove(),new d(t.HIDDEN_POWER,n.NORMAL,1,60,100,15,-1,0,2).attr(dH),new d(t.CROSS_CHOP,n.FIGHTING,0,100,80,5,-1,0,2).attr(pA),new d(t.TWISTER,n.DRAGON,1,40,100,20,20,0,2).attr(Js,Y.FLYING).attr(qt).windMove().target(6),new Se(t.RAIN_DANCE,n.WATER,-1,5,-1,0,2).attr(Ri,Q.RAIN).target(17),new Se(t.SUNNY_DAY,n.FIRE,-1,5,-1,0,2).attr(Ri,Q.SUNNY).target(17),new d(t.CRUNCH,n.DARK,0,80,100,15,20,0,2).attr(re,[B.DEF],-1).bitingMove(),new d(t.MIRROR_COAT,n.PSYCHIC,1,-1,100,20,-1,-5,2).attr(Mi,E=>E.category===1,2).target(9),new Se(t.PSYCH_UP,n.NORMAL,-1,10,-1,0,2).ignoresSubstitute().attr(tH),new d(t.EXTREME_SPEED,n.NORMAL,0,80,100,5,-1,2,2),new d(t.ANCIENT_POWER,n.ROCK,1,60,100,5,10,0,2).attr(re,[B.ATK,B.DEF,B.SPATK,B.SPDEF,B.SPD],1,!0),new d(t.SHADOW_BALL,n.GHOST,1,80,100,15,20,0,2).attr(re,[B.SPDEF],-1).ballBombMove(),new d(t.FUTURE_SIGHT,n.PSYCHIC,1,120,100,10,-1,0,2).partial().attr(ia,Me.FUTURE_SIGHT,Vn.FUTURE_SIGHT_CHARGING,U.t("moveTriggers:foresawAnAttack",{pokemonName:"{USER}"})),new d(t.ROCK_SMASH,n.FIGHTING,0,40,100,15,50,0,2).attr(re,[B.DEF],-1),new d(t.WHIRLPOOL,n.WATER,1,35,85,15,-1,0,2).attr(JR,Y.WHIRLPOOL).attr(Js,Y.UNDERWATER),new d(t.BEAT_UP,n.DARK,0,-1,100,10,-1,0,2).attr(jt,4).attr(RH).makesContact(!1),new d(t.FAKE_OUT,n.NORMAL,0,40,100,10,100,3,3).attr(qt).condition(new qr),new d(t.UPROAR,n.NORMAL,1,90,100,10,-1,0,3).ignoresVirtual().soundBased().target(7).partial(),new pe(t.STOCKPILE,n.NORMAL,-1,20,-1,0,3).condition(E=>{var A;return(((A=E.getTag(na))==null?void 0:A.stockpiledCount)??0)<3}).attr(rt,Y.STOCKPILING,!0),new d(t.SPIT_UP,n.NORMAL,1,-1,-1,10,-1,0,3).condition(Yx).attr(SH,100).attr(hn,[Y.STOCKPILING],!0),new pe(t.SWALLOW,n.NORMAL,-1,10,-1,0,3).condition(Yx).attr(oH).attr(hn,[Y.STOCKPILING],!0).triageMove(),new d(t.HEAT_WAVE,n.FIRE,1,95,90,10,10,0,3).attr(yA,!0,J.FREEZE).attr(Ze,J.BURN).windMove().target(6),new Se(t.HAIL,n.ICE,-1,10,-1,0,3).attr(Ri,Q.HAIL).target(17),new Se(t.TORMENT,n.DARK,100,15,-1,0,3).ignoresSubstitute().edgeCase().attr(rt,Y.TORMENT,!1,!0,1),new Se(t.FLATTER,n.DARK,100,15,-1,0,3).attr(re,[B.SPATK],1).attr(BE),new Se(t.WILL_O_WISP,n.FIRE,85,15,-1,0,3).attr(Ze,J.BURN),new Se(t.MEMENTO,n.DARK,100,10,-1,0,3).attr(HI).attr(re,[B.ATK,B.SPATK],-2),new d(t.FACADE,n.NORMAL,0,70,100,20,-1,0,3).attr(NA,(E,A,s)=>E.status&&(E.status.effect===J.BURN||E.status.effect===J.POISON||E.status.effect===J.TOXIC||E.status.effect===J.PARALYSIS)?2:1).attr(oD),new d(t.FOCUS_PUNCH,n.FIGHTING,0,150,100,20,-1,-3,3).attr(v_,(E,A)=>U.t("moveTriggers:isTighteningFocus",{pokemonName:b(E)})).punchingMove().ignoresVirtual().condition((E,A,s)=>!E.turnData.attacksReceived.find(R=>R.damage)),new d(t.SMELLING_SALTS,n.NORMAL,0,70,100,10,-1,0,3).attr(NA,(E,A,s)=>{var R;return((R=A.status)==null?void 0:R.effect)===J.PARALYSIS?2:1}).attr(yA,!0,J.PARALYSIS),new pe(t.FOLLOW_ME,n.NORMAL,-1,20,-1,2,3).attr(rt,Y.CENTER_OF_ATTENTION,!0),new Se(t.NATURE_POWER,n.NORMAL,-1,20,-1,0,3).attr(ZD).ignoresVirtual(),new pe(t.CHARGE,n.ELECTRIC,-1,20,-1,0,3).attr(re,[B.SPDEF],1,!0).attr(rt,Y.CHARGED,!0,!1),new Se(t.TAUNT,n.DARK,100,20,-1,0,3).ignoresSubstitute().attr(rt,Y.TAUNT,!1,!0,4),new Se(t.HELPING_HAND,n.NORMAL,-1,20,-1,5,3).attr(rt,Y.HELPING_HAND).ignoresSubstitute().target(10),new Se(t.TRICK,n.PSYCHIC,100,10,-1,0,3).unimplemented(),new Se(t.ROLE_PLAY,n.PSYCHIC,-1,10,-1,0,3).ignoresSubstitute().attr(JD),new pe(t.WISH,n.NORMAL,-1,10,-1,0,3).triageMove().attr(XA,Me.WISH,2,!0),new pe(t.ASSIST,n.NORMAL,-1,20,-1,0,3).attr(ro,!0).ignoresVirtual(),new pe(t.INGRAIN,n.GRASS,-1,20,-1,0,3).attr(rt,Y.INGRAIN,!0,!0).attr(rt,Y.IGNORE_FLYING,!0,!0).attr(hn,[Y.FLOATING],!0),new d(t.SUPERPOWER,n.FIGHTING,0,120,100,5,-1,0,3).attr(re,[B.ATK,B.DEF],-1,!0),new pe(t.MAGIC_COAT,n.PSYCHIC,-1,15,-1,4,3).unimplemented(),new pe(t.RECYCLE,n.NORMAL,-1,10,-1,0,3).unimplemented(),new d(t.REVENGE,n.FIGHTING,0,60,100,10,-1,-4,3).attr(GD),new d(t.BRICK_BREAK,n.FIGHTING,0,75,100,15,-1,0,3).attr(ya),new Se(t.YAWN,n.NORMAL,-1,10,-1,0,3).attr(rt,Y.DROWSY,!1,!0).condition((E,A,s)=>!A.status&&!A.isSafeguarded(E)),new d(t.KNOCK_OFF,n.DARK,0,65,100,20,-1,0,3).attr(NA,(E,A,s)=>A.getHeldItems().filter(R=>R.isTransferable).length>0?1.5:1).attr(TD,!1),new d(t.ENDEAVOR,n.NORMAL,0,-1,100,5,-1,0,3).attr(b_).condition(I0),new d(t.ERUPTION,n.FIRE,1,150,100,5,-1,0,3).attr(kr).target(6),new Se(t.SKILL_SWAP,n.PSYCHIC,-1,10,-1,0,3).ignoresSubstitute().attr(jH),new Se(t.IMPRISON,n.PSYCHIC,100,10,-1,0,3).ignoresSubstitute().attr(XA,Me.IMPRISON,1,!0,!1).target(16),new pe(t.REFRESH,n.NORMAL,-1,20,-1,0,3).attr(yA,!0,J.PARALYSIS,J.POISON,J.TOXIC,J.BURN).condition((E,A,s)=>!!E.status&&(E.status.effect===J.PARALYSIS||E.status.effect===J.POISON||E.status.effect===J.TOXIC||E.status.effect===J.BURN)),new pe(t.GRUDGE,n.GHOST,-1,5,-1,0,3).unimplemented(),new pe(t.SNATCH,n.DARK,-1,10,-1,4,3).unimplemented(),new d(t.SECRET_POWER,n.NORMAL,0,70,100,20,30,0,3).makesContact(!1).attr(CD),new Es(t.DIVE,n.WATER,0,80,100,10,-1,0,3).chargeText(U.t("moveTriggers:hidUnderwater",{pokemonName:"{USER}"})).chargeAttr(un,Y.UNDERWATER).chargeAttr(yD).ignoresVirtual(),new d(t.ARM_THRUST,n.FIGHTING,0,15,100,20,-1,0,3).attr(jt),new pe(t.CAMOUFLAGE,n.NORMAL,-1,20,-1,0,3).attr(ZH),new pe(t.TAIL_GLOW,n.BUG,-1,20,-1,0,3).attr(re,[B.SPATK],3,!0),new d(t.LUSTER_PURGE,n.PSYCHIC,1,95,100,5,50,0,3).attr(re,[B.SPDEF],-1),new d(t.MIST_BALL,n.PSYCHIC,1,95,100,5,50,0,3).attr(re,[B.SPATK],-1).ballBombMove(),new Se(t.FEATHER_DANCE,n.FLYING,100,15,-1,0,3).attr(re,[B.ATK],-2).danceMove(),new Se(t.TEETER_DANCE,n.NORMAL,100,20,-1,0,3).attr(BE).danceMove().target(4),new d(t.BLAZE_KICK,n.FIRE,0,85,90,10,10,0,3).attr(pA).attr(Ze,J.BURN),new Se(t.MUD_SPORT,n.GROUND,-1,15,-1,0,3).ignoresProtect().attr(XA,Me.MUD_SPORT,5).target(17),new d(t.ICE_BALL,n.ICE,0,30,90,20,-1,0,3).partial().attr(tL,5,!0,!0,t.DEFENSE_CURL).ballBombMove(),new d(t.NEEDLE_ARM,n.GRASS,0,60,100,15,30,0,3).attr(qt),new pe(t.SLACK_OFF,n.NORMAL,-1,5,-1,0,3).attr(Rs,.5).triageMove(),new d(t.HYPER_VOICE,n.NORMAL,1,90,100,10,-1,0,3).soundBased().target(6),new d(t.POISON_FANG,n.POISON,0,50,100,15,50,0,3).attr(Ze,J.TOXIC).bitingMove(),new d(t.CRUSH_CLAW,n.NORMAL,0,75,95,10,50,0,3).attr(re,[B.DEF],-1),new d(t.BLAST_BURN,n.FIRE,1,150,90,5,-1,0,3).attr(BR),new d(t.HYDRO_CANNON,n.WATER,1,150,90,5,-1,0,3).attr(BR),new d(t.METEOR_MASH,n.STEEL,0,90,90,10,20,0,3).attr(re,[B.ATK],1,!0).punchingMove(),new d(t.ASTONISH,n.GHOST,0,30,100,15,30,0,3).attr(qt),new d(t.WEATHER_BALL,n.NORMAL,1,50,100,10,-1,0,3).attr(_H).attr(NA,(E,A,s)=>{var R,I;return[Q.SUNNY,Q.RAIN,Q.SANDSTORM,Q.HAIL,Q.SNOW,Q.FOG,Q.HEAVY_RAIN,Q.HARSH_SUN].includes((R=E.scene.arena.weather)==null?void 0:R.weatherType)&&!((I=E.scene.arena.weather)!=null&&I.isEffectSuppressed(E.scene))?2:1}).ballBombMove(),new Se(t.AROMATHERAPY,n.GRASS,-1,5,-1,0,3).attr(pr,U.t("moveTriggers:soothingAromaWaftedThroughArea"),O.SAP_SIPPER).target(18),new Se(t.FAKE_TEARS,n.DARK,100,20,-1,0,3).attr(re,[B.SPDEF],-2),new d(t.AIR_CUTTER,n.FLYING,1,60,95,25,-1,0,3).attr(pA).slicingMove().windMove().target(6),new d(t.OVERHEAT,n.FIRE,1,130,90,5,-1,0,3).attr(re,[B.SPATK],-2,!0).attr(yA,!0,J.FREEZE),new Se(t.ODOR_SLEUTH,n.NORMAL,-1,40,-1,0,3).attr(jr,Y.IGNORE_GHOST).ignoresSubstitute(),new d(t.ROCK_TOMB,n.ROCK,0,60,95,15,100,0,3).attr(re,[B.SPD],-1).makesContact(!1),new d(t.SILVER_WIND,n.BUG,1,60,100,5,10,0,3).attr(re,[B.ATK,B.DEF,B.SPATK,B.SPDEF,B.SPD],1,!0).windMove(),new Se(t.METAL_SOUND,n.STEEL,85,40,-1,0,3).attr(re,[B.SPDEF],-2).soundBased(),new Se(t.GRASS_WHISTLE,n.GRASS,55,15,-1,0,3).attr(Ze,J.SLEEP).soundBased(),new Se(t.TICKLE,n.NORMAL,100,20,-1,0,3).attr(re,[B.ATK,B.DEF],-1),new pe(t.COSMIC_POWER,n.PSYCHIC,-1,20,-1,0,3).attr(re,[B.DEF,B.SPDEF],1,!0),new d(t.WATER_SPOUT,n.WATER,1,150,100,5,-1,0,3).attr(kr).target(6),new d(t.SIGNAL_BEAM,n.BUG,1,75,100,15,10,0,3).attr(BE),new d(t.SHADOW_PUNCH,n.GHOST,0,60,-1,20,-1,0,3).punchingMove(),new d(t.EXTRASENSORY,n.PSYCHIC,1,80,100,20,10,0,3).attr(qt),new d(t.SKY_UPPERCUT,n.FIGHTING,0,85,90,15,-1,0,3).attr(lR,Y.FLYING).punchingMove(),new d(t.SAND_TOMB,n.GROUND,0,35,85,15,-1,0,3).attr(JR,Y.SAND_TOMB).makesContact(!1),new d(t.SHEER_COLD,n.ICE,1,200,20,5,-1,0,3).attr(KH).attr(KO).attr(mH),new d(t.MUDDY_WATER,n.WATER,1,90,85,10,30,0,3).attr(re,[B.ACC],-1).target(6),new d(t.BULLET_SEED,n.GRASS,0,25,100,30,-1,0,3).attr(jt).makesContact(!1).ballBombMove(),new d(t.AERIAL_ACE,n.FLYING,0,60,-1,20,-1,0,3).slicingMove(),new d(t.ICICLE_SPEAR,n.ICE,0,25,100,30,-1,0,3).attr(jt).makesContact(!1),new pe(t.IRON_DEFENSE,n.STEEL,-1,15,-1,0,3).attr(re,[B.DEF],2,!0),new Se(t.BLOCK,n.NORMAL,-1,5,-1,0,3).attr(rt,Y.TRAPPED,!1,!0,1),new Se(t.HOWL,n.NORMAL,-1,40,-1,0,3).attr(re,[B.ATK],1).soundBased().target(13),new d(t.DRAGON_CLAW,n.DRAGON,0,80,100,15,-1,0,3),new d(t.FRENZY_PLANT,n.GRASS,1,150,90,5,-1,0,3).attr(BR),new pe(t.BULK_UP,n.FIGHTING,-1,20,-1,0,3).attr(re,[B.ATK,B.DEF],1,!0),new Es(t.BOUNCE,n.FLYING,0,85,85,5,30,0,3).chargeText(U.t("moveTriggers:sprangUp",{pokemonName:"{USER}"})).chargeAttr(un,Y.FLYING).attr(Ze,J.PARALYSIS).condition(eI).ignoresVirtual(),new d(t.MUD_SHOT,n.GROUND,1,55,95,15,100,0,3).attr(re,[B.SPD],-1),new d(t.POISON_TAIL,n.POISON,0,50,100,25,10,0,3).attr(pA).attr(Ze,J.POISON),new d(t.COVET,n.NORMAL,0,60,100,25,-1,0,3).attr(ND,.3),new d(t.VOLT_TACKLE,n.ELECTRIC,0,120,100,15,10,0,3).attr(ms,!1,.33).attr(Ze,J.PARALYSIS).recklessMove(),new d(t.MAGICAL_LEAF,n.GRASS,1,60,-1,20,-1,0,3),new Se(t.WATER_SPORT,n.WATER,-1,15,-1,0,3).ignoresProtect().attr(XA,Me.WATER_SPORT,5).target(17),new pe(t.CALM_MIND,n.PSYCHIC,-1,20,-1,0,3).attr(re,[B.SPATK,B.SPDEF],1,!0),new d(t.LEAF_BLADE,n.GRASS,0,90,100,15,-1,0,3).attr(pA).slicingMove(),new pe(t.DRAGON_DANCE,n.DRAGON,-1,20,-1,0,3).attr(re,[B.ATK,B.SPD],1,!0).danceMove(),new d(t.ROCK_BLAST,n.ROCK,0,25,90,10,-1,0,3).attr(jt).makesContact(!1).ballBombMove(),new d(t.SHOCK_WAVE,n.ELECTRIC,1,60,-1,20,-1,0,3),new d(t.WATER_PULSE,n.WATER,1,60,100,20,20,0,3).attr(BE).pulseMove(),new d(t.DOOM_DESIRE,n.STEEL,1,140,100,5,-1,0,3).partial().attr(ia,Me.DOOM_DESIRE,Vn.DOOM_DESIRE_CHARGING,U.t("moveTriggers:choseDoomDesireAsDestiny",{pokemonName:"{USER}"})),new d(t.PSYCHO_BOOST,n.PSYCHIC,1,140,90,5,-1,0,3).attr(re,[B.SPATK],-2,!0),new pe(t.ROOST,n.FLYING,-1,5,-1,0,4).attr(Rs,.5).attr(rt,Y.ROOSTED,!0,!1).triageMove(),new Se(t.GRAVITY,n.PSYCHIC,-1,5,-1,0,4).ignoresProtect().attr(XA,Me.GRAVITY,5).target(17),new Se(t.MIRACLE_EYE,n.PSYCHIC,-1,40,-1,0,4).attr(jr,Y.IGNORE_DARK).ignoresSubstitute(),new d(t.WAKE_UP_SLAP,n.FIGHTING,0,70,100,10,-1,0,4).attr(NA,(E,A,s)=>i0(E,A)?2:1).attr(yA,!1,J.SLEEP),new d(t.HAMMER_ARM,n.FIGHTING,0,100,90,10,-1,0,4).attr(re,[B.SPD],-1,!0).punchingMove(),new d(t.GYRO_BALL,n.STEEL,0,-1,100,5,-1,0,4).attr(iH).ballBombMove(),new pe(t.HEALING_WISH,n.PSYCHIC,-1,10,-1,0,4).attr(X_).triageMove(),new d(t.BRINE,n.WATER,1,65,100,10,-1,0,4).attr(NA,(E,A,s)=>A.getHpRatio()<.5?2:1),new d(t.NATURAL_GIFT,n.NORMAL,0,-1,100,15,-1,0,4).makesContact(!1).unimplemented(),new d(t.FEINT,n.NORMAL,0,30,100,10,-1,2,4).attr(hn,[Y.PROTECTED]).attr(VH,[Me.QUICK_GUARD,Me.WIDE_GUARD,Me.MAT_BLOCK,Me.CRAFTY_SHIELD],!1).makesContact(!1).ignoresProtect(),new d(t.PLUCK,n.FLYING,0,60,100,20,-1,0,4).attr(SD),new Se(t.TAILWIND,n.FLYING,-1,15,-1,0,4).windMove().attr(XA,Me.TAILWIND,4,!0).target(15),new Se(t.ACUPRESSURE,n.NORMAL,-1,30,-1,0,4).attr(z_).target(12),new d(t.METAL_BURST,n.STEEL,0,-1,100,10,-1,0,4).attr(Mi,E=>E.category===0||E.category===1,1.5).redirectCounter().makesContact(!1).target(9),new d(t.U_TURN,n.BUG,0,70,100,20,-1,0,4).attr(Ws,!0),new d(t.CLOSE_COMBAT,n.FIGHTING,0,120,100,5,-1,0,4).attr(re,[B.DEF,B.SPDEF],-1,!0),new d(t.PAYBACK,n.DARK,0,50,100,10,-1,0,4).attr(NA,(E,A,s)=>{var R;return A.getLastXMoves(1).find(I=>I.turn===A.scene.currentBattle.turn)||((R=E.scene.currentBattle.turnCommands[A.getBattlerIndex()])==null?void 0:R.command)===vt.BALL?2:1}),new d(t.ASSURANCE,n.DARK,0,60,100,10,-1,0,4).attr(NA,(E,A,s)=>A.turnData.damageTaken>0?2:1),new Se(t.EMBARGO,n.DARK,100,15,-1,0,4).unimplemented(),new d(t.FLING,n.DARK,0,-1,100,10,-1,0,4).makesContact(!1).unimplemented(),new Se(t.PSYCHO_SHIFT,n.PSYCHIC,100,10,-1,0,4).attr(q_).condition((E,A,s)=>{var I;let R=E.hasAbility(O.COMATOSE)?J.SLEEP:void 0;return(I=E.status)!=null&&I.effect&&KV(E.status.effect)&&(R=E.status.effect),!!R&&A.canSetStatus(R,!1,!1,E)}),new d(t.TRUMP_CARD,n.NORMAL,1,-1,-1,5,-1,0,4).makesContact().attr(sH),new Se(t.HEAL_BLOCK,n.PSYCHIC,100,15,-1,0,4).attr(rt,Y.HEAL_BLOCK,!1,!0,5).target(6),new d(t.WRING_OUT,n.NORMAL,1,-1,100,5,-1,0,4).attr(Zr,120).makesContact(),new pe(t.POWER_TRICK,n.PSYCHIC,-1,10,-1,0,4).attr(rt,Y.POWER_TRICK,!0),new Se(t.GASTRO_ACID,n.POISON,100,10,-1,0,4).attr($D),new Se(t.LUCKY_CHANT,n.NORMAL,-1,30,-1,0,4).attr(XA,Me.NO_CRIT,5,!0,!0).target(15),new Se(t.ME_FIRST,n.NORMAL,-1,20,-1,0,4).ignoresSubstitute().ignoresVirtual().target(5).unimplemented(),new pe(t.COPYCAT,n.NORMAL,-1,20,-1,0,4).attr(QL).ignoresVirtual(),new Se(t.POWER_SWAP,n.PSYCHIC,-1,10,100,0,4).attr(br,[B.ATK,B.SPATK]).ignoresSubstitute(),new Se(t.GUARD_SWAP,n.PSYCHIC,-1,10,100,0,4).attr(br,[B.DEF,B.SPDEF]).ignoresSubstitute(),new d(t.PUNISHMENT,n.DARK,0,-1,100,5,-1,0,4).makesContact(!0).attr(rH),new d(t.LAST_RESORT,n.NORMAL,0,140,100,5,-1,0,4).attr(n1),new Se(t.WORRY_SEED,n.GRASS,100,10,-1,0,4).attr(QD,O.INSOMNIA),new d(t.SUCKER_PUNCH,n.DARK,0,70,100,5,-1,1,4).condition((E,A,s)=>{var R,I,i;return((R=E.scene.currentBattle.turnCommands[A.getBattlerIndex()])==null?void 0:R.command)===vt.FIGHT&&!A.turnData.acted&&He[(i=(I=E.scene.currentBattle.turnCommands[A.getBattlerIndex()])==null?void 0:I.move)==null?void 0:i.move].category!==2}),new Se(t.TOXIC_SPIKES,n.POISON,-1,20,-1,0,4).attr(Ya,Me.TOXIC_SPIKES).target(16),new Se(t.HEART_SWAP,n.PSYCHIC,-1,10,-1,0,4).attr(br,rO).ignoresSubstitute(),new pe(t.AQUA_RING,n.WATER,-1,20,-1,0,4).attr(rt,Y.AQUA_RING,!0,!0),new pe(t.MAGNET_RISE,n.ELECTRIC,-1,10,-1,0,4).attr(rt,Y.FLOATING,!0,!0).condition((E,A,s)=>!E.scene.arena.getTag(Me.GRAVITY)&&[Y.FLOATING,Y.IGNORE_FLYING,Y.INGRAIN].every(R=>!E.getTag(R))),new d(t.FLARE_BLITZ,n.FIRE,0,120,100,15,10,0,4).attr(ms,!1,.33).attr(yA,!0,J.FREEZE).attr(Ze,J.BURN).recklessMove(),new d(t.FORCE_PALM,n.FIGHTING,0,60,100,10,30,0,4).attr(Ze,J.PARALYSIS),new d(t.AURA_SPHERE,n.FIGHTING,1,80,-1,20,-1,0,4).pulseMove().ballBombMove(),new pe(t.ROCK_POLISH,n.ROCK,-1,20,-1,0,4).attr(re,[B.SPD],2,!0),new d(t.POISON_JAB,n.POISON,0,80,100,20,30,0,4).attr(Ze,J.POISON),new d(t.DARK_PULSE,n.DARK,1,80,100,15,20,0,4).attr(qt).pulseMove(),new d(t.NIGHT_SLASH,n.DARK,0,70,100,15,-1,0,4).attr(pA).slicingMove(),new d(t.AQUA_TAIL,n.WATER,0,90,90,10,-1,0,4),new d(t.SEED_BOMB,n.GRASS,0,80,100,15,-1,0,4).makesContact(!1).ballBombMove(),new d(t.AIR_SLASH,n.FLYING,1,75,95,15,30,0,4).attr(qt).slicingMove(),new d(t.X_SCISSOR,n.BUG,0,80,100,15,-1,0,4).slicingMove(),new d(t.BUG_BUZZ,n.BUG,1,90,100,10,10,0,4).attr(re,[B.SPDEF],-1).soundBased(),new d(t.DRAGON_PULSE,n.DRAGON,1,85,100,10,-1,0,4).pulseMove(),new d(t.DRAGON_RUSH,n.DRAGON,0,100,75,10,20,0,4).attr(ZO).attr(Js,Y.MINIMIZED).attr(qt),new d(t.POWER_GEM,n.ROCK,1,80,100,20,-1,0,4),new d(t.DRAIN_PUNCH,n.FIGHTING,0,75,100,10,-1,0,4).attr(Ps).punchingMove().triageMove(),new d(t.VACUUM_WAVE,n.FIGHTING,1,40,100,30,-1,1,4),new d(t.FOCUS_BLAST,n.FIGHTING,1,120,70,5,10,0,4).attr(re,[B.SPDEF],-1).ballBombMove(),new d(t.ENERGY_BALL,n.GRASS,1,90,100,10,10,0,4).attr(re,[B.SPDEF],-1).ballBombMove(),new d(t.BRAVE_BIRD,n.FLYING,0,120,100,15,-1,0,4).attr(ms,!1,.33).recklessMove(),new d(t.EARTH_POWER,n.GROUND,1,90,100,10,10,0,4).attr(re,[B.SPDEF],-1),new Se(t.SWITCHEROO,n.DARK,100,10,-1,0,4).unimplemented(),new d(t.GIGA_IMPACT,n.NORMAL,0,150,90,5,-1,0,4).attr(BR),new pe(t.NASTY_PLOT,n.DARK,-1,20,-1,0,4).attr(re,[B.SPATK],2,!0),new d(t.BULLET_PUNCH,n.STEEL,0,40,100,30,-1,1,4).punchingMove(),new d(t.AVALANCHE,n.ICE,0,60,100,10,-1,-4,4).attr(GD),new d(t.ICE_SHARD,n.ICE,0,40,100,30,-1,1,4).makesContact(!1),new d(t.SHADOW_CLAW,n.GHOST,0,70,100,15,-1,0,4).attr(pA),new d(t.THUNDER_FANG,n.ELECTRIC,0,65,95,15,10,0,4).attr(qt).attr(Ze,J.PARALYSIS).bitingMove(),new d(t.ICE_FANG,n.ICE,0,65,95,15,10,0,4).attr(qt).attr(Ze,J.FREEZE).bitingMove(),new d(t.FIRE_FANG,n.FIRE,0,65,95,15,10,0,4).attr(qt).attr(Ze,J.BURN).bitingMove(),new d(t.SHADOW_SNEAK,n.GHOST,0,40,100,30,-1,1,4),new d(t.MUD_BOMB,n.GROUND,1,65,85,10,30,0,4).attr(re,[B.ACC],-1).ballBombMove(),new d(t.PSYCHO_CUT,n.PSYCHIC,0,70,100,20,-1,0,4).attr(pA).slicingMove().makesContact(!1),new d(t.ZEN_HEADBUTT,n.PSYCHIC,0,80,90,15,20,0,4).attr(qt),new d(t.MIRROR_SHOT,n.STEEL,1,65,85,10,30,0,4).attr(re,[B.ACC],-1),new d(t.FLASH_CANNON,n.STEEL,1,80,100,10,10,0,4).attr(re,[B.SPDEF],-1),new d(t.ROCK_CLIMB,n.NORMAL,0,90,85,20,20,0,4).attr(BE),new Se(t.DEFOG,n.FLYING,-1,15,-1,0,4).attr(re,[B.EVA],-1).attr(j_,Q.FOG).attr(Fa).attr(ya,!1).attr(pa,!0),new Se(t.TRICK_ROOM,n.PSYCHIC,-1,5,-1,-7,4).attr(XA,Me.TRICK_ROOM,5).ignoresProtect().target(17),new d(t.DRACO_METEOR,n.DRAGON,1,130,90,5,-1,0,4).attr(re,[B.SPATK],-2,!0),new d(t.DISCHARGE,n.ELECTRIC,1,80,100,15,30,0,4).attr(Ze,J.PARALYSIS).target(4),new d(t.LAVA_PLUME,n.FIRE,1,80,100,15,30,0,4).attr(Ze,J.BURN).target(4),new d(t.LEAF_STORM,n.GRASS,1,130,90,5,-1,0,4).attr(re,[B.SPATK],-2,!0),new d(t.POWER_WHIP,n.GRASS,0,120,85,10,-1,0,4),new d(t.ROCK_WRECKER,n.ROCK,0,150,90,5,-1,0,4).attr(BR).makesContact(!1).ballBombMove(),new d(t.CROSS_POISON,n.POISON,0,70,100,20,10,0,4).attr(pA).attr(Ze,J.POISON).slicingMove(),new d(t.GUNK_SHOT,n.POISON,0,120,80,5,30,0,4).attr(Ze,J.POISON).makesContact(!1),new d(t.IRON_HEAD,n.STEEL,0,80,100,15,30,0,4).attr(qt),new d(t.MAGNET_BOMB,n.STEEL,0,60,-1,20,-1,0,4).makesContact(!1).ballBombMove(),new d(t.STONE_EDGE,n.ROCK,0,100,80,5,-1,0,4).attr(pA).makesContact(!1),new Se(t.CAPTIVATE,n.NORMAL,100,20,-1,0,4).attr(re,[B.SPATK],-2).condition((E,A,s)=>A.isOppositeGender(E)).target(6),new Se(t.STEALTH_ROCK,n.ROCK,-1,20,-1,0,4).attr(Ya,Me.STEALTH_ROCK).target(16),new d(t.GRASS_KNOT,n.GRASS,1,-1,100,20,-1,0,4).attr(MD).makesContact(),new d(t.CHATTER,n.FLYING,1,65,100,20,100,0,4).attr(BE).soundBased(),new d(t.JUDGMENT,n.NORMAL,1,100,100,10,-1,0,4).attr(WD),new d(t.BUG_BITE,n.BUG,0,60,100,20,-1,0,4).attr(SD),new d(t.CHARGE_BEAM,n.ELECTRIC,1,50,90,10,70,0,4).attr(re,[B.SPATK],1,!0),new d(t.WOOD_HAMMER,n.GRASS,0,120,100,15,-1,0,4).attr(ms,!1,.33).recklessMove(),new d(t.AQUA_JET,n.WATER,0,40,100,20,-1,1,4),new d(t.ATTACK_ORDER,n.BUG,0,90,100,15,-1,0,4).attr(pA).makesContact(!1),new pe(t.DEFEND_ORDER,n.BUG,-1,10,-1,0,4).attr(re,[B.DEF,B.SPDEF],1,!0),new pe(t.HEAL_ORDER,n.BUG,-1,5,-1,0,4).attr(Rs,.5).triageMove(),new d(t.HEAD_SMASH,n.ROCK,0,150,80,5,-1,0,4).attr(ms,!1,.5).recklessMove(),new d(t.DOUBLE_HIT,n.NORMAL,0,35,90,10,-1,0,4).attr(jt,0),new d(t.ROAR_OF_TIME,n.DRAGON,1,150,90,5,-1,0,4).attr(BR),new d(t.SPACIAL_REND,n.DRAGON,1,100,95,5,-1,0,4).attr(pA),new pe(t.LUNAR_DANCE,n.PSYCHIC,-1,10,-1,0,4).attr(HI).danceMove().triageMove().unimplemented(),new d(t.CRUSH_GRIP,n.NORMAL,0,-1,100,5,-1,0,4).attr(Zr,120),new d(t.MAGMA_STORM,n.FIRE,1,100,75,5,-1,0,4).attr(JR,Y.MAGMA_STORM),new Se(t.DARK_VOID,n.DARK,80,10,-1,0,4).attr(Ze,J.SLEEP).target(6),new d(t.SEED_FLARE,n.GRASS,1,120,85,5,40,0,4).attr(re,[B.SPDEF],-2),new d(t.OMINOUS_WIND,n.GHOST,1,60,100,5,10,0,4).attr(re,[B.ATK,B.DEF,B.SPATK,B.SPDEF,B.SPD],1,!0).windMove(),new Es(t.SHADOW_FORCE,n.GHOST,0,120,100,5,-1,0,4).chargeText(U.t("moveTriggers:vanishedInstantly",{pokemonName:"{USER}"})).chargeAttr(un,Y.HIDDEN).ignoresProtect().ignoresVirtual(),new pe(t.HONE_CLAWS,n.DARK,-1,15,-1,0,5).attr(re,[B.ATK,B.ACC],1,!0),new Se(t.WIDE_GUARD,n.ROCK,-1,10,-1,3,5).target(15).attr(XA,Me.WIDE_GUARD,1,!0,!0).condition(iR),new Se(t.GUARD_SPLIT,n.PSYCHIC,-1,10,-1,0,5).attr(qD,[B.DEF,B.SPDEF],"moveTriggers:sharedGuard"),new Se(t.POWER_SPLIT,n.PSYCHIC,-1,10,-1,0,5).attr(qD,[B.ATK,B.SPATK],"moveTriggers:sharedPower"),new Se(t.WONDER_ROOM,n.PSYCHIC,-1,10,-1,0,5).ignoresProtect().target(17).unimplemented(),new d(t.PSYSHOCK,n.PSYCHIC,1,80,100,10,-1,0,5).attr(Qr),new d(t.VENOSHOCK,n.POISON,1,65,100,10,-1,0,5).attr(NA,(E,A,s)=>A.status&&(A.status.effect===J.POISON||A.status.effect===J.TOXIC)?2:1),new pe(t.AUTOTOMIZE,n.STEEL,-1,15,-1,0,5).attr(re,[B.SPD],2,!0).attr(rt,Y.AUTOTOMIZED,!0),new pe(t.RAGE_POWDER,n.BUG,-1,20,-1,2,5).powderMove().attr(rt,Y.CENTER_OF_ATTENTION,!0),new Se(t.TELEKINESIS,n.PSYCHIC,-1,15,-1,0,5).condition(eI).condition((E,A,s)=>![e.DIGLETT,e.DUGTRIO,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.SANDYGAST,e.PALOSSAND,e.WIGLETT,e.WUGTRIO].includes(A.species.speciesId)).condition((E,A,s)=>!(A.species.speciesId===e.GENGAR&&A.getFormKey()==="mega")).condition((E,A,s)=>xe(A.getTag(Y.INGRAIN))&&xe(A.getTag(Y.IGNORE_FLYING))).attr(rt,Y.TELEKINESIS,!1,!0,3).attr(rt,Y.FLOATING,!1,!0,3),new Se(t.MAGIC_ROOM,n.PSYCHIC,-1,10,-1,0,5).ignoresProtect().target(17).unimplemented(),new d(t.SMACK_DOWN,n.ROCK,0,50,100,15,100,0,5).attr(rt,Y.IGNORE_FLYING,!1,!1,1,1,!0).attr(rt,Y.INTERRUPTED).attr(hn,[Y.FLYING,Y.FLOATING,Y.TELEKINESIS]).attr(lR,Y.FLYING).makesContact(!1),new d(t.STORM_THROW,n.FIGHTING,0,60,100,10,-1,0,5).attr(jO),new d(t.FLAME_BURST,n.FIRE,1,70,100,15,-1,0,5).attr(Z_),new d(t.SLUDGE_WAVE,n.POISON,1,95,100,10,10,0,5).attr(Ze,J.POISON).target(4),new pe(t.QUIVER_DANCE,n.BUG,-1,20,-1,0,5).attr(re,[B.SPATK,B.SPDEF,B.SPD],1,!0).danceMove(),new d(t.HEAVY_SLAM,n.STEEL,0,-1,100,10,-1,0,5).attr(ZO).attr(hD).attr(Js,Y.MINIMIZED),new d(t.SYNCHRONOISE,n.PSYCHIC,1,120,100,10,-1,0,5).target(4).condition(iQ).attr(a1),new d(t.ELECTRO_BALL,n.ELECTRIC,1,-1,100,10,-1,0,5).attr(IH).ballBombMove(),new Se(t.SOAK,n.WATER,100,20,-1,0,5).attr(xD,n.WATER),new d(t.FLAME_CHARGE,n.FIRE,0,50,100,20,100,0,5).attr(re,[B.SPD],1,!0),new pe(t.COIL,n.POISON,-1,20,-1,0,5).attr(re,[B.ATK,B.DEF,B.ACC],1,!0),new d(t.LOW_SWEEP,n.FIGHTING,0,65,100,20,100,0,5).attr(re,[B.SPD],-1),new d(t.ACID_SPRAY,n.POISON,1,40,100,20,100,0,5).attr(re,[B.SPDEF],-2).ballBombMove(),new d(t.FOUL_PLAY,n.DARK,0,95,100,15,-1,0,5).attr(lH),new Se(t.SIMPLE_BEAM,n.NORMAL,100,15,-1,0,5).attr(QD,O.SIMPLE),new Se(t.ENTRAINMENT,n.NORMAL,100,15,-1,0,5).attr(qH),new Se(t.AFTER_YOU,n.NORMAL,-1,15,-1,0,5).ignoresProtect().ignoresSubstitute().target(3).condition(nQ).condition((E,A,s)=>!A.turnData.acted).attr(i1),new d(t.ROUND,n.NORMAL,1,60,100,15,-1,0,5).soundBased().partial(),new d(t.ECHOED_VOICE,n.NORMAL,1,40,100,15,-1,0,5).attr(nH,5,!1).soundBased(),new d(t.CHIP_AWAY,n.NORMAL,0,70,100,20,-1,0,5).attr(di),new d(t.CLEAR_SMOG,n.POISON,1,50,-1,15,-1,0,5).attr(xr,!1),new d(t.STORED_POWER,n.PSYCHIC,1,20,100,10,-1,0,5).attr(_D),new Se(t.QUICK_GUARD,n.FIGHTING,-1,15,-1,3,5).target(15).attr(XA,Me.QUICK_GUARD,1,!0,!0).condition(iR),new pe(t.ALLY_SWITCH,n.PSYCHIC,-1,15,-1,2,5).ignoresProtect().unimplemented(),new d(t.SCALD,n.WATER,1,80,100,15,30,0,5).attr(yA,!1,J.FREEZE).attr(yA,!0,J.FREEZE).attr(Ze,J.BURN),new pe(t.SHELL_SMASH,n.NORMAL,-1,15,-1,0,5).attr(re,[B.ATK,B.SPATK,B.SPD],2,!0).attr(re,[B.DEF,B.SPDEF],-1,!0),new Se(t.HEAL_PULSE,n.PSYCHIC,-1,10,-1,0,5).attr(Rs,.5,!1,!1).pulseMove().triageMove(),new d(t.HEX,n.GHOST,1,65,100,10,-1,0,5).attr(NA,(E,A,s)=>A.status||A.hasAbility(O.COMATOSE)?2:1),new Es(t.SKY_DROP,n.FLYING,0,60,100,10,-1,0,5).chargeText(U.t("moveTriggers:tookTargetIntoSky",{pokemonName:"{USER}",targetName:"{TARGET}"})).chargeAttr(un,Y.FLYING).condition(eI).condition((E,A,s)=>!A.getTag(Y.SUBSTITUTE)).ignoresVirtual().partial(),new pe(t.SHIFT_GEAR,n.STEEL,-1,10,-1,0,5).attr(re,[B.ATK],1,!0).attr(re,[B.SPD],2,!0),new d(t.CIRCLE_THROW,n.FIGHTING,0,60,90,10,-1,-6,5).attr(Ws).partial(),new d(t.INCINERATE,n.FIRE,1,60,100,15,-1,0,5).target(6).attr(TD,!0),new Se(t.QUASH,n.DARK,100,15,-1,0,5).unimplemented(),new d(t.ACROBATICS,n.FLYING,0,55,100,15,-1,0,5).attr(NA,(E,A,s)=>Math.max(1,2-.2*E.getHeldItems().filter(R=>R.isTransferable).reduce((R,I)=>R+I.stackCount,0))),new Se(t.REFLECT_TYPE,n.NORMAL,-1,15,-1,0,5).ignoresSubstitute().attr(kH),new d(t.RETALIATE,n.NORMAL,0,70,100,5,-1,0,5).attr(NA,(E,A,s)=>{const R=E.scene.currentBattle.turn,I=E.scene.currentBattle.playerFaintsHistory[E.scene.currentBattle.playerFaintsHistory.length-1],i=E.scene.currentBattle.enemyFaintsHistory[E.scene.currentBattle.enemyFaintsHistory.length-1];return I!==void 0&&R-I.turn===1&&E.isPlayer()||i!==void 0&&R-i.turn===1&&!E.isPlayer()?2:1}),new d(t.FINAL_GAMBIT,n.FIGHTING,1,-1,100,5,-1,0,5).attr(x_).attr(HI),new Se(t.BESTOW,n.NORMAL,-1,15,-1,0,5).ignoresProtect().ignoresSubstitute().unimplemented(),new d(t.INFERNO,n.FIRE,1,100,50,5,100,0,5).attr(Ze,J.BURN),new d(t.WATER_PLEDGE,n.WATER,1,80,100,10,-1,0,5).attr(Vr).attr($r).attr(Xr).attr(AL).attr(LI,Me.WATER_FIRE_PLEDGE,t.FIRE_PLEDGE,!0).attr(LI,Me.GRASS_WATER_PLEDGE,t.GRASS_PLEDGE).attr(ui,!0),new d(t.FIRE_PLEDGE,n.FIRE,1,80,100,10,-1,0,5).attr(Vr).attr($r).attr(Xr).attr(AL).attr(LI,Me.FIRE_GRASS_PLEDGE,t.GRASS_PLEDGE).attr(LI,Me.WATER_FIRE_PLEDGE,t.WATER_PLEDGE,!0).attr(ui,!0),new d(t.GRASS_PLEDGE,n.GRASS,1,80,100,10,-1,0,5).attr(Vr).attr($r).attr(Xr).attr(AL).attr(LI,Me.GRASS_WATER_PLEDGE,t.WATER_PLEDGE).attr(LI,Me.FIRE_GRASS_PLEDGE,t.FIRE_PLEDGE).attr(ui,!0),new d(t.VOLT_SWITCH,n.ELECTRIC,1,70,100,20,-1,0,5).attr(Ws,!0),new d(t.STRUGGLE_BUG,n.BUG,1,50,100,20,100,0,5).attr(re,[B.SPATK],-1).target(6),new d(t.BULLDOZE,n.GROUND,0,60,100,20,100,0,5).attr(re,[B.SPD],-1).attr(NA,(E,A,s)=>E.scene.arena.getTerrainType()===Rt.GRASSY&&A.isGrounded()?.5:1).makesContact(!1).target(4),new d(t.FROST_BREATH,n.ICE,1,60,90,10,100,0,5).attr(jO),new d(t.DRAGON_TAIL,n.DRAGON,0,60,90,10,-1,-6,5).attr(Ws).hidesTarget().partial(),new pe(t.WORK_UP,n.NORMAL,-1,30,-1,0,5).attr(re,[B.ATK,B.SPATK],1,!0),new d(t.ELECTROWEB,n.ELECTRIC,1,55,95,15,100,0,5).attr(re,[B.SPD],-1).target(6),new d(t.WILD_CHARGE,n.ELECTRIC,0,90,100,15,-1,0,5).attr(ms).recklessMove(),new d(t.DRILL_RUN,n.GROUND,0,80,95,10,-1,0,5).attr(pA),new d(t.DUAL_CHOP,n.DRAGON,0,40,90,15,-1,0,5).attr(jt,0),new d(t.HEART_STAMP,n.PSYCHIC,0,60,100,25,30,0,5).attr(qt),new d(t.HORN_LEECH,n.GRASS,0,75,100,10,-1,0,5).attr(Ps).triageMove(),new d(t.SACRED_SWORD,n.FIGHTING,0,90,100,15,-1,0,5).attr(di).slicingMove(),new d(t.RAZOR_SHELL,n.WATER,0,75,95,10,50,0,5).attr(re,[B.DEF],-1).slicingMove(),new d(t.HEAT_CRASH,n.FIRE,0,-1,100,10,-1,0,5).attr(ZO).attr(hD).attr(Js,Y.MINIMIZED),new d(t.LEAF_TORNADO,n.GRASS,1,65,90,10,50,0,5).attr(re,[B.ACC],-1),new d(t.STEAMROLLER,n.BUG,0,65,100,20,30,0,5).attr(ZO).attr(Js,Y.MINIMIZED).attr(qt),new pe(t.COTTON_GUARD,n.GRASS,-1,10,-1,0,5).attr(re,[B.DEF],3,!0),new d(t.NIGHT_DAZE,n.DARK,1,85,95,10,40,0,5).attr(re,[B.ACC],-1),new d(t.PSYSTRIKE,n.PSYCHIC,1,100,100,10,-1,0,5).attr(Qr),new d(t.TAIL_SLAP,n.NORMAL,0,25,85,10,-1,0,5).attr(jt),new d(t.HURRICANE,n.FLYING,1,110,70,10,30,0,5).attr(BD).attr(BE).attr(lR,Y.FLYING).windMove(),new d(t.HEAD_CHARGE,n.NORMAL,0,120,100,15,-1,0,5).attr(ms).recklessMove(),new d(t.GEAR_GRIND,n.STEEL,0,50,85,15,-1,0,5).attr(jt,0),new d(t.SEARING_SHOT,n.FIRE,1,100,100,5,30,0,5).attr(Ze,J.BURN).ballBombMove().target(4),new d(t.TECHNO_BLAST,n.NORMAL,1,120,100,5,-1,0,5).attr(hH),new d(t.RELIC_SONG,n.NORMAL,1,75,100,10,10,0,5).attr(Ze,J.SLEEP).soundBased().target(6),new d(t.SECRET_SWORD,n.FIGHTING,1,85,100,10,-1,0,5).attr(Qr).slicingMove(),new d(t.GLACIATE,n.ICE,1,65,95,10,100,0,5).attr(re,[B.SPD],-1).target(6),new d(t.BOLT_STRIKE,n.ELECTRIC,0,130,85,5,20,0,5).attr(Ze,J.PARALYSIS),new d(t.BLUE_FLARE,n.FIRE,1,130,85,5,20,0,5).attr(Ze,J.BURN),new d(t.FIERY_DANCE,n.FIRE,1,80,100,10,50,0,5).attr(re,[B.SPATK],1,!0).danceMove(),new Es(t.FREEZE_SHOCK,n.ICE,0,140,90,5,30,0,5).chargeText(U.t("moveTriggers:becameCloakedInFreezingLight",{pokemonName:"{USER}"})).attr(Ze,J.PARALYSIS).makesContact(!1),new Es(t.ICE_BURN,n.ICE,1,140,90,5,30,0,5).chargeText(U.t("moveTriggers:becameCloakedInFreezingAir",{pokemonName:"{USER}"})).attr(Ze,J.BURN).ignoresVirtual(),new d(t.SNARL,n.DARK,1,55,95,15,100,0,5).attr(re,[B.SPATK],-1).soundBased().target(6),new d(t.ICICLE_CRASH,n.ICE,0,85,90,10,30,0,5).attr(qt).makesContact(!1),new d(t.V_CREATE,n.FIRE,0,180,95,5,-1,0,5).attr(re,[B.DEF,B.SPDEF,B.SPD],-1,!0),new d(t.FUSION_FLARE,n.FIRE,1,100,100,5,-1,0,5).attr(yA,!0,J.FREEZE).attr(dD,t.FUSION_BOLT),new d(t.FUSION_BOLT,n.ELECTRIC,0,100,100,5,-1,0,5).attr(dD,t.FUSION_FLARE).makesContact(!1),new d(t.FLYING_PRESS,n.FIGHTING,0,100,95,10,-1,0,6).attr(ZO).attr(FH).attr(Js,Y.MINIMIZED).condition(eI),new Se(t.MAT_BLOCK,n.FIGHTING,-1,10,-1,0,6).target(15).attr(XA,Me.MAT_BLOCK,1,!0,!0).condition(new qr).condition(iR),new d(t.BELCH,n.POISON,1,120,90,10,-1,0,6).condition((E,A,s)=>E.battleData.berriesEaten.length>0),new Se(t.ROTOTILLER,n.GROUND,-1,10,-1,0,6).target(14).condition((E,A,s)=>[...E.scene.getEnemyParty(),...E.scene.getParty()].some(R=>R.isOfType(n.GRASS)&&R.isGrounded())).attr(re,[B.ATK,B.SPATK],1,!1,(E,A,s)=>A.isOfType(n.GRASS)&&A.isGrounded()),new Se(t.STICKY_WEB,n.BUG,-1,20,-1,0,6).attr(Ya,Me.STICKY_WEB).target(16),new d(t.FELL_STINGER,n.BUG,0,50,100,25,-1,0,6).attr(UD,[B.ATK],3,!0),new Es(t.PHANTOM_FORCE,n.GHOST,0,90,100,10,-1,0,6).chargeText(U.t("moveTriggers:vanishedInstantly",{pokemonName:"{USER}"})).chargeAttr(un,Y.HIDDEN).ignoresProtect().ignoresVirtual(),new Se(t.TRICK_OR_TREAT,n.GHOST,100,20,-1,0,6).attr(bD,n.GHOST).edgeCase(),new Se(t.NOBLE_ROAR,n.NORMAL,100,30,-1,0,6).attr(re,[B.ATK,B.SPATK],-1).soundBased(),new Se(t.ION_DELUGE,n.ELECTRIC,-1,25,-1,1,6).attr(XA,Me.ION_DELUGE).target(17),new d(t.PARABOLIC_CHARGE,n.ELECTRIC,1,65,100,20,-1,0,6).attr(Ps).target(4).triageMove(),new Se(t.FORESTS_CURSE,n.GRASS,100,20,-1,0,6).attr(bD,n.GRASS).edgeCase(),new d(t.PETAL_BLIZZARD,n.GRASS,0,90,100,15,-1,0,6).windMove().makesContact(!1).target(4),new d(t.FREEZE_DRY,n.ICE,1,70,100,20,10,0,6).attr(Ze,J.FREEZE).attr(gH).edgeCase(),new d(t.DISARMING_VOICE,n.FAIRY,1,40,-1,15,-1,0,6).soundBased().target(6),new Se(t.PARTING_SHOT,n.DARK,100,20,-1,0,6).attr(re,[B.ATK,B.SPATK],-1,!1,null,!0,!0,0).attr(Ws,!0).soundBased(),new Se(t.TOPSY_TURVY,n.DARK,-1,20,-1,0,6).attr(AH),new d(t.DRAINING_KISS,n.FAIRY,1,50,100,10,-1,0,6).attr(Ps,.75).makesContact().triageMove(),new Se(t.CRAFTY_SHIELD,n.FAIRY,-1,10,-1,3,6).target(15).attr(XA,Me.CRAFTY_SHIELD,1,!0,!0).condition(iR),new Se(t.FLOWER_SHIELD,n.FAIRY,-1,10,-1,0,6).target(14).attr(re,[B.DEF],1,!1,(E,A,s)=>A.getTypes().includes(n.GRASS)&&!A.getTag(In)),new Se(t.GRASSY_TERRAIN,n.GRASS,-1,10,-1,0,6).attr(Oi,Rt.GRASSY).target(17),new Se(t.MISTY_TERRAIN,n.FAIRY,-1,10,-1,0,6).attr(Oi,Rt.MISTY).target(17),new Se(t.ELECTRIFY,n.ELECTRIC,-1,20,-1,0,6).attr(rt,Y.ELECTRIFIED,!1,!0),new d(t.PLAY_ROUGH,n.FAIRY,0,90,90,10,10,0,6).attr(re,[B.ATK],-1),new d(t.FAIRY_WIND,n.FAIRY,1,40,100,30,-1,0,6).windMove(),new d(t.MOONBLAST,n.FAIRY,1,95,100,15,30,0,6).attr(re,[B.SPATK],-1),new d(t.BOOMBURST,n.NORMAL,1,140,100,10,-1,0,6).soundBased().target(4),new Se(t.FAIRY_LOCK,n.FAIRY,-1,10,-1,0,6).ignoresSubstitute().target(17).unimplemented(),new pe(t.KINGS_SHIELD,n.STEEL,-1,10,-1,4,6).attr(gR,Y.KINGS_SHIELD).condition(iR),new Se(t.PLAY_NICE,n.NORMAL,-1,20,-1,0,6).attr(re,[B.ATK],-1).ignoresSubstitute(),new Se(t.CONFIDE,n.NORMAL,-1,20,-1,0,6).attr(re,[B.SPATK],-1).soundBased(),new d(t.DIAMOND_STORM,n.ROCK,0,100,95,5,50,0,6).attr(re,[B.DEF],2,!0,void 0,void 0,void 0,void 0,!0).makesContact(!1).target(6),new d(t.STEAM_ERUPTION,n.WATER,1,110,95,5,30,0,6).attr(yA,!0,J.FREEZE).attr(yA,!1,J.FREEZE).attr(Ze,J.BURN),new d(t.HYPERSPACE_HOLE,n.PSYCHIC,1,80,-1,5,-1,0,6).ignoresProtect().ignoresSubstitute(),new d(t.WATER_SHURIKEN,n.WATER,1,15,100,20,-1,1,6).attr(jt).attr(TH).attr($_),new d(t.MYSTICAL_FIRE,n.FIRE,1,75,100,10,100,0,6).attr(re,[B.SPATK],-1),new pe(t.SPIKY_SHIELD,n.GRASS,-1,10,-1,4,6).attr(gR,Y.SPIKY_SHIELD).condition(iR),new Se(t.AROMATIC_MIST,n.FAIRY,-1,20,-1,0,6).attr(re,[B.SPDEF],1).ignoresSubstitute().target(10),new Se(t.EERIE_IMPULSE,n.ELECTRIC,100,15,-1,0,6).attr(re,[B.SPATK],-2),new Se(t.VENOM_DRENCH,n.POISON,100,20,-1,0,6).attr(re,[B.ATK,B.SPATK,B.SPD],-1,!1,(E,A,s)=>{var R,I;return((R=A.status)==null?void 0:R.effect)===J.POISON||((I=A.status)==null?void 0:I.effect)===J.TOXIC}).target(6),new Se(t.POWDER,n.BUG,100,20,-1,1,6).ignoresSubstitute().powderMove().unimplemented(),new V_(t.GEOMANCY,n.FAIRY,-1,10,-1,0,6).chargeText(U.t("moveTriggers:isChargingPower",{pokemonName:"{USER}"})).attr(re,[B.SPATK,B.SPDEF,B.SPD],2,!0).ignoresVirtual(),new Se(t.MAGNETIC_FLUX,n.ELECTRIC,-1,20,-1,0,6).attr(re,[B.DEF,B.SPDEF],1,!1,(E,A,s)=>!![O.PLUS,O.MINUS].find(R=>A.hasAbility(R,!1))).ignoresSubstitute().target(13).condition((E,A,s)=>!![E,E.getAlly()].filter(R=>R==null?void 0:R.isActive()).find(R=>!![O.PLUS,O.MINUS].find(I=>R.hasAbility(I,!1)))),new Se(t.HAPPY_HOUR,n.NORMAL,-1,30,-1,0,6).attr(XA,Me.HAPPY_HOUR,null,!0).target(15),new Se(t.ELECTRIC_TERRAIN,n.ELECTRIC,-1,10,-1,0,6).attr(Oi,Rt.ELECTRIC).target(17),new d(t.DAZZLING_GLEAM,n.FAIRY,1,80,100,10,-1,0,6).target(6),new pe(t.CELEBRATE,n.NORMAL,-1,40,-1,0,6),new Se(t.HOLD_HANDS,n.NORMAL,-1,40,-1,0,6).ignoresSubstitute().target(10),new Se(t.BABY_DOLL_EYES,n.FAIRY,100,30,-1,1,6).attr(re,[B.ATK],-1),new d(t.NUZZLE,n.ELECTRIC,0,20,100,20,100,0,6).attr(Ze,J.PARALYSIS),new d(t.HOLD_BACK,n.NORMAL,0,40,100,40,-1,0,6).attr(RD),new d(t.INFESTATION,n.BUG,1,20,100,20,-1,0,6).makesContact().attr(JR,Y.INFESTATION),new d(t.POWER_UP_PUNCH,n.FIGHTING,0,40,100,20,100,0,6).attr(re,[B.ATK],1,!0).punchingMove(),new d(t.OBLIVION_WING,n.FLYING,1,80,100,10,-1,0,6).attr(Ps,.75).triageMove(),new d(t.THOUSAND_ARROWS,n.GROUND,0,90,100,10,-1,0,6).attr(YD).attr(rt,Y.IGNORE_FLYING,!1,!1,1,1,!0).attr(lR,Y.FLYING).attr(lR,Y.FLOATING).attr(rt,Y.INTERRUPTED).attr(hn,[Y.FLYING,Y.FLOATING,Y.TELEKINESIS]).makesContact(!1).target(6),new d(t.THOUSAND_WAVES,n.GROUND,0,90,100,10,-1,0,6).attr(rt,Y.TRAPPED,!1,!1,1,1,!0).makesContact(!1).target(6),new d(t.LANDS_WRATH,n.GROUND,0,90,100,10,-1,0,6).makesContact(!1).target(6),new d(t.LIGHT_OF_RUIN,n.FAIRY,1,140,90,5,-1,0,6).attr(ms,!1,.5).recklessMove(),new d(t.ORIGIN_PULSE,n.WATER,1,110,85,10,-1,0,6).pulseMove().target(6),new d(t.PRECIPICE_BLADES,n.GROUND,0,120,85,10,-1,0,6).makesContact(!1).target(6),new d(t.DRAGON_ASCENT,n.FLYING,0,120,100,5,-1,0,6).attr(re,[B.DEF,B.SPDEF],-1,!0),new d(t.HYPERSPACE_FURY,n.DARK,0,100,-1,5,-1,0,6).attr(re,[B.DEF],-1,!0).ignoresSubstitute().makesContact(!1).ignoresProtect(),new d(t.BREAKNECK_BLITZ__PHYSICAL,n.NORMAL,0,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new d(t.BREAKNECK_BLITZ__SPECIAL,n.NORMAL,1,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new d(t.ALL_OUT_PUMMELING__PHYSICAL,n.FIGHTING,0,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new d(t.ALL_OUT_PUMMELING__SPECIAL,n.FIGHTING,1,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new d(t.SUPERSONIC_SKYSTRIKE__PHYSICAL,n.FLYING,0,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new d(t.SUPERSONIC_SKYSTRIKE__SPECIAL,n.FLYING,1,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new d(t.ACID_DOWNPOUR__PHYSICAL,n.POISON,0,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new d(t.ACID_DOWNPOUR__SPECIAL,n.POISON,1,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new d(t.TECTONIC_RAGE__PHYSICAL,n.GROUND,0,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new d(t.TECTONIC_RAGE__SPECIAL,n.GROUND,1,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new d(t.CONTINENTAL_CRUSH__PHYSICAL,n.ROCK,0,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new d(t.CONTINENTAL_CRUSH__SPECIAL,n.ROCK,1,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new d(t.SAVAGE_SPIN_OUT__PHYSICAL,n.BUG,0,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new d(t.SAVAGE_SPIN_OUT__SPECIAL,n.BUG,1,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new d(t.NEVER_ENDING_NIGHTMARE__PHYSICAL,n.GHOST,0,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new d(t.NEVER_ENDING_NIGHTMARE__SPECIAL,n.GHOST,1,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new d(t.CORKSCREW_CRASH__PHYSICAL,n.STEEL,0,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new d(t.CORKSCREW_CRASH__SPECIAL,n.STEEL,1,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new d(t.INFERNO_OVERDRIVE__PHYSICAL,n.FIRE,0,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new d(t.INFERNO_OVERDRIVE__SPECIAL,n.FIRE,1,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new d(t.HYDRO_VORTEX__PHYSICAL,n.WATER,0,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new d(t.HYDRO_VORTEX__SPECIAL,n.WATER,1,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new d(t.BLOOM_DOOM__PHYSICAL,n.GRASS,0,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new d(t.BLOOM_DOOM__SPECIAL,n.GRASS,1,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new d(t.GIGAVOLT_HAVOC__PHYSICAL,n.ELECTRIC,0,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new d(t.GIGAVOLT_HAVOC__SPECIAL,n.ELECTRIC,1,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new d(t.SHATTERED_PSYCHE__PHYSICAL,n.PSYCHIC,0,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new d(t.SHATTERED_PSYCHE__SPECIAL,n.PSYCHIC,1,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new d(t.SUBZERO_SLAMMER__PHYSICAL,n.ICE,0,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new d(t.SUBZERO_SLAMMER__SPECIAL,n.ICE,1,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new d(t.DEVASTATING_DRAKE__PHYSICAL,n.DRAGON,0,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new d(t.DEVASTATING_DRAKE__SPECIAL,n.DRAGON,1,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new d(t.BLACK_HOLE_ECLIPSE__PHYSICAL,n.DARK,0,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new d(t.BLACK_HOLE_ECLIPSE__SPECIAL,n.DARK,1,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new d(t.TWINKLE_TACKLE__PHYSICAL,n.FAIRY,0,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new d(t.TWINKLE_TACKLE__SPECIAL,n.FAIRY,1,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new d(t.CATASTROPIKA,n.ELECTRIC,0,210,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new pe(t.SHORE_UP,n.GROUND,-1,5,-1,0,7).attr(Q_).triageMove(),new d(t.FIRST_IMPRESSION,n.BUG,0,90,100,10,-1,2,7).condition(new qr),new pe(t.BANEFUL_BUNKER,n.POISON,-1,10,-1,4,7).attr(gR,Y.BANEFUL_BUNKER).condition(iR),new d(t.SPIRIT_SHACKLE,n.GHOST,0,80,100,10,100,0,7).attr(rt,Y.TRAPPED,!1,!1,1,1,!0).makesContact(!1),new d(t.DARKEST_LARIAT,n.DARK,0,85,100,10,-1,0,7).attr(di),new d(t.SPARKLING_ARIA,n.WATER,1,90,100,10,100,0,7).attr(yA,!1,J.BURN).soundBased().target(4),new d(t.ICE_HAMMER,n.ICE,0,100,90,10,-1,0,7).attr(re,[B.SPD],-1,!0).punchingMove(),new Se(t.FLORAL_HEALING,n.FAIRY,-1,10,-1,0,7).attr(J_,.5,2/3,!0,!1,(E,A,s)=>{var R;return((R=E.scene.arena.terrain)==null?void 0:R.terrainType)===Rt.GRASSY}).triageMove(),new d(t.HIGH_HORSEPOWER,n.GROUND,0,95,95,10,-1,0,7),new Se(t.STRENGTH_SAP,n.GRASS,100,10,-1,0,7).attr(Ps,null,B.ATK).attr(re,[B.ATK],-1).condition((E,A,s)=>A.getStatStage(B.ATK)>-6).triageMove(),new Es(t.SOLAR_BLADE,n.GRASS,0,125,100,10,-1,0,7).chargeText(U.t("moveTriggers:isGlowing",{pokemonName:"{USER}"})).chargeAttr(wr,[Q.SUNNY,Q.HARSH_SUN]).attr(PD).slicingMove(),new d(t.LEAFAGE,n.GRASS,0,40,100,40,-1,0,7).makesContact(!1),new Se(t.SPOTLIGHT,n.NORMAL,-1,15,-1,3,7).attr(rt,Y.CENTER_OF_ATTENTION,!1),new Se(t.TOXIC_THREAD,n.POISON,100,20,-1,0,7).attr(Ze,J.POISON).attr(re,[B.SPD],-1),new pe(t.LASER_FOCUS,n.NORMAL,-1,30,-1,0,7).attr(rt,Y.ALWAYS_CRIT,!0,!1),new Se(t.GEAR_UP,n.STEEL,-1,20,-1,0,7).attr(re,[B.ATK,B.SPATK],1,!1,(E,A,s)=>!![O.PLUS,O.MINUS].find(R=>A.hasAbility(R,!1))).ignoresSubstitute().target(13).condition((E,A,s)=>!![E,E.getAlly()].filter(R=>R==null?void 0:R.isActive()).find(R=>!![O.PLUS,O.MINUS].find(I=>R.hasAbility(I,!1)))),new d(t.THROAT_CHOP,n.DARK,0,80,100,15,100,0,7).attr(rt,Y.THROAT_CHOPPED),new d(t.POLLEN_PUFF,n.BUG,1,90,100,15,-1,0,7).attr(mD).attr(aD,.5,!0,!1).ballBombMove(),new d(t.ANCHOR_SHOT,n.STEEL,0,80,100,20,100,0,7).attr(rt,Y.TRAPPED,!1,!1,1,1,!0),new Se(t.PSYCHIC_TERRAIN,n.PSYCHIC,-1,10,-1,0,7).attr(Oi,Rt.PSYCHIC).target(17),new d(t.LUNGE,n.BUG,0,80,100,15,100,0,7).attr(re,[B.ATK],-1),new d(t.FIRE_LASH,n.FIRE,0,80,100,15,100,0,7).attr(re,[B.DEF],-1),new d(t.POWER_TRIP,n.DARK,0,20,100,10,-1,0,7).attr(_D),new d(t.BURN_UP,n.FIRE,1,130,100,5,-1,0,7).condition(E=>E.getTypes(!0).includes(n.FIRE)).attr(yA,!0,J.FREEZE).attr(rt,Y.BURNED_UP,!0,!1).attr(vD,n.FIRE,E=>{E.scene.queueMessage(U.t("moveTriggers:burnedItselfOut",{pokemonName:b(E)}))}),new Se(t.SPEED_SWAP,n.PSYCHIC,-1,10,-1,0,7).attr(t1,B.SPD).ignoresSubstitute(),new d(t.SMART_STRIKE,n.STEEL,0,70,-1,10,-1,0,7),new Se(t.PURIFY,n.POISON,-1,20,-1,0,7).condition((E,A,s)=>{var R;return KV((R=A.status)==null?void 0:R.effect)}).attr(Rs,.5).attr(yA,!1,...o1()).triageMove(),new d(t.REVELATION_DANCE,n.NORMAL,1,90,100,15,-1,0,7).danceMove().attr(BH),new d(t.CORE_ENFORCER,n.DRAGON,1,100,100,10,-1,0,7).target(6).attr(zH),new d(t.TROP_KICK,n.GRASS,0,70,100,15,100,0,7).attr(re,[B.ATK],-1),new Se(t.INSTRUCT,n.PSYCHIC,-1,15,-1,0,7).ignoresSubstitute().unimplemented(),new d(t.BEAK_BLAST,n.FLYING,0,100,100,15,-1,-3,7).attr(XL).ballBombMove().makesContact(!1),new d(t.CLANGING_SCALES,n.DRAGON,1,110,100,5,-1,0,7).attr(re,[B.DEF],-1,!0,null,!0,!1,2,!0).soundBased().target(6),new d(t.DRAGON_HAMMER,n.DRAGON,0,90,100,15,-1,0,7),new d(t.BRUTAL_SWING,n.DARK,0,60,100,20,-1,0,7).target(4),new Se(t.AURORA_VEIL,n.ICE,-1,20,-1,0,7).condition((E,A,s)=>{var R,I,i;return(((R=E.scene.arena.weather)==null?void 0:R.weatherType)===Q.HAIL||((I=E.scene.arena.weather)==null?void 0:I.weatherType)===Q.SNOW)&&!((i=E.scene.arena.weather)!=null&&i.isEffectSuppressed(E.scene))}).attr(XA,Me.AURORA_VEIL,5,!0).target(15),new d(t.SINISTER_ARROW_RAID,n.GHOST,0,180,-1,1,-1,0,7).makesContact(!1).edgeCase().ignoresVirtual(),new d(t.MALICIOUS_MOONSAULT,n.DARK,0,180,-1,1,-1,0,7).attr(ZO).attr(lR,Y.MINIMIZED,!0).edgeCase().ignoresVirtual(),new d(t.OCEANIC_OPERETTA,n.WATER,1,195,-1,1,-1,0,7).edgeCase().ignoresVirtual(),new d(t.GUARDIAN_OF_ALOLA,n.FAIRY,1,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new d(t.SOUL_STEALING_7_STAR_STRIKE,n.GHOST,0,195,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new d(t.STOKED_SPARKSURFER,n.ELECTRIC,1,175,-1,1,100,0,7).edgeCase().ignoresVirtual(),new d(t.PULVERIZING_PANCAKE,n.NORMAL,0,210,-1,1,-1,0,7).edgeCase().ignoresVirtual(),new pe(t.EXTREME_EVOBOOST,n.NORMAL,-1,1,-1,0,7).attr(re,[B.ATK,B.DEF,B.SPATK,B.SPDEF,B.SPD],2,!0).ignoresVirtual(),new d(t.GENESIS_SUPERNOVA,n.PSYCHIC,1,185,-1,1,100,0,7).attr(Oi,Rt.PSYCHIC).ignoresVirtual(),new d(t.SHELL_TRAP,n.FIRE,1,150,100,5,-1,-3,7).attr(tD,Y.SHELL_TRAP).target(6).condition((E,A,s)=>{var R;return((R=E.getTag(pU))==null?void 0:R.activated)===!0}),new d(t.FLEUR_CANNON,n.FAIRY,1,130,90,5,-1,0,7).attr(re,[B.SPATK],-2,!0),new d(t.PSYCHIC_FANGS,n.PSYCHIC,0,85,100,10,-1,0,7).bitingMove().attr(ya),new d(t.STOMPING_TANTRUM,n.GROUND,0,75,100,10,-1,0,7).attr(NA,(E,A,s)=>{var R,I;return((R=E.getLastXMoves(2)[1])==null?void 0:R.result)===DA.MISS||((I=E.getLastXMoves(2)[1])==null?void 0:I.result)===DA.FAIL?2:1}),new d(t.SHADOW_BONE,n.GHOST,0,85,100,10,20,0,7).attr(re,[B.DEF],-1).makesContact(!1),new d(t.ACCELEROCK,n.ROCK,0,40,100,20,-1,1,7),new d(t.LIQUIDATION,n.WATER,0,85,100,10,20,0,7).attr(re,[B.DEF],-1),new d(t.PRISMATIC_LASER,n.PSYCHIC,1,160,100,10,-1,0,7).attr(BR),new d(t.SPECTRAL_THIEF,n.GHOST,0,90,100,10,-1,0,7).ignoresSubstitute().partial(),new d(t.SUNSTEEL_STRIKE,n.STEEL,0,100,100,5,-1,0,7).ignoresAbilities().edgeCase(),new d(t.MOONGEIST_BEAM,n.GHOST,1,100,100,5,-1,0,7).ignoresAbilities().edgeCase(),new Se(t.TEARFUL_LOOK,n.NORMAL,-1,20,-1,0,7).attr(re,[B.ATK,B.SPATK],-1),new d(t.ZING_ZAP,n.ELECTRIC,0,80,100,10,30,0,7).attr(qt),new d(t.NATURES_MADNESS,n.FAIRY,1,-1,90,10,-1,0,7).attr(Yr),new d(t.MULTI_ATTACK,n.NORMAL,0,120,100,10,-1,0,7).attr(WD),new d(t.TEN_MILLION_VOLT_THUNDERBOLT,n.ELECTRIC,1,195,-1,1,-1,0,7).edgeCase().ignoresVirtual(),new d(t.MIND_BLOWN,n.FIRE,1,150,100,5,-1,0,7).condition(xo).attr(OD).target(4),new d(t.PLASMA_FISTS,n.ELECTRIC,0,100,100,15,-1,0,7).attr(XA,Me.ION_DELUGE,1).punchingMove(),new d(t.PHOTON_GEYSER,n.PSYCHIC,1,100,100,5,-1,0,7).attr(KD).ignoresAbilities().edgeCase(),new d(t.LIGHT_THAT_BURNS_THE_SKY,n.PSYCHIC,1,200,-1,1,-1,0,7).attr(KD).ignoresAbilities().ignoresVirtual(),new d(t.SEARING_SUNRAZE_SMASH,n.STEEL,0,200,-1,1,-1,0,7).ignoresAbilities().ignoresVirtual(),new d(t.MENACING_MOONRAZE_MAELSTROM,n.GHOST,1,200,-1,1,-1,0,7).ignoresAbilities().ignoresVirtual(),new d(t.LETS_SNUGGLE_FOREVER,n.FAIRY,0,190,-1,1,-1,0,7).edgeCase().ignoresVirtual(),new d(t.SPLINTERED_STORMSHARDS,n.ROCK,0,190,-1,1,-1,0,7).attr(Fa).makesContact(!1).ignoresVirtual(),new d(t.CLANGOROUS_SOULBLAZE,n.DRAGON,1,185,-1,1,100,0,7).attr(re,[B.ATK,B.DEF,B.SPATK,B.SPDEF,B.SPD],1,!0,void 0,void 0,void 0,void 0,!0).soundBased().target(6).edgeCase().ignoresVirtual(),new d(t.ZIPPY_ZAP,n.ELECTRIC,0,50,100,15,-1,2,7).attr(jO),new d(t.SPLISHY_SPLASH,n.WATER,1,90,100,15,30,0,7).attr(Ze,J.PARALYSIS).target(6),new d(t.FLOATY_FALL,n.FLYING,0,90,95,15,30,0,7).attr(qt),new d(t.PIKA_PAPOW,n.ELECTRIC,1,-1,-1,20,-1,0,7).attr(ma),new d(t.BOUNCY_BUBBLE,n.WATER,1,60,100,20,-1,0,7).attr(Ps,1).triageMove().target(6),new d(t.BUZZY_BUZZ,n.ELECTRIC,1,60,100,20,100,0,7).attr(Ze,J.PARALYSIS),new d(t.SIZZLY_SLIDE,n.FIRE,0,60,100,20,100,0,7).attr(Ze,J.BURN),new d(t.GLITZY_GLOW,n.PSYCHIC,1,80,95,15,-1,0,7).attr(XA,Me.LIGHT_SCREEN,5,!1,!0),new d(t.BADDY_BAD,n.DARK,1,80,95,15,-1,0,7).attr(XA,Me.REFLECT,5,!1,!0),new d(t.SAPPY_SEED,n.GRASS,0,100,90,10,100,0,7).attr(pD).makesContact(!1),new d(t.FREEZY_FROST,n.ICE,1,100,90,10,-1,0,7).attr(xr,!0),new d(t.SPARKLY_SWIRL,n.FAIRY,1,120,85,5,-1,0,7).attr(pr,null,O.NONE),new d(t.VEEVEE_VOLLEY,n.NORMAL,0,-1,-1,20,-1,0,7).attr(ma),new d(t.DOUBLE_IRON_BASH,n.STEEL,0,60,100,5,30,0,7).attr(jt,0).attr(qt).punchingMove(),new pe(t.MAX_GUARD,n.NORMAL,-1,10,-1,4,8).attr(gR).condition(iR).ignoresVirtual(),new d(t.DYNAMAX_CANNON,n.DRAGON,1,100,100,5,-1,0,8).attr(NA,(E,A,s)=>A.level>A.scene.getMaxExpLevel()?1+Math.min(1,(A.level-A.scene.getMaxExpLevel())/(A.scene.getMaxExpLevel()*.05)):1).attr(E1).ignoresVirtual(),new d(t.SNIPE_SHOT,n.WATER,1,80,100,15,-1,0,8).attr(pA).attr(ui),new d(t.JAW_LOCK,n.DARK,0,80,100,10,-1,0,8).attr(WH).bitingMove(),new pe(t.STUFF_CHEEKS,n.NORMAL,-1,10,-1,0,8).attr(io).attr(re,[B.DEF],2,!0).condition(E=>E.scene.findModifiers(s=>s instanceof _E,E.isPlayer()).length>0).edgeCase(),new pe(t.NO_RETREAT,n.FIGHTING,-1,5,-1,0,8).attr(re,[B.ATK,B.DEF,B.SPATK,B.SPDEF,B.SPD],1,!0).attr(rt,Y.NO_RETREAT,!0,!1).condition((E,A,s)=>{var R;return((R=E.getTag(GR))==null?void 0:R.sourceMove)!==t.NO_RETREAT}),new Se(t.TAR_SHOT,n.ROCK,100,15,-1,0,8).attr(re,[B.SPD],-1).attr(rt,Y.TAR_SHOT,!1),new Se(t.MAGIC_POWDER,n.PSYCHIC,100,20,-1,0,8).attr(xD,n.PSYCHIC).powderMove(),new d(t.DRAGON_DARTS,n.DRAGON,0,50,100,10,-1,0,8).attr(jt,0).makesContact(!1).partial(),new Se(t.TEATIME,n.NORMAL,-1,10,-1,0,8).attr(io).target(14),new Se(t.OCTOLOCK,n.FIGHTING,100,15,-1,0,8).attr(rt,Y.OCTOLOCK,!1,!0,1),new d(t.BOLT_BEAK,n.ELECTRIC,0,85,100,10,-1,0,8).attr(cD),new d(t.FISHIOUS_REND,n.WATER,0,85,100,10,-1,0,8).attr(cD).bitingMove(),new Se(t.COURT_CHANGE,n.NORMAL,100,10,-1,0,8).attr(vH,[Me.AURORA_VEIL,Me.LIGHT_SCREEN,Me.MIST,Me.REFLECT,Me.SPIKES,Me.STEALTH_ROCK,Me.STICKY_WEB,Me.TAILWIND,Me.TOXIC_SPIKES]),new d(t.MAX_FLARE,n.FIRE,0,10,-1,10,-1,0,8).target(5).unimplemented().ignoresVirtual(),new d(t.MAX_FLUTTERBY,n.BUG,0,10,-1,10,-1,0,8).target(5).unimplemented().ignoresVirtual(),new d(t.MAX_LIGHTNING,n.ELECTRIC,0,10,-1,10,-1,0,8).target(5).unimplemented().ignoresVirtual(),new d(t.MAX_STRIKE,n.NORMAL,0,10,-1,10,-1,0,8).target(5).unimplemented().ignoresVirtual(),new d(t.MAX_KNUCKLE,n.FIGHTING,0,10,-1,10,-1,0,8).target(5).unimplemented().ignoresVirtual(),new d(t.MAX_PHANTASM,n.GHOST,0,10,-1,10,-1,0,8).target(5).unimplemented().ignoresVirtual(),new d(t.MAX_HAILSTORM,n.ICE,0,10,-1,10,-1,0,8).target(5).unimplemented().ignoresVirtual(),new d(t.MAX_OOZE,n.POISON,0,10,-1,10,-1,0,8).target(5).unimplemented().ignoresVirtual(),new d(t.MAX_GEYSER,n.WATER,0,10,-1,10,-1,0,8).target(5).unimplemented().ignoresVirtual(),new d(t.MAX_AIRSTREAM,n.FLYING,0,10,-1,10,-1,0,8).target(5).unimplemented().ignoresVirtual(),new d(t.MAX_STARFALL,n.FAIRY,0,10,-1,10,-1,0,8).target(5).unimplemented().ignoresVirtual(),new d(t.MAX_WYRMWIND,n.DRAGON,0,10,-1,10,-1,0,8).target(5).unimplemented().ignoresVirtual(),new d(t.MAX_MINDSTORM,n.PSYCHIC,0,10,-1,10,-1,0,8).target(5).unimplemented().ignoresVirtual(),new d(t.MAX_ROCKFALL,n.ROCK,0,10,-1,10,-1,0,8).target(5).unimplemented().ignoresVirtual(),new d(t.MAX_QUAKE,n.GROUND,0,10,-1,10,-1,0,8).target(5).unimplemented().ignoresVirtual(),new d(t.MAX_DARKNESS,n.DARK,0,10,-1,10,-1,0,8).target(5).unimplemented().ignoresVirtual(),new d(t.MAX_OVERGROWTH,n.GRASS,0,10,-1,10,-1,0,8).target(5).unimplemented().ignoresVirtual(),new d(t.MAX_STEELSPIKE,n.STEEL,0,10,-1,10,-1,0,8).target(5).unimplemented().ignoresVirtual(),new pe(t.CLANGOROUS_SOUL,n.DRAGON,100,5,-1,0,8).attr(vr,[B.ATK,B.DEF,B.SPATK,B.SPDEF,B.SPD],1,3).soundBased().danceMove(),new d(t.BODY_PRESS,n.FIGHTING,0,80,100,10,-1,0,8).attr(CH),new Se(t.DECORATE,n.FAIRY,-1,15,-1,0,8).attr(re,[B.ATK,B.SPATK],2).ignoresProtect(),new d(t.DRUM_BEATING,n.GRASS,0,80,100,10,100,0,8).attr(re,[B.SPD],-1).makesContact(!1),new d(t.SNAP_TRAP,n.GRASS,0,35,100,15,-1,0,8).attr(JR,Y.SNAP_TRAP),new d(t.PYRO_BALL,n.FIRE,0,120,90,5,10,0,8).attr(yA,!0,J.FREEZE).attr(Ze,J.BURN).ballBombMove().makesContact(!1),new d(t.BEHEMOTH_BLADE,n.STEEL,0,100,100,5,-1,0,8).slicingMove(),new d(t.BEHEMOTH_BASH,n.STEEL,0,100,100,5,-1,0,8),new d(t.AURA_WHEEL,n.ELECTRIC,0,110,100,10,100,0,8).attr(re,[B.SPD],1,!0).makesContact(!1).attr(cH),new d(t.BREAKING_SWIPE,n.DRAGON,0,60,100,15,100,0,8).target(6).attr(re,[B.ATK],-1),new d(t.BRANCH_POKE,n.GRASS,0,40,100,40,-1,0,8),new d(t.OVERDRIVE,n.ELECTRIC,1,80,100,10,-1,0,8).soundBased().target(6),new d(t.APPLE_ACID,n.GRASS,1,80,100,10,100,0,8).attr(re,[B.SPDEF],-1),new d(t.GRAV_APPLE,n.GRASS,0,80,100,10,100,0,8).attr(re,[B.DEF],-1).attr(NA,(E,A,s)=>E.scene.arena.getTag(Me.GRAVITY)?1.5:1).makesContact(!1),new d(t.SPIRIT_BREAK,n.FAIRY,0,75,100,15,100,0,8).attr(re,[B.SPATK],-1),new d(t.STRANGE_STEAM,n.FAIRY,1,90,95,10,20,0,8).attr(BE),new Se(t.LIFE_DEW,n.WATER,-1,10,-1,0,8).attr(Rs,.25,!0,!1).target(13).ignoresProtect(),new pe(t.OBSTRUCT,n.DARK,100,10,-1,4,8).attr(gR,Y.OBSTRUCT).condition(iR),new d(t.FALSE_SURRENDER,n.DARK,0,80,-1,10,-1,0,8),new d(t.METEOR_ASSAULT,n.FIGHTING,0,150,100,5,-1,0,8).attr(BR).makesContact(!1),new d(t.ETERNABEAM,n.DRAGON,1,160,90,5,-1,0,8).attr(BR),new d(t.STEEL_BEAM,n.STEEL,1,140,95,5,-1,0,8).attr(OD),new d(t.EXPANDING_FORCE,n.PSYCHIC,1,80,100,10,-1,0,8).attr(NA,(E,A,s)=>E.scene.arena.getTerrainType()===Rt.PSYCHIC&&E.isGrounded()?1.5:1).attr(La,(E,A,s)=>E.scene.arena.getTerrainType()===Rt.PSYCHIC&&E.isGrounded()?6:3),new d(t.STEEL_ROLLER,n.STEEL,0,130,100,5,-1,0,8).attr(Fa).condition((E,A,s)=>!!E.scene.arena.terrain),new d(t.SCALE_SHOT,n.DRAGON,0,25,90,20,-1,0,8).attr(re,[B.SPD],1,!0,null,!0,!1,2,!1,!0).attr(re,[B.DEF],-1,!0,null,!0,!1,2,!1,!0).attr(jt).makesContact(!1),new Es(t.METEOR_BEAM,n.ROCK,1,120,90,10,-1,0,8).chargeText(U.t("moveTriggers:isOverflowingWithSpacePower",{pokemonName:"{USER}"})).chargeAttr(re,[B.SPATK],1,!0).ignoresVirtual(),new d(t.SHELL_SIDE_ARM,n.POISON,1,90,100,10,20,0,8).attr(MH).attr(Ze,J.POISON).partial(),new d(t.MISTY_EXPLOSION,n.FAIRY,1,100,100,5,-1,0,8).attr(fn).target(4).attr(NA,(E,A,s)=>E.scene.arena.getTerrainType()===Rt.MISTY&&E.isGrounded()?1.5:1).condition(xo).makesContact(!1),new d(t.GRASSY_GLIDE,n.GRASS,0,55,100,20,-1,0,8).attr(Ia,(E,A,s)=>E.scene.arena.getTerrainType()===Rt.GRASSY&&E.isGrounded()),new d(t.RISING_VOLTAGE,n.ELECTRIC,1,70,100,20,-1,0,8).attr(NA,(E,A,s)=>E.scene.arena.getTerrainType()===Rt.ELECTRIC&&A.isGrounded()?2:1),new d(t.TERRAIN_PULSE,n.NORMAL,1,50,100,10,-1,0,8).attr(HH).attr(NA,(E,A,s)=>E.scene.arena.getTerrainType()!==Rt.NONE&&E.isGrounded()?2:1).pulseMove(),new d(t.SKITTER_SMACK,n.BUG,0,70,90,10,100,0,8).attr(re,[B.SPATK],-1),new d(t.BURNING_JEALOUSY,n.FIRE,1,70,100,5,100,0,8).attr(O1,J.BURN).target(6),new d(t.LASH_OUT,n.DARK,0,75,100,5,-1,0,8).attr(NA,(E,A,s)=>E.turnData.statStagesDecreased?2:1),new d(t.POLTERGEIST,n.GHOST,0,110,90,5,-1,0,8).attr(I1).makesContact(!1),new Se(t.CORROSIVE_GAS,n.POISON,100,40,-1,0,8).target(4).unimplemented(),new Se(t.COACHING,n.FIGHTING,-1,10,-1,0,8).attr(re,[B.ATK,B.DEF],1).target(10),new d(t.FLIP_TURN,n.WATER,0,60,100,20,-1,0,8).attr(Ws,!0),new d(t.TRIPLE_AXEL,n.ICE,0,20,90,10,-1,0,8).attr(jt,2).attr(HD,3).checkAllHits(),new d(t.DUAL_WINGBEAT,n.FLYING,0,40,90,10,-1,0,8).attr(jt,0),new d(t.SCORCHING_SANDS,n.GROUND,1,70,100,10,30,0,8).attr(yA,!0,J.FREEZE).attr(yA,!1,J.FREEZE).attr(Ze,J.BURN),new Se(t.JUNGLE_HEALING,n.GRASS,-1,10,-1,0,8).attr(Rs,.25,!0,!1).attr(yA,!1,J.PARALYSIS,J.POISON,J.TOXIC,J.BURN,J.SLEEP).target(13),new d(t.WICKED_BLOW,n.DARK,0,75,100,5,-1,0,8).attr(jO).punchingMove(),new d(t.SURGING_STRIKES,n.WATER,0,25,100,5,-1,0,8).attr(jt,2).attr(jO).punchingMove(),new d(t.THUNDER_CAGE,n.ELECTRIC,1,80,90,15,-1,0,8).attr(JR,Y.THUNDER_CAGE),new d(t.DRAGON_ENERGY,n.DRAGON,1,150,100,5,-1,0,8).attr(kr).target(6),new d(t.FREEZING_GLARE,n.PSYCHIC,1,90,100,10,10,0,8).attr(Ze,J.FREEZE),new d(t.FIERY_WRATH,n.DARK,1,90,100,10,20,0,8).attr(qt).target(6),new d(t.THUNDEROUS_KICK,n.FIGHTING,0,90,100,10,100,0,8).attr(re,[B.DEF],-1),new d(t.GLACIAL_LANCE,n.ICE,0,120,100,5,-1,0,8).target(6).makesContact(!1),new d(t.ASTRAL_BARRAGE,n.GHOST,1,120,100,5,-1,0,8).target(6),new d(t.EERIE_SPELL,n.PSYCHIC,1,80,100,5,100,0,8).attr(QH,3).soundBased(),new d(t.DIRE_CLAW,n.POISON,0,80,100,15,50,0,8).attr(rD,[J.POISON,J.PARALYSIS,J.SLEEP]),new d(t.PSYSHIELD_BASH,n.PSYCHIC,0,70,90,10,100,0,8).attr(re,[B.DEF],1,!0),new pe(t.POWER_SHIFT,n.NORMAL,-1,10,-1,0,8).target(0).attr(A1,B.ATK,B.DEF),new d(t.STONE_AXE,n.ROCK,0,65,90,15,100,0,8).attr(VD,Me.STEALTH_ROCK).slicingMove(),new d(t.SPRINGTIDE_STORM,n.FAIRY,1,100,80,5,30,0,8).attr(re,[B.ATK],-1).windMove().target(6),new d(t.MYSTICAL_POWER,n.PSYCHIC,1,70,90,10,100,0,8).attr(re,[B.SPATK],1,!0),new d(t.RAGING_FURY,n.FIRE,0,120,100,10,-1,0,8).makesContact(!1).attr(Wa).attr(qR,zn).attr(uO,zn).target(7),new d(t.WAVE_CRASH,n.WATER,0,120,100,10,-1,0,8).attr(ms,!1,.33).recklessMove(),new d(t.CHLOROBLAST,n.GRASS,1,150,95,5,-1,0,8).attr(ms,!0,.5),new d(t.MOUNTAIN_GALE,n.ICE,0,100,85,10,30,0,8).makesContact(!1).attr(qt),new pe(t.VICTORY_DANCE,n.FIGHTING,-1,10,-1,0,8).attr(re,[B.ATK,B.DEF,B.SPD],1,!0).danceMove(),new d(t.HEADLONG_RUSH,n.GROUND,0,120,100,5,-1,0,8).attr(re,[B.DEF,B.SPDEF],-1,!0).punchingMove(),new d(t.BARB_BARRAGE,n.POISON,0,60,100,10,50,0,8).makesContact(!1).attr(NA,(E,A,s)=>A.status&&(A.status.effect===J.POISON||A.status.effect===J.TOXIC)?2:1).attr(Ze,J.POISON),new d(t.ESPER_WING,n.PSYCHIC,1,80,100,10,100,0,8).attr(pA).attr(re,[B.SPD],1,!0),new d(t.BITTER_MALICE,n.GHOST,1,75,100,10,100,0,8).attr(re,[B.ATK],-1),new pe(t.SHELTER,n.STEEL,-1,10,100,0,8).attr(re,[B.DEF],2,!0),new d(t.TRIPLE_ARROWS,n.FIGHTING,0,90,100,10,30,0,8).makesContact(!1).attr(pA).attr(re,[B.DEF],-1,void 0,void 0,void 0,void 0,void 0,void 0,void 0,50).attr(qt),new d(t.INFERNAL_PARADE,n.GHOST,1,60,100,15,30,0,8).attr(Ze,J.BURN).attr(NA,(E,A,s)=>A.status?2:1),new d(t.CEASELESS_EDGE,n.DARK,0,65,90,15,100,0,8).attr(VD,Me.SPIKES).slicingMove(),new d(t.BLEAKWIND_STORM,n.FLYING,1,100,80,10,30,0,8).attr(Jr).attr(re,[B.SPD],-1).windMove().target(6),new d(t.WILDBOLT_STORM,n.ELECTRIC,1,100,80,10,20,0,8).attr(Jr).attr(Ze,J.PARALYSIS).windMove().target(6),new d(t.SANDSEAR_STORM,n.GROUND,1,100,80,10,20,0,8).attr(Jr).attr(Ze,J.BURN).windMove().target(6),new Se(t.LUNAR_BLESSING,n.PSYCHIC,-1,5,-1,0,8).attr(Rs,.25,!0,!1).attr(yA,!1,J.PARALYSIS,J.POISON,J.TOXIC,J.BURN,J.SLEEP).target(13).triageMove(),new pe(t.TAKE_HEART,n.PSYCHIC,-1,10,-1,0,8).attr(re,[B.SPATK,B.SPDEF],1,!0).attr(yA,!0,J.PARALYSIS,J.POISON,J.TOXIC,J.BURN,J.SLEEP),new d(t.TERA_BLAST,n.NORMAL,1,80,100,10,-1,0,9).attr(FD).attr(fH).attr(DH).attr(re,[B.ATK,B.SPATK],-1,!0,(E,A,s)=>E.isTerastallized()&&E.isOfType(n.STELLAR)).partial(),new pe(t.SILK_TRAP,n.BUG,-1,10,-1,4,9).attr(gR,Y.SILK_TRAP).condition(iR),new d(t.AXE_KICK,n.FIGHTING,0,120,90,10,30,0,9).attr(qR,jn).attr(uO,jn).attr(BE).recklessMove(),new d(t.LAST_RESPECTS,n.GHOST,0,50,100,10,-1,0,9).attr(NA,(E,A,s)=>1+Math.min(E.isPlayer()?E.scene.currentBattle.playerFaints:E.scene.currentBattle.enemyFaints,100)).makesContact(!1),new d(t.LUMINA_CRASH,n.PSYCHIC,1,80,100,10,100,0,9).attr(re,[B.SPDEF],-2),new d(t.ORDER_UP,n.DRAGON,0,80,100,10,100,0,9).makesContact(!1).partial(),new d(t.JET_PUNCH,n.WATER,0,60,100,15,-1,1,9).punchingMove(),new Se(t.SPICY_EXTRACT,n.GRASS,-1,15,-1,0,9).attr(re,[B.ATK],2).attr(re,[B.DEF],-2),new d(t.SPIN_OUT,n.STEEL,0,100,100,5,-1,0,9).attr(re,[B.SPD],-2,!0),new d(t.POPULATION_BOMB,n.NORMAL,0,20,90,10,-1,0,9).attr(jt,3).slicingMove().checkAllHits(),new d(t.ICE_SPINNER,n.ICE,0,80,100,15,-1,0,9).attr(Fa),new d(t.GLAIVE_RUSH,n.DRAGON,0,120,100,5,-1,0,9).attr(rt,Y.ALWAYS_GET_HIT,!0,!1,0,0,!0).attr(rt,Y.RECEIVE_DOUBLE_DAMAGE,!0,!1,0,0,!0).condition((E,A,s)=>{var R,I;return!(((R=A.getTag(Y.PROTECTED))==null?void 0:R.tagType)==="PROTECTED"||((I=A.scene.arena.getTag(Me.MAT_BLOCK))==null?void 0:I.tagType)==="MAT_BLOCK")}),new Se(t.REVIVAL_BLESSING,n.NORMAL,-1,1,-1,0,9).triageMove().attr(xH).target(0),new d(t.SALT_CURE,n.ROCK,0,40,100,15,100,0,9).attr(rt,Y.SALT_CURED).makesContact(!1),new d(t.TRIPLE_DIVE,n.WATER,0,30,95,10,-1,0,9).attr(jt,2),new d(t.MORTAL_SPIN,n.POISON,0,30,100,15,100,0,9).attr(pH,[Y.BIND,Y.WRAP,Y.FIRE_SPIN,Y.WHIRLPOOL,Y.CLAMP,Y.SAND_TOMB,Y.MAGMA_STORM,Y.SNAP_TRAP,Y.THUNDER_CAGE,Y.SEEDED,Y.INFESTATION],!0).attr(Ze,J.POISON).attr(pa).target(6),new Se(t.DOODLE,n.NORMAL,100,10,-1,0,9).attr(JD,!0),new pe(t.FILLET_AWAY,n.NORMAL,-1,10,-1,0,9).attr(vr,[B.ATK,B.SPATK,B.SPD],2,2),new d(t.KOWTOW_CLEAVE,n.DARK,0,85,-1,10,-1,0,9).slicingMove(),new d(t.FLOWER_TRICK,n.GRASS,0,70,-1,10,100,0,9).attr(jO).makesContact(!1),new d(t.TORCH_SONG,n.FIRE,1,80,100,10,100,0,9).attr(re,[B.SPATK],1,!0).soundBased(),new d(t.AQUA_STEP,n.WATER,0,80,100,10,100,0,9).attr(re,[B.SPD],1,!0).danceMove(),new d(t.RAGING_BULL,n.NORMAL,0,90,100,10,-1,0,9).attr(GH).attr(ya),new d(t.MAKE_IT_RAIN,n.STEEL,1,120,100,5,-1,0,9).attr(jD).attr(re,[B.SPATK],-1,!0,null,!0,!1,2,!0).target(6),new d(t.PSYBLADE,n.PSYCHIC,0,80,100,15,-1,0,9).attr(NA,(E,A,s)=>E.scene.arena.getTerrainType()===Rt.ELECTRIC&&E.isGrounded()?1.5:1).slicingMove(),new d(t.HYDRO_STEAM,n.WATER,1,80,100,15,-1,0,9).attr(ID,Q.SUNNY).attr(NA,(E,A,s)=>{var R,I;return[Q.SUNNY,Q.HARSH_SUN].includes((R=E.scene.arena.weather)==null?void 0:R.weatherType)&&!((I=E.scene.arena.weather)!=null&&I.isEffectSuppressed(E.scene))?1.5:1}),new d(t.RUINATION,n.DARK,1,-1,90,10,-1,0,9).attr(Yr),new d(t.COLLISION_COURSE,n.FIGHTING,0,100,100,5,-1,0,9).attr(NA,(E,A,s)=>A.getAttackTypeEffectiveness(s.type,E)>=2?5461/4096:1),new d(t.ELECTRO_DRIFT,n.ELECTRIC,1,100,100,5,-1,0,9).attr(NA,(E,A,s)=>A.getAttackTypeEffectiveness(s.type,E)>=2?5461/4096:1).makesContact(),new pe(t.SHED_TAIL,n.NORMAL,-1,10,-1,0,9).attr(nD,.5).attr(Ws,!0,xA.SHED_TAIL),new pe(t.CHILLY_RECEPTION,n.ICE,-1,10,-1,0,9).attr(eL,(E,A)=>U.t("moveTriggers:chillyReception",{pokemonName:b(E)})).attr(bH,!0),new pe(t.TIDY_UP,n.NORMAL,-1,10,-1,0,9).attr(re,[B.ATK,B.SPD],1,!0,null,!0,!0).attr(pa,!0).attr(wH),new Se(t.SNOWSCAPE,n.ICE,-1,10,-1,0,9).attr(Ri,Q.SNOW).target(17),new d(t.POUNCE,n.BUG,0,50,100,20,100,0,9).attr(re,[B.SPD],-1),new d(t.TRAILBLAZE,n.GRASS,0,50,100,20,100,0,9).attr(re,[B.SPD],1,!0),new d(t.CHILLING_WATER,n.WATER,1,50,100,20,100,0,9).attr(re,[B.ATK],-1),new d(t.HYPER_DRILL,n.NORMAL,0,100,100,5,-1,0,9).ignoresProtect(),new d(t.TWIN_BEAM,n.PSYCHIC,1,40,100,10,-1,0,9).attr(jt,0),new d(t.RAGE_FIST,n.GHOST,0,50,100,10,-1,0,9).attr(LH).punchingMove(),new d(t.ARMOR_CANNON,n.FIRE,1,120,100,5,-1,0,9).attr(re,[B.DEF,B.SPDEF],-1,!0),new d(t.BITTER_BLADE,n.FIRE,0,90,100,10,-1,0,9).attr(Ps).slicingMove().triageMove(),new d(t.DOUBLE_SHOCK,n.ELECTRIC,0,120,100,5,-1,0,9).condition(E=>E.getTypes(!0).includes(n.ELECTRIC)).attr(rt,Y.DOUBLE_SHOCKED,!0,!1).attr(vD,n.ELECTRIC,E=>{E.scene.queueMessage(U.t("moveTriggers:usedUpAllElectricity",{pokemonName:b(E)}))}),new d(t.GIGATON_HAMMER,n.STEEL,0,160,100,5,-1,0,9).makesContact(!1).condition((E,A,s)=>{const R=E.getLastXMoves(1);return!R.length||R[0].move!==s.id||R[0].result!==DA.SUCCESS}),new d(t.COMEUPPANCE,n.DARK,0,-1,100,10,-1,0,9).attr(Mi,E=>E.category===0||E.category===1,1.5).redirectCounter().target(9),new d(t.AQUA_CUTTER,n.WATER,0,70,100,20,-1,0,9).attr(pA).slicingMove().makesContact(!1),new d(t.BLAZING_TORQUE,n.FIRE,0,80,100,10,30,0,9).attr(Ze,J.BURN).makesContact(!1),new d(t.WICKED_TORQUE,n.DARK,0,80,100,10,10,0,9).attr(Ze,J.SLEEP).makesContact(!1),new d(t.NOXIOUS_TORQUE,n.POISON,0,100,100,10,30,0,9).attr(Ze,J.POISON).makesContact(!1),new d(t.COMBAT_TORQUE,n.FIGHTING,0,100,100,10,30,0,9).attr(Ze,J.PARALYSIS).makesContact(!1),new d(t.MAGICAL_TORQUE,n.FAIRY,0,100,100,10,30,0,9).attr(BE).makesContact(!1),new d(t.BLOOD_MOON,n.NORMAL,1,140,100,5,-1,0,9).condition((E,A,s)=>{const R=E.getLastXMoves(1);return!R.length||R[0].move!==s.id||R[0].result!==DA.SUCCESS}),new d(t.MATCHA_GOTCHA,n.GRASS,1,80,90,15,20,0,9).attr(Ps).attr(yA,!0,J.FREEZE).attr(yA,!1,J.FREEZE).attr(Ze,J.BURN).target(6).triageMove(),new d(t.SYRUP_BOMB,n.GRASS,1,60,85,10,-1,0,9).attr(rt,Y.SYRUP_BOMB,!1,!1,3).ballBombMove(),new d(t.IVY_CUDGEL,n.GRASS,0,100,100,10,-1,0,9).attr(PH).attr(pA).makesContact(!1),new Es(t.ELECTRO_SHOT,n.ELECTRIC,1,130,100,10,100,0,9).chargeText(U.t("moveTriggers:absorbedElectricity",{pokemonName:"{USER}"})).chargeAttr(re,[B.SPATK],1,!0).chargeAttr(wr,[Q.RAIN,Q.HEAVY_RAIN]).ignoresVirtual(),new d(t.TERA_STARSTORM,n.NORMAL,1,120,100,5,-1,0,9).attr(FD).attr(uH).attr(La,(E,A,s)=>(E.hasFusionSpecies(e.TERAPAGOS)||E.species.speciesId===e.TERAPAGOS)&&E.isTerastallized()?6:3).partial(),new d(t.FICKLE_BEAM,n.DRAGON,1,80,100,5,30,0,9).attr(eL,sQ).attr(OH),new pe(t.BURNING_BULWARK,n.FIRE,-1,10,-1,4,9).attr(gR,Y.BURNING_BULWARK).condition(iR),new d(t.THUNDERCLAP,n.ELECTRIC,1,70,100,5,-1,1,9).condition((E,A,s)=>{var R,I,i;return((R=E.scene.currentBattle.turnCommands[A.getBattlerIndex()])==null?void 0:R.command)===vt.FIGHT&&!A.turnData.acted&&He[(i=(I=E.scene.currentBattle.turnCommands[A.getBattlerIndex()])==null?void 0:I.move)==null?void 0:i.move].category!==2}),new d(t.MIGHTY_CLEAVE,n.ROCK,0,95,100,5,-1,0,9).slicingMove().ignoresProtect(),new d(t.TACHYON_CUTTER,n.STEEL,1,50,-1,10,-1,0,9).attr(jt,0).slicingMove(),new d(t.HARD_PRESS,n.STEEL,0,-1,100,10,-1,0,9).attr(Zr,100),new Se(t.DRAGON_CHEER,n.DRAGON,-1,15,-1,0,9).attr(rt,Y.DRAGON_CHEER,!1,!0).target(10),new d(t.ALLURING_VOICE,n.FAIRY,1,80,100,10,-1,0,9).attr(R1,Y.CONFUSED).soundBased(),new d(t.TEMPER_FLARE,n.FIRE,0,75,100,10,-1,0,9).attr(NA,(E,A,s)=>{var R,I;return((R=E.getLastXMoves(2)[1])==null?void 0:R.result)===DA.MISS||((I=E.getLastXMoves(2)[1])==null?void 0:I.result)===DA.FAIL?2:1}),new d(t.SUPERCELL_SLAM,n.ELECTRIC,0,100,95,15,-1,0,9).attr(qR,jn).attr(uO,jn).recklessMove(),new d(t.PSYCHIC_NOISE,n.PSYCHIC,1,75,100,10,-1,0,9).soundBased().attr(rt,Y.HEAL_BLOCK,!1,!1,2),new d(t.UPPER_HAND,n.FIGHTING,0,65,100,15,100,3,9).attr(qt).condition((E,A,s)=>{var R,I,i,a,L;return((R=E.scene.currentBattle.turnCommands[A.getBattlerIndex()])==null?void 0:R.command)===vt.FIGHT&&!A.turnData.acted&&He[(i=(I=E.scene.currentBattle.turnCommands[A.getBattlerIndex()])==null?void 0:I.move)==null?void 0:i.move].category!==2&&He[(L=(a=E.scene.currentBattle.turnCommands[A.getBattlerIndex()])==null?void 0:a.move)==null?void 0:L.move].priority>0}).partial(),new d(t.MALIGNANT_CHAIN,n.POISON,1,100,100,5,50,0,9).attr(Ze,J.TOXIC)),He.map(E=>{E.getAttrs(re).some(A=>A.selfTarget&&A.stages<0)&&ab.push(E.id)})}T(aQ,"initMoves");const TV=class TV{constructor(A,s){this.weatherType=A,this.turnsLeft=this.isImmutable()?0:s||0}lapse(){return this.isImmutable()?!0:this.turnsLeft?!!--this.turnsLeft:!0}isImmutable(){switch(this.weatherType){case Q.HEAVY_RAIN:case Q.HARSH_SUN:case Q.STRONG_WINDS:return!0}return!1}isDamaging(){switch(this.weatherType){case Q.SANDSTORM:case Q.HAIL:return!0}return!1}isTypeDamageImmune(A){switch(this.weatherType){case Q.SANDSTORM:return A===n.GROUND||A===n.ROCK||A===n.STEEL;case Q.HAIL:return A===n.ICE}return!1}getAttackTypeMultiplier(A){switch(this.weatherType){case Q.SUNNY:case Q.HARSH_SUN:if(A===n.FIRE)return 1.5;if(A===n.WATER)return .5;break;case Q.RAIN:case Q.HEAVY_RAIN:if(A===n.FIRE)return .5;if(A===n.WATER)return 1.5;break}return 1}isMoveWeatherCancelled(A,s){const R=A.getMoveType(s);switch(this.weatherType){case Q.HARSH_SUN:return s instanceof d&&R===n.WATER;case Q.HEAVY_RAIN:return s instanceof d&&R===n.FIRE}return!1}isEffectSuppressed(A){const s=A.getField(!0);for(const R of s){let I=R.getAbility().getAttrs(Ra)[0];if(I||(I=R.hasPassive()?R.getPassiveAbility().getAttrs(Ra)[0]:null),I&&(!this.isImmutable()||I.affectsImmutable))return!0}return!1}};T(TV,"Weather");let No=TV;function wx(E){switch(E){case Q.SUNNY:return U.t("weather:sunnyStartMessage");case Q.RAIN:return U.t("weather:rainStartMessage");case Q.SANDSTORM:return U.t("weather:sandstormStartMessage");case Q.HAIL:return U.t("weather:hailStartMessage");case Q.SNOW:return U.t("weather:snowStartMessage");case Q.FOG:return U.t("weather:fogStartMessage");case Q.HEAVY_RAIN:return U.t("weather:heavyRainStartMessage");case Q.HARSH_SUN:return U.t("weather:harshSunStartMessage");case Q.STRONG_WINDS:return U.t("weather:strongWindsStartMessage")}return null}T(wx,"getWeatherStartMessage");function LQ(E){switch(E){case Q.SUNNY:return U.t("weather:sunnyLapseMessage");case Q.RAIN:return U.t("weather:rainLapseMessage");case Q.SANDSTORM:return U.t("weather:sandstormLapseMessage");case Q.HAIL:return U.t("weather:hailLapseMessage");case Q.SNOW:return U.t("weather:snowLapseMessage");case Q.FOG:return U.t("weather:fogLapseMessage");case Q.HEAVY_RAIN:return U.t("weather:heavyRainLapseMessage");case Q.HARSH_SUN:return U.t("weather:harshSunLapseMessage");case Q.STRONG_WINDS:return U.t("weather:strongWindsLapseMessage")}return null}T(LQ,"getWeatherLapseMessage");function rQ(E,A){switch(E){case Q.SANDSTORM:return U.t("weather:sandstormDamageMessage",{pokemonNameWithAffix:b(A)});case Q.HAIL:return U.t("weather:hailDamageMessage",{pokemonNameWithAffix:b(A)})}return null}T(rQ,"getWeatherDamageMessage");function NQ(E){switch(E){case Q.SUNNY:return U.t("weather:sunnyClearMessage");case Q.RAIN:return U.t("weather:rainClearMessage");case Q.SANDSTORM:return U.t("weather:sandstormClearMessage");case Q.HAIL:return U.t("weather:hailClearMessage");case Q.SNOW:return U.t("weather:snowClearMessage");case Q.FOG:return U.t("weather:fogClearMessage");case Q.HEAVY_RAIN:return U.t("weather:heavyRainClearMessage");case Q.HARSH_SUN:return U.t("weather:harshSunClearMessage");case Q.STRONG_WINDS:return U.t("weather:strongWindsClearMessage")}return null}T(NQ,"getWeatherClearMessage");function TQ(E){switch(E){case Rt.MISTY:return U.t("terrain:mistyStartMessage");case Rt.ELECTRIC:return U.t("terrain:electricStartMessage");case Rt.GRASSY:return U.t("terrain:grassyStartMessage");case Rt.PSYCHIC:return U.t("terrain:psychicStartMessage");default:return console.warn("getTerrainStartMessage not defined. Using default null"),null}}T(TQ,"getTerrainStartMessage");function SQ(E){switch(E){case Rt.MISTY:return U.t("terrain:mistyClearMessage");case Rt.ELECTRIC:return U.t("terrain:electricClearMessage");case Rt.GRASSY:return U.t("terrain:grassyClearMessage");case Rt.PSYCHIC:return U.t("terrain:psychicClearMessage");default:return console.warn("getTerrainClearMessage not defined. Using default null"),null}}T(SQ,"getTerrainClearMessage");function oQ(E,A){return A===Rt.MISTY?U.t("terrain:mistyBlockMessage",{pokemonNameWithAffix:b(E)}):U.t("terrain:defaultBlockMessage",{pokemonNameWithAffix:b(E),terrainName:B9(A)})}T(oQ,"getTerrainBlockMessage");function Lb(E){let A=[];const s=E.getTimeOfDay()<2;switch(E.biomeType){case r.GRASS:A=[{weatherType:Q.NONE,weight:7}],s&&A.push({weatherType:Q.SUNNY,weight:3});break;case r.TALL_GRASS:A=[{weatherType:Q.NONE,weight:8},{weatherType:Q.RAIN,weight:5}],s&&A.push({weatherType:Q.SUNNY,weight:8});break;case r.FOREST:A=[{weatherType:Q.NONE,weight:8},{weatherType:Q.RAIN,weight:5}];break;case r.SEA:A=[{weatherType:Q.NONE,weight:3},{weatherType:Q.RAIN,weight:12}];break;case r.SWAMP:A=[{weatherType:Q.NONE,weight:3},{weatherType:Q.RAIN,weight:4},{weatherType:Q.FOG,weight:1}];break;case r.BEACH:A=[{weatherType:Q.NONE,weight:8},{weatherType:Q.RAIN,weight:3}],s&&A.push({weatherType:Q.SUNNY,weight:5});break;case r.LAKE:A=[{weatherType:Q.NONE,weight:10},{weatherType:Q.RAIN,weight:5},{weatherType:Q.FOG,weight:1}];break;case r.SEABED:A=[{weatherType:Q.RAIN,weight:1}];break;case r.BADLANDS:A=[{weatherType:Q.NONE,weight:8},{weatherType:Q.SANDSTORM,weight:2}],s&&A.push({weatherType:Q.SUNNY,weight:5});break;case r.DESERT:A=[{weatherType:Q.SANDSTORM,weight:2}],s&&A.push({weatherType:Q.SUNNY,weight:2});break;case r.ICE_CAVE:A=[{weatherType:Q.NONE,weight:3},{weatherType:Q.SNOW,weight:4},{weatherType:Q.HAIL,weight:1}];break;case r.MEADOW:A=[{weatherType:Q.NONE,weight:2}],s&&A.push({weatherType:Q.SUNNY,weight:2});case r.VOLCANO:A=[{weatherType:s?Q.SUNNY:Q.NONE,weight:1}];break;case r.GRAVEYARD:A=[{weatherType:Q.NONE,weight:3},{weatherType:Q.FOG,weight:1}];break;case r.JUNGLE:A=[{weatherType:Q.NONE,weight:8},{weatherType:Q.RAIN,weight:2}];break;case r.SNOWY_FOREST:A=[{weatherType:Q.SNOW,weight:7},{weatherType:Q.HAIL,weight:1}];break;case r.ISLAND:A=[{weatherType:Q.NONE,weight:5},{weatherType:Q.RAIN,weight:1}],s&&A.push({weatherType:Q.SUNNY,weight:2});break}if(A.length>1){let R=0;A.forEach(a=>R+=a.weight);const I=le(R);let i=0;for(const a of A)if(i+=a.weight,I<i)return a.weatherType}return A.length?A[0].weatherType:Q.NONE}T(Lb,"getRandomWeatherType");var rb=(E=>(E[E.NONE=0]="NONE",E[E.SHORT=1]="SHORT",E[E.MEDIUM=2]="MEDIUM",E[E.LONG=3]="LONG",E[E.VERY_LONG=4]="VERY_LONG",E[E.NEVER=5]="NEVER",E))(rb||{}),sL=(E=>(E[E.NONE=0]="NONE",E[E.LINKING_CORD=1]="LINKING_CORD",E[E.SUN_STONE=2]="SUN_STONE",E[E.MOON_STONE=3]="MOON_STONE",E[E.LEAF_STONE=4]="LEAF_STONE",E[E.FIRE_STONE=5]="FIRE_STONE",E[E.WATER_STONE=6]="WATER_STONE",E[E.THUNDER_STONE=7]="THUNDER_STONE",E[E.ICE_STONE=8]="ICE_STONE",E[E.DUSK_STONE=9]="DUSK_STONE",E[E.DAWN_STONE=10]="DAWN_STONE",E[E.SHINY_STONE=11]="SHINY_STONE",E[E.CRACKED_POT=12]="CRACKED_POT",E[E.SWEET_APPLE=13]="SWEET_APPLE",E[E.TART_APPLE=14]="TART_APPLE",E[E.STRAWBERRY_SWEET=15]="STRAWBERRY_SWEET",E[E.UNREMARKABLE_TEACUP=16]="UNREMARKABLE_TEACUP",E[E.UPGRADE=17]="UPGRADE",E[E.DUBIOUS_DISC=18]="DUBIOUS_DISC",E[E.DRAGON_SCALE=19]="DRAGON_SCALE",E[E.PRISM_SCALE=20]="PRISM_SCALE",E[E.RAZOR_CLAW=21]="RAZOR_CLAW",E[E.RAZOR_FANG=22]="RAZOR_FANG",E[E.REAPER_CLOTH=23]="REAPER_CLOTH",E[E.ELECTIRIZER=24]="ELECTIRIZER",E[E.MAGMARIZER=25]="MAGMARIZER",E[E.PROTECTOR=26]="PROTECTOR",E[E.SACHET=27]="SACHET",E[E.WHIPPED_DREAM=28]="WHIPPED_DREAM",E[E.SYRUPY_APPLE=29]="SYRUPY_APPLE",E[E.CHIPPED_POT=30]="CHIPPED_POT",E[E.GALARICA_CUFF=31]="GALARICA_CUFF",E[E.GALARICA_WREATH=32]="GALARICA_WREATH",E[E.AUSPICIOUS_ARMOR=33]="AUSPICIOUS_ARMOR",E[E.MALICIOUS_ARMOR=34]="MALICIOUS_ARMOR",E[E.MASTERPIECE_TEACUP=35]="MASTERPIECE_TEACUP",E[E.SUN_FLUTE=36]="SUN_FLUTE",E[E.MOON_FLUTE=37]="MOON_FLUTE",E[E.BLACK_AUGURITE=51]="BLACK_AUGURITE",E[E.PEAT_BLOCK=52]="PEAT_BLOCK",E[E.METAL_ALLOY=53]="METAL_ALLOY",E[E.SCROLL_OF_DARKNESS=54]="SCROLL_OF_DARKNESS",E[E.SCROLL_OF_WATERS=55]="SCROLL_OF_WATERS",E[E.LEADERS_CREST=56]="LEADERS_CREST",E))(sL||{});const SV=class SV{constructor(A,s,R,I,i,a,L){this.speciesId=A,this.preFormKey=s,this.evoFormKey=R,this.level=I,this.item=i||0,this.condition=a,this.wildDelay=L??0}};T(SV,"SpeciesFormEvolution");let Mt=SV;const oV=class oV extends Mt{constructor(A,s,R,I,i){super(A,null,null,s,R,I,i)}};T(oV,"SpeciesEvolution");let m=oV;const lV=class lV extends Mt{constructor(A,s){super(s.speciesId,s.preFormKey,s.evoFormKey,s.level,s.item,s.condition,s.wildDelay),this.primarySpeciesId=A}};T(lV,"FusionSpeciesFormEvolution");let cI=lV;const CV=class CV{constructor(A,s){this.predicate=A,this.enforceFunc=s}};T(CV,"SpeciesEvolutionCondition");let Xe=CV;const UV=class UV extends Xe{constructor(A,s,R){super(I=>I.friendship>=A&&(!s||s(I)),R)}};T(UV,"SpeciesFriendshipEvolutionCondition");let ZA=UV;const Ht={[e.BULBASAUR]:[new m(e.IVYSAUR,16,null,null)],[e.IVYSAUR]:[new m(e.VENUSAUR,32,null,null)],[e.CHARMANDER]:[new m(e.CHARMELEON,16,null,null)],[e.CHARMELEON]:[new m(e.CHARIZARD,36,null,null)],[e.SQUIRTLE]:[new m(e.WARTORTLE,16,null,null)],[e.WARTORTLE]:[new m(e.BLASTOISE,36,null,null)],[e.CATERPIE]:[new m(e.METAPOD,7,null,null)],[e.METAPOD]:[new m(e.BUTTERFREE,10,null,null)],[e.WEEDLE]:[new m(e.KAKUNA,7,null,null)],[e.KAKUNA]:[new m(e.BEEDRILL,10,null,null)],[e.PIDGEY]:[new m(e.PIDGEOTTO,18,null,null)],[e.PIDGEOTTO]:[new m(e.PIDGEOT,36,null,null)],[e.RATTATA]:[new m(e.RATICATE,20,null,null)],[e.SPEAROW]:[new m(e.FEAROW,20,null,null)],[e.EKANS]:[new m(e.ARBOK,22,null,null)],[e.SANDSHREW]:[new m(e.SANDSLASH,22,null,null)],[e.NIDORAN_F]:[new m(e.NIDORINA,16,null,null)],[e.NIDORAN_M]:[new m(e.NIDORINO,16,null,null)],[e.ZUBAT]:[new m(e.GOLBAT,22,null,null)],[e.ODDISH]:[new m(e.GLOOM,21,null,null)],[e.PARAS]:[new m(e.PARASECT,24,null,null)],[e.VENONAT]:[new m(e.VENOMOTH,31,null,null)],[e.DIGLETT]:[new m(e.DUGTRIO,26,null,null)],[e.MEOWTH]:[new Mt(e.PERSIAN,"","",28,null,null)],[e.PSYDUCK]:[new m(e.GOLDUCK,33,null,null)],[e.MANKEY]:[new m(e.PRIMEAPE,28,null,null)],[e.POLIWAG]:[new m(e.POLIWHIRL,25,null,null)],[e.ABRA]:[new m(e.KADABRA,16,null,null)],[e.MACHOP]:[new m(e.MACHOKE,28,null,null)],[e.BELLSPROUT]:[new m(e.WEEPINBELL,21,null,null)],[e.TENTACOOL]:[new m(e.TENTACRUEL,30,null,null)],[e.GEODUDE]:[new m(e.GRAVELER,25,null,null)],[e.PONYTA]:[new m(e.RAPIDASH,40,null,null)],[e.SLOWPOKE]:[new m(e.SLOWBRO,37,null,null),new m(e.SLOWKING,1,1,null,4)],[e.MAGNEMITE]:[new m(e.MAGNETON,30,null,null)],[e.DODUO]:[new m(e.DODRIO,31,null,null)],[e.SEEL]:[new m(e.DEWGONG,34,null,null)],[e.GRIMER]:[new m(e.MUK,38,null,null)],[e.GASTLY]:[new m(e.HAUNTER,25,null,null)],[e.DROWZEE]:[new m(e.HYPNO,26,null,null)],[e.KRABBY]:[new m(e.KINGLER,28,null,null)],[e.VOLTORB]:[new m(e.ELECTRODE,30,null,null)],[e.CUBONE]:[new m(e.ALOLA_MAROWAK,28,null,new Xe(E=>E.scene.arena.getTimeOfDay()===N.DUSK||E.scene.arena.getTimeOfDay()===N.NIGHT)),new m(e.MAROWAK,28,null,new Xe(E=>E.scene.arena.getTimeOfDay()===N.DAWN||E.scene.arena.getTimeOfDay()===N.DAY))],[e.TYROGUE]:[new m(e.HITMONLEE,20,null,new Xe(E=>{var A;return((A=E.getMoveset(!0).find(s=>s&&[t.LOW_SWEEP,t.MACH_PUNCH,t.RAPID_SPIN].includes(s==null?void 0:s.moveId)))==null?void 0:A.moveId)===t.LOW_SWEEP})),new m(e.HITMONCHAN,20,null,new Xe(E=>{var A;return((A=E.getMoveset(!0).find(s=>s&&[t.LOW_SWEEP,t.MACH_PUNCH,t.RAPID_SPIN].includes(s==null?void 0:s.moveId)))==null?void 0:A.moveId)===t.MACH_PUNCH})),new m(e.HITMONTOP,20,null,new Xe(E=>{var A;return((A=E.getMoveset(!0).find(s=>s&&[t.LOW_SWEEP,t.MACH_PUNCH,t.RAPID_SPIN].includes(s==null?void 0:s.moveId)))==null?void 0:A.moveId)===t.RAPID_SPIN}))],[e.KOFFING]:[new m(e.GALAR_WEEZING,35,null,new Xe(E=>E.scene.arena.getTimeOfDay()===N.DUSK||E.scene.arena.getTimeOfDay()===N.NIGHT)),new m(e.WEEZING,35,null,new Xe(E=>E.scene.arena.getTimeOfDay()===N.DAWN||E.scene.arena.getTimeOfDay()===N.DAY))],[e.RHYHORN]:[new m(e.RHYDON,42,null,null)],[e.HORSEA]:[new m(e.SEADRA,32,null,null)],[e.GOLDEEN]:[new m(e.SEAKING,33,null,null)],[e.SMOOCHUM]:[new m(e.JYNX,30,null,null)],[e.ELEKID]:[new m(e.ELECTABUZZ,30,null,null)],[e.MAGBY]:[new m(e.MAGMAR,30,null,null)],[e.MAGIKARP]:[new m(e.GYARADOS,20,null,null)],[e.OMANYTE]:[new m(e.OMASTAR,40,null,null)],[e.KABUTO]:[new m(e.KABUTOPS,40,null,null)],[e.DRATINI]:[new m(e.DRAGONAIR,30,null,null)],[e.DRAGONAIR]:[new m(e.DRAGONITE,55,null,null)],[e.CHIKORITA]:[new m(e.BAYLEEF,16,null,null)],[e.BAYLEEF]:[new m(e.MEGANIUM,32,null,null)],[e.CYNDAQUIL]:[new m(e.QUILAVA,14,null,null)],[e.QUILAVA]:[new m(e.HISUI_TYPHLOSION,36,null,new Xe(E=>E.scene.arena.getTimeOfDay()===N.DUSK||E.scene.arena.getTimeOfDay()===N.NIGHT)),new m(e.TYPHLOSION,36,null,new Xe(E=>E.scene.arena.getTimeOfDay()===N.DAWN||E.scene.arena.getTimeOfDay()===N.DAY))],[e.TOTODILE]:[new m(e.CROCONAW,18,null,null)],[e.CROCONAW]:[new m(e.FERALIGATR,30,null,null)],[e.SENTRET]:[new m(e.FURRET,15,null,null)],[e.HOOTHOOT]:[new m(e.NOCTOWL,20,null,null)],[e.LEDYBA]:[new m(e.LEDIAN,18,null,null)],[e.SPINARAK]:[new m(e.ARIADOS,22,null,null)],[e.CHINCHOU]:[new m(e.LANTURN,27,null,null)],[e.NATU]:[new m(e.XATU,25,null,null)],[e.MAREEP]:[new m(e.FLAAFFY,15,null,null)],[e.FLAAFFY]:[new m(e.AMPHAROS,30,null,null)],[e.MARILL]:[new m(e.AZUMARILL,18,null,null)],[e.HOPPIP]:[new m(e.SKIPLOOM,18,null,null)],[e.SKIPLOOM]:[new m(e.JUMPLUFF,27,null,null)],[e.WOOPER]:[new m(e.QUAGSIRE,20,null,null)],[e.WYNAUT]:[new m(e.WOBBUFFET,15,null,null)],[e.PINECO]:[new m(e.FORRETRESS,31,null,null)],[e.SNUBBULL]:[new m(e.GRANBULL,23,null,null)],[e.TEDDIURSA]:[new m(e.URSARING,30,null,null)],[e.SLUGMA]:[new m(e.MAGCARGO,38,null,null)],[e.SWINUB]:[new m(e.PILOSWINE,33,null,null)],[e.REMORAID]:[new m(e.OCTILLERY,25,null,null)],[e.HOUNDOUR]:[new m(e.HOUNDOOM,24,null,null)],[e.PHANPY]:[new m(e.DONPHAN,25,null,null)],[e.LARVITAR]:[new m(e.PUPITAR,30,null,null)],[e.PUPITAR]:[new m(e.TYRANITAR,55,null,null)],[e.TREECKO]:[new m(e.GROVYLE,16,null,null)],[e.GROVYLE]:[new m(e.SCEPTILE,36,null,null)],[e.TORCHIC]:[new m(e.COMBUSKEN,16,null,null)],[e.COMBUSKEN]:[new m(e.BLAZIKEN,36,null,null)],[e.MUDKIP]:[new m(e.MARSHTOMP,16,null,null)],[e.MARSHTOMP]:[new m(e.SWAMPERT,36,null,null)],[e.POOCHYENA]:[new m(e.MIGHTYENA,18,null,null)],[e.ZIGZAGOON]:[new m(e.LINOONE,20,null,null)],[e.WURMPLE]:[new m(e.SILCOON,7,null,new Xe(E=>E.scene.arena.getTimeOfDay()===N.DAWN||E.scene.arena.getTimeOfDay()===N.DAY)),new m(e.CASCOON,7,null,new Xe(E=>E.scene.arena.getTimeOfDay()===N.DUSK||E.scene.arena.getTimeOfDay()===N.NIGHT))],[e.SILCOON]:[new m(e.BEAUTIFLY,10,null,null)],[e.CASCOON]:[new m(e.DUSTOX,10,null,null)],[e.LOTAD]:[new m(e.LOMBRE,14,null,null)],[e.SEEDOT]:[new m(e.NUZLEAF,14,null,null)],[e.TAILLOW]:[new m(e.SWELLOW,22,null,null)],[e.WINGULL]:[new m(e.PELIPPER,25,null,null)],[e.RALTS]:[new m(e.KIRLIA,20,null,null)],[e.KIRLIA]:[new m(e.GARDEVOIR,30,null,new Xe(E=>E.gender===ye.FEMALE,E=>E.gender=ye.FEMALE)),new m(e.GALLADE,30,null,new Xe(E=>E.gender===ye.MALE,E=>E.gender=ye.MALE))],[e.SURSKIT]:[new m(e.MASQUERAIN,22,null,null)],[e.SHROOMISH]:[new m(e.BRELOOM,23,null,null)],[e.SLAKOTH]:[new m(e.VIGOROTH,18,null,null)],[e.VIGOROTH]:[new m(e.SLAKING,36,null,null)],[e.NINCADA]:[new m(e.NINJASK,20,null,null),new m(e.SHEDINJA,20,null,new Xe(E=>E.scene.getParty().length<6&&E.scene.pokeballCounts[ge.POKEBALL]>0))],[e.WHISMUR]:[new m(e.LOUDRED,20,null,null)],[e.LOUDRED]:[new m(e.EXPLOUD,40,null,null)],[e.MAKUHITA]:[new m(e.HARIYAMA,24,null,null)],[e.ARON]:[new m(e.LAIRON,32,null,null)],[e.LAIRON]:[new m(e.AGGRON,42,null,null)],[e.MEDITITE]:[new m(e.MEDICHAM,37,null,null)],[e.ELECTRIKE]:[new m(e.MANECTRIC,26,null,null)],[e.GULPIN]:[new m(e.SWALOT,26,null,null)],[e.CARVANHA]:[new m(e.SHARPEDO,30,null,null)],[e.WAILMER]:[new m(e.WAILORD,40,null,null)],[e.NUMEL]:[new m(e.CAMERUPT,33,null,null)],[e.SPOINK]:[new m(e.GRUMPIG,32,null,null)],[e.TRAPINCH]:[new m(e.VIBRAVA,35,null,null)],[e.VIBRAVA]:[new m(e.FLYGON,45,null,null)],[e.CACNEA]:[new m(e.CACTURNE,32,null,null)],[e.SWABLU]:[new m(e.ALTARIA,35,null,null)],[e.BARBOACH]:[new m(e.WHISCASH,30,null,null)],[e.CORPHISH]:[new m(e.CRAWDAUNT,30,null,null)],[e.BALTOY]:[new m(e.CLAYDOL,36,null,null)],[e.LILEEP]:[new m(e.CRADILY,40,null,null)],[e.ANORITH]:[new m(e.ARMALDO,40,null,null)],[e.SHUPPET]:[new m(e.BANETTE,37,null,null)],[e.DUSKULL]:[new m(e.DUSCLOPS,37,null,null)],[e.SNORUNT]:[new m(e.GLALIE,42,null,new Xe(E=>E.gender===ye.MALE,E=>E.gender=ye.MALE)),new m(e.FROSLASS,42,null,new Xe(E=>E.gender===ye.FEMALE,E=>E.gender=ye.FEMALE))],[e.SPHEAL]:[new m(e.SEALEO,32,null,null)],[e.SEALEO]:[new m(e.WALREIN,44,null,null)],[e.BAGON]:[new m(e.SHELGON,30,null,null)],[e.SHELGON]:[new m(e.SALAMENCE,50,null,null)],[e.BELDUM]:[new m(e.METANG,20,null,null)],[e.METANG]:[new m(e.METAGROSS,45,null,null)],[e.TURTWIG]:[new m(e.GROTLE,18,null,null)],[e.GROTLE]:[new m(e.TORTERRA,32,null,null)],[e.CHIMCHAR]:[new m(e.MONFERNO,14,null,null)],[e.MONFERNO]:[new m(e.INFERNAPE,36,null,null)],[e.PIPLUP]:[new m(e.PRINPLUP,16,null,null)],[e.PRINPLUP]:[new m(e.EMPOLEON,36,null,null)],[e.STARLY]:[new m(e.STARAVIA,14,null,null)],[e.STARAVIA]:[new m(e.STARAPTOR,34,null,null)],[e.BIDOOF]:[new m(e.BIBAREL,15,null,null)],[e.KRICKETOT]:[new m(e.KRICKETUNE,10,null,null)],[e.SHINX]:[new m(e.LUXIO,15,null,null)],[e.LUXIO]:[new m(e.LUXRAY,30,null,null)],[e.CRANIDOS]:[new m(e.RAMPARDOS,30,null,null)],[e.SHIELDON]:[new m(e.BASTIODON,30,null,null)],[e.BURMY]:[new m(e.MOTHIM,20,null,new Xe(E=>E.gender===ye.MALE,E=>E.gender=ye.MALE)),new m(e.WORMADAM,20,null,new Xe(E=>E.gender===ye.FEMALE,E=>E.gender=ye.FEMALE))],[e.COMBEE]:[new m(e.VESPIQUEN,21,null,new Xe(E=>E.gender===ye.FEMALE,E=>E.gender=ye.FEMALE))],[e.BUIZEL]:[new m(e.FLOATZEL,26,null,null)],[e.CHERUBI]:[new m(e.CHERRIM,25,null,null)],[e.SHELLOS]:[new m(e.GASTRODON,30,null,null)],[e.DRIFLOON]:[new m(e.DRIFBLIM,28,null,null)],[e.GLAMEOW]:[new m(e.PURUGLY,38,null,null)],[e.STUNKY]:[new m(e.SKUNTANK,34,null,null)],[e.BRONZOR]:[new m(e.BRONZONG,33,null,null)],[e.GIBLE]:[new m(e.GABITE,24,null,null)],[e.GABITE]:[new m(e.GARCHOMP,48,null,null)],[e.HIPPOPOTAS]:[new m(e.HIPPOWDON,34,null,null)],[e.SKORUPI]:[new m(e.DRAPION,40,null,null)],[e.CROAGUNK]:[new m(e.TOXICROAK,37,null,null)],[e.FINNEON]:[new m(e.LUMINEON,31,null,null)],[e.MANTYKE]:[new m(e.MANTINE,32,null,new Xe(E=>!!E.scene.gameData.dexData[e.REMORAID].caughtAttr),2)],[e.SNOVER]:[new m(e.ABOMASNOW,40,null,null)],[e.SNIVY]:[new m(e.SERVINE,17,null,null)],[e.SERVINE]:[new m(e.SERPERIOR,36,null,null)],[e.TEPIG]:[new m(e.PIGNITE,17,null,null)],[e.PIGNITE]:[new m(e.EMBOAR,36,null,null)],[e.OSHAWOTT]:[new m(e.DEWOTT,17,null,null)],[e.DEWOTT]:[new m(e.HISUI_SAMUROTT,36,null,new Xe(E=>E.scene.arena.getTimeOfDay()===N.DUSK||E.scene.arena.getTimeOfDay()===N.NIGHT)),new m(e.SAMUROTT,36,null,new Xe(E=>E.scene.arena.getTimeOfDay()===N.DAWN||E.scene.arena.getTimeOfDay()===N.DAY))],[e.PATRAT]:[new m(e.WATCHOG,20,null,null)],[e.LILLIPUP]:[new m(e.HERDIER,16,null,null)],[e.HERDIER]:[new m(e.STOUTLAND,32,null,null)],[e.PURRLOIN]:[new m(e.LIEPARD,20,null,null)],[e.PIDOVE]:[new m(e.TRANQUILL,21,null,null)],[e.TRANQUILL]:[new m(e.UNFEZANT,32,null,null)],[e.BLITZLE]:[new m(e.ZEBSTRIKA,27,null,null)],[e.ROGGENROLA]:[new m(e.BOLDORE,25,null,null)],[e.DRILBUR]:[new m(e.EXCADRILL,31,null,null)],[e.TIMBURR]:[new m(e.GURDURR,25,null,null)],[e.TYMPOLE]:[new m(e.PALPITOAD,25,null,null)],[e.PALPITOAD]:[new m(e.SEISMITOAD,36,null,null)],[e.SEWADDLE]:[new m(e.SWADLOON,20,null,null)],[e.VENIPEDE]:[new m(e.WHIRLIPEDE,22,null,null)],[e.WHIRLIPEDE]:[new m(e.SCOLIPEDE,30,null,null)],[e.SANDILE]:[new m(e.KROKOROK,29,null,null)],[e.KROKOROK]:[new m(e.KROOKODILE,40,null,null)],[e.DARUMAKA]:[new m(e.DARMANITAN,35,null,null)],[e.DWEBBLE]:[new m(e.CRUSTLE,34,null,null)],[e.SCRAGGY]:[new m(e.SCRAFTY,39,null,null)],[e.YAMASK]:[new m(e.COFAGRIGUS,34,null,null)],[e.TIRTOUGA]:[new m(e.CARRACOSTA,37,null,null)],[e.ARCHEN]:[new m(e.ARCHEOPS,37,null,null)],[e.TRUBBISH]:[new m(e.GARBODOR,36,null,null)],[e.ZORUA]:[new m(e.ZOROARK,30,null,null)],[e.GOTHITA]:[new m(e.GOTHORITA,32,null,null)],[e.GOTHORITA]:[new m(e.GOTHITELLE,41,null,null)],[e.SOLOSIS]:[new m(e.DUOSION,32,null,null)],[e.DUOSION]:[new m(e.REUNICLUS,41,null,null)],[e.DUCKLETT]:[new m(e.SWANNA,35,null,null)],[e.VANILLITE]:[new m(e.VANILLISH,35,null,null)],[e.VANILLISH]:[new m(e.VANILLUXE,47,null,null)],[e.DEERLING]:[new m(e.SAWSBUCK,34,null,null)],[e.FOONGUS]:[new m(e.AMOONGUSS,39,null,null)],[e.FRILLISH]:[new m(e.JELLICENT,40,null,null)],[e.JOLTIK]:[new m(e.GALVANTULA,36,null,null)],[e.FERROSEED]:[new m(e.FERROTHORN,40,null,null)],[e.KLINK]:[new m(e.KLANG,38,null,null)],[e.KLANG]:[new m(e.KLINKLANG,49,null,null)],[e.TYNAMO]:[new m(e.EELEKTRIK,39,null,null)],[e.ELGYEM]:[new m(e.BEHEEYEM,42,null,null)],[e.LITWICK]:[new m(e.LAMPENT,41,null,null)],[e.AXEW]:[new m(e.FRAXURE,38,null,null)],[e.FRAXURE]:[new m(e.HAXORUS,48,null,null)],[e.CUBCHOO]:[new m(e.BEARTIC,37,null,null)],[e.MIENFOO]:[new m(e.MIENSHAO,50,null,null)],[e.GOLETT]:[new m(e.GOLURK,43,null,null)],[e.PAWNIARD]:[new m(e.BISHARP,52,null,null)],[e.BISHARP]:[new m(e.KINGAMBIT,1,56,null,4)],[e.RUFFLET]:[new m(e.HISUI_BRAVIARY,54,null,new Xe(E=>E.scene.arena.getTimeOfDay()===N.DUSK||E.scene.arena.getTimeOfDay()===N.NIGHT)),new m(e.BRAVIARY,54,null,new Xe(E=>E.scene.arena.getTimeOfDay()===N.DAWN||E.scene.arena.getTimeOfDay()===N.DAY))],[e.VULLABY]:[new m(e.MANDIBUZZ,54,null,null)],[e.DEINO]:[new m(e.ZWEILOUS,50,null,null)],[e.ZWEILOUS]:[new m(e.HYDREIGON,64,null,null)],[e.LARVESTA]:[new m(e.VOLCARONA,59,null,null)],[e.CHESPIN]:[new m(e.QUILLADIN,16,null,null)],[e.QUILLADIN]:[new m(e.CHESNAUGHT,36,null,null)],[e.FENNEKIN]:[new m(e.BRAIXEN,16,null,null)],[e.BRAIXEN]:[new m(e.DELPHOX,36,null,null)],[e.FROAKIE]:[new m(e.FROGADIER,16,null,null)],[e.FROGADIER]:[new m(e.GRENINJA,36,null,null)],[e.BUNNELBY]:[new m(e.DIGGERSBY,20,null,null)],[e.FLETCHLING]:[new m(e.FLETCHINDER,17,null,null)],[e.FLETCHINDER]:[new m(e.TALONFLAME,35,null,null)],[e.SCATTERBUG]:[new m(e.SPEWPA,9,null,null)],[e.SPEWPA]:[new m(e.VIVILLON,12,null,null)],[e.LITLEO]:[new m(e.PYROAR,35,null,null)],[e.FLABEBE]:[new m(e.FLOETTE,19,null,null)],[e.SKIDDO]:[new m(e.GOGOAT,32,null,null)],[e.PANCHAM]:[new m(e.PANGORO,32,null,new Xe(E=>!!E.scene.getParty().find(A=>A.getTypes(!1,!1,!0).indexOf(n.DARK)>-1)),2)],[e.ESPURR]:[new Mt(e.MEOWSTIC,"","female",25,null,new Xe(E=>E.gender===ye.FEMALE,E=>E.gender=ye.FEMALE)),new Mt(e.MEOWSTIC,"","",25,null,new Xe(E=>E.gender===ye.MALE,E=>E.gender=ye.MALE))],[e.HONEDGE]:[new m(e.DOUBLADE,35,null,null)],[e.INKAY]:[new m(e.MALAMAR,30,null,null)],[e.BINACLE]:[new m(e.BARBARACLE,39,null,null)],[e.SKRELP]:[new m(e.DRAGALGE,48,null,null)],[e.CLAUNCHER]:[new m(e.CLAWITZER,37,null,null)],[e.TYRUNT]:[new m(e.TYRANTRUM,39,null,new Xe(E=>E.scene.arena.getTimeOfDay()===N.DAWN||E.scene.arena.getTimeOfDay()===N.DAY))],[e.AMAURA]:[new m(e.AURORUS,39,null,new Xe(E=>E.scene.arena.getTimeOfDay()===N.DUSK||E.scene.arena.getTimeOfDay()===N.NIGHT))],[e.GOOMY]:[new m(e.HISUI_SLIGGOO,40,null,new Xe(E=>E.scene.arena.getTimeOfDay()===N.DUSK||E.scene.arena.getTimeOfDay()===N.NIGHT)),new m(e.SLIGGOO,40,null,new Xe(E=>E.scene.arena.getTimeOfDay()===N.DAWN||E.scene.arena.getTimeOfDay()===N.DAY))],[e.SLIGGOO]:[new m(e.GOODRA,50,null,new Xe(E=>{var A;return[Q.RAIN,Q.FOG,Q.HEAVY_RAIN].indexOf(((A=E.scene.arena.weather)==null?void 0:A.weatherType)||Q.NONE)>-1}),3)],[e.BERGMITE]:[new m(e.HISUI_AVALUGG,37,null,new Xe(E=>E.scene.arena.getTimeOfDay()===N.DUSK||E.scene.arena.getTimeOfDay()===N.NIGHT)),new m(e.AVALUGG,37,null,new Xe(E=>E.scene.arena.getTimeOfDay()===N.DAWN||E.scene.arena.getTimeOfDay()===N.DAY))],[e.NOIBAT]:[new m(e.NOIVERN,48,null,null)],[e.ROWLET]:[new m(e.DARTRIX,17,null,null)],[e.DARTRIX]:[new m(e.HISUI_DECIDUEYE,36,null,new Xe(E=>E.scene.arena.getTimeOfDay()===N.DUSK||E.scene.arena.getTimeOfDay()===N.NIGHT)),new m(e.DECIDUEYE,34,null,new Xe(E=>E.scene.arena.getTimeOfDay()===N.DAWN||E.scene.arena.getTimeOfDay()===N.DAY))],[e.LITTEN]:[new m(e.TORRACAT,17,null,null)],[e.TORRACAT]:[new m(e.INCINEROAR,34,null,null)],[e.POPPLIO]:[new m(e.BRIONNE,17,null,null)],[e.BRIONNE]:[new m(e.PRIMARINA,34,null,null)],[e.PIKIPEK]:[new m(e.TRUMBEAK,14,null,null)],[e.TRUMBEAK]:[new m(e.TOUCANNON,28,null,null)],[e.YUNGOOS]:[new m(e.GUMSHOOS,20,null,new Xe(E=>E.scene.arena.getTimeOfDay()===N.DAWN||E.scene.arena.getTimeOfDay()===N.DAY))],[e.GRUBBIN]:[new m(e.CHARJABUG,20,null,null)],[e.CUTIEFLY]:[new m(e.RIBOMBEE,25,null,null)],[e.MAREANIE]:[new m(e.TOXAPEX,38,null,null)],[e.MUDBRAY]:[new m(e.MUDSDALE,30,null,null)],[e.DEWPIDER]:[new m(e.ARAQUANID,22,null,null)],[e.FOMANTIS]:[new m(e.LURANTIS,34,null,new Xe(E=>E.scene.arena.getTimeOfDay()===N.DAWN||E.scene.arena.getTimeOfDay()===N.DAY))],[e.MORELULL]:[new m(e.SHIINOTIC,24,null,null)],[e.SALANDIT]:[new m(e.SALAZZLE,33,null,new Xe(E=>E.gender===ye.FEMALE,E=>E.gender=ye.FEMALE))],[e.STUFFUL]:[new m(e.BEWEAR,27,null,null)],[e.BOUNSWEET]:[new m(e.STEENEE,18,null,null)],[e.WIMPOD]:[new m(e.GOLISOPOD,30,null,null)],[e.SANDYGAST]:[new m(e.PALOSSAND,42,null,null)],[e.JANGMO_O]:[new m(e.HAKAMO_O,35,null,null)],[e.HAKAMO_O]:[new m(e.KOMMO_O,45,null,null)],[e.COSMOG]:[new m(e.COSMOEM,23,null,null)],[e.COSMOEM]:[new m(e.SOLGALEO,53,36,null,4),new m(e.LUNALA,53,37,null,4)],[e.MELTAN]:[new m(e.MELMETAL,48,null,null)],[e.ALOLA_RATTATA]:[new m(e.ALOLA_RATICATE,20,null,new Xe(E=>E.scene.arena.getTimeOfDay()===N.DUSK||E.scene.arena.getTimeOfDay()===N.NIGHT))],[e.ALOLA_DIGLETT]:[new m(e.ALOLA_DUGTRIO,26,null,null)],[e.ALOLA_GEODUDE]:[new m(e.ALOLA_GRAVELER,25,null,null)],[e.ALOLA_GRIMER]:[new m(e.ALOLA_MUK,38,null,null)],[e.GROOKEY]:[new m(e.THWACKEY,16,null,null)],[e.THWACKEY]:[new m(e.RILLABOOM,35,null,null)],[e.SCORBUNNY]:[new m(e.RABOOT,16,null,null)],[e.RABOOT]:[new m(e.CINDERACE,35,null,null)],[e.SOBBLE]:[new m(e.DRIZZILE,16,null,null)],[e.DRIZZILE]:[new m(e.INTELEON,35,null,null)],[e.SKWOVET]:[new m(e.GREEDENT,24,null,null)],[e.ROOKIDEE]:[new m(e.CORVISQUIRE,18,null,null)],[e.CORVISQUIRE]:[new m(e.CORVIKNIGHT,38,null,null)],[e.BLIPBUG]:[new m(e.DOTTLER,10,null,null)],[e.DOTTLER]:[new m(e.ORBEETLE,30,null,null)],[e.NICKIT]:[new m(e.THIEVUL,18,null,null)],[e.GOSSIFLEUR]:[new m(e.ELDEGOSS,20,null,null)],[e.WOOLOO]:[new m(e.DUBWOOL,24,null,null)],[e.CHEWTLE]:[new m(e.DREDNAW,22,null,null)],[e.YAMPER]:[new m(e.BOLTUND,25,null,null)],[e.ROLYCOLY]:[new m(e.CARKOL,18,null,null)],[e.CARKOL]:[new m(e.COALOSSAL,34,null,null)],[e.SILICOBRA]:[new m(e.SANDACONDA,36,null,null)],[e.ARROKUDA]:[new m(e.BARRASKEWDA,26,null,null)],[e.TOXEL]:[new Mt(e.TOXTRICITY,"","lowkey",30,null,new Xe(E=>[be.LONELY,be.BOLD,be.RELAXED,be.TIMID,be.SERIOUS,be.MODEST,be.MILD,be.QUIET,be.BASHFUL,be.CALM,be.GENTLE,be.CAREFUL].indexOf(E.getNature())>-1)),new Mt(e.TOXTRICITY,"","amped",30,null,null)],[e.SIZZLIPEDE]:[new m(e.CENTISKORCH,28,null,null)],[e.HATENNA]:[new m(e.HATTREM,32,null,null)],[e.HATTREM]:[new m(e.HATTERENE,42,null,null)],[e.IMPIDIMP]:[new m(e.MORGREM,32,null,null)],[e.MORGREM]:[new m(e.GRIMMSNARL,42,null,null)],[e.CUFANT]:[new m(e.COPPERAJAH,34,null,null)],[e.DREEPY]:[new m(e.DRAKLOAK,50,null,null)],[e.DRAKLOAK]:[new m(e.DRAGAPULT,60,null,null)],[e.GALAR_MEOWTH]:[new m(e.PERRSERKER,28,null,null)],[e.GALAR_PONYTA]:[new m(e.GALAR_RAPIDASH,40,null,null)],[e.GALAR_FARFETCHD]:[new m(e.SIRFETCHD,30,null,null,3)],[e.GALAR_SLOWPOKE]:[new m(e.GALAR_SLOWBRO,1,31,null,4),new m(e.GALAR_SLOWKING,1,32,null,4)],[e.GALAR_MR_MIME]:[new m(e.MR_RIME,42,null,null)],[e.GALAR_CORSOLA]:[new m(e.CURSOLA,38,null,null)],[e.GALAR_ZIGZAGOON]:[new m(e.GALAR_LINOONE,20,null,null)],[e.GALAR_LINOONE]:[new m(e.OBSTAGOON,35,null,new Xe(E=>E.scene.arena.getTimeOfDay()===N.DUSK||E.scene.arena.getTimeOfDay()===N.NIGHT))],[e.GALAR_YAMASK]:[new m(e.RUNERIGUS,34,null,null)],[e.HISUI_ZORUA]:[new m(e.HISUI_ZOROARK,30,null,null)],[e.HISUI_SLIGGOO]:[new m(e.HISUI_GOODRA,50,null,new Xe(E=>{var A;return[Q.RAIN,Q.FOG,Q.HEAVY_RAIN].indexOf(((A=E.scene.arena.weather)==null?void 0:A.weatherType)||Q.NONE)>-1}),3)],[e.SPRIGATITO]:[new m(e.FLORAGATO,16,null,null)],[e.FLORAGATO]:[new m(e.MEOWSCARADA,36,null,null)],[e.FUECOCO]:[new m(e.CROCALOR,16,null,null)],[e.CROCALOR]:[new m(e.SKELEDIRGE,36,null,null)],[e.QUAXLY]:[new m(e.QUAXWELL,16,null,null)],[e.QUAXWELL]:[new m(e.QUAQUAVAL,36,null,null)],[e.LECHONK]:[new Mt(e.OINKOLOGNE,"","female",18,null,new Xe(E=>E.gender===ye.FEMALE,E=>E.gender=ye.FEMALE)),new Mt(e.OINKOLOGNE,"","",18,null,new Xe(E=>E.gender===ye.MALE,E=>E.gender=ye.MALE))],[e.TAROUNTULA]:[new m(e.SPIDOPS,15,null,null)],[e.NYMBLE]:[new m(e.LOKIX,24,null,null)],[e.PAWMI]:[new m(e.PAWMO,18,null,null)],[e.PAWMO]:[new m(e.PAWMOT,32,null,null)],[e.TANDEMAUS]:[new Mt(e.MAUSHOLD,"","three",25,null,new Xe(E=>{let A=!1;return E.scene.executeWithSeedOffset(()=>A=!le(4),E.id),A})),new m(e.MAUSHOLD,25,null,null)],[e.FIDOUGH]:[new m(e.DACHSBUN,26,null,null)],[e.SMOLIV]:[new m(e.DOLLIV,25,null,null)],[e.DOLLIV]:[new m(e.ARBOLIVA,35,null,null)],[e.NACLI]:[new m(e.NACLSTACK,24,null,null)],[e.NACLSTACK]:[new m(e.GARGANACL,38,null,null)],[e.WATTREL]:[new m(e.KILOWATTREL,25,null,null)],[e.MASCHIFF]:[new m(e.MABOSSTIFF,30,null,null)],[e.SHROODLE]:[new m(e.GRAFAIAI,28,null,null)],[e.BRAMBLIN]:[new m(e.BRAMBLEGHAST,30,null,null)],[e.TOEDSCOOL]:[new m(e.TOEDSCRUEL,30,null,null)],[e.RELLOR]:[new m(e.RABSCA,29,null,null)],[e.FLITTLE]:[new m(e.ESPATHRA,35,null,null)],[e.TINKATINK]:[new m(e.TINKATUFF,24,null,null)],[e.TINKATUFF]:[new m(e.TINKATON,38,null,null)],[e.WIGLETT]:[new m(e.WUGTRIO,26,null,null)],[e.FINIZEN]:[new m(e.PALAFIN,38,null,null)],[e.VAROOM]:[new m(e.REVAVROOM,40,null,null)],[e.GLIMMET]:[new m(e.GLIMMORA,35,null,null)],[e.GREAVARD]:[new m(e.HOUNDSTONE,30,null,new Xe(E=>E.scene.arena.getTimeOfDay()===N.DUSK||E.scene.arena.getTimeOfDay()===N.NIGHT))],[e.FRIGIBAX]:[new m(e.ARCTIBAX,35,null,null)],[e.ARCTIBAX]:[new m(e.BAXCALIBUR,54,null,null)],[e.PALDEA_WOOPER]:[new m(e.CLODSIRE,20,null,null)],[e.PIKACHU]:[new Mt(e.ALOLA_RAICHU,"","",1,11,null,3),new Mt(e.ALOLA_RAICHU,"partner","",1,11,null,3),new Mt(e.RAICHU,"","",1,7,null,3),new Mt(e.RAICHU,"partner","",1,7,null,3)],[e.NIDORINA]:[new m(e.NIDOQUEEN,1,3,null,3)],[e.NIDORINO]:[new m(e.NIDOKING,1,3,null,3)],[e.CLEFAIRY]:[new m(e.CLEFABLE,1,3,null,3)],[e.VULPIX]:[new m(e.NINETALES,1,5,null,3)],[e.JIGGLYPUFF]:[new m(e.WIGGLYTUFF,1,3,null,3)],[e.GLOOM]:[new m(e.VILEPLUME,1,4,null,3),new m(e.BELLOSSOM,1,2,null,3)],[e.GROWLITHE]:[new m(e.ARCANINE,1,5,null,3)],[e.POLIWHIRL]:[new m(e.POLIWRATH,1,6,null,3),new m(e.POLITOED,1,1,null,4)],[e.WEEPINBELL]:[new m(e.VICTREEBEL,1,4,null,3)],[e.MAGNETON]:[new m(e.MAGNEZONE,1,7,null,3)],[e.SHELLDER]:[new m(e.CLOYSTER,1,6,null,3)],[e.EXEGGCUTE]:[new m(e.ALOLA_EXEGGUTOR,1,2,null,3),new m(e.EXEGGUTOR,1,4,null,3)],[e.TANGELA]:[new m(e.TANGROWTH,34,null,new Xe(E=>E.moveset.filter(A=>(A==null?void 0:A.moveId)===t.ANCIENT_POWER).length>0),3)],[e.LICKITUNG]:[new m(e.LICKILICKY,32,null,new Xe(E=>E.moveset.filter(A=>(A==null?void 0:A.moveId)===t.ROLLOUT).length>0),3)],[e.STARYU]:[new m(e.STARMIE,1,6,null,3)],[e.EEVEE]:[new Mt(e.SYLVEON,"","",1,null,new ZA(120,E=>!!E.getMoveset().find(A=>(A==null?void 0:A.getMove().type)===n.FAIRY)),3),new Mt(e.SYLVEON,"partner","",1,null,new ZA(120,E=>!!E.getMoveset().find(A=>(A==null?void 0:A.getMove().type)===n.FAIRY)),3),new Mt(e.ESPEON,"","",1,null,new ZA(120,E=>E.scene.arena.getTimeOfDay()===N.DAY),3),new Mt(e.ESPEON,"partner","",1,null,new ZA(120,E=>E.scene.arena.getTimeOfDay()===N.DAY),3),new Mt(e.UMBREON,"","",1,null,new ZA(120,E=>E.scene.arena.getTimeOfDay()===N.NIGHT),3),new Mt(e.UMBREON,"partner","",1,null,new ZA(120,E=>E.scene.arena.getTimeOfDay()===N.NIGHT),3),new Mt(e.VAPOREON,"","",1,6,null,3),new Mt(e.VAPOREON,"partner","",1,6,null,3),new Mt(e.JOLTEON,"","",1,7,null,3),new Mt(e.JOLTEON,"partner","",1,7,null,3),new Mt(e.FLAREON,"","",1,5,null,3),new Mt(e.FLAREON,"partner","",1,5,null,3),new Mt(e.LEAFEON,"","",1,4,null,3),new Mt(e.LEAFEON,"partner","",1,4,null,3),new Mt(e.GLACEON,"","",1,8,null,3),new Mt(e.GLACEON,"partner","",1,8,null,3)],[e.TOGETIC]:[new m(e.TOGEKISS,1,11,null,4)],[e.AIPOM]:[new m(e.AMBIPOM,32,null,new Xe(E=>E.moveset.filter(A=>(A==null?void 0:A.moveId)===t.DOUBLE_HIT).length>0),3)],[e.SUNKERN]:[new m(e.SUNFLORA,1,2,null,3)],[e.YANMA]:[new m(e.YANMEGA,33,null,new Xe(E=>E.moveset.filter(A=>(A==null?void 0:A.moveId)===t.ANCIENT_POWER).length>0),3)],[e.MURKROW]:[new m(e.HONCHKROW,1,9,null,4)],[e.MISDREAVUS]:[new m(e.MISMAGIUS,1,9,null,4)],[e.GIRAFARIG]:[new m(e.FARIGIRAF,32,null,new Xe(E=>E.moveset.filter(A=>(A==null?void 0:A.moveId)===t.TWIN_BEAM).length>0),3)],[e.DUNSPARCE]:[new Mt(e.DUDUNSPARCE,"","three-segment",32,null,new Xe(E=>{let A=!1;return E.moveset.filter(s=>(s==null?void 0:s.moveId)===t.HYPER_DRILL).length>0&&E.scene.executeWithSeedOffset(()=>A=!le(4),E.id),A}),3),new m(e.DUDUNSPARCE,32,null,new Xe(E=>E.moveset.filter(A=>(A==null?void 0:A.moveId)===t.HYPER_DRILL).length>0),3)],[e.GLIGAR]:[new m(e.GLISCOR,1,22,new Xe(E=>E.scene.arena.getTimeOfDay()===N.DUSK||E.scene.arena.getTimeOfDay()===N.NIGHT),4)],[e.SNEASEL]:[new m(e.WEAVILE,1,21,new Xe(E=>E.scene.arena.getTimeOfDay()===N.DUSK||E.scene.arena.getTimeOfDay()===N.NIGHT),4)],[e.URSARING]:[new m(e.URSALUNA,1,52,null,4)],[e.PILOSWINE]:[new m(e.MAMOSWINE,1,null,new Xe(E=>E.moveset.filter(A=>(A==null?void 0:A.moveId)===t.ANCIENT_POWER).length>0),4)],[e.STANTLER]:[new m(e.WYRDEER,25,null,new Xe(E=>E.moveset.filter(A=>(A==null?void 0:A.moveId)===t.PSYSHIELD_BASH).length>0),4)],[e.LOMBRE]:[new m(e.LUDICOLO,1,6,null,3)],[e.NUZLEAF]:[new m(e.SHIFTRY,1,4,null,3)],[e.NOSEPASS]:[new m(e.PROBOPASS,1,7,null,3)],[e.SKITTY]:[new m(e.DELCATTY,1,3,null,3)],[e.ROSELIA]:[new m(e.ROSERADE,1,11,null,4)],[e.BONSLY]:[new m(e.SUDOWOODO,1,null,new Xe(E=>E.moveset.filter(A=>(A==null?void 0:A.moveId)===t.MIMIC).length>0),2)],[e.MIME_JR]:[new m(e.GALAR_MR_MIME,1,null,new Xe(E=>E.moveset.filter(A=>(A==null?void 0:A.moveId)===t.MIMIC).length>0&&(E.scene.arena.getTimeOfDay()===N.DUSK||E.scene.arena.getTimeOfDay()===N.NIGHT)),2),new m(e.MR_MIME,1,null,new Xe(E=>E.moveset.filter(A=>(A==null?void 0:A.moveId)===t.MIMIC).length>0&&(E.scene.arena.getTimeOfDay()===N.DAWN||E.scene.arena.getTimeOfDay()===N.DAY)),2)],[e.PANSAGE]:[new m(e.SIMISAGE,1,4,null,3)],[e.PANSEAR]:[new m(e.SIMISEAR,1,5,null,3)],[e.PANPOUR]:[new m(e.SIMIPOUR,1,6,null,3)],[e.MUNNA]:[new m(e.MUSHARNA,1,3,null,3)],[e.COTTONEE]:[new m(e.WHIMSICOTT,1,2,null,3)],[e.PETILIL]:[new m(e.HISUI_LILLIGANT,1,11,null,3),new m(e.LILLIGANT,1,2,null,3)],[e.BASCULIN]:[new Mt(e.BASCULEGION,"white-striped","female",40,null,new Xe(E=>E.gender===ye.FEMALE,E=>E.gender=ye.FEMALE),4),new Mt(e.BASCULEGION,"white-striped","male",40,null,new Xe(E=>E.gender===ye.MALE,E=>E.gender=ye.MALE),4)],[e.MINCCINO]:[new m(e.CINCCINO,1,11,null,3)],[e.EELEKTRIK]:[new m(e.EELEKTROSS,1,7,null,4)],[e.LAMPENT]:[new m(e.CHANDELURE,1,9,null,4)],[e.FLOETTE]:[new m(e.FLORGES,1,11,null,3)],[e.DOUBLADE]:[new m(e.AEGISLASH,1,9,null,3)],[e.HELIOPTILE]:[new m(e.HELIOLISK,1,2,null,3)],[e.CHARJABUG]:[new m(e.VIKAVOLT,1,7,null,3)],[e.CRABRAWLER]:[new m(e.CRABOMINABLE,1,8,null,3)],[e.ROCKRUFF]:[new Mt(e.LYCANROC,"","midday",25,null,new Xe(E=>(E.scene.arena.getTimeOfDay()===N.DAWN||E.scene.arena.getTimeOfDay()===N.DAY)&&E.formIndex===0)),new Mt(e.LYCANROC,"","dusk",25,null,new Xe(E=>E.formIndex===1)),new Mt(e.LYCANROC,"","midnight",25,null,new Xe(E=>(E.scene.arena.getTimeOfDay()===N.DUSK||E.scene.arena.getTimeOfDay()===N.NIGHT)&&E.formIndex===0))],[e.STEENEE]:[new m(e.TSAREENA,28,null,new Xe(E=>E.moveset.filter(A=>(A==null?void 0:A.moveId)===t.STOMP).length>0),3)],[e.POIPOLE]:[new m(e.NAGANADEL,1,null,new Xe(E=>E.moveset.filter(A=>(A==null?void 0:A.moveId)===t.DRAGON_PULSE).length>0),3)],[e.ALOLA_SANDSHREW]:[new m(e.ALOLA_SANDSLASH,1,8,null,3)],[e.ALOLA_VULPIX]:[new m(e.ALOLA_NINETALES,1,8,null,3)],[e.APPLIN]:[new m(e.DIPPLIN,1,29,null,3),new m(e.FLAPPLE,1,14,null,3),new m(e.APPLETUN,1,13,null,3)],[e.CLOBBOPUS]:[new m(e.GRAPPLOCT,35,null,new Xe(E=>E.moveset.filter(A=>(A==null?void 0:A.moveId)===t.TAUNT).length>0))],[e.SINISTEA]:[new Mt(e.POLTEAGEIST,"phony","phony",1,12,null,3),new Mt(e.POLTEAGEIST,"antique","antique",1,30,null,3)],[e.MILCERY]:[new Mt(e.ALCREMIE,"","vanilla-cream",1,15,new Xe(E=>E.scene.arena.biomeType===r.TOWN||E.scene.arena.biomeType===r.PLAINS||E.scene.arena.biomeType===r.GRASS||E.scene.arena.biomeType===r.TALL_GRASS||E.scene.arena.biomeType===r.METROPOLIS),3),new Mt(e.ALCREMIE,"","ruby-cream",1,15,new Xe(E=>E.scene.arena.biomeType===r.BADLANDS||E.scene.arena.biomeType===r.VOLCANO||E.scene.arena.biomeType===r.GRAVEYARD||E.scene.arena.biomeType===r.FACTORY||E.scene.arena.biomeType===r.SLUM),3),new Mt(e.ALCREMIE,"","matcha-cream",1,15,new Xe(E=>E.scene.arena.biomeType===r.FOREST||E.scene.arena.biomeType===r.SWAMP||E.scene.arena.biomeType===r.MEADOW||E.scene.arena.biomeType===r.JUNGLE),3),new Mt(e.ALCREMIE,"","mint-cream",1,15,new Xe(E=>E.scene.arena.biomeType===r.SEA||E.scene.arena.biomeType===r.BEACH||E.scene.arena.biomeType===r.LAKE||E.scene.arena.biomeType===r.SEABED),3),new Mt(e.ALCREMIE,"","lemon-cream",1,15,new Xe(E=>E.scene.arena.biomeType===r.DESERT||E.scene.arena.biomeType===r.POWER_PLANT||E.scene.arena.biomeType===r.DOJO||E.scene.arena.biomeType===r.RUINS||E.scene.arena.biomeType===r.CONSTRUCTION_SITE),3),new Mt(e.ALCREMIE,"","salted-cream",1,15,new Xe(E=>E.scene.arena.biomeType===r.MOUNTAIN||E.scene.arena.biomeType===r.CAVE||E.scene.arena.biomeType===r.ICE_CAVE||E.scene.arena.biomeType===r.FAIRY_CAVE||E.scene.arena.biomeType===r.SNOWY_FOREST),3),new Mt(e.ALCREMIE,"","ruby-swirl",1,15,new Xe(E=>E.scene.arena.biomeType===r.WASTELAND||E.scene.arena.biomeType===r.LABORATORY),3),new Mt(e.ALCREMIE,"","caramel-swirl",1,15,new Xe(E=>E.scene.arena.biomeType===r.TEMPLE||E.scene.arena.biomeType===r.ISLAND),3),new Mt(e.ALCREMIE,"","rainbow-swirl",1,15,new Xe(E=>E.scene.arena.biomeType===r.ABYSS||E.scene.arena.biomeType===r.SPACE||E.scene.arena.biomeType===r.END),3)],[e.DURALUDON]:[new Mt(e.ARCHALUDON,"","",1,53,null,4)],[e.KUBFU]:[new Mt(e.URSHIFU,"","single-strike",1,54,null,4),new Mt(e.URSHIFU,"","rapid-strike",1,55,null,4)],[e.GALAR_DARUMAKA]:[new m(e.GALAR_DARMANITAN,1,8,null,3)],[e.HISUI_GROWLITHE]:[new m(e.HISUI_ARCANINE,1,5,null,3)],[e.HISUI_VOLTORB]:[new m(e.HISUI_ELECTRODE,1,4,null,3)],[e.HISUI_QWILFISH]:[new m(e.OVERQWIL,28,null,new Xe(E=>E.moveset.filter(A=>(A==null?void 0:A.moveId)===t.BARB_BARRAGE).length>0),3)],[e.HISUI_SNEASEL]:[new m(e.SNEASLER,1,21,new Xe(E=>E.scene.arena.getTimeOfDay()===N.DAWN||E.scene.arena.getTimeOfDay()===N.DAY),4)],[e.CHARCADET]:[new m(e.ARMAROUGE,1,33,null,3),new m(e.CERULEDGE,1,34,null,3)],[e.TADBULB]:[new m(e.BELLIBOLT,1,7,null,3)],[e.CAPSAKID]:[new m(e.SCOVILLAIN,1,5,null,3)],[e.CETODDLE]:[new m(e.CETITAN,1,8,null,3)],[e.POLTCHAGEIST]:[new Mt(e.SINISTCHA,"counterfeit","unremarkable",1,16,null,3),new Mt(e.SINISTCHA,"artisan","masterpiece",1,35,null,3)],[e.DIPPLIN]:[new m(e.HYDRAPPLE,1,null,new Xe(E=>E.moveset.filter(A=>(A==null?void 0:A.moveId)===t.DRAGON_CHEER).length>0),4)],[e.KADABRA]:[new m(e.ALAKAZAM,1,1,null,4)],[e.MACHOKE]:[new m(e.MACHAMP,1,1,null,4)],[e.GRAVELER]:[new m(e.GOLEM,1,1,null,4)],[e.HAUNTER]:[new m(e.GENGAR,1,1,null,4)],[e.ONIX]:[new m(e.STEELIX,1,1,new Xe(E=>E.moveset.filter(A=>(A==null?void 0:A.getMove().type)===n.STEEL).length>0),4)],[e.RHYDON]:[new m(e.RHYPERIOR,1,26,null,4)],[e.SEADRA]:[new m(e.KINGDRA,1,19,null,4)],[e.SCYTHER]:[new m(e.SCIZOR,1,1,new Xe(E=>E.moveset.filter(A=>(A==null?void 0:A.getMove().type)===n.STEEL).length>0),4),new m(e.KLEAVOR,1,51,null,4)],[e.ELECTABUZZ]:[new m(e.ELECTIVIRE,1,24,null,4)],[e.MAGMAR]:[new m(e.MAGMORTAR,1,25,null,4)],[e.PORYGON]:[new m(e.PORYGON2,1,17,null,3)],[e.PORYGON2]:[new m(e.PORYGON_Z,1,18,null,4)],[e.FEEBAS]:[new m(e.MILOTIC,1,20,null,4)],[e.DUSCLOPS]:[new m(e.DUSKNOIR,1,23,null,4)],[e.CLAMPERL]:[new m(e.HUNTAIL,1,1,new Xe(E=>E.gender===ye.MALE,E=>E.gender=ye.MALE),4),new m(e.GOREBYSS,1,1,new Xe(E=>E.gender===ye.FEMALE,E=>E.gender=ye.FEMALE),4)],[e.BOLDORE]:[new m(e.GIGALITH,1,1,null,4)],[e.GURDURR]:[new m(e.CONKELDURR,1,1,null,4)],[e.KARRABLAST]:[new m(e.ESCAVALIER,1,1,new Xe(E=>!!E.scene.gameData.dexData[e.SHELMET].caughtAttr),4)],[e.SHELMET]:[new m(e.ACCELGOR,1,1,new Xe(E=>!!E.scene.gameData.dexData[e.KARRABLAST].caughtAttr),4)],[e.SPRITZEE]:[new m(e.AROMATISSE,1,27,null,4)],[e.SWIRLIX]:[new m(e.SLURPUFF,1,28,null,4)],[e.PHANTUMP]:[new m(e.TREVENANT,1,1,null,4)],[e.PUMPKABOO]:[new m(e.GOURGEIST,1,1,null,4)],[e.ALOLA_GRAVELER]:[new m(e.ALOLA_GOLEM,1,1,null,4)],[e.PRIMEAPE]:[new m(e.ANNIHILAPE,35,null,new Xe(E=>E.moveset.filter(A=>(A==null?void 0:A.moveId)===t.RAGE_FIST).length>0),4)],[e.GOLBAT]:[new m(e.CROBAT,1,null,new ZA(120),4)],[e.CHANSEY]:[new m(e.BLISSEY,1,null,new ZA(200),3)],[e.PICHU]:[new Mt(e.PIKACHU,"spiky","partner",1,null,new ZA(90),1),new Mt(e.PIKACHU,"","",1,null,new ZA(90),1)],[e.CLEFFA]:[new m(e.CLEFAIRY,1,null,new ZA(160),1)],[e.IGGLYBUFF]:[new m(e.JIGGLYPUFF,1,null,new ZA(70),1)],[e.TOGEPI]:[new m(e.TOGETIC,1,null,new ZA(70),1)],[e.AZURILL]:[new m(e.MARILL,1,null,new ZA(70),1)],[e.BUDEW]:[new m(e.ROSELIA,1,null,new ZA(70,E=>E.scene.arena.getTimeOfDay()===N.DAWN||E.scene.arena.getTimeOfDay()===N.DAY),1)],[e.BUNEARY]:[new m(e.LOPUNNY,1,null,new ZA(70),2)],[e.CHINGLING]:[new m(e.CHIMECHO,1,null,new ZA(90,E=>E.scene.arena.getTimeOfDay()===N.DUSK||E.scene.arena.getTimeOfDay()===N.NIGHT),2)],[e.HAPPINY]:[new m(e.CHANSEY,1,null,new ZA(160),1)],[e.MUNCHLAX]:[new m(e.SNORLAX,1,null,new ZA(120),3)],[e.RIOLU]:[new m(e.LUCARIO,1,null,new ZA(120,E=>E.scene.arena.getTimeOfDay()===N.DAWN||E.scene.arena.getTimeOfDay()===N.DAY),3)],[e.WOOBAT]:[new m(e.SWOOBAT,1,null,new ZA(90),2)],[e.SWADLOON]:[new m(e.LEAVANNY,1,null,new ZA(120),3)],[e.TYPE_NULL]:[new m(e.SILVALLY,1,null,new ZA(100),3)],[e.ALOLA_MEOWTH]:[new m(e.ALOLA_PERSIAN,1,null,new ZA(120),3)],[e.SNOM]:[new m(e.FROSMOTH,1,null,new ZA(90,E=>E.scene.arena.getTimeOfDay()===N.DUSK||E.scene.arena.getTimeOfDay()===N.NIGHT),2)],[e.GIMMIGHOUL]:[new Mt(e.GHOLDENGO,"chest","",1,null,new Xe(E=>E.evoCounter+E.getHeldItems().filter(A=>A instanceof Yn).length+E.scene.findModifiers(A=>A instanceof cR||A instanceof yn||A instanceof wn).length>9),4),new Mt(e.GHOLDENGO,"roaming","",1,null,new Xe(E=>E.evoCounter+E.getHeldItems().filter(A=>A instanceof Yn).length+E.scene.findModifiers(A=>A instanceof cR||A instanceof yn||A instanceof wn).length>9),4)]},KA={};function lQ(){const E=[Ee.MEGA,"",Ee.MEGA_X,"",Ee.MEGA_Y].map(s=>s);Object.keys(Ht).forEach(s=>{const R=Ht[s];for(const I of R)I.evoFormKey&&E.indexOf(I.evoFormKey)>-1||(KA[I.speciesId]=parseInt(s))})}T(lQ,"initPokemonPrevolutions");function JL(E){if(E===-1)return U.t("biome:unknownLocation");switch(E){case r.GRASS:return U.t("biome:GRASS");case r.RUINS:return U.t("biome:RUINS");case r.END:return U.t("biome:END");default:return U.t(`biome:${r[E].toUpperCase()}`)}}T(JL,"getBiomeName");const QO={[r.TOWN]:r.PLAINS,[r.PLAINS]:[r.GRASS,r.METROPOLIS,r.LAKE],[r.GRASS]:r.TALL_GRASS,[r.TALL_GRASS]:[r.FOREST,r.CAVE],[r.SLUM]:[r.CONSTRUCTION_SITE,[r.SWAMP,2]],[r.FOREST]:[r.JUNGLE,r.MEADOW],[r.SEA]:[r.SEABED,r.ICE_CAVE],[r.SWAMP]:[r.GRAVEYARD,r.TALL_GRASS],[r.BEACH]:[r.SEA,[r.ISLAND,2]],[r.LAKE]:[r.BEACH,r.SWAMP,r.CONSTRUCTION_SITE],[r.SEABED]:[r.CAVE,[r.VOLCANO,3]],[r.MOUNTAIN]:[r.VOLCANO,[r.WASTELAND,2],[r.SPACE,3]],[r.BADLANDS]:[r.DESERT,r.MOUNTAIN],[r.CAVE]:[r.BADLANDS,r.LAKE,[r.LABORATORY,2]],[r.DESERT]:[r.RUINS,[r.CONSTRUCTION_SITE,2]],[r.ICE_CAVE]:r.SNOWY_FOREST,[r.MEADOW]:[r.PLAINS,r.FAIRY_CAVE],[r.POWER_PLANT]:r.FACTORY,[r.VOLCANO]:[r.BEACH,[r.ICE_CAVE,3]],[r.GRAVEYARD]:r.ABYSS,[r.DOJO]:[r.PLAINS,[r.JUNGLE,2],[r.TEMPLE,2]],[r.FACTORY]:[r.PLAINS,[r.LABORATORY,2]],[r.RUINS]:[r.MOUNTAIN,[r.FOREST,2]],[r.WASTELAND]:r.BADLANDS,[r.ABYSS]:[r.CAVE,[r.SPACE,2],[r.WASTELAND,2]],[r.SPACE]:r.RUINS,[r.CONSTRUCTION_SITE]:[r.POWER_PLANT,[r.DOJO,2]],[r.JUNGLE]:[r.TEMPLE],[r.FAIRY_CAVE]:[r.ICE_CAVE,[r.SPACE,2]],[r.TEMPLE]:[r.DESERT,[r.SWAMP,2],[r.RUINS,2]],[r.METROPOLIS]:r.SLUM,[r.SNOWY_FOREST]:[r.FOREST,[r.MOUNTAIN,2],[r.LAKE,2]],[r.ISLAND]:r.SEA,[r.LABORATORY]:r.CONSTRUCTION_SITE},hO={};var YA=(E=>(E[E.COMMON=0]="COMMON",E[E.UNCOMMON=1]="UNCOMMON",E[E.RARE=2]="RARE",E[E.SUPER_RARE=3]="SUPER_RARE",E[E.ULTRA_RARE=4]="ULTRA_RARE",E[E.BOSS=5]="BOSS",E[E.BOSS_RARE=6]="BOSS_RARE",E[E.BOSS_SUPER_RARE=7]="BOSS_SUPER_RARE",E[E.BOSS_ULTRA_RARE=8]="BOSS_ULTRA_RARE",E))(YA||{});const Nb=[],SR={[r.TOWN]:{0:{[N.DAWN]:[{1:[e.CATERPIE],7:[e.METAPOD]},e.SENTRET,e.LEDYBA,e.HOPPIP,e.SUNKERN,e.STARLY,e.PIDOVE,e.COTTONEE,{1:[e.SCATTERBUG],9:[e.SPEWPA]},e.YUNGOOS,e.SKWOVET],[N.DAY]:[{1:[e.CATERPIE],7:[e.METAPOD]},e.SENTRET,e.HOPPIP,e.SUNKERN,e.SILCOON,e.STARLY,e.PIDOVE,e.COTTONEE,{1:[e.SCATTERBUG],9:[e.SPEWPA]},e.YUNGOOS,e.SKWOVET],[N.DUSK]:[{1:[e.WEEDLE],7:[e.KAKUNA]},e.POOCHYENA,e.PATRAT,e.PURRLOIN,e.BLIPBUG],[N.NIGHT]:[{1:[e.WEEDLE],7:[e.KAKUNA]},e.HOOTHOOT,e.SPINARAK,e.POOCHYENA,e.CASCOON,e.PATRAT,e.PURRLOIN,e.BLIPBUG],[N.ALL]:[e.PIDGEY,e.RATTATA,e.SPEAROW,e.ZIGZAGOON,e.WURMPLE,e.TAILLOW,e.BIDOOF,e.LILLIPUP,e.FLETCHLING,e.WOOLOO,e.LECHONK]},1:{[N.DAWN]:[e.BELLSPROUT,e.POOCHYENA,e.LOTAD,e.SKITTY,e.COMBEE,e.CHERUBI,e.PATRAT,e.MINCCINO,e.PAWMI],[N.DAY]:[e.NIDORAN_F,e.NIDORAN_M,e.BELLSPROUT,e.POOCHYENA,e.LOTAD,e.SKITTY,e.COMBEE,e.CHERUBI,e.PATRAT,e.MINCCINO,e.PAWMI],[N.DUSK]:[e.EKANS,e.ODDISH,e.MEOWTH,e.SPINARAK,e.SEEDOT,e.SHROOMISH,e.KRICKETOT,e.VENIPEDE],[N.NIGHT]:[e.EKANS,e.ODDISH,e.PARAS,e.VENONAT,e.MEOWTH,e.SEEDOT,e.SHROOMISH,e.KRICKETOT,e.VENIPEDE],[N.ALL]:[e.NINCADA,e.WHISMUR,e.FIDOUGH]},2:{[N.DAWN]:[e.TANDEMAUS],[N.DAY]:[e.TANDEMAUS],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.ABRA,e.SURSKIT,e.ROOKIDEE]},3:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.EEVEE,e.RALTS]},4:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.DITTO]},5:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[]},6:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[]},7:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[]},8:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[]}},[r.PLAINS]:{0:{[N.DAWN]:[{1:[e.SENTRET],15:[e.FURRET]},{1:[e.YUNGOOS],30:[e.GUMSHOOS]},{1:[e.SKWOVET],24:[e.GREEDENT]}],[N.DAY]:[{1:[e.SENTRET],15:[e.FURRET]},{1:[e.YUNGOOS],30:[e.GUMSHOOS]},{1:[e.SKWOVET],24:[e.GREEDENT]}],[N.DUSK]:[{1:[e.MEOWTH],28:[e.PERSIAN]},{1:[e.POOCHYENA],18:[e.MIGHTYENA]}],[N.NIGHT]:[{1:[e.ZUBAT],22:[e.GOLBAT]},{1:[e.MEOWTH],28:[e.PERSIAN]},{1:[e.POOCHYENA],18:[e.MIGHTYENA]}],[N.ALL]:[{1:[e.ZIGZAGOON],20:[e.LINOONE]},{1:[e.BIDOOF],15:[e.BIBAREL]},{1:[e.LECHONK],18:[e.OINKOLOGNE]}]},1:{[N.DAWN]:[{1:[e.DODUO],31:[e.DODRIO]},{1:[e.POOCHYENA],18:[e.MIGHTYENA]},{1:[e.STARLY],14:[e.STARAVIA],34:[e.STARAPTOR]},{1:[e.PIDOVE],21:[e.TRANQUILL],32:[e.UNFEZANT]},{1:[e.PAWMI],18:[e.PAWMO],32:[e.PAWMOT]}],[N.DAY]:[{1:[e.DODUO],31:[e.DODRIO]},{1:[e.POOCHYENA],18:[e.MIGHTYENA]},{1:[e.STARLY],14:[e.STARAVIA],34:[e.STARAPTOR]},{1:[e.PIDOVE],21:[e.TRANQUILL],32:[e.UNFEZANT]},{1:[e.ROCKRUFF],25:[e.LYCANROC]},{1:[e.PAWMI],18:[e.PAWMO],32:[e.PAWMOT]}],[N.DUSK]:[{1:[e.MANKEY],28:[e.PRIMEAPE],75:[e.ANNIHILAPE]}],[N.NIGHT]:[{1:[e.MANKEY],28:[e.PRIMEAPE],75:[e.ANNIHILAPE]}],[N.ALL]:[{1:[e.PIDGEY],18:[e.PIDGEOTTO],36:[e.PIDGEOT]},{1:[e.SPEAROW],20:[e.FEAROW]},e.PIKACHU,{1:[e.FLETCHLING],17:[e.FLETCHINDER],35:[e.TALONFLAME]}]},2:{[N.DAWN]:[e.PALDEA_TAUROS],[N.DAY]:[e.PALDEA_TAUROS],[N.DUSK]:[{1:[e.SHINX],15:[e.LUXIO],30:[e.LUXRAY]}],[N.NIGHT]:[{1:[e.SHINX],15:[e.LUXIO],30:[e.LUXRAY]}],[N.ALL]:[{1:[e.ABRA],16:[e.KADABRA]},{1:[e.BUNEARY],20:[e.LOPUNNY]},{1:[e.ROOKIDEE],18:[e.CORVISQUIRE],38:[e.CORVIKNIGHT]}]},3:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.FARFETCHD,e.LICKITUNG,e.CHANSEY,e.EEVEE,e.SNORLAX,{1:[e.DUNSPARCE],62:[e.DUDUNSPARCE]}]},4:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.DITTO,e.LATIAS,e.LATIOS]},5:{[N.DAWN]:[e.DODRIO,e.FURRET,e.GUMSHOOS,e.GREEDENT],[N.DAY]:[e.DODRIO,e.FURRET,e.GUMSHOOS,e.GREEDENT],[N.DUSK]:[e.PERSIAN,e.MIGHTYENA],[N.NIGHT]:[e.PERSIAN,e.MIGHTYENA],[N.ALL]:[e.LINOONE,e.BIBAREL,e.LOPUNNY,e.OINKOLOGNE]},6:{[N.DAWN]:[e.PAWMOT,e.PALDEA_TAUROS],[N.DAY]:[e.LYCANROC,e.PAWMOT,e.PALDEA_TAUROS],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.FARFETCHD,e.SNORLAX,e.LICKILICKY,e.DUDUNSPARCE]},7:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.LATIAS,e.LATIOS]},8:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[]}},[r.GRASS]:{0:{[N.DAWN]:[{1:[e.HOPPIP],18:[e.SKIPLOOM]},e.SUNKERN,e.COTTONEE,e.PETILIL],[N.DAY]:[{1:[e.HOPPIP],18:[e.SKIPLOOM]},e.SUNKERN,e.COTTONEE,e.PETILIL],[N.DUSK]:[{1:[e.SEEDOT],14:[e.NUZLEAF]},{1:[e.SHROOMISH],23:[e.BRELOOM]}],[N.NIGHT]:[{1:[e.SEEDOT],14:[e.NUZLEAF]},{1:[e.SHROOMISH],23:[e.BRELOOM]}],[N.ALL]:[]},1:{[N.DAWN]:[{1:[e.COMBEE],21:[e.VESPIQUEN]},{1:[e.CHERUBI],25:[e.CHERRIM]}],[N.DAY]:[{1:[e.COMBEE],21:[e.VESPIQUEN]},{1:[e.CHERUBI],25:[e.CHERRIM]}],[N.DUSK]:[{1:[e.FOONGUS],39:[e.AMOONGUSS]}],[N.NIGHT]:[{1:[e.FOONGUS],39:[e.AMOONGUSS]}],[N.ALL]:[]},2:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[{1:[e.BULBASAUR],16:[e.IVYSAUR],32:[e.VENUSAUR]},e.GROWLITHE,{1:[e.TURTWIG],18:[e.GROTLE],32:[e.TORTERRA]}]},3:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.SUDOWOODO]},4:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.VIRIZION]},5:{[N.DAWN]:[e.JUMPLUFF,e.SUNFLORA,e.WHIMSICOTT],[N.DAY]:[e.JUMPLUFF,e.SUNFLORA,e.WHIMSICOTT],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[]},6:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.VENUSAUR,e.SUDOWOODO,e.TORTERRA]},7:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.VIRIZION]},8:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[]}},[r.TALL_GRASS]:{0:{[N.DAWN]:[{1:[e.BOUNSWEET],18:[e.STEENEE],58:[e.TSAREENA]}],[N.DAY]:[{1:[e.NIDORAN_F],16:[e.NIDORINA]},{1:[e.NIDORAN_M],16:[e.NIDORINO]},{1:[e.BOUNSWEET],18:[e.STEENEE],58:[e.TSAREENA]}],[N.DUSK]:[{1:[e.ODDISH],21:[e.GLOOM]},{1:[e.KRICKETOT],10:[e.KRICKETUNE]}],[N.NIGHT]:[{1:[e.ODDISH],21:[e.GLOOM]},{1:[e.KRICKETOT],10:[e.KRICKETUNE]}],[N.ALL]:[{1:[e.NINCADA],20:[e.NINJASK]},{1:[e.FOMANTIS],44:[e.LURANTIS]},{1:[e.NYMBLE],24:[e.LOKIX]}]},1:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[{1:[e.PARAS],24:[e.PARASECT]},{1:[e.VENONAT],31:[e.VENOMOTH]},{1:[e.SPINARAK],22:[e.ARIADOS]}],[N.ALL]:[e.VULPIX]},2:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.PINSIR,{1:[e.CHIKORITA],16:[e.BAYLEEF],32:[e.MEGANIUM]},{1:[e.GIRAFARIG],62:[e.FARIGIRAF]},e.ZANGOOSE,e.KECLEON,e.TROPIUS]},3:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.SCYTHER,e.SHEDINJA,e.ROTOM]},4:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[]},5:{[N.DAWN]:[e.TSAREENA],[N.DAY]:[e.NIDOQUEEN,e.NIDOKING,e.TSAREENA],[N.DUSK]:[e.VILEPLUME,e.KRICKETUNE],[N.NIGHT]:[e.VILEPLUME,e.KRICKETUNE],[N.ALL]:[e.NINJASK,e.ZANGOOSE,e.KECLEON,e.LURANTIS,e.LOKIX]},6:{[N.DAWN]:[e.BELLOSSOM],[N.DAY]:[e.BELLOSSOM],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.PINSIR,e.MEGANIUM,e.FARIGIRAF]},7:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.ROTOM]},8:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[]}},[r.METROPOLIS]:{0:{[N.DAWN]:[{1:[e.YAMPER],25:[e.BOLTUND]}],[N.DAY]:[{1:[e.YAMPER],25:[e.BOLTUND]}],[N.DUSK]:[{1:[e.PATRAT],20:[e.WATCHOG]}],[N.NIGHT]:[{1:[e.HOUNDOUR],24:[e.HOUNDOOM]},{1:[e.PATRAT],20:[e.WATCHOG]}],[N.ALL]:[{1:[e.RATTATA],20:[e.RATICATE]},{1:[e.ZIGZAGOON],20:[e.LINOONE]},{1:[e.LILLIPUP],16:[e.HERDIER],32:[e.STOUTLAND]}]},1:{[N.DAWN]:[{1:[e.PATRAT],20:[e.WATCHOG]},e.INDEEDEE],[N.DAY]:[{1:[e.PATRAT],20:[e.WATCHOG]},e.INDEEDEE],[N.DUSK]:[{1:[e.ESPURR],25:[e.MEOWSTIC]}],[N.NIGHT]:[{1:[e.ESPURR],25:[e.MEOWSTIC]}],[N.ALL]:[e.PIKACHU,{1:[e.GLAMEOW],38:[e.PURUGLY]},e.FURFROU,{1:[e.FIDOUGH],26:[e.DACHSBUN]},e.SQUAWKABILLY]},2:{[N.DAWN]:[{1:[e.TANDEMAUS],25:[e.MAUSHOLD]}],[N.DAY]:[{1:[e.TANDEMAUS],25:[e.MAUSHOLD]}],[N.DUSK]:[e.MORPEKO],[N.NIGHT]:[e.MORPEKO],[N.ALL]:[{1:[e.VAROOM],40:[e.REVAVROOM]}]},3:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.DITTO,e.EEVEE,e.SMEARGLE]},4:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.CASTFORM]},5:{[N.DAWN]:[e.BOLTUND],[N.DAY]:[e.BOLTUND],[N.DUSK]:[e.MEOWSTIC],[N.NIGHT]:[e.MEOWSTIC],[N.ALL]:[e.STOUTLAND,e.FURFROU,e.DACHSBUN]},6:{[N.DAWN]:[e.MAUSHOLD],[N.DAY]:[e.MAUSHOLD],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.CASTFORM,e.REVAVROOM]},7:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[]},8:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[]}},[r.FOREST]:{0:{[N.DAWN]:[e.BUTTERFREE,{1:[e.BELLSPROUT],21:[e.WEEPINBELL]},{1:[e.COMBEE],21:[e.VESPIQUEN]},e.PETILIL,{1:[e.DEERLING],34:[e.SAWSBUCK]},e.VIVILLON],[N.DAY]:[e.BUTTERFREE,{1:[e.BELLSPROUT],21:[e.WEEPINBELL]},e.BEAUTIFLY,{1:[e.COMBEE],21:[e.VESPIQUEN]},e.PETILIL,{1:[e.DEERLING],34:[e.SAWSBUCK]},e.VIVILLON],[N.DUSK]:[e.BEEDRILL,{1:[e.PINECO],31:[e.FORRETRESS]},{1:[e.SEEDOT],14:[e.NUZLEAF]},{1:[e.SHROOMISH],23:[e.BRELOOM]},{1:[e.VENIPEDE],22:[e.WHIRLIPEDE],30:[e.SCOLIPEDE]}],[N.NIGHT]:[e.BEEDRILL,{1:[e.VENONAT],31:[e.VENOMOTH]},{1:[e.SPINARAK],22:[e.ARIADOS]},{1:[e.PINECO],31:[e.FORRETRESS]},e.DUSTOX,{1:[e.SEEDOT],14:[e.NUZLEAF]},{1:[e.SHROOMISH],23:[e.BRELOOM]},{1:[e.VENIPEDE],22:[e.WHIRLIPEDE],30:[e.SCOLIPEDE]}],[N.ALL]:[{1:[e.TAROUNTULA],15:[e.SPIDOPS]},{1:[e.NYMBLE],24:[e.LOKIX]},{1:[e.SHROODLE],28:[e.GRAFAIAI]}]},1:{[N.DAWN]:[e.ROSELIA,e.MOTHIM,{1:[e.SEWADDLE],20:[e.SWADLOON],30:[e.LEAVANNY]}],[N.DAY]:[e.ROSELIA,e.MOTHIM,{1:[e.SEWADDLE],20:[e.SWADLOON],30:[e.LEAVANNY]}],[N.DUSK]:[{1:[e.SPINARAK],22:[e.ARIADOS]},{1:[e.DOTTLER],30:[e.ORBEETLE]}],[N.NIGHT]:[{1:[e.HOOTHOOT],20:[e.NOCTOWL]},{1:[e.ROCKRUFF],25:[e.LYCANROC]},{1:[e.DOTTLER],30:[e.ORBEETLE]}],[N.ALL]:[{1:[e.EKANS],22:[e.ARBOK]},{1:[e.TEDDIURSA],30:[e.URSARING]},{1:[e.BURMY],20:[e.WORMADAM]},{1:[e.PANSAGE],30:[e.SIMISAGE]}]},2:{[N.DAWN]:[e.EXEGGCUTE,e.STANTLER],[N.DAY]:[e.EXEGGCUTE,e.STANTLER],[N.DUSK]:[e.SCYTHER],[N.NIGHT]:[e.SCYTHER],[N.ALL]:[e.HERACROSS,{1:[e.TREECKO],16:[e.GROVYLE],36:[e.SCEPTILE]},e.TROPIUS,e.KARRABLAST,e.SHELMET,{1:[e.CHESPIN],16:[e.QUILLADIN],36:[e.CHESNAUGHT]},{1:[e.ROWLET],17:[e.DARTRIX],34:[e.DECIDUEYE]},e.SQUAWKABILLY,{1:[e.TOEDSCOOL],30:[e.TOEDSCRUEL]}]},3:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[e.BLOODMOON_URSALUNA],[N.ALL]:[e.DURANT]},4:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.KARTANA,e.WO_CHIEN]},5:{[N.DAWN]:[e.VICTREEBEL,e.MOTHIM,e.VESPIQUEN,e.LILLIGANT,e.SAWSBUCK],[N.DAY]:[e.VICTREEBEL,e.BEAUTIFLY,e.MOTHIM,e.VESPIQUEN,e.LILLIGANT,e.SAWSBUCK],[N.DUSK]:[e.ARIADOS,e.FORRETRESS,e.SHIFTRY,e.BRELOOM,e.SCOLIPEDE,e.ORBEETLE],[N.NIGHT]:[e.VENOMOTH,e.NOCTOWL,e.ARIADOS,e.FORRETRESS,e.DUSTOX,e.SHIFTRY,e.BRELOOM,e.SCOLIPEDE,e.ORBEETLE],[N.ALL]:[e.WORMADAM,e.SIMISAGE,e.SPIDOPS,e.LOKIX,e.GRAFAIAI]},6:{[N.DAWN]:[e.STANTLER],[N.DAY]:[e.STANTLER],[N.DUSK]:[],[N.NIGHT]:[e.LYCANROC,e.BLOODMOON_URSALUNA],[N.ALL]:[e.HERACROSS,e.SCEPTILE,e.ESCAVALIER,e.ACCELGOR,e.DURANT,e.CHESNAUGHT,e.DECIDUEYE,e.TOEDSCRUEL]},7:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.KARTANA,e.WO_CHIEN]},8:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.CALYREX]}},[r.SEA]:{0:{[N.DAWN]:[{1:[e.SLOWPOKE],37:[e.SLOWBRO]},{1:[e.WINGULL],25:[e.PELIPPER]},e.CRAMORANT,{1:[e.FINIZEN],38:[e.PALAFIN]}],[N.DAY]:[{1:[e.SLOWPOKE],37:[e.SLOWBRO]},{1:[e.WINGULL],25:[e.PELIPPER]},e.CRAMORANT,{1:[e.FINIZEN],38:[e.PALAFIN]}],[N.DUSK]:[{1:[e.INKAY],30:[e.MALAMAR]}],[N.NIGHT]:[{1:[e.FINNEON],31:[e.LUMINEON]},{1:[e.INKAY],30:[e.MALAMAR]}],[N.ALL]:[{1:[e.TENTACOOL],30:[e.TENTACRUEL]},{1:[e.MAGIKARP],20:[e.GYARADOS]},{1:[e.BUIZEL],26:[e.FLOATZEL]}]},1:{[N.DAWN]:[{1:[e.STARYU],30:[e.STARMIE]}],[N.DAY]:[{1:[e.STARYU],30:[e.STARMIE]}],[N.DUSK]:[{1:[e.SLOWPOKE],37:[e.SLOWBRO]},e.SHELLDER,{1:[e.CARVANHA],30:[e.SHARPEDO]}],[N.NIGHT]:[{1:[e.SLOWPOKE],37:[e.SLOWBRO]},e.SHELLDER,{1:[e.CHINCHOU],27:[e.LANTURN]},{1:[e.CARVANHA],30:[e.SHARPEDO]}],[N.ALL]:[{1:[e.POLIWAG],25:[e.POLIWHIRL]},{1:[e.HORSEA],32:[e.SEADRA]},{1:[e.GOLDEEN],33:[e.SEAKING]},{1:[e.WAILMER],40:[e.WAILORD]},{1:[e.PANPOUR],30:[e.SIMIPOUR]},{1:[e.WATTREL],25:[e.KILOWATTREL]}]},2:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.LAPRAS,{1:[e.PIPLUP],16:[e.PRINPLUP],36:[e.EMPOLEON]},{1:[e.POPPLIO],17:[e.BRIONNE],34:[e.PRIMARINA]}]},3:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.KINGDRA,e.ROTOM,{1:[e.TIRTOUGA],37:[e.CARRACOSTA]}]},4:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[]},5:{[N.DAWN]:[e.PELIPPER,e.CRAMORANT,e.PALAFIN],[N.DAY]:[e.PELIPPER,e.CRAMORANT,e.PALAFIN],[N.DUSK]:[e.SHARPEDO,e.MALAMAR],[N.NIGHT]:[e.SHARPEDO,e.LUMINEON,e.MALAMAR],[N.ALL]:[e.TENTACRUEL,e.FLOATZEL,e.SIMIPOUR,e.KILOWATTREL]},6:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.KINGDRA,e.EMPOLEON,e.PRIMARINA]},7:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.ROTOM]},8:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.LUGIA]}},[r.SWAMP]:{0:{[N.DAWN]:[{1:[e.WOOPER],20:[e.QUAGSIRE]},{1:[e.LOTAD],14:[e.LOMBRE]}],[N.DAY]:[{1:[e.WOOPER],20:[e.QUAGSIRE]},{1:[e.LOTAD],14:[e.LOMBRE]}],[N.DUSK]:[{1:[e.EKANS],22:[e.ARBOK]},{1:[e.PALDEA_WOOPER],20:[e.CLODSIRE]}],[N.NIGHT]:[{1:[e.EKANS],22:[e.ARBOK]},{1:[e.PALDEA_WOOPER],20:[e.CLODSIRE]}],[N.ALL]:[{1:[e.POLIWAG],25:[e.POLIWHIRL]},{1:[e.GULPIN],26:[e.SWALOT]},{1:[e.SHELLOS],30:[e.GASTRODON]},{1:[e.TYMPOLE],25:[e.PALPITOAD],36:[e.SEISMITOAD]}]},1:{[N.DAWN]:[{1:[e.EKANS],22:[e.ARBOK]}],[N.DAY]:[{1:[e.EKANS],22:[e.ARBOK]}],[N.DUSK]:[{1:[e.CROAGUNK],37:[e.TOXICROAK]}],[N.NIGHT]:[{1:[e.CROAGUNK],37:[e.TOXICROAK]}],[N.ALL]:[{1:[e.PSYDUCK],33:[e.GOLDUCK]},{1:[e.BARBOACH],30:[e.WHISCASH]},{1:[e.SKORUPI],40:[e.DRAPION]},e.STUNFISK,{1:[e.MAREANIE],38:[e.TOXAPEX]}]},2:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[{1:[e.TOTODILE],18:[e.CROCONAW],30:[e.FERALIGATR]},{1:[e.MUDKIP],16:[e.MARSHTOMP],36:[e.SWAMPERT]}]},3:{[N.DAWN]:[{1:[e.GALAR_SLOWPOKE],40:[e.GALAR_SLOWBRO]},{1:[e.HISUI_SLIGGOO],80:[e.HISUI_GOODRA]}],[N.DAY]:[{1:[e.GALAR_SLOWPOKE],40:[e.GALAR_SLOWBRO]},{1:[e.HISUI_SLIGGOO],80:[e.HISUI_GOODRA]}],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.POLITOED,e.GALAR_STUNFISK]},4:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.AZELF,e.POIPOLE]},5:{[N.DAWN]:[e.QUAGSIRE,e.LUDICOLO],[N.DAY]:[e.QUAGSIRE,e.LUDICOLO],[N.DUSK]:[e.ARBOK,e.CLODSIRE],[N.NIGHT]:[e.ARBOK,e.CLODSIRE],[N.ALL]:[e.POLIWRATH,e.SWALOT,e.WHISCASH,e.GASTRODON,e.SEISMITOAD,e.STUNFISK,e.TOXAPEX]},6:{[N.DAWN]:[e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.HISUI_GOODRA],[N.DAY]:[e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.HISUI_GOODRA],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.FERALIGATR,e.POLITOED,e.SWAMPERT,e.GALAR_STUNFISK]},7:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.AZELF,e.NAGANADEL]},8:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[]}},[r.BEACH]:{0:{[N.DAWN]:[{1:[e.STARYU],30:[e.STARMIE]}],[N.DAY]:[{1:[e.STARYU],30:[e.STARMIE]}],[N.DUSK]:[e.SHELLDER],[N.NIGHT]:[e.SHELLDER],[N.ALL]:[{1:[e.KRABBY],28:[e.KINGLER]},{1:[e.CORPHISH],30:[e.CRAWDAUNT]},{1:[e.DWEBBLE],34:[e.CRUSTLE]},{1:[e.BINACLE],39:[e.BARBARACLE]},{1:[e.MAREANIE],38:[e.TOXAPEX]},{1:[e.WIGLETT],26:[e.WUGTRIO]}]},1:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[{1:[e.BURMY],20:[e.WORMADAM]},{1:[e.CLAUNCHER],37:[e.CLAWITZER]},{1:[e.SANDYGAST],42:[e.PALOSSAND]}]},2:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[{1:[e.QUAXLY],16:[e.QUAXWELL],36:[e.QUAQUAVAL]},e.TATSUGIRI]},3:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[{1:[e.TIRTOUGA],37:[e.CARRACOSTA]}]},4:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.CRESSELIA,e.KELDEO,e.TAPU_FINI]},5:{[N.DAWN]:[e.STARMIE],[N.DAY]:[e.STARMIE],[N.DUSK]:[e.CLOYSTER],[N.NIGHT]:[e.CLOYSTER],[N.ALL]:[e.KINGLER,e.CRAWDAUNT,e.WORMADAM,e.CRUSTLE,e.BARBARACLE,e.CLAWITZER,e.TOXAPEX,e.PALOSSAND]},6:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.CARRACOSTA,e.QUAQUAVAL]},7:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.CRESSELIA,e.KELDEO,e.TAPU_FINI]},8:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[]}},[r.LAKE]:{0:{[N.DAWN]:[{1:[e.LOTAD],14:[e.LOMBRE]},{1:[e.DUCKLETT],35:[e.SWANNA]}],[N.DAY]:[{1:[e.LOTAD],14:[e.LOMBRE]},{1:[e.DUCKLETT],35:[e.SWANNA]}],[N.DUSK]:[{1:[e.MARILL],18:[e.AZUMARILL]}],[N.NIGHT]:[{1:[e.MARILL],18:[e.AZUMARILL]}],[N.ALL]:[{1:[e.PSYDUCK],33:[e.GOLDUCK]},{1:[e.GOLDEEN],33:[e.SEAKING]},{1:[e.MAGIKARP],20:[e.GYARADOS]},{1:[e.CHEWTLE],22:[e.DREDNAW]}]},1:{[N.DAWN]:[{1:[e.DEWPIDER],22:[e.ARAQUANID]}],[N.DAY]:[{1:[e.DEWPIDER],22:[e.ARAQUANID]}],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[{1:[e.SLOWPOKE],37:[e.SLOWBRO]},{1:[e.WOOPER],20:[e.QUAGSIRE]},{1:[e.SURSKIT],22:[e.MASQUERAIN]},e.WISHIWASHI,e.FLAMIGO]},2:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[{1:[e.SQUIRTLE],16:[e.WARTORTLE],36:[e.BLASTOISE]},{1:[e.OSHAWOTT],17:[e.DEWOTT],36:[e.SAMUROTT]},{1:[e.FROAKIE],16:[e.FROGADIER],36:[e.GRENINJA]},{1:[e.SOBBLE],16:[e.DRIZZILE],35:[e.INTELEON]}]},3:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.VAPOREON,e.SLOWKING]},4:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.SUICUNE,e.MESPRIT]},5:{[N.DAWN]:[e.SWANNA,e.ARAQUANID],[N.DAY]:[e.SWANNA,e.ARAQUANID],[N.DUSK]:[e.AZUMARILL],[N.NIGHT]:[e.AZUMARILL],[N.ALL]:[e.GOLDUCK,e.SLOWBRO,e.SEAKING,e.GYARADOS,e.MASQUERAIN,e.WISHIWASHI,e.DREDNAW]},6:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.BLASTOISE,e.VAPOREON,e.SLOWKING,e.SAMUROTT,e.GRENINJA,e.INTELEON]},7:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.SUICUNE,e.MESPRIT]},8:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[]}},[r.SEABED]:{0:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[{1:[e.CHINCHOU],27:[e.LANTURN]},e.REMORAID,e.CLAMPERL,e.BASCULIN,{1:[e.FRILLISH],40:[e.JELLICENT]},{1:[e.ARROKUDA],26:[e.BARRASKEWDA]},e.VELUZA]},1:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[{1:[e.TENTACOOL],30:[e.TENTACRUEL]},e.SHELLDER,{1:[e.WAILMER],40:[e.WAILORD]},e.LUVDISC,{1:[e.SHELLOS],30:[e.GASTRODON]},{1:[e.SKRELP],48:[e.DRAGALGE]},e.PINCURCHIN,e.DONDOZO]},2:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.QWILFISH,e.CORSOLA,e.OCTILLERY,{1:[e.MANTYKE],52:[e.MANTINE]},e.ALOMOMOLA,{1:[e.TYNAMO],39:[e.EELEKTRIK]},e.DHELMISE]},3:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[{1:[e.OMANYTE],40:[e.OMASTAR]},{1:[e.KABUTO],40:[e.KABUTOPS]},e.RELICANTH,e.PYUKUMUKU,{1:[e.GALAR_CORSOLA],38:[e.CURSOLA]},e.ARCTOVISH,e.HISUI_QWILFISH]},4:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.FEEBAS,e.NIHILEGO]},5:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.LANTURN,e.QWILFISH,e.CORSOLA,e.OCTILLERY,e.MANTINE,e.WAILORD,e.HUNTAIL,e.GOREBYSS,e.LUVDISC,e.JELLICENT,e.ALOMOMOLA,e.DRAGALGE,e.BARRASKEWDA,e.DONDOZO]},6:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.OMASTAR,e.KABUTOPS,e.RELICANTH,e.EELEKTROSS,e.PYUKUMUKU,e.DHELMISE,e.CURSOLA,e.ARCTOVISH,e.BASCULEGION,e.OVERQWIL]},7:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.MILOTIC,e.NIHILEGO]},8:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.KYOGRE]}},[r.MOUNTAIN]:{0:{[N.DAWN]:[{1:[e.TAILLOW],22:[e.SWELLOW]},{1:[e.SWABLU],35:[e.ALTARIA]},{1:[e.STARLY],14:[e.STARAVIA],34:[e.STARAPTOR]},{1:[e.PIDOVE],21:[e.TRANQUILL],32:[e.UNFEZANT]},{1:[e.FLETCHLING],17:[e.FLETCHINDER],35:[e.TALONFLAME]}],[N.DAY]:[{1:[e.TAILLOW],22:[e.SWELLOW]},{1:[e.SWABLU],35:[e.ALTARIA]},{1:[e.STARLY],14:[e.STARAVIA],34:[e.STARAPTOR]},{1:[e.PIDOVE],21:[e.TRANQUILL],32:[e.UNFEZANT]},{1:[e.FLETCHLING],17:[e.FLETCHINDER],35:[e.TALONFLAME]}],[N.DUSK]:[{1:[e.RHYHORN],42:[e.RHYDON]},{1:[e.ARON],32:[e.LAIRON],42:[e.AGGRON]},{1:[e.ROGGENROLA],25:[e.BOLDORE]}],[N.NIGHT]:[{1:[e.RHYHORN],42:[e.RHYDON]},{1:[e.ARON],32:[e.LAIRON],42:[e.AGGRON]},{1:[e.ROGGENROLA],25:[e.BOLDORE]}],[N.ALL]:[{1:[e.PIDGEY],18:[e.PIDGEOTTO],36:[e.PIDGEOT]},{1:[e.SPEAROW],20:[e.FEAROW]},{1:[e.SKIDDO],32:[e.GOGOAT]}]},1:{[N.DAWN]:[{1:[e.RHYHORN],42:[e.RHYDON]},{1:[e.ARON],32:[e.LAIRON],42:[e.AGGRON]},{1:[e.ROGGENROLA],25:[e.BOLDORE]},{1:[e.RUFFLET],54:[e.BRAVIARY]},{1:[e.ROOKIDEE],18:[e.CORVISQUIRE],38:[e.CORVIKNIGHT]},{1:[e.FLITTLE],35:[e.ESPATHRA]},e.BOMBIRDIER],[N.DAY]:[{1:[e.RHYHORN],42:[e.RHYDON]},{1:[e.ARON],32:[e.LAIRON],42:[e.AGGRON]},{1:[e.ROGGENROLA],25:[e.BOLDORE]},{1:[e.RUFFLET],54:[e.BRAVIARY]},{1:[e.ROOKIDEE],18:[e.CORVISQUIRE],38:[e.CORVIKNIGHT]},{1:[e.FLITTLE],35:[e.ESPATHRA]},e.BOMBIRDIER],[N.DUSK]:[{1:[e.VULLABY],54:[e.MANDIBUZZ]}],[N.NIGHT]:[{1:[e.VULLABY],54:[e.MANDIBUZZ]}],[N.ALL]:[{1:[e.MACHOP],28:[e.MACHOKE]},{1:[e.GEODUDE],25:[e.GRAVELER]},{1:[e.NATU],25:[e.XATU]},{1:[e.SLUGMA],38:[e.MAGCARGO]},{1:[e.NACLI],24:[e.NACLSTACK],38:[e.GARGANACL]}]},2:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[e.MURKROW],[N.ALL]:[e.SKARMORY,{1:[e.TORCHIC],16:[e.COMBUSKEN],36:[e.BLAZIKEN]},{1:[e.SPOINK],32:[e.GRUMPIG]},e.HAWLUCHA,e.KLAWF]},3:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[{1:[e.LARVITAR],30:[e.PUPITAR]},{1:[e.CRANIDOS],30:[e.RAMPARDOS]},{1:[e.SHIELDON],30:[e.BASTIODON]},{1:[e.GIBLE],24:[e.GABITE],48:[e.GARCHOMP]},e.ROTOM,e.ARCHEOPS,{1:[e.AXEW],38:[e.FRAXURE]}]},4:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.TORNADUS,e.TING_LU,e.OGERPON]},5:{[N.DAWN]:[e.SWELLOW,e.ALTARIA,e.STARAPTOR,e.UNFEZANT,e.BRAVIARY,e.TALONFLAME,e.CORVIKNIGHT,e.ESPATHRA],[N.DAY]:[e.SWELLOW,e.ALTARIA,e.STARAPTOR,e.UNFEZANT,e.BRAVIARY,e.TALONFLAME,e.CORVIKNIGHT,e.ESPATHRA],[N.DUSK]:[e.MANDIBUZZ],[N.NIGHT]:[e.MANDIBUZZ],[N.ALL]:[e.PIDGEOT,e.FEAROW,e.SKARMORY,e.AGGRON,e.GOGOAT,e.GARGANACL]},6:{[N.DAWN]:[e.HISUI_BRAVIARY],[N.DAY]:[e.HISUI_BRAVIARY],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.BLAZIKEN,e.RAMPARDOS,e.BASTIODON,e.HAWLUCHA]},7:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.ROTOM,e.TORNADUS,e.TING_LU,e.OGERPON]},8:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.HO_OH]}},[r.BADLANDS]:{0:{[N.DAWN]:[{1:[e.PHANPY],25:[e.DONPHAN]}],[N.DAY]:[{1:[e.PHANPY],25:[e.DONPHAN]}],[N.DUSK]:[],[N.NIGHT]:[{1:[e.CUBONE],28:[e.MAROWAK]}],[N.ALL]:[{1:[e.DIGLETT],26:[e.DUGTRIO]},{1:[e.GEODUDE],25:[e.GRAVELER]},{1:[e.RHYHORN],42:[e.RHYDON]},{1:[e.DRILBUR],31:[e.EXCADRILL]},{1:[e.MUDBRAY],30:[e.MUDSDALE]}]},1:{[N.DAWN]:[{1:[e.SIZZLIPEDE],28:[e.CENTISKORCH]},{1:[e.CAPSAKID],30:[e.SCOVILLAIN]}],[N.DAY]:[{1:[e.SIZZLIPEDE],28:[e.CENTISKORCH]},{1:[e.CAPSAKID],30:[e.SCOVILLAIN]}],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[{1:[e.SANDSHREW],22:[e.SANDSLASH]},{1:[e.NUMEL],33:[e.CAMERUPT]},{1:[e.ROGGENROLA],25:[e.BOLDORE]},{1:[e.CUFANT],34:[e.COPPERAJAH]}]},2:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.ONIX,e.GLIGAR,{1:[e.POLTCHAGEIST],30:[e.SINISTCHA]}]},3:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[]},4:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.LANDORUS,e.OKIDOGI]},5:{[N.DAWN]:[e.DONPHAN,e.CENTISKORCH,e.SCOVILLAIN],[N.DAY]:[e.DONPHAN,e.CENTISKORCH,e.SCOVILLAIN],[N.DUSK]:[],[N.NIGHT]:[e.MAROWAK],[N.ALL]:[e.DUGTRIO,e.GOLEM,e.RHYPERIOR,e.GLISCOR,e.EXCADRILL,e.MUDSDALE,e.COPPERAJAH]},6:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.STEELIX,e.SINISTCHA]},7:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.LANDORUS,e.OKIDOGI]},8:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.GROUDON]}},[r.CAVE]:{0:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[{1:[e.ZUBAT],22:[e.GOLBAT]},{1:[e.PARAS],24:[e.PARASECT]},{1:[e.TEDDIURSA],30:[e.URSARING]},{1:[e.WHISMUR],20:[e.LOUDRED],40:[e.EXPLOUD]},{1:[e.ROGGENROLA],25:[e.BOLDORE]},{1:[e.WOOBAT],20:[e.SWOOBAT]},{1:[e.BUNNELBY],20:[e.DIGGERSBY]},{1:[e.NACLI],24:[e.NACLSTACK],38:[e.GARGANACL]}]},1:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[{1:[e.ROCKRUFF],25:[e.LYCANROC]}],[N.NIGHT]:[],[N.ALL]:[{1:[e.GEODUDE],25:[e.GRAVELER]},{1:[e.MAKUHITA],24:[e.HARIYAMA]},e.NOSEPASS,{1:[e.NOIBAT],48:[e.NOIVERN]},{1:[e.WIMPOD],30:[e.GOLISOPOD]}]},2:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.ONIX,{1:[e.FERROSEED],40:[e.FERROTHORN]},e.CARBINK,{1:[e.GLIMMET],35:[e.GLIMMORA]}]},3:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.SHUCKLE]},4:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.UXIE]},5:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.PARASECT,e.ONIX,e.CROBAT,e.URSARING,e.EXPLOUD,e.PROBOPASS,e.GIGALITH,e.SWOOBAT,e.DIGGERSBY,e.NOIVERN,e.GOLISOPOD,e.GARGANACL]},6:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[e.LYCANROC],[N.NIGHT]:[],[N.ALL]:[e.SHUCKLE,e.FERROTHORN,e.GLIMMORA]},7:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.UXIE]},8:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.TERAPAGOS]}},[r.DESERT]:{0:{[N.DAWN]:[e.TRAPINCH,{1:[e.HIPPOPOTAS],34:[e.HIPPOWDON]},{1:[e.RELLOR],29:[e.RABSCA]}],[N.DAY]:[e.TRAPINCH,{1:[e.HIPPOPOTAS],34:[e.HIPPOWDON]},{1:[e.RELLOR],29:[e.RABSCA]}],[N.DUSK]:[{1:[e.CACNEA],32:[e.CACTURNE]},{1:[e.SANDILE],29:[e.KROKOROK],40:[e.KROOKODILE]}],[N.NIGHT]:[{1:[e.CACNEA],32:[e.CACTURNE]},{1:[e.SANDILE],29:[e.KROKOROK],40:[e.KROOKODILE]}],[N.ALL]:[{1:[e.SANDSHREW],22:[e.SANDSLASH]},{1:[e.SKORUPI],40:[e.DRAPION]},{1:[e.SILICOBRA],36:[e.SANDACONDA]}]},1:{[N.DAWN]:[{1:[e.SANDILE],29:[e.KROKOROK],40:[e.KROOKODILE]},e.HELIOPTILE],[N.DAY]:[{1:[e.SANDILE],29:[e.KROKOROK],40:[e.KROOKODILE]},e.HELIOPTILE],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.MARACTUS,{1:[e.BRAMBLIN],30:[e.BRAMBLEGHAST]},e.ORTHWORM]},2:{[N.DAWN]:[{1:[e.VIBRAVA],45:[e.FLYGON]}],[N.DAY]:[{1:[e.VIBRAVA],45:[e.FLYGON]}],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[{1:[e.DARUMAKA],35:[e.DARMANITAN]}]},3:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[{1:[e.LILEEP],40:[e.CRADILY]},{1:[e.ANORITH],40:[e.ARMALDO]}]},4:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.REGIROCK,e.TAPU_BULU,e.PHEROMOSA]},5:{[N.DAWN]:[e.HIPPOWDON,e.HELIOLISK,e.RABSCA],[N.DAY]:[e.HIPPOWDON,e.HELIOLISK,e.RABSCA],[N.DUSK]:[e.CACTURNE,e.KROOKODILE],[N.NIGHT]:[e.CACTURNE,e.KROOKODILE],[N.ALL]:[e.SANDSLASH,e.DRAPION,e.DARMANITAN,e.MARACTUS,e.SANDACONDA,e.BRAMBLEGHAST]},6:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.CRADILY,e.ARMALDO]},7:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.REGIROCK,e.TAPU_BULU,e.PHEROMOSA]},8:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[]}},[r.ICE_CAVE]:{0:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[{1:[e.SEEL],34:[e.DEWGONG]},{1:[e.SWINUB],33:[e.PILOSWINE]},{1:[e.SNOVER],40:[e.ABOMASNOW]},{1:[e.VANILLITE],35:[e.VANILLISH],47:[e.VANILLUXE]},{1:[e.CUBCHOO],37:[e.BEARTIC]},{1:[e.BERGMITE],37:[e.AVALUGG]},e.CRABRAWLER,{1:[e.SNOM],20:[e.FROSMOTH]}]},1:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.SNEASEL,{1:[e.SNORUNT],42:[e.GLALIE]},{1:[e.SPHEAL],32:[e.SEALEO],44:[e.WALREIN]},e.EISCUE,{1:[e.CETODDLE],30:[e.CETITAN]}]},2:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.JYNX,e.LAPRAS,e.FROSLASS,e.CRYOGONAL]},3:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.DELIBIRD,e.ROTOM,{1:[e.AMAURA],59:[e.AURORUS]}]},4:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.ARTICUNO,e.REGICE]},5:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.DEWGONG,e.GLALIE,e.WALREIN,e.WEAVILE,e.MAMOSWINE,e.FROSLASS,e.VANILLUXE,e.BEARTIC,e.CRYOGONAL,e.AVALUGG,e.CRABOMINABLE,e.CETITAN]},6:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.JYNX,e.LAPRAS,e.GLACEON,e.AURORUS]},7:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.ARTICUNO,e.REGICE,e.ROTOM]},8:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.KYUREM]}},[r.MEADOW]:{0:{[N.DAWN]:[{1:[e.LEDYBA],18:[e.LEDIAN]},e.ROSELIA,e.COTTONEE,e.MINCCINO],[N.DAY]:[e.ROSELIA,e.COTTONEE,e.MINCCINO],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[{1:[e.BLITZLE],27:[e.ZEBSTRIKA]},{1:[e.FLABEBE],19:[e.FLOETTE]},{1:[e.CUTIEFLY],25:[e.RIBOMBEE]},{1:[e.GOSSIFLEUR],20:[e.ELDEGOSS]},{1:[e.WOOLOO],24:[e.DUBWOOL]}]},1:{[N.DAWN]:[{1:[e.PONYTA],40:[e.RAPIDASH]},{1:[e.SNUBBULL],23:[e.GRANBULL]},{1:[e.SKITTY],30:[e.DELCATTY]},e.BOUFFALANT,{1:[e.SMOLIV],25:[e.DOLLIV],35:[e.ARBOLIVA]}],[N.DAY]:[{1:[e.PONYTA],40:[e.RAPIDASH]},{1:[e.SNUBBULL],23:[e.GRANBULL]},{1:[e.SKITTY],30:[e.DELCATTY]},e.BOUFFALANT,{1:[e.SMOLIV],25:[e.DOLLIV],35:[e.ARBOLIVA]}],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[{1:[e.JIGGLYPUFF],30:[e.WIGGLYTUFF]},{1:[e.MAREEP],15:[e.FLAAFFY],30:[e.AMPHAROS]},{1:[e.RALTS],20:[e.KIRLIA],30:[e.GARDEVOIR]},{1:[e.GLAMEOW],38:[e.PURUGLY]},e.ORICORIO]},2:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[e.VOLBEAT,e.ILLUMISE],[N.ALL]:[e.TAUROS,e.EEVEE,e.MILTANK,e.SPINDA,{1:[e.APPLIN],30:[e.DIPPLIN]},{1:[e.SPRIGATITO],16:[e.FLORAGATO],36:[e.MEOWSCARADA]}]},3:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.CHANSEY,e.SYLVEON]},4:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.MELOETTA]},5:{[N.DAWN]:[e.LEDIAN,e.GRANBULL,e.DELCATTY,e.ROSERADE,e.CINCCINO,e.BOUFFALANT,e.ARBOLIVA],[N.DAY]:[e.GRANBULL,e.DELCATTY,e.ROSERADE,e.CINCCINO,e.BOUFFALANT,e.ARBOLIVA],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.TAUROS,e.MILTANK,e.GARDEVOIR,e.PURUGLY,e.ZEBSTRIKA,e.FLORGES,e.RIBOMBEE,e.DUBWOOL]},6:{[N.DAWN]:[e.HISUI_LILLIGANT],[N.DAY]:[e.HISUI_LILLIGANT],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.BLISSEY,e.SYLVEON,e.FLAPPLE,e.APPLETUN,e.MEOWSCARADA,e.HYDRAPPLE]},7:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.MELOETTA]},8:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.SHAYMIN]}},[r.POWER_PLANT]:{0:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.PIKACHU,{1:[e.MAGNEMITE],30:[e.MAGNETON]},{1:[e.VOLTORB],30:[e.ELECTRODE]},{1:[e.ELECTRIKE],26:[e.MANECTRIC]},{1:[e.SHINX],15:[e.LUXIO],30:[e.LUXRAY]},e.DEDENNE,{1:[e.GRUBBIN],20:[e.CHARJABUG]},{1:[e.PAWMI],18:[e.PAWMO],32:[e.PAWMOT]},{1:[e.TADBULB],30:[e.BELLIBOLT]}]},1:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.ELECTABUZZ,e.PLUSLE,e.MINUN,e.PACHIRISU,e.EMOLGA,e.TOGEDEMARU]},2:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[{1:[e.MAREEP],15:[e.FLAAFFY]}]},3:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.JOLTEON,e.HISUI_VOLTORB]},4:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.RAIKOU,e.THUNDURUS,e.XURKITREE,e.ZERAORA,e.REGIELEKI]},5:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.RAICHU,e.MANECTRIC,e.LUXRAY,e.MAGNEZONE,e.ELECTIVIRE,e.DEDENNE,e.VIKAVOLT,e.TOGEDEMARU,e.PAWMOT,e.BELLIBOLT]},6:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.JOLTEON,e.AMPHAROS,e.HISUI_ELECTRODE]},7:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.ZAPDOS,e.RAIKOU,e.THUNDURUS,e.XURKITREE,e.ZERAORA,e.REGIELEKI]},8:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.ZEKROM]}},[r.VOLCANO]:{0:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.VULPIX,e.GROWLITHE,{1:[e.PONYTA],40:[e.RAPIDASH]},{1:[e.SLUGMA],38:[e.MAGCARGO]},{1:[e.NUMEL],33:[e.CAMERUPT]},{1:[e.SALANDIT],33:[e.SALAZZLE]},{1:[e.ROLYCOLY],18:[e.CARKOL],34:[e.COALOSSAL]}]},1:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.MAGMAR,e.TORKOAL,{1:[e.PANSEAR],30:[e.SIMISEAR]},e.HEATMOR,e.TURTONATOR]},2:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[{1:[e.CHARMANDER],16:[e.CHARMELEON],36:[e.CHARIZARD]},{1:[e.CYNDAQUIL],14:[e.QUILAVA],36:[e.TYPHLOSION]},{1:[e.CHIMCHAR],14:[e.MONFERNO],36:[e.INFERNAPE]},{1:[e.TEPIG],17:[e.PIGNITE],36:[e.EMBOAR]},{1:[e.FENNEKIN],16:[e.BRAIXEN],36:[e.DELPHOX]},{1:[e.LITTEN],17:[e.TORRACAT],34:[e.INCINEROAR]},{1:[e.SCORBUNNY],16:[e.RABOOT],35:[e.CINDERACE]},{1:[e.CHARCADET],30:[e.ARMAROUGE]}]},3:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.FLAREON,e.ROTOM,{1:[e.LARVESTA],59:[e.VOLCARONA]},e.HISUI_GROWLITHE]},4:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.ENTEI,e.HEATRAN,e.VOLCANION,e.CHI_YU]},5:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.NINETALES,e.ARCANINE,e.RAPIDASH,e.MAGCARGO,e.CAMERUPT,e.TORKOAL,e.MAGMORTAR,e.SIMISEAR,e.HEATMOR,e.SALAZZLE,e.TURTONATOR,e.COALOSSAL]},6:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.CHARIZARD,e.FLAREON,e.TYPHLOSION,e.INFERNAPE,e.EMBOAR,e.VOLCARONA,e.DELPHOX,e.INCINEROAR,e.CINDERACE,e.ARMAROUGE,e.HISUI_ARCANINE]},7:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.MOLTRES,e.ENTEI,e.ROTOM,e.HEATRAN,e.VOLCANION,e.CHI_YU]},8:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.RESHIRAM]}},[r.GRAVEYARD]:{0:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[{1:[e.GASTLY],25:[e.HAUNTER]},{1:[e.SHUPPET],37:[e.BANETTE]},{1:[e.DUSKULL],37:[e.DUSCLOPS]},{1:[e.DRIFLOON],28:[e.DRIFBLIM]},{1:[e.LITWICK],41:[e.LAMPENT]},e.PHANTUMP,e.PUMPKABOO,{1:[e.GREAVARD],60:[e.HOUNDSTONE]}]},1:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[{1:[e.CUBONE],28:[e.MAROWAK]},{1:[e.YAMASK],34:[e.COFAGRIGUS]},{1:[e.SINISTEA],30:[e.POLTEAGEIST]}]},2:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.MISDREAVUS,e.MIMIKYU,{1:[e.FUECOCO],16:[e.CROCALOR],36:[e.SKELEDIRGE]},e.CERULEDGE]},3:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.SPIRITOMB]},4:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.MARSHADOW,e.SPECTRIER]},5:{[N.DAWN]:[e.MAROWAK],[N.DAY]:[e.MAROWAK],[N.DUSK]:[e.MAROWAK],[N.NIGHT]:[],[N.ALL]:[e.GENGAR,e.BANETTE,e.DRIFBLIM,e.MISMAGIUS,e.DUSKNOIR,e.CHANDELURE,e.TREVENANT,e.GOURGEIST,e.MIMIKYU,e.POLTEAGEIST,e.HOUNDSTONE]},6:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.SKELEDIRGE,e.CERULEDGE,e.HISUI_TYPHLOSION]},7:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.MARSHADOW,e.SPECTRIER]},8:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.GIRATINA]}},[r.DOJO]:{0:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[{1:[e.MANKEY],28:[e.PRIMEAPE],75:[e.ANNIHILAPE]},{1:[e.MAKUHITA],24:[e.HARIYAMA]},{1:[e.MEDITITE],37:[e.MEDICHAM]},{1:[e.STUFFUL],27:[e.BEWEAR]},{1:[e.CLOBBOPUS],55:[e.GRAPPLOCT]}]},1:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[{1:[e.CROAGUNK],37:[e.TOXICROAK]},{1:[e.SCRAGGY],39:[e.SCRAFTY]},{1:[e.MIENFOO],50:[e.MIENSHAO]}]},2:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.HITMONLEE,e.HITMONCHAN,e.LUCARIO,e.THROH,e.SAWK,{1:[e.PANCHAM],52:[e.PANGORO]}]},3:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.HITMONTOP,e.GALLADE,e.GALAR_FARFETCHD]},4:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.TERRAKION,e.KUBFU,e.GALAR_ZAPDOS]},5:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.HITMONLEE,e.HITMONCHAN,e.HARIYAMA,e.MEDICHAM,e.LUCARIO,e.TOXICROAK,e.THROH,e.SAWK,e.SCRAFTY,e.MIENSHAO,e.BEWEAR,e.GRAPPLOCT,e.ANNIHILAPE]},6:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.HITMONTOP,e.GALLADE,e.PANGORO,e.SIRFETCHD,e.HISUI_DECIDUEYE]},7:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.TERRAKION,e.URSHIFU]},8:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.ZAMAZENTA,e.GALAR_ZAPDOS]}},[r.FACTORY]:{0:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[{1:[e.MACHOP],28:[e.MACHOKE]},{1:[e.MAGNEMITE],30:[e.MAGNETON]},{1:[e.VOLTORB],30:[e.ELECTRODE]},{1:[e.TIMBURR],25:[e.GURDURR]},{1:[e.KLINK],38:[e.KLANG],49:[e.KLINKLANG]}]},1:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[{1:[e.BRONZOR],33:[e.BRONZONG]},e.KLEFKI]},2:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[{1:[e.PORYGON],30:[e.PORYGON2]}]},3:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[{1:[e.BELDUM],20:[e.METANG],45:[e.METAGROSS]}]},4:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.GENESECT,e.MAGEARNA]},5:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.KLINKLANG,e.KLEFKI]},6:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[]},7:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.GENESECT,e.MAGEARNA]},8:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[]}},[r.RUINS]:{0:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[{1:[e.DROWZEE],26:[e.HYPNO]},{1:[e.NATU],25:[e.XATU]},e.UNOWN,{1:[e.SPOINK],32:[e.GRUMPIG]},{1:[e.BALTOY],36:[e.CLAYDOL]},{1:[e.ELGYEM],42:[e.BEHEEYEM]}]},1:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[{1:[e.ABRA],16:[e.KADABRA]},e.SIGILYPH,{1:[e.TINKATINK],24:[e.TINKATUFF],38:[e.TINKATON]}]},2:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.MR_MIME,e.WOBBUFFET,{1:[e.GOTHITA],32:[e.GOTHORITA],41:[e.GOTHITELLE]},e.STONJOURNER]},3:{[N.DAWN]:[],[N.DAY]:[e.ESPEON],[N.DUSK]:[{1:[e.GALAR_YAMASK],34:[e.RUNERIGUS]}],[N.NIGHT]:[{1:[e.GALAR_YAMASK],34:[e.RUNERIGUS]}],[N.ALL]:[{1:[e.ARCHEN],37:[e.ARCHEOPS]}]},4:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.REGISTEEL,e.FEZANDIPITI]},5:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.ALAKAZAM,e.HYPNO,e.XATU,e.GRUMPIG,e.CLAYDOL,e.SIGILYPH,e.GOTHITELLE,e.BEHEEYEM,e.TINKATON]},6:{[N.DAWN]:[],[N.DAY]:[e.ESPEON],[N.DUSK]:[e.RUNERIGUS],[N.NIGHT]:[e.RUNERIGUS],[N.ALL]:[e.MR_MIME,e.WOBBUFFET,e.ARCHEOPS]},7:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.REGISTEEL,e.FEZANDIPITI]},8:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.KORAIDON]}},[r.WASTELAND]:{0:{[N.DAWN]:[{1:[e.BAGON],30:[e.SHELGON],50:[e.SALAMENCE]},{1:[e.GOOMY],40:[e.SLIGGOO],80:[e.GOODRA]},{1:[e.JANGMO_O],35:[e.HAKAMO_O],45:[e.KOMMO_O]}],[N.DAY]:[{1:[e.BAGON],30:[e.SHELGON],50:[e.SALAMENCE]},{1:[e.GOOMY],40:[e.SLIGGOO],80:[e.GOODRA]},{1:[e.JANGMO_O],35:[e.HAKAMO_O],45:[e.KOMMO_O]}],[N.DUSK]:[{1:[e.LARVITAR],30:[e.PUPITAR],55:[e.TYRANITAR]}],[N.NIGHT]:[{1:[e.LARVITAR],30:[e.PUPITAR],55:[e.TYRANITAR]}],[N.ALL]:[{1:[e.VIBRAVA],45:[e.FLYGON]},{1:[e.GIBLE],24:[e.GABITE],48:[e.GARCHOMP]},{1:[e.AXEW],38:[e.FRAXURE],48:[e.HAXORUS]}]},1:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[{1:[e.DEINO],50:[e.ZWEILOUS],64:[e.HYDREIGON]}],[N.NIGHT]:[{1:[e.DEINO],50:[e.ZWEILOUS],64:[e.HYDREIGON]}],[N.ALL]:[{1:[e.SWABLU],35:[e.ALTARIA]},e.DRAMPA,e.CYCLIZAR]},2:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[{1:[e.DREEPY],50:[e.DRAKLOAK],60:[e.DRAGAPULT]}],[N.NIGHT]:[{1:[e.DREEPY],50:[e.DRAKLOAK],60:[e.DRAGAPULT]}],[N.ALL]:[{1:[e.DRATINI],30:[e.DRAGONAIR],55:[e.DRAGONITE]},{1:[e.FRIGIBAX],35:[e.ARCTIBAX],54:[e.BAXCALIBUR]}]},3:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.AERODACTYL,e.DRUDDIGON,{1:[e.TYRUNT],59:[e.TYRANTRUM]},e.DRACOZOLT,e.DRACOVISH]},4:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.REGIDRAGO]},5:{[N.DAWN]:[e.SALAMENCE,e.GOODRA,e.KOMMO_O],[N.DAY]:[e.SALAMENCE,e.GOODRA,e.KOMMO_O],[N.DUSK]:[e.TYRANITAR,e.DRAGAPULT],[N.NIGHT]:[e.TYRANITAR,e.DRAGAPULT],[N.ALL]:[e.DRAGONITE,e.FLYGON,e.GARCHOMP,e.HAXORUS,e.DRAMPA,e.BAXCALIBUR]},6:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.AERODACTYL,e.DRUDDIGON,e.TYRANTRUM,e.DRACOZOLT,e.DRACOVISH]},7:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.REGIDRAGO]},8:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.DIALGA]}},[r.ABYSS]:{0:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.MURKROW,{1:[e.HOUNDOUR],24:[e.HOUNDOOM]},e.SABLEYE,{1:[e.PURRLOIN],20:[e.LIEPARD]},{1:[e.PAWNIARD],52:[e.BISHARP],64:[e.KINGAMBIT]},{1:[e.NICKIT],18:[e.THIEVUL]},{1:[e.IMPIDIMP],32:[e.MORGREM],42:[e.GRIMMSNARL]},{1:[e.MASCHIFF],30:[e.MABOSSTIFF]}]},1:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[]},2:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.ABSOL,e.SPIRITOMB,{1:[e.ZORUA],30:[e.ZOROARK]},{1:[e.DEINO],50:[e.ZWEILOUS],64:[e.HYDREIGON]}]},3:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.UMBREON]},4:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.DARKRAI,e.GALAR_MOLTRES]},5:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.HOUNDOOM,e.SABLEYE,e.ABSOL,e.HONCHKROW,e.SPIRITOMB,e.LIEPARD,e.ZOROARK,e.HYDREIGON,e.THIEVUL,e.GRIMMSNARL,e.MABOSSTIFF,e.KINGAMBIT]},6:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.UMBREON,e.HISUI_SAMUROTT]},7:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.DARKRAI]},8:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.PALKIA,e.YVELTAL,e.GALAR_MOLTRES]}},[r.SPACE]:{0:{[N.DAWN]:[],[N.DAY]:[e.SOLROCK],[N.DUSK]:[],[N.NIGHT]:[e.LUNATONE],[N.ALL]:[e.CLEFAIRY,{1:[e.BRONZOR],33:[e.BRONZONG]},{1:[e.MUNNA],30:[e.MUSHARNA]},e.MINIOR]},1:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[{1:[e.BALTOY],36:[e.CLAYDOL]},{1:[e.ELGYEM],42:[e.BEHEEYEM]}]},2:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[{1:[e.BELDUM],20:[e.METANG],45:[e.METAGROSS]},e.SIGILYPH,{1:[e.SOLOSIS],32:[e.DUOSION],41:[e.REUNICLUS]}]},3:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[{1:[e.PORYGON],30:[e.PORYGON2]}]},4:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[{1:[e.COSMOG],43:[e.COSMOEM]},e.CELESTEELA]},5:{[N.DAWN]:[],[N.DAY]:[e.SOLROCK],[N.DUSK]:[],[N.NIGHT]:[e.LUNATONE],[N.ALL]:[e.CLEFABLE,e.BRONZONG,e.MUSHARNA,e.REUNICLUS,e.MINIOR]},6:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.METAGROSS,e.PORYGON_Z]},7:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.CELESTEELA]},8:{[N.DAWN]:[],[N.DAY]:[e.SOLGALEO],[N.DUSK]:[],[N.NIGHT]:[e.LUNALA],[N.ALL]:[e.RAYQUAZA,e.NECROZMA]}},[r.CONSTRUCTION_SITE]:{0:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[{1:[e.MACHOP],28:[e.MACHOKE]},{1:[e.MAGNEMITE],30:[e.MAGNETON]},{1:[e.DRILBUR],31:[e.EXCADRILL]},{1:[e.TIMBURR],25:[e.GURDURR]}]},1:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[{1:[e.GRIMER],38:[e.MUK]},{1:[e.KOFFING],35:[e.WEEZING]},{1:[e.RHYHORN],42:[e.RHYDON]},{1:[e.SCRAGGY],39:[e.SCRAFTY]}]},2:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[{1:[e.GALAR_MEOWTH],28:[e.PERRSERKER]}],[N.NIGHT]:[],[N.ALL]:[e.ONIX,e.HITMONLEE,e.HITMONCHAN,e.DURALUDON]},3:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.DITTO,e.HITMONTOP]},4:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.COBALION,e.STAKATAKA]},5:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.MACHAMP,e.CONKELDURR]},6:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[e.PERRSERKER],[N.NIGHT]:[],[N.ALL]:[e.ARCHALUDON]},7:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.COBALION,e.STAKATAKA]},8:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[]}},[r.JUNGLE]:{0:{[N.DAWN]:[e.VESPIQUEN,{1:[e.CHERUBI],25:[e.CHERRIM]},{1:[e.SEWADDLE],20:[e.SWADLOON],30:[e.LEAVANNY]}],[N.DAY]:[e.VESPIQUEN,{1:[e.CHERUBI],25:[e.CHERRIM]},{1:[e.SEWADDLE],20:[e.SWADLOON],30:[e.LEAVANNY]}],[N.DUSK]:[e.SHROOMISH,{1:[e.PURRLOIN],20:[e.LIEPARD]},{1:[e.FOONGUS],39:[e.AMOONGUSS]}],[N.NIGHT]:[{1:[e.SPINARAK],22:[e.ARIADOS]},e.SHROOMISH,{1:[e.PURRLOIN],20:[e.LIEPARD]},{1:[e.FOONGUS],39:[e.AMOONGUSS]}],[N.ALL]:[e.AIPOM,{1:[e.BLITZLE],27:[e.ZEBSTRIKA]},{1:[e.PIKIPEK],14:[e.TRUMBEAK],28:[e.TOUCANNON]}]},1:{[N.DAWN]:[e.EXEGGCUTE,e.TROPIUS,e.COMBEE,e.KOMALA],[N.DAY]:[e.EXEGGCUTE,e.TROPIUS,e.COMBEE,e.KOMALA],[N.DUSK]:[e.TANGELA,{1:[e.SPINARAK],22:[e.ARIADOS]},{1:[e.PANCHAM],52:[e.PANGORO]}],[N.NIGHT]:[e.TANGELA,{1:[e.PANCHAM],52:[e.PANGORO]}],[N.ALL]:[{1:[e.PANSAGE],30:[e.SIMISAGE]},{1:[e.PANSEAR],30:[e.SIMISEAR]},{1:[e.PANPOUR],30:[e.SIMIPOUR]},{1:[e.JOLTIK],36:[e.GALVANTULA]},{1:[e.LITLEO],35:[e.PYROAR]},{1:[e.FOMANTIS],44:[e.LURANTIS]},e.FALINKS]},2:{[N.DAWN]:[{1:[e.FOONGUS],39:[e.AMOONGUSS]},e.PASSIMIAN,{1:[e.GALAR_PONYTA],40:[e.GALAR_RAPIDASH]}],[N.DAY]:[{1:[e.FOONGUS],39:[e.AMOONGUSS]},e.PASSIMIAN],[N.DUSK]:[e.ORANGURU],[N.NIGHT]:[e.ORANGURU],[N.ALL]:[e.SCYTHER,e.YANMA,{1:[e.SLAKOTH],18:[e.VIGOROTH],36:[e.SLAKING]},e.SEVIPER,e.CARNIVINE,{1:[e.SNIVY],17:[e.SERVINE],36:[e.SERPERIOR]},{1:[e.GROOKEY],16:[e.THWACKEY],35:[e.RILLABOOM]}]},3:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.KANGASKHAN,e.CHATOT,e.KLEAVOR]},4:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.TAPU_LELE,e.BUZZWOLE,e.ZARUDE,e.MUNKIDORI]},5:{[N.DAWN]:[e.EXEGGUTOR,e.TROPIUS,e.CHERRIM,e.LEAVANNY,e.KOMALA],[N.DAY]:[e.EXEGGUTOR,e.TROPIUS,e.CHERRIM,e.LEAVANNY,e.KOMALA],[N.DUSK]:[e.BRELOOM,e.TANGROWTH,e.AMOONGUSS,e.PANGORO],[N.NIGHT]:[e.BRELOOM,e.TANGROWTH,e.AMOONGUSS,e.PANGORO],[N.ALL]:[e.SEVIPER,e.AMBIPOM,e.CARNIVINE,e.YANMEGA,e.GALVANTULA,e.PYROAR,e.TOUCANNON,e.LURANTIS,e.FALINKS]},6:{[N.DAWN]:[e.AMOONGUSS,e.GALAR_RAPIDASH],[N.DAY]:[e.AMOONGUSS],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.KANGASKHAN,e.SCIZOR,e.SLAKING,e.LEAFEON,e.SERPERIOR,e.RILLABOOM]},7:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.TAPU_LELE,e.BUZZWOLE,e.ZARUDE,e.MUNKIDORI]},8:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.KLEAVOR]}},[r.FAIRY_CAVE]:{0:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[{1:[e.JIGGLYPUFF],30:[e.WIGGLYTUFF]},{1:[e.MARILL],18:[e.AZUMARILL]},e.MAWILE,{1:[e.SPRITZEE],40:[e.AROMATISSE]},{1:[e.SWIRLIX],40:[e.SLURPUFF]},{1:[e.CUTIEFLY],25:[e.RIBOMBEE]},{1:[e.MORELULL],24:[e.SHIINOTIC]},{1:[e.MILCERY],30:[e.ALCREMIE]}]},1:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.CLEFAIRY,e.TOGETIC,{1:[e.RALTS],20:[e.KIRLIA],30:[e.GARDEVOIR]},e.CARBINK,e.COMFEY,{1:[e.HATENNA],32:[e.HATTREM],42:[e.HATTERENE]}]},2:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.AUDINO,e.ETERNAL_FLOETTE]},3:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[]},4:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.DIANCIE,e.ENAMORUS]},5:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.WIGGLYTUFF,e.MAWILE,e.TOGEKISS,e.AUDINO,e.AROMATISSE,e.SLURPUFF,e.CARBINK,e.RIBOMBEE,e.SHIINOTIC,e.COMFEY,e.HATTERENE,e.ALCREMIE]},6:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.ETERNAL_FLOETTE]},7:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.DIANCIE,e.ENAMORUS]},8:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.XERNEAS]}},[r.TEMPLE]:{0:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[{1:[e.GASTLY],25:[e.HAUNTER]},{1:[e.NATU],25:[e.XATU]},{1:[e.DUSKULL],37:[e.DUSCLOPS]},{1:[e.YAMASK],34:[e.COFAGRIGUS]},{1:[e.GOLETT],43:[e.GOLURK]},{1:[e.HONEDGE],35:[e.DOUBLADE]}]},1:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[{1:[e.CUBONE],28:[e.MAROWAK]},{1:[e.BALTOY],36:[e.CLAYDOL]},{1:[e.CHINGLING],20:[e.CHIMECHO]},{1:[e.SKORUPI],40:[e.DRAPION]},{1:[e.LITWICK],41:[e.LAMPENT]}]},2:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[{1:[e.GIMMIGHOUL],40:[e.GHOLDENGO]}]},3:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[]},4:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.HOOPA,e.TAPU_KOKO]},5:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.CHIMECHO,e.COFAGRIGUS,e.GOLURK,e.AEGISLASH]},6:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.GHOLDENGO]},7:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.HOOPA,e.TAPU_KOKO]},8:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.REGIGIGAS]}},[r.SLUM]:{0:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[{1:[e.PATRAT],20:[e.WATCHOG]}],[N.NIGHT]:[{1:[e.PATRAT],20:[e.WATCHOG]}],[N.ALL]:[{1:[e.RATTATA],20:[e.RATICATE]},{1:[e.GRIMER],38:[e.MUK]},{1:[e.KOFFING],35:[e.WEEZING]},{1:[e.TRUBBISH],36:[e.GARBODOR]}]},1:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[{1:[e.STUNKY],34:[e.SKUNTANK]}],[N.NIGHT]:[{1:[e.STUNKY],34:[e.SKUNTANK]}],[N.ALL]:[{1:[e.BURMY],20:[e.WORMADAM]}]},2:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[e.TOXTRICITY,{1:[e.GALAR_LINOONE],65:[e.OBSTAGOON]},e.GALAR_ZIGZAGOON],[N.NIGHT]:[e.TOXTRICITY,{1:[e.GALAR_LINOONE],65:[e.OBSTAGOON]},e.GALAR_ZIGZAGOON],[N.ALL]:[{1:[e.VAROOM],40:[e.REVAVROOM]}]},3:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[]},4:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.GUZZLORD]},5:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[e.SKUNTANK,e.WATCHOG],[N.NIGHT]:[e.SKUNTANK,e.WATCHOG],[N.ALL]:[e.MUK,e.WEEZING,e.WORMADAM,e.GARBODOR]},6:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[e.TOXTRICITY,e.OBSTAGOON],[N.NIGHT]:[e.TOXTRICITY,e.OBSTAGOON],[N.ALL]:[e.REVAVROOM,e.GALAR_WEEZING]},7:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.GUZZLORD]},8:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[]}},[r.SNOWY_FOREST]:{0:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[e.SNEASEL,{1:[e.TEDDIURSA],30:[e.URSARING]},{1:[e.SNOM],20:[e.FROSMOTH]}],[N.NIGHT]:[e.SNEASEL,{1:[e.TEDDIURSA],30:[e.URSARING]},{1:[e.SNOM],20:[e.FROSMOTH]}],[N.ALL]:[{1:[e.SWINUB],33:[e.PILOSWINE]},{1:[e.SNOVER],40:[e.ABOMASNOW]},e.EISCUE]},1:{[N.DAWN]:[e.SNEASEL,{1:[e.TEDDIURSA],30:[e.URSARING]},e.STANTLER],[N.DAY]:[e.SNEASEL,{1:[e.TEDDIURSA],30:[e.URSARING]},e.STANTLER],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[]},2:{[N.DAWN]:[{1:[e.GALAR_DARUMAKA],30:[e.GALAR_DARMANITAN]}],[N.DAY]:[{1:[e.GALAR_DARUMAKA],30:[e.GALAR_DARMANITAN]}],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.DELIBIRD,{1:[e.ALOLA_SANDSHREW],30:[e.ALOLA_SANDSLASH]},{1:[e.ALOLA_VULPIX],30:[e.ALOLA_NINETALES]}]},3:{[N.DAWN]:[e.HISUI_SNEASEL],[N.DAY]:[e.HISUI_SNEASEL],[N.DUSK]:[{1:[e.HISUI_ZORUA],30:[e.HISUI_ZOROARK]}],[N.NIGHT]:[{1:[e.HISUI_ZORUA],30:[e.HISUI_ZOROARK]}],[N.ALL]:[{1:[e.GALAR_MR_MIME],42:[e.MR_RIME]},e.ARCTOZOLT,e.HISUI_AVALUGG]},4:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.GLASTRIER,e.CHIEN_PAO,e.GALAR_ARTICUNO]},5:{[N.DAWN]:[e.WYRDEER],[N.DAY]:[e.WYRDEER],[N.DUSK]:[e.FROSMOTH],[N.NIGHT]:[e.FROSMOTH],[N.ALL]:[e.ABOMASNOW,e.URSALUNA]},6:{[N.DAWN]:[e.SNEASLER,e.GALAR_DARMANITAN],[N.DAY]:[e.SNEASLER,e.GALAR_DARMANITAN],[N.DUSK]:[e.HISUI_ZOROARK],[N.NIGHT]:[e.HISUI_ZOROARK],[N.ALL]:[e.MR_RIME,e.ARCTOZOLT,e.ALOLA_SANDSLASH,e.ALOLA_NINETALES]},7:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.GLASTRIER,e.CHIEN_PAO]},8:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.ZACIAN,e.GALAR_ARTICUNO]}},[r.ISLAND]:{0:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[{1:[e.ALOLA_RATTATA],30:[e.ALOLA_RATICATE]},{1:[e.ALOLA_MEOWTH],30:[e.ALOLA_PERSIAN]}],[N.NIGHT]:[{1:[e.ALOLA_RATTATA],30:[e.ALOLA_RATICATE]},{1:[e.ALOLA_MEOWTH],30:[e.ALOLA_PERSIAN]}],[N.ALL]:[e.ORICORIO,{1:[e.ALOLA_SANDSHREW],30:[e.ALOLA_SANDSLASH]},{1:[e.ALOLA_VULPIX],30:[e.ALOLA_NINETALES]},{1:[e.ALOLA_DIGLETT],26:[e.ALOLA_DUGTRIO]},{1:[e.ALOLA_GEODUDE],25:[e.ALOLA_GRAVELER],40:[e.ALOLA_GOLEM]},{1:[e.ALOLA_GRIMER],38:[e.ALOLA_MUK]}]},1:{[N.DAWN]:[e.ALOLA_RAICHU,e.ALOLA_EXEGGUTOR],[N.DAY]:[e.ALOLA_RAICHU,e.ALOLA_EXEGGUTOR],[N.DUSK]:[e.ALOLA_MAROWAK],[N.NIGHT]:[e.ALOLA_MAROWAK],[N.ALL]:[e.BRUXISH]},2:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[]},3:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[]},4:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.BLACEPHALON]},5:{[N.DAWN]:[e.ALOLA_RAICHU,e.ALOLA_EXEGGUTOR],[N.DAY]:[e.ALOLA_RAICHU,e.ALOLA_EXEGGUTOR],[N.DUSK]:[e.ALOLA_RATICATE,e.ALOLA_PERSIAN,e.ALOLA_MAROWAK],[N.NIGHT]:[e.ALOLA_RATICATE,e.ALOLA_PERSIAN,e.ALOLA_MAROWAK],[N.ALL]:[e.ORICORIO,e.BRUXISH,e.ALOLA_SANDSLASH,e.ALOLA_NINETALES,e.ALOLA_DUGTRIO,e.ALOLA_GOLEM,e.ALOLA_MUK]},6:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[]},7:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.BLACEPHALON]},8:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[]}},[r.LABORATORY]:{0:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[{1:[e.MAGNEMITE],30:[e.MAGNETON]},{1:[e.GRIMER],38:[e.MUK]},{1:[e.VOLTORB],30:[e.ELECTRODE]},{1:[e.BRONZOR],33:[e.BRONZONG]},{1:[e.KLINK],38:[e.KLANG],49:[e.KLINKLANG]}]},1:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[{1:[e.SOLOSIS],32:[e.DUOSION],41:[e.REUNICLUS]}]},2:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.DITTO,{1:[e.PORYGON],30:[e.PORYGON2]}]},3:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.ROTOM]},4:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.TYPE_NULL]},5:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.MUK,e.ELECTRODE,e.BRONZONG,e.MAGNEZONE,e.PORYGON_Z,e.REUNICLUS,e.KLINKLANG]},6:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[]},7:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.ROTOM,e.ZYGARDE,e.SILVALLY]},8:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.MEWTWO,e.MIRAIDON]}},[r.END]:{0:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS]},1:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.ROARING_MOON,e.IRON_VALIANT]},2:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.WALKING_WAKE,e.IRON_LEAVES,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN]},3:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[]},4:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[]},5:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[e.ETERNATUS]},6:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[]},7:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[]},8:{[N.DAWN]:[],[N.DAY]:[],[N.DUSK]:[],[N.NIGHT]:[],[N.ALL]:[]}}},Ga={[r.TOWN]:{0:[C.YOUNGSTER],1:[],2:[],3:[],4:[],5:[],6:[],7:[],8:[]},[r.PLAINS]:{0:[C.BREEDER,C.TWINS],1:[C.ACE_TRAINER,C.CYCLIST],2:[C.BLACK_BELT],3:[],4:[],5:[C.CILAN,C.CHILI,C.CRESS,C.CHEREN],6:[],7:[],8:[]},[r.GRASS]:{0:[C.BREEDER,C.SCHOOL_KID],1:[C.ACE_TRAINER],2:[C.BLACK_BELT],3:[],4:[],5:[C.ERIKA],6:[],7:[],8:[]},[r.TALL_GRASS]:{0:[],1:[C.ACE_TRAINER,C.BREEDER,C.RANGER],2:[],3:[],4:[],5:[C.GARDENIA,C.VIOLA,C.BRASSIUS],6:[],7:[],8:[]},[r.METROPOLIS]:{0:[C.CLERK,C.CYCLIST,C.OFFICER,C.WAITER],1:[C.BREEDER,C.DEPOT_AGENT,C.GUITARIST],2:[C.ARTIST],3:[],4:[],5:[C.WHITNEY,C.NORMAN,C.IONO,C.LARRY],6:[],7:[],8:[]},[r.FOREST]:{0:[C.RANGER],1:[],2:[],3:[],4:[],5:[C.BUGSY,C.BURGH,C.KATY],6:[],7:[],8:[]},[r.SEA]:{0:[C.SWIMMER,C.SAILOR],1:[],2:[],3:[],4:[],5:[C.MARLON],6:[],7:[],8:[]},[r.SWAMP]:{0:[],1:[C.ACE_TRAINER],2:[C.BLACK_BELT],3:[],4:[],5:[C.JANINE,C.ROXIE],6:[],7:[],8:[]},[r.BEACH]:{0:[C.FISHERMAN,C.PARASOL_LADY,C.SAILOR],1:[C.ACE_TRAINER,C.BREEDER],2:[C.BLACK_BELT],3:[],4:[],5:[C.MISTY,C.KOFU],6:[],7:[],8:[]},[r.LAKE]:{0:[C.BREEDER,C.FISHERMAN],1:[C.ACE_TRAINER],2:[C.BLACK_BELT],3:[],4:[],5:[C.CRASHER_WAKE],6:[],7:[],8:[]},[r.SEABED]:{0:[],1:[],2:[],3:[],4:[],5:[C.JUAN],6:[],7:[],8:[]},[r.MOUNTAIN]:{0:[C.BACKPACKER,C.BLACK_BELT,C.HIKER],1:[C.ACE_TRAINER],2:[],3:[],4:[],5:[C.FALKNER,C.WINONA,C.SKYLA],6:[],7:[],8:[]},[r.BADLANDS]:{0:[C.BACKPACKER,C.HIKER],1:[C.ACE_TRAINER],2:[],3:[],4:[],5:[C.CLAY,C.GRANT],6:[],7:[],8:[]},[r.CAVE]:{0:[C.BACKPACKER,C.HIKER],1:[C.ACE_TRAINER,C.BLACK_BELT],2:[],3:[],4:[],5:[C.BROCK,C.ROXANNE,C.ROARK],6:[],7:[],8:[]},[r.DESERT]:{0:[C.SCIENTIST],1:[],2:[],3:[],4:[],5:[C.GORDIE],6:[],7:[],8:[]},[r.ICE_CAVE]:{0:[C.SNOW_WORKER],1:[],2:[],3:[],4:[],5:[C.PRYCE,C.BRYCEN,C.WULFRIC,C.GRUSHA],6:[],7:[],8:[]},[r.MEADOW]:{0:[C.PARASOL_LADY],1:[C.ACE_TRAINER,C.BREEDER],2:[],3:[],4:[],5:[C.LENORA,C.MILO],6:[],7:[],8:[]},[r.POWER_PLANT]:{0:[C.GUITARIST,C.WORKER],1:[],2:[],3:[],4:[],5:[C.VOLKNER,C.ELESA,C.CLEMONT],6:[],7:[],8:[]},[r.VOLCANO]:{0:[C.FIREBREATHER],1:[],2:[],3:[],4:[],5:[C.BLAINE,C.FLANNERY,C.KABU],6:[],7:[],8:[]},[r.GRAVEYARD]:{0:[C.PSYCHIC],1:[C.HEX_MANIAC],2:[],3:[],4:[],5:[C.MORTY,C.ALLISTER,C.RYME],6:[],7:[],8:[]},[r.DOJO]:{0:[C.BLACK_BELT],1:[],2:[],3:[],4:[],5:[C.BRAWLY,C.MAYLENE,C.KORRINA,C.BEA],6:[],7:[],8:[]},[r.FACTORY]:{0:[C.WORKER],1:[],2:[],3:[],4:[],5:[C.JASMINE,C.BYRON],6:[],7:[],8:[]},[r.RUINS]:{0:[C.PSYCHIC,C.SCIENTIST],1:[C.ACE_TRAINER,C.BLACK_BELT],2:[],3:[],4:[],5:[C.SABRINA,C.TATE,C.LIZA,C.TULIP],6:[],7:[],8:[]},[r.WASTELAND]:{0:[C.VETERAN],1:[],2:[],3:[],4:[],5:[C.CLAIR,C.DRAYDEN,C.RAIHAN],6:[],7:[],8:[]},[r.ABYSS]:{0:[],1:[C.ACE_TRAINER],2:[],3:[],4:[],5:[C.MARNIE],6:[],7:[],8:[]},[r.SPACE]:{0:[],1:[],2:[],3:[],4:[],5:[C.OLYMPIA],6:[],7:[],8:[]},[r.CONSTRUCTION_SITE]:{0:[C.OFFICER,C.WORKER],1:[],2:[],3:[],4:[],5:[C.LT_SURGE,C.CHUCK,C.WATTSON],6:[],7:[],8:[]},[r.JUNGLE]:{0:[C.BACKPACKER,C.RANGER],1:[],2:[],3:[],4:[],5:[C.RAMOS],6:[],7:[],8:[]},[r.FAIRY_CAVE]:{0:[C.BEAUTY],1:[C.ACE_TRAINER,C.BREEDER],2:[],3:[],4:[],5:[C.VALERIE,C.OPAL,C.BEDE],6:[],7:[],8:[]},[r.TEMPLE]:{0:[],1:[C.ACE_TRAINER],2:[],3:[],4:[],5:[C.FANTINA],6:[],7:[],8:[]},[r.SLUM]:{0:[C.BIKER,C.OFFICER,C.ROUGHNECK],1:[C.BAKER],2:[],3:[],4:[],5:[C.PIERS],6:[],7:[],8:[]},[r.SNOWY_FOREST]:{0:[C.SNOW_WORKER],1:[],2:[],3:[],4:[],5:[C.CANDICE,C.MELONY],6:[],7:[],8:[]},[r.ISLAND]:{0:[],1:[],2:[],3:[],4:[],5:[C.NESSA],6:[],7:[],8:[]},[r.LABORATORY]:{0:[],1:[],2:[],3:[],4:[],5:[C.GIOVANNI],6:[],7:[],8:[]},[r.END]:{0:[],1:[],2:[],3:[],4:[],5:[],6:[],7:[],8:[]}};function CQ(){const E=[[e.BULBASAUR,n.GRASS,n.POISON,[[r.GRASS,2]]],[e.IVYSAUR,n.GRASS,n.POISON,[[r.GRASS,2]]],[e.VENUSAUR,n.GRASS,n.POISON,[[r.GRASS,2],[r.GRASS,6]]],[e.CHARMANDER,n.FIRE,-1,[[r.VOLCANO,2]]],[e.CHARMELEON,n.FIRE,-1,[[r.VOLCANO,2]]],[e.CHARIZARD,n.FIRE,n.FLYING,[[r.VOLCANO,2],[r.VOLCANO,6]]],[e.SQUIRTLE,n.WATER,-1,[[r.LAKE,2]]],[e.WARTORTLE,n.WATER,-1,[[r.LAKE,2]]],[e.BLASTOISE,n.WATER,-1,[[r.LAKE,2],[r.LAKE,6]]],[e.CATERPIE,n.BUG,-1,[[r.TOWN,0,[N.DAWN,N.DAY]]]],[e.METAPOD,n.BUG,-1,[[r.TOWN,0,[N.DAWN,N.DAY]]]],[e.BUTTERFREE,n.BUG,n.FLYING,[[r.FOREST,0,[N.DAWN,N.DAY]]]],[e.WEEDLE,n.BUG,n.POISON,[[r.TOWN,0,[N.DUSK,N.NIGHT]]]],[e.KAKUNA,n.BUG,n.POISON,[[r.TOWN,0,[N.DUSK,N.NIGHT]]]],[e.BEEDRILL,n.BUG,n.POISON,[[r.FOREST,0,[N.DUSK,N.NIGHT]]]],[e.PIDGEY,n.NORMAL,n.FLYING,[[r.TOWN,0],[r.PLAINS,1],[r.MOUNTAIN,0]]],[e.PIDGEOTTO,n.NORMAL,n.FLYING,[[r.PLAINS,1],[r.MOUNTAIN,0]]],[e.PIDGEOT,n.NORMAL,n.FLYING,[[r.PLAINS,1],[r.MOUNTAIN,0],[r.MOUNTAIN,5]]],[e.RATTATA,n.NORMAL,-1,[[r.TOWN,0],[r.METROPOLIS,0],[r.SLUM,0]]],[e.RATICATE,n.NORMAL,-1,[[r.METROPOLIS,0],[r.SLUM,0]]],[e.SPEAROW,n.NORMAL,n.FLYING,[[r.TOWN,0],[r.PLAINS,1],[r.MOUNTAIN,0]]],[e.FEAROW,n.NORMAL,n.FLYING,[[r.PLAINS,1],[r.MOUNTAIN,0],[r.MOUNTAIN,5]]],[e.EKANS,n.POISON,-1,[[r.TOWN,1,[N.DUSK,N.NIGHT]],[r.FOREST,1],[r.SWAMP,1,[N.DAWN,N.DAY]],[r.SWAMP,0,[N.DUSK,N.NIGHT]]]],[e.ARBOK,n.POISON,-1,[[r.FOREST,1],[r.SWAMP,1,[N.DAWN,N.DAY]],[r.SWAMP,0,[N.DUSK,N.NIGHT]],[r.SWAMP,5,[N.DUSK,N.NIGHT]]]],[e.PIKACHU,n.ELECTRIC,-1,[[r.PLAINS,1],[r.METROPOLIS,1],[r.POWER_PLANT,0]]],[e.RAICHU,n.ELECTRIC,-1,[[r.POWER_PLANT,5]]],[e.SANDSHREW,n.GROUND,-1,[[r.BADLANDS,1],[r.DESERT,0]]],[e.SANDSLASH,n.GROUND,-1,[[r.BADLANDS,1],[r.DESERT,0],[r.DESERT,5]]],[e.NIDORAN_F,n.POISON,-1,[[r.TOWN,1,N.DAY],[r.TALL_GRASS,0,N.DAY]]],[e.NIDORINA,n.POISON,-1,[[r.TALL_GRASS,0,N.DAY]]],[e.NIDOQUEEN,n.POISON,n.GROUND,[[r.TALL_GRASS,5,N.DAY]]],[e.NIDORAN_M,n.POISON,-1,[[r.TOWN,1,N.DAY],[r.TALL_GRASS,0,N.DAY]]],[e.NIDORINO,n.POISON,-1,[[r.TALL_GRASS,0,N.DAY]]],[e.NIDOKING,n.POISON,n.GROUND,[[r.TALL_GRASS,5,N.DAY]]],[e.CLEFAIRY,n.FAIRY,-1,[[r.FAIRY_CAVE,1],[r.SPACE,0]]],[e.CLEFABLE,n.FAIRY,-1,[[r.SPACE,5]]],[e.VULPIX,n.FIRE,-1,[[r.TALL_GRASS,1],[r.VOLCANO,0]]],[e.NINETALES,n.FIRE,-1,[[r.VOLCANO,5]]],[e.JIGGLYPUFF,n.NORMAL,n.FAIRY,[[r.MEADOW,1],[r.FAIRY_CAVE,0]]],[e.WIGGLYTUFF,n.NORMAL,n.FAIRY,[[r.MEADOW,1],[r.FAIRY_CAVE,0],[r.FAIRY_CAVE,5]]],[e.ZUBAT,n.POISON,n.FLYING,[[r.PLAINS,0,N.NIGHT],[r.CAVE,0]]],[e.GOLBAT,n.POISON,n.FLYING,[[r.PLAINS,0,N.NIGHT],[r.CAVE,0]]],[e.ODDISH,n.GRASS,n.POISON,[[r.TOWN,1,[N.DUSK,N.NIGHT]],[r.TALL_GRASS,0,[N.DUSK,N.NIGHT]]]],[e.GLOOM,n.GRASS,n.POISON,[[r.TALL_GRASS,0,[N.DUSK,N.NIGHT]]]],[e.VILEPLUME,n.GRASS,n.POISON,[[r.TALL_GRASS,5,[N.DUSK,N.NIGHT]]]],[e.PARAS,n.BUG,n.GRASS,[[r.TOWN,1,N.NIGHT],[r.TALL_GRASS,1,N.NIGHT],[r.CAVE,0]]],[e.PARASECT,n.BUG,n.GRASS,[[r.TALL_GRASS,1,N.NIGHT],[r.CAVE,0],[r.CAVE,5]]],[e.VENONAT,n.BUG,n.POISON,[[r.TOWN,1,N.NIGHT],[r.TALL_GRASS,1,N.NIGHT],[r.FOREST,0,N.NIGHT]]],[e.VENOMOTH,n.BUG,n.POISON,[[r.TALL_GRASS,1,N.NIGHT],[r.FOREST,0,N.NIGHT],[r.FOREST,5,N.NIGHT]]],[e.DIGLETT,n.GROUND,-1,[[r.BADLANDS,0]]],[e.DUGTRIO,n.GROUND,-1,[[r.BADLANDS,0],[r.BADLANDS,5]]],[e.MEOWTH,n.NORMAL,-1,[[r.TOWN,1,[N.DUSK,N.NIGHT]],[r.PLAINS,0,[N.DUSK,N.NIGHT]]]],[e.PERSIAN,n.NORMAL,-1,[[r.PLAINS,0,[N.DUSK,N.NIGHT]],[r.PLAINS,5,[N.DUSK,N.NIGHT]]]],[e.PSYDUCK,n.WATER,-1,[[r.SWAMP,1],[r.LAKE,0]]],[e.GOLDUCK,n.WATER,-1,[[r.SWAMP,1],[r.LAKE,0],[r.LAKE,5]]],[e.MANKEY,n.FIGHTING,-1,[[r.PLAINS,1,[N.DUSK,N.NIGHT]],[r.DOJO,0]]],[e.PRIMEAPE,n.FIGHTING,-1,[[r.PLAINS,1,[N.DUSK,N.NIGHT]],[r.DOJO,0]]],[e.GROWLITHE,n.FIRE,-1,[[r.GRASS,2],[r.VOLCANO,0]]],[e.ARCANINE,n.FIRE,-1,[[r.VOLCANO,5]]],[e.POLIWAG,n.WATER,-1,[[r.SEA,1],[r.SWAMP,0]]],[e.POLIWHIRL,n.WATER,-1,[[r.SEA,1],[r.SWAMP,0]]],[e.POLIWRATH,n.WATER,n.FIGHTING,[[r.SWAMP,5]]],[e.ABRA,n.PSYCHIC,-1,[[r.TOWN,2],[r.PLAINS,2],[r.RUINS,1]]],[e.KADABRA,n.PSYCHIC,-1,[[r.PLAINS,2],[r.RUINS,1]]],[e.ALAKAZAM,n.PSYCHIC,-1,[[r.RUINS,5]]],[e.MACHOP,n.FIGHTING,-1,[[r.MOUNTAIN,1],[r.FACTORY,0],[r.CONSTRUCTION_SITE,0]]],[e.MACHOKE,n.FIGHTING,-1,[[r.MOUNTAIN,1],[r.FACTORY,0],[r.CONSTRUCTION_SITE,0]]],[e.MACHAMP,n.FIGHTING,-1,[[r.CONSTRUCTION_SITE,5]]],[e.BELLSPROUT,n.GRASS,n.POISON,[[r.TOWN,1,[N.DAWN,N.DAY]],[r.FOREST,0,[N.DAWN,N.DAY]]]],[e.WEEPINBELL,n.GRASS,n.POISON,[[r.FOREST,0,[N.DAWN,N.DAY]]]],[e.VICTREEBEL,n.GRASS,n.POISON,[[r.FOREST,5,[N.DAWN,N.DAY]]]],[e.TENTACOOL,n.WATER,n.POISON,[[r.SEA,0],[r.SEABED,1]]],[e.TENTACRUEL,n.WATER,n.POISON,[[r.SEA,0],[r.SEA,5],[r.SEABED,1]]],[e.GEODUDE,n.ROCK,n.GROUND,[[r.MOUNTAIN,1],[r.BADLANDS,0],[r.CAVE,1]]],[e.GRAVELER,n.ROCK,n.GROUND,[[r.MOUNTAIN,1],[r.BADLANDS,0],[r.CAVE,1]]],[e.GOLEM,n.ROCK,n.GROUND,[[r.BADLANDS,5]]],[e.PONYTA,n.FIRE,-1,[[r.MEADOW,1,[N.DAWN,N.DAY]],[r.VOLCANO,0]]],[e.RAPIDASH,n.FIRE,-1,[[r.MEADOW,1,[N.DAWN,N.DAY]],[r.VOLCANO,0],[r.VOLCANO,5]]],[e.SLOWPOKE,n.WATER,n.PSYCHIC,[[r.SEA,0,[N.DAWN,N.DAY]],[r.SEA,1,[N.DUSK,N.NIGHT]],[r.LAKE,1]]],[e.SLOWBRO,n.WATER,n.PSYCHIC,[[r.SEA,0,[N.DAWN,N.DAY]],[r.SEA,1,[N.DUSK,N.NIGHT]],[r.LAKE,1],[r.LAKE,5]]],[e.MAGNEMITE,n.ELECTRIC,n.STEEL,[[r.POWER_PLANT,0],[r.FACTORY,0],[r.CONSTRUCTION_SITE,0],[r.LABORATORY,0]]],[e.MAGNETON,n.ELECTRIC,n.STEEL,[[r.POWER_PLANT,0],[r.FACTORY,0],[r.CONSTRUCTION_SITE,0],[r.LABORATORY,0]]],[e.FARFETCHD,n.NORMAL,n.FLYING,[[r.PLAINS,3],[r.PLAINS,6]]],[e.DODUO,n.NORMAL,n.FLYING,[[r.PLAINS,1,[N.DAWN,N.DAY]]]],[e.DODRIO,n.NORMAL,n.FLYING,[[r.PLAINS,1,[N.DAWN,N.DAY]],[r.PLAINS,5,[N.DAWN,N.DAY]]]],[e.SEEL,n.WATER,-1,[[r.ICE_CAVE,0]]],[e.DEWGONG,n.WATER,n.ICE,[[r.ICE_CAVE,0],[r.ICE_CAVE,5]]],[e.GRIMER,n.POISON,-1,[[r.SLUM,0],[r.CONSTRUCTION_SITE,1],[r.LABORATORY,0]]],[e.MUK,n.POISON,-1,[[r.CONSTRUCTION_SITE,1],[r.SLUM,0],[r.SLUM,5],[r.LABORATORY,0],[r.LABORATORY,5]]],[e.SHELLDER,n.WATER,-1,[[r.SEA,1,[N.DUSK,N.NIGHT]],[r.BEACH,0,[N.DUSK,N.NIGHT]],[r.SEABED,1]]],[e.CLOYSTER,n.WATER,n.ICE,[[r.BEACH,5,[N.DUSK,N.NIGHT]]]],[e.GASTLY,n.GHOST,n.POISON,[[r.GRAVEYARD,0],[r.TEMPLE,0]]],[e.HAUNTER,n.GHOST,n.POISON,[[r.GRAVEYARD,0],[r.TEMPLE,0]]],[e.GENGAR,n.GHOST,n.POISON,[[r.GRAVEYARD,5]]],[e.ONIX,n.ROCK,n.GROUND,[[r.BADLANDS,2],[r.CAVE,2],[r.CAVE,5],[r.CONSTRUCTION_SITE,2]]],[e.DROWZEE,n.PSYCHIC,-1,[[r.RUINS,0]]],[e.HYPNO,n.PSYCHIC,-1,[[r.RUINS,0],[r.RUINS,5]]],[e.KRABBY,n.WATER,-1,[[r.BEACH,0]]],[e.KINGLER,n.WATER,-1,[[r.BEACH,0],[r.BEACH,5]]],[e.VOLTORB,n.ELECTRIC,-1,[[r.POWER_PLANT,0],[r.FACTORY,0],[r.LABORATORY,0]]],[e.ELECTRODE,n.ELECTRIC,-1,[[r.POWER_PLANT,0],[r.FACTORY,0],[r.LABORATORY,0],[r.LABORATORY,5]]],[e.EXEGGCUTE,n.GRASS,n.PSYCHIC,[[r.FOREST,2,[N.DAWN,N.DAY]],[r.JUNGLE,1,[N.DAWN,N.DAY]]]],[e.EXEGGUTOR,n.GRASS,n.PSYCHIC,[[r.JUNGLE,5,[N.DAWN,N.DAY]]]],[e.CUBONE,n.GROUND,-1,[[r.BADLANDS,0,N.NIGHT],[r.GRAVEYARD,1],[r.TEMPLE,1]]],[e.MAROWAK,n.GROUND,-1,[[r.BADLANDS,0,N.NIGHT],[r.GRAVEYARD,1],[r.TEMPLE,1],[r.BADLANDS,5,N.NIGHT],[r.GRAVEYARD,5,[N.DAWN,N.DAY,N.DUSK]]]],[e.HITMONLEE,n.FIGHTING,-1,[[r.DOJO,2],[r.DOJO,5],[r.CONSTRUCTION_SITE,2]]],[e.HITMONCHAN,n.FIGHTING,-1,[[r.DOJO,2],[r.DOJO,5],[r.CONSTRUCTION_SITE,2]]],[e.LICKITUNG,n.NORMAL,-1,[[r.PLAINS,3]]],[e.KOFFING,n.POISON,-1,[[r.SLUM,0],[r.CONSTRUCTION_SITE,1]]],[e.WEEZING,n.POISON,-1,[[r.SLUM,0],[r.SLUM,5],[r.CONSTRUCTION_SITE,1]]],[e.RHYHORN,n.GROUND,n.ROCK,[[r.MOUNTAIN,0,[N.DUSK,N.NIGHT]],[r.MOUNTAIN,1,[N.DAWN,N.DAY]],[r.BADLANDS,0],[r.CONSTRUCTION_SITE,1]]],[e.RHYDON,n.GROUND,n.ROCK,[[r.MOUNTAIN,0,[N.DUSK,N.NIGHT]],[r.MOUNTAIN,1,[N.DAWN,N.DAY]],[r.BADLANDS,0],[r.CONSTRUCTION_SITE,1]]],[e.CHANSEY,n.NORMAL,-1,[[r.PLAINS,3],[r.MEADOW,3]]],[e.TANGELA,n.GRASS,-1,[[r.JUNGLE,1,[N.DUSK,N.NIGHT]]]],[e.KANGASKHAN,n.NORMAL,-1,[[r.JUNGLE,3],[r.JUNGLE,6]]],[e.HORSEA,n.WATER,-1,[[r.SEA,1]]],[e.SEADRA,n.WATER,-1,[[r.SEA,1]]],[e.GOLDEEN,n.WATER,-1,[[r.LAKE,0],[r.SEA,1]]],[e.SEAKING,n.WATER,-1,[[r.LAKE,0],[r.LAKE,5],[r.SEA,1]]],[e.STARYU,n.WATER,-1,[[r.BEACH,0,[N.DAWN,N.DAY]],[r.SEA,1,[N.DAWN,N.DAY]]]],[e.STARMIE,n.WATER,n.PSYCHIC,[[r.BEACH,0,[N.DAWN,N.DAY]],[r.BEACH,5,[N.DAWN,N.DAY]],[r.SEA,1,[N.DAWN,N.DAY]]]],[e.MR_MIME,n.PSYCHIC,n.FAIRY,[[r.RUINS,2],[r.RUINS,6]]],[e.SCYTHER,n.BUG,n.FLYING,[[r.TALL_GRASS,3],[r.FOREST,2,[N.DUSK,N.NIGHT]],[r.JUNGLE,2]]],[e.JYNX,n.ICE,n.PSYCHIC,[[r.ICE_CAVE,2],[r.ICE_CAVE,6]]],[e.ELECTABUZZ,n.ELECTRIC,-1,[[r.POWER_PLANT,1]]],[e.MAGMAR,n.FIRE,-1,[[r.VOLCANO,1]]],[e.PINSIR,n.BUG,-1,[[r.TALL_GRASS,2],[r.TALL_GRASS,6]]],[e.TAUROS,n.NORMAL,-1,[[r.MEADOW,2],[r.MEADOW,5]]],[e.MAGIKARP,n.WATER,-1,[[r.SEA,0],[r.LAKE,0]]],[e.GYARADOS,n.WATER,n.FLYING,[[r.SEA,0],[r.LAKE,0],[r.LAKE,5]]],[e.LAPRAS,n.WATER,n.ICE,[[r.SEA,2],[r.ICE_CAVE,2],[r.ICE_CAVE,6]]],[e.DITTO,n.NORMAL,-1,[[r.TOWN,4],[r.PLAINS,4],[r.METROPOLIS,3],[r.CONSTRUCTION_SITE,3],[r.LABORATORY,2]]],[e.EEVEE,n.NORMAL,-1,[[r.TOWN,3],[r.PLAINS,3],[r.METROPOLIS,3],[r.MEADOW,2]]],[e.VAPOREON,n.WATER,-1,[[r.LAKE,3],[r.LAKE,6]]],[e.JOLTEON,n.ELECTRIC,-1,[[r.POWER_PLANT,3],[r.POWER_PLANT,6]]],[e.FLAREON,n.FIRE,-1,[[r.VOLCANO,3],[r.VOLCANO,6]]],[e.PORYGON,n.NORMAL,-1,[[r.FACTORY,2],[r.SPACE,3],[r.LABORATORY,2]]],[e.OMANYTE,n.ROCK,n.WATER,[[r.SEABED,3]]],[e.OMASTAR,n.ROCK,n.WATER,[[r.SEABED,3],[r.SEABED,6]]],[e.KABUTO,n.ROCK,n.WATER,[[r.SEABED,3]]],[e.KABUTOPS,n.ROCK,n.WATER,[[r.SEABED,3],[r.SEABED,6]]],[e.AERODACTYL,n.ROCK,n.FLYING,[[r.WASTELAND,3],[r.WASTELAND,6]]],[e.SNORLAX,n.NORMAL,-1,[[r.PLAINS,3],[r.PLAINS,6]]],[e.ARTICUNO,n.ICE,n.FLYING,[[r.ICE_CAVE,4],[r.ICE_CAVE,7]]],[e.ZAPDOS,n.ELECTRIC,n.FLYING,[[r.POWER_PLANT,7]]],[e.MOLTRES,n.FIRE,n.FLYING,[[r.VOLCANO,7]]],[e.DRATINI,n.DRAGON,-1,[[r.WASTELAND,2]]],[e.DRAGONAIR,n.DRAGON,-1,[[r.WASTELAND,2]]],[e.DRAGONITE,n.DRAGON,n.FLYING,[[r.WASTELAND,2],[r.WASTELAND,5]]],[e.MEWTWO,n.PSYCHIC,-1,[[r.LABORATORY,8]]],[e.MEW,n.PSYCHIC,-1,[]],[e.CHIKORITA,n.GRASS,-1,[[r.TALL_GRASS,2]]],[e.BAYLEEF,n.GRASS,-1,[[r.TALL_GRASS,2]]],[e.MEGANIUM,n.GRASS,-1,[[r.TALL_GRASS,2],[r.TALL_GRASS,6]]],[e.CYNDAQUIL,n.FIRE,-1,[[r.VOLCANO,2]]],[e.QUILAVA,n.FIRE,-1,[[r.VOLCANO,2]]],[e.TYPHLOSION,n.FIRE,-1,[[r.VOLCANO,2],[r.VOLCANO,6]]],[e.TOTODILE,n.WATER,-1,[[r.SWAMP,2]]],[e.CROCONAW,n.WATER,-1,[[r.SWAMP,2]]],[e.FERALIGATR,n.WATER,-1,[[r.SWAMP,2],[r.SWAMP,6]]],[e.SENTRET,n.NORMAL,-1,[[r.TOWN,0,[N.DAWN,N.DAY]],[r.PLAINS,0,[N.DAWN,N.DAY]]]],[e.FURRET,n.NORMAL,-1,[[r.PLAINS,0,[N.DAWN,N.DAY]],[r.PLAINS,5,[N.DAWN,N.DAY]]]],[e.HOOTHOOT,n.NORMAL,n.FLYING,[[r.TOWN,0,N.NIGHT],[r.FOREST,1,N.NIGHT]]],[e.NOCTOWL,n.NORMAL,n.FLYING,[[r.FOREST,1,N.NIGHT],[r.FOREST,5,N.NIGHT]]],[e.LEDYBA,n.BUG,n.FLYING,[[r.TOWN,0,N.DAWN],[r.MEADOW,0,N.DAWN]]],[e.LEDIAN,n.BUG,n.FLYING,[[r.MEADOW,0,N.DAWN],[r.MEADOW,5,N.DAWN]]],[e.SPINARAK,n.BUG,n.POISON,[[r.TOWN,1,N.DUSK],[r.TOWN,0,N.NIGHT],[r.TALL_GRASS,1,N.NIGHT],[r.FOREST,1,N.DUSK],[r.FOREST,0,N.NIGHT],[r.JUNGLE,1,N.DUSK],[r.JUNGLE,0,N.NIGHT]]],[e.ARIADOS,n.BUG,n.POISON,[[r.TALL_GRASS,1,N.NIGHT],[r.FOREST,1,N.DUSK],[r.FOREST,0,N.NIGHT],[r.FOREST,5,[N.DUSK,N.NIGHT]],[r.JUNGLE,1,N.DUSK],[r.JUNGLE,0,N.NIGHT]]],[e.CROBAT,n.POISON,n.FLYING,[[r.CAVE,5]]],[e.CHINCHOU,n.WATER,n.ELECTRIC,[[r.SEA,1,N.NIGHT],[r.SEABED,0]]],[e.LANTURN,n.WATER,n.ELECTRIC,[[r.SEA,1,N.NIGHT],[r.SEABED,0],[r.SEABED,5]]],[e.PICHU,n.ELECTRIC,-1,[]],[e.CLEFFA,n.FAIRY,-1,[]],[e.IGGLYBUFF,n.NORMAL,n.FAIRY,[]],[e.TOGEPI,n.FAIRY,-1,[]],[e.TOGETIC,n.FAIRY,n.FLYING,[[r.FAIRY_CAVE,1]]],[e.NATU,n.PSYCHIC,n.FLYING,[[r.MOUNTAIN,1],[r.RUINS,0],[r.TEMPLE,0]]],[e.XATU,n.PSYCHIC,n.FLYING,[[r.MOUNTAIN,1],[r.RUINS,0],[r.RUINS,5],[r.TEMPLE,0]]],[e.MAREEP,n.ELECTRIC,-1,[[r.MEADOW,1],[r.POWER_PLANT,2]]],[e.FLAAFFY,n.ELECTRIC,-1,[[r.MEADOW,1],[r.POWER_PLANT,2]]],[e.AMPHAROS,n.ELECTRIC,-1,[[r.MEADOW,1],[r.POWER_PLANT,6]]],[e.BELLOSSOM,n.GRASS,-1,[[r.TALL_GRASS,6,[N.DAWN,N.DAY]]]],[e.MARILL,n.WATER,n.FAIRY,[[r.LAKE,0,[N.DUSK,N.NIGHT]],[r.FAIRY_CAVE,0]]],[e.AZUMARILL,n.WATER,n.FAIRY,[[r.LAKE,0,[N.DUSK,N.NIGHT]],[r.LAKE,5,[N.DUSK,N.NIGHT]],[r.FAIRY_CAVE,0]]],[e.SUDOWOODO,n.ROCK,-1,[[r.GRASS,3],[r.GRASS,6]]],[e.POLITOED,n.WATER,-1,[[r.SWAMP,3],[r.SWAMP,6]]],[e.HOPPIP,n.GRASS,n.FLYING,[[r.TOWN,0,[N.DAWN,N.DAY]],[r.GRASS,0,[N.DAWN,N.DAY]]]],[e.SKIPLOOM,n.GRASS,n.FLYING,[[r.GRASS,0,[N.DAWN,N.DAY]]]],[e.JUMPLUFF,n.GRASS,n.FLYING,[[r.GRASS,5,[N.DAWN,N.DAY]]]],[e.AIPOM,n.NORMAL,-1,[[r.JUNGLE,0]]],[e.SUNKERN,n.GRASS,-1,[[r.TOWN,0,[N.DAWN,N.DAY]],[r.GRASS,0,[N.DAWN,N.DAY]]]],[e.SUNFLORA,n.GRASS,-1,[[r.GRASS,5,[N.DAWN,N.DAY]]]],[e.YANMA,n.BUG,n.FLYING,[[r.JUNGLE,2]]],[e.WOOPER,n.WATER,n.GROUND,[[r.LAKE,1],[r.SWAMP,0,[N.DAWN,N.DAY]]]],[e.QUAGSIRE,n.WATER,n.GROUND,[[r.LAKE,1],[r.SWAMP,0,[N.DAWN,N.DAY]],[r.SWAMP,5,[N.DAWN,N.DAY]]]],[e.ESPEON,n.PSYCHIC,-1,[[r.RUINS,3,N.DAY],[r.RUINS,6,N.DAY]]],[e.UMBREON,n.DARK,-1,[[r.ABYSS,3],[r.ABYSS,6]]],[e.MURKROW,n.DARK,n.FLYING,[[r.MOUNTAIN,2,N.NIGHT],[r.ABYSS,0]]],[e.SLOWKING,n.WATER,n.PSYCHIC,[[r.LAKE,3],[r.LAKE,6]]],[e.MISDREAVUS,n.GHOST,-1,[[r.GRAVEYARD,2]]],[e.UNOWN,n.PSYCHIC,-1,[[r.RUINS,0]]],[e.WOBBUFFET,n.PSYCHIC,-1,[[r.RUINS,2],[r.RUINS,6]]],[e.GIRAFARIG,n.NORMAL,n.PSYCHIC,[[r.TALL_GRASS,2]]],[e.PINECO,n.BUG,-1,[[r.FOREST,0,[N.DUSK,N.NIGHT]]]],[e.FORRETRESS,n.BUG,n.STEEL,[[r.FOREST,0,[N.DUSK,N.NIGHT]],[r.FOREST,5,[N.DUSK,N.NIGHT]]]],[e.DUNSPARCE,n.NORMAL,-1,[[r.PLAINS,3]]],[e.GLIGAR,n.GROUND,n.FLYING,[[r.BADLANDS,2]]],[e.STEELIX,n.STEEL,n.GROUND,[[r.BADLANDS,6]]],[e.SNUBBULL,n.FAIRY,-1,[[r.MEADOW,1,[N.DAWN,N.DAY]]]],[e.GRANBULL,n.FAIRY,-1,[[r.MEADOW,1,[N.DAWN,N.DAY]],[r.MEADOW,5,[N.DAWN,N.DAY]]]],[e.QWILFISH,n.WATER,n.POISON,[[r.SEABED,2],[r.SEABED,5]]],[e.SCIZOR,n.BUG,n.STEEL,[[r.JUNGLE,6]]],[e.SHUCKLE,n.BUG,n.ROCK,[[r.CAVE,3],[r.CAVE,6]]],[e.HERACROSS,n.BUG,n.FIGHTING,[[r.FOREST,2],[r.FOREST,6]]],[e.SNEASEL,n.DARK,n.ICE,[[r.ICE_CAVE,1],[r.SNOWY_FOREST,0,[N.DUSK,N.NIGHT]],[r.SNOWY_FOREST,1,[N.DAWN,N.DAY]]]],[e.TEDDIURSA,n.NORMAL,-1,[[r.FOREST,1],[r.CAVE,0],[r.SNOWY_FOREST,0,[N.DUSK,N.NIGHT]],[r.SNOWY_FOREST,1,[N.DAWN,N.DAY]]]],[e.URSARING,n.NORMAL,-1,[[r.FOREST,1],[r.CAVE,0],[r.CAVE,5],[r.SNOWY_FOREST,0,[N.DUSK,N.NIGHT]],[r.SNOWY_FOREST,1,[N.DAWN,N.DAY]]]],[e.SLUGMA,n.FIRE,-1,[[r.MOUNTAIN,1],[r.VOLCANO,0]]],[e.MAGCARGO,n.FIRE,n.ROCK,[[r.MOUNTAIN,1],[r.VOLCANO,0],[r.VOLCANO,5]]],[e.SWINUB,n.ICE,n.GROUND,[[r.ICE_CAVE,0],[r.SNOWY_FOREST,0]]],[e.PILOSWINE,n.ICE,n.GROUND,[[r.ICE_CAVE,0],[r.SNOWY_FOREST,0]]],[e.CORSOLA,n.WATER,n.ROCK,[[r.SEABED,2],[r.SEABED,5]]],[e.REMORAID,n.WATER,-1,[[r.SEABED,0]]],[e.OCTILLERY,n.WATER,-1,[[r.SEABED,2],[r.SEABED,5]]],[e.DELIBIRD,n.ICE,n.FLYING,[[r.ICE_CAVE,3],[r.SNOWY_FOREST,2]]],[e.MANTINE,n.WATER,n.FLYING,[[r.SEABED,2],[r.SEABED,5]]],[e.SKARMORY,n.STEEL,n.FLYING,[[r.MOUNTAIN,2],[r.MOUNTAIN,5]]],[e.HOUNDOUR,n.DARK,n.FIRE,[[r.METROPOLIS,0,N.NIGHT],[r.ABYSS,0]]],[e.HOUNDOOM,n.DARK,n.FIRE,[[r.METROPOLIS,0,N.NIGHT],[r.ABYSS,0],[r.ABYSS,5]]],[e.KINGDRA,n.WATER,n.DRAGON,[[r.SEA,3],[r.SEA,6]]],[e.PHANPY,n.GROUND,-1,[[r.BADLANDS,0,[N.DAWN,N.DAY]]]],[e.DONPHAN,n.GROUND,-1,[[r.BADLANDS,0,[N.DAWN,N.DAY]],[r.BADLANDS,5,[N.DAWN,N.DAY]]]],[e.PORYGON2,n.NORMAL,-1,[[r.FACTORY,2],[r.SPACE,3],[r.LABORATORY,2]]],[e.STANTLER,n.NORMAL,-1,[[r.FOREST,2,[N.DAWN,N.DAY]],[r.FOREST,6,[N.DAWN,N.DAY]],[r.SNOWY_FOREST,1,[N.DAWN,N.DAY]]]],[e.SMEARGLE,n.NORMAL,-1,[[r.METROPOLIS,3]]],[e.TYROGUE,n.FIGHTING,-1,[]],[e.HITMONTOP,n.FIGHTING,-1,[[r.DOJO,3],[r.DOJO,6],[r.CONSTRUCTION_SITE,3]]],[e.SMOOCHUM,n.ICE,n.PSYCHIC,[]],[e.ELEKID,n.ELECTRIC,-1,[]],[e.MAGBY,n.FIRE,-1,[]],[e.MILTANK,n.NORMAL,-1,[[r.MEADOW,2],[r.MEADOW,5]]],[e.BLISSEY,n.NORMAL,-1,[[r.MEADOW,6]]],[e.RAIKOU,n.ELECTRIC,-1,[[r.POWER_PLANT,4],[r.POWER_PLANT,7]]],[e.ENTEI,n.FIRE,-1,[[r.VOLCANO,4],[r.VOLCANO,7]]],[e.SUICUNE,n.WATER,-1,[[r.LAKE,4],[r.LAKE,7]]],[e.LARVITAR,n.ROCK,n.GROUND,[[r.MOUNTAIN,3],[r.WASTELAND,0,[N.DUSK,N.NIGHT]]]],[e.PUPITAR,n.ROCK,n.GROUND,[[r.MOUNTAIN,3],[r.WASTELAND,0,[N.DUSK,N.NIGHT]]]],[e.TYRANITAR,n.ROCK,n.DARK,[[r.WASTELAND,0,[N.DUSK,N.NIGHT]],[r.WASTELAND,5,[N.DUSK,N.NIGHT]]]],[e.LUGIA,n.PSYCHIC,n.FLYING,[[r.SEA,8]]],[e.HO_OH,n.FIRE,n.FLYING,[[r.MOUNTAIN,8]]],[e.CELEBI,n.PSYCHIC,n.GRASS,[]],[e.TREECKO,n.GRASS,-1,[[r.FOREST,2]]],[e.GROVYLE,n.GRASS,-1,[[r.FOREST,2]]],[e.SCEPTILE,n.GRASS,-1,[[r.FOREST,2],[r.FOREST,6]]],[e.TORCHIC,n.FIRE,-1,[[r.MOUNTAIN,2]]],[e.COMBUSKEN,n.FIRE,n.FIGHTING,[[r.MOUNTAIN,2]]],[e.BLAZIKEN,n.FIRE,n.FIGHTING,[[r.MOUNTAIN,2],[r.MOUNTAIN,6]]],[e.MUDKIP,n.WATER,-1,[[r.SWAMP,2]]],[e.MARSHTOMP,n.WATER,n.GROUND,[[r.SWAMP,2]]],[e.SWAMPERT,n.WATER,n.GROUND,[[r.SWAMP,2],[r.SWAMP,6]]],[e.POOCHYENA,n.DARK,-1,[[r.TOWN,1,[N.DAWN,N.DAY]],[r.TOWN,0,[N.DUSK,N.NIGHT]],[r.PLAINS,1,[N.DAWN,N.DAY]],[r.PLAINS,0,[N.DUSK,N.NIGHT]]]],[e.MIGHTYENA,n.DARK,-1,[[r.PLAINS,1,[N.DAWN,N.DAY]],[r.PLAINS,0,[N.DUSK,N.NIGHT]],[r.PLAINS,5,[N.DUSK,N.NIGHT]]]],[e.ZIGZAGOON,n.NORMAL,-1,[[r.TOWN,0],[r.PLAINS,0],[r.METROPOLIS,0]]],[e.LINOONE,n.NORMAL,-1,[[r.PLAINS,0],[r.PLAINS,5],[r.METROPOLIS,0]]],[e.WURMPLE,n.BUG,-1,[[r.TOWN,0]]],[e.SILCOON,n.BUG,-1,[[r.TOWN,0,N.DAY]]],[e.BEAUTIFLY,n.BUG,n.FLYING,[[r.FOREST,0,N.DAY],[r.FOREST,5,N.DAY]]],[e.CASCOON,n.BUG,-1,[[r.TOWN,0,N.NIGHT]]],[e.DUSTOX,n.BUG,n.POISON,[[r.FOREST,0,N.NIGHT],[r.FOREST,5,N.NIGHT]]],[e.LOTAD,n.WATER,n.GRASS,[[r.TOWN,1,[N.DAWN,N.DAY]],[r.LAKE,0,[N.DAWN,N.DAY]],[r.SWAMP,0,[N.DAWN,N.DAY]]]],[e.LOMBRE,n.WATER,n.GRASS,[[r.LAKE,0,[N.DAWN,N.DAY]],[r.SWAMP,0,[N.DAWN,N.DAY]]]],[e.LUDICOLO,n.WATER,n.GRASS,[[r.SWAMP,5,[N.DAWN,N.DAY]]]],[e.SEEDOT,n.GRASS,-1,[[r.TOWN,1,[N.DUSK,N.NIGHT]],[r.GRASS,0,[N.DUSK,N.NIGHT]],[r.FOREST,0,[N.DUSK,N.NIGHT]]]],[e.NUZLEAF,n.GRASS,n.DARK,[[r.GRASS,0,[N.DUSK,N.NIGHT]],[r.FOREST,0,[N.DUSK,N.NIGHT]]]],[e.SHIFTRY,n.GRASS,n.DARK,[[r.FOREST,5,[N.DUSK,N.NIGHT]]]],[e.TAILLOW,n.NORMAL,n.FLYING,[[r.TOWN,0],[r.MOUNTAIN,0,[N.DAWN,N.DAY]]]],[e.SWELLOW,n.NORMAL,n.FLYING,[[r.MOUNTAIN,0,[N.DAWN,N.DAY]],[r.MOUNTAIN,5,[N.DAWN,N.DAY]]]],[e.WINGULL,n.WATER,n.FLYING,[[r.SEA,0,[N.DAWN,N.DAY]]]],[e.PELIPPER,n.WATER,n.FLYING,[[r.SEA,0,[N.DAWN,N.DAY]],[r.SEA,5,[N.DAWN,N.DAY]]]],[e.RALTS,n.PSYCHIC,n.FAIRY,[[r.TOWN,3],[r.MEADOW,1],[r.FAIRY_CAVE,1]]],[e.KIRLIA,n.PSYCHIC,n.FAIRY,[[r.MEADOW,1],[r.FAIRY_CAVE,1]]],[e.GARDEVOIR,n.PSYCHIC,n.FAIRY,[[r.MEADOW,1],[r.MEADOW,5],[r.FAIRY_CAVE,1]]],[e.SURSKIT,n.BUG,n.WATER,[[r.TOWN,2],[r.LAKE,1]]],[e.MASQUERAIN,n.BUG,n.FLYING,[[r.LAKE,1],[r.LAKE,5]]],[e.SHROOMISH,n.GRASS,-1,[[r.TOWN,1,[N.DUSK,N.NIGHT]],[r.GRASS,0,[N.DUSK,N.NIGHT]],[r.FOREST,0,[N.DUSK,N.NIGHT]],[r.JUNGLE,0,[N.DUSK,N.NIGHT]]]],[e.BRELOOM,n.GRASS,n.FIGHTING,[[r.GRASS,0,[N.DUSK,N.NIGHT]],[r.FOREST,0,[N.DUSK,N.NIGHT]],[r.FOREST,5,[N.DUSK,N.NIGHT]],[r.JUNGLE,5,[N.DUSK,N.NIGHT]]]],[e.SLAKOTH,n.NORMAL,-1,[[r.JUNGLE,2]]],[e.VIGOROTH,n.NORMAL,-1,[[r.JUNGLE,2]]],[e.SLAKING,n.NORMAL,-1,[[r.JUNGLE,2],[r.JUNGLE,6]]],[e.NINCADA,n.BUG,n.GROUND,[[r.TOWN,1],[r.TALL_GRASS,0]]],[e.NINJASK,n.BUG,n.FLYING,[[r.TALL_GRASS,0],[r.TALL_GRASS,5]]],[e.SHEDINJA,n.BUG,n.GHOST,[[r.TALL_GRASS,3]]],[e.WHISMUR,n.NORMAL,-1,[[r.TOWN,1],[r.CAVE,0]]],[e.LOUDRED,n.NORMAL,-1,[[r.CAVE,0]]],[e.EXPLOUD,n.NORMAL,-1,[[r.CAVE,0],[r.CAVE,5]]],[e.MAKUHITA,n.FIGHTING,-1,[[r.CAVE,1],[r.DOJO,0]]],[e.HARIYAMA,n.FIGHTING,-1,[[r.CAVE,1],[r.DOJO,0],[r.DOJO,5]]],[e.AZURILL,n.NORMAL,n.FAIRY,[]],[e.NOSEPASS,n.ROCK,-1,[[r.CAVE,1]]],[e.SKITTY,n.NORMAL,-1,[[r.TOWN,1,[N.DAWN,N.DAY]],[r.MEADOW,1,[N.DAWN,N.DAY]]]],[e.DELCATTY,n.NORMAL,-1,[[r.MEADOW,1,[N.DAWN,N.DAY]],[r.MEADOW,5,[N.DAWN,N.DAY]]]],[e.SABLEYE,n.DARK,n.GHOST,[[r.ABYSS,0],[r.ABYSS,5]]],[e.MAWILE,n.STEEL,n.FAIRY,[[r.FAIRY_CAVE,0],[r.FAIRY_CAVE,5]]],[e.ARON,n.STEEL,n.ROCK,[[r.MOUNTAIN,1,[N.DAWN,N.DAY]],[r.MOUNTAIN,0,[N.DUSK,N.NIGHT]]]],[e.LAIRON,n.STEEL,n.ROCK,[[r.MOUNTAIN,1,[N.DAWN,N.DAY]],[r.MOUNTAIN,0,[N.DUSK,N.NIGHT]]]],[e.AGGRON,n.STEEL,n.ROCK,[[r.MOUNTAIN,1,[N.DAWN,N.DAY]],[r.MOUNTAIN,0,[N.DUSK,N.NIGHT]],[r.MOUNTAIN,5]]],[e.MEDITITE,n.FIGHTING,n.PSYCHIC,[[r.DOJO,0]]],[e.MEDICHAM,n.FIGHTING,n.PSYCHIC,[[r.DOJO,0],[r.DOJO,5]]],[e.ELECTRIKE,n.ELECTRIC,-1,[[r.POWER_PLANT,0]]],[e.MANECTRIC,n.ELECTRIC,-1,[[r.POWER_PLANT,0],[r.POWER_PLANT,5]]],[e.PLUSLE,n.ELECTRIC,-1,[[r.POWER_PLANT,1]]],[e.MINUN,n.ELECTRIC,-1,[[r.POWER_PLANT,1]]],[e.VOLBEAT,n.BUG,-1,[[r.MEADOW,2,N.NIGHT]]],[e.ILLUMISE,n.BUG,-1,[[r.MEADOW,2,N.NIGHT]]],[e.ROSELIA,n.GRASS,n.POISON,[[r.FOREST,1,[N.DAWN,N.DAY]],[r.MEADOW,0,[N.DAWN,N.DAY]]]],[e.GULPIN,n.POISON,-1,[[r.SWAMP,0]]],[e.SWALOT,n.POISON,-1,[[r.SWAMP,0],[r.SWAMP,5]]],[e.CARVANHA,n.WATER,n.DARK,[[r.SEA,1,[N.DUSK,N.NIGHT]]]],[e.SHARPEDO,n.WATER,n.DARK,[[r.SEA,1,[N.DUSK,N.NIGHT]],[r.SEA,5,[N.DUSK,N.NIGHT]]]],[e.WAILMER,n.WATER,-1,[[r.SEA,1],[r.SEABED,1]]],[e.WAILORD,n.WATER,-1,[[r.SEA,1],[r.SEABED,1],[r.SEABED,5]]],[e.NUMEL,n.FIRE,n.GROUND,[[r.BADLANDS,1],[r.VOLCANO,0]]],[e.CAMERUPT,n.FIRE,n.GROUND,[[r.BADLANDS,1],[r.VOLCANO,0],[r.VOLCANO,5]]],[e.TORKOAL,n.FIRE,-1,[[r.VOLCANO,1],[r.VOLCANO,5]]],[e.SPOINK,n.PSYCHIC,-1,[[r.MOUNTAIN,2],[r.RUINS,0]]],[e.GRUMPIG,n.PSYCHIC,-1,[[r.MOUNTAIN,2],[r.RUINS,0],[r.RUINS,5]]],[e.SPINDA,n.NORMAL,-1,[[r.MEADOW,2]]],[e.TRAPINCH,n.GROUND,-1,[[r.DESERT,0,[N.DAWN,N.DAY]]]],[e.VIBRAVA,n.GROUND,n.DRAGON,[[r.DESERT,2,[N.DAWN,N.DAY]],[r.WASTELAND,0]]],[e.FLYGON,n.GROUND,n.DRAGON,[[r.DESERT,2,[N.DAWN,N.DAY]],[r.WASTELAND,0],[r.WASTELAND,5]]],[e.CACNEA,n.GRASS,-1,[[r.DESERT,0,[N.DUSK,N.NIGHT]]]],[e.CACTURNE,n.GRASS,n.DARK,[[r.DESERT,0,[N.DUSK,N.NIGHT]],[r.DESERT,5,[N.DUSK,N.NIGHT]]]],[e.SWABLU,n.NORMAL,n.FLYING,[[r.MOUNTAIN,0,[N.DAWN,N.DAY]],[r.WASTELAND,1]]],[e.ALTARIA,n.DRAGON,n.FLYING,[[r.MOUNTAIN,0,[N.DAWN,N.DAY]],[r.MOUNTAIN,5,[N.DAWN,N.DAY]],[r.WASTELAND,1]]],[e.ZANGOOSE,n.NORMAL,-1,[[r.TALL_GRASS,2],[r.TALL_GRASS,5]]],[e.SEVIPER,n.POISON,-1,[[r.JUNGLE,2],[r.JUNGLE,5]]],[e.LUNATONE,n.ROCK,n.PSYCHIC,[[r.SPACE,0,N.NIGHT],[r.SPACE,5,N.NIGHT]]],[e.SOLROCK,n.ROCK,n.PSYCHIC,[[r.SPACE,0,N.DAY],[r.SPACE,5,N.DAY]]],[e.BARBOACH,n.WATER,n.GROUND,[[r.SWAMP,1]]],[e.WHISCASH,n.WATER,n.GROUND,[[r.SWAMP,1],[r.SWAMP,5]]],[e.CORPHISH,n.WATER,-1,[[r.BEACH,0]]],[e.CRAWDAUNT,n.WATER,n.DARK,[[r.BEACH,0],[r.BEACH,5]]],[e.BALTOY,n.GROUND,n.PSYCHIC,[[r.RUINS,0],[r.SPACE,1],[r.TEMPLE,1]]],[e.CLAYDOL,n.GROUND,n.PSYCHIC,[[r.RUINS,0],[r.RUINS,5],[r.SPACE,1],[r.TEMPLE,1]]],[e.LILEEP,n.ROCK,n.GRASS,[[r.DESERT,3]]],[e.CRADILY,n.ROCK,n.GRASS,[[r.DESERT,3],[r.DESERT,6]]],[e.ANORITH,n.ROCK,n.BUG,[[r.DESERT,3]]],[e.ARMALDO,n.ROCK,n.BUG,[[r.DESERT,3],[r.DESERT,6]]],[e.FEEBAS,n.WATER,-1,[[r.SEABED,4]]],[e.MILOTIC,n.WATER,-1,[[r.SEABED,7]]],[e.CASTFORM,n.NORMAL,-1,[[r.METROPOLIS,4],[r.METROPOLIS,6]]],[e.KECLEON,n.NORMAL,-1,[[r.TALL_GRASS,2],[r.TALL_GRASS,5]]],[e.SHUPPET,n.GHOST,-1,[[r.GRAVEYARD,0]]],[e.BANETTE,n.GHOST,-1,[[r.GRAVEYARD,0],[r.GRAVEYARD,5]]],[e.DUSKULL,n.GHOST,-1,[[r.GRAVEYARD,0],[r.TEMPLE,0]]],[e.DUSCLOPS,n.GHOST,-1,[[r.GRAVEYARD,0],[r.TEMPLE,0]]],[e.TROPIUS,n.GRASS,n.FLYING,[[r.TALL_GRASS,2],[r.FOREST,2],[r.JUNGLE,1,[N.DAWN,N.DAY]],[r.JUNGLE,5,[N.DAWN,N.DAY]]]],[e.CHIMECHO,n.PSYCHIC,-1,[[r.TEMPLE,1],[r.TEMPLE,5]]],[e.ABSOL,n.DARK,-1,[[r.ABYSS,2],[r.ABYSS,5]]],[e.WYNAUT,n.PSYCHIC,-1,[]],[e.SNORUNT,n.ICE,-1,[[r.ICE_CAVE,1]]],[e.GLALIE,n.ICE,-1,[[r.ICE_CAVE,1],[r.ICE_CAVE,5]]],[e.SPHEAL,n.ICE,n.WATER,[[r.ICE_CAVE,1]]],[e.SEALEO,n.ICE,n.WATER,[[r.ICE_CAVE,1]]],[e.WALREIN,n.ICE,n.WATER,[[r.ICE_CAVE,1],[r.ICE_CAVE,5]]],[e.CLAMPERL,n.WATER,-1,[[r.SEABED,0]]],[e.HUNTAIL,n.WATER,-1,[[r.SEABED,5]]],[e.GOREBYSS,n.WATER,-1,[[r.SEABED,5]]],[e.RELICANTH,n.WATER,n.ROCK,[[r.SEABED,3],[r.SEABED,6]]],[e.LUVDISC,n.WATER,-1,[[r.SEABED,1],[r.SEABED,5]]],[e.BAGON,n.DRAGON,-1,[[r.WASTELAND,0,[N.DAWN,N.DAY]]]],[e.SHELGON,n.DRAGON,-1,[[r.WASTELAND,0,[N.DAWN,N.DAY]]]],[e.SALAMENCE,n.DRAGON,n.FLYING,[[r.WASTELAND,0,[N.DAWN,N.DAY]],[r.WASTELAND,5,[N.DAWN,N.DAY]]]],[e.BELDUM,n.STEEL,n.PSYCHIC,[[r.FACTORY,3],[r.SPACE,2]]],[e.METANG,n.STEEL,n.PSYCHIC,[[r.FACTORY,3],[r.SPACE,2]]],[e.METAGROSS,n.STEEL,n.PSYCHIC,[[r.FACTORY,3],[r.SPACE,2],[r.SPACE,6]]],[e.REGIROCK,n.ROCK,-1,[[r.DESERT,4],[r.DESERT,7]]],[e.REGICE,n.ICE,-1,[[r.ICE_CAVE,4],[r.ICE_CAVE,7]]],[e.REGISTEEL,n.STEEL,-1,[[r.RUINS,4],[r.RUINS,7]]],[e.LATIAS,n.DRAGON,n.PSYCHIC,[[r.PLAINS,4],[r.PLAINS,7]]],[e.LATIOS,n.DRAGON,n.PSYCHIC,[[r.PLAINS,4],[r.PLAINS,7]]],[e.KYOGRE,n.WATER,-1,[[r.SEABED,8]]],[e.GROUDON,n.GROUND,-1,[[r.BADLANDS,8]]],[e.RAYQUAZA,n.DRAGON,n.FLYING,[[r.SPACE,8]]],[e.JIRACHI,n.STEEL,n.PSYCHIC,[]],[e.DEOXYS,n.PSYCHIC,-1,[]],[e.TURTWIG,n.GRASS,-1,[[r.GRASS,2]]],[e.GROTLE,n.GRASS,-1,[[r.GRASS,2]]],[e.TORTERRA,n.GRASS,n.GROUND,[[r.GRASS,2],[r.GRASS,6]]],[e.CHIMCHAR,n.FIRE,-1,[[r.VOLCANO,2]]],[e.MONFERNO,n.FIRE,n.FIGHTING,[[r.VOLCANO,2]]],[e.INFERNAPE,n.FIRE,n.FIGHTING,[[r.VOLCANO,2],[r.VOLCANO,6]]],[e.PIPLUP,n.WATER,-1,[[r.SEA,2]]],[e.PRINPLUP,n.WATER,-1,[[r.SEA,2]]],[e.EMPOLEON,n.WATER,n.STEEL,[[r.SEA,2],[r.SEA,6]]],[e.STARLY,n.NORMAL,n.FLYING,[[r.TOWN,0,[N.DAWN,N.DAY]],[r.PLAINS,1,[N.DAWN,N.DAY]],[r.MOUNTAIN,0,[N.DAWN,N.DAY]]]],[e.STARAVIA,n.NORMAL,n.FLYING,[[r.PLAINS,1,[N.DAWN,N.DAY]],[r.MOUNTAIN,0,[N.DAWN,N.DAY]]]],[e.STARAPTOR,n.NORMAL,n.FLYING,[[r.PLAINS,1,[N.DAWN,N.DAY]],[r.MOUNTAIN,0,[N.DAWN,N.DAY]],[r.MOUNTAIN,5,[N.DAWN,N.DAY]]]],[e.BIDOOF,n.NORMAL,-1,[[r.TOWN,0],[r.PLAINS,0]]],[e.BIBAREL,n.NORMAL,n.WATER,[[r.PLAINS,0],[r.PLAINS,5]]],[e.KRICKETOT,n.BUG,-1,[[r.TOWN,1,[N.DUSK,N.NIGHT]],[r.TALL_GRASS,0,[N.DUSK,N.NIGHT]]]],[e.KRICKETUNE,n.BUG,-1,[[r.TALL_GRASS,0,[N.DUSK,N.NIGHT]],[r.TALL_GRASS,5,[N.DUSK,N.NIGHT]]]],[e.SHINX,n.ELECTRIC,-1,[[r.PLAINS,2,[N.DUSK,N.NIGHT]],[r.POWER_PLANT,0]]],[e.LUXIO,n.ELECTRIC,-1,[[r.PLAINS,2,[N.DUSK,N.NIGHT]],[r.POWER_PLANT,0]]],[e.LUXRAY,n.ELECTRIC,-1,[[r.PLAINS,2,[N.DUSK,N.NIGHT]],[r.POWER_PLANT,0],[r.POWER_PLANT,5]]],[e.BUDEW,n.GRASS,n.POISON,[]],[e.ROSERADE,n.GRASS,n.POISON,[[r.MEADOW,5,[N.DAWN,N.DAY]]]],[e.CRANIDOS,n.ROCK,-1,[[r.MOUNTAIN,3]]],[e.RAMPARDOS,n.ROCK,-1,[[r.MOUNTAIN,3],[r.MOUNTAIN,6]]],[e.SHIELDON,n.ROCK,n.STEEL,[[r.MOUNTAIN,3]]],[e.BASTIODON,n.ROCK,n.STEEL,[[r.MOUNTAIN,3],[r.MOUNTAIN,6]]],[e.BURMY,n.BUG,-1,[[r.FOREST,1],[r.BEACH,1],[r.SLUM,1]]],[e.WORMADAM,n.BUG,n.GRASS,[[r.FOREST,1],[r.FOREST,5],[r.BEACH,1],[r.BEACH,5],[r.SLUM,1],[r.SLUM,5]]],[e.MOTHIM,n.BUG,n.FLYING,[[r.FOREST,1,[N.DAWN,N.DAY]],[r.FOREST,5,[N.DAWN,N.DAY]]]],[e.COMBEE,n.BUG,n.FLYING,[[r.TOWN,1,[N.DAWN,N.DAY]],[r.GRASS,1,[N.DAWN,N.DAY]],[r.FOREST,0,[N.DAWN,N.DAY]],[r.JUNGLE,1,[N.DAWN,N.DAY]]]],[e.VESPIQUEN,n.BUG,n.FLYING,[[r.GRASS,1,[N.DAWN,N.DAY]],[r.FOREST,0,[N.DAWN,N.DAY]],[r.FOREST,5,[N.DAWN,N.DAY]],[r.JUNGLE,0,[N.DAWN,N.DAY]]]],[e.PACHIRISU,n.ELECTRIC,-1,[[r.POWER_PLANT,1]]],[e.BUIZEL,n.WATER,-1,[[r.SEA,0]]],[e.FLOATZEL,n.WATER,-1,[[r.SEA,0],[r.SEA,5]]],[e.CHERUBI,n.GRASS,-1,[[r.TOWN,1,[N.DAWN,N.DAY]],[r.GRASS,1,[N.DAWN,N.DAY]],[r.JUNGLE,0,[N.DAWN,N.DAY]]]],[e.CHERRIM,n.GRASS,-1,[[r.GRASS,1,[N.DAWN,N.DAY]],[r.JUNGLE,0,[N.DAWN,N.DAY]],[r.JUNGLE,5,[N.DAWN,N.DAY]]]],[e.SHELLOS,n.WATER,-1,[[r.SWAMP,0],[r.SEABED,1]]],[e.GASTRODON,n.WATER,n.GROUND,[[r.SWAMP,0],[r.SWAMP,5],[r.SEABED,1]]],[e.AMBIPOM,n.NORMAL,-1,[[r.JUNGLE,5]]],[e.DRIFLOON,n.GHOST,n.FLYING,[[r.GRAVEYARD,0]]],[e.DRIFBLIM,n.GHOST,n.FLYING,[[r.GRAVEYARD,0],[r.GRAVEYARD,5]]],[e.BUNEARY,n.NORMAL,-1,[[r.PLAINS,2]]],[e.LOPUNNY,n.NORMAL,-1,[[r.PLAINS,2],[r.PLAINS,5]]],[e.MISMAGIUS,n.GHOST,-1,[[r.GRAVEYARD,5]]],[e.HONCHKROW,n.DARK,n.FLYING,[[r.ABYSS,5]]],[e.GLAMEOW,n.NORMAL,-1,[[r.METROPOLIS,1],[r.MEADOW,1]]],[e.PURUGLY,n.NORMAL,-1,[[r.METROPOLIS,1],[r.MEADOW,1],[r.MEADOW,5]]],[e.CHINGLING,n.PSYCHIC,-1,[[r.TEMPLE,1]]],[e.STUNKY,n.POISON,n.DARK,[[r.SLUM,1,[N.DUSK,N.NIGHT]]]],[e.SKUNTANK,n.POISON,n.DARK,[[r.SLUM,1,[N.DUSK,N.NIGHT]],[r.SLUM,5,[N.DUSK,N.NIGHT]]]],[e.BRONZOR,n.STEEL,n.PSYCHIC,[[r.FACTORY,1],[r.SPACE,0],[r.LABORATORY,0]]],[e.BRONZONG,n.STEEL,n.PSYCHIC,[[r.FACTORY,1],[r.SPACE,0],[r.SPACE,5],[r.LABORATORY,0],[r.LABORATORY,5]]],[e.BONSLY,n.ROCK,-1,[]],[e.MIME_JR,n.PSYCHIC,n.FAIRY,[]],[e.HAPPINY,n.NORMAL,-1,[]],[e.CHATOT,n.NORMAL,n.FLYING,[[r.JUNGLE,3]]],[e.SPIRITOMB,n.GHOST,n.DARK,[[r.GRAVEYARD,3],[r.ABYSS,2],[r.ABYSS,5]]],[e.GIBLE,n.DRAGON,n.GROUND,[[r.MOUNTAIN,3],[r.WASTELAND,0]]],[e.GABITE,n.DRAGON,n.GROUND,[[r.MOUNTAIN,3],[r.WASTELAND,0]]],[e.GARCHOMP,n.DRAGON,n.GROUND,[[r.MOUNTAIN,3],[r.WASTELAND,0],[r.WASTELAND,5]]],[e.MUNCHLAX,n.NORMAL,-1,[]],[e.RIOLU,n.FIGHTING,-1,[]],[e.LUCARIO,n.FIGHTING,n.STEEL,[[r.DOJO,2],[r.DOJO,5]]],[e.HIPPOPOTAS,n.GROUND,-1,[[r.DESERT,0,[N.DAWN,N.DAY]]]],[e.HIPPOWDON,n.GROUND,-1,[[r.DESERT,0,[N.DAWN,N.DAY]],[r.DESERT,5,[N.DAWN,N.DAY]]]],[e.SKORUPI,n.POISON,n.BUG,[[r.SWAMP,1],[r.DESERT,0],[r.TEMPLE,1]]],[e.DRAPION,n.POISON,n.DARK,[[r.SWAMP,1],[r.DESERT,0],[r.DESERT,5],[r.TEMPLE,1]]],[e.CROAGUNK,n.POISON,n.FIGHTING,[[r.SWAMP,1,[N.DUSK,N.NIGHT]],[r.DOJO,1]]],[e.TOXICROAK,n.POISON,n.FIGHTING,[[r.SWAMP,1,[N.DUSK,N.NIGHT]],[r.DOJO,1],[r.DOJO,5]]],[e.CARNIVINE,n.GRASS,-1,[[r.JUNGLE,2],[r.JUNGLE,5]]],[e.FINNEON,n.WATER,-1,[[r.SEA,0,N.NIGHT]]],[e.LUMINEON,n.WATER,-1,[[r.SEA,0,N.NIGHT],[r.SEA,5,N.NIGHT]]],[e.MANTYKE,n.WATER,n.FLYING,[[r.SEABED,2]]],[e.SNOVER,n.GRASS,n.ICE,[[r.ICE_CAVE,0],[r.SNOWY_FOREST,0]]],[e.ABOMASNOW,n.GRASS,n.ICE,[[r.ICE_CAVE,0],[r.SNOWY_FOREST,0],[r.SNOWY_FOREST,5]]],[e.WEAVILE,n.DARK,n.ICE,[[r.ICE_CAVE,5]]],[e.MAGNEZONE,n.ELECTRIC,n.STEEL,[[r.POWER_PLANT,5],[r.LABORATORY,5]]],[e.LICKILICKY,n.NORMAL,-1,[[r.PLAINS,6]]],[e.RHYPERIOR,n.GROUND,n.ROCK,[[r.BADLANDS,5]]],[e.TANGROWTH,n.GRASS,-1,[[r.JUNGLE,5,[N.DUSK,N.NIGHT]]]],[e.ELECTIVIRE,n.ELECTRIC,-1,[[r.POWER_PLANT,5]]],[e.MAGMORTAR,n.FIRE,-1,[[r.VOLCANO,5]]],[e.TOGEKISS,n.FAIRY,n.FLYING,[[r.FAIRY_CAVE,5]]],[e.YANMEGA,n.BUG,n.FLYING,[[r.JUNGLE,5]]],[e.LEAFEON,n.GRASS,-1,[[r.JUNGLE,6]]],[e.GLACEON,n.ICE,-1,[[r.ICE_CAVE,6]]],[e.GLISCOR,n.GROUND,n.FLYING,[[r.BADLANDS,5]]],[e.MAMOSWINE,n.ICE,n.GROUND,[[r.ICE_CAVE,5]]],[e.PORYGON_Z,n.NORMAL,-1,[[r.SPACE,6],[r.LABORATORY,5]]],[e.GALLADE,n.PSYCHIC,n.FIGHTING,[[r.DOJO,3],[r.DOJO,6]]],[e.PROBOPASS,n.ROCK,n.STEEL,[[r.CAVE,5]]],[e.DUSKNOIR,n.GHOST,-1,[[r.GRAVEYARD,5]]],[e.FROSLASS,n.ICE,n.GHOST,[[r.ICE_CAVE,2],[r.ICE_CAVE,5]]],[e.ROTOM,n.ELECTRIC,n.GHOST,[[r.LABORATORY,3],[r.LABORATORY,7],[r.VOLCANO,3],[r.VOLCANO,7],[r.SEA,3],[r.SEA,7],[r.ICE_CAVE,3],[r.ICE_CAVE,7],[r.MOUNTAIN,3],[r.MOUNTAIN,7],[r.TALL_GRASS,3],[r.TALL_GRASS,7]]],[e.UXIE,n.PSYCHIC,-1,[[r.CAVE,4],[r.CAVE,7]]],[e.MESPRIT,n.PSYCHIC,-1,[[r.LAKE,4],[r.LAKE,7]]],[e.AZELF,n.PSYCHIC,-1,[[r.SWAMP,4],[r.SWAMP,7]]],[e.DIALGA,n.STEEL,n.DRAGON,[[r.WASTELAND,8]]],[e.PALKIA,n.WATER,n.DRAGON,[[r.ABYSS,8]]],[e.HEATRAN,n.FIRE,n.STEEL,[[r.VOLCANO,4],[r.VOLCANO,7]]],[e.REGIGIGAS,n.NORMAL,-1,[[r.TEMPLE,8]]],[e.GIRATINA,n.GHOST,n.DRAGON,[[r.GRAVEYARD,8]]],[e.CRESSELIA,n.PSYCHIC,-1,[[r.BEACH,4],[r.BEACH,7]]],[e.PHIONE,n.WATER,-1,[]],[e.MANAPHY,n.WATER,-1,[]],[e.DARKRAI,n.DARK,-1,[[r.ABYSS,4],[r.ABYSS,7]]],[e.SHAYMIN,n.GRASS,-1,[[r.MEADOW,8]]],[e.ARCEUS,n.NORMAL,-1,[]],[e.VICTINI,n.PSYCHIC,n.FIRE,[]],[e.SNIVY,n.GRASS,-1,[[r.JUNGLE,2]]],[e.SERVINE,n.GRASS,-1,[[r.JUNGLE,2]]],[e.SERPERIOR,n.GRASS,-1,[[r.JUNGLE,2],[r.JUNGLE,6]]],[e.TEPIG,n.FIRE,-1,[[r.VOLCANO,2]]],[e.PIGNITE,n.FIRE,n.FIGHTING,[[r.VOLCANO,2]]],[e.EMBOAR,n.FIRE,n.FIGHTING,[[r.VOLCANO,2],[r.VOLCANO,6]]],[e.OSHAWOTT,n.WATER,-1,[[r.LAKE,2]]],[e.DEWOTT,n.WATER,-1,[[r.LAKE,2]]],[e.SAMUROTT,n.WATER,-1,[[r.LAKE,2],[r.LAKE,6]]],[e.PATRAT,n.NORMAL,-1,[[r.TOWN,1,[N.DAWN,N.DAY]],[r.TOWN,0,[N.DUSK,N.NIGHT]],[r.METROPOLIS,1,[N.DAWN,N.DAY]],[r.METROPOLIS,0,[N.DUSK,N.NIGHT]],[r.SLUM,0,[N.DUSK,N.NIGHT]]]],[e.WATCHOG,n.NORMAL,-1,[[r.METROPOLIS,1,[N.DAWN,N.DAY]],[r.METROPOLIS,0,[N.DUSK,N.NIGHT]],[r.SLUM,0,[N.DUSK,N.NIGHT]],[r.SLUM,5,[N.DUSK,N.NIGHT]]]],[e.LILLIPUP,n.NORMAL,-1,[[r.TOWN,0],[r.METROPOLIS,0]]],[e.HERDIER,n.NORMAL,-1,[[r.METROPOLIS,0]]],[e.STOUTLAND,n.NORMAL,-1,[[r.METROPOLIS,0],[r.METROPOLIS,5]]],[e.PURRLOIN,n.DARK,-1,[[r.TOWN,0,[N.DUSK,N.NIGHT]],[r.ABYSS,0],[r.JUNGLE,0,[N.DUSK,N.NIGHT]]]],[e.LIEPARD,n.DARK,-1,[[r.ABYSS,0],[r.ABYSS,5],[r.JUNGLE,0,[N.DUSK,N.NIGHT]]]],[e.PANSAGE,n.GRASS,-1,[[r.FOREST,1],[r.JUNGLE,1]]],[e.SIMISAGE,n.GRASS,-1,[[r.FOREST,1],[r.FOREST,5],[r.JUNGLE,1]]],[e.PANSEAR,n.FIRE,-1,[[r.VOLCANO,1],[r.JUNGLE,1]]],[e.SIMISEAR,n.FIRE,-1,[[r.VOLCANO,1],[r.VOLCANO,5],[r.JUNGLE,1]]],[e.PANPOUR,n.WATER,-1,[[r.SEA,1],[r.JUNGLE,1]]],[e.SIMIPOUR,n.WATER,-1,[[r.SEA,1],[r.SEA,5],[r.JUNGLE,1]]],[e.MUNNA,n.PSYCHIC,-1,[[r.SPACE,0]]],[e.MUSHARNA,n.PSYCHIC,-1,[[r.SPACE,0],[r.SPACE,5]]],[e.PIDOVE,n.NORMAL,n.FLYING,[[r.TOWN,0,[N.DAWN,N.DAY]],[r.PLAINS,1,[N.DAWN,N.DAY]],[r.MOUNTAIN,0,[N.DAWN,N.DAY]]]],[e.TRANQUILL,n.NORMAL,n.FLYING,[[r.PLAINS,1,[N.DAWN,N.DAY]],[r.MOUNTAIN,0,[N.DAWN,N.DAY]]]],[e.UNFEZANT,n.NORMAL,n.FLYING,[[r.PLAINS,1,[N.DAWN,N.DAY]],[r.MOUNTAIN,0,[N.DAWN,N.DAY]],[r.MOUNTAIN,5,[N.DAWN,N.DAY]]]],[e.BLITZLE,n.ELECTRIC,-1,[[r.MEADOW,0],[r.JUNGLE,0]]],[e.ZEBSTRIKA,n.ELECTRIC,-1,[[r.MEADOW,0],[r.MEADOW,5],[r.JUNGLE,0]]],[e.ROGGENROLA,n.ROCK,-1,[[r.MOUNTAIN,1,[N.DAWN,N.DAY]],[r.MOUNTAIN,0,[N.DUSK,N.NIGHT]],[r.BADLANDS,1],[r.CAVE,0]]],[e.BOLDORE,n.ROCK,-1,[[r.MOUNTAIN,1,[N.DAWN,N.DAY]],[r.MOUNTAIN,0,[N.DUSK,N.NIGHT]],[r.BADLANDS,1],[r.CAVE,0]]],[e.GIGALITH,n.ROCK,-1,[[r.CAVE,5]]],[e.WOOBAT,n.PSYCHIC,n.FLYING,[[r.CAVE,0]]],[e.SWOOBAT,n.PSYCHIC,n.FLYING,[[r.CAVE,0],[r.CAVE,5]]],[e.DRILBUR,n.GROUND,-1,[[r.BADLANDS,0],[r.CONSTRUCTION_SITE,0]]],[e.EXCADRILL,n.GROUND,n.STEEL,[[r.BADLANDS,0],[r.BADLANDS,5],[r.CONSTRUCTION_SITE,0]]],[e.AUDINO,n.NORMAL,-1,[[r.FAIRY_CAVE,2],[r.FAIRY_CAVE,5]]],[e.TIMBURR,n.FIGHTING,-1,[[r.FACTORY,0],[r.CONSTRUCTION_SITE,0]]],[e.GURDURR,n.FIGHTING,-1,[[r.FACTORY,0],[r.CONSTRUCTION_SITE,0]]],[e.CONKELDURR,n.FIGHTING,-1,[[r.CONSTRUCTION_SITE,5]]],[e.TYMPOLE,n.WATER,-1,[[r.SWAMP,0]]],[e.PALPITOAD,n.WATER,n.GROUND,[[r.SWAMP,0]]],[e.SEISMITOAD,n.WATER,n.GROUND,[[r.SWAMP,0],[r.SWAMP,5]]],[e.THROH,n.FIGHTING,-1,[[r.DOJO,2],[r.DOJO,5]]],[e.SAWK,n.FIGHTING,-1,[[r.DOJO,2],[r.DOJO,5]]],[e.SEWADDLE,n.BUG,n.GRASS,[[r.FOREST,1,[N.DAWN,N.DAY]],[r.JUNGLE,0,[N.DAWN,N.DAY]]]],[e.SWADLOON,n.BUG,n.GRASS,[[r.FOREST,1,[N.DAWN,N.DAY]],[r.JUNGLE,0,[N.DAWN,N.DAY]]]],[e.LEAVANNY,n.BUG,n.GRASS,[[r.FOREST,1,[N.DAWN,N.DAY]],[r.JUNGLE,0,[N.DAWN,N.DAY]],[r.JUNGLE,5,[N.DAWN,N.DAY]]]],[e.VENIPEDE,n.BUG,n.POISON,[[r.TOWN,1,[N.DUSK,N.NIGHT]],[r.FOREST,0,[N.DUSK,N.NIGHT]]]],[e.WHIRLIPEDE,n.BUG,n.POISON,[[r.FOREST,0,[N.DUSK,N.NIGHT]]]],[e.SCOLIPEDE,n.BUG,n.POISON,[[r.FOREST,0,[N.DUSK,N.NIGHT]],[r.FOREST,5,[N.DUSK,N.NIGHT]]]],[e.COTTONEE,n.GRASS,n.FAIRY,[[r.TOWN,0,[N.DAWN,N.DAY]],[r.GRASS,0,[N.DAWN,N.DAY]],[r.MEADOW,0,[N.DAWN,N.DAY]]]],[e.WHIMSICOTT,n.GRASS,n.FAIRY,[[r.GRASS,5,[N.DAWN,N.DAY]]]],[e.PETILIL,n.GRASS,-1,[[r.GRASS,0,[N.DAWN,N.DAY]],[r.FOREST,0,[N.DAWN,N.DAY]]]],[e.LILLIGANT,n.GRASS,-1,[[r.FOREST,5,[N.DAWN,N.DAY]]]],[e.BASCULIN,n.WATER,-1,[[r.SEABED,0]]],[e.SANDILE,n.GROUND,n.DARK,[[r.DESERT,1,[N.DAWN,N.DAY]],[r.DESERT,0,[N.DUSK,N.NIGHT]]]],[e.KROKOROK,n.GROUND,n.DARK,[[r.DESERT,1,[N.DAWN,N.DAY]],[r.DESERT,0,[N.DUSK,N.NIGHT]]]],[e.KROOKODILE,n.GROUND,n.DARK,[[r.DESERT,1,[N.DAWN,N.DAY]],[r.DESERT,0,[N.DUSK,N.NIGHT]],[r.DESERT,5,[N.DUSK,N.NIGHT]]]],[e.DARUMAKA,n.FIRE,-1,[[r.DESERT,2]]],[e.DARMANITAN,n.FIRE,-1,[[r.DESERT,2],[r.DESERT,5]]],[e.MARACTUS,n.GRASS,-1,[[r.DESERT,1],[r.DESERT,5]]],[e.DWEBBLE,n.BUG,n.ROCK,[[r.BEACH,0]]],[e.CRUSTLE,n.BUG,n.ROCK,[[r.BEACH,0],[r.BEACH,5]]],[e.SCRAGGY,n.DARK,n.FIGHTING,[[r.DOJO,1],[r.CONSTRUCTION_SITE,1]]],[e.SCRAFTY,n.DARK,n.FIGHTING,[[r.DOJO,1],[r.DOJO,5],[r.CONSTRUCTION_SITE,1]]],[e.SIGILYPH,n.PSYCHIC,n.FLYING,[[r.RUINS,1],[r.RUINS,5],[r.SPACE,2]]],[e.YAMASK,n.GHOST,-1,[[r.GRAVEYARD,1],[r.TEMPLE,0]]],[e.COFAGRIGUS,n.GHOST,-1,[[r.GRAVEYARD,1],[r.TEMPLE,0],[r.TEMPLE,5]]],[e.TIRTOUGA,n.WATER,n.ROCK,[[r.SEA,3],[r.BEACH,3]]],[e.CARRACOSTA,n.WATER,n.ROCK,[[r.SEA,3],[r.BEACH,3],[r.BEACH,6]]],[e.ARCHEN,n.ROCK,n.FLYING,[[r.RUINS,3]]],[e.ARCHEOPS,n.ROCK,n.FLYING,[[r.MOUNTAIN,3],[r.RUINS,3],[r.RUINS,6]]],[e.TRUBBISH,n.POISON,-1,[[r.SLUM,0]]],[e.GARBODOR,n.POISON,-1,[[r.SLUM,0],[r.SLUM,5]]],[e.ZORUA,n.DARK,-1,[[r.ABYSS,2]]],[e.ZOROARK,n.DARK,-1,[[r.ABYSS,2],[r.ABYSS,5]]],[e.MINCCINO,n.NORMAL,-1,[[r.TOWN,1,[N.DAWN,N.DAY]],[r.MEADOW,0,[N.DAWN,N.DAY]]]],[e.CINCCINO,n.NORMAL,-1,[[r.MEADOW,5,[N.DAWN,N.DAY]]]],[e.GOTHITA,n.PSYCHIC,-1,[[r.RUINS,2]]],[e.GOTHORITA,n.PSYCHIC,-1,[[r.RUINS,2]]],[e.GOTHITELLE,n.PSYCHIC,-1,[[r.RUINS,2],[r.RUINS,5]]],[e.SOLOSIS,n.PSYCHIC,-1,[[r.SPACE,2],[r.LABORATORY,1]]],[e.DUOSION,n.PSYCHIC,-1,[[r.SPACE,2],[r.LABORATORY,1]]],[e.REUNICLUS,n.PSYCHIC,-1,[[r.SPACE,2],[r.SPACE,5],[r.LABORATORY,1],[r.LABORATORY,5]]],[e.DUCKLETT,n.WATER,n.FLYING,[[r.LAKE,0,[N.DAWN,N.DAY]]]],[e.SWANNA,n.WATER,n.FLYING,[[r.LAKE,0,[N.DAWN,N.DAY]],[r.LAKE,5,[N.DAWN,N.DAY]]]],[e.VANILLITE,n.ICE,-1,[[r.ICE_CAVE,0]]],[e.VANILLISH,n.ICE,-1,[[r.ICE_CAVE,0]]],[e.VANILLUXE,n.ICE,-1,[[r.ICE_CAVE,0],[r.ICE_CAVE,5]]],[e.DEERLING,n.NORMAL,n.GRASS,[[r.FOREST,0,[N.DAWN,N.DAY]]]],[e.SAWSBUCK,n.NORMAL,n.GRASS,[[r.FOREST,0,[N.DAWN,N.DAY]],[r.FOREST,5,[N.DAWN,N.DAY]]]],[e.EMOLGA,n.ELECTRIC,n.FLYING,[[r.POWER_PLANT,1]]],[e.KARRABLAST,n.BUG,-1,[[r.FOREST,2]]],[e.ESCAVALIER,n.BUG,n.STEEL,[[r.FOREST,6]]],[e.FOONGUS,n.GRASS,n.POISON,[[r.GRASS,1,[N.DUSK,N.NIGHT]],[r.JUNGLE,2,[N.DAWN,N.DAY]],[r.JUNGLE,0,[N.DUSK,N.NIGHT]]]],[e.AMOONGUSS,n.GRASS,n.POISON,[[r.GRASS,1,[N.DUSK,N.NIGHT]],[r.JUNGLE,2,[N.DAWN,N.DAY]],[r.JUNGLE,0,[N.DUSK,N.NIGHT]],[r.JUNGLE,6,[N.DAWN,N.DAY]],[r.JUNGLE,5,[N.DUSK,N.NIGHT]]]],[e.FRILLISH,n.WATER,n.GHOST,[[r.SEABED,0]]],[e.JELLICENT,n.WATER,n.GHOST,[[r.SEABED,0],[r.SEABED,5]]],[e.ALOMOMOLA,n.WATER,-1,[[r.SEABED,2],[r.SEABED,5]]],[e.JOLTIK,n.BUG,n.ELECTRIC,[[r.JUNGLE,1]]],[e.GALVANTULA,n.BUG,n.ELECTRIC,[[r.JUNGLE,1],[r.JUNGLE,5]]],[e.FERROSEED,n.GRASS,n.STEEL,[[r.CAVE,2]]],[e.FERROTHORN,n.GRASS,n.STEEL,[[r.CAVE,2],[r.CAVE,6]]],[e.KLINK,n.STEEL,-1,[[r.FACTORY,0],[r.LABORATORY,0]]],[e.KLANG,n.STEEL,-1,[[r.FACTORY,0],[r.LABORATORY,0]]],[e.KLINKLANG,n.STEEL,-1,[[r.FACTORY,0],[r.FACTORY,5],[r.LABORATORY,0],[r.LABORATORY,5]]],[e.TYNAMO,n.ELECTRIC,-1,[[r.SEABED,2]]],[e.EELEKTRIK,n.ELECTRIC,-1,[[r.SEABED,2]]],[e.EELEKTROSS,n.ELECTRIC,-1,[[r.SEABED,6]]],[e.ELGYEM,n.PSYCHIC,-1,[[r.RUINS,0],[r.SPACE,1]]],[e.BEHEEYEM,n.PSYCHIC,-1,[[r.RUINS,0],[r.RUINS,5],[r.SPACE,1]]],[e.LITWICK,n.GHOST,n.FIRE,[[r.GRAVEYARD,0],[r.TEMPLE,1]]],[e.LAMPENT,n.GHOST,n.FIRE,[[r.GRAVEYARD,0],[r.TEMPLE,1]]],[e.CHANDELURE,n.GHOST,n.FIRE,[[r.GRAVEYARD,5]]],[e.AXEW,n.DRAGON,-1,[[r.MOUNTAIN,3],[r.WASTELAND,0]]],[e.FRAXURE,n.DRAGON,-1,[[r.MOUNTAIN,3],[r.WASTELAND,0]]],[e.HAXORUS,n.DRAGON,-1,[[r.WASTELAND,0],[r.WASTELAND,5]]],[e.CUBCHOO,n.ICE,-1,[[r.ICE_CAVE,0]]],[e.BEARTIC,n.ICE,-1,[[r.ICE_CAVE,0],[r.ICE_CAVE,5]]],[e.CRYOGONAL,n.ICE,-1,[[r.ICE_CAVE,2],[r.ICE_CAVE,5]]],[e.SHELMET,n.BUG,-1,[[r.FOREST,2]]],[e.ACCELGOR,n.BUG,-1,[[r.FOREST,6]]],[e.STUNFISK,n.GROUND,n.ELECTRIC,[[r.SWAMP,1],[r.SWAMP,5]]],[e.MIENFOO,n.FIGHTING,-1,[[r.DOJO,1]]],[e.MIENSHAO,n.FIGHTING,-1,[[r.DOJO,1],[r.DOJO,5]]],[e.DRUDDIGON,n.DRAGON,-1,[[r.WASTELAND,3],[r.WASTELAND,6]]],[e.GOLETT,n.GROUND,n.GHOST,[[r.TEMPLE,0]]],[e.GOLURK,n.GROUND,n.GHOST,[[r.TEMPLE,0],[r.TEMPLE,5]]],[e.PAWNIARD,n.DARK,n.STEEL,[[r.ABYSS,0]]],[e.BISHARP,n.DARK,n.STEEL,[[r.ABYSS,0]]],[e.BOUFFALANT,n.NORMAL,-1,[[r.MEADOW,1,[N.DAWN,N.DAY]],[r.MEADOW,5,[N.DAWN,N.DAY]]]],[e.RUFFLET,n.NORMAL,n.FLYING,[[r.MOUNTAIN,1,[N.DAWN,N.DAY]]]],[e.BRAVIARY,n.NORMAL,n.FLYING,[[r.MOUNTAIN,1,[N.DAWN,N.DAY]],[r.MOUNTAIN,5,[N.DAWN,N.DAY]]]],[e.VULLABY,n.DARK,n.FLYING,[[r.MOUNTAIN,1,[N.DUSK,N.NIGHT]]]],[e.MANDIBUZZ,n.DARK,n.FLYING,[[r.MOUNTAIN,1,[N.DUSK,N.NIGHT]],[r.MOUNTAIN,5,[N.DUSK,N.NIGHT]]]],[e.HEATMOR,n.FIRE,-1,[[r.VOLCANO,1],[r.VOLCANO,5]]],[e.DURANT,n.BUG,n.STEEL,[[r.FOREST,3],[r.FOREST,6]]],[e.DEINO,n.DARK,n.DRAGON,[[r.WASTELAND,1,[N.DUSK,N.NIGHT]],[r.ABYSS,2]]],[e.ZWEILOUS,n.DARK,n.DRAGON,[[r.WASTELAND,1,[N.DUSK,N.NIGHT]],[r.ABYSS,2]]],[e.HYDREIGON,n.DARK,n.DRAGON,[[r.WASTELAND,1,[N.DUSK,N.NIGHT]],[r.ABYSS,2],[r.ABYSS,5]]],[e.LARVESTA,n.BUG,n.FIRE,[[r.VOLCANO,3]]],[e.VOLCARONA,n.BUG,n.FIRE,[[r.VOLCANO,3],[r.VOLCANO,6]]],[e.COBALION,n.STEEL,n.FIGHTING,[[r.CONSTRUCTION_SITE,4],[r.CONSTRUCTION_SITE,7]]],[e.TERRAKION,n.ROCK,n.FIGHTING,[[r.DOJO,4],[r.DOJO,7]]],[e.VIRIZION,n.GRASS,n.FIGHTING,[[r.GRASS,4],[r.GRASS,7]]],[e.TORNADUS,n.FLYING,-1,[[r.MOUNTAIN,4],[r.MOUNTAIN,7]]],[e.THUNDURUS,n.ELECTRIC,n.FLYING,[[r.POWER_PLANT,4],[r.POWER_PLANT,7]]],[e.RESHIRAM,n.DRAGON,n.FIRE,[[r.VOLCANO,8]]],[e.ZEKROM,n.DRAGON,n.ELECTRIC,[[r.POWER_PLANT,8]]],[e.LANDORUS,n.GROUND,n.FLYING,[[r.BADLANDS,4],[r.BADLANDS,7]]],[e.KYUREM,n.DRAGON,n.ICE,[[r.ICE_CAVE,8]]],[e.KELDEO,n.WATER,n.FIGHTING,[[r.BEACH,4],[r.BEACH,7]]],[e.MELOETTA,n.NORMAL,n.PSYCHIC,[[r.MEADOW,4],[r.MEADOW,7]]],[e.GENESECT,n.BUG,n.STEEL,[[r.FACTORY,4],[r.FACTORY,7]]],[e.CHESPIN,n.GRASS,-1,[[r.FOREST,2]]],[e.QUILLADIN,n.GRASS,-1,[[r.FOREST,2]]],[e.CHESNAUGHT,n.GRASS,n.FIGHTING,[[r.FOREST,2],[r.FOREST,6]]],[e.FENNEKIN,n.FIRE,-1,[[r.VOLCANO,2]]],[e.BRAIXEN,n.FIRE,-1,[[r.VOLCANO,2]]],[e.DELPHOX,n.FIRE,n.PSYCHIC,[[r.VOLCANO,2],[r.VOLCANO,6]]],[e.FROAKIE,n.WATER,-1,[[r.LAKE,2]]],[e.FROGADIER,n.WATER,-1,[[r.LAKE,2]]],[e.GRENINJA,n.WATER,n.DARK,[[r.LAKE,2],[r.LAKE,6]]],[e.BUNNELBY,n.NORMAL,-1,[[r.CAVE,0]]],[e.DIGGERSBY,n.NORMAL,n.GROUND,[[r.CAVE,0],[r.CAVE,5]]],[e.FLETCHLING,n.NORMAL,n.FLYING,[[r.TOWN,0],[r.PLAINS,1],[r.MOUNTAIN,0,[N.DAWN,N.DAY]]]],[e.FLETCHINDER,n.FIRE,n.FLYING,[[r.PLAINS,1],[r.MOUNTAIN,0,[N.DAWN,N.DAY]]]],[e.TALONFLAME,n.FIRE,n.FLYING,[[r.PLAINS,1],[r.MOUNTAIN,0,[N.DAWN,N.DAY]],[r.MOUNTAIN,5,[N.DAWN,N.DAY]]]],[e.SCATTERBUG,n.BUG,-1,[[r.TOWN,0,[N.DAWN,N.DAY]]]],[e.SPEWPA,n.BUG,-1,[[r.TOWN,0,[N.DAWN,N.DAY]]]],[e.VIVILLON,n.BUG,n.FLYING,[[r.FOREST,0,[N.DAWN,N.DAY]]]],[e.LITLEO,n.FIRE,n.NORMAL,[[r.JUNGLE,1]]],[e.PYROAR,n.FIRE,n.NORMAL,[[r.JUNGLE,1],[r.JUNGLE,5]]],[e.FLABEBE,n.FAIRY,-1,[[r.MEADOW,0]]],[e.FLOETTE,n.FAIRY,-1,[[r.MEADOW,0]]],[e.FLORGES,n.FAIRY,-1,[[r.MEADOW,5]]],[e.SKIDDO,n.GRASS,-1,[[r.MOUNTAIN,0]]],[e.GOGOAT,n.GRASS,-1,[[r.MOUNTAIN,0],[r.MOUNTAIN,5]]],[e.PANCHAM,n.FIGHTING,-1,[[r.DOJO,2],[r.JUNGLE,1,[N.DUSK,N.NIGHT]]]],[e.PANGORO,n.FIGHTING,n.DARK,[[r.DOJO,2],[r.DOJO,6],[r.JUNGLE,1,[N.DUSK,N.NIGHT]],[r.JUNGLE,5,[N.DUSK,N.NIGHT]]]],[e.FURFROU,n.NORMAL,-1,[[r.METROPOLIS,1],[r.METROPOLIS,5]]],[e.ESPURR,n.PSYCHIC,-1,[[r.METROPOLIS,1,[N.DUSK,N.NIGHT]]]],[e.MEOWSTIC,n.PSYCHIC,-1,[[r.METROPOLIS,1,[N.DUSK,N.NIGHT]],[r.METROPOLIS,5,[N.DUSK,N.NIGHT]]]],[e.HONEDGE,n.STEEL,n.GHOST,[[r.TEMPLE,0]]],[e.DOUBLADE,n.STEEL,n.GHOST,[[r.TEMPLE,0]]],[e.AEGISLASH,n.STEEL,n.GHOST,[[r.TEMPLE,5]]],[e.SPRITZEE,n.FAIRY,-1,[[r.FAIRY_CAVE,0]]],[e.AROMATISSE,n.FAIRY,-1,[[r.FAIRY_CAVE,0],[r.FAIRY_CAVE,5]]],[e.SWIRLIX,n.FAIRY,-1,[[r.FAIRY_CAVE,0]]],[e.SLURPUFF,n.FAIRY,-1,[[r.FAIRY_CAVE,0],[r.FAIRY_CAVE,5]]],[e.INKAY,n.DARK,n.PSYCHIC,[[r.SEA,0,[N.DUSK,N.NIGHT]]]],[e.MALAMAR,n.DARK,n.PSYCHIC,[[r.SEA,0,[N.DUSK,N.NIGHT]],[r.SEA,5,[N.DUSK,N.NIGHT]]]],[e.BINACLE,n.ROCK,n.WATER,[[r.BEACH,0]]],[e.BARBARACLE,n.ROCK,n.WATER,[[r.BEACH,0],[r.BEACH,5]]],[e.SKRELP,n.POISON,n.WATER,[[r.SEABED,1]]],[e.DRAGALGE,n.POISON,n.DRAGON,[[r.SEABED,1],[r.SEABED,5]]],[e.CLAUNCHER,n.WATER,-1,[[r.BEACH,1]]],[e.CLAWITZER,n.WATER,-1,[[r.BEACH,1],[r.BEACH,5]]],[e.HELIOPTILE,n.ELECTRIC,n.NORMAL,[[r.DESERT,1,[N.DAWN,N.DAY]]]],[e.HELIOLISK,n.ELECTRIC,n.NORMAL,[[r.DESERT,5,[N.DAWN,N.DAY]]]],[e.TYRUNT,n.ROCK,n.DRAGON,[[r.WASTELAND,3]]],[e.TYRANTRUM,n.ROCK,n.DRAGON,[[r.WASTELAND,3],[r.WASTELAND,6]]],[e.AMAURA,n.ROCK,n.ICE,[[r.ICE_CAVE,3]]],[e.AURORUS,n.ROCK,n.ICE,[[r.ICE_CAVE,3],[r.ICE_CAVE,6]]],[e.SYLVEON,n.FAIRY,-1,[[r.MEADOW,3],[r.MEADOW,6]]],[e.HAWLUCHA,n.FIGHTING,n.FLYING,[[r.MOUNTAIN,2],[r.MOUNTAIN,6]]],[e.DEDENNE,n.ELECTRIC,n.FAIRY,[[r.POWER_PLANT,0],[r.POWER_PLANT,5]]],[e.CARBINK,n.ROCK,n.FAIRY,[[r.CAVE,2],[r.FAIRY_CAVE,1],[r.FAIRY_CAVE,5]]],[e.GOOMY,n.DRAGON,-1,[[r.WASTELAND,0,[N.DAWN,N.DAY]]]],[e.SLIGGOO,n.DRAGON,-1,[[r.WASTELAND,0,[N.DAWN,N.DAY]]]],[e.GOODRA,n.DRAGON,-1,[[r.WASTELAND,0,[N.DAWN,N.DAY]],[r.WASTELAND,5,[N.DAWN,N.DAY]]]],[e.KLEFKI,n.STEEL,n.FAIRY,[[r.FACTORY,1],[r.FACTORY,5]]],[e.PHANTUMP,n.GHOST,n.GRASS,[[r.GRAVEYARD,0]]],[e.TREVENANT,n.GHOST,n.GRASS,[[r.GRAVEYARD,5]]],[e.PUMPKABOO,n.GHOST,n.GRASS,[[r.GRAVEYARD,0]]],[e.GOURGEIST,n.GHOST,n.GRASS,[[r.GRAVEYARD,5]]],[e.BERGMITE,n.ICE,-1,[[r.ICE_CAVE,0]]],[e.AVALUGG,n.ICE,-1,[[r.ICE_CAVE,0],[r.ICE_CAVE,5]]],[e.NOIBAT,n.FLYING,n.DRAGON,[[r.CAVE,1]]],[e.NOIVERN,n.FLYING,n.DRAGON,[[r.CAVE,1],[r.CAVE,5]]],[e.XERNEAS,n.FAIRY,-1,[[r.FAIRY_CAVE,8]]],[e.YVELTAL,n.DARK,n.FLYING,[[r.ABYSS,8]]],[e.ZYGARDE,n.DRAGON,n.GROUND,[[r.LABORATORY,7]]],[e.DIANCIE,n.ROCK,n.FAIRY,[[r.FAIRY_CAVE,4],[r.FAIRY_CAVE,7]]],[e.HOOPA,n.PSYCHIC,n.GHOST,[[r.TEMPLE,4],[r.TEMPLE,7]]],[e.VOLCANION,n.FIRE,n.WATER,[[r.VOLCANO,4],[r.VOLCANO,7]]],[e.ROWLET,n.GRASS,n.FLYING,[[r.FOREST,2]]],[e.DARTRIX,n.GRASS,n.FLYING,[[r.FOREST,2]]],[e.DECIDUEYE,n.GRASS,n.GHOST,[[r.FOREST,2],[r.FOREST,6]]],[e.LITTEN,n.FIRE,-1,[[r.VOLCANO,2]]],[e.TORRACAT,n.FIRE,-1,[[r.VOLCANO,2]]],[e.INCINEROAR,n.FIRE,n.DARK,[[r.VOLCANO,2],[r.VOLCANO,6]]],[e.POPPLIO,n.WATER,-1,[[r.SEA,2]]],[e.BRIONNE,n.WATER,-1,[[r.SEA,2]]],[e.PRIMARINA,n.WATER,n.FAIRY,[[r.SEA,2],[r.SEA,6]]],[e.PIKIPEK,n.NORMAL,n.FLYING,[[r.JUNGLE,0]]],[e.TRUMBEAK,n.NORMAL,n.FLYING,[[r.JUNGLE,0]]],[e.TOUCANNON,n.NORMAL,n.FLYING,[[r.JUNGLE,0],[r.JUNGLE,5]]],[e.YUNGOOS,n.NORMAL,-1,[[r.TOWN,0,[N.DAWN,N.DAY]],[r.PLAINS,0,[N.DAWN,N.DAY]]]],[e.GUMSHOOS,n.NORMAL,-1,[[r.PLAINS,0,[N.DAWN,N.DAY]],[r.PLAINS,5,[N.DAWN,N.DAY]]]],[e.GRUBBIN,n.BUG,-1,[[r.POWER_PLANT,0]]],[e.CHARJABUG,n.BUG,n.ELECTRIC,[[r.POWER_PLANT,0]]],[e.VIKAVOLT,n.BUG,n.ELECTRIC,[[r.POWER_PLANT,5]]],[e.CRABRAWLER,n.FIGHTING,-1,[[r.ICE_CAVE,0]]],[e.CRABOMINABLE,n.FIGHTING,n.ICE,[[r.ICE_CAVE,5]]],[e.ORICORIO,n.FIRE,n.FLYING,[[r.MEADOW,1],[r.ISLAND,0],[r.ISLAND,5]]],[e.CUTIEFLY,n.BUG,n.FAIRY,[[r.MEADOW,0],[r.FAIRY_CAVE,0]]],[e.RIBOMBEE,n.BUG,n.FAIRY,[[r.MEADOW,0],[r.MEADOW,5],[r.FAIRY_CAVE,0],[r.FAIRY_CAVE,5]]],[e.ROCKRUFF,n.ROCK,-1,[[r.PLAINS,1,N.DAY],[r.FOREST,1,N.NIGHT],[r.CAVE,1,N.DUSK]]],[e.LYCANROC,n.ROCK,-1,[[r.PLAINS,1,N.DAY],[r.PLAINS,6,N.DAY],[r.FOREST,1,N.NIGHT],[r.FOREST,6,N.NIGHT],[r.CAVE,1,N.DUSK],[r.CAVE,6,N.DUSK]]],[e.WISHIWASHI,n.WATER,-1,[[r.LAKE,1],[r.LAKE,5]]],[e.MAREANIE,n.POISON,n.WATER,[[r.BEACH,0],[r.SWAMP,1]]],[e.TOXAPEX,n.POISON,n.WATER,[[r.BEACH,0],[r.BEACH,5],[r.SWAMP,1],[r.SWAMP,5]]],[e.MUDBRAY,n.GROUND,-1,[[r.BADLANDS,0]]],[e.MUDSDALE,n.GROUND,-1,[[r.BADLANDS,0],[r.BADLANDS,5]]],[e.DEWPIDER,n.WATER,n.BUG,[[r.LAKE,1,[N.DAWN,N.DAY]]]],[e.ARAQUANID,n.WATER,n.BUG,[[r.LAKE,1,[N.DAWN,N.DAY]],[r.LAKE,5,[N.DAWN,N.DAY]]]],[e.FOMANTIS,n.GRASS,-1,[[r.TALL_GRASS,0],[r.JUNGLE,1]]],[e.LURANTIS,n.GRASS,-1,[[r.TALL_GRASS,0],[r.TALL_GRASS,5],[r.JUNGLE,1],[r.JUNGLE,5]]],[e.MORELULL,n.GRASS,n.FAIRY,[[r.FAIRY_CAVE,0]]],[e.SHIINOTIC,n.GRASS,n.FAIRY,[[r.FAIRY_CAVE,0],[r.FAIRY_CAVE,5]]],[e.SALANDIT,n.POISON,n.FIRE,[[r.VOLCANO,0]]],[e.SALAZZLE,n.POISON,n.FIRE,[[r.VOLCANO,0],[r.VOLCANO,5]]],[e.STUFFUL,n.NORMAL,n.FIGHTING,[[r.DOJO,0]]],[e.BEWEAR,n.NORMAL,n.FIGHTING,[[r.DOJO,0],[r.DOJO,5]]],[e.BOUNSWEET,n.GRASS,-1,[[r.TALL_GRASS,0,[N.DAWN,N.DAY]]]],[e.STEENEE,n.GRASS,-1,[[r.TALL_GRASS,0,[N.DAWN,N.DAY]]]],[e.TSAREENA,n.GRASS,-1,[[r.TALL_GRASS,0,[N.DAWN,N.DAY]],[r.TALL_GRASS,5,[N.DAWN,N.DAY]]]],[e.COMFEY,n.FAIRY,-1,[[r.FAIRY_CAVE,1],[r.FAIRY_CAVE,5]]],[e.ORANGURU,n.NORMAL,n.PSYCHIC,[[r.JUNGLE,2,[N.DUSK,N.NIGHT]]]],[e.PASSIMIAN,n.FIGHTING,-1,[[r.JUNGLE,2,[N.DAWN,N.DAY]]]],[e.WIMPOD,n.BUG,n.WATER,[[r.CAVE,1]]],[e.GOLISOPOD,n.BUG,n.WATER,[[r.CAVE,1],[r.CAVE,5]]],[e.SANDYGAST,n.GHOST,n.GROUND,[[r.BEACH,1]]],[e.PALOSSAND,n.GHOST,n.GROUND,[[r.BEACH,1],[r.BEACH,5]]],[e.PYUKUMUKU,n.WATER,-1,[[r.SEABED,3],[r.SEABED,6]]],[e.TYPE_NULL,n.NORMAL,-1,[[r.LABORATORY,4]]],[e.SILVALLY,n.NORMAL,-1,[[r.LABORATORY,7]]],[e.MINIOR,n.ROCK,n.FLYING,[[r.SPACE,0],[r.SPACE,5]]],[e.KOMALA,n.NORMAL,-1,[[r.JUNGLE,1,[N.DAWN,N.DAY]],[r.JUNGLE,5,[N.DAWN,N.DAY]]]],[e.TURTONATOR,n.FIRE,n.DRAGON,[[r.VOLCANO,1],[r.VOLCANO,5]]],[e.TOGEDEMARU,n.ELECTRIC,n.STEEL,[[r.POWER_PLANT,1],[r.POWER_PLANT,5]]],[e.MIMIKYU,n.GHOST,n.FAIRY,[[r.GRAVEYARD,2],[r.GRAVEYARD,5]]],[e.BRUXISH,n.WATER,n.PSYCHIC,[[r.ISLAND,1],[r.ISLAND,5]]],[e.DRAMPA,n.NORMAL,n.DRAGON,[[r.WASTELAND,1],[r.WASTELAND,5]]],[e.DHELMISE,n.GHOST,n.GRASS,[[r.SEABED,2],[r.SEABED,6]]],[e.JANGMO_O,n.DRAGON,-1,[[r.WASTELAND,0,[N.DAWN,N.DAY]]]],[e.HAKAMO_O,n.DRAGON,n.FIGHTING,[[r.WASTELAND,0,[N.DAWN,N.DAY]]]],[e.KOMMO_O,n.DRAGON,n.FIGHTING,[[r.WASTELAND,0,[N.DAWN,N.DAY]],[r.WASTELAND,5,[N.DAWN,N.DAY]]]],[e.TAPU_KOKO,n.ELECTRIC,n.FAIRY,[[r.TEMPLE,4],[r.TEMPLE,7]]],[e.TAPU_LELE,n.PSYCHIC,n.FAIRY,[[r.JUNGLE,4],[r.JUNGLE,7]]],[e.TAPU_BULU,n.GRASS,n.FAIRY,[[r.DESERT,4],[r.DESERT,7]]],[e.TAPU_FINI,n.WATER,n.FAIRY,[[r.BEACH,4],[r.BEACH,7]]],[e.COSMOG,n.PSYCHIC,-1,[[r.SPACE,4]]],[e.COSMOEM,n.PSYCHIC,-1,[[r.SPACE,4]]],[e.SOLGALEO,n.PSYCHIC,n.STEEL,[[r.SPACE,8,N.DAY]]],[e.LUNALA,n.PSYCHIC,n.GHOST,[[r.SPACE,8,N.NIGHT]]],[e.NIHILEGO,n.ROCK,n.POISON,[[r.SEABED,4],[r.SEABED,7]]],[e.BUZZWOLE,n.BUG,n.FIGHTING,[[r.JUNGLE,4],[r.JUNGLE,7]]],[e.PHEROMOSA,n.BUG,n.FIGHTING,[[r.DESERT,4],[r.DESERT,7]]],[e.XURKITREE,n.ELECTRIC,-1,[[r.POWER_PLANT,4],[r.POWER_PLANT,7]]],[e.CELESTEELA,n.STEEL,n.FLYING,[[r.SPACE,4],[r.SPACE,7]]],[e.KARTANA,n.GRASS,n.STEEL,[[r.FOREST,4],[r.FOREST,7]]],[e.GUZZLORD,n.DARK,n.DRAGON,[[r.SLUM,4],[r.SLUM,7]]],[e.NECROZMA,n.PSYCHIC,-1,[[r.SPACE,8]]],[e.MAGEARNA,n.STEEL,n.FAIRY,[[r.FACTORY,4],[r.FACTORY,7]]],[e.MARSHADOW,n.FIGHTING,n.GHOST,[[r.GRAVEYARD,4],[r.GRAVEYARD,7]]],[e.POIPOLE,n.POISON,-1,[[r.SWAMP,4]]],[e.NAGANADEL,n.POISON,n.DRAGON,[[r.SWAMP,7]]],[e.STAKATAKA,n.ROCK,n.STEEL,[[r.CONSTRUCTION_SITE,4],[r.CONSTRUCTION_SITE,7]]],[e.BLACEPHALON,n.FIRE,n.GHOST,[[r.ISLAND,4],[r.ISLAND,7]]],[e.ZERAORA,n.ELECTRIC,-1,[[r.POWER_PLANT,4],[r.POWER_PLANT,7]]],[e.MELTAN,n.STEEL,-1,[]],[e.MELMETAL,n.STEEL,-1,[]],[e.GROOKEY,n.GRASS,-1,[[r.JUNGLE,2]]],[e.THWACKEY,n.GRASS,-1,[[r.JUNGLE,2]]],[e.RILLABOOM,n.GRASS,-1,[[r.JUNGLE,2],[r.JUNGLE,6]]],[e.SCORBUNNY,n.FIRE,-1,[[r.VOLCANO,2]]],[e.RABOOT,n.FIRE,-1,[[r.VOLCANO,2]]],[e.CINDERACE,n.FIRE,-1,[[r.VOLCANO,2],[r.VOLCANO,6]]],[e.SOBBLE,n.WATER,-1,[[r.LAKE,2]]],[e.DRIZZILE,n.WATER,-1,[[r.LAKE,2]]],[e.INTELEON,n.WATER,-1,[[r.LAKE,2],[r.LAKE,6]]],[e.SKWOVET,n.NORMAL,-1,[[r.TOWN,0,[N.DAWN,N.DAY]],[r.PLAINS,0,[N.DAWN,N.DAY]]]],[e.GREEDENT,n.NORMAL,-1,[[r.PLAINS,0,[N.DAWN,N.DAY]],[r.PLAINS,5,[N.DAWN,N.DAY]]]],[e.ROOKIDEE,n.FLYING,-1,[[r.TOWN,2],[r.PLAINS,2],[r.MOUNTAIN,1,[N.DAWN,N.DAY]]]],[e.CORVISQUIRE,n.FLYING,-1,[[r.PLAINS,2],[r.MOUNTAIN,1,[N.DAWN,N.DAY]]]],[e.CORVIKNIGHT,n.FLYING,n.STEEL,[[r.PLAINS,2],[r.MOUNTAIN,1,[N.DAWN,N.DAY]],[r.MOUNTAIN,5,[N.DAWN,N.DAY]]]],[e.BLIPBUG,n.BUG,-1,[[r.TOWN,0,[N.DUSK,N.NIGHT]]]],[e.DOTTLER,n.BUG,n.PSYCHIC,[[r.FOREST,1,[N.DUSK,N.NIGHT]]]],[e.ORBEETLE,n.BUG,n.PSYCHIC,[[r.FOREST,1,[N.DUSK,N.NIGHT]],[r.FOREST,5,[N.DUSK,N.NIGHT]]]],[e.NICKIT,n.DARK,-1,[[r.ABYSS,0]]],[e.THIEVUL,n.DARK,-1,[[r.ABYSS,0],[r.ABYSS,5]]],[e.GOSSIFLEUR,n.GRASS,-1,[[r.MEADOW,0]]],[e.ELDEGOSS,n.GRASS,-1,[[r.MEADOW,0]]],[e.WOOLOO,n.NORMAL,-1,[[r.TOWN,0],[r.MEADOW,0]]],[e.DUBWOOL,n.NORMAL,-1,[[r.MEADOW,0],[r.MEADOW,5]]],[e.CHEWTLE,n.WATER,-1,[[r.LAKE,0]]],[e.DREDNAW,n.WATER,n.ROCK,[[r.LAKE,0],[r.LAKE,5]]],[e.YAMPER,n.ELECTRIC,-1,[[r.METROPOLIS,0,[N.DAWN,N.DAY]]]],[e.BOLTUND,n.ELECTRIC,-1,[[r.METROPOLIS,0,[N.DAWN,N.DAY]],[r.METROPOLIS,5,[N.DAWN,N.DAY]]]],[e.ROLYCOLY,n.ROCK,-1,[[r.VOLCANO,0]]],[e.CARKOL,n.ROCK,n.FIRE,[[r.VOLCANO,0]]],[e.COALOSSAL,n.ROCK,n.FIRE,[[r.VOLCANO,0],[r.VOLCANO,5]]],[e.APPLIN,n.GRASS,n.DRAGON,[[r.MEADOW,2]]],[e.FLAPPLE,n.GRASS,n.DRAGON,[[r.MEADOW,6]]],[e.APPLETUN,n.GRASS,n.DRAGON,[[r.MEADOW,6]]],[e.SILICOBRA,n.GROUND,-1,[[r.DESERT,0]]],[e.SANDACONDA,n.GROUND,-1,[[r.DESERT,0],[r.DESERT,5]]],[e.CRAMORANT,n.FLYING,n.WATER,[[r.SEA,0,[N.DAWN,N.DAY]],[r.SEA,5,[N.DAWN,N.DAY]]]],[e.ARROKUDA,n.WATER,-1,[[r.SEABED,0]]],[e.BARRASKEWDA,n.WATER,-1,[[r.SEABED,0],[r.SEABED,5]]],[e.TOXEL,n.ELECTRIC,n.POISON,[]],[e.TOXTRICITY,n.ELECTRIC,n.POISON,[[r.SLUM,2,[N.DUSK,N.NIGHT]],[r.SLUM,6,[N.DUSK,N.NIGHT]]]],[e.SIZZLIPEDE,n.FIRE,n.BUG,[[r.BADLANDS,1,[N.DAWN,N.DAY]]]],[e.CENTISKORCH,n.FIRE,n.BUG,[[r.BADLANDS,1,[N.DAWN,N.DAY]],[r.BADLANDS,5,[N.DAWN,N.DAY]]]],[e.CLOBBOPUS,n.FIGHTING,-1,[[r.DOJO,0]]],[e.GRAPPLOCT,n.FIGHTING,-1,[[r.DOJO,0],[r.DOJO,5]]],[e.SINISTEA,n.GHOST,-1,[[r.GRAVEYARD,1]]],[e.POLTEAGEIST,n.GHOST,-1,[[r.GRAVEYARD,1],[r.GRAVEYARD,5]]],[e.HATENNA,n.PSYCHIC,-1,[[r.FAIRY_CAVE,1]]],[e.HATTREM,n.PSYCHIC,-1,[[r.FAIRY_CAVE,1]]],[e.HATTERENE,n.PSYCHIC,n.FAIRY,[[r.FAIRY_CAVE,1],[r.FAIRY_CAVE,5]]],[e.IMPIDIMP,n.DARK,n.FAIRY,[[r.ABYSS,0]]],[e.MORGREM,n.DARK,n.FAIRY,[[r.ABYSS,0]]],[e.GRIMMSNARL,n.DARK,n.FAIRY,[[r.ABYSS,0],[r.ABYSS,5]]],[e.OBSTAGOON,n.DARK,n.NORMAL,[[r.SLUM,2,[N.DUSK,N.NIGHT]],[r.SLUM,6,[N.DUSK,N.NIGHT]]]],[e.PERRSERKER,n.STEEL,-1,[[r.CONSTRUCTION_SITE,2,N.DUSK],[r.CONSTRUCTION_SITE,6,N.DUSK]]],[e.CURSOLA,n.GHOST,-1,[[r.SEABED,3],[r.SEABED,6]]],[e.SIRFETCHD,n.FIGHTING,-1,[[r.DOJO,6]]],[e.MR_RIME,n.ICE,n.PSYCHIC,[[r.SNOWY_FOREST,3],[r.SNOWY_FOREST,6]]],[e.RUNERIGUS,n.GROUND,n.GHOST,[[r.RUINS,3,[N.DUSK,N.NIGHT]],[r.RUINS,6,[N.DUSK,N.NIGHT]]]],[e.MILCERY,n.FAIRY,-1,[[r.FAIRY_CAVE,0]]],[e.ALCREMIE,n.FAIRY,-1,[[r.FAIRY_CAVE,0],[r.FAIRY_CAVE,5]]],[e.FALINKS,n.FIGHTING,-1,[[r.JUNGLE,1],[r.JUNGLE,5]]],[e.PINCURCHIN,n.ELECTRIC,-1,[[r.SEABED,1]]],[e.SNOM,n.ICE,n.BUG,[[r.ICE_CAVE,0],[r.SNOWY_FOREST,0,[N.DUSK,N.NIGHT]]]],[e.FROSMOTH,n.ICE,n.BUG,[[r.ICE_CAVE,0],[r.SNOWY_FOREST,0,[N.DUSK,N.NIGHT]],[r.SNOWY_FOREST,5,[N.DUSK,N.NIGHT]]]],[e.STONJOURNER,n.ROCK,-1,[[r.RUINS,2]]],[e.EISCUE,n.ICE,-1,[[r.ICE_CAVE,1],[r.SNOWY_FOREST,0]]],[e.INDEEDEE,n.PSYCHIC,n.NORMAL,[[r.METROPOLIS,1,[N.DAWN,N.DAY]]]],[e.MORPEKO,n.ELECTRIC,n.DARK,[[r.METROPOLIS,2,[N.DUSK,N.NIGHT]]]],[e.CUFANT,n.STEEL,-1,[[r.BADLANDS,1]]],[e.COPPERAJAH,n.STEEL,-1,[[r.BADLANDS,1],[r.BADLANDS,5]]],[e.DRACOZOLT,n.ELECTRIC,n.DRAGON,[[r.WASTELAND,3],[r.WASTELAND,6]]],[e.ARCTOZOLT,n.ELECTRIC,n.ICE,[[r.SNOWY_FOREST,3],[r.SNOWY_FOREST,6]]],[e.DRACOVISH,n.WATER,n.DRAGON,[[r.WASTELAND,3],[r.WASTELAND,6]]],[e.ARCTOVISH,n.WATER,n.ICE,[[r.SEABED,3],[r.SEABED,6]]],[e.DURALUDON,n.STEEL,n.DRAGON,[[r.CONSTRUCTION_SITE,2]]],[e.DREEPY,n.DRAGON,n.GHOST,[[r.WASTELAND,2,[N.DUSK,N.NIGHT]]]],[e.DRAKLOAK,n.DRAGON,n.GHOST,[[r.WASTELAND,2,[N.DUSK,N.NIGHT]]]],[e.DRAGAPULT,n.DRAGON,n.GHOST,[[r.WASTELAND,2,[N.DUSK,N.NIGHT]],[r.WASTELAND,5,[N.DUSK,N.NIGHT]]]],[e.ZACIAN,n.FAIRY,-1,[[r.SNOWY_FOREST,8]]],[e.ZAMAZENTA,n.FIGHTING,-1,[[r.DOJO,8]]],[e.ETERNATUS,n.POISON,n.DRAGON,[[r.END,5]]],[e.KUBFU,n.FIGHTING,-1,[[r.DOJO,4]]],[e.URSHIFU,n.FIGHTING,n.DARK,[[r.DOJO,7]]],[e.ZARUDE,n.DARK,n.GRASS,[[r.JUNGLE,4],[r.JUNGLE,7]]],[e.REGIELEKI,n.ELECTRIC,-1,[[r.POWER_PLANT,4],[r.POWER_PLANT,7]]],[e.REGIDRAGO,n.DRAGON,-1,[[r.WASTELAND,4],[r.WASTELAND,7]]],[e.GLASTRIER,n.ICE,-1,[[r.SNOWY_FOREST,4],[r.SNOWY_FOREST,7]]],[e.SPECTRIER,n.GHOST,-1,[[r.GRAVEYARD,4],[r.GRAVEYARD,7]]],[e.CALYREX,n.PSYCHIC,n.GRASS,[[r.FOREST,8]]],[e.WYRDEER,n.NORMAL,n.PSYCHIC,[[r.SNOWY_FOREST,5,[N.DAWN,N.DAY]]]],[e.KLEAVOR,n.BUG,n.ROCK,[[r.JUNGLE,3],[r.JUNGLE,8]]],[e.URSALUNA,n.GROUND,n.NORMAL,[[r.SNOWY_FOREST,5]]],[e.BASCULEGION,n.WATER,n.GHOST,[[r.SEABED,6]]],[e.SNEASLER,n.FIGHTING,n.POISON,[[r.SNOWY_FOREST,6,[N.DAWN,N.DAY]]]],[e.OVERQWIL,n.DARK,n.POISON,[[r.SEABED,6]]],[e.ENAMORUS,n.FAIRY,n.FLYING,[[r.FAIRY_CAVE,4],[r.FAIRY_CAVE,7]]],[e.SPRIGATITO,n.GRASS,-1,[[r.MEADOW,2]]],[e.FLORAGATO,n.GRASS,-1,[[r.MEADOW,2]]],[e.MEOWSCARADA,n.GRASS,n.DARK,[[r.MEADOW,2],[r.MEADOW,6]]],[e.FUECOCO,n.FIRE,-1,[[r.GRAVEYARD,2]]],[e.CROCALOR,n.FIRE,-1,[[r.GRAVEYARD,2]]],[e.SKELEDIRGE,n.FIRE,n.GHOST,[[r.GRAVEYARD,2],[r.GRAVEYARD,6]]],[e.QUAXLY,n.WATER,-1,[[r.BEACH,2]]],[e.QUAXWELL,n.WATER,-1,[[r.BEACH,2]]],[e.QUAQUAVAL,n.WATER,n.FIGHTING,[[r.BEACH,2],[r.BEACH,6]]],[e.LECHONK,n.NORMAL,-1,[[r.TOWN,0],[r.PLAINS,0]]],[e.OINKOLOGNE,n.NORMAL,-1,[[r.PLAINS,0],[r.PLAINS,5]]],[e.TAROUNTULA,n.BUG,-1,[[r.FOREST,0]]],[e.SPIDOPS,n.BUG,-1,[[r.FOREST,0],[r.FOREST,5]]],[e.NYMBLE,n.BUG,-1,[[r.TALL_GRASS,0],[r.FOREST,0]]],[e.LOKIX,n.BUG,n.DARK,[[r.TALL_GRASS,0],[r.TALL_GRASS,5],[r.FOREST,0],[r.FOREST,5]]],[e.PAWMI,n.ELECTRIC,-1,[[r.TOWN,1,[N.DAWN,N.DAY]],[r.PLAINS,1,[N.DAWN,N.DAY]],[r.POWER_PLANT,0]]],[e.PAWMO,n.ELECTRIC,n.FIGHTING,[[r.PLAINS,1,[N.DAWN,N.DAY]],[r.POWER_PLANT,0]]],[e.PAWMOT,n.ELECTRIC,n.FIGHTING,[[r.PLAINS,1,[N.DAWN,N.DAY]],[r.PLAINS,6,[N.DAWN,N.DAY]],[r.POWER_PLANT,0],[r.POWER_PLANT,5]]],[e.TANDEMAUS,n.NORMAL,-1,[[r.TOWN,2,[N.DAWN,N.DAY]],[r.METROPOLIS,2,[N.DAWN,N.DAY]]]],[e.MAUSHOLD,n.NORMAL,-1,[[r.METROPOLIS,2,[N.DAWN,N.DAY]],[r.METROPOLIS,6,[N.DAWN,N.DAY]]]],[e.FIDOUGH,n.FAIRY,-1,[[r.TOWN,1],[r.METROPOLIS,1]]],[e.DACHSBUN,n.FAIRY,-1,[[r.METROPOLIS,1],[r.METROPOLIS,5]]],[e.SMOLIV,n.GRASS,n.NORMAL,[[r.MEADOW,1,[N.DAWN,N.DAY]]]],[e.DOLLIV,n.GRASS,n.NORMAL,[[r.MEADOW,1,[N.DAWN,N.DAY]]]],[e.ARBOLIVA,n.GRASS,n.NORMAL,[[r.MEADOW,1,[N.DAWN,N.DAY]],[r.MEADOW,5,[N.DAWN,N.DAY]]]],[e.SQUAWKABILLY,n.NORMAL,n.FLYING,[[r.METROPOLIS,1],[r.FOREST,2]]],[e.NACLI,n.ROCK,-1,[[r.MOUNTAIN,1],[r.CAVE,0]]],[e.NACLSTACK,n.ROCK,-1,[[r.MOUNTAIN,1],[r.CAVE,0]]],[e.GARGANACL,n.ROCK,-1,[[r.MOUNTAIN,1],[r.MOUNTAIN,5],[r.CAVE,0],[r.CAVE,5]]],[e.CHARCADET,n.FIRE,-1,[[r.VOLCANO,2]]],[e.ARMAROUGE,n.FIRE,n.PSYCHIC,[[r.VOLCANO,2],[r.VOLCANO,6]]],[e.CERULEDGE,n.FIRE,n.GHOST,[[r.GRAVEYARD,2],[r.GRAVEYARD,6]]],[e.TADBULB,n.ELECTRIC,-1,[[r.POWER_PLANT,0]]],[e.BELLIBOLT,n.ELECTRIC,-1,[[r.POWER_PLANT,0],[r.POWER_PLANT,5]]],[e.WATTREL,n.ELECTRIC,n.FLYING,[[r.SEA,1]]],[e.KILOWATTREL,n.ELECTRIC,n.FLYING,[[r.SEA,1],[r.SEA,5]]],[e.MASCHIFF,n.DARK,-1,[[r.ABYSS,0]]],[e.MABOSSTIFF,n.DARK,-1,[[r.ABYSS,0],[r.ABYSS,5]]],[e.SHROODLE,n.POISON,n.NORMAL,[[r.FOREST,0]]],[e.GRAFAIAI,n.POISON,n.NORMAL,[[r.FOREST,0],[r.FOREST,5]]],[e.BRAMBLIN,n.GRASS,n.GHOST,[[r.DESERT,1]]],[e.BRAMBLEGHAST,n.GRASS,n.GHOST,[[r.DESERT,1],[r.DESERT,5]]],[e.TOEDSCOOL,n.GROUND,n.GRASS,[[r.FOREST,2]]],[e.TOEDSCRUEL,n.GROUND,n.GRASS,[[r.FOREST,2],[r.FOREST,6]]],[e.KLAWF,n.ROCK,-1,[[r.MOUNTAIN,2]]],[e.CAPSAKID,n.GRASS,-1,[[r.BADLANDS,1,[N.DAWN,N.DAY]]]],[e.SCOVILLAIN,n.GRASS,n.FIRE,[[r.BADLANDS,1,[N.DAWN,N.DAY]],[r.BADLANDS,5,[N.DAWN,N.DAY]]]],[e.RELLOR,n.BUG,-1,[[r.DESERT,0,[N.DAWN,N.DAY]]]],[e.RABSCA,n.BUG,n.PSYCHIC,[[r.DESERT,0,[N.DAWN,N.DAY]],[r.DESERT,5,[N.DAWN,N.DAY]]]],[e.FLITTLE,n.PSYCHIC,-1,[[r.MOUNTAIN,1,[N.DAWN,N.DAY]]]],[e.ESPATHRA,n.PSYCHIC,-1,[[r.MOUNTAIN,1,[N.DAWN,N.DAY]],[r.MOUNTAIN,5,[N.DAWN,N.DAY]]]],[e.TINKATINK,n.FAIRY,n.STEEL,[[r.RUINS,1]]],[e.TINKATUFF,n.FAIRY,n.STEEL,[[r.RUINS,1]]],[e.TINKATON,n.FAIRY,n.STEEL,[[r.RUINS,1],[r.RUINS,5]]],[e.WIGLETT,n.WATER,-1,[[r.BEACH,0]]],[e.WUGTRIO,n.WATER,-1,[[r.BEACH,0]]],[e.BOMBIRDIER,n.FLYING,n.DARK,[[r.MOUNTAIN,1,[N.DAWN,N.DAY]]]],[e.FINIZEN,n.WATER,-1,[[r.SEA,0,[N.DAWN,N.DAY]]]],[e.PALAFIN,n.WATER,-1,[[r.SEA,0,[N.DAWN,N.DAY]],[r.SEA,5,[N.DAWN,N.DAY]]]],[e.VAROOM,n.STEEL,n.POISON,[[r.METROPOLIS,2],[r.SLUM,2]]],[e.REVAVROOM,n.STEEL,n.POISON,[[r.METROPOLIS,2],[r.METROPOLIS,6],[r.SLUM,2],[r.SLUM,6]]],[e.CYCLIZAR,n.DRAGON,n.NORMAL,[[r.WASTELAND,1]]],[e.ORTHWORM,n.STEEL,-1,[[r.DESERT,1]]],[e.GLIMMET,n.ROCK,n.POISON,[[r.CAVE,2]]],[e.GLIMMORA,n.ROCK,n.POISON,[[r.CAVE,2],[r.CAVE,6]]],[e.GREAVARD,n.GHOST,-1,[[r.GRAVEYARD,0]]],[e.HOUNDSTONE,n.GHOST,-1,[[r.GRAVEYARD,0],[r.GRAVEYARD,5]]],[e.FLAMIGO,n.FLYING,n.FIGHTING,[[r.LAKE,1]]],[e.CETODDLE,n.ICE,-1,[[r.ICE_CAVE,1]]],[e.CETITAN,n.ICE,-1,[[r.ICE_CAVE,1],[r.ICE_CAVE,5]]],[e.VELUZA,n.WATER,n.PSYCHIC,[[r.SEABED,0]]],[e.DONDOZO,n.WATER,-1,[[r.SEABED,1],[r.SEABED,5]]],[e.TATSUGIRI,n.DRAGON,n.WATER,[[r.BEACH,2]]],[e.ANNIHILAPE,n.FIGHTING,n.GHOST,[[r.PLAINS,1,[N.DUSK,N.NIGHT]],[r.DOJO,0],[r.DOJO,5]]],[e.CLODSIRE,n.POISON,n.GROUND,[[r.SWAMP,0,[N.DUSK,N.NIGHT]],[r.SWAMP,5,[N.DUSK,N.NIGHT]]]],[e.FARIGIRAF,n.NORMAL,n.PSYCHIC,[[r.TALL_GRASS,2],[r.TALL_GRASS,6]]],[e.DUDUNSPARCE,n.NORMAL,-1,[[r.PLAINS,3],[r.PLAINS,6]]],[e.KINGAMBIT,n.DARK,n.STEEL,[[r.ABYSS,0],[r.ABYSS,5]]],[e.GREAT_TUSK,n.GROUND,n.FIGHTING,[[r.END,0]]],[e.SCREAM_TAIL,n.FAIRY,n.PSYCHIC,[[r.END,0]]],[e.BRUTE_BONNET,n.GRASS,n.DARK,[[r.END,0]]],[e.FLUTTER_MANE,n.GHOST,n.FAIRY,[[r.END,0]]],[e.SLITHER_WING,n.BUG,n.FIGHTING,[[r.END,0]]],[e.SANDY_SHOCKS,n.ELECTRIC,n.GROUND,[[r.END,0]]],[e.IRON_TREADS,n.GROUND,n.STEEL,[[r.END,0]]],[e.IRON_BUNDLE,n.ICE,n.WATER,[[r.END,0]]],[e.IRON_HANDS,n.FIGHTING,n.ELECTRIC,[[r.END,0]]],[e.IRON_JUGULIS,n.DARK,n.FLYING,[[r.END,0]]],[e.IRON_MOTH,n.FIRE,n.POISON,[[r.END,0]]],[e.IRON_THORNS,n.ROCK,n.ELECTRIC,[[r.END,0]]],[e.FRIGIBAX,n.DRAGON,n.ICE,[[r.WASTELAND,2]]],[e.ARCTIBAX,n.DRAGON,n.ICE,[[r.WASTELAND,2]]],[e.BAXCALIBUR,n.DRAGON,n.ICE,[[r.WASTELAND,2],[r.WASTELAND,5]]],[e.GIMMIGHOUL,n.GHOST,-1,[[r.TEMPLE,2]]],[e.GHOLDENGO,n.STEEL,n.GHOST,[[r.TEMPLE,2],[r.TEMPLE,6]]],[e.WO_CHIEN,n.DARK,n.GRASS,[[r.FOREST,4],[r.FOREST,7]]],[e.CHIEN_PAO,n.DARK,n.ICE,[[r.SNOWY_FOREST,4],[r.SNOWY_FOREST,7]]],[e.TING_LU,n.DARK,n.GROUND,[[r.MOUNTAIN,4],[r.MOUNTAIN,7]]],[e.CHI_YU,n.DARK,n.FIRE,[[r.VOLCANO,4],[r.VOLCANO,7]]],[e.ROARING_MOON,n.DRAGON,n.DARK,[[r.END,1]]],[e.IRON_VALIANT,n.FAIRY,n.FIGHTING,[[r.END,1]]],[e.KORAIDON,n.FIGHTING,n.DRAGON,[[r.RUINS,8]]],[e.MIRAIDON,n.ELECTRIC,n.DRAGON,[[r.LABORATORY,8]]],[e.WALKING_WAKE,n.WATER,n.DRAGON,[[r.END,2]]],[e.IRON_LEAVES,n.GRASS,n.PSYCHIC,[[r.END,2]]],[e.DIPPLIN,n.GRASS,n.DRAGON,[[r.MEADOW,2]]],[e.POLTCHAGEIST,n.GRASS,n.GHOST,[[r.BADLANDS,2]]],[e.SINISTCHA,n.GRASS,n.GHOST,[[r.BADLANDS,2],[r.BADLANDS,6]]],[e.OKIDOGI,n.POISON,n.FIGHTING,[[r.BADLANDS,4],[r.BADLANDS,7]]],[e.MUNKIDORI,n.POISON,n.PSYCHIC,[[r.JUNGLE,4],[r.JUNGLE,7]]],[e.FEZANDIPITI,n.POISON,n.FAIRY,[[r.RUINS,4],[r.RUINS,7]]],[e.OGERPON,n.GRASS,-1,[[r.MOUNTAIN,4],[r.MOUNTAIN,7]]],[e.ARCHALUDON,n.STEEL,n.DRAGON,[[r.CONSTRUCTION_SITE,6]]],[e.HYDRAPPLE,n.GRASS,n.DRAGON,[[r.MEADOW,6]]],[e.GOUGING_FIRE,n.FIRE,n.DRAGON,[[r.END,2]]],[e.RAGING_BOLT,n.ELECTRIC,n.DRAGON,[[r.END,2]]],[e.IRON_BOULDER,n.ROCK,n.PSYCHIC,[[r.END,2]]],[e.IRON_CROWN,n.STEEL,n.PSYCHIC,[[r.END,2]]],[e.TERAPAGOS,n.NORMAL,-1,[[r.CAVE,8]]],[e.PECHARUNT,n.POISON,n.GHOST,[]],[e.ALOLA_RATTATA,n.DARK,n.NORMAL,[[r.ISLAND,0,[N.DUSK,N.NIGHT]]]],[e.ALOLA_RATICATE,n.DARK,n.NORMAL,[[r.ISLAND,0,[N.DUSK,N.NIGHT]],[r.ISLAND,5,[N.DUSK,N.NIGHT]]]],[e.ALOLA_RAICHU,n.ELECTRIC,n.PSYCHIC,[[r.ISLAND,1,[N.DAWN,N.DAY]],[r.ISLAND,5,[N.DAWN,N.DAY]]]],[e.ALOLA_SANDSHREW,n.ICE,n.STEEL,[[r.ISLAND,0],[r.SNOWY_FOREST,2]]],[e.ALOLA_SANDSLASH,n.ICE,n.STEEL,[[r.ISLAND,0],[r.ISLAND,5],[r.SNOWY_FOREST,2],[r.SNOWY_FOREST,6]]],[e.ALOLA_VULPIX,n.ICE,-1,[[r.ISLAND,0],[r.SNOWY_FOREST,2]]],[e.ALOLA_NINETALES,n.ICE,n.FAIRY,[[r.ISLAND,0],[r.ISLAND,5],[r.SNOWY_FOREST,2],[r.SNOWY_FOREST,6]]],[e.ALOLA_DIGLETT,n.GROUND,n.STEEL,[[r.ISLAND,0]]],[e.ALOLA_DUGTRIO,n.GROUND,n.STEEL,[[r.ISLAND,0],[r.ISLAND,5]]],[e.ALOLA_MEOWTH,n.DARK,-1,[[r.ISLAND,0,[N.DUSK,N.NIGHT]]]],[e.ALOLA_PERSIAN,n.DARK,-1,[[r.ISLAND,0,[N.DUSK,N.NIGHT]],[r.ISLAND,5,[N.DUSK,N.NIGHT]]]],[e.ALOLA_GEODUDE,n.ROCK,n.ELECTRIC,[[r.ISLAND,0]]],[e.ALOLA_GRAVELER,n.ROCK,n.ELECTRIC,[[r.ISLAND,0]]],[e.ALOLA_GOLEM,n.ROCK,n.ELECTRIC,[[r.ISLAND,0],[r.ISLAND,5]]],[e.ALOLA_GRIMER,n.POISON,n.DARK,[[r.ISLAND,0]]],[e.ALOLA_MUK,n.POISON,n.DARK,[[r.ISLAND,0],[r.ISLAND,5]]],[e.ALOLA_EXEGGUTOR,n.GRASS,n.DRAGON,[[r.ISLAND,1,[N.DAWN,N.DAY]],[r.ISLAND,5,[N.DAWN,N.DAY]]]],[e.ALOLA_MAROWAK,n.FIRE,n.GHOST,[[r.ISLAND,1,[N.DUSK,N.NIGHT]],[r.ISLAND,5,[N.DUSK,N.NIGHT]]]],[e.ETERNAL_FLOETTE,n.FAIRY,-1,[[r.FAIRY_CAVE,2],[r.FAIRY_CAVE,6]]],[e.GALAR_MEOWTH,n.STEEL,-1,[[r.CONSTRUCTION_SITE,2,N.DUSK]]],[e.GALAR_PONYTA,n.PSYCHIC,-1,[[r.JUNGLE,2,N.DAWN]]],[e.GALAR_RAPIDASH,n.PSYCHIC,n.FAIRY,[[r.JUNGLE,2,N.DAWN],[r.JUNGLE,6,N.DAWN]]],[e.GALAR_SLOWPOKE,n.PSYCHIC,-1,[[r.SWAMP,3,[N.DAWN,N.DAY]]]],[e.GALAR_SLOWBRO,n.POISON,n.PSYCHIC,[[r.SWAMP,3,[N.DAWN,N.DAY]],[r.SWAMP,6,[N.DAWN,N.DAY]]]],[e.GALAR_FARFETCHD,n.FIGHTING,-1,[[r.DOJO,3]]],[e.GALAR_WEEZING,n.POISON,n.FAIRY,[[r.SLUM,6]]],[e.GALAR_MR_MIME,n.ICE,n.PSYCHIC,[[r.SNOWY_FOREST,3]]],[e.GALAR_ARTICUNO,n.PSYCHIC,n.FLYING,[[r.SNOWY_FOREST,4],[r.SNOWY_FOREST,8]]],[e.GALAR_ZAPDOS,n.FIGHTING,n.FLYING,[[r.DOJO,4],[r.DOJO,8]]],[e.GALAR_MOLTRES,n.DARK,n.FLYING,[[r.ABYSS,4],[r.ABYSS,8]]],[e.GALAR_SLOWKING,n.POISON,n.PSYCHIC,[[r.SWAMP,6,[N.DAWN,N.DAY]]]],[e.GALAR_CORSOLA,n.GHOST,-1,[[r.SEABED,3]]],[e.GALAR_ZIGZAGOON,n.DARK,n.NORMAL,[[r.SLUM,2,[N.DUSK,N.NIGHT]]]],[e.GALAR_LINOONE,n.DARK,n.NORMAL,[[r.SLUM,2,[N.DUSK,N.NIGHT]]]],[e.GALAR_DARUMAKA,n.ICE,-1,[[r.SNOWY_FOREST,2,[N.DAWN,N.DAY]]]],[e.GALAR_DARMANITAN,n.ICE,-1,[[r.SNOWY_FOREST,2,[N.DAWN,N.DAY]],[r.SNOWY_FOREST,6,[N.DAWN,N.DAY]]]],[e.GALAR_YAMASK,n.GROUND,n.GHOST,[[r.RUINS,3,[N.DUSK,N.NIGHT]]]],[e.GALAR_STUNFISK,n.GROUND,n.STEEL,[[r.SWAMP,3],[r.SWAMP,6]]],[e.HISUI_GROWLITHE,n.FIRE,n.ROCK,[[r.VOLCANO,3]]],[e.HISUI_ARCANINE,n.FIRE,n.ROCK,[[r.VOLCANO,6]]],[e.HISUI_VOLTORB,n.ELECTRIC,n.GRASS,[[r.POWER_PLANT,3]]],[e.HISUI_ELECTRODE,n.ELECTRIC,n.GRASS,[[r.POWER_PLANT,6]]],[e.HISUI_TYPHLOSION,n.FIRE,n.GHOST,[[r.GRAVEYARD,6]]],[e.HISUI_QWILFISH,n.DARK,n.POISON,[[r.SEABED,3]]],[e.HISUI_SNEASEL,n.FIGHTING,n.POISON,[[r.SNOWY_FOREST,3,[N.DAWN,N.DAY]]]],[e.HISUI_SAMUROTT,n.WATER,n.DARK,[[r.ABYSS,6]]],[e.HISUI_LILLIGANT,n.GRASS,n.FIGHTING,[[r.MEADOW,6,[N.DAWN,N.DAY]]]],[e.HISUI_ZORUA,n.NORMAL,n.GHOST,[[r.SNOWY_FOREST,3,[N.DUSK,N.NIGHT]]]],[e.HISUI_ZOROARK,n.NORMAL,n.GHOST,[[r.SNOWY_FOREST,3,[N.DUSK,N.NIGHT]],[r.SNOWY_FOREST,6,[N.DUSK,N.NIGHT]]]],[e.HISUI_BRAVIARY,n.PSYCHIC,n.FLYING,[[r.MOUNTAIN,6,[N.DAWN,N.DAY]]]],[e.HISUI_SLIGGOO,n.STEEL,n.DRAGON,[[r.SWAMP,3,[N.DAWN,N.DAY]]]],[e.HISUI_GOODRA,n.STEEL,n.DRAGON,[[r.SWAMP,3,[N.DAWN,N.DAY]],[r.SWAMP,6,[N.DAWN,N.DAY]]]],[e.HISUI_AVALUGG,n.ICE,n.ROCK,[[r.SNOWY_FOREST,3]]],[e.HISUI_DECIDUEYE,n.GRASS,n.FIGHTING,[[r.DOJO,6]]],[e.PALDEA_TAUROS,n.FIGHTING,-1,[[r.PLAINS,2,[N.DAWN,N.DAY]],[r.PLAINS,6,[N.DAWN,N.DAY]]]],[e.PALDEA_WOOPER,n.POISON,n.GROUND,[[r.SWAMP,0,[N.DUSK,N.NIGHT]]]],[e.BLOODMOON_URSALUNA,n.GROUND,n.NORMAL,[[r.FOREST,3,N.NIGHT],[r.FOREST,6,N.NIGHT]]]],A=[[C.ACE_TRAINER,[[r.PLAINS,1],[r.GRASS,1],[r.TALL_GRASS,1],[r.SWAMP,1],[r.BEACH,1],[r.LAKE,1],[r.MOUNTAIN,1],[r.BADLANDS,1],[r.CAVE,1],[r.MEADOW,1],[r.RUINS,1],[r.ABYSS,1],[r.FAIRY_CAVE,1],[r.TEMPLE,1]]],[C.ARTIST,[[r.METROPOLIS,2]]],[C.BACKERS,[]],[C.BACKPACKER,[[r.MOUNTAIN,0],[r.CAVE,0],[r.BADLANDS,0],[r.JUNGLE,0]]],[C.BAKER,[[r.SLUM,1]]],[C.BEAUTY,[[r.FAIRY_CAVE,0]]],[C.BIKER,[[r.SLUM,0]]],[C.BLACK_BELT,[[r.DOJO,0],[r.PLAINS,2],[r.GRASS,2],[r.SWAMP,2],[r.BEACH,2],[r.LAKE,2],[r.MOUNTAIN,0],[r.CAVE,1],[r.RUINS,1]]],[C.BREEDER,[[r.PLAINS,0],[r.GRASS,0],[r.TALL_GRASS,1],[r.METROPOLIS,1],[r.BEACH,1],[r.LAKE,0],[r.MEADOW,1],[r.FAIRY_CAVE,1]]],[C.CLERK,[[r.METROPOLIS,0]]],[C.CYCLIST,[[r.PLAINS,1],[r.METROPOLIS,0]]],[C.DANCER,[]],[C.DEPOT_AGENT,[[r.METROPOLIS,1]]],[C.DOCTOR,[]],[C.FISHERMAN,[[r.LAKE,0],[r.BEACH,0]]],[C.RICH,[]],[C.GUITARIST,[[r.METROPOLIS,1],[r.POWER_PLANT,0]]],[C.HARLEQUIN,[]],[C.HIKER,[[r.MOUNTAIN,0],[r.CAVE,0],[r.BADLANDS,0]]],[C.HOOLIGANS,[]],[C.HOOPSTER,[]],[C.INFIELDER,[]],[C.JANITOR,[]],[C.LINEBACKER,[]],[C.MAID,[]],[C.MUSICIAN,[]],[C.NURSERY_AIDE,[]],[C.OFFICER,[[r.METROPOLIS,0],[r.CONSTRUCTION_SITE,0],[r.SLUM,0]]],[C.PARASOL_LADY,[[r.BEACH,0],[r.MEADOW,0]]],[C.PILOT,[]],[C.POKEFAN,[]],[C.PRESCHOOLER,[]],[C.PSYCHIC,[[r.GRAVEYARD,0],[r.RUINS,0]]],[C.RANGER,[[r.TALL_GRASS,1],[r.FOREST,0],[r.JUNGLE,0]]],[C.RICH_KID,[]],[C.ROUGHNECK,[[r.SLUM,0]]],[C.SCIENTIST,[[r.DESERT,0],[r.RUINS,0]]],[C.SMASHER,[]],[C.SNOW_WORKER,[[r.ICE_CAVE,0],[r.SNOWY_FOREST,0]]],[C.STRIKER,[]],[C.SCHOOL_KID,[[r.GRASS,0]]],[C.SWIMMER,[[r.SEA,0]]],[C.TWINS,[[r.PLAINS,0]]],[C.VETERAN,[[r.WASTELAND,0]]],[C.WAITER,[[r.METROPOLIS,0]]],[C.WORKER,[[r.POWER_PLANT,0],[r.FACTORY,0],[r.CONSTRUCTION_SITE,0]]],[C.YOUNGSTER,[[r.TOWN,0]]],[C.HEX_MANIAC,[[r.GRAVEYARD,1]]],[C.FIREBREATHER,[[r.VOLCANO,0]]],[C.SAILOR,[[r.SEA,0],[r.BEACH,0]]],[C.BROCK,[[r.CAVE,5]]],[C.MISTY,[[r.BEACH,5]]],[C.LT_SURGE,[[r.CONSTRUCTION_SITE,5]]],[C.ERIKA,[[r.GRASS,5]]],[C.JANINE,[[r.SWAMP,5]]],[C.SABRINA,[[r.RUINS,5]]],[C.GIOVANNI,[[r.LABORATORY,5]]],[C.BLAINE,[[r.VOLCANO,5]]],[C.FALKNER,[[r.MOUNTAIN,5]]],[C.BUGSY,[[r.FOREST,5]]],[C.WHITNEY,[[r.METROPOLIS,5]]],[C.MORTY,[[r.GRAVEYARD,5]]],[C.CHUCK,[[r.CONSTRUCTION_SITE,5]]],[C.JASMINE,[[r.FACTORY,5]]],[C.PRYCE,[[r.ICE_CAVE,5]]],[C.CLAIR,[[r.WASTELAND,5]]],[C.ROXANNE,[[r.CAVE,5]]],[C.BRAWLY,[[r.DOJO,5]]],[C.WATTSON,[[r.CONSTRUCTION_SITE,5]]],[C.FLANNERY,[[r.VOLCANO,5]]],[C.NORMAN,[[r.METROPOLIS,5]]],[C.WINONA,[[r.MOUNTAIN,5]]],[C.TATE,[[r.RUINS,5]]],[C.LIZA,[[r.RUINS,5]]],[C.JUAN,[[r.SEABED,5]]],[C.ROARK,[[r.CAVE,5]]],[C.GARDENIA,[[r.TALL_GRASS,5]]],[C.CRASHER_WAKE,[[r.LAKE,5]]],[C.MAYLENE,[[r.DOJO,5]]],[C.FANTINA,[[r.TEMPLE,5]]],[C.BYRON,[[r.FACTORY,5]]],[C.CANDICE,[[r.SNOWY_FOREST,5]]],[C.VOLKNER,[[r.POWER_PLANT,5]]],[C.CILAN,[[r.PLAINS,5]]],[C.CHILI,[[r.PLAINS,5]]],[C.CRESS,[[r.PLAINS,5]]],[C.CHEREN,[[r.PLAINS,5]]],[C.LENORA,[[r.MEADOW,5]]],[C.ROXIE,[[r.SWAMP,5]]],[C.BURGH,[[r.FOREST,5]]],[C.ELESA,[[r.POWER_PLANT,5]]],[C.CLAY,[[r.BADLANDS,5]]],[C.SKYLA,[[r.MOUNTAIN,5]]],[C.BRYCEN,[[r.ICE_CAVE,5]]],[C.DRAYDEN,[[r.WASTELAND,5]]],[C.MARLON,[[r.SEA,5]]],[C.VIOLA,[[r.TALL_GRASS,5]]],[C.GRANT,[[r.BADLANDS,5]]],[C.KORRINA,[[r.DOJO,5]]],[C.RAMOS,[[r.JUNGLE,5]]],[C.CLEMONT,[[r.POWER_PLANT,5]]],[C.VALERIE,[[r.FAIRY_CAVE,5]]],[C.OLYMPIA,[[r.SPACE,5]]],[C.WULFRIC,[[r.ICE_CAVE,5]]],[C.MILO,[[r.MEADOW,5]]],[C.NESSA,[[r.ISLAND,5]]],[C.KABU,[[r.VOLCANO,5]]],[C.BEA,[[r.DOJO,5]]],[C.ALLISTER,[[r.GRAVEYARD,5]]],[C.OPAL,[[r.FAIRY_CAVE,5]]],[C.BEDE,[[r.FAIRY_CAVE,5]]],[C.GORDIE,[[r.DESERT,5]]],[C.MELONY,[[r.SNOWY_FOREST,5]]],[C.PIERS,[[r.SLUM,5]]],[C.MARNIE,[[r.ABYSS,5]]],[C.RAIHAN,[[r.WASTELAND,5]]],[C.KATY,[[r.FOREST,5]]],[C.BRASSIUS,[[r.TALL_GRASS,5]]],[C.IONO,[[r.METROPOLIS,5]]],[C.KOFU,[[r.BEACH,5]]],[C.LARRY,[[r.METROPOLIS,5]]],[C.RYME,[[r.GRAVEYARD,5]]],[C.TULIP,[[r.RUINS,5]]],[C.GRUSHA,[[r.ICE_CAVE,5]]],[C.LORELEI,[]],[C.BRUNO,[]],[C.AGATHA,[]],[C.LANCE,[]],[C.WILL,[]],[C.KOGA,[]],[C.KAREN,[]],[C.SIDNEY,[]],[C.PHOEBE,[]],[C.GLACIA,[]],[C.DRAKE,[]],[C.AARON,[]],[C.BERTHA,[]],[C.FLINT,[]],[C.LUCIAN,[]],[C.SHAUNTAL,[]],[C.MARSHAL,[]],[C.GRIMSLEY,[]],[C.CAITLIN,[]],[C.MALVA,[]],[C.SIEBOLD,[]],[C.WIKSTROM,[]],[C.DRASNA,[]],[C.HALA,[]],[C.MOLAYNE,[]],[C.OLIVIA,[]],[C.ACEROLA,[]],[C.KAHILI,[]],[C.RIKA,[]],[C.POPPY,[]],[C.LARRY_ELITE,[]],[C.HASSEL,[]],[C.CRISPIN,[]],[C.AMARYS,[]],[C.LACEY,[]],[C.DRAYTON,[]],[C.BLUE,[]],[C.RED,[]],[C.LANCE_CHAMPION,[]],[C.STEVEN,[]],[C.WALLACE,[]],[C.CYNTHIA,[]],[C.ALDER,[]],[C.IRIS,[]],[C.DIANTHA,[]],[C.HAU,[]],[C.GEETA,[]],[C.NEMONA,[]],[C.KIERAN,[]],[C.LEON,[]],[C.RIVAL,[]]];hO[r.TOWN]=[0,1];const s=T((R,I)=>{if(R===r.END){const a=Object.keys(r).filter(S=>!isNaN(Number(S)));a.pop();const L=sA(a.length,1);R=r[a[L]]}const i=Array.isArray(QO[R])?QO[R]:[QO[R]];for(const a of i){const L=Array.isArray(a)?a[0]:a,S=Array.isArray(a)?a[1]:1;(!hO.hasOwnProperty(L)||S<hO[L][1]||I<hO[L][0]&&S===hO[L][1])&&(hO[L]=[I+1,S],s(L,I+1))}},"traverseBiome");s(r.TOWN,0),hO[r.END]=[Object.values(hO).map(R=>R[0]).reduce((R,I)=>Math.max(R,I),0)+1,1];for(const R of IE(r)){SR[R]={},Ga[R]={};for(const I of IE(YA)){SR[R][I]={},Ga[R][I]=[];for(const i of IE(N))SR[R][I][i]=[]}}for(const R of E){const I=R[0],i=R[3],a=Ht.hasOwnProperty(I)?Ht[I]:[];!i.filter(L=>L[0]!==r.END).length&&!a.filter(L=>!!E.find(S=>S[0]===L.speciesId)[3].filter(S=>S[0]!==r.END).length).length&&Nb.push(I);for(const L of i){const S=L[0],o=L[1],l=L.length>2?Array.isArray(L[2])?L[2]:[L[2]]:[N.ALL];for(const D of l){if(!SR.hasOwnProperty(S)||!SR[S].hasOwnProperty(o)||!SR[S][o].hasOwnProperty(D))continue;const M=SR[S][o][D];let c=-1,G=0;for(let P=0;P<M.length;P++){const _=M[P];for(let g=0;g<_.length;g++){const H=_[g];if(Ht.hasOwnProperty(H)&&Ht[H].find(F=>F.speciesId===I)){c=P,G=g+1;break}else if(a&&a.find(F=>F.speciesId===H)){c=P,G=g;break}}if(c>-1)break}c>-1?M[c].splice(G,0,I):M.push([I])}}}for(const R of Object.keys(SR))for(const I of Object.keys(SR[R])){const i=parseInt(I);for(const a of Object.keys(SR[R][I])){const L=SR[R][I][a];for(let S=0;S<L.length;S++){const o=L[S];if(o.length===1)L[S]=o[0];else{const l={1:[o[0]]};for(let D=1;D<o.length;D++){const M=o[D],c=o.map(P=>Ht[P]).flat().find(P=>P&&P.speciesId===M),G=c.level-(c.level===1?1:0)+c.wildDelay*10-(i>=5?10:0);l.hasOwnProperty(G)?l[G].push(M):l[G]=[M]}L[S]=l}}}}for(const R of A){const I=R[0],i=R[1];for(const a of i){const L=a[0],S=a[1];if(!Ga.hasOwnProperty(L)||!Ga[L].hasOwnProperty(S))continue;Ga[L][S].push(I)}}}T(CQ,"initBiomes");const DV=class DV{constructor(A,s,R){this.eventTarget=new EventTarget,this.scene=A,this.biomeType=s,this.tags=[],this.bgm=R,this.trainerPool=Ga[s],this.updatePoolsForTimeOfDay()}init(){const A=Do(this.biomeType);this.scene.arenaPlayer.setBiome(this.biomeType),this.scene.arenaPlayerTransition.setBiome(this.biomeType),this.scene.arenaEnemy.setBiome(this.biomeType),this.scene.arenaNextEnemy.setBiome(this.biomeType),this.scene.arenaBg.setTexture(`${A}_bg`),this.scene.arenaBgTransition.setTexture(`${A}_bg`),this.updatePoolsForTimeOfDay()}updatePoolsForTimeOfDay(){const A=this.getTimeOfDay();if(A!==this.lastTimeOfDay){this.pokemonPool={};for(const s of Object.keys(SR[this.biomeType]))this.pokemonPool[s]=Object.assign([],SR[this.biomeType][s][N.ALL]).concat(SR[this.biomeType][s][A]);this.lastTimeOfDay=A}}randomSpecies(A,s,R,I,i){const a=this.scene.gameMode.getOverrideSpecies(A);if(a)return a;const L=!!this.scene.getEncounterBossSegments(A,s)&&!!this.pokemonPool[YA.BOSS].length&&(this.biomeType!==r.END||this.scene.gameMode.isClassic||this.scene.gameMode.isWaveFinal(A)),S=L?64:512;let o=0;typeof I<"u"&&(o=I*(L?.5:2));const l=le(S-o);let D=L?l>=20?YA.BOSS:l>=6?YA.BOSS_RARE:l>=1?YA.BOSS_SUPER_RARE:YA.BOSS_ULTRA_RARE:l>=156?YA.COMMON:l>=32?YA.UNCOMMON:l>=6?YA.RARE:l>=1?YA.SUPER_RARE:YA.ULTRA_RARE;for(YA[D];!this.pokemonPool[D].length;)`${YA[D]}${YA[D-1]}`,D--;const M=this.pokemonPool[D];let c,G=!1;if(!M.length)c=this.scene.randomSpecies(A,s);else{const _=M[le(M.length)];let g;if(typeof _=="number")g=_;else{const H=Object.keys(_);for(let F=H.length-1;F>=0;F--){const p=parseInt(H[F]);if(s>=p){const v=_[p];v.length>1?g=v[le(v.length)]:g=v[0];break}}}if(c=Ke(g),c.subLegendary||c.legendary||c.mythical)switch(!0){case c.baseTotal>=720:G=s<90;break;case c.baseTotal>=670:G=s<70;break;case c.baseTotal>=580:G=s<50;break;default:G=s<30;break}}if(G&&(R||0)<10)return this.randomSpecies(A,s,(R||0)+1);const P=c.getWildSpeciesForLevel(s,!0,i??L,this.scene.gameMode);return P!==c.speciesId&&(e[c.speciesId],e[P],c=Ke(P)),c}randomTrainerType(A,s=!1){const R=!!this.trainerPool[YA.BOSS].length&&(this.scene.gameMode.isTrainerBoss(A,this.biomeType,this.scene.offsetGym)||s);this.trainerPool;const I=le(R?64:512);let i=R?I>=20?YA.BOSS:I>=6?YA.BOSS_RARE:I>=1?YA.BOSS_SUPER_RARE:YA.BOSS_ULTRA_RARE:I>=156?YA.COMMON:I>=32?YA.UNCOMMON:I>=6?YA.RARE:I>=1?YA.SUPER_RARE:YA.ULTRA_RARE;for(YA[i];i&&!this.trainerPool[i].length;)`${YA[i]}${YA[i-1]}`,i--;const a=this.trainerPool[i]||[];return a.length?a[le(a.length)]:C.BREEDER}getSpeciesFormIndex(A){switch(A.speciesId){case e.BURMY:case e.WORMADAM:switch(this.biomeType){case r.BEACH:return 1;case r.SLUM:return 2}break;case e.ROTOM:switch(this.biomeType){case r.VOLCANO:return 1;case r.SEA:return 2;case r.ICE_CAVE:return 3;case r.MOUNTAIN:return 4;case r.TALL_GRASS:return 5}break;case e.LYCANROC:switch(this.getTimeOfDay()){case N.DAY:case N.DAWN:return 0;case N.DUSK:return 2;case N.NIGHT:return 1}break}return 0}getTypeForBiome(){switch(this.biomeType){case r.TOWN:case r.PLAINS:case r.METROPOLIS:return n.NORMAL;case r.GRASS:case r.TALL_GRASS:return n.GRASS;case r.FOREST:case r.JUNGLE:return n.BUG;case r.SLUM:case r.SWAMP:return n.POISON;case r.SEA:case r.BEACH:case r.LAKE:case r.SEABED:return n.WATER;case r.MOUNTAIN:return n.FLYING;case r.BADLANDS:return n.GROUND;case r.CAVE:case r.DESERT:return n.ROCK;case r.ICE_CAVE:case r.SNOWY_FOREST:return n.ICE;case r.MEADOW:case r.FAIRY_CAVE:case r.ISLAND:return n.FAIRY;case r.POWER_PLANT:return n.ELECTRIC;case r.VOLCANO:return n.FIRE;case r.GRAVEYARD:case r.TEMPLE:return n.GHOST;case r.DOJO:case r.CONSTRUCTION_SITE:return n.FIGHTING;case r.FACTORY:case r.LABORATORY:return n.STEEL;case r.RUINS:case r.SPACE:return n.PSYCHIC;case r.WASTELAND:case r.END:return n.DRAGON;case r.ABYSS:return n.DARK;default:return n.UNKNOWN}}getBgTerrainColorRatioForBiome(){switch(this.biomeType){case r.SPACE:return 1;case r.END:return 0}return 131/180}trySetWeatherOverride(A){return this.weather=new No(A,0),this.scene.unshiftPhase(new Ts(this.scene,void 0,void 0,RA.SUNNY+(A-1))),this.scene.queueMessage(wx(A)),!0}trySetWeather(A,s){var I,i,a,L;if(Ge.WEATHER_OVERRIDE)return this.trySetWeatherOverride(Ge.WEATHER_OVERRIDE);if(((I=this.weather)==null?void 0:I.weatherType)===(A||void 0))return!1;const R=((i=this.weather)==null?void 0:i.weatherType)||Q.NONE;return this.weather=A?new No(A,s?5:0):null,this.eventTarget.dispatchEvent(new uI(R,(a=this.weather)==null?void 0:a.weatherType,(L=this.weather)==null?void 0:L.turnsLeft)),this.weather?(this.scene.unshiftPhase(new Ts(this.scene,void 0,void 0,RA.SUNNY+(A-1),!0)),this.scene.queueMessage(wx(A))):this.scene.queueMessage(NQ(R)),this.scene.getField(!0).filter(S=>S.isOnField()).map(S=>{S.findAndRemoveTags(o=>"weatherTypes"in o&&!o.weatherTypes.find(l=>l===A)),wX(bS,S,A)}),!0}triggerWeatherBasedFormChanges(){this.scene.getField(!0).forEach(A=>{const s=A.hasAbility(O.FORECAST)&&A.species.speciesId===e.CASTFORM,R=A.hasAbility(O.FLOWER_GIFT)&&A.species.speciesId===e.CHERRIM;(s||R)&&(new mn(this.scene,A.getBattlerIndex()),this.scene.triggerPokemonFormChange(A,oR))})}triggerWeatherBasedFormChangesToNormal(){this.scene.getField(!0).forEach(A=>{const s=A.hasAbility(O.FORECAST,!1,!0)&&A.species.speciesId===e.CASTFORM,R=A.hasAbility(O.FLOWER_GIFT,!1,!0)&&A.species.speciesId===e.CHERRIM;if(s||R)return new mn(this.scene,A.getBattlerIndex()),this.scene.triggerPokemonFormChange(A,Pn)})}trySetTerrain(A,s,R=!1){var i,a,L,S;if(((i=this.terrain)==null?void 0:i.terrainType)===(A||void 0))return!1;const I=((a=this.terrain)==null?void 0:a.terrainType)||Rt.NONE;return this.terrain=A?new TC(A,s?5:0):null,this.eventTarget.dispatchEvent(new XT(I,(L=this.terrain)==null?void 0:L.terrainType,(S=this.terrain)==null?void 0:S.turnsLeft)),this.terrain?(R||this.scene.unshiftPhase(new Ts(this.scene,void 0,void 0,RA.MISTY_TERRAIN+(A-1))),this.scene.queueMessage(TQ(A))):this.scene.queueMessage(SQ(I)),this.scene.getField(!0).filter(o=>o.isOnField()).map(o=>{o.findAndRemoveTags(l=>"terrainTypes"in l&&!l.terrainTypes.find(D=>D===A)),vX(UU,o,A)}),!0}isMoveWeatherCancelled(A,s){return!!this.weather&&!this.weather.isEffectSuppressed(this.scene)&&this.weather.isMoveWeatherCancelled(A,s)}isMoveTerrainCancelled(A,s,R){return!!this.terrain&&this.terrain.isMoveTerrainCancelled(A,s,R)}getTerrainType(){var A;return((A=this.terrain)==null?void 0:A.terrainType)??Rt.NONE}getAttackTypeMultiplier(A,s){let R=1;this.weather&&!this.weather.isEffectSuppressed(this.scene)&&(R=this.weather.getAttackTypeMultiplier(A));let I=1;return this.terrain&&s&&(I=this.terrain.getAttackTypeMultiplier(A)),R*I}getTrainerChance(){switch(this.biomeType){case r.METROPOLIS:return 2;case r.SLUM:case r.BEACH:case r.DOJO:case r.CONSTRUCTION_SITE:return 4;case r.PLAINS:case r.GRASS:case r.LAKE:case r.CAVE:return 6;case r.TALL_GRASS:case r.FOREST:case r.SEA:case r.SWAMP:case r.MOUNTAIN:case r.BADLANDS:case r.DESERT:case r.MEADOW:case r.POWER_PLANT:case r.GRAVEYARD:case r.FACTORY:case r.SNOWY_FOREST:return 8;case r.ICE_CAVE:case r.VOLCANO:case r.RUINS:case r.WASTELAND:case r.JUNGLE:case r.FAIRY_CAVE:return 12;case r.SEABED:case r.ABYSS:case r.SPACE:case r.TEMPLE:return 16;default:return 0}}getTimeOfDay(){var s;switch(this.biomeType){case r.ABYSS:return N.NIGHT}const A=((((s=this.scene.currentBattle)==null?void 0:s.waveIndex)||0)+this.scene.waveCycleOffset)%40;return A<15?N.DAY:A<20?N.DUSK:A<35?N.NIGHT:N.DAWN}isOutside(){switch(this.biomeType){case r.SEABED:case r.CAVE:case r.ICE_CAVE:case r.POWER_PLANT:case r.DOJO:case r.FACTORY:case r.ABYSS:case r.FAIRY_CAVE:case r.TEMPLE:case r.LABORATORY:return!1;default:return!0}}overrideTint(){switch(Ge.ARENA_TINT_OVERRIDE){case N.DUSK:return[98,48,73].map(A=>Math.round((A+128)/2));case N.NIGHT:return[64,64,64];case N.DAWN:case N.DAY:default:return[128,128,128]}}getDayTint(){if(Ge.ARENA_TINT_OVERRIDE!==null)return this.overrideTint();switch(this.biomeType){case r.ABYSS:return[64,64,64];default:return[128,128,128]}}getDuskTint(){if(Ge.ARENA_TINT_OVERRIDE)return this.overrideTint();if(!this.isOutside())return[0,0,0];switch(this.biomeType){default:return[98,48,73].map(A=>Math.round((A+128)/2))}}getNightTint(){if(Ge.ARENA_TINT_OVERRIDE)return this.overrideTint();switch(this.biomeType){case r.ABYSS:case r.SPACE:case r.END:return this.getDayTint()}if(!this.isOutside())return[64,64,64];switch(this.biomeType){default:return[48,48,98]}}setIgnoreAbilities(A,s=null){this.ignoreAbilities=A,this.ignoringEffectSource=A?s:null}applyTagsForSide(A,s,R,...I){let i=typeof A=="string"?this.tags.filter(a=>a.tagType===A):this.tags.filter(a=>a instanceof A);s!==et.BOTH&&(i=i.filter(a=>a.side===s)),i.forEach(a=>a.apply(this,R,...I))}applyTags(A,s,...R){this.applyTagsForSide(A,et.BOTH,s,...R)}addTag(A,s,R,I,i=et.BOTH,a=!1,L){const S=this.getTagOnSide(A,i);if(S){if(S.onOverlap(this),S instanceof kR){const{tagType:l,side:D,turnCount:M,layers:c,maxLayers:G}=S;this.eventTarget.dispatchEvent(new bi(l,D,M,c,G))}return!1}const o=R6(A,s||0,R,I,L,i);if(o){this.tags.push(o),o.onAdd(this,a);const{layers:l=0,maxLayers:D=0}=o instanceof kR?o:{};this.eventTarget.dispatchEvent(new bi(o.tagType,o.side,o.turnCount,l,D))}return!0}getTag(A){return this.getTagOnSide(A,et.BOTH)}hasTag(A){return!!this.getTag(A)}getTagOnSide(A,s){return typeof A=="string"?this.tags.find(R=>R.tagType===A&&(s===et.BOTH||R.side===et.BOTH||R.side===s)):this.tags.find(R=>R instanceof A&&(s===et.BOTH||R.side===et.BOTH||R.side===s))}findTags(A){return this.findTagsOnSide(A,et.BOTH)}findTagsOnSide(A,s){return this.tags.filter(R=>A(R)&&(s===et.BOTH||R.side===et.BOTH||R.side===s))}lapseTags(){this.tags.filter(A=>!A.lapse(this)).forEach(A=>{A.onRemove(this),this.tags.splice(this.tags.indexOf(A),1),this.eventTarget.dispatchEvent(new Li(A.tagType,A.side,A.turnCount))})}removeTag(A){const s=this.tags,R=s.find(I=>I.tagType===A);return R&&(R.onRemove(this),s.splice(s.indexOf(R),1),this.eventTarget.dispatchEvent(new Li(R.tagType,R.side,R.turnCount))),!!R}removeTagOnSide(A,s,R=!1){const I=this.getTagOnSide(A,s);return I&&(I.onRemove(this,R),this.tags.splice(this.tags.indexOf(I),1),this.eventTarget.dispatchEvent(new Li(I.tagType,I.side,I.turnCount))),!!I}removeAllTags(){for(;this.tags.length;)this.tags[0].onRemove(this),this.eventTarget.dispatchEvent(new Li(this.tags[0].tagType,this.tags[0].side,this.tags[0].turnCount)),this.tags.splice(0,1)}resetArenaEffects(){var A;((A=this.weather)==null?void 0:A.turnsLeft)!==0&&this.trySetWeather(Q.NONE,!1),this.trySetTerrain(Rt.NONE,!1,!0),this.removeAllTags()}preloadBgm(){this.scene.loadBgm(this.bgm)}getBgmLoopPoint(){switch(this.biomeType){case r.TOWN:return 7.288;case r.PLAINS:return 17.485;case r.GRASS:return 1.995;case r.TALL_GRASS:return 9.608;case r.METROPOLIS:return 141.47;case r.FOREST:return 4.294;case r.SEA:return .024;case r.SWAMP:return 4.461;case r.BEACH:return 3.462;case r.LAKE:return 7.215;case r.SEABED:return 2.6;case r.MOUNTAIN:return 4.018;case r.BADLANDS:return 17.79;case r.CAVE:return 14.24;case r.DESERT:return 1.143;case r.ICE_CAVE:return 0;case r.MEADOW:return 3.891;case r.POWER_PLANT:return 9.447;case r.VOLCANO:return 17.637;case r.GRAVEYARD:return 3.232;case r.DOJO:return 6.205;case r.FACTORY:return 4.985;case r.RUINS:return 0;case r.WASTELAND:return 6.336;case r.ABYSS:return 5.13;case r.SPACE:return 20.036;case r.CONSTRUCTION_SITE:return 1.222;case r.JUNGLE:return 0;case r.FAIRY_CAVE:return 4.542;case r.TEMPLE:return 2.547;case r.ISLAND:return 2.751;case r.LABORATORY:return 114.862;case r.SLUM:return 0;case r.SNOWY_FOREST:return 3.047;default:return console.warn(`missing bgm loop-point for biome "${r[this.biomeType]}" (=${this.biomeType})`),0}}};T(DV,"Arena");let zD=DV;function Do(E){return r[E].toLowerCase()}T(Do,"getBiomeKey");function Tb(E){switch(E){case r.METROPOLIS:case r.BEACH:case r.LAKE:case r.SEABED:case r.MOUNTAIN:case r.BADLANDS:case r.CAVE:case r.DESERT:case r.ICE_CAVE:case r.MEADOW:case r.POWER_PLANT:case r.VOLCANO:case r.GRAVEYARD:case r.FACTORY:case r.RUINS:case r.WASTELAND:case r.ABYSS:case r.CONSTRUCTION_SITE:case r.JUNGLE:case r.FAIRY_CAVE:case r.TEMPLE:case r.SNOWY_FOREST:case r.ISLAND:case r.LABORATORY:case r.END:return!0}return!1}T(Tb,"getBiomeHasProps");const MV=class MV extends Phaser.GameObjects.Container{constructor(A,s){super(A,0,0),this.player=s,this.base=A.addFieldSprite(0,0,"plains_a",void 0,1),this.base.setOrigin(0,0),this.props=s?[]:new Array(3).fill(null).map(()=>{const R=A.addFieldSprite(0,0,"plains_b",void 0,1);return R.setOrigin(0,0),R.setVisible(!1),R})}setBiome(A,s){var a;const R=Tb(A),I=Do(A),i=`${I}_${this.player?"a":"b"}`;if(A!==this.biome){if(this.base.setTexture(i),this.base.texture.frameTotal>1){const L=this.scene.anims.generateFrameNames(i,{zeroPad:4,suffix:".png",start:1,end:this.base.texture.frameTotal-1});this.scene.anims.exists(i)||this.scene.anims.create({key:i,frames:L,frameRate:12,repeat:-1}),this.base.play(i)}else this.base.stop();this.add(this.base)}this.player||this.scene.executeWithSeedOffset(()=>{this.propValue=s===void 0?R?le(8):0:s,this.props.forEach((L,S)=>{const o=`${I}_b${R?`_${S+1}`:""}`;if(L.setTexture(o),R&&L.texture.frameTotal>1){const l=this.scene.anims.generateFrameNames(o,{zeroPad:4,suffix:".png",start:1,end:L.texture.frameTotal-1});this.scene.anims.exists(o)||this.scene.anims.create({key:o,frames:l,frameRate:12,repeat:-1}),L.play(o)}else L.stop();L.setVisible(R&&!!(this.propValue&1<<S)),this.add(L)})},((a=this.scene.currentBattle)==null?void 0:a.waveIndex)||0,this.scene.waveSeed)}};T(MV,"ArenaBase");let wa=MV,bo;const uV=class uV extends Phaser.Loader.LoaderPlugin{constructor(A){super(A)}get manifest(){return bo}set manifest(A){bo=A}addFile(A){Array.isArray(A)||(A=[A]),A.forEach(s=>{if(bo){const R=bo[`/${s.url.replace(/\/\//g,"/")}`];R&&(s.url+=`?t=${R}`)}}),super.addFile(A)}};T(uV,"CacheBustedLoaderPlugin");let r1=uV;const Ii=class Ii extends sl{constructor(){super(Ii.KEY),this.LOAD_EVENTS=Phaser.Loader.Events,Phaser.Plugins.PluginCache.register("Loader",r1,"load")}preload(){Qb(),this.load.manifest=this.game.manifest,this.loadImage("loading_bg","arenas"),this.loadImage("logo",""),this.loadAtlas("bg","ui"),this.loadAtlas("prompt","ui"),this.loadImage("candy","ui"),this.loadImage("candy_overlay","ui"),this.loadImage("friendship","ui"),this.loadImage("friendship_overlay","ui"),this.loadImage("cursor","ui"),this.loadImage("cursor_reverse","ui");for(const R of IE(vR))for(let I=1;I<=5;I++)this.loadImage(`window_${I}${Nr(R)}`,"ui/windows");this.loadAtlas("namebox","ui"),this.loadImage("pbinfo_player","ui"),this.loadImage("pbinfo_player_stats","ui"),this.loadImage("pbinfo_player_mini","ui"),this.loadImage("pbinfo_player_mini_stats","ui"),this.loadAtlas("pbinfo_player_type","ui"),this.loadAtlas("pbinfo_player_type1","ui"),this.loadAtlas("pbinfo_player_type2","ui"),this.loadImage("pbinfo_enemy_mini","ui"),this.loadImage("pbinfo_enemy_mini_stats","ui"),this.loadImage("pbinfo_enemy_boss","ui"),this.loadImage("pbinfo_enemy_boss_stats","ui"),this.loadAtlas("pbinfo_enemy_type","ui"),this.loadAtlas("pbinfo_enemy_type1","ui"),this.loadAtlas("pbinfo_enemy_type2","ui"),this.loadAtlas("pbinfo_stat","ui"),this.loadAtlas("pbinfo_stat_numbers","ui"),this.loadImage("overlay_lv","ui"),this.loadAtlas("numbers","ui"),this.loadAtlas("numbers_red","ui"),this.loadAtlas("overlay_hp","ui"),this.loadAtlas("overlay_hp_boss","ui"),this.loadImage("overlay_exp","ui"),this.loadImage("icon_owned","ui"),this.loadImage("icon_egg_move","ui"),this.loadImage("ability_bar_left","ui"),this.loadImage("bgm_bar","ui"),this.loadImage("party_exp_bar","ui"),this.loadImage("achv_bar","ui"),this.loadImage("achv_bar_2","ui"),this.loadImage("achv_bar_3","ui"),this.loadImage("achv_bar_4","ui"),this.loadImage("achv_bar_5","ui"),this.loadImage("shiny_star","ui","shiny.png"),this.loadImage("shiny_star_1","ui","shiny_1.png"),this.loadImage("shiny_star_2","ui","shiny_2.png"),this.loadImage("shiny_star_small","ui","shiny_small.png"),this.loadImage("shiny_star_small_1","ui","shiny_small_1.png"),this.loadImage("shiny_star_small_2","ui","shiny_small_2.png"),this.loadImage("favorite","ui","favorite.png"),this.loadImage("passive_bg","ui","passive_bg.png"),this.loadAtlas("shiny_icons","ui"),this.loadImage("ha_capsule","ui","ha_capsule.png"),this.loadImage("champion_ribbon","ui","champion_ribbon.png"),this.loadImage("icon_spliced","ui"),this.loadImage("icon_lock","ui","icon_lock.png"),this.loadImage("icon_stop","ui","icon_stop.png"),this.loadImage("icon_tera","ui"),this.loadImage("type_tera","ui"),this.loadAtlas("type_bgs","ui"),this.loadImage("dawn_icon_fg","ui"),this.loadImage("dawn_icon_mg","ui"),this.loadImage("dawn_icon_bg","ui"),this.loadImage("day_icon_fg","ui"),this.loadImage("day_icon_mg","ui"),this.loadImage("day_icon_bg","ui"),this.loadImage("dusk_icon_fg","ui"),this.loadImage("dusk_icon_mg","ui"),this.loadImage("dusk_icon_bg","ui"),this.loadImage("night_icon_fg","ui"),this.loadImage("night_icon_mg","ui"),this.loadImage("night_icon_bg","ui"),this.loadImage("pb_tray_overlay_player","ui"),this.loadImage("pb_tray_overlay_enemy","ui"),this.loadAtlas("pb_tray_ball","ui"),this.loadImage("party_bg","ui"),this.loadImage("party_bg_double","ui"),this.loadAtlas("party_slot_main","ui"),this.loadAtlas("party_slot","ui"),this.loadImage("party_slot_overlay_lv","ui"),this.loadImage("party_slot_hp_bar","ui"),this.loadAtlas("party_slot_hp_overlay","ui"),this.loadAtlas("party_pb","ui"),this.loadAtlas("party_cancel","ui"),this.loadImage("summary_bg","ui"),this.loadImage("summary_overlay_shiny","ui"),this.loadImage("summary_profile","ui"),this.loadImage("summary_profile_prompt_z","ui"),this.loadImage("summary_profile_prompt_a","ui"),this.loadImage("summary_profile_ability","ui"),this.loadImage("summary_profile_passive","ui"),this.loadImage("summary_status","ui"),this.loadImage("summary_stats","ui"),this.loadImage("summary_stats_overlay_exp","ui"),this.loadImage("summary_moves","ui"),this.loadImage("summary_moves_effect","ui"),this.loadImage("summary_moves_overlay_row","ui"),this.loadImage("summary_moves_overlay_pp","ui"),this.loadAtlas("summary_moves_cursor","ui");for(let R=1;R<=3;R++)this.loadImage(`summary_tabs_${R}`,"ui");this.loadImage("scroll_bar","ui"),this.loadImage("scroll_bar_handle","ui"),this.loadImage("starter_container_bg","ui"),this.loadImage("starter_select_bg","ui"),this.loadImage("select_cursor","ui"),this.loadImage("select_cursor_highlight","ui"),this.loadImage("select_cursor_highlight_thick","ui"),this.loadImage("select_cursor_pokerus","ui"),this.loadImage("select_gen_cursor","ui"),this.loadImage("select_gen_cursor_highlight","ui"),this.loadImage("saving_icon","ui"),this.loadImage("discord","ui"),this.loadImage("google","ui"),this.loadImage("settings_icon","ui"),this.loadImage("link_icon","ui"),this.loadImage("unlink_icon","ui"),this.loadImage("default_bg","arenas"),IE(r).map(R=>{const I=r[R].toLowerCase(),i=I==="end",a=`${I}_a`,L=`${I}_b`;if(this.loadImage(`${I}_bg`,"arenas"),i?this.loadAtlas(a,"arenas"):this.loadImage(a,"arenas"),i?this.loadAtlas(L,"arenas"):this.loadImage(L,"arenas"),Tb(R))for(let S=1;S<=3;S++){const o=S===3&&["power_plant","end"].find(D=>D===I),l=`${I}_b_${S}`;o?this.loadAtlas(l,"arenas"):this.loadImage(l,"arenas")}}),this.load.bitmapFont("item-count","fonts/item-count.png","fonts/item-count.xml"),this.loadAtlas("trainer_m_back","trainer"),this.loadAtlas("trainer_m_back_pb","trainer"),this.loadAtlas("trainer_f_back","trainer"),this.loadAtlas("trainer_f_back_pb","trainer"),this.loadAtlas("c_rival_m","character","rival_m"),this.loadAtlas("c_rival_f","character","rival_f"),this.loadImage("pkmn__back__sub","pokemon/back","sub.png"),this.loadImage("pkmn__sub","pokemon","sub.png"),this.loadAtlas("battle_stats","effects"),this.loadAtlas("shiny","effects"),this.loadAtlas("shiny_2","effects"),this.loadAtlas("shiny_3","effects"),this.loadImage("tera","effects"),this.loadAtlas("pb_particles","effects"),this.loadImage("evo_sparkle","effects"),this.loadAtlas("tera_sparkle","effects"),this.load.video("evo_bg","images/effects/evo_bg.mp4",!0),this.loadAtlas("pb",""),this.loadAtlas("items",""),this.loadAtlas("types","");const A=U.resolvedLanguage;A!=="en"?Jb(A)?(this.loadAtlas(`statuses_${A}`,""),this.loadAtlas(`types_${A}`,"")):(this.loadAtlas("statuses",""),this.loadAtlas("types","")):(this.loadAtlas("statuses",""),this.loadAtlas("types","")),A&&["en","de","it","fr","ja","ko","es","pt-BR","zh-CN"].includes(A)?this.loadImage("halloween2024-event-"+A,"events"):this.loadImage("halloween2024-event-en","events"),this.loadAtlas("statuses",""),this.loadAtlas("categories",""),this.loadAtlas("egg","egg"),this.loadAtlas("egg_crack","egg"),this.loadAtlas("egg_icons","egg"),this.loadAtlas("egg_shard","egg"),this.loadAtlas("egg_lightrays","egg"),tO(Un).forEach(R=>{const I=R.toLowerCase();this.loadImage(`gacha_${I}`,"egg"),this.loadAtlas(`gacha_underlay_${I}`,"egg")}),this.loadImage("gacha_glass","egg"),this.loadImage("gacha_eggs","egg"),this.loadAtlas("gacha_hatch","egg"),this.loadImage("gacha_knob","egg"),this.loadImage("egg_list_bg","ui"),this.loadImage("egg_summary_bg","ui"),this.loadImage("end_m","cg"),this.loadImage("end_f","cg");for(let R=0;R<10;R++)this.loadAtlas(`pokemon_icons_${R}`,""),R&&this.loadAtlas(`pokemon_icons_${R}v`,"");this.loadImage("encounter_radar","mystery-encounters"),this.loadAtlas("dualshock","inputs"),this.loadAtlas("xbox","inputs"),this.loadAtlas("keyboard","inputs"),this.loadSe("select","ui"),this.loadSe("menu_open","ui"),this.loadSe("error","ui"),this.loadSe("hit"),this.loadSe("hit_strong"),this.loadSe("hit_weak"),this.loadSe("stat_up"),this.loadSe("stat_down"),this.loadSe("faint"),this.loadSe("flee"),this.loadSe("low_hp"),this.loadSe("exp"),this.loadSe("level_up"),this.loadSe("sparkle"),this.loadSe("restore"),this.loadSe("shine"),this.loadSe("shing"),this.loadSe("charge"),this.loadSe("beam"),this.loadSe("upgrade"),this.loadSe("buy"),this.loadSe("achv"),this.loadSe("pb_rel"),this.loadSe("pb_throw"),this.loadSe("pb_bounce_1"),this.loadSe("pb_bounce_2"),this.loadSe("pb_move"),this.loadSe("pb_catch"),this.loadSe("pb_lock"),this.loadSe("pb_tray_enter"),this.loadSe("pb_tray_ball"),this.loadSe("pb_tray_empty"),this.loadSe("egg_crack"),this.loadSe("egg_hatch"),this.loadSe("gacha_dial"),this.loadSe("gacha_running"),this.loadSe("gacha_dispense"),this.loadSe("PRSFX- Transform","battle_anims"),this.loadBgm("menu"),this.loadBgm("level_up_fanfare","bw/level_up_fanfare.mp3"),this.loadBgm("item_fanfare","bw/item_fanfare.mp3"),this.loadBgm("minor_fanfare","bw/minor_fanfare.mp3"),this.loadBgm("heal","bw/heal.mp3"),this.loadBgm("victory_trainer","bw/victory_trainer.mp3"),this.loadBgm("victory_team_plasma","bw/victory_team_plasma.mp3"),this.loadBgm("victory_gym","bw/victory_gym.mp3"),this.loadBgm("victory_champion","bw/victory_champion.mp3"),this.loadBgm("evolution","bw/evolution.mp3"),this.loadBgm("evolution_fanfare","bw/evolution_fanfare.mp3"),this.load.plugin("rextexteditplugin","https://raw.githubusercontent.com/rexrainbow/phaser3-rex-notes/master/dist/rextexteditplugin.min.js",!0),this.loadLoadingScreen(),GX(),Z8(),h9(),lQ(),CQ(),H8(),g8(),_8(),aQ(),kX(),cX(),jZ()}loadLoadingScreen(){const A=xx(),s=[],R=this.add.image(0,0,"");R.setOrigin(0,0),R.setScale(6),R.setVisible(!1);const I=this.add.graphics();I.lineStyle(4,16711935,1).setDepth(10);const i=this.add.graphics(),a=this.add.graphics();a.lineStyle(5,16711935,1),a.fillStyle(2236962,.8);const L=this.cameras.main.width,S=this.cameras.main.height,o=L/2,l=S/2,D=this.add.image(o,240,"");D.setVisible(!1),D.setOrigin(.5,.5),D.setScale(4);const M=this.make.text({x:o,y:l-24,text:"0%",style:{font:"72px emerald",color:"#ffffff"}});M.setOrigin(.5,.5);const c=this.make.text({x:o,y:l+48,text:"",style:{font:"48px emerald",color:"#ffffff"}});c.setOrigin(.5,.5);const G=this.make.text({x:o,y:c.y+152,text:U.t("menu:disclaimer"),style:{font:"72px emerald",color:"#DA3838"}});G.setOrigin(.5,.5);const P=this.make.text({x:o,y:G.y+120,text:U.t("menu:disclaimerDescription"),style:{font:"48px emerald",color:"#ffffff",align:"center"}});P.setOrigin(.5,.5),s.push(R,I,i,a,D,M,c,G,P),A||s.map(g=>g.setVisible(!1));const _=this.add.video(0,0);_.once(Phaser.GameObjects.Events.VIDEO_COMPLETE,g=>{this.tweens.add({targets:_,duration:500,alpha:0,ease:"Sine.easeIn",onComplete:T(()=>g.destroy(),"onComplete")}),s.forEach(H=>H.setVisible(!0))}),_.setOrigin(0,0),_.setScale(3),this.load.once(this.LOAD_EVENTS.START,()=>{var g,H;_.loadURL("images/intro_dark.mp4",!0),A&&((g=_.video)==null||g.setAttribute("webkit-playsinline","webkit-playsinline"),(H=_.video)==null||H.setAttribute("playsinline","playsinline")),_.play()}),this.load.on(this.LOAD_EVENTS.PROGRESS,g=>{M.setText(`${Math.floor(g*100)}%`),i.clear(),i.fillStyle(16777215,.8),i.fillRect(o-320,360,640*g,64)}),this.load.on(this.LOAD_EVENTS.FILE_COMPLETE,g=>{switch(c.setText(U.t("menu:loadingAsset",{assetName:g})),g){case"loading_bg":R.setTexture("loading_bg"),A&&R.setVisible(!0);break;case"logo":D.setTexture("logo"),A&&D.setVisible(!0);break}}),this.load.on(this.LOAD_EVENTS.COMPLETE,()=>{s.forEach(g=>g.destroy()),_.destroy()})}get gameHeight(){return this.game.config.height}get gameWidth(){return this.game.config.width}async create(){this.events.once(Phaser.Scenes.Events.DESTROY,()=>this.handleDestroy()),this.scene.start("battle")}handleDestroy(){console.debug(`Destroying ${Ii.KEY} scene`),this.load.off(this.LOAD_EVENTS.PROGRESS),this.load.off(this.LOAD_EVENTS.FILE_COMPLETE),this.load.off(this.LOAD_EVENTS.COMPLETE),this.children.removeAll(!0),console.debug(`Destroyed ${Ii.KEY} scene`)}};T(Ii,"LoadingScene"),Ii.KEY="loading";let eM=Ii;const uQ=Object.freeze(Object.defineProperty({__proto__:null,LoadingScene:eM},Symbol.toStringTag,{value:"Module"}));export{MQ as b,uQ as l};
